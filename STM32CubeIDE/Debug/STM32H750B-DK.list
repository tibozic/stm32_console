
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00028e70  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000038c8  90029110  90029110  00049110  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000108  9002c9d8  9002c9d8  0004c9d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002cae0  9002cae0  00252528  2**0
                  CONTENTS
  6 .ARM          00000000  9002cae0  9002cae0  00252528  2**0
                  CONTENTS
  7 .preinit_array 00000000  9002cae0  9002cae0  00252528  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   0000001c  9002cae0  9002cae0  0004cae0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   0000000c  9002cafc  9002cafc  0004cafc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000160  24000000  9002cb08  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 CCMRAM        00005a00  24000160  9002cc68  00050160  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00034978  24005b60  90032668  00055b60  2**3
                  ALLOC
 13 ._user_heap_stack 00002000  2403a4d8  90032668  0005a4d8  2**0
                  ALLOC
 14 .ARM.attributes 0000002e  00000000  00000000  00252528  2**0
                  CONTENTS, READONLY
 15 FontFlashSection 000021e8  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 000000b0  902021e8  902021e8  000621e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 ExtFlashSection 001f0290  90202298  90202298  00062298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00260000  2**2
                  ALLOC
 19 Video_RGB_Buffer 00043800  d00bf400  d00bf400  00260000  2**2
                  ALLOC
 20 .comment      000000c2  00000000  00000000  00252556  2**0
                  CONTENTS, READONLY
 21 .debug_line   0007b86b  00000000  00000000  00252618  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005c  00000000  00000000  002cde83  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_info   001172f7  00000000  00000000  002cdedf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_abbrev 0001a0f8  00000000  00000000  003e51d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_aranges 00003670  00000000  00000000  003ff2d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_str    001a1dfd  00000000  00000000  00402940  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_rnglists 00008ec9  00000000  00000000  005a473d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_macro  0004940b  00000000  00000000  005ad606  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_frame  0000ad90  00000000  00000000  005f6a14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 0003b356  00000000  00000000  006017a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005b60 	.word	0x24005b60
900002bc:	00000000 	.word	0x00000000
900002c0:	900290f8 	.word	0x900290f8

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005b64 	.word	0x24005b64
900002dc:	900290f8 	.word	0x900290f8

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 900003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000386:	e003      	b.n	90000390 <LoopCopyDataInit>

90000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000388:	4b0c      	ldr	r3, [pc, #48]	; (900003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9000038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9000038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000038e:	3104      	adds	r1, #4

90000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000390:	480b      	ldr	r0, [pc, #44]	; (900003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000392:	4b0c      	ldr	r3, [pc, #48]	; (900003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000398:	d3f6      	bcc.n	90000388 <CopyDataInit>
  ldr  r2, =_sbss
9000039a:	4a0b      	ldr	r2, [pc, #44]	; (900003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9000039c:	e002      	b.n	900003a4 <LoopFillZerobss>

9000039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
900003a0:	f842 3b04 	str.w	r3, [r2], #4

900003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900003a4:	4b09      	ldr	r3, [pc, #36]	; (900003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
900003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
900003a8:	d3f9      	bcc.n	9000039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900003aa:	f008 ff73 	bl	90009294 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900003ae:	f028 f9b1 	bl	90028714 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900003b2:	f002 fb55 	bl	90002a60 <main>
  bx  lr    
900003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900003bc:	9002cb08 	.word	0x9002cb08
  ldr  r0, =_sdata
900003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900003c4:	24000160 	.word	0x24000160
  ldr  r2, =_sbss
900003c8:	24005b60 	.word	0x24005b60
  ldr  r3, = _ebss
900003cc:	2403a4d8 	.word	0x2403a4d8

900003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900003d0:	e7fe      	b.n	900003d0 <ADC3_IRQHandler>
	...

900003d4 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900003d4:	4770      	bx	lr
900003d6:	bf00      	nop

900003d8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900003d8:	4770      	bx	lr
900003da:	bf00      	nop

900003dc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900003dc:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
900003de:	f001 fed3 	bl	90002188 <touchgfx_components_init>
  touchgfx_init();
}
900003e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
900003e6:	f001 be53 	b.w	90002090 <touchgfx_init>
900003ea:	bf00      	nop

900003ec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
900003ec:	f001 bece 	b.w	9000218c <touchgfx_taskEntry>

900003f0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900003f0:	6840      	ldr	r0, [r0, #4]
    }
900003f2:	4770      	bx	lr

900003f4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900003f4:	6041      	str	r1, [r0, #4]
    }
900003f6:	4770      	bx	lr

900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900003f8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900003fc:	4b08      	ldr	r3, [pc, #32]	; (90000420 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900003fe:	4a09      	ldr	r2, [pc, #36]	; (90000424 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000400:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000404:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000408:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
9000040c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000410:	430a      	orrs	r2, r1
90000412:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000416:	681a      	ldr	r2, [r3, #0]
90000418:	f042 0201 	orr.w	r2, r2, #1
9000041c:	601a      	str	r2, [r3, #0]
}
9000041e:	4770      	bx	lr
90000420:	e0001000 	.word	0xe0001000
90000424:	c5acce55 	.word	0xc5acce55

90000428 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000428:	1a51      	subs	r1, r2, r1
9000042a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
9000042e:	fbb1 f0f3 	udiv	r0, r1, r3
90000432:	4770      	bx	lr

90000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000434:	4b01      	ldr	r3, [pc, #4]	; (9000043c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000436:	6858      	ldr	r0, [r3, #4]
}
90000438:	4770      	bx	lr
9000043a:	bf00      	nop
9000043c:	e0001000 	.word	0xe0001000

90000440 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000440:	4770      	bx	lr
90000442:	bf00      	nop

90000444 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000444:	b510      	push	{r4, lr}
90000446:	4604      	mov	r4, r0
90000448:	210c      	movs	r1, #12
9000044a:	f027 fdf3 	bl	90028034 <_ZdlPvj>
9000044e:	4620      	mov	r0, r4
90000450:	bd10      	pop	{r4, pc}
90000452:	bf00      	nop

90000454 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000454:	6803      	ldr	r3, [r0, #0]
90000456:	4a0c      	ldr	r2, [pc, #48]	; (90000488 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000458:	691b      	ldr	r3, [r3, #16]
{
9000045a:	b510      	push	{r4, lr}
9000045c:	4604      	mov	r4, r0
    if (active) //idle task sched out
9000045e:	b149      	cbz	r1, 90000474 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000460:	4293      	cmp	r3, r2
90000462:	d10d      	bne.n	90000480 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000464:	4b09      	ldr	r3, [pc, #36]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000466:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000468:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
9000046a:	6863      	ldr	r3, [r4, #4]
9000046c:	1a9b      	subs	r3, r3, r2
9000046e:	4403      	add	r3, r0
90000470:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000472:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000474:	4293      	cmp	r3, r2
90000476:	d105      	bne.n	90000484 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000478:	4b04      	ldr	r3, [pc, #16]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000047a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
9000047c:	60a0      	str	r0, [r4, #8]
}
9000047e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000480:	4798      	blx	r3
90000482:	e7f1      	b.n	90000468 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000484:	4798      	blx	r3
90000486:	e7f9      	b.n	9000047c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000488:	90000435 	.word	0x90000435
9000048c:	e0001000 	.word	0xe0001000

90000490 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000490:	4770      	bx	lr
90000492:	bf00      	nop
90000494:	0000      	movs	r0, r0
	...

90000498 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000498:	b500      	push	{lr}
9000049a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
9000049c:	2208      	movs	r2, #8
9000049e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900004a0:	2000      	movs	r0, #0
900004a2:	4669      	mov	r1, sp
    hTS.Width = 480;
900004a4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900004c0 <_ZN20STM32TouchController4initEv+0x28>
900004a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
900004ac:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900004b0:	f008 fdfe 	bl	900090b0 <BSP_TS_Init>
}
900004b4:	b005      	add	sp, #20
900004b6:	f85d fb04 	ldr.w	pc, [sp], #4
900004ba:	bf00      	nop
900004bc:	f3af 8000 	nop.w
900004c0:	000001e0 	.word	0x000001e0
900004c4:	00000110 	.word	0x00000110

900004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
900004c8:	b530      	push	{r4, r5, lr}
900004ca:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
900004cc:	2000      	movs	r0, #0
{
900004ce:	460d      	mov	r5, r1
900004d0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
900004d2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
900004d4:	9001      	str	r0, [sp, #4]
900004d6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
900004da:	f008 fe77 	bl	900091cc <BSP_TS_GetState>
    if (TS_State.TouchDetected)
900004de:	9801      	ldr	r0, [sp, #4]
900004e0:	b120      	cbz	r0, 900004ec <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
900004e2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
900004e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
900004e8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
900004ea:	6023      	str	r3, [r4, #0]
    }

    return false;
}
900004ec:	b005      	add	sp, #20
900004ee:	bd30      	pop	{r4, r5, pc}

900004f0 <_ZN20STM32TouchControllerD0Ev>:
900004f0:	b510      	push	{r4, lr}
900004f2:	4604      	mov	r4, r0
900004f4:	2104      	movs	r1, #4
900004f6:	f027 fd9d 	bl	90028034 <_ZdlPvj>
900004fa:	4620      	mov	r0, r4
900004fc:	bd10      	pop	{r4, pc}
900004fe:	bf00      	nop

90000500 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000500:	2108      	movs	r1, #8
90000502:	4810      	ldr	r0, [pc, #64]	; (90000544 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000504:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000506:	f009 fbc7 	bl	90009c98 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000050a:	2801      	cmp	r0, #1
9000050c:	d101      	bne.n	90000512 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
9000050e:	4b0e      	ldr	r3, [pc, #56]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000510:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000512:	2180      	movs	r1, #128	; 0x80
90000514:	480d      	ldr	r0, [pc, #52]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000516:	f009 fbbf 	bl	90009c98 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000051a:	2801      	cmp	r0, #1
9000051c:	d101      	bne.n	90000522 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
9000051e:	4b0a      	ldr	r3, [pc, #40]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000520:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000522:	2140      	movs	r1, #64	; 0x40
90000524:	4809      	ldr	r0, [pc, #36]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000526:	f009 fbb7 	bl	90009c98 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000052a:	2801      	cmp	r0, #1
9000052c:	d101      	bne.n	90000532 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
9000052e:	4b06      	ldr	r3, [pc, #24]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000530:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000532:	2140      	movs	r1, #64	; 0x40
90000534:	4806      	ldr	r0, [pc, #24]	; (90000550 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000536:	f009 fbaf 	bl	90009c98 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000053a:	2801      	cmp	r0, #1
9000053c:	d101      	bne.n	90000542 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
9000053e:	4b02      	ldr	r3, [pc, #8]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000540:	60d8      	str	r0, [r3, #12]
}
90000542:	bd08      	pop	{r3, pc}
90000544:	58021800 	.word	0x58021800
90000548:	24005b7c 	.word	0x24005b7c
9000054c:	58020400 	.word	0x58020400
90000550:	58020000 	.word	0x58020000

90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000554:	2803      	cmp	r0, #3
90000556:	d827      	bhi.n	900005a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000558:	e8df f000 	tbb	[pc, r0]
9000055c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000560:	4b12      	ldr	r3, [pc, #72]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000562:	2140      	movs	r1, #64	; 0x40
90000564:	4812      	ldr	r0, [pc, #72]	; (900005b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000566:	68da      	ldr	r2, [r3, #12]
90000568:	fab2 f282 	clz	r2, r2
9000056c:	0952      	lsrs	r2, r2, #5
9000056e:	f009 bb99 	b.w	90009ca4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000572:	4b0e      	ldr	r3, [pc, #56]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000574:	2140      	movs	r1, #64	; 0x40
90000576:	480f      	ldr	r0, [pc, #60]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000578:	689a      	ldr	r2, [r3, #8]
9000057a:	fab2 f282 	clz	r2, r2
9000057e:	0952      	lsrs	r2, r2, #5
90000580:	f009 bb90 	b.w	90009ca4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000584:	4b09      	ldr	r3, [pc, #36]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000586:	2180      	movs	r1, #128	; 0x80
90000588:	480a      	ldr	r0, [pc, #40]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
9000058a:	685a      	ldr	r2, [r3, #4]
9000058c:	fab2 f282 	clz	r2, r2
90000590:	0952      	lsrs	r2, r2, #5
90000592:	f009 bb87 	b.w	90009ca4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000596:	4b05      	ldr	r3, [pc, #20]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000598:	2108      	movs	r1, #8
9000059a:	4807      	ldr	r0, [pc, #28]	; (900005b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
9000059c:	681a      	ldr	r2, [r3, #0]
9000059e:	fab2 f282 	clz	r2, r2
900005a2:	0952      	lsrs	r2, r2, #5
900005a4:	f009 bb7e 	b.w	90009ca4 <HAL_GPIO_WritePin>
}
900005a8:	4770      	bx	lr
900005aa:	bf00      	nop
900005ac:	24005b7c 	.word	0x24005b7c
900005b0:	58020000 	.word	0x58020000
900005b4:	58020400 	.word	0x58020400
900005b8:	58021800 	.word	0x58021800

900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900005bc:	2803      	cmp	r0, #3
900005be:	d827      	bhi.n	90000610 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900005c0:	e8df f000 	tbb	[pc, r0]
900005c4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
900005c8:	4b12      	ldr	r3, [pc, #72]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ca:	2140      	movs	r1, #64	; 0x40
900005cc:	4812      	ldr	r0, [pc, #72]	; (90000618 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
900005ce:	68da      	ldr	r2, [r3, #12]
900005d0:	3a00      	subs	r2, #0
900005d2:	bf18      	it	ne
900005d4:	2201      	movne	r2, #1
900005d6:	f009 bb65 	b.w	90009ca4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
900005da:	4b0e      	ldr	r3, [pc, #56]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005dc:	2140      	movs	r1, #64	; 0x40
900005de:	480f      	ldr	r0, [pc, #60]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005e0:	689a      	ldr	r2, [r3, #8]
900005e2:	3a00      	subs	r2, #0
900005e4:	bf18      	it	ne
900005e6:	2201      	movne	r2, #1
900005e8:	f009 bb5c 	b.w	90009ca4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
900005ec:	4b09      	ldr	r3, [pc, #36]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ee:	2180      	movs	r1, #128	; 0x80
900005f0:	480a      	ldr	r0, [pc, #40]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005f2:	685a      	ldr	r2, [r3, #4]
900005f4:	3a00      	subs	r2, #0
900005f6:	bf18      	it	ne
900005f8:	2201      	movne	r2, #1
900005fa:	f009 bb53 	b.w	90009ca4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
900005fe:	4b05      	ldr	r3, [pc, #20]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000600:	2108      	movs	r1, #8
90000602:	4807      	ldr	r0, [pc, #28]	; (90000620 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000604:	681a      	ldr	r2, [r3, #0]
90000606:	3a00      	subs	r2, #0
90000608:	bf18      	it	ne
9000060a:	2201      	movne	r2, #1
9000060c:	f009 bb4a 	b.w	90009ca4 <HAL_GPIO_WritePin>
}
90000610:	4770      	bx	lr
90000612:	bf00      	nop
90000614:	24005b7c 	.word	0x24005b7c
90000618:	58020000 	.word	0x58020000
9000061c:	58020400 	.word	0x58020400
90000620:	58021800 	.word	0x58021800

90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000624:	2803      	cmp	r0, #3
90000626:	d813      	bhi.n	90000650 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000628:	e8df f000 	tbb	[pc, r0]
9000062c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000630:	2140      	movs	r1, #64	; 0x40
90000632:	4808      	ldr	r0, [pc, #32]	; (90000654 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000634:	f009 bb3a 	b.w	90009cac <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000638:	2140      	movs	r1, #64	; 0x40
9000063a:	4807      	ldr	r0, [pc, #28]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000063c:	f009 bb36 	b.w	90009cac <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000640:	2180      	movs	r1, #128	; 0x80
90000642:	4805      	ldr	r0, [pc, #20]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000644:	f009 bb32 	b.w	90009cac <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000648:	2108      	movs	r1, #8
9000064a:	4804      	ldr	r0, [pc, #16]	; (9000065c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
9000064c:	f009 bb2e 	b.w	90009cac <HAL_GPIO_TogglePin>
}
90000650:	4770      	bx	lr
90000652:	bf00      	nop
90000654:	58020000 	.word	0x58020000
90000658:	58020400 	.word	0x58020400
9000065c:	58021800 	.word	0x58021800

90000660 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000660:	2000      	movs	r0, #0
90000662:	4770      	bx	lr

90000664 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000664:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000666:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
9000066a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
9000066e:	4770      	bx	lr

90000670 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000670:	2000      	movs	r0, #0
90000672:	4770      	bx	lr

90000674 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000674:	1e0a      	subs	r2, r1, #0
90000676:	4b03      	ldr	r3, [pc, #12]	; (90000684 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000678:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000067a:	bf18      	it	ne
9000067c:	2201      	movne	r2, #1
9000067e:	701a      	strb	r2, [r3, #0]
    }
90000680:	4770      	bx	lr
90000682:	bf00      	nop
90000684:	2403989b 	.word	0x2403989b

90000688 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000688:	2000      	movs	r0, #0
9000068a:	4770      	bx	lr

9000068c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
9000068c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
9000068e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000690:	b103      	cbz	r3, 90000694 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000692:	4718      	bx	r3
        }
    }
90000694:	4770      	bx	lr
90000696:	bf00      	nop

90000698 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000698:	f64f 70ff 	movw	r0, #65535	; 0xffff
9000069c:	4770      	bx	lr
9000069e:	bf00      	nop

900006a0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900006a0:	4770      	bx	lr
900006a2:	bf00      	nop

900006a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900006a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006a6:	4b09      	ldr	r3, [pc, #36]	; (900006cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900006a8:	881b      	ldrh	r3, [r3, #0]
900006aa:	428b      	cmp	r3, r1
900006ac:	d808      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900006ae:	4b08      	ldr	r3, [pc, #32]	; (900006d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900006b0:	881b      	ldrh	r3, [r3, #0]
900006b2:	4293      	cmp	r3, r2
900006b4:	d804      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900006b6:	4807      	ldr	r0, [pc, #28]	; (900006d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900006b8:	4b07      	ldr	r3, [pc, #28]	; (900006d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900006ba:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900006bc:	801a      	strh	r2, [r3, #0]
    }
900006be:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006c0:	4b06      	ldr	r3, [pc, #24]	; (900006dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900006c2:	219e      	movs	r1, #158	; 0x9e
900006c4:	4a06      	ldr	r2, [pc, #24]	; (900006e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900006c6:	4807      	ldr	r0, [pc, #28]	; (900006e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
900006c8:	f027 fce2 	bl	90028090 <__assert_func>
900006cc:	24039890 	.word	0x24039890
900006d0:	24039892 	.word	0x24039892
900006d4:	24039896 	.word	0x24039896
900006d8:	24039898 	.word	0x24039898
900006dc:	90029190 	.word	0x90029190
900006e0:	900291f4 	.word	0x900291f4
900006e4:	90029238 	.word	0x90029238

900006e8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
900006e8:	b510      	push	{r4, lr}
900006ea:	4604      	mov	r4, r0
        swapFrameBuffers();
900006ec:	f011 ff4e 	bl	9001258c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900006f0:	6823      	ldr	r3, [r4, #0]
900006f2:	4620      	mov	r0, r4
900006f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
900006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
900006fc:	4718      	bx	r3
900006fe:	bf00      	nop

90000700 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000700:	f001 be3c 	b.w	9000237c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000704 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000704:	f001 be40 	b.w	90002388 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000708 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000708:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
9000070a:	f001 ff25 	bl	90002558 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000070e:	4812      	ldr	r0, [pc, #72]	; (90000758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000710:	2300      	movs	r3, #0
90000712:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000716:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
9000071a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000071e:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000722:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000726:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000072a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000072e:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000732:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000734:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000738:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000073a:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
9000073e:	1c5a      	adds	r2, r3, #1
90000740:	d1f8      	bne.n	90000734 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000742:	f1ac 0c20 	sub.w	ip, ip, #32
90000746:	f11c 0f20 	cmn.w	ip, #32
9000074a:	d1f0      	bne.n	9000072e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
9000074c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000750:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000754:	bd10      	pop	{r4, pc}
90000756:	bf00      	nop
90000758:	e000ed00 	.word	0xe000ed00

9000075c <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
9000075c:	f001 bdea 	b.w	90002334 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000760 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000760:	f001 bff8 	b.w	90002754 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000764 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000764:	f001 bfe2 	b.w	9000272c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000768 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000768:	f001 bdee 	b.w	90002348 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

9000076c <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
9000076c:	b510      	push	{r4, lr}
9000076e:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
90000770:	f011 fa88 	bl	90011c84 <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
90000774:	6860      	ldr	r0, [r4, #4]
90000776:	6803      	ldr	r3, [r0, #0]
    }
90000778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
9000077c:	691b      	ldr	r3, [r3, #16]
9000077e:	4718      	bx	r3

90000780 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000780:	f011 b956 	b.w	90011a30 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000784 <_ZN11TouchGFXHALD0Ev>:
90000784:	b510      	push	{r4, lr}
90000786:	4604      	mov	r4, r0
90000788:	2188      	movs	r1, #136	; 0x88
9000078a:	f027 fc53 	bl	90028034 <_ZdlPvj>
9000078e:	4620      	mov	r0, r4
90000790:	bd10      	pop	{r4, pc}
90000792:	bf00      	nop

90000794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000794:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
90000798:	b11b      	cbz	r3, 900007a2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
9000079a:	6840      	ldr	r0, [r0, #4]
9000079c:	6803      	ldr	r3, [r0, #0]
9000079e:	681b      	ldr	r3, [r3, #0]
900007a0:	4718      	bx	r3
    }
900007a2:	4618      	mov	r0, r3
900007a4:	4770      	bx	lr
900007a6:	bf00      	nop

900007a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900007a8:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900007ac:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900007b0:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900007b2:	4b0b      	ldr	r3, [pc, #44]	; (900007e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900007b4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900007b6:	d00b      	beq.n	900007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900007b8:	b94a      	cbnz	r2, 900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900007ba:	4a0a      	ldr	r2, [pc, #40]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900007bc:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c0:	4909      	ldr	r1, [pc, #36]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900007c2:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900007c4:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c8:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
900007ca:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007cc:	8013      	strh	r3, [r2, #0]
        }
    }
900007ce:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
900007d0:	2a00      	cmp	r2, #0
900007d2:	d0fc      	beq.n	900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
900007d4:	4a03      	ldr	r2, [pc, #12]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
900007d6:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007da:	4903      	ldr	r1, [pc, #12]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
900007dc:	e7f1      	b.n	900007c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
900007de:	bf00      	nop
900007e0:	24039894 	.word	0x24039894
900007e4:	24039892 	.word	0x24039892
900007e8:	24039890 	.word	0x24039890

900007ec <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
900007ec:	6840      	ldr	r0, [r0, #4]
900007ee:	4a04      	ldr	r2, [pc, #16]	; (90000800 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
900007f0:	6803      	ldr	r3, [r0, #0]
900007f2:	699b      	ldr	r3, [r3, #24]
900007f4:	4293      	cmp	r3, r2
900007f6:	d101      	bne.n	900007fc <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
900007f8:	2000      	movs	r0, #0
900007fa:	4770      	bx	lr
        return dma.getDMAType();
900007fc:	4718      	bx	r3
900007fe:	bf00      	nop
90000800:	90000661 	.word	0x90000661

90000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000804:	b1a9      	cbz	r1, 90000832 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000806:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000808:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000080a:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000080c:	bf18      	it	ne
9000080e:	2201      	movne	r2, #1
90000810:	490c      	ldr	r1, [pc, #48]	; (90000844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000812:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000814:	6802      	ldr	r2, [r0, #0]
90000816:	490c      	ldr	r1, [pc, #48]	; (90000848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000818:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
9000081c:	428a      	cmp	r2, r1
9000081e:	d106      	bne.n	9000082e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000820:	1e19      	subs	r1, r3, #0
90000822:	4a0a      	ldr	r2, [pc, #40]	; (9000084c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000824:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000826:	bf18      	it	ne
90000828:	2101      	movne	r1, #1
9000082a:	7011      	strb	r1, [r2, #0]
9000082c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
9000082e:	4619      	mov	r1, r3
90000830:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000832:	4b07      	ldr	r3, [pc, #28]	; (90000850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000834:	f240 21d2 	movw	r1, #722	; 0x2d2
90000838:	4a06      	ldr	r2, [pc, #24]	; (90000854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
9000083a:	4807      	ldr	r0, [pc, #28]	; (90000858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
9000083c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000083e:	f027 fc27 	bl	90028090 <__assert_func>
90000842:	bf00      	nop
90000844:	2403989a 	.word	0x2403989a
90000848:	90000675 	.word	0x90000675
9000084c:	2403989b 	.word	0x2403989b
90000850:	90029280 	.word	0x90029280
90000854:	900292b8 	.word	0x900292b8
90000858:	90029238 	.word	0x90029238

9000085c <_ZN11TouchGFXHAL9taskEntryEv>:
{
9000085c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
9000085e:	6803      	ldr	r3, [r0, #0]
{
90000860:	4604      	mov	r4, r0
90000862:	4d17      	ldr	r5, [pc, #92]	; (900008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000864:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000868:	4798      	blx	r3
    enableInterrupts();
9000086a:	6823      	ldr	r3, [r4, #0]
9000086c:	4620      	mov	r0, r4
9000086e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000870:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000872:	f001 f831 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000876:	6823      	ldr	r3, [r4, #0]
90000878:	4620      	mov	r0, r4
9000087a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000087c:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
9000087e:	2201      	movs	r2, #1
90000880:	2104      	movs	r1, #4
90000882:	4810      	ldr	r0, [pc, #64]	; (900008c4 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000884:	f009 fa0e 	bl	90009ca4 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000888:	2201      	movs	r2, #1
9000088a:	2180      	movs	r1, #128	; 0x80
9000088c:	480e      	ldr	r0, [pc, #56]	; (900008c8 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
9000088e:	f009 fa09 	bl	90009ca4 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000892:	2201      	movs	r2, #1
90000894:	480d      	ldr	r0, [pc, #52]	; (900008cc <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000896:	4611      	mov	r1, r2
90000898:	f009 fa04 	bl	90009ca4 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
9000089c:	f001 f81c 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900008a0:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900008a2:	4620      	mov	r0, r4
900008a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900008a6:	42ab      	cmp	r3, r5
900008a8:	d107      	bne.n	900008ba <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900008aa:	f011 fe6f 	bl	9001258c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900008ae:	6823      	ldr	r3, [r4, #0]
900008b0:	4620      	mov	r0, r4
900008b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900008b6:	4798      	blx	r3
    }
900008b8:	e7f0      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008ba:	4798      	blx	r3
900008bc:	e7ee      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008be:	bf00      	nop
900008c0:	900006e9 	.word	0x900006e9
900008c4:	58020000 	.word	0x58020000
900008c8:	58020c00 	.word	0x58020c00
900008cc:	58022800 	.word	0x58022800

900008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
900008d0:	b538      	push	{r3, r4, r5, lr}
900008d2:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
900008d4:	f001 ff48 	bl	90002768 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
900008d8:	4817      	ldr	r0, [pc, #92]	; (90000938 <_ZN11TouchGFXHAL10initializeEv+0x68>)
900008da:	6823      	ldr	r3, [r4, #0]
900008dc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900008de:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900008e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
900008e4:	4285      	cmp	r5, r0
900008e6:	d119      	bne.n	9000091c <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
900008e8:	b1f9      	cbz	r1, 9000092a <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008ea:	3a00      	subs	r2, #0
900008ec:	4913      	ldr	r1, [pc, #76]	; (9000093c <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
900008ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008f2:	bf18      	it	ne
900008f4:	2201      	movne	r2, #1
900008f6:	4812      	ldr	r0, [pc, #72]	; (90000940 <_ZN11TouchGFXHAL10initializeEv+0x70>)
900008f8:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900008fa:	4912      	ldr	r1, [pc, #72]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008fc:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
900008fe:	d111      	bne.n	90000924 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000900:	4b11      	ldr	r3, [pc, #68]	; (90000948 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000902:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000904:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000906:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000908:	f104 057c 	add.w	r5, r4, #124	; 0x7c
9000090c:	4628      	mov	r0, r5
9000090e:	f7ff fd73 	bl	900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000912:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000914:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000916:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
9000091a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
9000091c:	4b09      	ldr	r3, [pc, #36]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
9000091e:	4620      	mov	r0, r4
90000920:	47a8      	blx	r5
90000922:	e7f1      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000924:	4620      	mov	r0, r4
90000926:	4798      	blx	r3
90000928:	e7ee      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000092a:	4b08      	ldr	r3, [pc, #32]	; (9000094c <_ZN11TouchGFXHAL10initializeEv+0x7c>)
9000092c:	f240 21d2 	movw	r1, #722	; 0x2d2
90000930:	4a07      	ldr	r2, [pc, #28]	; (90000950 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000932:	4808      	ldr	r0, [pc, #32]	; (90000954 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000934:	f027 fbac 	bl	90028090 <__assert_func>
90000938:	90000805 	.word	0x90000805
9000093c:	90000675 	.word	0x90000675
90000940:	2403989a 	.word	0x2403989a
90000944:	d0000000 	.word	0xd0000000
90000948:	2403989b 	.word	0x2403989b
9000094c:	90029280 	.word	0x90029280
90000950:	900292b8 	.word	0x900292b8
90000954:	90029238 	.word	0x90029238

90000958 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000958:	b508      	push	{r3, lr}
        return instance;
9000095a:	4b07      	ldr	r3, [pc, #28]	; (90000978 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
9000095c:	b128      	cbz	r0, 9000096a <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000095e:	6818      	ldr	r0, [r3, #0]
90000960:	2101      	movs	r1, #1
90000962:	f011 fe2d 	bl	900125c0 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000966:	2001      	movs	r0, #1
90000968:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000096a:	4601      	mov	r1, r0
9000096c:	6818      	ldr	r0, [r3, #0]
9000096e:	f011 fe27 	bl	900125c0 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000972:	2001      	movs	r0, #1
90000974:	bd08      	pop	{r3, pc}
90000976:	bf00      	nop
90000978:	2403989c 	.word	0x2403989c

9000097c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000097c:	6940      	ldr	r0, [r0, #20]
9000097e:	4770      	bx	lr

90000980 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000980:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000984:	4770      	bx	lr
90000986:	bf00      	nop

90000988 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000988:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000098a:	b10b      	cbz	r3, 90000990 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000098c:	2001      	movs	r0, #1
}
9000098e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000990:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000992:	3800      	subs	r0, #0
90000994:	bf18      	it	ne
90000996:	2001      	movne	r0, #1
90000998:	4770      	bx	lr
9000099a:	bf00      	nop

9000099c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000099c:	6880      	ldr	r0, [r0, #8]
9000099e:	4770      	bx	lr

900009a0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
900009a0:	4770      	bx	lr
900009a2:	bf00      	nop

900009a4 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
900009a4:	3004      	adds	r0, #4
{
900009a6:	468c      	mov	ip, r1
    *data = videoInfo;
900009a8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900009aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
900009ae:	4770      	bx	lr

900009b0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
900009b0:	4770      	bx	lr
900009b2:	bf00      	nop

900009b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
900009b4:	b508      	push	{r3, lr}
    assert(0);
900009b6:	4a03      	ldr	r2, [pc, #12]	; (900009c4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900009b8:	f44f 71de 	mov.w	r1, #444	; 0x1bc
900009bc:	4b02      	ldr	r3, [pc, #8]	; (900009c8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900009be:	4803      	ldr	r0, [pc, #12]	; (900009cc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900009c0:	f027 fb66 	bl	90028090 <__assert_func>
900009c4:	900293e4 	.word	0x900293e4
900009c8:	900293e0 	.word	0x900293e0
900009cc:	90029440 	.word	0x90029440

900009d0 <_ZN20HardwareMJPEGDecoderD0Ev>:
900009d0:	b510      	push	{r4, lr}
900009d2:	4604      	mov	r4, r0
900009d4:	2148      	movs	r1, #72	; 0x48
900009d6:	f027 fb2d 	bl	90028034 <_ZdlPvj>
900009da:	4620      	mov	r0, r4
900009dc:	bd10      	pop	{r4, pc}
900009de:	bf00      	nop

900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009e4:	4c4a      	ldr	r4, [pc, #296]	; (90000b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e6:	4683      	mov	fp, r0
900009e8:	461d      	mov	r5, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900009ea:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009ec:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009ee:	b083      	sub	sp, #12
      * @retval None
      */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
900009f0:	4f48      	ldr	r7, [pc, #288]	; (90000b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900009f2:	f44f 7c70 	mov.w	ip, #960	; 0x3c0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009f6:	6123      	str	r3, [r4, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900009f8:	0703      	lsls	r3, r0, #28
        JPEG_OUT_Read_BufferIndex = 0;
900009fa:	4b47      	ldr	r3, [pc, #284]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900009fc:	bf18      	it	ne
900009fe:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90000a02:	f8df a140 	ldr.w	sl, [pc, #320]	; 90000b44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a06:	4e45      	ldr	r6, [pc, #276]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a08:	bf18      	it	ne
90000a0a:	3010      	addne	r0, #16
        DMA2D_reference = dma;
90000a0c:	f8df 8138 	ldr.w	r8, [pc, #312]	; 90000b48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
90000a10:	f8df 9138 	ldr.w	r9, [pc, #312]	; 90000b4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a14:	6020      	str	r0, [r4, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a16:	0900      	lsrs	r0, r0, #4
90000a18:	60e0      	str	r0, [r4, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a1a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90000a1e:	01c0      	lsls	r0, r0, #7
90000a20:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90000a22:	2000      	movs	r0, #0
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90000a24:	f8c4 c004 	str.w	ip, [r4, #4]
        JPEG_output_is_paused = 0;
90000a28:	6038      	str	r0, [r7, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90000a2a:	6018      	str	r0, [r3, #0]
        MCU_BlockIndex = 0;
90000a2c:	4b3c      	ldr	r3, [pc, #240]	; (90000b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_OUT_Write_BufferIndex = 0;
90000a2e:	f8ca 0000 	str.w	r0, [sl]
        MCU_BlockIndex = 0;
90000a32:	6018      	str	r0, [r3, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a34:	f8db 3010 	ldr.w	r3, [fp, #16]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a38:	7030      	strb	r0, [r6, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a3a:	f003 030f 	and.w	r3, r3, #15
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a3e:	7430      	strb	r0, [r6, #16]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a40:	f1c3 0310 	rsb	r3, r3, #16
90000a44:	60a3      	str	r3, [r4, #8]
        FrameBufferAddress = output;
90000a46:	4c37      	ldr	r4, [pc, #220]	; (90000b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a48:	f8da 3000 	ldr.w	r3, [sl]
        FrameBufferAddress = output;
90000a4c:	6025      	str	r5, [r4, #0]
        JPEG_InputImageIndex = 0;
90000a4e:	4c36      	ldr	r4, [pc, #216]	; (90000b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a50:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90000a54:	4d35      	ldr	r5, [pc, #212]	; (90000b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        JPEG_InputImageIndex = 0;
90000a56:	6020      	str	r0, [r4, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000a58:	4835      	ldr	r0, [pc, #212]	; (90000b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a5a:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageAddress = (uint32_t)input;
90000a5c:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a5e:	4835      	ldr	r0, [pc, #212]	; (90000b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
90000a60:	4c35      	ldr	r4, [pc, #212]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90000a62:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a64:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000a68:	4834      	ldr	r0, [pc, #208]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000a6a:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90000b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90000a6e:	ed86 7b02 	vstr	d7, [r6, #8]
90000a72:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a76:	f00a fa45 	bl	9000af04 <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90000a7a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90000a7e:	f8c8 3000 	str.w	r3, [r8]
  * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
  */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000a82:	682b      	ldr	r3, [r5, #0]
90000a84:	b113      	cbz	r3, 90000a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90000a86:	f8d9 3000 	ldr.w	r3, [r9]
90000a8a:	bb63      	cbnz	r3, 90000ae6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000a8c:	f8d8 0000 	ldr.w	r0, [r8]
90000a90:	7a03      	ldrb	r3, [r0, #8]
90000a92:	b92b      	cbnz	r3, 90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90000a94:	4b20      	ldr	r3, [pc, #128]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
90000a96:	681b      	ldr	r3, [r3, #0]
90000a98:	011b      	lsls	r3, r3, #4
90000a9a:	5cf3      	ldrb	r3, [r6, r3]
90000a9c:	2b01      	cmp	r3, #1
90000a9e:	d024      	beq.n	90000aea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000aa0:	683b      	ldr	r3, [r7, #0]
90000aa2:	2b01      	cmp	r3, #1
90000aa4:	d106      	bne.n	90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000aa6:	f8da 3000 	ldr.w	r3, [sl]
90000aaa:	011b      	lsls	r3, r3, #4
90000aac:	5cf3      	ldrb	r3, [r6, r3]
90000aae:	b90b      	cbnz	r3, 90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000ab0:	682b      	ldr	r3, [r5, #0]
90000ab2:	b313      	cbz	r3, 90000afa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90000ab4:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000ab6:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90000ab8:	6823      	ldr	r3, [r4, #0]
90000aba:	2b02      	cmp	r3, #2
90000abc:	d009      	beq.n	90000ad2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90000abe:	6823      	ldr	r3, [r4, #0]
90000ac0:	2b01      	cmp	r3, #1
90000ac2:	d1de      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90000ac4:	2300      	movs	r3, #0
90000ac6:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90000ac8:	f8c9 3000 	str.w	r3, [r9]
}
90000acc:	b003      	add	sp, #12
90000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90000ad2:	4b1b      	ldr	r3, [pc, #108]	; (90000b40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90000ad4:	f04f 31ff 	mov.w	r1, #4294967295
90000ad8:	6818      	ldr	r0, [r3, #0]
90000ada:	f00d fe79 	bl	9000e7d0 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90000ade:	6823      	ldr	r3, [r4, #0]
90000ae0:	2b01      	cmp	r3, #1
90000ae2:	d1ce      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90000ae4:	e7ee      	b.n	90000ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90000ae6:	2301      	movs	r3, #1
90000ae8:	e7e5      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000aea:	f8d9 3000 	ldr.w	r3, [r9]
90000aee:	2b00      	cmp	r3, #0
90000af0:	d1d6      	bne.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90000af2:	6803      	ldr	r3, [r0, #0]
90000af4:	691b      	ldr	r3, [r3, #16]
90000af6:	4798      	blx	r3
90000af8:	e7d2      	b.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000afa:	2102      	movs	r1, #2
90000afc:	480f      	ldr	r0, [pc, #60]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
        JPEG_output_is_paused = 0;
90000afe:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000b00:	f00a fb48 	bl	9000b194 <HAL_JPEG_Resume>
90000b04:	2302      	movs	r3, #2
90000b06:	e7d6      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90000b10:	24005b98 	.word	0x24005b98
90000b14:	24005bc4 	.word	0x24005bc4
90000b18:	24005b90 	.word	0x24005b90
90000b1c:	24000008 	.word	0x24000008
90000b20:	24005b94 	.word	0x24005b94
90000b24:	24005bb4 	.word	0x24005bb4
90000b28:	24005bc0 	.word	0x24005bc0
90000b2c:	24005bbc 	.word	0x24005bbc
90000b30:	24005bc8 	.word	0x24005bc8
90000b34:	24005bcc 	.word	0x24005bcc
90000b38:	24005bb8 	.word	0x24005bb8
90000b3c:	24009560 	.word	0x24009560
90000b40:	24005bd4 	.word	0x24005bd4
90000b44:	24005bd0 	.word	0x24005bd0
90000b48:	24005bb0 	.word	0x24005bb0
90000b4c:	24005b8c 	.word	0x24005b8c

90000b50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90000b52:	6803      	ldr	r3, [r0, #0]
90000b54:	2901      	cmp	r1, #1
90000b56:	4e2a      	ldr	r6, [pc, #168]	; (90000c00 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>)
{
90000b58:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90000b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000b5c:	bf38      	it	cc
90000b5e:	2101      	movcc	r1, #1
90000b60:	42b3      	cmp	r3, r6
90000b62:	460d      	mov	r5, r1
90000b64:	d138      	bne.n	90000bd8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x88>
    return videoInfo.number_of_frames;
90000b66:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90000b68:	4299      	cmp	r1, r3
90000b6a:	d82a      	bhi.n	90000bc2 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b6c:	1e6b      	subs	r3, r5, #1
90000b6e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90000b70:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b72:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90000b76:	b350      	cbz	r0, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90000b78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000b7a:	2b0f      	cmp	r3, #15
90000b7c:	d937      	bls.n	90000bee <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9e>
        reader->seek(offset);
90000b7e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b80:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90000b84:	68db      	ldr	r3, [r3, #12]
90000b86:	4631      	mov	r1, r6
90000b88:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000b8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000b8c:	2210      	movs	r2, #16
90000b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000b90:	6803      	ldr	r3, [r0, #0]
90000b92:	691b      	ldr	r3, [r3, #16]
90000b94:	4798      	blx	r3
90000b96:	b1b0      	cbz	r0, 90000bc6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90000b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90000b9a:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000b9c:	b1bb      	cbz	r3, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000b9e:	6b62      	ldr	r2, [r4, #52]	; 0x34
90000ba0:	7a93      	ldrb	r3, [r2, #10]
90000ba2:	7a51      	ldrb	r1, [r2, #9]
90000ba4:	041b      	lsls	r3, r3, #16
90000ba6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90000baa:	7a11      	ldrb	r1, [r2, #8]
90000bac:	7ad2      	ldrb	r2, [r2, #11]
90000bae:	430b      	orrs	r3, r1
90000bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90000bb6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb8:	3a04      	subs	r2, #4
90000bba:	441a      	add	r2, r3
90000bbc:	61a2      	str	r2, [r4, #24]
}
90000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90000bc0:	68a3      	ldr	r3, [r4, #8]
{
90000bc2:	461d      	mov	r5, r3
90000bc4:	e7d2      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90000bc6:	230d      	movs	r3, #13
90000bc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000bcc:	e7e4      	b.n	90000b98 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bce:	f107 0310 	add.w	r3, r7, #16
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000bd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90000bd4:	58d3      	ldr	r3, [r2, r3]
90000bd6:	e7ed      	b.n	90000bb4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90000bd8:	4798      	blx	r3
90000bda:	4285      	cmp	r5, r0
90000bdc:	d9c6      	bls.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90000bde:	6823      	ldr	r3, [r4, #0]
90000be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000be2:	42b3      	cmp	r3, r6
90000be4:	d0ec      	beq.n	90000bc0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90000be6:	4620      	mov	r0, r4
90000be8:	4798      	blx	r3
90000bea:	4605      	mov	r5, r0
90000bec:	e7be      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bee:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000bf0:	4b04      	ldr	r3, [pc, #16]	; (90000c04 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb4>)
90000bf2:	4a05      	ldr	r2, [pc, #20]	; (90000c08 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb8>)
90000bf4:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bf6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000bfa:	4804      	ldr	r0, [pc, #16]	; (90000c0c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xbc>)
90000bfc:	f027 fa48 	bl	90028090 <__assert_func>
90000c00:	9000099d 	.word	0x9000099d
90000c04:	90029490 	.word	0x90029490
90000c08:	900294a4 	.word	0x900294a4
90000c0c:	90029440 	.word	0x90029440

90000c10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90000c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000c14:	4604      	mov	r4, r0
    if (reader != 0)
90000c16:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90000c18:	b083      	sub	sp, #12
90000c1a:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90000c1c:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90000c1e:	2800      	cmp	r0, #0
90000c20:	f000 80ad 	beq.w	90000d7e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90000c24:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000c26:	2b07      	cmp	r3, #7
90000c28:	f240 80b0 	bls.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c2c:	6803      	ldr	r3, [r0, #0]
90000c2e:	4631      	mov	r1, r6
90000c30:	68db      	ldr	r3, [r3, #12]
90000c32:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c34:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c36:	2208      	movs	r2, #8
90000c38:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c3a:	6803      	ldr	r3, [r0, #0]
90000c3c:	691b      	ldr	r3, [r3, #16]
90000c3e:	4798      	blx	r3
90000c40:	2800      	cmp	r0, #0
90000c42:	f000 8091 	beq.w	90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c46:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90000c48:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c4a:	1d3a      	adds	r2, r7, #4
        aviBufferStartOffset = offset;
90000c4c:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000c4e:	2800      	cmp	r0, #0
90000c50:	f000 80a5 	beq.w	90000d9e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        const uint32_t index = offset - aviBufferStartOffset;
90000c54:	1b92      	subs	r2, r2, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000c56:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90000c58:	e9d4 630d 	ldrd	r6, r3, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000c5c:	18b1      	adds	r1, r6, r2
90000c5e:	5cb2      	ldrb	r2, [r6, r2]
90000c60:	788e      	ldrb	r6, [r1, #2]
90000c62:	f891 c001 	ldrb.w	ip, [r1, #1]
90000c66:	0436      	lsls	r6, r6, #16
90000c68:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90000c6c:	4316      	orrs	r6, r2
90000c6e:	78ca      	ldrb	r2, [r1, #3]
90000c70:	ea46 6602 	orr.w	r6, r6, r2, lsl #24
        if (length > aviBufferLength)
90000c74:	42b3      	cmp	r3, r6
90000c76:	f0c0 8089 	bcc.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c7a:	6803      	ldr	r3, [r0, #0]
90000c7c:	4639      	mov	r1, r7
90000c7e:	68db      	ldr	r3, [r3, #12]
90000c80:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c82:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c84:	4632      	mov	r2, r6
90000c86:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c88:	6803      	ldr	r3, [r0, #0]
90000c8a:	691b      	ldr	r3, [r3, #16]
90000c8c:	4798      	blx	r3
90000c8e:	b910      	cbnz	r0, 90000c96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000c90:	230d      	movs	r3, #13
90000c92:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90000c96:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90000c98:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90000c9a:	2d00      	cmp	r5, #0
90000c9c:	d058      	beq.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90000c9e:	4b44      	ldr	r3, [pc, #272]	; (90000db0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>)
        JPEG_output_is_paused = 0;
90000ca0:	2200      	movs	r2, #0
90000ca2:	4f44      	ldr	r7, [pc, #272]	; (90000db4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a4>)
        FrameBufferAddress = output;
90000ca4:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ca6:	4b44      	ldr	r3, [pc, #272]	; (90000db8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>)
        JPEG_output_is_paused = 0;
90000ca8:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000caa:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cac:	4d43      	ldr	r5, [pc, #268]	; (90000dbc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90000cb2:	f8df a134 	ldr.w	sl, [pc, #308]	; 90000de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
        JPEG_OUT_Read_BufferIndex = 0;
90000cb6:	f8df b134 	ldr.w	fp, [pc, #308]	; 90000dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cba:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90000cbc:	4840      	ldr	r0, [pc, #256]	; (90000dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_OUT_Read_BufferIndex = 0;
90000cbe:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc2:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90000cc4:	4b3f      	ldr	r3, [pc, #252]	; (90000dc4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        JPEG_OUT_Write_BufferIndex = 0;
90000cc6:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cca:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90000ccc:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cce:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd0:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90000cd4:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000cd6:	4a3c      	ldr	r2, [pc, #240]	; (90000dc8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd8:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90000cdc:	483b      	ldr	r0, [pc, #236]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_InputImageAddress = (uint32_t)input;
90000cde:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce0:	4a3b      	ldr	r2, [pc, #236]	; (90000dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce2:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce4:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce6:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000cea:	4e3a      	ldr	r6, [pc, #232]	; (90000dd4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
90000cec:	4c3a      	ldr	r4, [pc, #232]	; (90000dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000cee:	f8df 8100 	ldr.w	r8, [pc, #256]	; 90000df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
90000cf2:	f8df 9100 	ldr.w	r9, [pc, #256]	; 90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000cf6:	ed9f 7b2c 	vldr	d7, [pc, #176]	; 90000da8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
90000cfa:	ed85 7b02 	vstr	d7, [r5, #8]
90000cfe:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000d02:	f00a f8ff 	bl	9000af04 <HAL_JPEG_Decode_DMA>
        return 0;
90000d06:	e017      	b.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d08:	f8d8 0000 	ldr.w	r0, [r8]
90000d0c:	7a03      	ldrb	r3, [r0, #8]
90000d0e:	b92b      	cbnz	r3, 90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90000d10:	f8db 3000 	ldr.w	r3, [fp]
90000d14:	011b      	lsls	r3, r3, #4
90000d16:	5ceb      	ldrb	r3, [r5, r3]
90000d18:	2b01      	cmp	r3, #1
90000d1a:	d01d      	beq.n	90000d58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000d1c:	683b      	ldr	r3, [r7, #0]
90000d1e:	2b01      	cmp	r3, #1
90000d20:	d106      	bne.n	90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d22:	f8da 3000 	ldr.w	r3, [sl]
90000d26:	011b      	lsls	r3, r3, #4
90000d28:	5ceb      	ldrb	r3, [r5, r3]
90000d2a:	b90b      	cbnz	r3, 90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d2c:	6833      	ldr	r3, [r6, #0]
90000d2e:	b1fb      	cbz	r3, 90000d70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90000d30:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d32:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d34:	6823      	ldr	r3, [r4, #0]
90000d36:	b95b      	cbnz	r3, 90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000d38:	6833      	ldr	r3, [r6, #0]
90000d3a:	2b00      	cmp	r3, #0
90000d3c:	d0e4      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90000d3e:	f8d9 3000 	ldr.w	r3, [r9]
90000d42:	2b00      	cmp	r3, #0
90000d44:	d0e0      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90000d46:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d48:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d4a:	6823      	ldr	r3, [r4, #0]
90000d4c:	2b00      	cmp	r3, #0
90000d4e:	d0f3      	beq.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90000d50:	2001      	movs	r0, #1
90000d52:	b003      	add	sp, #12
90000d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d58:	f8d9 3000 	ldr.w	r3, [r9]
90000d5c:	2b00      	cmp	r3, #0
90000d5e:	d1dd      	bne.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90000d60:	6803      	ldr	r3, [r0, #0]
90000d62:	691b      	ldr	r3, [r3, #16]
90000d64:	4798      	blx	r3
90000d66:	e7d9      	b.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90000d68:	230d      	movs	r3, #13
90000d6a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000d6e:	e76a      	b.n	90000c46 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d70:	2102      	movs	r1, #2
90000d72:	4816      	ldr	r0, [pc, #88]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_output_is_paused = 0;
90000d74:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d76:	f00a fa0d 	bl	9000b194 <HAL_JPEG_Resume>
90000d7a:	2302      	movs	r3, #2
90000d7c:	e7d9      	b.n	90000d32 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d7e:	1d32      	adds	r2, r6, #4
    if (reader != 0)
90000d80:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000d82:	f106 0308 	add.w	r3, r6, #8
90000d86:	588e      	ldr	r6, [r1, r2]
    return movieData + offset;
90000d88:	4419      	add	r1, r3
90000d8a:	e786      	b.n	90000c9a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d8c:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000d8e:	4b13      	ldr	r3, [pc, #76]	; (90000ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
90000d90:	4a13      	ldr	r2, [pc, #76]	; (90000de0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
90000d92:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d94:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000d98:	4812      	ldr	r0, [pc, #72]	; (90000de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90000d9a:	f027 f979 	bl	90028090 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d9e:	463e      	mov	r6, r7
90000da0:	e7ee      	b.n	90000d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90000da2:	bf00      	nop
90000da4:	f3af 8000 	nop.w
	...
90000db0:	24005bb4 	.word	0x24005bb4
90000db4:	24005bc4 	.word	0x24005bc4
90000db8:	24005b98 	.word	0x24005b98
90000dbc:	24000008 	.word	0x24000008
90000dc0:	24005bc0 	.word	0x24005bc0
90000dc4:	24005b94 	.word	0x24005b94
90000dc8:	24005bc8 	.word	0x24005bc8
90000dcc:	24009560 	.word	0x24009560
90000dd0:	24005bcc 	.word	0x24005bcc
90000dd4:	24005bbc 	.word	0x24005bbc
90000dd8:	24005bb8 	.word	0x24005bb8
90000ddc:	90029490 	.word	0x90029490
90000de0:	900294a4 	.word	0x900294a4
90000de4:	90029440 	.word	0x90029440
90000de8:	24005bd0 	.word	0x24005bd0
90000dec:	24005b90 	.word	0x24005b90
90000df0:	24005bb0 	.word	0x24005bb0
90000df4:	24005b8c 	.word	0x24005b8c

90000df8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000df8:	6943      	ldr	r3, [r0, #20]
{
90000dfa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000dfe:	2b00      	cmp	r3, #0
90000e00:	f000 8098 	beq.w	90000f34 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x13c>
    readData(currentMovieOffset, 8);
90000e04:	4605      	mov	r5, r0
    if (reader != 0)
90000e06:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90000e08:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90000e0a:	2800      	cmp	r0, #0
90000e0c:	f000 8082 	beq.w	90000f14 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x11c>
        if (length > aviBufferLength)
90000e10:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e12:	2b07      	cmp	r3, #7
90000e14:	f240 8083 	bls.w	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e18:	6803      	ldr	r3, [r0, #0]
90000e1a:	4621      	mov	r1, r4
90000e1c:	68db      	ldr	r3, [r3, #12]
90000e1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e20:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e22:	2208      	movs	r2, #8
90000e24:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e26:	6803      	ldr	r3, [r0, #0]
90000e28:	691b      	ldr	r3, [r3, #16]
90000e2a:	4798      	blx	r3
90000e2c:	2800      	cmp	r0, #0
90000e2e:	d06d      	beq.n	90000f0c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x114>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e30:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90000e32:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e34:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90000e36:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e38:	2800      	cmp	r0, #0
90000e3a:	d06d      	beq.n	90000f18 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x120>
        const uint32_t index = offset - aviBufferStartOffset;
90000e3c:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e3e:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90000e40:	18a1      	adds	r1, r4, r2
90000e42:	5ca2      	ldrb	r2, [r4, r2]
90000e44:	788c      	ldrb	r4, [r1, #2]
90000e46:	784e      	ldrb	r6, [r1, #1]
90000e48:	0424      	lsls	r4, r4, #16
90000e4a:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000e4e:	4314      	orrs	r4, r2
90000e50:	78ca      	ldrb	r2, [r1, #3]
90000e52:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90000e56:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000e58:	f243 0630 	movw	r6, #12336	; 0x3030
90000e5c:	e039      	b.n	90000ed2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xda>
        if (length > aviBufferLength)
90000e5e:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e60:	2b07      	cmp	r3, #7
90000e62:	d95c      	bls.n	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e64:	6803      	ldr	r3, [r0, #0]
90000e66:	4621      	mov	r1, r4
90000e68:	68db      	ldr	r3, [r3, #12]
90000e6a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e6c:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e6e:	2208      	movs	r2, #8
90000e70:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e72:	6803      	ldr	r3, [r0, #0]
90000e74:	691b      	ldr	r3, [r3, #16]
90000e76:	4798      	blx	r3
90000e78:	b908      	cbnz	r0, 90000e7e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000e7a:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90000e7e:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90000e80:	69aa      	ldr	r2, [r5, #24]
        aviBufferStartOffset = offset;
90000e82:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e84:	2800      	cmp	r0, #0
90000e86:	d053      	beq.n	90000f30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x138>
        const uint32_t index = offset - aviBufferStartOffset;
90000e88:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e8a:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e8c:	188b      	adds	r3, r1, r2
90000e8e:	5c89      	ldrb	r1, [r1, r2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e90:	799c      	ldrb	r4, [r3, #6]
90000e92:	f893 a005 	ldrb.w	sl, [r3, #5]
90000e96:	0424      	lsls	r4, r4, #16
90000e98:	f893 e004 	ldrb.w	lr, [r3, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e9c:	f893 9001 	ldrb.w	r9, [r3, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ea0:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90000ea4:	f893 c007 	ldrb.w	ip, [r3, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ea8:	f893 8003 	ldrb.w	r8, [r3, #3]
90000eac:	ea41 2109 	orr.w	r1, r1, r9, lsl #8
90000eb0:	789a      	ldrb	r2, [r3, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eb2:	ea44 040e 	orr.w	r4, r4, lr
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eb6:	ea42 2308 	orr.w	r3, r2, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eba:	ea44 640c 	orr.w	r4, r4, ip, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000ebe:	f246 3264 	movw	r2, #25444	; 0x6364
90000ec2:	42b1      	cmp	r1, r6
90000ec4:	bf08      	it	eq
90000ec6:	4293      	cmpeq	r3, r2
90000ec8:	bf0c      	ite	eq
90000eca:	2101      	moveq	r1, #1
90000ecc:	2100      	movne	r1, #0
90000ece:	d01a      	beq.n	90000f06 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x10e>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90000ed0:	69ab      	ldr	r3, [r5, #24]
90000ed2:	441c      	add	r4, r3
90000ed4:	6aab      	ldr	r3, [r5, #40]	; 0x28
90000ed6:	f104 0208 	add.w	r2, r4, #8
90000eda:	429a      	cmp	r2, r3
90000edc:	d20e      	bcs.n	90000efc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x104>
        frameNumber++;
90000ede:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee0:	3409      	adds	r4, #9
        frameNumber++;
90000ee2:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee4:	f024 0401 	bic.w	r4, r4, #1
90000ee8:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90000eec:	2800      	cmp	r0, #0
90000eee:	d1b6      	bne.n	90000e5e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x66>
        const uint8_t* const d = movieData + offset;
90000ef0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        return d[0] | (d[1] << 8);
90000ef2:	191a      	adds	r2, r3, r4
90000ef4:	5b19      	ldrh	r1, [r3, r4]
90000ef6:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000ef8:	6854      	ldr	r4, [r2, #4]
90000efa:	e7e0      	b.n	90000ebe <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xc6>
    frameNumber = 1;
90000efc:	2201      	movs	r2, #1
    currentMovieOffset = firstFrameOffset; /* start over */
90000efe:	6a2b      	ldr	r3, [r5, #32]
    return false;
90000f00:	2100      	movs	r1, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90000f02:	e9c5 2305 	strd	r2, r3, [r5, #20]
}
90000f06:	4608      	mov	r0, r1
90000f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90000f0c:	230d      	movs	r3, #13
90000f0e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90000f12:	e78d      	b.n	90000e30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x38>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f14:	1d22      	adds	r2, r4, #4
90000f16:	4623      	mov	r3, r4
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000f18:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
90000f1a:	588c      	ldr	r4, [r1, r2]
90000f1c:	e79b      	b.n	90000e56 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x5e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f1e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000f20:	4b07      	ldr	r3, [pc, #28]	; (90000f40 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x148>)
90000f22:	4a08      	ldr	r2, [pc, #32]	; (90000f44 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>)
90000f24:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f26:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90000f2a:	4807      	ldr	r0, [pc, #28]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f2c:	f027 f8b0 	bl	90028090 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90000f30:	4614      	mov	r4, r2
90000f32:	e7dd      	b.n	90000ef0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xf8>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f34:	4b05      	ldr	r3, [pc, #20]	; (90000f4c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x154>)
90000f36:	21dd      	movs	r1, #221	; 0xdd
90000f38:	4a05      	ldr	r2, [pc, #20]	; (90000f50 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>)
90000f3a:	4803      	ldr	r0, [pc, #12]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f3c:	f027 f8a8 	bl	90028090 <__assert_func>
90000f40:	90029490 	.word	0x90029490
90000f44:	900294a4 	.word	0x900294a4
90000f48:	90029440 	.word	0x90029440
90000f4c:	900294e8 	.word	0x900294e8
90000f50:	90029534 	.word	0x90029534

90000f54 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f54:	6943      	ldr	r3, [r0, #20]
{
90000f56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f5a:	2b00      	cmp	r3, #0
90000f5c:	f000 809b 	beq.w	90001096 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x142>
    readData(currentMovieOffset, 8);
90000f60:	4604      	mov	r4, r0
    if (reader != 0)
90000f62:	6b00      	ldr	r0, [r0, #48]	; 0x30
90000f64:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90000f66:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90000f68:	2800      	cmp	r0, #0
90000f6a:	d061      	beq.n	90001030 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xdc>
        if (length > aviBufferLength)
90000f6c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000f6e:	2b07      	cmp	r3, #7
90000f70:	f240 8097 	bls.w	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90000f74:	6803      	ldr	r3, [r0, #0]
90000f76:	4629      	mov	r1, r5
90000f78:	68db      	ldr	r3, [r3, #12]
90000f7a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000f7c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000f7e:	2208      	movs	r2, #8
90000f80:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000f82:	6803      	ldr	r3, [r0, #0]
90000f84:	691b      	ldr	r3, [r3, #16]
90000f86:	4798      	blx	r3
90000f88:	2800      	cmp	r0, #0
90000f8a:	d04c      	beq.n	90001026 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd2>
    if (reader != 0)
90000f8c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
90000f8e:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90000f90:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
90000f92:	2800      	cmp	r0, #0
90000f94:	d04b      	beq.n	9000102e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xda>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f96:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90000f9a:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000f9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90000f9e:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90000fa2:	1b52      	subs	r2, r2, r5
90000fa4:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fa6:	eb03 0e0c 	add.w	lr, r3, ip
90000faa:	f813 700c 	ldrb.w	r7, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fae:	eb03 0805 	add.w	r8, r3, r5
90000fb2:	f813 c005 	ldrb.w	ip, [r3, r5]
90000fb6:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fba:	f89e 8001 	ldrb.w	r8, [lr, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fbe:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fc2:	f89e 5002 	ldrb.w	r5, [lr, #2]
90000fc6:	f89e e003 	ldrb.w	lr, [lr, #3]
90000fca:	042d      	lsls	r5, r5, #16
90000fcc:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90000fd0:	433d      	orrs	r5, r7
90000fd2:	ea45 650e 	orr.w	r5, r5, lr, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fd6:	eb03 0e02 	add.w	lr, r3, r2
90000fda:	5c9b      	ldrb	r3, [r3, r2]
90000fdc:	f89e 2001 	ldrb.w	r2, [lr, #1]
90000fe0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90000fe4:	194a      	adds	r2, r1, r5
90000fe6:	6aa7      	ldr	r7, [r4, #40]	; 0x28
90000fe8:	f102 0e08 	add.w	lr, r2, #8
90000fec:	45be      	cmp	lr, r7
90000fee:	d213      	bcs.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90000ff0:	f243 0730 	movw	r7, #12336	; 0x3030
90000ff4:	45bc      	cmp	ip, r7
90000ff6:	d124      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90000ff8:	f246 3764 	movw	r7, #25444	; 0x6364
90000ffc:	42bb      	cmp	r3, r7
90000ffe:	d120      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90001000:	bb1d      	cbnz	r5, 9000104a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xf6>
            currentMovieOffset += 8;
90001002:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001004:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001006:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001008:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000100c:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000100e:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001010:	d002      	beq.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
90001012:	2001      	movs	r0, #1
}
90001014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001018:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
9000101a:	6a23      	ldr	r3, [r4, #32]
9000101c:	2000      	movs	r0, #0
9000101e:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001022:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001026:	230d      	movs	r3, #13
90001028:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000102c:	e7ae      	b.n	90000f8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
9000102e:	460d      	mov	r5, r1
        const uint8_t* const d = movieData + offset;
90001030:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        const uint8_t* const d = movieData + offset;
90001032:	4629      	mov	r1, r5
90001034:	2000      	movs	r0, #0
        return d[0] | (d[1] << 8);
90001036:	f832 c005 	ldrh.w	ip, [r2, r5]
9000103a:	442a      	add	r2, r5
9000103c:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000103e:	6855      	ldr	r5, [r2, #4]
90001040:	e7d0      	b.n	90000fe4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x90>
        currentMovieOffset += chunkSize;
90001042:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
90001044:	2d00      	cmp	r5, #0
90001046:	d1dd      	bne.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
90001048:	e7db      	b.n	90001002 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xae>
            currentMovieOffset += 8;
9000104a:	f101 0708 	add.w	r7, r1, #8
9000104e:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001050:	b1f0      	cbz	r0, 90001090 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x13c>
        if (length > aviBufferLength)
90001052:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90001054:	429d      	cmp	r5, r3
90001056:	d824      	bhi.n	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90001058:	6803      	ldr	r3, [r0, #0]
9000105a:	4639      	mov	r1, r7
9000105c:	68db      	ldr	r3, [r3, #12]
9000105e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001060:	6b20      	ldr	r0, [r4, #48]	; 0x30
90001062:	462a      	mov	r2, r5
90001064:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001066:	6803      	ldr	r3, [r0, #0]
90001068:	691b      	ldr	r3, [r3, #16]
9000106a:	4798      	blx	r3
9000106c:	b910      	cbnz	r0, 90001074 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
9000106e:	230d      	movs	r3, #13
90001070:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90001074:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001076:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001078:	b126      	cbz	r6, 90001084 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x130>
9000107a:	4633      	mov	r3, r6
9000107c:	462a      	mov	r2, r5
9000107e:	4620      	mov	r0, r4
90001080:	f7ff fcae 	bl	900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001084:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001088:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
9000108a:	442a      	add	r2, r5
            frameNumber++;
9000108c:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
9000108e:	e7b9      	b.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
    return movieData + offset;
90001090:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90001092:	4439      	add	r1, r7
90001094:	e7f0      	b.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x124>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001096:	4b07      	ldr	r3, [pc, #28]	; (900010b4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>)
90001098:	21a9      	movs	r1, #169	; 0xa9
9000109a:	4a07      	ldr	r2, [pc, #28]	; (900010b8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x164>)
9000109c:	4807      	ldr	r0, [pc, #28]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
9000109e:	f026 fff7 	bl	90028090 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010a2:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900010a4:	4b06      	ldr	r3, [pc, #24]	; (900010c0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x16c>)
900010a6:	4a07      	ldr	r2, [pc, #28]	; (900010c4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x170>)
900010a8:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010aa:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
900010ae:	4803      	ldr	r0, [pc, #12]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
900010b0:	f026 ffee 	bl	90028090 <__assert_func>
900010b4:	900294e8 	.word	0x900294e8
900010b8:	90029568 	.word	0x90029568
900010bc:	90029440 	.word	0x90029440
900010c0:	90029490 	.word	0x90029490
900010c4:	900294a4 	.word	0x900294a4

900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010c8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010ca:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010cc:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010ce:	4b0e      	ldr	r3, [pc, #56]	; (90001108 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
900010d0:	2001      	movs	r0, #1
900010d2:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010d4:	63e2      	str	r2, [r4, #60]	; 0x3c
900010d6:	6023      	str	r3, [r4, #0]
900010d8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010dc:	e9c4 2205 	strd	r2, r2, [r4, #20]
900010e0:	e9c4 2207 	strd	r2, r2, [r4, #28]
900010e4:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010e8:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
900010ec:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
900010f0:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
900010f4:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
900010f8:	f00d fb1a 	bl	9000e730 <osSemaphoreNew>
900010fc:	4b03      	ldr	r3, [pc, #12]	; (9000110c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
900010fe:	4602      	mov	r2, r0
}
90001100:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001102:	601a      	str	r2, [r3, #0]
}
90001104:	bd10      	pop	{r4, pc}
90001106:	bf00      	nop
90001108:	9002968c 	.word	0x9002968c
9000110c:	24005bd4 	.word	0x24005bd4

90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001114:	2100      	movs	r1, #0
    if (reader != 0)
90001116:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
90001118:	b083      	sub	sp, #12
9000111a:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000111c:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000111e:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
90001122:	2e00      	cmp	r6, #0
90001124:	f000 81aa 	beq.w	9000147c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>
        if (length > aviBufferLength)
90001128:	6b83      	ldr	r3, [r0, #56]	; 0x38
9000112a:	2b47      	cmp	r3, #71	; 0x47
9000112c:	f240 8202 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001130:	6833      	ldr	r3, [r6, #0]
90001132:	4630      	mov	r0, r6
90001134:	68db      	ldr	r3, [r3, #12]
90001136:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001138:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000113a:	2248      	movs	r2, #72	; 0x48
9000113c:	6b69      	ldr	r1, [r5, #52]	; 0x34
9000113e:	6803      	ldr	r3, [r0, #0]
90001140:	691b      	ldr	r3, [r3, #16]
90001142:	4798      	blx	r3
90001144:	2800      	cmp	r0, #0
90001146:	f000 80ce 	beq.w	900012e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
9000114a:	2300      	movs	r3, #0
    if (reader != 0)
9000114c:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000114e:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
90001150:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
90001152:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
90001154:	2e00      	cmp	r6, #0
90001156:	f000 8192 	beq.w	9000147e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000115a:	f8d5 8034 	ldr.w	r8, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000115e:	2204      	movs	r2, #4
90001160:	49be      	ldr	r1, [pc, #760]	; (9000145c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x34c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001162:	eb08 0b07 	add.w	fp, r8, r7
    return strncmp(src, str, num);
90001166:	4658      	mov	r0, fp
90001168:	f027 fa22 	bl	900285b0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000116c:	2800      	cmp	r0, #0
9000116e:	f040 81ea 	bne.w	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001172:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001176:	2204      	movs	r2, #4
90001178:	49b9      	ldr	r1, [pc, #740]	; (90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>)
    currentMovieOffset += 8;
9000117a:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000117c:	4440      	add	r0, r8
9000117e:	f027 fa17 	bl	900285b0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001182:	2800      	cmp	r0, #0
90001184:	f040 81fa 	bne.w	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
90001188:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
9000118c:	2204      	movs	r2, #4
9000118e:	49b5      	ldr	r1, [pc, #724]	; (90001464 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x354>)
90001190:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
90001194:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
90001198:	f027 fa0a 	bl	900285b0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000119c:	9001      	str	r0, [sp, #4]
9000119e:	2800      	cmp	r0, #0
900011a0:	f040 81e2 	bne.w	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a4:	f89b 4012 	ldrb.w	r4, [fp, #18]
900011a8:	f89b 2011 	ldrb.w	r2, [fp, #17]
900011ac:	0424      	lsls	r4, r4, #16
900011ae:	f89b 3013 	ldrb.w	r3, [fp, #19]
900011b2:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
900011b6:	f89b 2010 	ldrb.w	r2, [fp, #16]
900011ba:	4314      	orrs	r4, r2
    assert(aviListSize);
900011bc:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
900011c0:	f000 81cb 	beq.w	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900011c4:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900011c8:	2204      	movs	r2, #4
900011ca:	49a7      	ldr	r1, [pc, #668]	; (90001468 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x358>)
900011cc:	4440      	add	r0, r8
900011ce:	f027 f9ef 	bl	900285b0 <strncmp>
    if (compare(offset, "hdrl", 4))
900011d2:	2800      	cmp	r0, #0
900011d4:	f000 808b 	beq.w	900012ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011d8:	2306      	movs	r3, #6
        foundFrame = false;
900011da:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
900011de:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011e2:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011e6:	4440      	add	r0, r8
    return strncmp(src, str, num);
900011e8:	2204      	movs	r2, #4
900011ea:	49a0      	ldr	r1, [pc, #640]	; (9000146c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
900011ec:	f027 f9e0 	bl	900285b0 <strncmp>
    if (compare(offset, "avih", 4))
900011f0:	2800      	cmp	r0, #0
900011f2:	f000 8085 	beq.w	90001300 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1f0>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
900011f6:	2307      	movs	r3, #7
900011f8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900011fc:	4454      	add	r4, sl
900011fe:	3408      	adds	r4, #8
    if (reader != 0)
90001200:	f1b9 0f00 	cmp.w	r9, #0
90001204:	d015      	beq.n	90001232 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
90001206:	6bab      	ldr	r3, [r5, #56]	; 0x38
90001208:	2b0b      	cmp	r3, #11
9000120a:	f240 8193 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
9000120e:	f8d9 3000 	ldr.w	r3, [r9]
90001212:	4621      	mov	r1, r4
90001214:	4648      	mov	r0, r9
90001216:	68db      	ldr	r3, [r3, #12]
90001218:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000121a:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000121c:	220c      	movs	r2, #12
9000121e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001220:	6803      	ldr	r3, [r0, #0]
90001222:	691b      	ldr	r3, [r3, #16]
90001224:	4798      	blx	r3
90001226:	b910      	cbnz	r0, 9000122e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
90001228:	230d      	movs	r3, #13
9000122a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
9000122e:	6b2e      	ldr	r6, [r5, #48]	; 0x30
90001230:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
90001232:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
90001236:	4f8e      	ldr	r7, [pc, #568]	; (90001470 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001238:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
9000123c:	2e00      	cmp	r6, #0
9000123e:	d041      	beq.n	900012c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001240:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
90001242:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001244:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
90001246:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001248:	eba8 0303 	sub.w	r3, r8, r3
9000124c:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000124e:	f027 f9af 	bl	900285b0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001252:	2800      	cmp	r0, #0
90001254:	d03e      	beq.n	900012d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
90001256:	f1b9 0f00 	cmp.w	r9, #0
9000125a:	d13e      	bne.n	900012da <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
9000125c:	6aab      	ldr	r3, [r5, #40]	; 0x28
9000125e:	42a3      	cmp	r3, r4
90001260:	f240 80a7 	bls.w	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001264:	3404      	adds	r4, #4
    if (reader != 0)
90001266:	2e00      	cmp	r6, #0
90001268:	d046      	beq.n	900012f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
9000126a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
9000126c:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001270:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
90001272:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001274:	eb01 0204 	add.w	r2, r1, r4
90001278:	5d09      	ldrb	r1, [r1, r4]
9000127a:	7894      	ldrb	r4, [r2, #2]
9000127c:	7850      	ldrb	r0, [r2, #1]
9000127e:	ea4f 4404 	mov.w	r4, r4, lsl #16
90001282:	78d2      	ldrb	r2, [r2, #3]
90001284:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001288:	ea44 0401 	orr.w	r4, r4, r1
9000128c:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
90001290:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001292:	f240 814f 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001296:	6833      	ldr	r3, [r6, #0]
90001298:	4621      	mov	r1, r4
9000129a:	4630      	mov	r0, r6
9000129c:	68db      	ldr	r3, [r3, #12]
9000129e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900012a0:	6b28      	ldr	r0, [r5, #48]	; 0x30
900012a2:	220c      	movs	r2, #12
900012a4:	6b69      	ldr	r1, [r5, #52]	; 0x34
900012a6:	6803      	ldr	r3, [r0, #0]
900012a8:	691b      	ldr	r3, [r3, #16]
900012aa:	4798      	blx	r3
900012ac:	b910      	cbnz	r0, 900012b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
900012ae:	230d      	movs	r3, #13
900012b0:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012b4:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012b6:	f104 0808 	add.w	r8, r4, #8
900012ba:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012be:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900012c0:	2e00      	cmp	r6, #0
900012c2:	d1bd      	bne.n	90001240 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
900012c4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
900012c6:	2204      	movs	r2, #4
900012c8:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
900012ca:	4440      	add	r0, r8
    return strncmp(src, str, num);
900012cc:	f027 f970 	bl	900285b0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012d0:	2800      	cmp	r0, #0
900012d2:	d1c0      	bne.n	90001256 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
900012d4:	f1b9 0f00 	cmp.w	r9, #0
900012d8:	d06b      	beq.n	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900012da:	230a      	movs	r3, #10
900012dc:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900012e0:	b003      	add	sp, #12
900012e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012e6:	230d      	movs	r3, #13
900012e8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900012ec:	e72d      	b.n	9000114a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
900012ee:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900012f2:	f04f 0b01 	mov.w	fp, #1
900012f6:	e776      	b.n	900011e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        listOffset += listSize;
900012f8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900012fa:	591c      	ldr	r4, [r3, r4]
900012fc:	4444      	add	r4, r8
    return movieData + offset;
900012fe:	e79b      	b.n	90001238 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
90001300:	f1bb 0f00 	cmp.w	fp, #0
90001304:	f43f af7a 	beq.w	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001308:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
9000130c:	f1b9 0f00 	cmp.w	r9, #0
90001310:	f000 80f4 	beq.w	900014fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3ec>
        const uint32_t index = offset - aviBufferStartOffset;
90001314:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001316:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001318:	1ac9      	subs	r1, r1, r3
9000131a:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000131e:	f8df c158 	ldr.w	ip, [pc, #344]	; 90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001322:	f812 8001 	ldrb.w	r8, [r2, r1]
90001326:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
9000132a:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
9000132e:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
90001332:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001334:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
90001338:	4439      	add	r1, r7
9000133a:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000133c:	f89e 3002 	ldrb.w	r3, [lr, #2]
90001340:	f89e e003 	ldrb.w	lr, [lr, #3]
90001344:	041b      	lsls	r3, r3, #16
90001346:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
9000134a:	ea43 0308 	orr.w	r3, r3, r8
9000134e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001352:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001356:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000135a:	099b      	lsrs	r3, r3, #6
9000135c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000135e:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001362:	f89c 8001 	ldrb.w	r8, [ip, #1]
90001366:	041b      	lsls	r3, r3, #16
90001368:	f812 e000 	ldrb.w	lr, [r2, r0]
9000136c:	f89c c003 	ldrb.w	ip, [ip, #3]
90001370:	1850      	adds	r0, r2, r1
90001372:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001376:	ea43 030e 	orr.w	r3, r3, lr
9000137a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000137e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001380:	7883      	ldrb	r3, [r0, #2]
90001382:	f890 c001 	ldrb.w	ip, [r0, #1]
90001386:	041b      	lsls	r3, r3, #16
90001388:	5c51      	ldrb	r1, [r2, r1]
9000138a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000138e:	430b      	orrs	r3, r1
90001390:	78c1      	ldrb	r1, [r0, #3]
90001392:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001396:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001398:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000139a:	788b      	ldrb	r3, [r1, #2]
9000139c:	7848      	ldrb	r0, [r1, #1]
9000139e:	041b      	lsls	r3, r3, #16
900013a0:	5dd2      	ldrb	r2, [r2, r7]
900013a2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900013a6:	4313      	orrs	r3, r2
900013a8:	78ca      	ldrb	r2, [r1, #3]
900013aa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900013ae:	612b      	str	r3, [r5, #16]
900013b0:	e724      	b.n	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b2:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013b6:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b8:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
900013ba:	2e00      	cmp	r6, #0
900013bc:	f000 80b2 	beq.w	90001524 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
        const uint32_t index = offset - aviBufferStartOffset;
900013c0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
900013c2:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
900013c4:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c8:	f104 0c02 	add.w	ip, r4, #2
900013cc:	1c67      	adds	r7, r4, #1
900013ce:	f811 e004 	ldrb.w	lr, [r1, r4]
900013d2:	1ce0      	adds	r0, r4, #3
900013d4:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
900013d8:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013da:	f811 9007 	ldrb.w	r9, [r1, r7]
900013de:	ea4f 4303 	mov.w	r3, r3, lsl #16
900013e2:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900013e6:	ea43 030e 	orr.w	r3, r3, lr
900013ea:	f811 e000 	ldrb.w	lr, [r1, r0]
900013ee:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013f2:	4443      	add	r3, r8
900013f4:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013f6:	f811 300c 	ldrb.w	r3, [r1, ip]
900013fa:	f811 c007 	ldrb.w	ip, [r1, r7]
900013fe:	5d0f      	ldrb	r7, [r1, r4]
90001400:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001404:	5c09      	ldrb	r1, [r1, r0]
90001406:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
9000140a:	ea44 0407 	orr.w	r4, r4, r7
9000140e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001412:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001414:	f240 808e 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001418:	6833      	ldr	r3, [r6, #0]
9000141a:	4621      	mov	r1, r4
9000141c:	4630      	mov	r0, r6
9000141e:	68db      	ldr	r3, [r3, #12]
90001420:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001422:	6b28      	ldr	r0, [r5, #48]	; 0x30
90001424:	2204      	movs	r2, #4
90001426:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001428:	6803      	ldr	r3, [r0, #0]
9000142a:	691b      	ldr	r3, [r3, #16]
9000142c:	4798      	blx	r3
9000142e:	2800      	cmp	r0, #0
90001430:	d05a      	beq.n	900014e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d8>
    if (reader != 0)
90001432:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
90001434:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90001436:	2b00      	cmp	r3, #0
90001438:	f000 80aa 	beq.w	90001590 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x480>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000143c:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000143e:	2204      	movs	r2, #4
90001440:	490c      	ldr	r1, [pc, #48]	; (90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
90001442:	f027 f8b5 	bl	900285b0 <strncmp>
    if (!compare(listOffset, "idx1", 4))
90001446:	2800      	cmp	r0, #0
90001448:	d166      	bne.n	90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
    frameNumber = 1; /* next frame number is 1 */
9000144a:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
9000144c:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
9000144e:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001450:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001452:	622b      	str	r3, [r5, #32]
}
90001454:	b003      	add	sp, #12
90001456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000145a:	bf00      	nop
9000145c:	900295c4 	.word	0x900295c4
90001460:	9002967c 	.word	0x9002967c
90001464:	90029674 	.word	0x90029674
90001468:	9002966c 	.word	0x9002966c
9000146c:	90029654 	.word	0x90029654
90001470:	9002965c 	.word	0x9002965c
90001474:	90029664 	.word	0x90029664
90001478:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000147c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000147e:	f8d5 802c 	ldr.w	r8, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001482:	2204      	movs	r2, #4
90001484:	4944      	ldr	r1, [pc, #272]	; (90001598 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x488>)
        src = (const char*)movieData + offset;
90001486:	eb08 0407 	add.w	r4, r8, r7
    return strncmp(src, str, num);
9000148a:	4620      	mov	r0, r4
9000148c:	f027 f890 	bl	900285b0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001490:	2800      	cmp	r0, #0
90001492:	d158      	bne.n	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001494:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001498:	2204      	movs	r2, #4
9000149a:	4940      	ldr	r1, [pc, #256]	; (9000159c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x48c>)
    currentMovieOffset += 8;
9000149c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000149e:	4440      	add	r0, r8
900014a0:	f027 f886 	bl	900285b0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900014a4:	2800      	cmp	r0, #0
900014a6:	d169      	bne.n	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
900014a8:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
900014ac:	2204      	movs	r2, #4
900014ae:	493c      	ldr	r1, [pc, #240]	; (900015a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x490>)
900014b0:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
900014b4:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
900014b8:	f027 f87a 	bl	900285b0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900014bc:	4683      	mov	fp, r0
900014be:	2800      	cmp	r0, #0
900014c0:	d152      	bne.n	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
900014c2:	6924      	ldr	r4, [r4, #16]
    assert(aviListSize);
900014c4:	2c00      	cmp	r4, #0
900014c6:	d048      	beq.n	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900014c8:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900014cc:	2204      	movs	r2, #4
900014ce:	4935      	ldr	r1, [pc, #212]	; (900015a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x494>)
900014d0:	4440      	add	r0, r8
900014d2:	f027 f86d 	bl	900285b0 <strncmp>
    if (compare(offset, "hdrl", 4))
900014d6:	b958      	cbnz	r0, 900014f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3e0>
    offset += 4;
900014d8:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014dc:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900014e0:	4440      	add	r0, r8
900014e2:	f04f 0900 	mov.w	r9, #0
900014e6:	e67f      	b.n	900011e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900014e8:	230d      	movs	r3, #13
900014ea:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900014ee:	e7a0      	b.n	90001432 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x322>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f0:	2306      	movs	r3, #6
    offset += 4;
900014f2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
900014fa:	e7f1      	b.n	900014e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d0>
900014fc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900014fe:	585a      	ldr	r2, [r3, r1]
90001500:	443b      	add	r3, r7
90001502:	4929      	ldr	r1, [pc, #164]	; (900015a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x498>)
90001504:	fba1 1202 	umull	r1, r2, r1, r2
90001508:	0992      	lsrs	r2, r2, #6
9000150a:	606a      	str	r2, [r5, #4]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
        videoInfo.number_of_frames = getU32(offset + 16);
9000150e:	60aa      	str	r2, [r5, #8]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001510:	6c1a      	ldr	r2, [r3, #64]	; 0x40
        videoInfo.frame_width = getU32(offset + 32);
90001512:	60ea      	str	r2, [r5, #12]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001516:	e74a      	b.n	900013ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29e>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001518:	230b      	movs	r3, #11
9000151a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000151e:	b003      	add	sp, #12
90001520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90001524:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001526:	5903      	ldr	r3, [r0, r4]
90001528:	4443      	add	r3, r8
9000152a:	626b      	str	r3, [r5, #36]	; 0x24
    listOffset += listSize;
9000152c:	5904      	ldr	r4, [r0, r4]
9000152e:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
90001530:	4420      	add	r0, r4
90001532:	e784      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001534:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001536:	4b1d      	ldr	r3, [pc, #116]	; (900015ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x49c>)
90001538:	4a1d      	ldr	r2, [pc, #116]	; (900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a0>)
9000153a:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000153c:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90001540:	481c      	ldr	r0, [pc, #112]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001542:	f026 fda5 	bl	90028090 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
90001546:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001548:	4b1b      	ldr	r3, [pc, #108]	; (900015b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
9000154a:	4a1c      	ldr	r2, [pc, #112]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000154c:	f240 1125 	movw	r1, #293	; 0x125
        lastError = AVI_ERROR_NOT_RIFF;
90001550:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
90001554:	4817      	ldr	r0, [pc, #92]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001556:	f026 fd9b 	bl	90028090 <__assert_func>
    assert(aviListSize);
9000155a:	4b19      	ldr	r3, [pc, #100]	; (900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
9000155c:	f44f 719d 	mov.w	r1, #314	; 0x13a
90001560:	4a16      	ldr	r2, [pc, #88]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001562:	4814      	ldr	r0, [pc, #80]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001564:	f026 fd94 	bl	90028090 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001568:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
9000156a:	4b16      	ldr	r3, [pc, #88]	; (900015c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b4>)
9000156c:	4a13      	ldr	r2, [pc, #76]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000156e:	f44f 719a 	mov.w	r1, #308	; 0x134
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001572:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
90001576:	480f      	ldr	r0, [pc, #60]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001578:	f026 fd8a 	bl	90028090 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
9000157c:	2004      	movs	r0, #4
        assert(!"AVI header not found");
9000157e:	4b12      	ldr	r3, [pc, #72]	; (900015c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b8>)
90001580:	4a0e      	ldr	r2, [pc, #56]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001582:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001586:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
9000158a:	480a      	ldr	r0, [pc, #40]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
9000158c:	f026 fd80 	bl	90028090 <__assert_func>
        src = (const char*)movieData + offset;
90001590:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90001592:	4420      	add	r0, r4
90001594:	e753      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
90001596:	bf00      	nop
90001598:	900295c4 	.word	0x900295c4
9000159c:	9002967c 	.word	0x9002967c
900015a0:	90029674 	.word	0x90029674
900015a4:	9002966c 	.word	0x9002966c
900015a8:	10624dd3 	.word	0x10624dd3
900015ac:	90029490 	.word	0x90029490
900015b0:	900294a4 	.word	0x900294a4
900015b4:	90029440 	.word	0x90029440
900015b8:	900295cc 	.word	0x900295cc
900015bc:	900295e8 	.word	0x900295e8
900015c0:	90029648 	.word	0x90029648
900015c4:	90029630 	.word	0x90029630
900015c8:	90029618 	.word	0x90029618

900015cc <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900015cc:	b410      	push	{r4}
    reader = 0; /* not using reader */
900015ce:	2400      	movs	r4, #0
    movieLength = length;
900015d0:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
900015d4:	6304      	str	r4, [r0, #48]	; 0x30
}
900015d6:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900015da:	f7ff bd99 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900015de:	bf00      	nop

900015e0 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900015e0:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900015e2:	680b      	ldr	r3, [r1, #0]
{
900015e4:	4604      	mov	r4, r0
    movieData = 0;
900015e6:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900015e8:	4608      	mov	r0, r1
900015ea:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900015ec:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
900015f0:	4798      	blx	r3
900015f2:	4603      	mov	r3, r0
    readVideoHeader();
900015f4:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900015f6:	62a3      	str	r3, [r4, #40]	; 0x28
}
900015f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
900015fc:	f7ff bd88 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001600 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001600:	684b      	ldr	r3, [r1, #4]
90001602:	2b01      	cmp	r3, #1
90001604:	d015      	beq.n	90001632 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001606:	2b02      	cmp	r3, #2
90001608:	d00b      	beq.n	90001622 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
9000160a:	b94b      	cbnz	r3, 90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
9000160c:	68cb      	ldr	r3, [r1, #12]
9000160e:	0758      	lsls	r0, r3, #29
90001610:	d124      	bne.n	9000165c <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
90001612:	688b      	ldr	r3, [r1, #8]
90001614:	075a      	lsls	r2, r3, #29
90001616:	d003      	beq.n	90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001618:	f023 0307 	bic.w	r3, r3, #7
9000161c:	3308      	adds	r3, #8
9000161e:	608b      	str	r3, [r1, #8]
    }
90001620:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001622:	68cb      	ldr	r3, [r1, #12]
90001624:	071a      	lsls	r2, r3, #28
90001626:	d0f4      	beq.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001628:	f023 030f 	bic.w	r3, r3, #15
9000162c:	3310      	adds	r3, #16
9000162e:	60cb      	str	r3, [r1, #12]
90001630:	e7ef      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001632:	68cb      	ldr	r3, [r1, #12]
90001634:	071a      	lsls	r2, r3, #28
90001636:	d003      	beq.n	90001640 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001638:	f023 030f 	bic.w	r3, r3, #15
9000163c:	3310      	adds	r3, #16
9000163e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001640:	688a      	ldr	r2, [r1, #8]
90001642:	0710      	lsls	r0, r2, #28
90001644:	d003      	beq.n	9000164e <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001646:	f022 020f 	bic.w	r2, r2, #15
9000164a:	3210      	adds	r2, #16
9000164c:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
9000164e:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
90001650:	4905      	ldr	r1, [pc, #20]	; (90001668 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
90001652:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
90001654:	fb02 f303 	mul.w	r3, r2, r3
90001658:	600b      	str	r3, [r1, #0]
9000165a:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
9000165c:	f023 0307 	bic.w	r3, r3, #7
90001660:	3308      	adds	r3, #8
90001662:	60cb      	str	r3, [r1, #12]
90001664:	e7d5      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
90001666:	bf00      	nop
90001668:	24005bac 	.word	0x24005bac

9000166c <HAL_JPEG_GetDataCallback>:
    {
9000166c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
9000166e:	4c0c      	ldr	r4, [pc, #48]	; (900016a0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001670:	4a0c      	ldr	r2, [pc, #48]	; (900016a4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001672:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001674:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001676:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001678:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
9000167a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
9000167c:	d302      	bcc.n	90001684 <HAL_JPEG_GetDataCallback+0x18>
    }
9000167e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001682:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001684:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001686:	4b08      	ldr	r3, [pc, #32]	; (900016a8 <HAL_JPEG_GetDataCallback+0x3c>)
90001688:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000168a:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000168e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001690:	bf28      	it	cs
90001692:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
90001696:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000169a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000169c:	f009 bcac 	b.w	9000aff8 <HAL_JPEG_ConfigInputBuffer>
900016a0:	24005bc0 	.word	0x24005bc0
900016a4:	24005bcc 	.word	0x24005bcc
900016a8:	24005bc8 	.word	0x24005bc8

900016ac <HAL_JPEG_DataReadyCallback>:
    {
900016ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ae:	4c22      	ldr	r4, [pc, #136]	; (90001738 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
900016b0:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016b2:	4d22      	ldr	r5, [pc, #136]	; (9000173c <HAL_JPEG_DataReadyCallback+0x90>)
900016b4:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016b6:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
900016b8:	4921      	ldr	r1, [pc, #132]	; (90001740 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ba:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016bc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016c0:	4f20      	ldr	r7, [pc, #128]	; (90001744 <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
900016c2:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016c6:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016c8:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016ca:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016cc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
900016d0:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016d4:	6808      	ldr	r0, [r1, #0]
900016d6:	4410      	add	r0, r2
900016d8:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
900016da:	6821      	ldr	r1, [r4, #0]
900016dc:	3101      	adds	r1, #1
900016de:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016e0:	2101      	movs	r1, #1
900016e2:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900016e4:	6823      	ldr	r3, [r4, #0]
900016e6:	428b      	cmp	r3, r1
900016e8:	d901      	bls.n	900016ee <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
900016ea:	2300      	movs	r3, #0
900016ec:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
900016ee:	6823      	ldr	r3, [r4, #0]
900016f0:	011b      	lsls	r3, r3, #4
900016f2:	5ceb      	ldrb	r3, [r5, r3]
900016f4:	b983      	cbnz	r3, 90001718 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900016f6:	6823      	ldr	r3, [r4, #0]
900016f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900016fc:	4630      	mov	r0, r6
900016fe:	eb05 1503 	add.w	r5, r5, r3, lsl #4
90001702:	01d2      	lsls	r2, r2, #7
90001704:	6869      	ldr	r1, [r5, #4]
90001706:	f009 fc7b 	bl	9000b000 <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
9000170a:	4b0f      	ldr	r3, [pc, #60]	; (90001748 <HAL_JPEG_DataReadyCallback+0x9c>)
9000170c:	681b      	ldr	r3, [r3, #0]
9000170e:	7a1a      	ldrb	r2, [r3, #8]
90001710:	b90a      	cbnz	r2, 90001716 <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
90001712:	7a9b      	ldrb	r3, [r3, #10]
90001714:	b14b      	cbz	r3, 9000172a <HAL_JPEG_DataReadyCallback+0x7e>
    }
90001716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001718:	2102      	movs	r1, #2
9000171a:	4630      	mov	r0, r6
9000171c:	f009 fc34 	bl	9000af88 <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
90001720:	4b0a      	ldr	r3, [pc, #40]	; (9000174c <HAL_JPEG_DataReadyCallback+0xa0>)
90001722:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001724:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
90001726:	6019      	str	r1, [r3, #0]
90001728:	e7e5      	b.n	900016f6 <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
9000172a:	4b09      	ldr	r3, [pc, #36]	; (90001750 <HAL_JPEG_DataReadyCallback+0xa4>)
9000172c:	6818      	ldr	r0, [r3, #0]
    }
9000172e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
90001732:	f00d b881 	b.w	9000e838 <osSemaphoreRelease>
90001736:	bf00      	nop
90001738:	24005bd0 	.word	0x24005bd0
9000173c:	24000008 	.word	0x24000008
90001740:	24005b94 	.word	0x24005b94
90001744:	24005b98 	.word	0x24005b98
90001748:	24005bb0 	.word	0x24005bb0
9000174c:	24005bc4 	.word	0x24005bc4
90001750:	24005bd4 	.word	0x24005bd4

90001754 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90001754:	b672      	cpsid	i
        while (1)
90001756:	e7fe      	b.n	90001756 <HAL_JPEG_ErrorCallback+0x2>

90001758 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90001758:	4b01      	ldr	r3, [pc, #4]	; (90001760 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000175a:	2201      	movs	r2, #1
9000175c:	601a      	str	r2, [r3, #0]
    }
9000175e:	4770      	bx	lr
90001760:	24005bbc 	.word	0x24005bbc

90001764 <DMA2D_CopyBuffer>:
  * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
  * @param job: External job reference
  * @retval None
  */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90001764:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001766:	491b      	ldr	r1, [pc, #108]	; (900017d4 <DMA2D_CopyBuffer+0x70>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001768:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176a:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000176c:	4c1a      	ldr	r4, [pc, #104]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176e:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001770:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001772:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001774:	4e19      	ldr	r6, [pc, #100]	; (900017dc <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001776:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
9000177a:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000177e:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001780:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001782:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001786:	68cb      	ldr	r3, [r1, #12]
90001788:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000178c:	690e      	ldr	r6, [r1, #16]
9000178e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001792:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001794:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001798:	d316      	bcc.n	900017c8 <DMA2D_CopyBuffer+0x64>
    {
        WRITE_REG(DMA2D->NLR, (JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
9000179a:	6889      	ldr	r1, [r1, #8]
9000179c:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
900017a0:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017a2:	490f      	ldr	r1, [pc, #60]	; (900017e0 <DMA2D_CopyBuffer+0x7c>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017a4:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017a8:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
900017aa:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017ac:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017ae:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017b0:	4411      	add	r1, r2
900017b2:	4a09      	ldr	r2, [pc, #36]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
900017b4:	4461      	add	r1, ip
900017b6:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017b8:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017ba:	490a      	ldr	r1, [pc, #40]	; (900017e4 <DMA2D_CopyBuffer+0x80>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017bc:	4b0a      	ldr	r3, [pc, #40]	; (900017e8 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGOR, 0);
900017be:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017c0:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017c2:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017c4:	6013      	str	r3, [r2, #0]
}
900017c6:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
900017c8:	0519      	lsls	r1, r3, #20
900017ca:	f041 0110 	orr.w	r1, r1, #16
900017ce:	6461      	str	r1, [r4, #68]	; 0x44
900017d0:	e7e7      	b.n	900017a2 <DMA2D_CopyBuffer+0x3e>
900017d2:	bf00      	nop
900017d4:	24005b98 	.word	0x24005b98
900017d8:	52001000 	.word	0x52001000
900017dc:	24005bac 	.word	0x24005bac
900017e0:	24005bb4 	.word	0x24005bb4
900017e4:	ff09000b 	.word	0xff09000b
900017e8:	00010201 	.word	0x00010201

900017ec <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
900017ec:	4b0c      	ldr	r3, [pc, #48]	; (90001820 <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
900017ee:	2100      	movs	r1, #0
900017f0:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
900017f2:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
900017f4:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
900017f6:	3201      	adds	r2, #1
900017f8:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900017fa:	681a      	ldr	r2, [r3, #0]
900017fc:	2a01      	cmp	r2, #1
900017fe:	d900      	bls.n	90001802 <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90001800:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001802:	4b08      	ldr	r3, [pc, #32]	; (90001824 <DMA2D_ExternalJobCompleted+0x38>)
90001804:	4908      	ldr	r1, [pc, #32]	; (90001828 <DMA2D_ExternalJobCompleted+0x3c>)
90001806:	681b      	ldr	r3, [r3, #0]
90001808:	68c9      	ldr	r1, [r1, #12]
9000180a:	68c2      	ldr	r2, [r0, #12]
9000180c:	1a5b      	subs	r3, r3, r1
9000180e:	429a      	cmp	r2, r3
90001810:	d302      	bcc.n	90001818 <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90001812:	4b06      	ldr	r3, [pc, #24]	; (9000182c <DMA2D_ExternalJobCompleted+0x40>)
90001814:	2201      	movs	r2, #1
90001816:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
90001818:	4b05      	ldr	r3, [pc, #20]	; (90001830 <DMA2D_ExternalJobCompleted+0x44>)
9000181a:	6818      	ldr	r0, [r3, #0]
9000181c:	f00d b80c 	b.w	9000e838 <osSemaphoreRelease>
90001820:	24005b90 	.word	0x24005b90
90001824:	24005bac 	.word	0x24005bac
90001828:	24005b98 	.word	0x24005b98
9000182c:	24005b8c 	.word	0x24005b8c
90001830:	24005bd4 	.word	0x24005bd4

90001834 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001834:	2101      	movs	r1, #1
90001836:	2200      	movs	r2, #0
{
90001838:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000183a:	4608      	mov	r0, r1
9000183c:	f00c ff78 	bl	9000e730 <osSemaphoreNew>
90001840:	4b0b      	ldr	r3, [pc, #44]	; (90001870 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90001842:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001844:	b140      	cbz	r0, 90001858 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90001846:	2200      	movs	r2, #0
90001848:	2104      	movs	r1, #4
9000184a:	2001      	movs	r0, #1
9000184c:	f00d f820 	bl	9000e890 <osMessageQueueNew>
90001850:	4b08      	ldr	r3, [pc, #32]	; (90001874 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90001852:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001854:	b130      	cbz	r0, 90001864 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90001856:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001858:	4b07      	ldr	r3, [pc, #28]	; (90001878 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000185a:	2128      	movs	r1, #40	; 0x28
9000185c:	4a07      	ldr	r2, [pc, #28]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000185e:	4808      	ldr	r0, [pc, #32]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90001860:	f026 fc16 	bl	90028090 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001864:	4b07      	ldr	r3, [pc, #28]	; (90001884 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90001866:	212c      	movs	r1, #44	; 0x2c
90001868:	4a04      	ldr	r2, [pc, #16]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000186a:	4805      	ldr	r0, [pc, #20]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
9000186c:	f026 fc10 	bl	90028090 <__assert_func>
90001870:	24005bdc 	.word	0x24005bdc
90001874:	24005bd8 	.word	0x24005bd8
90001878:	900296c8 	.word	0x900296c8
9000187c:	90029714 	.word	0x90029714
90001880:	90029744 	.word	0x90029744
90001884:	90029788 	.word	0x90029788

90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90001888:	4b02      	ldr	r3, [pc, #8]	; (90001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000188a:	f04f 31ff 	mov.w	r1, #4294967295
9000188e:	6818      	ldr	r0, [r3, #0]
90001890:	f00c bf9e 	b.w	9000e7d0 <osSemaphoreAcquire>
90001894:	24005bdc 	.word	0x24005bdc

90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90001898:	4b01      	ldr	r3, [pc, #4]	; (900018a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000189a:	6818      	ldr	r0, [r3, #0]
9000189c:	f00c bfcc 	b.w	9000e838 <osSemaphoreRelease>
900018a0:	24005bdc 	.word	0x24005bdc

900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
900018a4:	4b02      	ldr	r3, [pc, #8]	; (900018b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
900018a6:	2100      	movs	r1, #0
900018a8:	6818      	ldr	r0, [r3, #0]
900018aa:	f00c bf91 	b.w	9000e7d0 <osSemaphoreAcquire>
900018ae:	bf00      	nop
900018b0:	24005bdc 	.word	0x24005bdc

900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
900018b4:	4b01      	ldr	r3, [pc, #4]	; (900018bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
900018b6:	6818      	ldr	r0, [r3, #0]
900018b8:	f00c bfbe 	b.w	9000e838 <osSemaphoreRelease>
900018bc:	24005bdc 	.word	0x24005bdc

900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
900018c0:	4803      	ldr	r0, [pc, #12]	; (900018d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
900018c2:	2300      	movs	r3, #0
900018c4:	4903      	ldr	r1, [pc, #12]	; (900018d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
900018c6:	461a      	mov	r2, r3
900018c8:	6800      	ldr	r0, [r0, #0]
900018ca:	f00d b81f 	b.w	9000e90c <osMessageQueuePut>
900018ce:	bf00      	nop
900018d0:	24005bd8 	.word	0x24005bd8
900018d4:	24000028 	.word	0x24000028

900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900018d8:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018da:	2300      	movs	r3, #0
{
900018dc:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018de:	4c07      	ldr	r4, [pc, #28]	; (900018fc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900018e0:	461a      	mov	r2, r3
900018e2:	a901      	add	r1, sp, #4
900018e4:	6820      	ldr	r0, [r4, #0]
900018e6:	f00d f853 	bl	9000e990 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900018ea:	f04f 33ff 	mov.w	r3, #4294967295
900018ee:	2200      	movs	r2, #0
900018f0:	a901      	add	r1, sp, #4
900018f2:	6820      	ldr	r0, [r4, #0]
900018f4:	f00d f84c 	bl	9000e990 <osMessageQueueGet>
}
900018f8:	b002      	add	sp, #8
900018fa:	bd10      	pop	{r4, pc}
900018fc:	24005bd8 	.word	0x24005bd8

90001900 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90001900:	6803      	ldr	r3, [r0, #0]
90001902:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001904:	4718      	bx	r3
90001906:	bf00      	nop

90001908 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90001908:	2001      	movs	r0, #1
9000190a:	4770      	bx	lr

9000190c <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
9000190c:	4905      	ldr	r1, [pc, #20]	; (90001924 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000190e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001912:	4b05      	ldr	r3, [pc, #20]	; (90001928 <_ZN8STM32DMAD1Ev+0x1c>)
90001914:	6001      	str	r1, [r0, #0]
90001916:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000191a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000191e:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90001922:	4770      	bx	lr
90001924:	90029928 	.word	0x90029928
90001928:	e000e100 	.word	0xe000e100

9000192c <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000192c:	4b0f      	ldr	r3, [pc, #60]	; (9000196c <_ZN8STM32DMA10initializeEv+0x40>)
{
9000192e:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001930:	490f      	ldr	r1, [pc, #60]	; (90001970 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001932:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001936:	480f      	ldr	r0, [pc, #60]	; (90001974 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001938:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
9000193c:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000193e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90001942:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90001946:	f002 0210 	and.w	r2, r2, #16
9000194a:	9201      	str	r2, [sp, #4]
9000194c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000194e:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001950:	f042 0210 	orr.w	r2, r2, #16
90001954:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001956:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001958:	f022 0210 	bic.w	r2, r2, #16
9000195c:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000195e:	4b06      	ldr	r3, [pc, #24]	; (90001978 <_ZN8STM32DMA10initializeEv+0x4c>)
90001960:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001964:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90001966:	b002      	add	sp, #8
90001968:	4770      	bx	lr
9000196a:	bf00      	nop
9000196c:	58024400 	.word	0x58024400
90001970:	240094f8 	.word	0x240094f8
90001974:	90001d59 	.word	0x90001d59
90001978:	e000e100 	.word	0xe000e100

9000197c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
9000197c:	f240 30ef 	movw	r0, #1007	; 0x3ef
90001980:	4770      	bx	lr
90001982:	bf00      	nop

90001984 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90001984:	4909      	ldr	r1, [pc, #36]	; (900019ac <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001986:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000198a:	4b09      	ldr	r3, [pc, #36]	; (900019b0 <_ZN8STM32DMAD0Ev+0x2c>)
9000198c:	b510      	push	{r4, lr}
9000198e:	6001      	str	r1, [r0, #0]
90001990:	4604      	mov	r4, r0
90001992:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001996:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000199a:	f3bf 8f6f 	isb	sy
}
9000199e:	f640 51a8 	movw	r1, #3496	; 0xda8
900019a2:	f026 fb47 	bl	90028034 <_ZdlPvj>
900019a6:	4620      	mov	r0, r4
900019a8:	bd10      	pop	{r4, pc}
900019aa:	bf00      	nop
900019ac:	90029928 	.word	0x90029928
900019b0:	e000e100 	.word	0xe000e100

900019b4 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
900019b4:	b510      	push	{r4, lr}
900019b6:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
900019b8:	f04f 31ff 	mov.w	r1, #4294967295
900019bc:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
900019c0:	f00c fe70 	bl	9000e6a4 <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019c4:	6860      	ldr	r0, [r4, #4]
900019c6:	6803      	ldr	r3, [r0, #0]
900019c8:	681b      	ldr	r3, [r3, #0]
900019ca:	4798      	blx	r3
900019cc:	b908      	cbnz	r0, 900019d2 <_ZN8STM32DMA5startEv+0x1e>
900019ce:	7a63      	ldrb	r3, [r4, #9]
900019d0:	b963      	cbnz	r3, 900019ec <_ZN8STM32DMA5startEv+0x38>
        {
            started_by_external_job = false;
            execute();
        }
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
900019d2:	4915      	ldr	r1, [pc, #84]	; (90001a28 <_ZN8STM32DMA5startEv+0x74>)
900019d4:	4a15      	ldr	r2, [pc, #84]	; (90001a2c <_ZN8STM32DMA5startEv+0x78>)
900019d6:	680b      	ldr	r3, [r1, #0]
900019d8:	011b      	lsls	r3, r3, #4
900019da:	5cd3      	ldrb	r3, [r2, r3]
900019dc:	2b01      	cmp	r3, #1
900019de:	d014      	beq.n	90001a0a <_ZN8STM32DMA5startEv+0x56>
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
900019e0:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
900019e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
900019e8:	f00c be80 	b.w	9000e6ec <osMutexRelease>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019ec:	7a23      	ldrb	r3, [r4, #8]
900019ee:	2b00      	cmp	r3, #0
900019f0:	d1ef      	bne.n	900019d2 <_ZN8STM32DMA5startEv+0x1e>
            execute();
900019f2:	6822      	ldr	r2, [r4, #0]
900019f4:	4620      	mov	r0, r4
            started_by_external_job = false;
900019f6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
900019fa:	6a53      	ldr	r3, [r2, #36]	; 0x24
900019fc:	4798      	blx	r3
        MUTEX_UNLOCK(mutexIsRunning);
900019fe:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90001a02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001a06:	f00c be71 	b.w	9000e6ec <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
90001a0a:	7aa0      	ldrb	r0, [r4, #10]
90001a0c:	2800      	cmp	r0, #0
90001a0e:	d1e7      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a10:	7a20      	ldrb	r0, [r4, #8]
90001a12:	2800      	cmp	r0, #0
90001a14:	d1e4      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a16:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90001a18:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a1c:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90001a20:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a22:	f7ff fe9f 	bl	90001764 <DMA2D_CopyBuffer>
    }
90001a26:	e7db      	b.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a28:	24005b90 	.word	0x24005b90
90001a2c:	24000008 	.word	0x24000008

90001a30 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90001a30:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90001a34:	b510      	push	{r4, lr}
90001a36:	4604      	mov	r4, r0
        if (!started_by_external_job)
90001a38:	b953      	cbnz	r3, 90001a50 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90001a3a:	6803      	ldr	r3, [r0, #0]
90001a3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001a3e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a40:	491c      	ldr	r1, [pc, #112]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90001a42:	4a1d      	ldr	r2, [pc, #116]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001a44:	680b      	ldr	r3, [r1, #0]
90001a46:	011b      	lsls	r3, r3, #4
90001a48:	5cd3      	ldrb	r3, [r2, r3]
90001a4a:	2b01      	cmp	r3, #1
90001a4c:	d014      	beq.n	90001a78 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90001a4e:	bd10      	pop	{r4, pc}
        if (isRunning)
90001a50:	7a03      	ldrb	r3, [r0, #8]
90001a52:	bb2b      	cbnz	r3, 90001aa0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90001a54:	6860      	ldr	r0, [r4, #4]
90001a56:	6803      	ldr	r3, [r0, #0]
90001a58:	681b      	ldr	r3, [r3, #0]
90001a5a:	4798      	blx	r3
90001a5c:	4603      	mov	r3, r0
90001a5e:	2800      	cmp	r0, #0
90001a60:	d1f5      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a62:	7a62      	ldrb	r2, [r4, #9]
90001a64:	2a00      	cmp	r2, #0
90001a66:	d0f2      	beq.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90001a68:	6822      	ldr	r2, [r4, #0]
90001a6a:	4620      	mov	r0, r4
                started_by_external_job = false;
90001a6c:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001a70:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90001a76:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a78:	4810      	ldr	r0, [pc, #64]	; (90001abc <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90001a7a:	6800      	ldr	r0, [r0, #0]
90001a7c:	2800      	cmp	r0, #0
90001a7e:	d1e6      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a80:	7aa0      	ldrb	r0, [r4, #10]
90001a82:	2800      	cmp	r0, #0
90001a84:	d1e3      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a86:	7a20      	ldrb	r0, [r4, #8]
90001a88:	2800      	cmp	r0, #0
90001a8a:	d1e0      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a8c:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001a8e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001a92:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a94:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90001a98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a9c:	f7ff be62 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa0:	4904      	ldr	r1, [pc, #16]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90001aa2:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa4:	4b04      	ldr	r3, [pc, #16]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001aa6:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001aa8:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aaa:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001aae:	f7ff fe9d 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001ab2:	e7cf      	b.n	90001a54 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90001ab4:	24005b90 	.word	0x24005b90
90001ab8:	24000008 	.word	0x24000008
90001abc:	24005b8c 	.word	0x24005b8c

90001ac0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90001ac0:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90001ac2:	7f8b      	ldrb	r3, [r1, #30]
90001ac4:	2b0a      	cmp	r3, #10
90001ac6:	d83e      	bhi.n	90001b46 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90001ac8:	e8df f003 	tbb	[pc, r3]
90001acc:	3d2a063b 	.word	0x3d2a063b
90001ad0:	063d3d3d 	.word	0x063d3d3d
90001ad4:	0606      	.short	0x0606
90001ad6:	06          	.byte	0x06
90001ad7:	00          	.byte	0x00
90001ad8:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ada:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90001ade:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae0:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001ae2:	4b1c      	ldr	r3, [pc, #112]	; (90001b54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ae4:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae8:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001aec:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001aee:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001af0:	6908      	ldr	r0, [r1, #16]
90001af2:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001af4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001af6:	680d      	ldr	r5, [r1, #0]
90001af8:	2d08      	cmp	r5, #8
90001afa:	d013      	beq.n	90001b24 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90001afc:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001afe:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b00:	4c15      	ldr	r4, [pc, #84]	; (90001b58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90001b02:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90001b04:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001b06:	0a0a      	lsrs	r2, r1, #8
90001b08:	0948      	lsrs	r0, r1, #5
90001b0a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90001b0e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90001b12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90001b16:	4302      	orrs	r2, r0
90001b18:	430a      	orrs	r2, r1
90001b1a:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b1c:	601c      	str	r4, [r3, #0]
    }
}
90001b1e:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001b20:	2400      	movs	r4, #0
90001b22:	e7da      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b24:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b26:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001b28:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b2a:	4a0c      	ldr	r2, [pc, #48]	; (90001b5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90001b2c:	7f0c      	ldrb	r4, [r1, #28]
90001b2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b32:	4c0b      	ldr	r4, [pc, #44]	; (90001b60 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b34:	61da      	str	r2, [r3, #28]
90001b36:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001b38:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3a:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3c:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b3e:	601c      	str	r4, [r3, #0]
}
90001b40:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001b42:	2402      	movs	r4, #2
90001b44:	e7c9      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90001b46:	4b07      	ldr	r3, [pc, #28]	; (90001b64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90001b48:	2187      	movs	r1, #135	; 0x87
90001b4a:	4a07      	ldr	r2, [pc, #28]	; (90001b68 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90001b4c:	4807      	ldr	r0, [pc, #28]	; (90001b6c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90001b4e:	f026 fa9f 	bl	90028090 <__assert_func>
90001b52:	bf00      	nop
90001b54:	52001000 	.word	0x52001000
90001b58:	00030201 	.word	0x00030201
90001b5c:	00010009 	.word	0x00010009
90001b60:	00020201 	.word	0x00020201
90001b64:	900297cc 	.word	0x900297cc
90001b68:	900297e8 	.word	0x900297e8
90001b6c:	90029834 	.word	0x90029834

90001b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90001b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001b72:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90001b76:	f1be 0f0b 	cmp.w	lr, #11
90001b7a:	f200 80c1 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001b7e:	e8df f01e 	tbh	[pc, lr, lsl #1]
90001b82:	0063      	.short	0x0063
90001b84:	004c0065 	.word	0x004c0065
90001b88:	00bf00bf 	.word	0x00bf00bf
90001b8c:	00bf00bf 	.word	0x00bf00bf
90001b90:	000c000c 	.word	0x000c000c
90001b94:	000c000c 	.word	0x000c000c
90001b98:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90001b9a:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001b9c:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90001ba0:	f1bc 0f0b 	cmp.w	ip, #11
90001ba4:	f200 80ac 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001ba8:	e8df f00c 	tbb	[pc, ip]
90001bac:	aa0e4b52 	.word	0xaa0e4b52
90001bb0:	06aaaaaa 	.word	0x06aaaaaa
90001bb4:	06060606 	.word	0x06060606
    switch (format)
90001bb8:	f1ac 0307 	sub.w	r3, ip, #7
90001bbc:	2b03      	cmp	r3, #3
90001bbe:	f200 80a5 	bhi.w	90001d0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90001bc2:	2605      	movs	r6, #5
90001bc4:	2701      	movs	r7, #1
90001bc6:	e001      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001bc8:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001bca:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bcc:	8a8b      	ldrh	r3, [r1, #20]
90001bce:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd0:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd2:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bd4:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd6:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd8:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bdc:	4b52      	ldr	r3, [pc, #328]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001bde:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001be0:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001be2:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001be4:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001be6:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001be8:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001bea:	6908      	ldr	r0, [r1, #16]
90001bec:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001bee:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90001bf0:	680a      	ldr	r2, [r1, #0]
90001bf2:	2a80      	cmp	r2, #128	; 0x80
90001bf4:	d03b      	beq.n	90001c6e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90001bf6:	d812      	bhi.n	90001c1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90001bf8:	2a20      	cmp	r2, #32
90001bfa:	d02c      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001bfc:	2a40      	cmp	r2, #64	; 0x40
90001bfe:	d02a      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001c00:	2a04      	cmp	r2, #4
90001c02:	d169      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c04:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c06:	4949      	ldr	r1, [pc, #292]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c08:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001c0c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90001c10:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c12:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c14:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c16:	6019      	str	r1, [r3, #0]
}
90001c18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001c1a:	2500      	movs	r5, #0
90001c1c:	e7be      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90001c1e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90001c22:	d067      	beq.n	90001cf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90001c24:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90001c28:	d156      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c2a:	7f0c      	ldrb	r4, [r1, #28]
90001c2c:	4a40      	ldr	r2, [pc, #256]	; (90001d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90001c2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90001c32:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c34:	4a3d      	ldr	r2, [pc, #244]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001c36:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001c38:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c3a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c3c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c3e:	601a      	str	r2, [r3, #0]
}
90001c40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90001c42:	2601      	movs	r6, #1
90001c44:	4637      	mov	r7, r6
90001c46:	e7c1      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90001c48:	2502      	movs	r5, #2
90001c4a:	e7a7      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001c4c:	2501      	movs	r5, #1
90001c4e:	e7a5      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001c50:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001c52:	4637      	mov	r7, r6
90001c54:	e7ba      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c56:	7f0b      	ldrb	r3, [r1, #28]
90001c58:	4a33      	ldr	r2, [pc, #204]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c5a:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90001c5e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001c62:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c64:	4b31      	ldr	r3, [pc, #196]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c66:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c68:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c6a:	6013      	str	r3, [r2, #0]
}
90001c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001c6e:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001c70:	1d14      	adds	r4, r2, #4
90001c72:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c74:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90001c76:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c78:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90001c7c:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001c80:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c82:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c84:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001c86:	b9b1      	cbnz	r1, 90001cb6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c88:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90001c8a:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c8c:	69d8      	ldr	r0, [r3, #28]
90001c8e:	4a29      	ldr	r2, [pc, #164]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001c90:	3901      	subs	r1, #1
90001c92:	4002      	ands	r2, r0
90001c94:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001c98:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90001c9a:	4a23      	ldr	r2, [pc, #140]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c9c:	69d3      	ldr	r3, [r2, #28]
90001c9e:	f043 0320 	orr.w	r3, r3, #32
90001ca2:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001ca4:	69d3      	ldr	r3, [r2, #28]
90001ca6:	069b      	lsls	r3, r3, #26
90001ca8:	d4fc      	bmi.n	90001ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001caa:	2310      	movs	r3, #16
90001cac:	6093      	str	r3, [r2, #8]
            if (blend)
90001cae:	b324      	cbz	r4, 90001cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001cb0:	4b1e      	ldr	r3, [pc, #120]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001cb2:	6013      	str	r3, [r2, #0]
}
90001cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90001cb6:	2901      	cmp	r1, #1
90001cb8:	d12e      	bne.n	90001d18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cba:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90001cbc:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cbe:	69d8      	ldr	r0, [r3, #28]
90001cc0:	4a1c      	ldr	r2, [pc, #112]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001cc2:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90001cc6:	bf18      	it	ne
90001cc8:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cca:	4002      	ands	r2, r0
90001ccc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001cd0:	f042 0210 	orr.w	r2, r2, #16
90001cd4:	61da      	str	r2, [r3, #28]
                break;
90001cd6:	e7e0      	b.n	90001c9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cd8:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90001cda:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cdc:	4b12      	ldr	r3, [pc, #72]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001cde:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001ce2:	bf14      	ite	ne
90001ce4:	4a14      	ldrne	r2, [pc, #80]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001ce6:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cea:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001cee:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001cf0:	601a      	str	r2, [r3, #0]
}
90001cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cf4:	7f0c      	ldrb	r4, [r1, #28]
90001cf6:	4a11      	ldr	r2, [pc, #68]	; (90001d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90001cf8:	e799      	b.n	90001c2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001cfa:	4b0f      	ldr	r3, [pc, #60]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90001cfc:	6013      	str	r3, [r2, #0]
}
90001cfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90001d00:	4b0f      	ldr	r3, [pc, #60]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d02:	2166      	movs	r1, #102	; 0x66
90001d04:	4a0f      	ldr	r2, [pc, #60]	; (90001d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90001d06:	4810      	ldr	r0, [pc, #64]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d08:	f026 f9c2 	bl	90028090 <__assert_func>
        assert(0 && "Unsupported Format!");
90001d0c:	4b0c      	ldr	r3, [pc, #48]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d0e:	2187      	movs	r1, #135	; 0x87
90001d10:	4a0e      	ldr	r2, [pc, #56]	; (90001d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90001d12:	480d      	ldr	r0, [pc, #52]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d14:	f026 f9bc 	bl	90028090 <__assert_func>
                assert(0 && "Unsupported format");
90001d18:	4b0d      	ldr	r3, [pc, #52]	; (90001d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90001d1a:	f240 1111 	movw	r1, #273	; 0x111
90001d1e:	4a0d      	ldr	r2, [pc, #52]	; (90001d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90001d20:	4809      	ldr	r0, [pc, #36]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d22:	f026 f9b5 	bl	90028090 <__assert_func>
90001d26:	bf00      	nop
90001d28:	52001000 	.word	0x52001000
90001d2c:	00020201 	.word	0x00020201
90001d30:	00020009 	.word	0x00020009
90001d34:	ffff00ef 	.word	0xffff00ef
90001d38:	00010201 	.word	0x00010201
90001d3c:	0002000a 	.word	0x0002000a
90001d40:	900297cc 	.word	0x900297cc
90001d44:	90029878 	.word	0x90029878
90001d48:	90029834 	.word	0x90029834
90001d4c:	900297e8 	.word	0x900297e8
90001d50:	900298c4 	.word	0x900298c4
90001d54:	900298e0 	.word	0x900298e0

90001d58 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90001d58:	4b25      	ldr	r3, [pc, #148]	; (90001df0 <DMA2D_XferCpltCallback+0x98>)
90001d5a:	4926      	ldr	r1, [pc, #152]	; (90001df4 <DMA2D_XferCpltCallback+0x9c>)
90001d5c:	681b      	ldr	r3, [r3, #0]
    {
90001d5e:	b510      	push	{r4, lr}
90001d60:	685c      	ldr	r4, [r3, #4]
90001d62:	6823      	ldr	r3, [r4, #0]
90001d64:	695a      	ldr	r2, [r3, #20]
90001d66:	428a      	cmp	r2, r1
90001d68:	d120      	bne.n	90001dac <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
90001d6a:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
90001d6e:	b192      	cbz	r2, 90001d96 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90001d70:	7a23      	ldrb	r3, [r4, #8]
90001d72:	2b00      	cmp	r3, #0
90001d74:	d132      	bne.n	90001ddc <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90001d76:	6860      	ldr	r0, [r4, #4]
90001d78:	6803      	ldr	r3, [r0, #0]
90001d7a:	681b      	ldr	r3, [r3, #0]
90001d7c:	4798      	blx	r3
90001d7e:	4603      	mov	r3, r0
90001d80:	b998      	cbnz	r0, 90001daa <DMA2D_XferCpltCallback+0x52>
90001d82:	7a62      	ldrb	r2, [r4, #9]
90001d84:	b18a      	cbz	r2, 90001daa <DMA2D_XferCpltCallback+0x52>
                execute();
90001d86:	6822      	ldr	r2, [r4, #0]
90001d88:	4620      	mov	r0, r4
                started_by_external_job = false;
90001d8a:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001d8e:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001d90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001d94:	4718      	bx	r3
            executeCompleted();
90001d96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001d98:	4620      	mov	r0, r4
90001d9a:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001d9c:	4916      	ldr	r1, [pc, #88]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
90001d9e:	4a17      	ldr	r2, [pc, #92]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001da0:	680b      	ldr	r3, [r1, #0]
90001da2:	011b      	lsls	r3, r3, #4
90001da4:	5cd3      	ldrb	r3, [r2, r3]
90001da6:	2b01      	cmp	r3, #1
90001da8:	d004      	beq.n	90001db4 <DMA2D_XferCpltCallback+0x5c>
90001daa:	bd10      	pop	{r4, pc}
90001dac:	4620      	mov	r0, r4
90001dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001db2:	4710      	bx	r2
90001db4:	4812      	ldr	r0, [pc, #72]	; (90001e00 <DMA2D_XferCpltCallback+0xa8>)
90001db6:	6800      	ldr	r0, [r0, #0]
90001db8:	2800      	cmp	r0, #0
90001dba:	d1f6      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dbc:	7aa0      	ldrb	r0, [r4, #10]
90001dbe:	2800      	cmp	r0, #0
90001dc0:	d1f3      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dc2:	7a20      	ldrb	r0, [r4, #8]
90001dc4:	2800      	cmp	r0, #0
90001dc6:	d1f0      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dc8:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001dca:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001dce:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dd0:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90001dd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001dd8:	f7ff bcc4 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001ddc:	4906      	ldr	r1, [pc, #24]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
90001dde:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de0:	4b06      	ldr	r3, [pc, #24]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001de2:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001de4:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de6:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001dea:	f7ff fcff 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001dee:	e7c2      	b.n	90001d76 <DMA2D_XferCpltCallback+0x1e>
90001df0:	2403989c 	.word	0x2403989c
90001df4:	90001a31 	.word	0x90001a31
90001df8:	24005b90 	.word	0x24005b90
90001dfc:	24000008 	.word	0x24000008
90001e00:	24005b8c 	.word	0x24005b8c

90001e04 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90001e04:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e06:	4b10      	ldr	r3, [pc, #64]	; (90001e48 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90001e08:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e0a:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90001e0c:	2500      	movs	r5, #0
90001e0e:	300c      	adds	r0, #12
90001e10:	2260      	movs	r2, #96	; 0x60
90001e12:	7235      	strb	r5, [r6, #8]
90001e14:	7275      	strb	r5, [r6, #9]
90001e16:	6070      	str	r0, [r6, #4]
90001e18:	f844 3b20 	str.w	r3, [r4], #32
90001e1c:	4621      	mov	r1, r4
90001e1e:	f010 fd13 	bl	90012848 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90001e22:	4621      	mov	r1, r4
90001e24:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90001e28:	60cd      	str	r5, [r1, #12]
90001e2a:	3124      	adds	r1, #36	; 0x24
90001e2c:	428b      	cmp	r3, r1
90001e2e:	d1fb      	bne.n	90001e28 <_ZN8STM32DMAC1Ev+0x24>
90001e30:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90001e34:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e36:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90001e3a:	f00c fbf3 	bl	9000e624 <osMutexNew>
90001e3e:	4603      	mov	r3, r0
}
90001e40:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
90001e42:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90001e46:	bd70      	pop	{r4, r5, r6, pc}
90001e48:	90029928 	.word	0x90029928

90001e4c <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e4c:	4a03      	ldr	r2, [pc, #12]	; (90001e5c <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001e4e:	6813      	ldr	r3, [r2, #0]
90001e50:	07db      	lsls	r3, r3, #31
90001e52:	d4fc      	bmi.n	90001e4e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e54:	2323      	movs	r3, #35	; 0x23
90001e56:	6093      	str	r3, [r2, #8]
}
90001e58:	4770      	bx	lr
90001e5a:	bf00      	nop
90001e5c:	52001000 	.word	0x52001000

90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001e60:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e62:	4c11      	ldr	r4, [pc, #68]	; (90001ea8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90001e64:	6825      	ldr	r5, [r4, #0]
90001e66:	07ed      	lsls	r5, r5, #31
90001e68:	d4fc      	bmi.n	90001e64 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e6a:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e6c:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001e6e:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e70:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e72:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001e76:	f04f 0502 	mov.w	r5, #2
90001e7a:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e7c:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001e7e:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90001e80:	d00b      	beq.n	90001e9a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e82:	490a      	ldr	r1, [pc, #40]	; (90001eac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001e84:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e86:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e8a:	4909      	ldr	r1, [pc, #36]	; (90001eb0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e8c:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90001e8e:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001e90:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001e92:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e94:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90001e96:	bc30      	pop	{r4, r5}
90001e98:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001e9a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90001e9c:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001e9e:	4b05      	ldr	r3, [pc, #20]	; (90001eb4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90001ea0:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001ea2:	6023      	str	r3, [r4, #0]
}
90001ea4:	bc30      	pop	{r4, r5}
90001ea6:	4770      	bx	lr
90001ea8:	52001000 	.word	0x52001000
90001eac:	00010009 	.word	0x00010009
90001eb0:	00020001 	.word	0x00020001
90001eb4:	00030001 	.word	0x00030001

90001eb8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90001eb8:	2001      	movs	r0, #1
90001eba:	4770      	bx	lr

90001ebc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90001ebc:	2040      	movs	r0, #64	; 0x40
90001ebe:	4770      	bx	lr

90001ec0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90001ec0:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90001ec4:	3008      	adds	r0, #8
90001ec6:	4770      	bx	lr

90001ec8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90001ec8:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90001ecc:	3008      	adds	r0, #8
90001ece:	4770      	bx	lr

90001ed0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001ed0:	2001      	movs	r0, #1
90001ed2:	4770      	bx	lr

90001ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001ed4:	f242 70bc 	movw	r0, #10172	; 0x27bc
90001ed8:	4770      	bx	lr
90001eda:	bf00      	nop

90001edc <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001edc:	f242 73bc 	movw	r3, #10172	; 0x27bc
90001ee0:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001ee4:	3008      	adds	r0, #8
90001ee6:	4770      	bx	lr

90001ee8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001ee8:	f242 73bc 	movw	r3, #10172	; 0x27bc
90001eec:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001ef0:	3008      	adds	r0, #8
90001ef2:	4770      	bx	lr

90001ef4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001ef4:	2001      	movs	r0, #1
90001ef6:	4770      	bx	lr

90001ef8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001ef8:	2010      	movs	r0, #16
90001efa:	4770      	bx	lr

90001efc <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001efc:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f00:	3008      	adds	r0, #8
90001f02:	4770      	bx	lr

90001f04 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001f04:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f08:	3008      	adds	r0, #8
90001f0a:	4770      	bx	lr

90001f0c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_main_menuScreenNoTransition();
90001f0c:	4608      	mov	r0, r1
90001f0e:	f002 b853 	b.w	90003fb8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90001f12:	bf00      	nop

90001f14 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90001f14:	4b03      	ldr	r3, [pc, #12]	; (90001f24 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90001f16:	b510      	push	{r4, lr}
90001f18:	4604      	mov	r4, r0
90001f1a:	6003      	str	r3, [r0, #0]
90001f1c:	f00f fae1 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f20:	4620      	mov	r0, r4
90001f22:	bd10      	pop	{r4, pc}
90001f24:	900299e0 	.word	0x900299e0

90001f28 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90001f28:	4b05      	ldr	r3, [pc, #20]	; (90001f40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90001f2a:	b510      	push	{r4, lr}
90001f2c:	4604      	mov	r4, r0
90001f2e:	6003      	str	r3, [r0, #0]
90001f30:	f00f fad7 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f34:	2148      	movs	r1, #72	; 0x48
90001f36:	4620      	mov	r0, r4
90001f38:	f026 f87c 	bl	90028034 <_ZdlPvj>
90001f3c:	4620      	mov	r0, r4
90001f3e:	bd10      	pop	{r4, pc}
90001f40:	900299e0 	.word	0x900299e0

90001f44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f44:	4b03      	ldr	r3, [pc, #12]	; (90001f54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f46:	b510      	push	{r4, lr}
90001f48:	4604      	mov	r4, r0
90001f4a:	6003      	str	r3, [r0, #0]
90001f4c:	f00f fac9 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f50:	4620      	mov	r0, r4
90001f52:	bd10      	pop	{r4, pc}
90001f54:	900299ac 	.word	0x900299ac

90001f58 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f58:	4b06      	ldr	r3, [pc, #24]	; (90001f74 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90001f5a:	b510      	push	{r4, lr}
90001f5c:	4604      	mov	r4, r0
90001f5e:	6003      	str	r3, [r0, #0]
90001f60:	f00f fabf 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f64:	f242 71c4 	movw	r1, #10180	; 0x27c4
90001f68:	4620      	mov	r0, r4
90001f6a:	f026 f863 	bl	90028034 <_ZdlPvj>
90001f6e:	4620      	mov	r0, r4
90001f70:	bd10      	pop	{r4, pc}
90001f72:	bf00      	nop
90001f74:	900299ac 	.word	0x900299ac

90001f78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f78:	4b03      	ldr	r3, [pc, #12]	; (90001f88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f7a:	b510      	push	{r4, lr}
90001f7c:	4604      	mov	r4, r0
90001f7e:	6003      	str	r3, [r0, #0]
90001f80:	f00f faaf 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f84:	4620      	mov	r0, r4
90001f86:	bd10      	pop	{r4, pc}
90001f88:	90029978 	.word	0x90029978

90001f8c <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f8c:	4b05      	ldr	r3, [pc, #20]	; (90001fa4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90001f8e:	b510      	push	{r4, lr}
90001f90:	4604      	mov	r4, r0
90001f92:	6003      	str	r3, [r0, #0]
90001f94:	f00f faa5 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f98:	2118      	movs	r1, #24
90001f9a:	4620      	mov	r0, r4
90001f9c:	f026 f84a 	bl	90028034 <_ZdlPvj>
90001fa0:	4620      	mov	r0, r4
90001fa2:	bd10      	pop	{r4, pc}
90001fa4:	90029978 	.word	0x90029978

90001fa8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90001fa8:	b510      	push	{r4, lr}
90001faa:	4604      	mov	r4, r0
90001fac:	490c      	ldr	r1, [pc, #48]	; (90001fe0 <_ZN12FrontendHeapD1Ev+0x38>)
90001fae:	4a0d      	ldr	r2, [pc, #52]	; (90001fe4 <_ZN12FrontendHeapD1Ev+0x3c>)
90001fb0:	f242 70f0 	movw	r0, #10224	; 0x27f0
90001fb4:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90001fb8:	6021      	str	r1, [r4, #0]
90001fba:	4420      	add	r0, r4
90001fbc:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90001fc0:	f00f fa8f 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fc4:	4620      	mov	r0, r4
90001fc6:	4b08      	ldr	r3, [pc, #32]	; (90001fe8 <_ZN12FrontendHeapD1Ev+0x40>)
90001fc8:	f840 3f2c 	str.w	r3, [r0, #44]!
90001fcc:	f00f fa89 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fd0:	4620      	mov	r0, r4
90001fd2:	4b06      	ldr	r3, [pc, #24]	; (90001fec <_ZN12FrontendHeapD1Ev+0x44>)
90001fd4:	f840 3f14 	str.w	r3, [r0, #20]!
90001fd8:	f00f fa83 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fdc:	4620      	mov	r0, r4
90001fde:	bd10      	pop	{r4, pc}
90001fe0:	90029a14 	.word	0x90029a14
90001fe4:	900299e0 	.word	0x900299e0
90001fe8:	900299ac 	.word	0x900299ac
90001fec:	90029978 	.word	0x90029978

90001ff0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90001ff0:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90001ff2:	4c0c      	ldr	r4, [pc, #48]	; (90002024 <__tcf_0+0x34>)
90001ff4:	4a0c      	ldr	r2, [pc, #48]	; (90002028 <__tcf_0+0x38>)
90001ff6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90001ffa:	490c      	ldr	r1, [pc, #48]	; (9000202c <__tcf_0+0x3c>)
90001ffc:	480c      	ldr	r0, [pc, #48]	; (90002030 <__tcf_0+0x40>)
90001ffe:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002002:	6021      	str	r1, [r4, #0]
90002004:	f00f fa6d 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002008:	4620      	mov	r0, r4
9000200a:	4b0a      	ldr	r3, [pc, #40]	; (90002034 <__tcf_0+0x44>)
9000200c:	f840 3f2c 	str.w	r3, [r0, #44]!
90002010:	f00f fa67 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002014:	4620      	mov	r0, r4
90002016:	4b08      	ldr	r3, [pc, #32]	; (90002038 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002018:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000201c:	f840 3f14 	str.w	r3, [r0, #20]!
90002020:	f00f ba5f 	b.w	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002024:	24005be4 	.word	0x24005be4
90002028:	900299e0 	.word	0x900299e0
9000202c:	90029a14 	.word	0x90029a14
90002030:	240083d4 	.word	0x240083d4
90002034:	900299ac 	.word	0x900299ac
90002038:	90029978 	.word	0x90029978

9000203c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
9000203c:	b510      	push	{r4, lr}
9000203e:	4604      	mov	r4, r0
90002040:	4a0f      	ldr	r2, [pc, #60]	; (90002080 <_ZN12FrontendHeapD0Ev+0x44>)
90002042:	4910      	ldr	r1, [pc, #64]	; (90002084 <_ZN12FrontendHeapD0Ev+0x48>)
90002044:	f242 70f0 	movw	r0, #10224	; 0x27f0
90002048:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
9000204c:	6021      	str	r1, [r4, #0]
9000204e:	4420      	add	r0, r4
90002050:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002054:	f00f fa45 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002058:	4620      	mov	r0, r4
9000205a:	4b0b      	ldr	r3, [pc, #44]	; (90002088 <_ZN12FrontendHeapD0Ev+0x4c>)
9000205c:	f840 3f2c 	str.w	r3, [r0, #44]!
90002060:	f00f fa3f 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002064:	4b09      	ldr	r3, [pc, #36]	; (9000208c <_ZN12FrontendHeapD0Ev+0x50>)
90002066:	4620      	mov	r0, r4
90002068:	f840 3f14 	str.w	r3, [r0, #20]!
9000206c:	f00f fa39 	bl	900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002070:	4620      	mov	r0, r4
90002072:	f642 1198 	movw	r1, #10648	; 0x2998
90002076:	f025 ffdd 	bl	90028034 <_ZdlPvj>
9000207a:	4620      	mov	r0, r4
9000207c:	bd10      	pop	{r4, pc}
9000207e:	bf00      	nop
90002080:	900299e0 	.word	0x900299e0
90002084:	90029a14 	.word	0x90029a14
90002088:	900299ac 	.word	0x900299ac
9000208c:	90029978 	.word	0x90029978

90002090 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002094:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002096:	2400      	movs	r4, #0
90002098:	f001 fa76 	bl	90003588 <_ZN14BitmapDatabase11getInstanceEv>
9000209c:	4605      	mov	r5, r0
9000209e:	f001 fa77 	bl	90003590 <_ZN14BitmapDatabase15getInstanceSizeEv>
900020a2:	4623      	mov	r3, r4
900020a4:	4601      	mov	r1, r0
900020a6:	4622      	mov	r2, r4
900020a8:	4628      	mov	r0, r5
900020aa:	9400      	str	r4, [sp, #0]
900020ac:	f018 f81a 	bl	9001a0e4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
900020b0:	4b29      	ldr	r3, [pc, #164]	; (90002158 <touchgfx_init+0xc8>)
900020b2:	4a2a      	ldr	r2, [pc, #168]	; (9000215c <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
900020b4:	4620      	mov	r0, r4
        static FrontendHeap instance;
900020b6:	4c2a      	ldr	r4, [pc, #168]	; (90002160 <touchgfx_init+0xd0>)
900020b8:	601a      	str	r2, [r3, #0]
900020ba:	f002 f959 	bl	90004370 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
900020be:	4829      	ldr	r0, [pc, #164]	; (90002164 <touchgfx_init+0xd4>)
900020c0:	f017 ff78 	bl	90019fb4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
900020c4:	6823      	ldr	r3, [r4, #0]
900020c6:	f3bf 8f5b 	dmb	ish
900020ca:	07db      	lsls	r3, r3, #31
900020cc:	d505      	bpl.n	900020da <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
900020ce:	4826      	ldr	r0, [pc, #152]	; (90002168 <touchgfx_init+0xd8>)
}
900020d0:	b002      	add	sp, #8
900020d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900020d6:	f7fe bbfb 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
900020da:	4620      	mov	r0, r4
900020dc:	f025 ffac 	bl	90028038 <__cxa_guard_acquire>
900020e0:	2800      	cmp	r0, #0
900020e2:	d0f4      	beq.n	900020ce <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
900020e4:	4d21      	ldr	r5, [pc, #132]	; (9000216c <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
900020e6:	4f22      	ldr	r7, [pc, #136]	; (90002170 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
900020e8:	4b22      	ldr	r3, [pc, #136]	; (90002174 <touchgfx_init+0xe4>)
        : presenterStorage(pres),
900020ea:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
900020ee:	f107 064c 	add.w	r6, r7, #76	; 0x4c
          screenStorage(scr),
900020f2:	f105 082c 	add.w	r8, r5, #44	; 0x2c
900020f6:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
900020f8:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
900020fa:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
900020fc:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
900020fe:	f8c5 8008 	str.w	r8, [r5, #8]
90002102:	f00f f9ef 	bl	900114e4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002106:	4b1c      	ldr	r3, [pc, #112]	; (90002178 <touchgfx_init+0xe8>)
90002108:	4640      	mov	r0, r8
9000210a:	616b      	str	r3, [r5, #20]
9000210c:	f00f f9ea 	bl	900114e4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002110:	4b1a      	ldr	r3, [pc, #104]	; (9000217c <touchgfx_init+0xec>)
90002112:	4638      	mov	r0, r7
90002114:	62eb      	str	r3, [r5, #44]	; 0x2c
90002116:	f00f f9e5 	bl	900114e4 <_ZN8touchgfx17AbstractPartitionC1Ev>
9000211a:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
9000211e:	4a18      	ldr	r2, [pc, #96]	; (90002180 <touchgfx_init+0xf0>)
90002120:	f603 0038 	addw	r0, r3, #2104	; 0x838
90002124:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002128:	f004 fda0 	bl	90006c6c <_ZN5ModelC1Ev>
9000212c:	462a      	mov	r2, r5
9000212e:	f107 0148 	add.w	r1, r7, #72	; 0x48
90002132:	4630      	mov	r0, r6
90002134:	f004 fd90 	bl	90006c58 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002138:	4630      	mov	r0, r6
9000213a:	f001 ff3d 	bl	90003fb8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
        static FrontendHeap instance;
9000213e:	4811      	ldr	r0, [pc, #68]	; (90002184 <touchgfx_init+0xf4>)
90002140:	f025 ffc4 	bl	900280cc <atexit>
90002144:	4620      	mov	r0, r4
90002146:	f025 ff83 	bl	90028050 <__cxa_guard_release>
9000214a:	4807      	ldr	r0, [pc, #28]	; (90002168 <touchgfx_init+0xd8>)
}
9000214c:	b002      	add	sp, #8
9000214e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002152:	f7fe bbbd 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
90002156:	bf00      	nop
90002158:	24039900 	.word	0x24039900
9000215c:	240093b0 	.word	0x240093b0
90002160:	24005be0 	.word	0x24005be0
90002164:	2400002c 	.word	0x2400002c
90002168:	24009328 	.word	0x24009328
9000216c:	24005be4 	.word	0x24005be4
90002170:	240083d4 	.word	0x240083d4
90002174:	90029a14 	.word	0x90029a14
90002178:	90029978 	.word	0x90029978
9000217c:	900299ac 	.word	0x900299ac
90002180:	900299e0 	.word	0x900299e0
90002184:	90001ff1 	.word	0x90001ff1

90002188 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002188:	4770      	bx	lr
9000218a:	bf00      	nop

9000218c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
9000218c:	4801      	ldr	r0, [pc, #4]	; (90002194 <touchgfx_taskEntry+0x8>)
9000218e:	f7fe bb65 	b.w	9000085c <_ZN11TouchGFXHAL9taskEntryEv>
90002192:	bf00      	nop
90002194:	24009328 	.word	0x24009328

90002198 <_GLOBAL__sub_I_touchgfx_init>:
}
90002198:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
9000219a:	4b25      	ldr	r3, [pc, #148]	; (90002230 <_GLOBAL__sub_I_touchgfx_init+0x98>)
9000219c:	4c25      	ldr	r4, [pc, #148]	; (90002234 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
9000219e:	4e26      	ldr	r6, [pc, #152]	; (90002238 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
900021a0:	4d26      	ldr	r5, [pc, #152]	; (9000223c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
900021a2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
900021a4:	4630      	mov	r0, r6
900021a6:	f7ff fe2d 	bl	90001e04 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
900021aa:	4628      	mov	r0, r5
900021ac:	f01c fa72 	bl	9001e694 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
900021b0:	4b23      	ldr	r3, [pc, #140]	; (90002240 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
900021b2:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021b4:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021b8:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
900021bc:	62da      	str	r2, [r3, #44]	; 0x2c
900021be:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
900021c0:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
900021c2:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
900021c6:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
900021c8:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
900021ca:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
900021ce:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
900021d2:	4c1c      	ldr	r4, [pc, #112]	; (90002244 <_GLOBAL__sub_I_touchgfx_init+0xac>)
900021d4:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
900021d6:	4c1c      	ldr	r4, [pc, #112]	; (90002248 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
900021d8:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021da:	4c1c      	ldr	r4, [pc, #112]	; (9000224c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
900021dc:	8020      	strh	r0, [r4, #0]
900021de:	4c1c      	ldr	r4, [pc, #112]	; (90002250 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
900021e0:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021e2:	4c1c      	ldr	r4, [pc, #112]	; (90002254 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
900021e4:	481c      	ldr	r0, [pc, #112]	; (90002258 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
900021e6:	8021      	strh	r1, [r4, #0]
900021e8:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
900021ea:	4c1c      	ldr	r4, [pc, #112]	; (9000225c <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
900021ec:	491c      	ldr	r1, [pc, #112]	; (90002260 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
900021ee:	481d      	ldr	r0, [pc, #116]	; (90002264 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
900021f0:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900021f4:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
900021f8:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900021fc:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
900021fe:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002202:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
90002206:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
9000220a:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
9000220e:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
90002212:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
90002216:	7022      	strb	r2, [r4, #0]
90002218:	6019      	str	r1, [r3, #0]
9000221a:	4913      	ldr	r1, [pc, #76]	; (90002268 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
9000221c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002220:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
90002224:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
90002228:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
9000222a:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
9000222e:	bd70      	pop	{r4, r5, r6, pc}
90002230:	90029180 	.word	0x90029180
90002234:	2400857c 	.word	0x2400857c
90002238:	24008580 	.word	0x24008580
9000223c:	240093b4 	.word	0x240093b4
90002240:	24009328 	.word	0x24009328
90002244:	01000001 	.word	0x01000001
90002248:	2403989c 	.word	0x2403989c
9000224c:	24039890 	.word	0x24039890
90002250:	24039896 	.word	0x24039896
90002254:	24039892 	.word	0x24039892
90002258:	24039898 	.word	0x24039898
9000225c:	24039894 	.word	0x24039894
90002260:	90029310 	.word	0x90029310
90002264:	01010000 	.word	0x01010000
90002268:	90029158 	.word	0x90029158

9000226c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
9000226c:	4801      	ldr	r0, [pc, #4]	; (90002274 <_GLOBAL__sub_D_touchgfx_init+0x8>)
9000226e:	f7ff bb4d 	b.w	9000190c <_ZN8STM32DMAD1Ev>
90002272:	bf00      	nop
90002274:	24008580 	.word	0x24008580

90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002278:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
9000227c:	b112      	cbz	r2, 90002284 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
9000227e:	6803      	ldr	r3, [r0, #0]
90002280:	695b      	ldr	r3, [r3, #20]
90002282:	4718      	bx	r3
        }
    }
90002284:	4770      	bx	lr
90002286:	bf00      	nop

90002288 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002288:	2000      	movs	r0, #0
9000228a:	4770      	bx	lr

9000228c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
9000228c:	8081      	strh	r1, [r0, #4]
    }
9000228e:	4770      	bx	lr

90002290 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002290:	80c1      	strh	r1, [r0, #6]
    }
90002292:	4770      	bx	lr

90002294 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002294:	8101      	strh	r1, [r0, #8]
    }
90002296:	4770      	bx	lr

90002298 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002298:	8141      	strh	r1, [r0, #10]
    }
9000229a:	4770      	bx	lr

9000229c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
9000229c:	4770      	bx	lr
9000229e:	bf00      	nop

900022a0 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
900022a0:	4770      	bx	lr
900022a2:	bf00      	nop

900022a4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
900022a4:	4770      	bx	lr
900022a6:	bf00      	nop

900022a8 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
900022a8:	4770      	bx	lr
900022aa:	bf00      	nop

900022ac <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
900022ac:	4770      	bx	lr
900022ae:	bf00      	nop

900022b0 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
900022b0:	f8b0 c006 	ldrh.w	ip, [r0, #6]
900022b4:	6803      	ldr	r3, [r0, #0]
900022b6:	eba2 020c 	sub.w	r2, r2, ip
900022ba:	f8b0 c004 	ldrh.w	ip, [r0, #4]
900022be:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900022c0:	eba1 010c 	sub.w	r1, r1, ip
900022c4:	b212      	sxth	r2, r2
900022c6:	b209      	sxth	r1, r1
900022c8:	4718      	bx	r3
900022ca:	bf00      	nop

900022cc <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
900022cc:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022ce:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
900022d2:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022d6:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
900022da:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
900022de:	6010      	str	r0, [r2, #0]
    }
900022e0:	4770      	bx	lr
900022e2:	bf00      	nop

900022e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
900022e4:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900022e8:	b11a      	cbz	r2, 900022f2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
900022ea:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
900022ee:	b102      	cbz	r2, 900022f2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
900022f0:	6018      	str	r0, [r3, #0]
        }
    }
900022f2:	4770      	bx	lr

900022f4 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
900022f4:	2000      	movs	r0, #0
900022f6:	4770      	bx	lr

900022f8 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
900022f8:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
900022fa:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
900022fc:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
900022fe:	809a      	strh	r2, [r3, #4]
    }
90002300:	4770      	bx	lr
90002302:	bf00      	nop

90002304 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002304:	4770      	bx	lr
90002306:	bf00      	nop

90002308 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002308:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
9000230c:	4770      	bx	lr
9000230e:	bf00      	nop

90002310 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002310:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
90002314:	4770      	bx	lr
90002316:	bf00      	nop

90002318 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002318:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
9000231c:	688a      	ldr	r2, [r1, #8]
9000231e:	f8c0 c000 	str.w	ip, [r0]
90002322:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002324:	4770      	bx	lr
90002326:	bf00      	nop

90002328 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002328:	2200      	movs	r2, #0
9000232a:	6002      	str	r2, [r0, #0]
9000232c:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000232e:	4770      	bx	lr

90002330 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002330:	2000      	movs	r0, #0
90002332:	4770      	bx	lr

90002334 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002334:	4b03      	ldr	r3, [pc, #12]	; (90002344 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002336:	2290      	movs	r2, #144	; 0x90
90002338:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
9000233c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002340:	4770      	bx	lr
90002342:	bf00      	nop
90002344:	e000e100 	.word	0xe000e100

90002348 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002348:	4a09      	ldr	r2, [pc, #36]	; (90002370 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
9000234a:	490a      	ldr	r1, [pc, #40]	; (90002374 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
9000234c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
9000234e:	480a      	ldr	r0, [pc, #40]	; (90002378 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002350:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002354:	3b01      	subs	r3, #1
90002356:	b29b      	uxth	r3, r3
90002358:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
9000235a:	6911      	ldr	r1, [r2, #16]
9000235c:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002360:	3901      	subs	r1, #1
90002362:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002364:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002366:	6b53      	ldr	r3, [r2, #52]	; 0x34
90002368:	f043 0301 	orr.w	r3, r3, #1
9000236c:	6353      	str	r3, [r2, #52]	; 0x34
}
9000236e:	4770      	bx	lr
90002370:	50001000 	.word	0x50001000
90002374:	2400943a 	.word	0x2400943a
90002378:	24009438 	.word	0x24009438

9000237c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
9000237c:	4b01      	ldr	r3, [pc, #4]	; (90002384 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
9000237e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
90002382:	4770      	bx	lr
90002384:	50001000 	.word	0x50001000

90002388 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002388:	4b02      	ldr	r3, [pc, #8]	; (90002394 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
9000238a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
9000238c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002390:	625a      	str	r2, [r3, #36]	; 0x24
}
90002392:	4770      	bx	lr
90002394:	50001000 	.word	0x50001000

90002398 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
90002398:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
9000239c:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
9000239e:	4770      	bx	lr

900023a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023a0:	4770      	bx	lr
900023a2:	bf00      	nop

900023a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
900023a4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
900023a8:	4611      	mov	r1, r2
900023aa:	6840      	ldr	r0, [r0, #4]
900023ac:	6803      	ldr	r3, [r0, #0]
900023ae:	68db      	ldr	r3, [r3, #12]
900023b0:	4718      	bx	r3
900023b2:	bf00      	nop

900023b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023b4:	b510      	push	{r4, lr}
900023b6:	4604      	mov	r4, r0
900023b8:	2148      	movs	r1, #72	; 0x48
900023ba:	f025 fe3b 	bl	90028034 <_ZdlPvj>
900023be:	4620      	mov	r0, r4
900023c0:	bd10      	pop	{r4, pc}
900023c2:	bf00      	nop

900023c4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        mjpegDecoders[handle]->getVideoInfo(data);
    }

    virtual bool getIsPlaying(const Handle handle)
    {
        assert(handle < no_streams);
900023c4:	b911      	cbnz	r1, 900023cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
        Stream& stream = streams[handle];
        return stream.isPlaying;
    }
900023c6:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
900023ca:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
900023cc:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900023ce:	4a03      	ldr	r2, [pc, #12]	; (900023dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
900023d0:	f44f 71b8 	mov.w	r1, #368	; 0x170
900023d4:	4b02      	ldr	r3, [pc, #8]	; (900023e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
900023d6:	4803      	ldr	r0, [pc, #12]	; (900023e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
900023d8:	f025 fe5a 	bl	90028090 <__assert_func>
900023dc:	90029a34 	.word	0x90029a34
900023e0:	90029a20 	.word	0x90029a20
900023e4:	90029bc0 	.word	0x90029bc0

900023e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
900023e8:	b921      	cbnz	r1, 900023f4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
900023ea:	6840      	ldr	r0, [r0, #4]
900023ec:	4611      	mov	r1, r2
900023ee:	6803      	ldr	r3, [r0, #0]
900023f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900023f2:	4718      	bx	r3
        assert(handle < no_streams);
900023f4:	4b03      	ldr	r3, [pc, #12]	; (90002404 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
900023f6:	f44f 71b5 	mov.w	r1, #362	; 0x16a
900023fa:	4a03      	ldr	r2, [pc, #12]	; (90002408 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
900023fc:	4803      	ldr	r0, [pc, #12]	; (9000240c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
900023fe:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002400:	f025 fe46 	bl	90028090 <__assert_func>
90002404:	90029a20 	.word	0x90029a20
90002408:	90029c04 	.word	0x90029c04
9000240c:	90029bc0 	.word	0x90029bc0

90002410 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002410:	b909      	cbnz	r1, 90002416 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002412:	68c0      	ldr	r0, [r0, #12]
90002414:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002416:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002418:	4a02      	ldr	r2, [pc, #8]	; (90002424 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
9000241a:	2179      	movs	r1, #121	; 0x79
9000241c:	4b02      	ldr	r3, [pc, #8]	; (90002428 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
9000241e:	4803      	ldr	r0, [pc, #12]	; (9000242c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002420:	f025 fe36 	bl	90028090 <__assert_func>
90002424:	90029db4 	.word	0x90029db4
90002428:	90029a20 	.word	0x90029a20
9000242c:	90029bc0 	.word	0x90029bc0

90002430 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90002430:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002432:	460c      	mov	r4, r1
90002434:	b949      	cbnz	r1, 9000244a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
90002436:	4611      	mov	r1, r2
90002438:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
9000243a:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
9000243c:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
9000243e:	681c      	ldr	r4, [r3, #0]
90002440:	4618      	mov	r0, r3
90002442:	68a3      	ldr	r3, [r4, #8]
    }
90002444:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
90002448:	4718      	bx	r3
        assert(handle < no_streams);
9000244a:	4b03      	ldr	r3, [pc, #12]	; (90002458 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
9000244c:	2190      	movs	r1, #144	; 0x90
9000244e:	4a03      	ldr	r2, [pc, #12]	; (9000245c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
90002450:	4803      	ldr	r0, [pc, #12]	; (90002460 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
90002452:	f025 fe1d 	bl	90028090 <__assert_func>
90002456:	bf00      	nop
90002458:	90029a20 	.word	0x90029a20
9000245c:	90029f68 	.word	0x90029f68
90002460:	90029bc0 	.word	0x90029bc0

90002464 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90002464:	b921      	cbnz	r1, 90002470 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
90002466:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
9000246a:	e9c0 3206 	strd	r3, r2, [r0, #24]
9000246e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90002470:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002472:	4a03      	ldr	r2, [pc, #12]	; (90002480 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90002474:	2182      	movs	r1, #130	; 0x82
90002476:	4b03      	ldr	r3, [pc, #12]	; (90002484 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90002478:	4803      	ldr	r0, [pc, #12]	; (90002488 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
9000247a:	f025 fe09 	bl	90028090 <__assert_func>
9000247e:	bf00      	nop
90002480:	9002a144 	.word	0x9002a144
90002484:	90029a20 	.word	0x90029a20
90002488:	90029bc0 	.word	0x90029bc0

9000248c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
9000248c:	f00f bb0c 	b.w	90011aa8 <_ZN8touchgfx3HAL10beginFrameEv>

90002490 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002490:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
90002494:	b903      	cbnz	r3, 90002498 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
90002496:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90002498:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
9000249a:	f04f 31ff 	mov.w	r1, #4294967295
9000249e:	4604      	mov	r4, r0
900024a0:	6c40      	ldr	r0, [r0, #68]	; 0x44
900024a2:	f00c f8ff 	bl	9000e6a4 <osMutexAcquire>
            firstDrawThisFrame = false;
900024a6:	f44f 7380 	mov.w	r3, #256	; 0x100
900024aa:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
900024ae:	bd10      	pop	{r4, pc}

900024b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
900024b0:	b538      	push	{r3, r4, r5, lr}
900024b2:	460c      	mov	r4, r1
900024b4:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
900024b6:	f04f 31ff 	mov.w	r1, #4294967295
900024ba:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
900024bc:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
900024c0:	f00c f8f0 	bl	9000e6a4 <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
900024c4:	6c68      	ldr	r0, [r5, #68]	; 0x44
900024c6:	f00c f911 	bl	9000e6ec <osMutexRelease>
        streams[handle].isActive = false;
900024ca:	2300      	movs	r3, #0
900024cc:	eb05 0484 	add.w	r4, r5, r4, lsl #2
900024d0:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
900024d4:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
900024d8:	b90b      	cbnz	r3, 900024de <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
900024da:	6b2b      	ldr	r3, [r5, #48]	; 0x30
900024dc:	63ab      	str	r3, [r5, #56]	; 0x38
    }
900024de:	bd38      	pop	{r3, r4, r5, pc}

900024e0 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
900024e0:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
900024e2:	4c1c      	ldr	r4, [pc, #112]	; (90002554 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
900024e4:	4605      	mov	r5, r0
    HAL::endFrame();
900024e6:	f00f faeb 	bl	90011ac0 <_ZN8touchgfx3HAL8endFrameEv>
900024ea:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
900024ee:	b98b      	cbnz	r3, 90002514 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
900024f0:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
900024f4:	b973      	cbnz	r3, 90002514 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
900024f6:	2301      	movs	r3, #1
        SEM_POST(semDecode);
900024f8:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
900024fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
900024fe:	f00c f99b 	bl	9000e838 <osSemaphoreRelease>
        if (uiHasMutex)
90002502:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
90002506:	b9f3      	cbnz	r3, 90002546 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
90002508:	6868      	ldr	r0, [r5, #4]
9000250a:	6803      	ldr	r3, [r0, #0]
}
9000250c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
90002510:	691b      	ldr	r3, [r3, #16]
90002512:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
90002514:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002518:	69e1      	ldr	r1, [r4, #28]
9000251a:	6922      	ldr	r2, [r4, #16]
9000251c:	fb00 f303 	mul.w	r3, r0, r3
90002520:	fb01 f202 	mul.w	r2, r1, r2
90002524:	4293      	cmp	r3, r2
90002526:	d3e6      	bcc.n	900024f6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
90002528:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
9000252c:	b138      	cbz	r0, 9000253e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
9000252e:	1a9b      	subs	r3, r3, r2
90002530:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90002534:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
90002536:	bf98      	it	ls
90002538:	f102 32ff 	addls.w	r2, r2, #4294967295
9000253c:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
9000253e:	2301      	movs	r3, #1
90002540:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
90002544:	e7d7      	b.n	900024f6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
90002546:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002548:	f00c f8d0 	bl	9000e6ec <osMutexRelease>
            uiHasMutex = false;
9000254c:	2300      	movs	r3, #0
9000254e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
90002552:	e7d9      	b.n	90002508 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
90002554:	24009484 	.word	0x24009484

90002558 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90002558:	f00f ba70 	b.w	90011a3c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

9000255c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
9000255c:	f00f bbd1 	b.w	90011d02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90002560 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002560:	4814      	ldr	r0, [pc, #80]	; (900025b4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
90002562:	6943      	ldr	r3, [r0, #20]
90002564:	03d9      	lsls	r1, r3, #15
90002566:	d523      	bpl.n	900025b0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002568:	2300      	movs	r3, #0
{
9000256a:	b510      	push	{r4, lr}
9000256c:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002570:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002574:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002578:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
9000257c:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002580:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90002584:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002588:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000258c:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000258e:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002592:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002594:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90002598:	1c5a      	adds	r2, r3, #1
9000259a:	d1f8      	bne.n	9000258e <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
9000259c:	f1ac 0c20 	sub.w	ip, ip, #32
900025a0:	f11c 0f20 	cmn.w	ip, #32
900025a4:	d1f0      	bne.n	90002588 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900025a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900025aa:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900025ae:	bd10      	pop	{r4, pc}
900025b0:	4770      	bx	lr
900025b2:	bf00      	nop
900025b4:	e000ed00 	.word	0xe000ed00

900025b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900025b8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900025ba:	2900      	cmp	r1, #0
900025bc:	d133      	bne.n	90002626 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
900025be:	4604      	mov	r4, r0
        switch (cmd)
900025c0:	2a05      	cmp	r2, #5
900025c2:	d809      	bhi.n	900025d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
900025c4:	e8df f002 	tbb	[pc, r2]
900025c8:	27221e0f 	.word	0x27221e0f
900025cc:	0903      	.short	0x0903
            stream.isPlaying = false;
900025ce:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
900025d0:	2301      	movs	r3, #1
            stream.isPlaying = false;
900025d2:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
900025d6:	6203      	str	r3, [r0, #32]
    }
900025d8:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
900025da:	3b00      	subs	r3, #0
900025dc:	bf18      	it	ne
900025de:	2301      	movne	r3, #1
900025e0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
900025e4:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
900025e6:	6840      	ldr	r0, [r0, #4]
900025e8:	6803      	ldr	r3, [r0, #0]
900025ea:	691b      	ldr	r3, [r3, #16]
900025ec:	4798      	blx	r3
900025ee:	2800      	cmp	r0, #0
900025f0:	d0f2      	beq.n	900025d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
900025f2:	2201      	movs	r2, #1
                stream.frameCount = 0;
900025f4:	2300      	movs	r3, #0
                stream.isPlaying = true;
900025f6:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
900025fa:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
900025fe:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
90002602:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
90002604:	2300      	movs	r3, #0
90002606:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
9000260a:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
9000260c:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000260e:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002610:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002614:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002616:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002618:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
9000261a:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
9000261c:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002620:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002624:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002626:	4b03      	ldr	r3, [pc, #12]	; (90002634 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
90002628:	21a2      	movs	r1, #162	; 0xa2
9000262a:	4a03      	ldr	r2, [pc, #12]	; (90002638 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
9000262c:	4803      	ldr	r0, [pc, #12]	; (9000263c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
9000262e:	f025 fd2f 	bl	90028090 <__assert_func>
90002632:	bf00      	nop
90002634:	90029a20 	.word	0x90029a20
90002638:	9002a300 	.word	0x9002a300
9000263c:	90029bc0 	.word	0x90029bc0

90002640 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90002640:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002642:	bb39      	cbnz	r1, 90002694 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
90002644:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
90002648:	4604      	mov	r4, r0
9000264a:	b923      	cbnz	r3, 90002656 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
9000264c:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002650:	b963      	cbnz	r3, 9000266c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
90002652:	2001      	movs	r0, #1
    }
90002654:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
90002656:	4912      	ldr	r1, [pc, #72]	; (900026a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90002658:	6943      	ldr	r3, [r0, #20]
9000265a:	6809      	ldr	r1, [r1, #0]
9000265c:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
90002660:	440b      	add	r3, r1
90002662:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
90002664:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002668:	2b00      	cmp	r3, #0
9000266a:	d0f2      	beq.n	90002652 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
9000266c:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
9000266e:	4610      	mov	r0, r2
90002670:	6813      	ldr	r3, [r2, #0]
90002672:	695b      	ldr	r3, [r3, #20]
90002674:	6311      	str	r1, [r2, #48]	; 0x30
90002676:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
90002678:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
9000267a:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
9000267e:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
90002682:	2800      	cmp	r0, #0
90002684:	d1e5      	bne.n	90002652 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
90002686:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
9000268a:	2b00      	cmp	r3, #0
9000268c:	d1e2      	bne.n	90002654 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
9000268e:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
90002692:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002694:	4b03      	ldr	r3, [pc, #12]	; (900026a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
90002696:	21d0      	movs	r1, #208	; 0xd0
90002698:	4a03      	ldr	r2, [pc, #12]	; (900026a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
9000269a:	4804      	ldr	r0, [pc, #16]	; (900026ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
9000269c:	f025 fcf8 	bl	90028090 <__assert_func>
900026a0:	2403989c 	.word	0x2403989c
900026a4:	90029a20 	.word	0x90029a20
900026a8:	9002a4d4 	.word	0x9002a4d4
900026ac:	90029bc0 	.word	0x90029bc0

900026b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
900026b0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
900026b4:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
900026b6:	b9fb      	cbnz	r3, 900026f8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
900026b8:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026ba:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
900026bc:	60c3      	str	r3, [r0, #12]
900026be:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026c2:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
900026c6:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
900026ca:	6103      	str	r3, [r0, #16]
900026cc:	6143      	str	r3, [r0, #20]
900026ce:	6183      	str	r3, [r0, #24]
900026d0:	61c3      	str	r3, [r0, #28]
900026d2:	6203      	str	r3, [r0, #32]
900026d4:	6243      	str	r3, [r0, #36]	; 0x24
900026d6:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026da:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
900026de:	4432      	add	r2, r6
900026e0:	4294      	cmp	r4, r2
900026e2:	d810      	bhi.n	90002706 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
900026e4:	4a0b      	ldr	r2, [pc, #44]	; (90002714 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
900026e6:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
900026e8:	6384      	str	r4, [r0, #56]	; 0x38
    }
900026ea:	4618      	mov	r0, r3
        format = bufferFormat;
900026ec:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
900026f0:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
900026f4:	630b      	str	r3, [r1, #48]	; 0x30
900026f6:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
900026f8:	4b07      	ldr	r3, [pc, #28]	; (90002718 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
900026fa:	f240 11c5 	movw	r1, #453	; 0x1c5
900026fe:	4a07      	ldr	r2, [pc, #28]	; (9000271c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002700:	4807      	ldr	r0, [pc, #28]	; (90002720 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002702:	f025 fcc5 	bl	90028090 <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
90002706:	4b07      	ldr	r3, [pc, #28]	; (90002724 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002708:	2152      	movs	r1, #82	; 0x52
9000270a:	4a07      	ldr	r2, [pc, #28]	; (90002728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
9000270c:	4804      	ldr	r0, [pc, #16]	; (90002720 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
9000270e:	f025 fcbf 	bl	90028090 <__assert_func>
90002712:	bf00      	nop
90002714:	012001e0 	.word	0x012001e0
90002718:	9002a674 	.word	0x9002a674
9000271c:	9002a6a4 	.word	0x9002a6a4
90002720:	90029bc0 	.word	0x90029bc0
90002724:	9002a82c 	.word	0x9002a82c
90002728:	9002a868 	.word	0x9002a868

9000272c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000272c:	4b08      	ldr	r3, [pc, #32]	; (90002750 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
9000272e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90002732:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002736:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000273a:	f3bf 8f6f 	isb	sy
9000273e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002742:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002746:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000274a:	f3bf 8f6f 	isb	sy
}
9000274e:	4770      	bx	lr
90002750:	e000e100 	.word	0xe000e100

90002754 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002754:	4b03      	ldr	r3, [pc, #12]	; (90002764 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
90002756:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000275a:	609a      	str	r2, [r3, #8]
9000275c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002760:	609a      	str	r2, [r3, #8]
}
90002762:	4770      	bx	lr
90002764:	e000e100 	.word	0xe000e100

90002768 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90002768:	b538      	push	{r3, r4, r5, lr}
9000276a:	4604      	mov	r4, r0
    HAL::initialize();
9000276c:	f00f f9b5 	bl	90011ada <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90002770:	6823      	ldr	r3, [r4, #0]
90002772:	6e5d      	ldr	r5, [r3, #100]	; 0x64
90002774:	f014 fb20 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
90002778:	4601      	mov	r1, r0
9000277a:	4620      	mov	r0, r4
9000277c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
9000277e:	6823      	ldr	r3, [r4, #0]
90002780:	4a16      	ldr	r2, [pc, #88]	; (900027dc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
90002782:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
90002786:	4295      	cmp	r5, r2
90002788:	d11c      	bne.n	900027c4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000278a:	4a15      	ldr	r2, [pc, #84]	; (900027e0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000278c:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
9000278e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90002792:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002796:	4813      	ldr	r0, [pc, #76]	; (900027e4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002798:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
9000279c:	4a12      	ldr	r2, [pc, #72]	; (900027e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000279e:	7005      	strb	r5, [r0, #0]
900027a0:	4293      	cmp	r3, r2
900027a2:	d116      	bne.n	900027d2 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027a4:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027a6:	4a11      	ldr	r2, [pc, #68]	; (900027ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027a8:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027aa:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900027ac:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
900027ae:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
900027b2:	4b0f      	ldr	r3, [pc, #60]	; (900027f0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
900027b4:	490f      	ldr	r1, [pc, #60]	; (900027f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
900027b6:	4a10      	ldr	r2, [pc, #64]	; (900027f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
900027b8:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
900027ba:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
900027bc:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
900027be:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
900027c2:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900027c4:	4a0d      	ldr	r2, [pc, #52]	; (900027fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
900027c6:	2300      	movs	r3, #0
900027c8:	4620      	mov	r0, r4
900027ca:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
900027ce:	47a8      	blx	r5
900027d0:	e7ec      	b.n	900027ac <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900027d2:	2100      	movs	r1, #0
900027d4:	4620      	mov	r0, r4
900027d6:	4798      	blx	r3
900027d8:	e7e8      	b.n	900027ac <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900027da:	bf00      	nop
900027dc:	90000805 	.word	0x90000805
900027e0:	d003fc00 	.word	0xd003fc00
900027e4:	2403989a 	.word	0x2403989a
900027e8:	90000675 	.word	0x90000675
900027ec:	2403989b 	.word	0x2403989b
900027f0:	24009484 	.word	0x24009484
900027f4:	2400943c 	.word	0x2400943c
900027f8:	d00bf400 	.word	0xd00bf400
900027fc:	d007f800 	.word	0xd007f800

90002800 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002800:	b510      	push	{r4, lr}
        return instance;
90002802:	4c14      	ldr	r4, [pc, #80]	; (90002854 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90002804:	6823      	ldr	r3, [r4, #0]
90002806:	b323      	cbz	r3, 90002852 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002808:	4b13      	ldr	r3, [pc, #76]	; (90002858 <HAL_LTDC_LineEventCallback+0x58>)
9000280a:	4a14      	ldr	r2, [pc, #80]	; (9000285c <HAL_LTDC_LineEventCallback+0x5c>)
9000280c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9000280e:	8811      	ldrh	r1, [r2, #0]
90002810:	428b      	cmp	r3, r1
90002812:	d00a      	beq.n	9000282a <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90002814:	f009 fc12 	bl	9000c03c <HAL_LTDC_ProgramLineEvent>
90002818:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
9000281a:	6803      	ldr	r3, [r0, #0]
9000281c:	6a1b      	ldr	r3, [r3, #32]
9000281e:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002820:	2000      	movs	r0, #0
        }
    }
90002822:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
90002826:	f7fd bec9 	b.w	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
9000282a:	4b0d      	ldr	r3, [pc, #52]	; (90002860 <HAL_LTDC_LineEventCallback+0x60>)
9000282c:	8819      	ldrh	r1, [r3, #0]
9000282e:	f009 fc05 	bl	9000c03c <HAL_LTDC_ProgramLineEvent>
        return instance;
90002832:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
90002834:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
90002838:	3301      	adds	r3, #1
9000283a:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
9000283e:	f7ff f83f 	bl	900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90002842:	6820      	ldr	r0, [r4, #0]
90002844:	f00f fea2 	bl	9001258c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90002848:	2000      	movs	r0, #0
    }
9000284a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
9000284e:	f7fd be81 	b.w	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
90002852:	bd10      	pop	{r4, pc}
90002854:	2403989c 	.word	0x2403989c
90002858:	50001000 	.word	0x50001000
9000285c:	2400943a 	.word	0x2400943a
90002860:	24009438 	.word	0x24009438

90002864 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
90002864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90002868:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 90002924 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
9000286c:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
9000286e:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002870:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
90002874:	4604      	mov	r4, r0
90002876:	e024      	b.n	900028c2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
90002878:	682b      	ldr	r3, [r5, #0]
9000287a:	4628      	mov	r0, r5
9000287c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000287e:	4798      	blx	r3
                        stream.seek_to_frame = 0;
90002880:	2300      	movs	r3, #0
90002882:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002884:	6829      	ldr	r1, [r5, #0]
90002886:	f44f 7390 	mov.w	r3, #288	; 0x120
9000288a:	9700      	str	r7, [sp, #0]
9000288c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90002890:	f8d1 9014 	ldr.w	r9, [r1, #20]
90002894:	4628      	mov	r0, r5
90002896:	68a1      	ldr	r1, [r4, #8]
90002898:	47c8      	blx	r9
                    stream.frameCount++;
9000289a:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
9000289c:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
900028a0:	3301      	adds	r3, #1
900028a2:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
900028a4:	2800      	cmp	r0, #0
900028a6:	d033      	beq.n	90002910 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028a8:	682b      	ldr	r3, [r5, #0]
900028aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900028ac:	4543      	cmp	r3, r8
900028ae:	d131      	bne.n	90002914 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
900028b0:	6968      	ldr	r0, [r5, #20]
900028b2:	3801      	subs	r0, #1
                    stream.doDecode = false;
900028b4:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028b6:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
900028b8:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
900028bc:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028be:	f00b ff15 	bl	9000e6ec <osMutexRelease>
            SEM_WAIT(semDecode);
900028c2:	f04f 31ff 	mov.w	r1, #4294967295
900028c6:	6c20      	ldr	r0, [r4, #64]	; 0x40
900028c8:	f00b ff82 	bl	9000e7d0 <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
900028cc:	f04f 31ff 	mov.w	r1, #4294967295
900028d0:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028d2:	f00b fee7 	bl	9000e6a4 <osMutexAcquire>
                if (stream.doDecode)
900028d6:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
900028da:	2b00      	cmp	r3, #0
900028dc:	d0ee      	beq.n	900028bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
900028de:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
900028e0:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
900028e2:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
900028e6:	2900      	cmp	r1, #0
900028e8:	d1c6      	bne.n	90002878 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
900028ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
900028ec:	2b00      	cmp	r3, #0
900028ee:	d0c9      	beq.n	90002884 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900028f0:	682a      	ldr	r2, [r5, #0]
900028f2:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
900028f6:	4541      	cmp	r1, r8
900028f8:	d10f      	bne.n	9000291a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
900028fa:	6968      	ldr	r0, [r5, #20]
900028fc:	18c1      	adds	r1, r0, r3
900028fe:	4628      	mov	r0, r5
90002900:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
90002902:	6923      	ldr	r3, [r4, #16]
90002904:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
90002906:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90002908:	440b      	add	r3, r1
                            stream.skip_frames = 0;
9000290a:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
9000290c:	6123      	str	r3, [r4, #16]
9000290e:	e7b9      	b.n	90002884 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90002910:	2001      	movs	r0, #1
90002912:	e7cf      	b.n	900028b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002914:	4628      	mov	r0, r5
90002916:	4798      	blx	r3
90002918:	e7cb      	b.n	900028b2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
9000291a:	4628      	mov	r0, r5
9000291c:	4788      	blx	r1
9000291e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002920:	e7ec      	b.n	900028fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
90002922:	bf00      	nop
90002924:	9000097d 	.word	0x9000097d

90002928 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90002928:	4801      	ldr	r0, [pc, #4]	; (90002930 <videoTaskFunc+0x8>)
{
9000292a:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
9000292c:	f7ff ff9a 	bl	90002864 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90002930:	24009484 	.word	0x24009484

90002934 <_GLOBAL__sub_I_mjpegdecoder1>:
}
90002934:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
90002936:	4815      	ldr	r0, [pc, #84]	; (9000298c <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002938:	2500      	movs	r5, #0
9000293a:	f7fe fbc5 	bl	900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000293e:	4c14      	ldr	r4, [pc, #80]	; (90002990 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90002940:	4914      	ldr	r1, [pc, #80]	; (90002994 <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002942:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
90002946:	462a      	mov	r2, r5
90002948:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000294a:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
9000294c:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
9000294e:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002950:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002952:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
90002954:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002956:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
9000295a:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000295c:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002960:	e9c4 5504 	strd	r5, r5, [r4, #16]
90002964:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90002968:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
9000296c:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002970:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
90002974:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90002978:	f00b feda 	bl	9000e730 <osSemaphoreNew>
9000297c:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
9000297e:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90002980:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
90002982:	f00b fe4f 	bl	9000e624 <osMutexNew>
90002986:	6460      	str	r0, [r4, #68]	; 0x44
}
90002988:	bd38      	pop	{r3, r4, r5, pc}
9000298a:	bf00      	nop
9000298c:	2400943c 	.word	0x2400943c
90002990:	24009484 	.word	0x24009484
90002994:	9002aa34 	.word	0x9002aa34

90002998 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90002998:	4901      	ldr	r1, [pc, #4]	; (900029a0 <vApplicationIdleHook+0x8>)
9000299a:	2000      	movs	r0, #0
9000299c:	f00e b8e4 	b.w	90010b68 <vTaskSetApplicationTaskTag>
900029a0:	90000959 	.word	0x90000959

900029a4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
900029a4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
900029a6:	2064      	movs	r0, #100	; 0x64
900029a8:	f00b fe2e 	bl	9000e608 <osDelay>
  for(;;)
900029ac:	e7fb      	b.n	900029a6 <StartDefaultTask+0x2>
900029ae:	bf00      	nop

900029b0 <SystemClock_Config>:
{
900029b0:	b570      	push	{r4, r5, r6, lr}
900029b2:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
900029b4:	224c      	movs	r2, #76	; 0x4c
900029b6:	2100      	movs	r1, #0
900029b8:	a80a      	add	r0, sp, #40	; 0x28
900029ba:	f025 fdf1 	bl	900285a0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
900029be:	2220      	movs	r2, #32
900029c0:	2100      	movs	r1, #0
900029c2:	a802      	add	r0, sp, #8
900029c4:	f025 fdec 	bl	900285a0 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
900029c8:	2002      	movs	r0, #2
900029ca:	f009 fd75 	bl	9000c4b8 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
900029ce:	4b22      	ldr	r3, [pc, #136]	; (90002a58 <SystemClock_Config+0xa8>)
900029d0:	2100      	movs	r1, #0
900029d2:	4a22      	ldr	r2, [pc, #136]	; (90002a5c <SystemClock_Config+0xac>)
900029d4:	9101      	str	r1, [sp, #4]
900029d6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
900029d8:	f021 0101 	bic.w	r1, r1, #1
900029dc:	62d9      	str	r1, [r3, #44]	; 0x2c
900029de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900029e0:	f003 0301 	and.w	r3, r3, #1
900029e4:	9301      	str	r3, [sp, #4]
900029e6:	6993      	ldr	r3, [r2, #24]
900029e8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
900029ec:	6193      	str	r3, [r2, #24]
900029ee:	6993      	ldr	r3, [r2, #24]
900029f0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
900029f4:	9301      	str	r3, [sp, #4]
900029f6:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
900029f8:	6993      	ldr	r3, [r2, #24]
900029fa:	0499      	lsls	r1, r3, #18
900029fc:	d5fc      	bpl.n	900029f8 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900029fe:	2201      	movs	r2, #1
90002a00:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002a04:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a06:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002a08:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a0a:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90002a0c:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002a0e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90002a12:	2205      	movs	r2, #5
90002a14:	23a0      	movs	r3, #160	; 0xa0
90002a16:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a1a:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002a1c:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a20:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a22:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002a26:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a2a:	f009 fded 	bl	9000c608 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a2e:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a30:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a32:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002a34:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a36:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a3a:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a3c:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002a3e:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90002a40:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a42:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a44:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002a48:	f44f 6380 	mov.w	r3, #1024	; 0x400
90002a4c:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a4e:	f00a f96f 	bl	9000cd30 <HAL_RCC_ClockConfig>
}
90002a52:	b01e      	add	sp, #120	; 0x78
90002a54:	bd70      	pop	{r4, r5, r6, pc}
90002a56:	bf00      	nop
90002a58:	58000400 	.word	0x58000400
90002a5c:	58024800 	.word	0x58024800

90002a60 <main>:
{
90002a60:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a62:	2400      	movs	r4, #0
{
90002a64:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a66:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002a68:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002a6a:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a6c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002a70:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90002a74:	f006 fd08 	bl	90009488 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a78:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a7c:	49d3      	ldr	r1, [pc, #844]	; (90002dcc <main+0x36c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a7e:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a80:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a82:	4bd3      	ldr	r3, [pc, #844]	; (90002dd0 <main+0x370>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a84:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a88:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a8c:	f006 fd1a 	bl	900094c4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002a90:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a94:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002a96:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90002a9a:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002a9c:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002aa0:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002aa4:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aa8:	f006 fd0c 	bl	900094c4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002aac:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aae:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002ab0:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002ab4:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002ab8:	231a      	movs	r3, #26
90002aba:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002abe:	f240 1301 	movw	r3, #257	; 0x101
90002ac2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ac6:	f006 fcfd 	bl	900094c4 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002aca:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ace:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002ad0:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002ad4:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ad6:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ada:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002ade:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ae2:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002ae4:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ae8:	f006 fcec 	bl	900094c4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002aec:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aee:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002af0:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002af4:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002af8:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002afc:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002b00:	f006 fce0 	bl	900094c4 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002b04:	4620      	mov	r0, r4
90002b06:	f006 fccd 	bl	900094a4 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002b0a:	4ab2      	ldr	r2, [pc, #712]	; (90002dd4 <main+0x374>)
90002b0c:	6953      	ldr	r3, [r2, #20]
90002b0e:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90002b12:	d111      	bne.n	90002b38 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90002b14:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b18:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002b1c:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002b20:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b24:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002b28:	6953      	ldr	r3, [r2, #20]
90002b2a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90002b2e:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002b30:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b34:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002b38:	48a6      	ldr	r0, [pc, #664]	; (90002dd4 <main+0x374>)
90002b3a:	6943      	ldr	r3, [r0, #20]
90002b3c:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002b40:	d124      	bne.n	90002b8c <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002b42:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002b46:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002b4a:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b4e:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002b52:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b56:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90002b5a:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b5c:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b60:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b62:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002b66:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b68:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90002b6c:	1c5a      	adds	r2, r3, #1
90002b6e:	d1f8      	bne.n	90002b62 <main+0x102>
    } while(sets-- != 0U);
90002b70:	3c20      	subs	r4, #32
90002b72:	f114 0f20 	cmn.w	r4, #32
90002b76:	d1f1      	bne.n	90002b5c <main+0xfc>
90002b78:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002b7c:	6943      	ldr	r3, [r0, #20]
90002b7e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002b82:	6143      	str	r3, [r0, #20]
90002b84:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b88:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002b8c:	f006 fbc4 	bl	90009318 <HAL_Init>
  SystemClock_Config();
90002b90:	f7ff ff0e 	bl	900029b0 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002b94:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002b96:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002b98:	4d8f      	ldr	r5, [pc, #572]	; (90002dd8 <main+0x378>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002b9a:	21c0      	movs	r1, #192	; 0xc0
90002b9c:	488f      	ldr	r0, [pc, #572]	; (90002ddc <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002b9e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002ba0:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002ba2:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ba4:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002ba8:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90002baa:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002bae:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002bb2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002bb6:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002bba:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bbe:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90002bc2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bc6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bca:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90002bce:	9301      	str	r3, [sp, #4]
90002bd0:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90002bd2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bd6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90002bda:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bde:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002be2:	f003 0340 	and.w	r3, r3, #64	; 0x40
90002be6:	9302      	str	r3, [sp, #8]
90002be8:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002bea:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90002bf2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bf6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bfa:	f403 7380 	and.w	r3, r3, #256	; 0x100
90002bfe:	9303      	str	r3, [sp, #12]
90002c00:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002c02:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c06:	f043 0310 	orr.w	r3, r3, #16
90002c0a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c0e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c12:	f003 0310 	and.w	r3, r3, #16
90002c16:	9304      	str	r3, [sp, #16]
90002c18:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002c1a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c1e:	f043 0302 	orr.w	r3, r3, #2
90002c22:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c26:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c2a:	f003 0302 	and.w	r3, r3, #2
90002c2e:	9305      	str	r3, [sp, #20]
90002c30:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90002c32:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c36:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90002c3a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c3e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c42:	f403 7300 	and.w	r3, r3, #512	; 0x200
90002c46:	9306      	str	r3, [sp, #24]
90002c48:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90002c4a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c4e:	f043 0308 	orr.w	r3, r3, #8
90002c52:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c56:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c5a:	f003 0308 	and.w	r3, r3, #8
90002c5e:	9307      	str	r3, [sp, #28]
90002c60:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002c62:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c66:	f043 0320 	orr.w	r3, r3, #32
90002c6a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c6e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c72:	f003 0320 	and.w	r3, r3, #32
90002c76:	9308      	str	r3, [sp, #32]
90002c78:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002c7a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90002c82:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c86:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c8a:	f003 0380 	and.w	r3, r3, #128	; 0x80
90002c8e:	9309      	str	r3, [sp, #36]	; 0x24
90002c90:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90002c92:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c96:	f043 0301 	orr.w	r3, r3, #1
90002c9a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c9e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002ca2:	f003 0301 	and.w	r3, r3, #1
90002ca6:	930a      	str	r3, [sp, #40]	; 0x28
90002ca8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002caa:	f006 fffb 	bl	90009ca4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002cae:	4622      	mov	r2, r4
90002cb0:	2180      	movs	r1, #128	; 0x80
90002cb2:	484b      	ldr	r0, [pc, #300]	; (90002de0 <main+0x380>)
90002cb4:	f006 fff6 	bl	90009ca4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90002cb8:	4622      	mov	r2, r4
90002cba:	2108      	movs	r1, #8
90002cbc:	4849      	ldr	r0, [pc, #292]	; (90002de4 <main+0x384>)
90002cbe:	f006 fff1 	bl	90009ca4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90002cc2:	2201      	movs	r2, #1
90002cc4:	4848      	ldr	r0, [pc, #288]	; (90002de8 <main+0x388>)
90002cc6:	4611      	mov	r1, r2
90002cc8:	f006 ffec 	bl	90009ca4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90002ccc:	4622      	mov	r2, r4
90002cce:	2144      	movs	r1, #68	; 0x44
90002cd0:	4846      	ldr	r0, [pc, #280]	; (90002dec <main+0x38c>)
90002cd2:	f006 ffe7 	bl	90009ca4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002cd6:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002cd8:	a90b      	add	r1, sp, #44	; 0x2c
90002cda:	4840      	ldr	r0, [pc, #256]	; (90002ddc <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002cdc:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ce0:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ce4:	f006 fdde 	bl	900098a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002ce8:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cea:	a90b      	add	r1, sp, #44	; 0x2c
90002cec:	483c      	ldr	r0, [pc, #240]	; (90002de0 <main+0x380>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002cee:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002cf0:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002cf2:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cf6:	f006 fdd5 	bl	900098a4 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002cfa:	a90b      	add	r1, sp, #44	; 0x2c
90002cfc:	4839      	ldr	r0, [pc, #228]	; (90002de4 <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002cfe:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002d02:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d04:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002d08:	f006 fdcc 	bl	900098a4 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d0c:	a90b      	add	r1, sp, #44	; 0x2c
90002d0e:	4836      	ldr	r0, [pc, #216]	; (90002de8 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d10:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d14:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d18:	f006 fdc4 	bl	900098a4 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d1c:	a90b      	add	r1, sp, #44	; 0x2c
90002d1e:	4833      	ldr	r0, [pc, #204]	; (90002dec <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d20:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d24:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d28:	f006 fdbc 	bl	900098a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d2c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d30:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d34:	a90b      	add	r1, sp, #44	; 0x2c
90002d36:	482d      	ldr	r0, [pc, #180]	; (90002dec <main+0x38c>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d38:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d3c:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d40:	f006 fdb0 	bl	900098a4 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d44:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d48:	4622      	mov	r2, r4
90002d4a:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d4c:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d4e:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d50:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90002d54:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
90002d58:	4d25      	ldr	r5, [pc, #148]	; (90002df0 <main+0x390>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d5a:	4033      	ands	r3, r6
90002d5c:	9300      	str	r3, [sp, #0]
90002d5e:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d60:	f006 fb34 	bl	900093cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90002d64:	207a      	movs	r0, #122	; 0x7a
90002d66:	f006 fb6f 	bl	90009448 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002d6a:	2234      	movs	r2, #52	; 0x34
90002d6c:	4621      	mov	r1, r4
90002d6e:	a80b      	add	r0, sp, #44	; 0x2c
90002d70:	f025 fc16 	bl	900285a0 <memset>
  hltdc.Instance = LTDC;
90002d74:	4b1f      	ldr	r3, [pc, #124]	; (90002df4 <main+0x394>)
  hltdc.Init.AccumulatedVBP = 11;
90002d76:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90002d78:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90002d7a:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90002d7c:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90002d7e:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90002d82:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90002d86:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90002d88:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90002d8a:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90002d8c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90002d90:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002d94:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002d98:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90002d9a:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90002d9e:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002da2:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90002da4:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90002da8:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90002dac:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002db0:	f008 ff9e 	bl	9000bcf0 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90002db4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002db8:	4622      	mov	r2, r4
90002dba:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90002dbc:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002dbe:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90002dc0:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
90002dc2:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
90002dc6:	4d0c      	ldr	r5, [pc, #48]	; (90002df8 <main+0x398>)
  pLayerCfg.WindowY1 = 272;
90002dc8:	930e      	str	r3, [sp, #56]	; 0x38
90002dca:	e017      	b.n	90002dfc <main+0x39c>
90002dcc:	03000012 	.word	0x03000012
90002dd0:	01010001 	.word	0x01010001
90002dd4:	e000ed00 	.word	0xe000ed00
90002dd8:	58024400 	.word	0x58024400
90002ddc:	58020400 	.word	0x58020400
90002de0:	58020c00 	.word	0x58020c00
90002de4:	58021800 	.word	0x58021800
90002de8:	58022800 	.word	0x58022800
90002dec:	58020000 	.word	0x58020000
90002df0:	240095b8 	.word	0x240095b8
90002df4:	50001000 	.word	0x50001000
90002df8:	240094f8 	.word	0x240094f8
  pLayerCfg.ImageHeight = 272;
90002dfc:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90002dfe:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
90002e00:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
90002e02:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e04:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowY0 = 0;
90002e08:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e0a:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.Alpha0 = 0;
90002e0c:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
90002e0e:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
90002e10:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
90002e14:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002e18:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002e1a:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002e1e:	f009 f83b 	bl	9000be98 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90002e22:	4b35      	ldr	r3, [pc, #212]	; (90002ef8 <main+0x498>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e24:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90002e26:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
90002e28:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
90002e2a:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90002e2c:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90002e30:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90002e34:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90002e38:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e3c:	f006 fbea 	bl	90009614 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90002e40:	4631      	mov	r1, r6
90002e42:	4628      	mov	r0, r5
90002e44:	f006 fcbe 	bl	900097c4 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e48:	482c      	ldr	r0, [pc, #176]	; (90002efc <main+0x49c>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e4a:	f44f 73c0 	mov.w	r3, #384	; 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e4e:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90002e50:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90002e54:	970b      	str	r7, [sp, #44]	; 0x2c
  SdramTiming.SelfRefreshTime = 4;
90002e56:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90002e5a:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90002e5e:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90002e62:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e64:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90002e68:	f44f 6300 	mov.w	r3, #2048	; 0x800
90002e6c:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90002e6e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90002e72:	6243      	str	r3, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90002e74:	2307      	movs	r3, #7
90002e76:	930c      	str	r3, [sp, #48]	; 0x30
  SdramTiming.RowCycleDelay = 7;
90002e78:	930e      	str	r3, [sp, #56]	; 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e7a:	4b21      	ldr	r3, [pc, #132]	; (90002f00 <main+0x4a0>)
90002e7c:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e7e:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90002e80:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e84:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90002e86:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e8a:	f00b f829 	bl	9000dee0 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90002e8e:	4620      	mov	r0, r4
90002e90:	f005 ffd4 	bl	90008e3c <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90002e94:	4620      	mov	r0, r4
90002e96:	f006 f81b 	bl	90008ed0 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90002e9a:	f7fd fa9b 	bl	900003d4 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90002e9e:	4b19      	ldr	r3, [pc, #100]	; (90002f04 <main+0x4a4>)
90002ea0:	4819      	ldr	r0, [pc, #100]	; (90002f08 <main+0x4a8>)
90002ea2:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90002ea4:	f007 fef8 	bl	9000ac98 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90002ea8:	4818      	ldr	r0, [pc, #96]	; (90002f0c <main+0x4ac>)
90002eaa:	4b19      	ldr	r3, [pc, #100]	; (90002f10 <main+0x4b0>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90002eac:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90002eae:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90002eb0:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90002eb2:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90002eb6:	f006 fb37 	bl	90009528 <HAL_CRC_Init>
  MX_TouchGFX_Init();
90002eba:	f7fd fa8f 	bl	900003dc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90002ebe:	f7fd fa8b 	bl	900003d8 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90002ec2:	f00b fb2b 	bl	9000e51c <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ec6:	4a13      	ldr	r2, [pc, #76]	; (90002f14 <main+0x4b4>)
90002ec8:	4621      	mov	r1, r4
90002eca:	4813      	ldr	r0, [pc, #76]	; (90002f18 <main+0x4b8>)
90002ecc:	f00b fb52 	bl	9000e574 <osThreadNew>
90002ed0:	4b12      	ldr	r3, [pc, #72]	; (90002f1c <main+0x4bc>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ed2:	4a13      	ldr	r2, [pc, #76]	; (90002f20 <main+0x4c0>)
90002ed4:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ed6:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ed8:	4812      	ldr	r0, [pc, #72]	; (90002f24 <main+0x4c4>)
90002eda:	f00b fb4b 	bl	9000e574 <osThreadNew>
90002ede:	4b12      	ldr	r3, [pc, #72]	; (90002f28 <main+0x4c8>)
90002ee0:	4605      	mov	r5, r0
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002ee2:	4a12      	ldr	r2, [pc, #72]	; (90002f2c <main+0x4cc>)
90002ee4:	4621      	mov	r1, r4
90002ee6:	4812      	ldr	r0, [pc, #72]	; (90002f30 <main+0x4d0>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ee8:	601d      	str	r5, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002eea:	f00b fb43 	bl	9000e574 <osThreadNew>
90002eee:	4b11      	ldr	r3, [pc, #68]	; (90002f34 <main+0x4d4>)
90002ef0:	6018      	str	r0, [r3, #0]
  osKernelStart();
90002ef2:	f00b fb25 	bl	9000e540 <osKernelStart>
  while (1)
90002ef6:	e7fe      	b.n	90002ef6 <main+0x496>
90002ef8:	52001000 	.word	0x52001000
90002efc:	24009738 	.word	0x24009738
90002f00:	52004140 	.word	0x52004140
90002f04:	52003000 	.word	0x52003000
90002f08:	24009560 	.word	0x24009560
90002f0c:	240094d4 	.word	0x240094d4
90002f10:	58024c00 	.word	0x58024c00
90002f14:	9002aab0 	.word	0x9002aab0
90002f18:	900029a5 	.word	0x900029a5
90002f1c:	240094d0 	.word	0x240094d0
90002f20:	9002aa8c 	.word	0x9002aa8c
90002f24:	900003ed 	.word	0x900003ed
90002f28:	240094cc 	.word	0x240094cc
90002f2c:	9002aad4 	.word	0x9002aad4
90002f30:	90002929 	.word	0x90002929
90002f34:	2400976c 	.word	0x2400976c

90002f38 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90002f38:	4b03      	ldr	r3, [pc, #12]	; (90002f48 <HAL_TIM_PeriodElapsedCallback+0x10>)
90002f3a:	6802      	ldr	r2, [r0, #0]
90002f3c:	429a      	cmp	r2, r3
90002f3e:	d000      	beq.n	90002f42 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90002f40:	4770      	bx	lr
    HAL_IncTick();
90002f42:	f006 ba19 	b.w	90009378 <HAL_IncTick>
90002f46:	bf00      	nop
90002f48:	40001000 	.word	0x40001000

90002f4c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90002f4c:	4770      	bx	lr
90002f4e:	bf00      	nop

90002f50 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f50:	4b0b      	ldr	r3, [pc, #44]	; (90002f80 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f52:	2200      	movs	r2, #0
90002f54:	210f      	movs	r1, #15
90002f56:	f06f 0001 	mvn.w	r0, #1
{
90002f5a:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f5c:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
90002f60:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f62:	f044 0402 	orr.w	r4, r4, #2
90002f66:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
90002f6a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
90002f6e:	f003 0302 	and.w	r3, r3, #2
90002f72:	9301      	str	r3, [sp, #4]
90002f74:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90002f76:	b003      	add	sp, #12
90002f78:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f7c:	f006 ba26 	b.w	900093cc <HAL_NVIC_SetPriority>
90002f80:	58024400 	.word	0x58024400

90002f84 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90002f84:	4b0a      	ldr	r3, [pc, #40]	; (90002fb0 <HAL_CRC_MspInit+0x2c>)
90002f86:	6802      	ldr	r2, [r0, #0]
90002f88:	429a      	cmp	r2, r3
90002f8a:	d000      	beq.n	90002f8e <HAL_CRC_MspInit+0xa>
90002f8c:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90002f8e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
90002f92:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90002f94:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90002f98:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
90002f9c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90002fa0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
90002fa4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90002fa8:	9301      	str	r3, [sp, #4]
90002faa:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90002fac:	b002      	add	sp, #8
90002fae:	4770      	bx	lr
90002fb0:	58024c00 	.word	0x58024c00

90002fb4 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90002fb4:	4b0f      	ldr	r3, [pc, #60]	; (90002ff4 <HAL_DMA2D_MspInit+0x40>)
90002fb6:	6802      	ldr	r2, [r0, #0]
90002fb8:	429a      	cmp	r2, r3
90002fba:	d000      	beq.n	90002fbe <HAL_DMA2D_MspInit+0xa>
90002fbc:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fbe:	4b0e      	ldr	r3, [pc, #56]	; (90002ff8 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fc0:	205a      	movs	r0, #90	; 0x5a
90002fc2:	2200      	movs	r2, #0
90002fc4:	2105      	movs	r1, #5
{
90002fc6:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fc8:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
90002fcc:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fce:	f044 0410 	orr.w	r4, r4, #16
90002fd2:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
90002fd6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90002fda:	f003 0310 	and.w	r3, r3, #16
90002fde:	9301      	str	r3, [sp, #4]
90002fe0:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fe2:	f006 f9f3 	bl	900093cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002fe6:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90002fe8:	b002      	add	sp, #8
90002fea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002fee:	f006 ba2b 	b.w	90009448 <HAL_NVIC_EnableIRQ>
90002ff2:	bf00      	nop
90002ff4:	52001000 	.word	0x52001000
90002ff8:	58024400 	.word	0x58024400

90002ffc <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90002ffc:	4b3f      	ldr	r3, [pc, #252]	; (900030fc <HAL_JPEG_MspInit+0x100>)
90002ffe:	6802      	ldr	r2, [r0, #0]
90003000:	429a      	cmp	r2, r3
90003002:	d000      	beq.n	90003006 <HAL_JPEG_MspInit+0xa>
90003004:	4770      	bx	lr
{
90003006:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003008:	4b3d      	ldr	r3, [pc, #244]	; (90003100 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000300a:	2211      	movs	r2, #17
9000300c:	4e3d      	ldr	r6, [pc, #244]	; (90003104 <HAL_JPEG_MspInit+0x108>)
{
9000300e:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003010:	4d3d      	ldr	r5, [pc, #244]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
90003012:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003014:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003016:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003018:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
9000301c:	493b      	ldr	r1, [pc, #236]	; (9000310c <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
9000301e:	f042 0220 	orr.w	r2, r2, #32
90003022:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003026:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003028:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000302c:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
9000302e:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003032:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003034:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003036:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003038:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
9000303a:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000303c:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003040:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
90003044:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003046:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003048:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
9000304c:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003050:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90003052:	f44f 3300 	mov.w	r3, #131072	; 0x20000
90003056:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
9000305a:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000305e:	2313      	movs	r3, #19
90003060:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90003062:	2302      	movs	r3, #2
90003064:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003066:	f009 f80b 	bl	9000c080 <HAL_MDMA_Init>
9000306a:	2800      	cmp	r0, #0
9000306c:	d13a      	bne.n	900030e4 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
9000306e:	2200      	movs	r2, #0
90003070:	4824      	ldr	r0, [pc, #144]	; (90003104 <HAL_JPEG_MspInit+0x108>)
90003072:	4611      	mov	r1, r2
90003074:	f009 f8a2 	bl	9000c1bc <HAL_MDMA_ConfigPostRequestMask>
90003078:	2800      	cmp	r0, #0
9000307a:	d13c      	bne.n	900030f6 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000307c:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000307e:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003080:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003082:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003084:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90003086:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003088:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000308c:	4920      	ldr	r1, [pc, #128]	; (90003110 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000308e:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003090:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
90003092:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003094:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003096:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
9000309a:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000309e:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030a0:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900030a2:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900030a6:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030a8:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030ac:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030b0:	4815      	ldr	r0, [pc, #84]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030b2:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030b4:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030b6:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030b8:	f008 ffe2 	bl	9000c080 <HAL_MDMA_Init>
900030bc:	b9c0      	cbnz	r0, 900030f0 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900030be:	2200      	movs	r2, #0
900030c0:	4811      	ldr	r0, [pc, #68]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
900030c2:	4611      	mov	r1, r2
900030c4:	f009 f87a 	bl	9000c1bc <HAL_MDMA_ConfigPostRequestMask>
900030c8:	b978      	cbnz	r0, 900030ea <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030ca:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030cc:	2079      	movs	r0, #121	; 0x79
900030ce:	2200      	movs	r2, #0
900030d0:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030d2:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030d4:	f006 f97a 	bl	900093cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030d8:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
900030da:	b002      	add	sp, #8
900030dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030e0:	f006 b9b2 	b.w	90009448 <HAL_NVIC_EnableIRQ>
      Error_Handler();
900030e4:	f7ff ff32 	bl	90002f4c <Error_Handler>
900030e8:	e7c1      	b.n	9000306e <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900030ea:	f7ff ff2f 	bl	90002f4c <Error_Handler>
900030ee:	e7ec      	b.n	900030ca <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900030f0:	f7ff ff2c 	bl	90002f4c <Error_Handler>
900030f4:	e7e3      	b.n	900030be <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900030f6:	f7ff ff29 	bl	90002f4c <Error_Handler>
900030fa:	e7bf      	b.n	9000307c <HAL_JPEG_MspInit+0x80>
900030fc:	52003000 	.word	0x52003000
90003100:	58024400 	.word	0x58024400
90003104:	24009660 	.word	0x24009660
90003108:	240096cc 	.word	0x240096cc
9000310c:	52000200 	.word	0x52000200
90003110:	520001c0 	.word	0x520001c0

90003114 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90003114:	b570      	push	{r4, r5, r6, lr}
90003116:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003118:	2100      	movs	r1, #0
{
9000311a:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000311c:	22c0      	movs	r2, #192	; 0xc0
9000311e:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003120:	9109      	str	r1, [sp, #36]	; 0x24
90003122:	e9cd 1105 	strd	r1, r1, [sp, #20]
90003126:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000312a:	f025 fa39 	bl	900285a0 <memset>
  if(hltdc->Instance==LTDC)
9000312e:	4b4a      	ldr	r3, [pc, #296]	; (90003258 <HAL_LTDC_MspInit+0x144>)
90003130:	6822      	ldr	r2, [r4, #0]
90003132:	429a      	cmp	r2, r3
90003134:	d001      	beq.n	9000313a <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
90003136:	b03a      	add	sp, #232	; 0xe8
90003138:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000313a:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
9000313c:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000313e:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
90003142:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003144:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003146:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003148:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000314a:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
9000314c:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000314e:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003152:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003154:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003156:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000315a:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000315e:	f00a f8bf 	bl	9000d2e0 <HAL_RCCEx_PeriphCLKConfig>
90003162:	2800      	cmp	r0, #0
90003164:	d174      	bne.n	90003250 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90003166:	4b3d      	ldr	r3, [pc, #244]	; (9000325c <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003168:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000316a:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000316c:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
9000316e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003172:	a905      	add	r1, sp, #20
90003174:	483a      	ldr	r0, [pc, #232]	; (90003260 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90003176:	f042 0208 	orr.w	r2, r2, #8
9000317a:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
9000317e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
90003182:	f002 0208 	and.w	r2, r2, #8
90003186:	9200      	str	r2, [sp, #0]
90003188:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
9000318a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000318e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
90003192:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003196:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000319a:	f402 6280 	and.w	r2, r2, #1024	; 0x400
9000319e:	9201      	str	r2, [sp, #4]
900031a0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900031a2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031a6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
900031aa:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031ae:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031b2:	f402 7280 	and.w	r2, r2, #256	; 0x100
900031b6:	9202      	str	r2, [sp, #8]
900031b8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900031ba:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031be:	f442 7200 	orr.w	r2, r2, #512	; 0x200
900031c2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031c6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031ca:	f402 7200 	and.w	r2, r2, #512	; 0x200
900031ce:	9203      	str	r2, [sp, #12]
900031d0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031d2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031d6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900031da:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031de:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900031e2:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031e4:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900031e8:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031ea:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031ec:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031ee:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031f0:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900031f2:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900031f6:	f006 fb55 	bl	900098a4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900031fa:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900031fe:	a905      	add	r1, sp, #20
90003200:	4818      	ldr	r0, [pc, #96]	; (90003264 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003202:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003204:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003208:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000320c:	f006 fb4a 	bl	900098a4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003210:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003214:	a905      	add	r1, sp, #20
90003216:	4814      	ldr	r0, [pc, #80]	; (90003268 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003218:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000321a:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000321e:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003222:	f006 fb3f 	bl	900098a4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003226:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000322a:	a905      	add	r1, sp, #20
9000322c:	480f      	ldr	r0, [pc, #60]	; (9000326c <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000322e:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003230:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90003234:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003238:	f006 fb34 	bl	900098a4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
9000323c:	462a      	mov	r2, r5
9000323e:	2105      	movs	r1, #5
90003240:	2058      	movs	r0, #88	; 0x58
90003242:	f006 f8c3 	bl	900093cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90003246:	2058      	movs	r0, #88	; 0x58
90003248:	f006 f8fe 	bl	90009448 <HAL_NVIC_EnableIRQ>
}
9000324c:	b03a      	add	sp, #232	; 0xe8
9000324e:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90003250:	f7ff fe7c 	bl	90002f4c <Error_Handler>
90003254:	e787      	b.n	90003166 <HAL_LTDC_MspInit+0x52>
90003256:	bf00      	nop
90003258:	50001000 	.word	0x50001000
9000325c:	58024400 	.word	0x58024400
90003260:	58022800 	.word	0x58022800
90003264:	58022000 	.word	0x58022000
90003268:	58022400 	.word	0x58022400
9000326c:	58021c00 	.word	0x58021c00

90003270 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90003270:	4836      	ldr	r0, [pc, #216]	; (9000334c <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003272:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003274:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
90003276:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003278:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000327a:	e9cd 3302 	strd	r3, r3, [sp, #8]
9000327e:	e9cd 3304 	strd	r3, r3, [sp, #16]
90003282:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90003284:	b109      	cbz	r1, 9000328a <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
90003286:	b038      	add	sp, #224	; 0xe0
90003288:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
9000328a:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000328c:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
9000328e:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003290:	a80a      	add	r0, sp, #40	; 0x28
90003292:	f025 f985 	bl	900285a0 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90003296:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
9000329a:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000329c:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000329e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900032a2:	f00a f81d 	bl	9000d2e0 <HAL_RCCEx_PeriphCLKConfig>
900032a6:	2800      	cmp	r0, #0
900032a8:	d14c      	bne.n	90003344 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900032aa:	4b29      	ldr	r3, [pc, #164]	; (90003350 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032ac:	f64f 7083 	movw	r0, #65411	; 0xff83
900032b0:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032b2:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900032b4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032b8:	2600      	movs	r6, #0
900032ba:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900032bc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
900032c0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900032c4:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032c8:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900032ca:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032ce:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900032d2:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032d4:	a902      	add	r1, sp, #8
900032d6:	481f      	ldr	r0, [pc, #124]	; (90003354 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900032d8:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032da:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032de:	f006 fae1 	bl	900098a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032e2:	f248 1233 	movw	r2, #33075	; 0x8133
900032e6:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032e8:	a902      	add	r1, sp, #8
900032ea:	481b      	ldr	r0, [pc, #108]	; (90003358 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032ec:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032ee:	e9cd 2302 	strd	r2, r3, [sp, #8]
900032f2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032f6:	f006 fad5 	bl	900098a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900032fa:	f24c 7203 	movw	r2, #50947	; 0xc703
900032fe:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003300:	a902      	add	r1, sp, #8
90003302:	4816      	ldr	r0, [pc, #88]	; (9000335c <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003304:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003306:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000330a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000330e:	f006 fac9 	bl	900098a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003312:	f64f 023f 	movw	r2, #63551	; 0xf83f
90003316:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003318:	a902      	add	r1, sp, #8
9000331a:	4811      	ldr	r0, [pc, #68]	; (90003360 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000331c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000331e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003322:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003326:	f006 fabd 	bl	900098a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000332a:	22e0      	movs	r2, #224	; 0xe0
9000332c:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000332e:	a902      	add	r1, sp, #8
90003330:	480c      	ldr	r0, [pc, #48]	; (90003364 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003332:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003334:	e9cd 6704 	strd	r6, r7, [sp, #16]
90003338:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000333c:	f006 fab2 	bl	900098a4 <HAL_GPIO_Init>
}
90003340:	b038      	add	sp, #224	; 0xe0
90003342:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90003344:	f7ff fe02 	bl	90002f4c <Error_Handler>
90003348:	e7af      	b.n	900032aa <HAL_SDRAM_MspInit+0x3a>
9000334a:	bf00      	nop
9000334c:	24009774 	.word	0x24009774
90003350:	58024400 	.word	0x58024400
90003354:	58021000 	.word	0x58021000
90003358:	58021800 	.word	0x58021800
9000335c:	58020c00 	.word	0x58020c00
90003360:	58021400 	.word	0x58021400
90003364:	58021c00 	.word	0x58021c00

90003368 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90003368:	4b13      	ldr	r3, [pc, #76]	; (900033b8 <HAL_SDRAM_MspDeInit+0x50>)
9000336a:	681a      	ldr	r2, [r3, #0]
9000336c:	b102      	cbz	r2, 90003370 <HAL_SDRAM_MspDeInit+0x8>
9000336e:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90003370:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90003372:	4a12      	ldr	r2, [pc, #72]	; (900033bc <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90003374:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003376:	f64f 7183 	movw	r1, #65411	; 0xff83
9000337a:	4811      	ldr	r0, [pc, #68]	; (900033c0 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
9000337c:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
9000337e:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
90003382:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90003386:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000338a:	f006 fbbd 	bl	90009b08 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000338e:	f248 1133 	movw	r1, #33075	; 0x8133
90003392:	480c      	ldr	r0, [pc, #48]	; (900033c4 <HAL_SDRAM_MspDeInit+0x5c>)
90003394:	f006 fbb8 	bl	90009b08 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003398:	f24c 7103 	movw	r1, #50947	; 0xc703
9000339c:	480a      	ldr	r0, [pc, #40]	; (900033c8 <HAL_SDRAM_MspDeInit+0x60>)
9000339e:	f006 fbb3 	bl	90009b08 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900033a2:	f64f 013f 	movw	r1, #63551	; 0xf83f
900033a6:	4809      	ldr	r0, [pc, #36]	; (900033cc <HAL_SDRAM_MspDeInit+0x64>)
900033a8:	f006 fbae 	bl	90009b08 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033ac:	21e0      	movs	r1, #224	; 0xe0
900033ae:	4808      	ldr	r0, [pc, #32]	; (900033d0 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900033b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033b4:	f006 bba8 	b.w	90009b08 <HAL_GPIO_DeInit>
900033b8:	24009770 	.word	0x24009770
900033bc:	58024400 	.word	0x58024400
900033c0:	58021000 	.word	0x58021000
900033c4:	58021800 	.word	0x58021800
900033c8:	58020c00 	.word	0x58020c00
900033cc:	58021400 	.word	0x58021400
900033d0:	58021c00 	.word	0x58021c00

900033d4 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900033d4:	280f      	cmp	r0, #15
900033d6:	d901      	bls.n	900033dc <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900033d8:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900033da:	4770      	bx	lr
{
900033dc:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033de:	4601      	mov	r1, r0
{
900033e0:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033e2:	2200      	movs	r2, #0
900033e4:	4604      	mov	r4, r0
900033e6:	2036      	movs	r0, #54	; 0x36
900033e8:	f005 fff0 	bl	900093cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900033ec:	2036      	movs	r0, #54	; 0x36
900033ee:	f006 f82b 	bl	90009448 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900033f2:	4b1a      	ldr	r3, [pc, #104]	; (9000345c <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
900033f4:	4a1a      	ldr	r2, [pc, #104]	; (90003460 <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900033f6:	4669      	mov	r1, sp
900033f8:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
900033fa:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
900033fc:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90003400:	f042 0210 	orr.w	r2, r2, #16
90003404:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003408:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
9000340c:	f003 0310 	and.w	r3, r3, #16
90003410:	9301      	str	r3, [sp, #4]
90003412:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90003414:	f009 fe44 	bl	9000d0a0 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90003418:	9b07      	ldr	r3, [sp, #28]
9000341a:	b9bb      	cbnz	r3, 9000344c <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
9000341c:	f009 fdb0 	bl	9000cf80 <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003420:	4b10      	ldr	r3, [pc, #64]	; (90003464 <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
90003422:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
90003424:	4c10      	ldr	r4, [pc, #64]	; (90003468 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003426:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
9000342a:	4d10      	ldr	r5, [pc, #64]	; (9000346c <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
9000342c:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003430:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003432:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
90003434:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90003436:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003438:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
9000343a:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
9000343e:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003440:	f00a fdc0 	bl	9000dfc4 <HAL_TIM_Base_Init>
90003444:	b130      	cbz	r0, 90003454 <HAL_InitTick+0x80>
    return HAL_ERROR;
90003446:	2001      	movs	r0, #1
}
90003448:	b00b      	add	sp, #44	; 0x2c
9000344a:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
9000344c:	f009 fd98 	bl	9000cf80 <HAL_RCC_GetPCLK1Freq>
90003450:	0040      	lsls	r0, r0, #1
90003452:	e7e5      	b.n	90003420 <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
90003454:	4620      	mov	r0, r4
90003456:	f00a fe6b 	bl	9000e130 <HAL_TIM_Base_Start_IT>
9000345a:	e7f5      	b.n	90003448 <HAL_InitTick+0x74>
9000345c:	58024400 	.word	0x58024400
90003460:	24000078 	.word	0x24000078
90003464:	431bde83 	.word	0x431bde83
90003468:	24009778 	.word	0x24009778
9000346c:	40001000 	.word	0x40001000

90003470 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90003470:	4770      	bx	lr
90003472:	bf00      	nop

90003474 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90003474:	e7fe      	b.n	90003474 <HardFault_Handler>
90003476:	bf00      	nop

90003478 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90003478:	e7fe      	b.n	90003478 <MemManage_Handler>
9000347a:	bf00      	nop

9000347c <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
9000347c:	e7fe      	b.n	9000347c <BusFault_Handler>
9000347e:	bf00      	nop

90003480 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90003480:	e7fe      	b.n	90003480 <UsageFault_Handler>
90003482:	bf00      	nop

90003484 <DebugMon_Handler>:
90003484:	4770      	bx	lr
90003486:	bf00      	nop

90003488 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90003488:	4801      	ldr	r0, [pc, #4]	; (90003490 <TIM6_DAC_IRQHandler+0x8>)
9000348a:	f00a beb5 	b.w	9000e1f8 <HAL_TIM_IRQHandler>
9000348e:	bf00      	nop
90003490:	24009778 	.word	0x24009778

90003494 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90003494:	4801      	ldr	r0, [pc, #4]	; (9000349c <LTDC_IRQHandler+0x8>)
90003496:	f008 bc9d 	b.w	9000bdd4 <HAL_LTDC_IRQHandler>
9000349a:	bf00      	nop
9000349c:	240095b8 	.word	0x240095b8

900034a0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900034a0:	4801      	ldr	r0, [pc, #4]	; (900034a8 <DMA2D_IRQHandler+0x8>)
900034a2:	f006 b8fb 	b.w	9000969c <HAL_DMA2D_IRQHandler>
900034a6:	bf00      	nop
900034a8:	240094f8 	.word	0x240094f8

900034ac <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900034ac:	4801      	ldr	r0, [pc, #4]	; (900034b4 <JPEG_IRQHandler+0x8>)
900034ae:	f008 bb7d 	b.w	9000bbac <HAL_JPEG_IRQHandler>
900034b2:	bf00      	nop
900034b4:	24009560 	.word	0x24009560

900034b8 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034b8:	4804      	ldr	r0, [pc, #16]	; (900034cc <MDMA_IRQHandler+0x14>)
{
900034ba:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034bc:	f008 ff3e 	bl	9000c33c <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034c0:	4803      	ldr	r0, [pc, #12]	; (900034d0 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900034c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034c6:	f008 bf39 	b.w	9000c33c <HAL_MDMA_IRQHandler>
900034ca:	bf00      	nop
900034cc:	240096cc 	.word	0x240096cc
900034d0:	24009660 	.word	0x24009660

900034d4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900034d4:	2001      	movs	r0, #1
900034d6:	4770      	bx	lr

900034d8 <_kill>:

int _kill(int pid, int sig)
{
900034d8:	b508      	push	{r3, lr}
	errno = EINVAL;
900034da:	f025 f915 	bl	90028708 <__errno>
900034de:	2216      	movs	r2, #22
900034e0:	4603      	mov	r3, r0
	return -1;
}
900034e2:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900034e6:	601a      	str	r2, [r3, #0]
}
900034e8:	bd08      	pop	{r3, pc}
900034ea:	bf00      	nop

900034ec <_exit>:

void _exit (int status)
{
900034ec:	b508      	push	{r3, lr}
	errno = EINVAL;
900034ee:	f025 f90b 	bl	90028708 <__errno>
900034f2:	2316      	movs	r3, #22
900034f4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
900034f6:	e7fe      	b.n	900034f6 <_exit+0xa>

900034f8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
900034f8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900034fa:	1e16      	subs	r6, r2, #0
900034fc:	dd07      	ble.n	9000350e <_read+0x16>
900034fe:	460c      	mov	r4, r1
90003500:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90003502:	f3af 8000 	nop.w
90003506:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000350a:	42a5      	cmp	r5, r4
9000350c:	d1f9      	bne.n	90003502 <_read+0xa>
	}

return len;
}
9000350e:	4630      	mov	r0, r6
90003510:	bd70      	pop	{r4, r5, r6, pc}
90003512:	bf00      	nop

90003514 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90003514:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003516:	1e16      	subs	r6, r2, #0
90003518:	dd07      	ble.n	9000352a <_write+0x16>
9000351a:	460c      	mov	r4, r1
9000351c:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
9000351e:	f814 0b01 	ldrb.w	r0, [r4], #1
90003522:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003526:	42ac      	cmp	r4, r5
90003528:	d1f9      	bne.n	9000351e <_write+0xa>
	}
	return len;
}
9000352a:	4630      	mov	r0, r6
9000352c:	bd70      	pop	{r4, r5, r6, pc}
9000352e:	bf00      	nop

90003530 <_close>:

int _close(int file)
{
	return -1;
}
90003530:	f04f 30ff 	mov.w	r0, #4294967295
90003534:	4770      	bx	lr
90003536:	bf00      	nop

90003538 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90003538:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
9000353c:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
9000353e:	604b      	str	r3, [r1, #4]
}
90003540:	4770      	bx	lr
90003542:	bf00      	nop

90003544 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90003544:	2001      	movs	r0, #1
90003546:	4770      	bx	lr

90003548 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90003548:	2000      	movs	r0, #0
9000354a:	4770      	bx	lr

9000354c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
9000354c:	4770      	bx	lr
9000354e:	bf00      	nop

90003550 <_ZN23ApplicationFontProviderD0Ev>:
90003550:	b510      	push	{r4, lr}
90003552:	4604      	mov	r4, r0
90003554:	2104      	movs	r1, #4
90003556:	f024 fd6d 	bl	90028034 <_ZdlPvj>
9000355a:	4620      	mov	r0, r4
9000355c:	bd10      	pop	{r4, pc}
9000355e:	bf00      	nop

90003560 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90003560:	2901      	cmp	r1, #1
{
90003562:	b508      	push	{r3, lr}
    switch (typography)
90003564:	d004      	beq.n	90003570 <_ZN23ApplicationFontProvider7getFontEt+0x10>
90003566:	2902      	cmp	r1, #2
90003568:	d00a      	beq.n	90003580 <_ZN23ApplicationFontProvider7getFontEt+0x20>
9000356a:	b129      	cbz	r1, 90003578 <_ZN23ApplicationFontProvider7getFontEt+0x18>
9000356c:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
9000356e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90003570:	f000 ff4c 	bl	9000440c <_ZN17TypedTextDatabase8getFontsEv>
90003574:	6840      	ldr	r0, [r0, #4]
}
90003576:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90003578:	f000 ff48 	bl	9000440c <_ZN17TypedTextDatabase8getFontsEv>
9000357c:	6800      	ldr	r0, [r0, #0]
}
9000357e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90003580:	f000 ff44 	bl	9000440c <_ZN17TypedTextDatabase8getFontsEv>
90003584:	6880      	ldr	r0, [r0, #8]
}
90003586:	bd08      	pop	{r3, pc}

90003588 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90003588:	4800      	ldr	r0, [pc, #0]	; (9000358c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
9000358a:	4770      	bx	lr
9000358c:	9002ab0c 	.word	0x9002ab0c

90003590 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90003590:	200e      	movs	r0, #14
90003592:	4770      	bx	lr

90003594 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90003594:	b169      	cbz	r1, 900035b2 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90003596:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90003598:	b530      	push	{r4, r5, lr}
9000359a:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
9000359c:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000359e:	6895      	ldr	r5, [r2, #8]
900035a0:	f10d 0303 	add.w	r3, sp, #3
900035a4:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900035a6:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900035a8:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900035ac:	47a8      	blx	r5
        return glyph;
    }
900035ae:	b003      	add	sp, #12
900035b0:	bd30      	pop	{r4, r5, pc}
            return 0;
900035b2:	4608      	mov	r0, r1
    }
900035b4:	4770      	bx	lr
900035b6:	bf00      	nop

900035b8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900035b8:	89c0      	ldrh	r0, [r0, #14]
900035ba:	4770      	bx	lr

900035bc <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
900035bc:	8a00      	ldrh	r0, [r0, #16]
900035be:	4770      	bx	lr

900035c0 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
900035c0:	88c0      	ldrh	r0, [r0, #6]
900035c2:	4770      	bx	lr

900035c4 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
900035c4:	8880      	ldrh	r0, [r0, #4]
900035c6:	4770      	bx	lr

900035c8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
900035c8:	7a80      	ldrb	r0, [r0, #10]
    }
900035ca:	f000 007f 	and.w	r0, r0, #127	; 0x7f
900035ce:	4770      	bx	lr

900035d0 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
900035d0:	7a80      	ldrb	r0, [r0, #10]
    }
900035d2:	09c0      	lsrs	r0, r0, #7
900035d4:	4770      	bx	lr
900035d6:	bf00      	nop

900035d8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
900035d8:	4770      	bx	lr
900035da:	bf00      	nop

900035dc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
900035dc:	b510      	push	{r4, lr}
900035de:	4604      	mov	r4, r0
    }
900035e0:	2108      	movs	r1, #8
900035e2:	f024 fd27 	bl	90028034 <_ZdlPvj>
900035e6:	4620      	mov	r0, r4
900035e8:	bd10      	pop	{r4, pc}
900035ea:	bf00      	nop

900035ec <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
900035ec:	4770      	bx	lr
900035ee:	bf00      	nop

900035f0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
900035f0:	f500 7398 	add.w	r3, r0, #304	; 0x130
900035f4:	6808      	ldr	r0, [r1, #0]
900035f6:	6849      	ldr	r1, [r1, #4]
900035f8:	c303      	stmia	r3!, {r0, r1}
    }
900035fa:	4770      	bx	lr

900035fc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
900035fc:	6a80      	ldr	r0, [r0, #40]	; 0x28
900035fe:	4770      	bx	lr

90003600 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90003600:	4770      	bx	lr
90003602:	bf00      	nop

90003604 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90003604:	4770      	bx	lr
90003606:	bf00      	nop

90003608 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90003608:	6041      	str	r1, [r0, #4]
    }
9000360a:	4770      	bx	lr

9000360c <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000360c:	f04f 0c00 	mov.w	ip, #0
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
        {
            return Rect(0, 0, rect.width, rect.height);
90003610:	688a      	ldr	r2, [r1, #8]
90003612:	f8c0 c000 	str.w	ip, [r0]
90003616:	6042      	str	r2, [r0, #4]
        }
90003618:	4770      	bx	lr
9000361a:	bf00      	nop

9000361c <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
9000361c:	4770      	bx	lr
9000361e:	bf00      	nop

90003620 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90003620:	4770      	bx	lr
90003622:	bf00      	nop

90003624 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003624:	4905      	ldr	r1, [pc, #20]	; (9000363c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90003626:	2200      	movs	r2, #0
// screen_main_menu

void FrontendApplicationBase::gotoscreen_main_menuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_main_menuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90003628:	f500 73a2 	add.w	r3, r0, #324	; 0x144
9000362c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003630:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003634:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_main_menuScreenNoTransition();
    }
90003638:	4770      	bx	lr
9000363a:	bf00      	nop
9000363c:	90003ac5 	.word	0x90003ac5

90003640 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90003640:	2301      	movs	r3, #1
90003642:	7203      	strb	r3, [r0, #8]
    }
90003644:	4770      	bx	lr
90003646:	bf00      	nop

90003648 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
90003648:	4770      	bx	lr
9000364a:	bf00      	nop

9000364c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
9000364c:	4770      	bx	lr
9000364e:	bf00      	nop

90003650 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
90003650:	4770      	bx	lr
90003652:	bf00      	nop

90003654 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90003654:	4770      	bx	lr
90003656:	bf00      	nop

90003658 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90003658:	4770      	bx	lr
9000365a:	bf00      	nop

9000365c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
9000365c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
9000365e:	6840      	ldr	r0, [r0, #4]
90003660:	6803      	ldr	r3, [r0, #0]
90003662:	3110      	adds	r1, #16
90003664:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90003666:	4718      	bx	r3

90003668 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
90003668:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
9000366a:	6840      	ldr	r0, [r0, #4]
9000366c:	6803      	ldr	r3, [r0, #0]
9000366e:	3110      	adds	r1, #16
90003670:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003672:	4718      	bx	r3

90003674 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
90003674:	4770      	bx	lr
90003676:	bf00      	nop

90003678 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90003678:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
9000367a:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
9000367c:	6841      	ldr	r1, [r0, #4]
9000367e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90003682:	eb01 0062 	add.w	r0, r1, r2, asr #1
90003686:	07d2      	lsls	r2, r2, #31
90003688:	d401      	bmi.n	9000368e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
9000368a:	689b      	ldr	r3, [r3, #8]
9000368c:	4718      	bx	r3
9000368e:	f851 200c 	ldr.w	r2, [r1, ip]
90003692:	689b      	ldr	r3, [r3, #8]
90003694:	58d3      	ldr	r3, [r2, r3]
90003696:	4718      	bx	r3

90003698 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90003698:	6843      	ldr	r3, [r0, #4]
9000369a:	b13b      	cbz	r3, 900036ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
9000369c:	6883      	ldr	r3, [r0, #8]
9000369e:	b10b      	cbz	r3, 900036a4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900036a0:	2001      	movs	r0, #1
    }
900036a2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900036a4:	68c0      	ldr	r0, [r0, #12]
900036a6:	f000 0001 	and.w	r0, r0, #1
900036aa:	4770      	bx	lr
900036ac:	4618      	mov	r0, r3
900036ae:	4770      	bx	lr

900036b0 <_ZN8touchgfx12NoTransitionD0Ev>:
900036b0:	b510      	push	{r4, lr}
900036b2:	4604      	mov	r4, r0
900036b4:	210c      	movs	r1, #12
900036b6:	f024 fcbd 	bl	90028034 <_ZdlPvj>
900036ba:	4620      	mov	r0, r4
900036bc:	bd10      	pop	{r4, pc}
900036be:	bf00      	nop

900036c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900036c0:	b510      	push	{r4, lr}
900036c2:	4604      	mov	r4, r0
900036c4:	2110      	movs	r1, #16
900036c6:	f024 fcb5 	bl	90028034 <_ZdlPvj>
900036ca:	4620      	mov	r0, r4
900036cc:	bd10      	pop	{r4, pc}
900036ce:	bf00      	nop

900036d0 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900036d0:	b510      	push	{r4, lr}
900036d2:	4604      	mov	r4, r0
900036d4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
900036d8:	f024 fcac 	bl	90028034 <_ZdlPvj>
900036dc:	4620      	mov	r0, r4
900036de:	bd10      	pop	{r4, pc}

900036e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
900036e0:	b510      	push	{r4, lr}
900036e2:	4604      	mov	r4, r0
900036e4:	2138      	movs	r1, #56	; 0x38
900036e6:	f024 fca5 	bl	90028034 <_ZdlPvj>
900036ea:	4620      	mov	r0, r4
900036ec:	bd10      	pop	{r4, pc}
900036ee:	bf00      	nop

900036f0 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
900036f0:	b510      	push	{r4, lr}
900036f2:	4604      	mov	r4, r0
900036f4:	2128      	movs	r1, #40	; 0x28
900036f6:	f024 fc9d 	bl	90028034 <_ZdlPvj>
900036fa:	4620      	mov	r0, r4
900036fc:	bd10      	pop	{r4, pc}
900036fe:	bf00      	nop

90003700 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
90003700:	b510      	push	{r4, lr}
90003702:	4604      	mov	r4, r0
90003704:	2140      	movs	r1, #64	; 0x40
90003706:	f024 fc95 	bl	90028034 <_ZdlPvj>
9000370a:	4620      	mov	r0, r4
9000370c:	bd10      	pop	{r4, pc}
9000370e:	bf00      	nop

90003710 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90003710:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90003712:	f013 fb51 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
90003716:	6803      	ldr	r3, [r0, #0]
    }
90003718:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
9000371c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000371e:	4718      	bx	r3

90003720 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90003720:	4b05      	ldr	r3, [pc, #20]	; (90003738 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
90003722:	781b      	ldrb	r3, [r3, #0]
90003724:	b13b      	cbz	r3, 90003736 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
90003726:	6843      	ldr	r3, [r0, #4]
90003728:	b12b      	cbz	r3, 90003736 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
9000372a:	681a      	ldr	r2, [r3, #0]
9000372c:	f100 010c 	add.w	r1, r0, #12
90003730:	4618      	mov	r0, r3
90003732:	6e53      	ldr	r3, [r2, #100]	; 0x64
90003734:	4718      	bx	r3
        }
    }
90003736:	4770      	bx	lr
90003738:	2403989b 	.word	0x2403989b

9000373c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
9000373c:	b510      	push	{r4, lr}
9000373e:	4604      	mov	r4, r0
        animationCounter++;
90003740:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
90003742:	b082      	sub	sp, #8
        animationCounter++;
90003744:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90003746:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
90003748:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
9000374a:	4298      	cmp	r0, r3
        animationCounter++;
9000374c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
9000374e:	d905      	bls.n	9000375c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x20>
            done = true;
90003750:	2201      	movs	r2, #1
            animationCounter = 0;
90003752:	2300      	movs	r3, #0
            done = true;
90003754:	7222      	strb	r2, [r4, #8]
            animationCounter = 0;
90003756:	72a3      	strb	r3, [r4, #10]
    }
90003758:	b002      	add	sp, #8
9000375a:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
9000375c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90003760:	2100      	movs	r1, #0
90003762:	f015 f913 	bl	9001898c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90003766:	f010 0201 	ands.w	r2, r0, #1
9000376a:	b283      	uxth	r3, r0
9000376c:	d127      	bne.n	900037be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
9000376e:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003770:	4a17      	ldr	r2, [pc, #92]	; (900037d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                const uint16_t prevSolidWidth = solid.getWidth();
90003772:	8b21      	ldrh	r1, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003774:	8810      	ldrh	r0, [r2, #0]
90003776:	1ac2      	subs	r2, r0, r3
                const uint16_t delta = prevSolidWidth - solid.getWidth();
90003778:	1a09      	subs	r1, r1, r0
                screenContainer->invalidateRect(r);
9000377a:	6860      	ldr	r0, [r4, #4]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
9000377c:	b212      	sxth	r2, r2
                const uint16_t delta = prevSolidWidth - solid.getWidth();
9000377e:	440b      	add	r3, r1
                screenContainer->invalidateRect(r);
90003780:	4669      	mov	r1, sp
        rect.width = width;
90003782:	8322      	strh	r2, [r4, #24]
90003784:	f8ad 2000 	strh.w	r2, [sp]
90003788:	2200      	movs	r2, #0
9000378a:	f8ad 3004 	strh.w	r3, [sp, #4]
9000378e:	6803      	ldr	r3, [r0, #0]
90003790:	f8ad 2002 	strh.w	r2, [sp, #2]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
90003794:	4a0f      	ldr	r2, [pc, #60]	; (900037d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                screenContainer->invalidateRect(r);
90003796:	691b      	ldr	r3, [r3, #16]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
90003798:	f9b2 2000 	ldrsh.w	r2, [r2]
9000379c:	f8ad 2006 	strh.w	r2, [sp, #6]
                screenContainer->invalidateRect(r);
900037a0:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
900037a2:	7aa3      	ldrb	r3, [r4, #10]
900037a4:	2b01      	cmp	r3, #1
900037a6:	d1d7      	bne.n	90003758 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
900037a8:	4b0b      	ldr	r3, [pc, #44]	; (900037d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
900037aa:	781b      	ldrb	r3, [r3, #0]
900037ac:	2b00      	cmp	r3, #0
900037ae:	d0d3      	beq.n	90003758 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
900037b0:	f013 fb02 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
    }
900037b4:	b002      	add	sp, #8
900037b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
900037ba:	f013 bb03 	b.w	90016dc4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
900037be:	f64f 71ff 	movw	r1, #65535	; 0xffff
900037c2:	2800      	cmp	r0, #0
900037c4:	bfd8      	it	le
900037c6:	460a      	movle	r2, r1
900037c8:	4413      	add	r3, r2
900037ca:	b29b      	uxth	r3, r3
900037cc:	81e3      	strh	r3, [r4, #14]
900037ce:	e7cf      	b.n	90003770 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
900037d0:	24039890 	.word	0x24039890
900037d4:	24039892 	.word	0x24039892
900037d8:	2403989a 	.word	0x2403989a

900037dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
900037dc:	b570      	push	{r4, r5, r6, lr}
900037de:	4605      	mov	r5, r0
        animationCounter++;
900037e0:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
900037e4:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
900037e6:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
900037ea:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
900037ec:	4298      	cmp	r0, r3
        animationCounter++;
900037ee:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
900037f2:	d905      	bls.n	90003800 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
900037f4:	2201      	movs	r2, #1
            animationCounter = 0;
900037f6:	2300      	movs	r3, #0
            done = true;
900037f8:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
900037fa:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
900037fe:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003800:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90003804:	2100      	movs	r1, #0
90003806:	f015 f8c1 	bl	9001898c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
9000380a:	f010 0201 	ands.w	r2, r0, #1
9000380e:	b283      	uxth	r3, r0
90003810:	d006      	beq.n	90003820 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003812:	f64f 71ff 	movw	r1, #65535	; 0xffff
90003816:	2800      	cmp	r0, #0
90003818:	bfd8      	it	le
9000381a:	460a      	movle	r2, r1
9000381c:	4413      	add	r3, r2
9000381e:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90003820:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90003822:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90003824:	6802      	ldr	r2, [r0, #0]
90003826:	4912      	ldr	r1, [pc, #72]	; (90003870 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90003828:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
9000382a:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
9000382c:	87ab      	strh	r3, [r5, #60]	; 0x3c
9000382e:	428a      	cmp	r2, r1
90003830:	d11b      	bne.n	9000386a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8e>
        return firstChild;
90003832:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003834:	b164      	cbz	r4, 90003850 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003836:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003838:	4e0e      	ldr	r6, [pc, #56]	; (90003874 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
9000383a:	6823      	ldr	r3, [r4, #0]
9000383c:	88a1      	ldrh	r1, [r4, #4]
9000383e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003840:	4411      	add	r1, r2
90003842:	42b3      	cmp	r3, r6
90003844:	b209      	sxth	r1, r1
        rect.x = x;
90003846:	d109      	bne.n	9000385c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>
90003848:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
9000384a:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000384c:	2c00      	cmp	r4, #0
9000384e:	d1f4      	bne.n	9000383a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90003850:	6868      	ldr	r0, [r5, #4]
90003852:	6803      	ldr	r3, [r0, #0]
    }
90003854:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90003858:	695b      	ldr	r3, [r3, #20]
9000385a:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
9000385c:	4620      	mov	r0, r4
9000385e:	4798      	blx	r3
90003860:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003862:	2c00      	cmp	r4, #0
90003864:	d0f4      	beq.n	90003850 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003866:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003868:	e7e7      	b.n	9000383a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
9000386a:	4790      	blx	r2
9000386c:	4604      	mov	r4, r0
9000386e:	e7e1      	b.n	90003834 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x58>
90003870:	900035fd 	.word	0x900035fd
90003874:	9000228d 	.word	0x9000228d

90003878 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90003878:	7a03      	ldrb	r3, [r0, #8]
9000387a:	bb2b      	cbnz	r3, 900038c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
9000387c:	4a14      	ldr	r2, [pc, #80]	; (900038d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
9000387e:	b570      	push	{r4, r5, r6, lr}
90003880:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90003882:	6840      	ldr	r0, [r0, #4]
90003884:	6803      	ldr	r3, [r0, #0]
90003886:	69db      	ldr	r3, [r3, #28]
90003888:	4293      	cmp	r3, r2
9000388a:	d11e      	bne.n	900038ca <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
9000388c:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
9000388e:	b164      	cbz	r4, 900038aa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003890:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003892:	4e10      	ldr	r6, [pc, #64]	; (900038d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
90003894:	6823      	ldr	r3, [r4, #0]
90003896:	88a1      	ldrh	r1, [r4, #4]
90003898:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000389a:	1a89      	subs	r1, r1, r2
9000389c:	42b3      	cmp	r3, r6
9000389e:	b209      	sxth	r1, r1
        rect.x = x;
900038a0:	d10b      	bne.n	900038ba <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
900038a2:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
900038a4:	69a4      	ldr	r4, [r4, #24]
        while (d)
900038a6:	2c00      	cmp	r4, #0
900038a8:	d1f4      	bne.n	90003894 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
900038aa:	6868      	ldr	r0, [r5, #4]
900038ac:	f105 010c 	add.w	r1, r5, #12
900038b0:	6803      	ldr	r3, [r0, #0]
    }
900038b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
900038b6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900038b8:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
900038ba:	4620      	mov	r0, r4
900038bc:	4798      	blx	r3
900038be:	69a4      	ldr	r4, [r4, #24]
        while (d)
900038c0:	2c00      	cmp	r4, #0
900038c2:	d0f2      	beq.n	900038aa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
900038c4:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
900038c6:	e7e5      	b.n	90003894 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
900038c8:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
900038ca:	4798      	blx	r3
900038cc:	4604      	mov	r4, r0
900038ce:	e7de      	b.n	9000388e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
900038d0:	900035fd 	.word	0x900035fd
900038d4:	9000228d 	.word	0x9000228d

900038d8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl()
{
900038d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900038dc:	e9d0 5355 	ldrd	r5, r3, [r0, #340]	; 0x154
{
900038e0:	b083      	sub	sp, #12
900038e2:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900038e4:	68a8      	ldr	r0, [r5, #8]
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900038e6:	9301      	str	r3, [sp, #4]
900038e8:	6803      	ldr	r3, [r0, #0]
900038ea:	6a1b      	ldr	r3, [r3, #32]
900038ec:	4798      	blx	r3
900038ee:	f5b0 7f64 	cmp.w	r0, #912	; 0x390
900038f2:	f0c0 80ba 	bcc.w	90003a6a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x192>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900038f6:	6868      	ldr	r0, [r5, #4]
900038f8:	6803      	ldr	r3, [r0, #0]
900038fa:	6a1b      	ldr	r3, [r3, #32]
900038fc:	4798      	blx	r3
900038fe:	280f      	cmp	r0, #15
90003900:	f240 80bf 	bls.w	90003a82 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1aa>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003904:	68e8      	ldr	r0, [r5, #12]
90003906:	6803      	ldr	r3, [r0, #0]
90003908:	6a1b      	ldr	r3, [r3, #32]
9000390a:	4798      	blx	r3
9000390c:	2837      	cmp	r0, #55	; 0x37
9000390e:	f240 80b2 	bls.w	90003a76 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x19e>
    if (*currentTrans)
90003912:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 90003abc <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e4>
    Application::getInstance()->clearAllTimerWidgets();
90003916:	f013 fa4f 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
9000391a:	3004      	adds	r0, #4
9000391c:	f013 fa99 	bl	90016e52 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003920:	f8d9 0000 	ldr.w	r0, [r9]
90003924:	b140      	cbz	r0, 90003938 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003926:	6803      	ldr	r3, [r0, #0]
90003928:	68db      	ldr	r3, [r3, #12]
9000392a:	4798      	blx	r3
    if (*currentTrans)
9000392c:	f8d9 0000 	ldr.w	r0, [r9]
90003930:	b110      	cbz	r0, 90003938 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003932:	6803      	ldr	r3, [r0, #0]
90003934:	681b      	ldr	r3, [r3, #0]
90003936:	4798      	blx	r3
    if (*currentScreen)
90003938:	f8df 8184 	ldr.w	r8, [pc, #388]	; 90003ac0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e8>
9000393c:	f8d8 0000 	ldr.w	r0, [r8]
90003940:	2800      	cmp	r0, #0
90003942:	d07f      	beq.n	90003a44 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x16c>
        (*currentScreen)->tearDownScreen();
90003944:	6803      	ldr	r3, [r0, #0]
90003946:	695b      	ldr	r3, [r3, #20]
90003948:	4798      	blx	r3
    if (*currentPresenter)
9000394a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
9000394e:	2800      	cmp	r0, #0
90003950:	d073      	beq.n	90003a3a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x162>
        (*currentPresenter)->deactivate();
90003952:	6803      	ldr	r3, [r0, #0]
90003954:	685b      	ldr	r3, [r3, #4]
90003956:	4798      	blx	r3
    if (*currentScreen)
90003958:	f8d8 0000 	ldr.w	r0, [r8]
9000395c:	b110      	cbz	r0, 90003964 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x8c>
        (*currentScreen)->~Screen();
9000395e:	6803      	ldr	r3, [r0, #0]
90003960:	681b      	ldr	r3, [r3, #0]
90003962:	4798      	blx	r3
    if (*currentPresenter)
90003964:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003968:	b110      	cbz	r0, 90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
        (*currentPresenter)->~Presenter();
9000396a:	6803      	ldr	r3, [r0, #0]
9000396c:	689b      	ldr	r3, [r3, #8]
9000396e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003970:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90003972:	2100      	movs	r1, #0
90003974:	6802      	ldr	r2, [r0, #0]
        : screenContainer(0), done(false)
90003976:	468a      	mov	sl, r1
90003978:	6a52      	ldr	r2, [r2, #36]	; 0x24
9000397a:	4790      	blx	r2
          solid()
9000397c:	4a44      	ldr	r2, [pc, #272]	; (90003a90 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1b8>)
9000397e:	f100 0b10 	add.w	fp, r0, #16
90003982:	4604      	mov	r4, r0
90003984:	6002      	str	r2, [r0, #0]
          animationSteps(transitionSteps),
90003986:	2214      	movs	r2, #20
          solid()
90003988:	4651      	mov	r1, sl
9000398a:	f8c0 a004 	str.w	sl, [r0, #4]
          animationSteps(transitionSteps),
9000398e:	f8a0 2009 	strh.w	r2, [r0, #9]
          solid()
90003992:	2228      	movs	r2, #40	; 0x28
90003994:	f880 a008 	strb.w	sl, [r0, #8]
          calculatedValue(0),
90003998:	f8a0 a00e 	strh.w	sl, [r0, #14]
          solid()
9000399c:	4658      	mov	r0, fp
9000399e:	f024 fdff 	bl	900285a0 <memset>
            targetValue = HAL::DISPLAY_WIDTH;
900039a2:	4a3c      	ldr	r2, [pc, #240]	; (90003a94 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1bc>)
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900039a4:	68a8      	ldr	r0, [r5, #8]
          touchable(false),
900039a6:	f44f 7180 	mov.w	r1, #256	; 0x100
900039aa:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.x = x;
900039ae:	f8c4 a014 	str.w	sl, [r4, #20]
900039b2:	81a2      	strh	r2, [r4, #12]
        rect.width = width;
900039b4:	8322      	strh	r2, [r4, #24]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900039b6:	4a38      	ldr	r2, [pc, #224]	; (90003a98 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c0>)
900039b8:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.height = height;
900039bc:	8362      	strh	r2, [r4, #26]
900039be:	6802      	ldr	r2, [r0, #0]
900039c0:	6a52      	ldr	r2, [r2, #36]	; 0x24
          touchable(false),
900039c2:	86a1      	strh	r1, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
900039c4:	4935      	ldr	r1, [pc, #212]	; (90003a9c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c4>)
900039c6:	6121      	str	r1, [r4, #16]
900039c8:	4651      	mov	r1, sl
900039ca:	4790      	blx	r2
900039cc:	4606      	mov	r6, r0
900039ce:	f003 fa35 	bl	90006e3c <_ZN21screen_snake_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900039d2:	6868      	ldr	r0, [r5, #4]
900039d4:	4651      	mov	r1, sl
900039d6:	6803      	ldr	r3, [r0, #0]
900039d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900039da:	4798      	blx	r3
900039dc:	4605      	mov	r5, r0
900039de:	4631      	mov	r1, r6
900039e0:	f003 f9b6 	bl	90006d50 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>
    *currentTrans = newTransition;
900039e4:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
900039e8:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
900039ec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
900039f0:	2d00      	cmp	r5, #0
900039f2:	d02c      	beq.n	90003a4e <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x176>
900039f4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
900039f6:	9a01      	ldr	r2, [sp, #4]
    newScreen->setupScreen();
900039f8:	4630      	mov	r0, r6
900039fa:	6013      	str	r3, [r2, #0]
900039fc:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
900039fe:	60aa      	str	r2, [r5, #8]
90003a00:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90003a02:	63f5      	str	r5, [r6, #60]	; 0x3c
90003a04:	4798      	blx	r3
    newPresenter->activate();
90003a06:	682b      	ldr	r3, [r5, #0]
90003a08:	4628      	mov	r0, r5
90003a0a:	681b      	ldr	r3, [r3, #0]
90003a0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003a0e:	4621      	mov	r1, r4
90003a10:	4630      	mov	r0, r6
90003a12:	f014 ffb5 	bl	90018980 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003a16:	6823      	ldr	r3, [r4, #0]
90003a18:	4a21      	ldr	r2, [pc, #132]	; (90003aa0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c8>)
90003a1a:	691b      	ldr	r3, [r3, #16]
90003a1c:	4293      	cmp	r3, r2
90003a1e:	d118      	bne.n	90003a52 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x17a>
        screenContainer->add(solid);
90003a20:	6860      	ldr	r0, [r4, #4]
90003a22:	4659      	mov	r1, fp
90003a24:	6803      	ldr	r3, [r0, #0]
90003a26:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003a28:	4798      	blx	r3
    newTransition->invalidate();
90003a2a:	6823      	ldr	r3, [r4, #0]
90003a2c:	4a1d      	ldr	r2, [pc, #116]	; (90003aa4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003a2e:	695b      	ldr	r3, [r3, #20]
90003a30:	4293      	cmp	r3, r2
90003a32:	d115      	bne.n	90003a60 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x188>
}
90003a34:	b003      	add	sp, #12
90003a36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
90003a3a:	f8d8 0000 	ldr.w	r0, [r8]
90003a3e:	2800      	cmp	r0, #0
90003a40:	d18d      	bne.n	9000395e <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x86>
90003a42:	e795      	b.n	90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    if (*currentPresenter)
90003a44:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003a48:	2800      	cmp	r0, #0
90003a4a:	d182      	bne.n	90003952 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x7a>
90003a4c:	e790      	b.n	90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    model->bind(newPresenter);
90003a4e:	462b      	mov	r3, r5
90003a50:	e7d1      	b.n	900039f6 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x11e>
    newTransition->init();
90003a52:	4620      	mov	r0, r4
90003a54:	4798      	blx	r3
    newTransition->invalidate();
90003a56:	6823      	ldr	r3, [r4, #0]
90003a58:	4a12      	ldr	r2, [pc, #72]	; (90003aa4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003a5a:	695b      	ldr	r3, [r3, #20]
90003a5c:	4293      	cmp	r3, r2
90003a5e:	d0e9      	beq.n	90003a34 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x15c>
90003a60:	4620      	mov	r0, r4
90003a62:	b003      	add	sp, #12
90003a64:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003a68:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003a6a:	4b0f      	ldr	r3, [pc, #60]	; (90003aa8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d0>)
90003a6c:	21a3      	movs	r1, #163	; 0xa3
90003a6e:	4a0f      	ldr	r2, [pc, #60]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a70:	480f      	ldr	r0, [pc, #60]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a72:	f024 fb0d 	bl	90028090 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003a76:	4b0f      	ldr	r3, [pc, #60]	; (90003ab4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1dc>)
90003a78:	21a5      	movs	r1, #165	; 0xa5
90003a7a:	4a0c      	ldr	r2, [pc, #48]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a7c:	480c      	ldr	r0, [pc, #48]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a7e:	f024 fb07 	bl	90028090 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003a82:	4b0d      	ldr	r3, [pc, #52]	; (90003ab8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e0>)
90003a84:	21a4      	movs	r1, #164	; 0xa4
90003a86:	4a09      	ldr	r2, [pc, #36]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a88:	4809      	ldr	r0, [pc, #36]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a8a:	f024 fb01 	bl	90028090 <__assert_func>
90003a8e:	bf00      	nop
90003a90:	9002b2cc 	.word	0x9002b2cc
90003a94:	24039890 	.word	0x24039890
90003a98:	24039892 	.word	0x24039892
90003a9c:	9002b1d4 	.word	0x9002b1d4
90003aa0:	90003669 	.word	0x90003669
90003aa4:	90003675 	.word	0x90003675
90003aa8:	9002ac34 	.word	0x9002ac34
90003aac:	9002acc4 	.word	0x9002acc4
90003ab0:	9002adf0 	.word	0x9002adf0
90003ab4:	9002aedc 	.word	0x9002aedc
90003ab8:	9002ae38 	.word	0x9002ae38
90003abc:	240398e4 	.word	0x240398e4
90003ac0:	240398e0 	.word	0x240398e0

90003ac4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv>:
{
90003ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_main_menuView, screen_main_menuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003ac8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90003acc:	4607      	mov	r7, r0
90003ace:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003ad0:	68a0      	ldr	r0, [r4, #8]
90003ad2:	6803      	ldr	r3, [r0, #0]
90003ad4:	6a1b      	ldr	r3, [r3, #32]
90003ad6:	4798      	blx	r3
90003ad8:	f5b0 7fe2 	cmp.w	r0, #452	; 0x1c4
90003adc:	f0c0 809e 	bcc.w	90003c1c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003ae0:	6860      	ldr	r0, [r4, #4]
90003ae2:	6803      	ldr	r3, [r0, #0]
90003ae4:	6a1b      	ldr	r3, [r3, #32]
90003ae6:	4798      	blx	r3
90003ae8:	280f      	cmp	r0, #15
90003aea:	f240 80a3 	bls.w	90003c34 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003aee:	68e0      	ldr	r0, [r4, #12]
90003af0:	6803      	ldr	r3, [r0, #0]
90003af2:	6a1b      	ldr	r3, [r3, #32]
90003af4:	4798      	blx	r3
90003af6:	280b      	cmp	r0, #11
90003af8:	f240 8096 	bls.w	90003c28 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90003afc:	f8df 9160 	ldr.w	r9, [pc, #352]	; 90003c60 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90003b00:	f013 f95a 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
90003b04:	3004      	adds	r0, #4
90003b06:	f013 f9a4 	bl	90016e52 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003b0a:	f8d9 0000 	ldr.w	r0, [r9]
90003b0e:	b140      	cbz	r0, 90003b22 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90003b10:	6803      	ldr	r3, [r0, #0]
90003b12:	68db      	ldr	r3, [r3, #12]
90003b14:	4798      	blx	r3
    if (*currentTrans)
90003b16:	f8d9 0000 	ldr.w	r0, [r9]
90003b1a:	b110      	cbz	r0, 90003b22 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90003b1c:	6803      	ldr	r3, [r0, #0]
90003b1e:	681b      	ldr	r3, [r3, #0]
90003b20:	4798      	blx	r3
    if (*currentScreen)
90003b22:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003c64 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x1a0>
90003b26:	f8d8 0000 	ldr.w	r0, [r8]
90003b2a:	2800      	cmp	r0, #0
90003b2c:	d063      	beq.n	90003bf6 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90003b2e:	6803      	ldr	r3, [r0, #0]
90003b30:	695b      	ldr	r3, [r3, #20]
90003b32:	4798      	blx	r3
    if (*currentPresenter)
90003b34:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003b38:	2800      	cmp	r0, #0
90003b3a:	d057      	beq.n	90003bec <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90003b3c:	6803      	ldr	r3, [r0, #0]
90003b3e:	685b      	ldr	r3, [r3, #4]
90003b40:	4798      	blx	r3
    if (*currentScreen)
90003b42:	f8d8 0000 	ldr.w	r0, [r8]
90003b46:	b110      	cbz	r0, 90003b4e <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90003b48:	6803      	ldr	r3, [r0, #0]
90003b4a:	681b      	ldr	r3, [r3, #0]
90003b4c:	4798      	blx	r3
    if (*currentPresenter)
90003b4e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003b52:	b110      	cbz	r0, 90003b5a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90003b54:	6803      	ldr	r3, [r0, #0]
90003b56:	689b      	ldr	r3, [r3, #8]
90003b58:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003b5a:	68e0      	ldr	r0, [r4, #12]
90003b5c:	2100      	movs	r1, #0
90003b5e:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003b60:	468b      	mov	fp, r1
90003b62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003b64:	4798      	blx	r3
90003b66:	4b36      	ldr	r3, [pc, #216]	; (90003c40 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x17c>)
90003b68:	4605      	mov	r5, r0
90003b6a:	f8c0 b004 	str.w	fp, [r0, #4]
90003b6e:	f880 b008 	strb.w	fp, [r0, #8]
90003b72:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003b74:	68a0      	ldr	r0, [r4, #8]
90003b76:	602b      	str	r3, [r5, #0]
90003b78:	6803      	ldr	r3, [r0, #0]
90003b7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003b7c:	4798      	blx	r3
90003b7e:	4606      	mov	r6, r0
90003b80:	f003 f8c0 	bl	90006d04 <_ZN20screen_main_menuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003b84:	6860      	ldr	r0, [r4, #4]
90003b86:	4659      	mov	r1, fp
90003b88:	6803      	ldr	r3, [r0, #0]
90003b8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003b8c:	4798      	blx	r3
90003b8e:	4604      	mov	r4, r0
90003b90:	4631      	mov	r1, r6
90003b92:	f003 f88b 	bl	90006cac <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>
    *currentTrans = newTransition;
90003b96:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003b9a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003b9e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003ba2:	2c00      	cmp	r4, #0
90003ba4:	d02c      	beq.n	90003c00 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x13c>
90003ba6:	1d23      	adds	r3, r4, #4
90003ba8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003bac:	4630      	mov	r0, r6
90003bae:	6833      	ldr	r3, [r6, #0]
90003bb0:	f8c4 a008 	str.w	sl, [r4, #8]
90003bb4:	68db      	ldr	r3, [r3, #12]
90003bb6:	63f4      	str	r4, [r6, #60]	; 0x3c
90003bb8:	4798      	blx	r3
    newPresenter->activate();
90003bba:	6823      	ldr	r3, [r4, #0]
90003bbc:	4620      	mov	r0, r4
90003bbe:	681b      	ldr	r3, [r3, #0]
90003bc0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003bc2:	4629      	mov	r1, r5
90003bc4:	4630      	mov	r0, r6
90003bc6:	f014 fedb 	bl	90018980 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003bca:	682b      	ldr	r3, [r5, #0]
90003bcc:	491d      	ldr	r1, [pc, #116]	; (90003c44 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x180>)
90003bce:	691a      	ldr	r2, [r3, #16]
90003bd0:	428a      	cmp	r2, r1
90003bd2:	d117      	bne.n	90003c04 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90003bd4:	695b      	ldr	r3, [r3, #20]
90003bd6:	4a1c      	ldr	r2, [pc, #112]	; (90003c48 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003bd8:	4293      	cmp	r3, r2
90003bda:	d11a      	bne.n	90003c12 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90003bdc:	f013 f8ec 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
90003be0:	6803      	ldr	r3, [r0, #0]
90003be2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003be4:	b001      	add	sp, #4
90003be6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003bea:	4718      	bx	r3
    if (*currentScreen)
90003bec:	f8d8 0000 	ldr.w	r0, [r8]
90003bf0:	2800      	cmp	r0, #0
90003bf2:	d1a9      	bne.n	90003b48 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x84>
90003bf4:	e7b1      	b.n	90003b5a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90003bf6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bfa:	2800      	cmp	r0, #0
90003bfc:	d19e      	bne.n	90003b3c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x78>
90003bfe:	e7ac      	b.n	90003b5a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90003c00:	4623      	mov	r3, r4
90003c02:	e7d1      	b.n	90003ba8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90003c04:	4628      	mov	r0, r5
90003c06:	4790      	blx	r2
    newTransition->invalidate();
90003c08:	682b      	ldr	r3, [r5, #0]
90003c0a:	4a0f      	ldr	r2, [pc, #60]	; (90003c48 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c0c:	695b      	ldr	r3, [r3, #20]
90003c0e:	4293      	cmp	r3, r2
90003c10:	d0e4      	beq.n	90003bdc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x118>
90003c12:	4628      	mov	r0, r5
90003c14:	b001      	add	sp, #4
90003c16:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c1a:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003c1c:	4b0b      	ldr	r3, [pc, #44]	; (90003c4c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x188>)
90003c1e:	21a3      	movs	r1, #163	; 0xa3
90003c20:	4a0b      	ldr	r2, [pc, #44]	; (90003c50 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003c22:	480c      	ldr	r0, [pc, #48]	; (90003c54 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003c24:	f024 fa34 	bl	90028090 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003c28:	4b0b      	ldr	r3, [pc, #44]	; (90003c58 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x194>)
90003c2a:	21a5      	movs	r1, #165	; 0xa5
90003c2c:	4a08      	ldr	r2, [pc, #32]	; (90003c50 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003c2e:	4809      	ldr	r0, [pc, #36]	; (90003c54 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003c30:	f024 fa2e 	bl	90028090 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003c34:	4b09      	ldr	r3, [pc, #36]	; (90003c5c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x198>)
90003c36:	21a4      	movs	r1, #164	; 0xa4
90003c38:	4a05      	ldr	r2, [pc, #20]	; (90003c50 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003c3a:	4806      	ldr	r0, [pc, #24]	; (90003c54 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003c3c:	f024 fa28 	bl	90028090 <__assert_func>
90003c40:	9002b2a8 	.word	0x9002b2a8
90003c44:	90003605 	.word	0x90003605
90003c48:	90003711 	.word	0x90003711
90003c4c:	9002ac34 	.word	0x9002ac34
90003c50:	9002af80 	.word	0x9002af80
90003c54:	9002adf0 	.word	0x9002adf0
90003c58:	9002aedc 	.word	0x9002aedc
90003c5c:	9002ae38 	.word	0x9002ae38
90003c60:	240398e4 	.word	0x240398e4
90003c64:	240398e0 	.word	0x240398e0

90003c68 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003c68:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90003c6c:	b1d3      	cbz	r3, 90003ca4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90003c6e:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90003c70:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003c72:	68d1      	ldr	r1, [r2, #12]
90003c74:	4604      	mov	r4, r0
90003c76:	4818      	ldr	r0, [pc, #96]	; (90003cd8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90003c78:	4281      	cmp	r1, r0
90003c7a:	d118      	bne.n	90003cae <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90003c7c:	6858      	ldr	r0, [r3, #4]
90003c7e:	b180      	cbz	r0, 90003ca2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003c80:	6899      	ldr	r1, [r3, #8]
90003c82:	b1e1      	cbz	r1, 90003cbe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
            pendingScreenTransitionCallback->execute();
90003c84:	6892      	ldr	r2, [r2, #8]
90003c86:	4915      	ldr	r1, [pc, #84]	; (90003cdc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003c88:	428a      	cmp	r2, r1
90003c8a:	d122      	bne.n	90003cd2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003c8c:	68da      	ldr	r2, [r3, #12]
90003c8e:	6858      	ldr	r0, [r3, #4]
90003c90:	eb00 0062 	add.w	r0, r0, r2, asr #1
90003c94:	07d2      	lsls	r2, r2, #31
90003c96:	d406      	bmi.n	90003ca6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90003c98:	689b      	ldr	r3, [r3, #8]
90003c9a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90003c9c:	2300      	movs	r3, #0
90003c9e:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90003ca2:	bd70      	pop	{r4, r5, r6, pc}
90003ca4:	4770      	bx	lr
90003ca6:	6899      	ldr	r1, [r3, #8]
90003ca8:	6803      	ldr	r3, [r0, #0]
90003caa:	585b      	ldr	r3, [r3, r1]
90003cac:	e7f5      	b.n	90003c9a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003cae:	4618      	mov	r0, r3
90003cb0:	4788      	blx	r1
90003cb2:	2800      	cmp	r0, #0
90003cb4:	d0f5      	beq.n	90003ca2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90003cb6:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90003cba:	681a      	ldr	r2, [r3, #0]
90003cbc:	e7e2      	b.n	90003c84 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90003cbe:	68dd      	ldr	r5, [r3, #12]
90003cc0:	07ee      	lsls	r6, r5, #31
90003cc2:	d5ee      	bpl.n	90003ca2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003cc4:	6892      	ldr	r2, [r2, #8]
90003cc6:	4e05      	ldr	r6, [pc, #20]	; (90003cdc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003cc8:	42b2      	cmp	r2, r6
90003cca:	d102      	bne.n	90003cd2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003ccc:	eb00 0065 	add.w	r0, r0, r5, asr #1
90003cd0:	e7ea      	b.n	90003ca8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90003cd2:	4618      	mov	r0, r3
90003cd4:	4790      	blx	r2
90003cd6:	e7e1      	b.n	90003c9c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90003cd8:	90003699 	.word	0x90003699
90003cdc:	90003679 	.word	0x90003679

90003ce0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_tictactoe_gameScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_tictactoe_gameScreenSlideTransitionEastImpl()
{
90003ce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_tictactoe_gameView, screen_tictactoe_gamePresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003ce4:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003ce8:	4680      	mov	r8, r0
90003cea:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003cec:	68a0      	ldr	r0, [r4, #8]
90003cee:	6803      	ldr	r3, [r0, #0]
90003cf0:	6a1b      	ldr	r3, [r3, #32]
90003cf2:	4798      	blx	r3
90003cf4:	f242 73bb 	movw	r3, #10171	; 0x27bb
90003cf8:	4298      	cmp	r0, r3
90003cfa:	f240 80e1 	bls.w	90003ec0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003cfe:	6860      	ldr	r0, [r4, #4]
90003d00:	6803      	ldr	r3, [r0, #0]
90003d02:	6a1b      	ldr	r3, [r3, #32]
90003d04:	4798      	blx	r3
90003d06:	280f      	cmp	r0, #15
90003d08:	f240 80e6 	bls.w	90003ed8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003d0c:	68e0      	ldr	r0, [r4, #12]
90003d0e:	6803      	ldr	r3, [r0, #0]
90003d10:	6a1b      	ldr	r3, [r3, #32]
90003d12:	4798      	blx	r3
90003d14:	283f      	cmp	r0, #63	; 0x3f
90003d16:	f240 80d9 	bls.w	90003ecc <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
90003d1a:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 90003f18 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
90003d1e:	f013 f84b 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
90003d22:	3004      	adds	r0, #4
90003d24:	f013 f895 	bl	90016e52 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003d28:	f8da 0000 	ldr.w	r0, [sl]
90003d2c:	b140      	cbz	r0, 90003d40 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003d2e:	6803      	ldr	r3, [r0, #0]
90003d30:	68db      	ldr	r3, [r3, #12]
90003d32:	4798      	blx	r3
    if (*currentTrans)
90003d34:	f8da 0000 	ldr.w	r0, [sl]
90003d38:	b110      	cbz	r0, 90003d40 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003d3a:	6803      	ldr	r3, [r0, #0]
90003d3c:	681b      	ldr	r3, [r3, #0]
90003d3e:	4798      	blx	r3
    if (*currentScreen)
90003d40:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90003f1c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x23c>
90003d44:	f8d9 0000 	ldr.w	r0, [r9]
90003d48:	2800      	cmp	r0, #0
90003d4a:	f000 80a5 	beq.w	90003e98 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
90003d4e:	6803      	ldr	r3, [r0, #0]
90003d50:	695b      	ldr	r3, [r3, #20]
90003d52:	4798      	blx	r3
    if (*currentPresenter)
90003d54:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003d58:	2800      	cmp	r0, #0
90003d5a:	f000 8081 	beq.w	90003e60 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
90003d5e:	6803      	ldr	r3, [r0, #0]
90003d60:	685b      	ldr	r3, [r3, #4]
90003d62:	4798      	blx	r3
    if (*currentScreen)
90003d64:	f8d9 0000 	ldr.w	r0, [r9]
90003d68:	b110      	cbz	r0, 90003d70 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
90003d6a:	6803      	ldr	r3, [r0, #0]
90003d6c:	681b      	ldr	r3, [r3, #0]
90003d6e:	4798      	blx	r3
    if (*currentPresenter)
90003d70:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003d74:	b110      	cbz	r0, 90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
90003d76:	6803      	ldr	r3, [r0, #0]
90003d78:	689b      	ldr	r3, [r3, #8]
90003d7a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003d7c:	68e0      	ldr	r0, [r4, #12]
90003d7e:	2100      	movs	r1, #0
90003d80:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003d82:	460f      	mov	r7, r1
90003d84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003d86:	4798      	blx	r3
          relativeValue(0)
90003d88:	4b56      	ldr	r3, [pc, #344]	; (90003ee4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x204>)
90003d8a:	4606      	mov	r6, r0
90003d8c:	4605      	mov	r5, r0
90003d8e:	6047      	str	r7, [r0, #4]
90003d90:	7207      	strb	r7, [r0, #8]
90003d92:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90003d96:	4630      	mov	r0, r6
90003d98:	f00f fa7a 	bl	90013290 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90003d9c:	4b52      	ldr	r3, [pc, #328]	; (90003ee8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
90003d9e:	2214      	movs	r2, #20
          relativeValue(0)
90003da0:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90003da2:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90003da4:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90003da6:	2b00      	cmp	r3, #0
90003da8:	d166      	bne.n	90003e78 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x198>
            done = true;
90003daa:	2301      	movs	r3, #1
90003dac:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003dae:	68a0      	ldr	r0, [r4, #8]
90003db0:	2100      	movs	r1, #0
90003db2:	6803      	ldr	r3, [r0, #0]
90003db4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003db6:	4798      	blx	r3
90003db8:	4607      	mov	r7, r0
90003dba:	f003 fd15 	bl	900077e8 <_ZN25screen_tictactoe_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003dbe:	6860      	ldr	r0, [r4, #4]
90003dc0:	2100      	movs	r1, #0
90003dc2:	6803      	ldr	r3, [r0, #0]
90003dc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003dc6:	4798      	blx	r3
90003dc8:	4604      	mov	r4, r0
90003dca:	4639      	mov	r1, r7
90003dcc:	f003 fc94 	bl	900076f8 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>
    *currentTrans = newTransition;
90003dd0:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90003dd4:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90003dd8:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
90003ddc:	2c00      	cmp	r4, #0
90003dde:	d061      	beq.n	90003ea4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1c4>
90003de0:	1d23      	adds	r3, r4, #4
90003de2:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90003de6:	4638      	mov	r0, r7
90003de8:	683b      	ldr	r3, [r7, #0]
90003dea:	f8c4 b008 	str.w	fp, [r4, #8]
90003dee:	68db      	ldr	r3, [r3, #12]
90003df0:	63fc      	str	r4, [r7, #60]	; 0x3c
90003df2:	4798      	blx	r3
    newPresenter->activate();
90003df4:	6823      	ldr	r3, [r4, #0]
90003df6:	4620      	mov	r0, r4
90003df8:	681b      	ldr	r3, [r3, #0]
90003dfa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003dfc:	4629      	mov	r1, r5
90003dfe:	4638      	mov	r0, r7
90003e00:	f014 fdbe 	bl	90018980 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003e04:	682b      	ldr	r3, [r5, #0]
90003e06:	4939      	ldr	r1, [pc, #228]	; (90003eec <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x20c>)
90003e08:	691a      	ldr	r2, [r3, #16]
90003e0a:	428a      	cmp	r2, r1
90003e0c:	d154      	bne.n	90003eb8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
90003e0e:	7a2a      	ldrb	r2, [r5, #8]
90003e10:	b9d2      	cbnz	r2, 90003e48 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
90003e12:	6868      	ldr	r0, [r5, #4]
90003e14:	4a36      	ldr	r2, [pc, #216]	; (90003ef0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x210>)
90003e16:	6803      	ldr	r3, [r0, #0]
90003e18:	69db      	ldr	r3, [r3, #28]
90003e1a:	4293      	cmp	r3, r2
90003e1c:	d144      	bne.n	90003ea8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1c8>
90003e1e:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003e20:	b164      	cbz	r4, 90003e3c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x15c>
90003e22:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003e24:	4f33      	ldr	r7, [pc, #204]	; (90003ef4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
90003e26:	6823      	ldr	r3, [r4, #0]
90003e28:	88a1      	ldrh	r1, [r4, #4]
90003e2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003e2c:	1a89      	subs	r1, r1, r2
90003e2e:	42bb      	cmp	r3, r7
90003e30:	b209      	sxth	r1, r1
90003e32:	d11a      	bne.n	90003e6a <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
90003e34:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003e36:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003e38:	2c00      	cmp	r4, #0
90003e3a:	d1f4      	bne.n	90003e26 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
90003e3c:	6868      	ldr	r0, [r5, #4]
90003e3e:	4631      	mov	r1, r6
90003e40:	6803      	ldr	r3, [r0, #0]
90003e42:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003e44:	4798      	blx	r3
    newTransition->invalidate();
90003e46:	682b      	ldr	r3, [r5, #0]
90003e48:	695b      	ldr	r3, [r3, #20]
90003e4a:	4a2b      	ldr	r2, [pc, #172]	; (90003ef8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x218>)
90003e4c:	4293      	cmp	r3, r2
90003e4e:	d12e      	bne.n	90003eae <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
90003e50:	f012 ffb2 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
90003e54:	6803      	ldr	r3, [r0, #0]
90003e56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003e58:	b001      	add	sp, #4
90003e5a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003e5e:	4718      	bx	r3
    if (*currentScreen)
90003e60:	f8d9 0000 	ldr.w	r0, [r9]
90003e64:	2800      	cmp	r0, #0
90003e66:	d180      	bne.n	90003d6a <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x8a>
90003e68:	e788      	b.n	90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
90003e6a:	4620      	mov	r0, r4
90003e6c:	4798      	blx	r3
90003e6e:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003e70:	2c00      	cmp	r4, #0
90003e72:	d0e3      	beq.n	90003e3c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x15c>
90003e74:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003e76:	e7d6      	b.n	90003e26 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003e78:	4b20      	ldr	r3, [pc, #128]	; (90003efc <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
90003e7a:	4630      	mov	r0, r6
        rect.x = x;
90003e7c:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003e7e:	f9b3 3000 	ldrsh.w	r3, [r3]
90003e82:	4f1f      	ldr	r7, [pc, #124]	; (90003f00 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
90003e84:	82eb      	strh	r3, [r5, #22]
90003e86:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
90003e8a:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90003e8c:	f00f f97b 	bl	90013186 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
90003e90:	883b      	ldrh	r3, [r7, #0]
90003e92:	425b      	negs	r3, r3
90003e94:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
90003e96:	e78a      	b.n	90003dae <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
90003e98:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003e9c:	2800      	cmp	r0, #0
90003e9e:	f47f af5e 	bne.w	90003d5e <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x7e>
90003ea2:	e76b      	b.n	90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
90003ea4:	4623      	mov	r3, r4
90003ea6:	e79c      	b.n	90003de2 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
90003ea8:	4798      	blx	r3
90003eaa:	4604      	mov	r4, r0
90003eac:	e7b8      	b.n	90003e20 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
90003eae:	4628      	mov	r0, r5
90003eb0:	b001      	add	sp, #4
90003eb2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003eb6:	4718      	bx	r3
    newTransition->init();
90003eb8:	4628      	mov	r0, r5
90003eba:	4790      	blx	r2
    newTransition->invalidate();
90003ebc:	682b      	ldr	r3, [r5, #0]
90003ebe:	e7c3      	b.n	90003e48 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003ec0:	4b10      	ldr	r3, [pc, #64]	; (90003f04 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x224>)
90003ec2:	21a3      	movs	r1, #163	; 0xa3
90003ec4:	4a10      	ldr	r2, [pc, #64]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ec6:	4811      	ldr	r0, [pc, #68]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ec8:	f024 f8e2 	bl	90028090 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003ecc:	4b10      	ldr	r3, [pc, #64]	; (90003f10 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x230>)
90003ece:	21a5      	movs	r1, #165	; 0xa5
90003ed0:	4a0d      	ldr	r2, [pc, #52]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ed2:	480e      	ldr	r0, [pc, #56]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ed4:	f024 f8dc 	bl	90028090 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003ed8:	4b0e      	ldr	r3, [pc, #56]	; (90003f14 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x234>)
90003eda:	21a4      	movs	r1, #164	; 0xa4
90003edc:	4a0a      	ldr	r2, [pc, #40]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ede:	480b      	ldr	r0, [pc, #44]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ee0:	f024 f8d6 	bl	90028090 <__assert_func>
90003ee4:	9002b2f0 	.word	0x9002b2f0
90003ee8:	2403989b 	.word	0x2403989b
90003eec:	90003879 	.word	0x90003879
90003ef0:	900035fd 	.word	0x900035fd
90003ef4:	9000228d 	.word	0x9000228d
90003ef8:	90003711 	.word	0x90003711
90003efc:	24039892 	.word	0x24039892
90003f00:	24039890 	.word	0x24039890
90003f04:	9002ac34 	.word	0x9002ac34
90003f08:	9002b098 	.word	0x9002b098
90003f0c:	9002adf0 	.word	0x9002adf0
90003f10:	9002aedc 	.word	0x9002aedc
90003f14:	9002ae38 	.word	0x9002ae38
90003f18:	240398e4 	.word	0x240398e4
90003f1c:	240398e0 	.word	0x240398e0

90003f20 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90003f20:	b570      	push	{r4, r5, r6, lr}
90003f22:	4604      	mov	r4, r0
90003f24:	4615      	mov	r5, r2
90003f26:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90003f28:	f013 f834 	bl	90016f94 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90003f2c:	4a1d      	ldr	r2, [pc, #116]	; (90003fa4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
90003f2e:	2300      	movs	r3, #0
      frontendHeap(heap),
90003f30:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
90003f34:	6014      	str	r4, [r2, #0]
        return instance;
90003f36:	4d1c      	ldr	r5, [pc, #112]	; (90003fa8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90003f38:	4a1c      	ldr	r2, [pc, #112]	; (90003fac <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
90003f3a:	6828      	ldr	r0, [r5, #0]
90003f3c:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90003f3e:	4a1c      	ldr	r2, [pc, #112]	; (90003fb0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
90003f40:	491c      	ldr	r1, [pc, #112]	; (90003fb4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
90003f42:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
90003f46:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
90003f4a:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
90003f4e:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90003f52:	6802      	ldr	r2, [r0, #0]
90003f54:	6892      	ldr	r2, [r2, #8]
90003f56:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
90003f58:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
90003f5c:	d11f      	bne.n	90003f9e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
90003f5e:	f44f 7380 	mov.w	r3, #256	; 0x100
90003f62:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
90003f66:	2000      	movs	r0, #0
90003f68:	f000 fa02 	bl	90004370 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90003f6c:	682b      	ldr	r3, [r5, #0]
90003f6e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90003f72:	b192      	cbz	r2, 90003f9a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
90003f74:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90003f76:	b180      	cbz	r0, 90003f9a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90003f78:	f01c f9bb 	bl	900202f2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90003f7c:	682b      	ldr	r3, [r5, #0]
90003f7e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90003f82:	b12a      	cbz	r2, 90003f90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
90003f84:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90003f86:	b118      	cbz	r0, 90003f90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90003f88:	f01c fa2e 	bl	900203e8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
90003f8c:	4620      	mov	r0, r4
90003f8e:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003f90:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90003f92:	f01c fa29 	bl	900203e8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
90003f96:	4620      	mov	r0, r4
90003f98:	bd70      	pop	{r4, r5, r6, pc}
90003f9a:	6898      	ldr	r0, [r3, #8]
90003f9c:	e7ec      	b.n	90003f78 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90003f9e:	4619      	mov	r1, r3
90003fa0:	4790      	blx	r2
90003fa2:	e7e0      	b.n	90003f66 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90003fa4:	240398f0 	.word	0x240398f0
90003fa8:	2403989c 	.word	0x2403989c
90003fac:	9002b254 	.word	0x9002b254
90003fb0:	9002b23c 	.word	0x9002b23c
90003fb4:	90000665 	.word	0x90000665

90003fb8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003fb8:	4905      	ldr	r1, [pc, #20]	; (90003fd0 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv+0x18>)
90003fba:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003fbc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003fc0:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003fc4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003fc8:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90003fcc:	4770      	bx	lr
90003fce:	bf00      	nop
90003fd0:	90003ac5 	.word	0x90003ac5

90003fd4 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>:
90003fd4:	4905      	ldr	r1, [pc, #20]	; (90003fec <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv+0x18>)
90003fd6:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003fd8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003fdc:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003fe0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003fe4:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90003fe8:	4770      	bx	lr
90003fea:	bf00      	nop
90003fec:	900038d9 	.word	0x900038d9

90003ff0 <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv>:
90003ff0:	4905      	ldr	r1, [pc, #20]	; (90004008 <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv+0x18>)
90003ff2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003ff4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003ff8:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003ffc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004000:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004004:	4770      	bx	lr
90004006:	bf00      	nop
90004008:	90003ce1 	.word	0x90003ce1

9000400c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
9000400c:	6a40      	ldr	r0, [r0, #36]	; 0x24
9000400e:	4770      	bx	lr

90004010 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90004010:	6a80      	ldr	r0, [r0, #40]	; 0x28
90004012:	4770      	bx	lr

90004014 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004014:	4770      	bx	lr
90004016:	bf00      	nop

90004018 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90004018:	888b      	ldrh	r3, [r1, #4]
9000401a:	69c0      	ldr	r0, [r0, #28]
9000401c:	0adb      	lsrs	r3, r3, #11
9000401e:	680a      	ldr	r2, [r1, #0]
90004020:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004024:	4410      	add	r0, r2
90004026:	4770      	bx	lr

90004028 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004028:	b1da      	cbz	r2, 90004062 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
9000402a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
9000402c:	7b14      	ldrb	r4, [r2, #12]
9000402e:	b1b4      	cbz	r4, 9000405e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90004030:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004034:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004038:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
9000403c:	6a03      	ldr	r3, [r0, #32]
9000403e:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
90004042:	ea4e 0202 	orr.w	r2, lr, r2
90004046:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000404a:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
9000404e:	881a      	ldrh	r2, [r3, #0]
90004050:	428a      	cmp	r2, r1
90004052:	d008      	beq.n	90004066 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004054:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90004058:	d801      	bhi.n	9000405e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000405a:	4283      	cmp	r3, r0
9000405c:	d1f7      	bne.n	9000404e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
9000405e:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
90004060:	bd10      	pop	{r4, pc}
        return 0;
90004062:	4610      	mov	r0, r2
}
90004064:	4770      	bx	lr
            return kerndata->distance;
90004066:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
9000406a:	bd10      	pop	{r4, pc}

9000406c <_ZN8touchgfx13GeneratedFontD0Ev>:
9000406c:	b510      	push	{r4, lr}
9000406e:	4604      	mov	r4, r0
90004070:	212c      	movs	r1, #44	; 0x2c
90004072:	f023 ffdf 	bl	90028034 <_ZdlPvj>
90004076:	4620      	mov	r0, r4
90004078:	bd10      	pop	{r4, pc}
9000407a:	bf00      	nop

9000407c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000407c:	b530      	push	{r4, r5, lr}
9000407e:	b08b      	sub	sp, #44	; 0x2c
90004080:	4604      	mov	r4, r0
90004082:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
90004086:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004088:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
9000408c:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000408e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
90004092:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004094:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
90004098:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000409a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
9000409e:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900040a0:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
900040a4:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900040a6:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
900040aa:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900040ac:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
900040b0:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900040b2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
900040b6:	9508      	str	r5, [sp, #32]
900040b8:	f013 ffcc 	bl	90018054 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
900040bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
900040be:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
900040c0:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
900040c2:	9b16      	ldr	r3, [sp, #88]	; 0x58
900040c4:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
900040c6:	9b19      	ldr	r3, [sp, #100]	; 0x64
900040c8:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
900040ca:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900040cc:	62a3      	str	r3, [r4, #40]	; 0x28
900040ce:	4b02      	ldr	r3, [pc, #8]	; (900040d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
900040d0:	6023      	str	r3, [r4, #0]
}
900040d2:	b00b      	add	sp, #44	; 0x2c
900040d4:	bd30      	pop	{r4, r5, pc}
900040d6:	bf00      	nop
900040d8:	9002b314 	.word	0x9002b314

900040dc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900040dc:	4770      	bx	lr
900040de:	bf00      	nop

900040e0 <_Z23getFont_verdana_10_4bppv>:
{
900040e0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900040e2:	4d18      	ldr	r5, [pc, #96]	; (90004144 <_Z23getFont_verdana_10_4bppv+0x64>)
{
900040e4:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900040e6:	682c      	ldr	r4, [r5, #0]
900040e8:	f3bf 8f5b 	dmb	ish
900040ec:	f014 0401 	ands.w	r4, r4, #1
900040f0:	d002      	beq.n	900040f8 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
900040f2:	4815      	ldr	r0, [pc, #84]	; (90004148 <_Z23getFont_verdana_10_4bppv+0x68>)
900040f4:	b00f      	add	sp, #60	; 0x3c
900040f6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900040f8:	4628      	mov	r0, r5
900040fa:	f023 ff9d 	bl	90028038 <__cxa_guard_acquire>
900040fe:	2800      	cmp	r0, #0
90004100:	d0f7      	beq.n	900040f2 <_Z23getFont_verdana_10_4bppv+0x12>
90004102:	213f      	movs	r1, #63	; 0x3f
90004104:	2201      	movs	r2, #1
90004106:	230a      	movs	r3, #10
90004108:	2004      	movs	r0, #4
9000410a:	9204      	str	r2, [sp, #16]
9000410c:	9300      	str	r3, [sp, #0]
9000410e:	9003      	str	r0, [sp, #12]
90004110:	480d      	ldr	r0, [pc, #52]	; (90004148 <_Z23getFont_verdana_10_4bppv+0x68>)
90004112:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90004116:	490d      	ldr	r1, [pc, #52]	; (9000414c <_Z23getFont_verdana_10_4bppv+0x6c>)
90004118:	9108      	str	r1, [sp, #32]
9000411a:	490d      	ldr	r1, [pc, #52]	; (90004150 <_Z23getFont_verdana_10_4bppv+0x70>)
9000411c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90004120:	9107      	str	r1, [sp, #28]
90004122:	490c      	ldr	r1, [pc, #48]	; (90004154 <_Z23getFont_verdana_10_4bppv+0x74>)
90004124:	e9cd 4405 	strd	r4, r4, [sp, #20]
90004128:	e9cd 4401 	strd	r4, r4, [sp, #4]
9000412c:	f7ff ffa6 	bl	9000407c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004130:	4809      	ldr	r0, [pc, #36]	; (90004158 <_Z23getFont_verdana_10_4bppv+0x78>)
90004132:	f023 ffcb 	bl	900280cc <atexit>
90004136:	4628      	mov	r0, r5
90004138:	f023 ff8a 	bl	90028050 <__cxa_guard_release>
}
9000413c:	4802      	ldr	r0, [pc, #8]	; (90004148 <_Z23getFont_verdana_10_4bppv+0x68>)
9000413e:	b00f      	add	sp, #60	; 0x3c
90004140:	bd30      	pop	{r4, r5, pc}
90004142:	bf00      	nop
90004144:	240097c4 	.word	0x240097c4
90004148:	240097c8 	.word	0x240097c8
9000414c:	9002c9d8 	.word	0x9002c9d8
90004150:	9002cad4 	.word	0x9002cad4
90004154:	90201dbc 	.word	0x90201dbc
90004158:	900040dd 	.word	0x900040dd

9000415c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000415c:	4770      	bx	lr
9000415e:	bf00      	nop

90004160 <_Z23getFont_verdana_20_4bppv>:
{
90004160:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004162:	4d19      	ldr	r5, [pc, #100]	; (900041c8 <_Z23getFont_verdana_20_4bppv+0x68>)
{
90004164:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004166:	682c      	ldr	r4, [r5, #0]
90004168:	f3bf 8f5b 	dmb	ish
9000416c:	f014 0401 	ands.w	r4, r4, #1
90004170:	d002      	beq.n	90004178 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90004172:	4816      	ldr	r0, [pc, #88]	; (900041cc <_Z23getFont_verdana_20_4bppv+0x6c>)
90004174:	b00f      	add	sp, #60	; 0x3c
90004176:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004178:	4628      	mov	r0, r5
9000417a:	f023 ff5d 	bl	90028038 <__cxa_guard_acquire>
9000417e:	2800      	cmp	r0, #0
90004180:	d0f7      	beq.n	90004172 <_Z23getFont_verdana_20_4bppv+0x12>
90004182:	213f      	movs	r1, #63	; 0x3f
90004184:	4a12      	ldr	r2, [pc, #72]	; (900041d0 <_Z23getFont_verdana_20_4bppv+0x70>)
90004186:	2301      	movs	r3, #1
90004188:	2014      	movs	r0, #20
9000418a:	9208      	str	r2, [sp, #32]
9000418c:	2204      	movs	r2, #4
9000418e:	9304      	str	r3, [sp, #16]
90004190:	9000      	str	r0, [sp, #0]
90004192:	9401      	str	r4, [sp, #4]
90004194:	480d      	ldr	r0, [pc, #52]	; (900041cc <_Z23getFont_verdana_20_4bppv+0x6c>)
90004196:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000419a:	490e      	ldr	r1, [pc, #56]	; (900041d4 <_Z23getFont_verdana_20_4bppv+0x74>)
9000419c:	e9cd 3305 	strd	r3, r3, [sp, #20]
900041a0:	9107      	str	r1, [sp, #28]
900041a2:	2318      	movs	r3, #24
900041a4:	490c      	ldr	r1, [pc, #48]	; (900041d8 <_Z23getFont_verdana_20_4bppv+0x78>)
900041a6:	e9cd 4202 	strd	r4, r2, [sp, #8]
900041aa:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
900041ae:	2241      	movs	r2, #65	; 0x41
900041b0:	f7ff ff64 	bl	9000407c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900041b4:	4809      	ldr	r0, [pc, #36]	; (900041dc <_Z23getFont_verdana_20_4bppv+0x7c>)
900041b6:	f023 ff89 	bl	900280cc <atexit>
900041ba:	4628      	mov	r0, r5
900041bc:	f023 ff48 	bl	90028050 <__cxa_guard_release>
}
900041c0:	4802      	ldr	r0, [pc, #8]	; (900041cc <_Z23getFont_verdana_20_4bppv+0x6c>)
900041c2:	b00f      	add	sp, #60	; 0x3c
900041c4:	bd30      	pop	{r4, r5, pc}
900041c6:	bf00      	nop
900041c8:	240097f4 	.word	0x240097f4
900041cc:	240097f8 	.word	0x240097f8
900041d0:	9002c9dc 	.word	0x9002c9dc
900041d4:	9002cad8 	.word	0x9002cad8
900041d8:	90201dcc 	.word	0x90201dcc
900041dc:	9000415d 	.word	0x9000415d

900041e0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900041e0:	4770      	bx	lr
900041e2:	bf00      	nop

900041e4 <_Z23getFont_verdana_40_4bppv>:
{
900041e4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900041e6:	4d19      	ldr	r5, [pc, #100]	; (9000424c <_Z23getFont_verdana_40_4bppv+0x68>)
{
900041e8:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900041ea:	682c      	ldr	r4, [r5, #0]
900041ec:	f3bf 8f5b 	dmb	ish
900041f0:	f014 0401 	ands.w	r4, r4, #1
900041f4:	d002      	beq.n	900041fc <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
900041f6:	4816      	ldr	r0, [pc, #88]	; (90004250 <_Z23getFont_verdana_40_4bppv+0x6c>)
900041f8:	b00f      	add	sp, #60	; 0x3c
900041fa:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900041fc:	4628      	mov	r0, r5
900041fe:	f023 ff1b 	bl	90028038 <__cxa_guard_acquire>
90004202:	2800      	cmp	r0, #0
90004204:	d0f7      	beq.n	900041f6 <_Z23getFont_verdana_40_4bppv+0x12>
90004206:	213f      	movs	r1, #63	; 0x3f
90004208:	4a12      	ldr	r2, [pc, #72]	; (90004254 <_Z23getFont_verdana_40_4bppv+0x70>)
9000420a:	2301      	movs	r3, #1
9000420c:	2028      	movs	r0, #40	; 0x28
9000420e:	9208      	str	r2, [sp, #32]
90004210:	2204      	movs	r2, #4
90004212:	9304      	str	r3, [sp, #16]
90004214:	9000      	str	r0, [sp, #0]
90004216:	9401      	str	r4, [sp, #4]
90004218:	480d      	ldr	r0, [pc, #52]	; (90004250 <_Z23getFont_verdana_40_4bppv+0x6c>)
9000421a:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000421e:	490e      	ldr	r1, [pc, #56]	; (90004258 <_Z23getFont_verdana_40_4bppv+0x74>)
90004220:	e9cd 4305 	strd	r4, r3, [sp, #20]
90004224:	9107      	str	r1, [sp, #28]
90004226:	2329      	movs	r3, #41	; 0x29
90004228:	490c      	ldr	r1, [pc, #48]	; (9000425c <_Z23getFont_verdana_40_4bppv+0x78>)
9000422a:	e9cd 4202 	strd	r4, r2, [sp, #8]
9000422e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90004232:	220a      	movs	r2, #10
90004234:	f7ff ff22 	bl	9000407c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004238:	4809      	ldr	r0, [pc, #36]	; (90004260 <_Z23getFont_verdana_40_4bppv+0x7c>)
9000423a:	f023 ff47 	bl	900280cc <atexit>
9000423e:	4628      	mov	r0, r5
90004240:	f023 ff06 	bl	90028050 <__cxa_guard_release>
}
90004244:	4802      	ldr	r0, [pc, #8]	; (90004250 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004246:	b00f      	add	sp, #60	; 0x3c
90004248:	bd30      	pop	{r4, r5, pc}
9000424a:	bf00      	nop
9000424c:	24009824 	.word	0x24009824
90004250:	24009828 	.word	0x24009828
90004254:	9002cacc 	.word	0x9002cacc
90004258:	9002cadc 	.word	0x9002cadc
9000425c:	9020215c 	.word	0x9020215c
90004260:	900041e1 	.word	0x900041e1

90004264 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
90004264:	2000      	movs	r0, #0
90004266:	4770      	bx	lr

90004268 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
90004268:	2000      	movs	r0, #0
9000426a:	4770      	bx	lr

9000426c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
9000426c:	b40e      	push	{r1, r2, r3}
9000426e:	b500      	push	{lr}
90004270:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90004272:	2100      	movs	r1, #0
{
90004274:	ab03      	add	r3, sp, #12
90004276:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
9000427a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
9000427c:	f013 fd12 	bl	90017ca4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90004280:	b002      	add	sp, #8
90004282:	f85d eb04 	ldr.w	lr, [sp], #4
90004286:	b003      	add	sp, #12
90004288:	4770      	bx	lr
9000428a:	bf00      	nop

9000428c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
9000428c:	b40c      	push	{r2, r3}
9000428e:	b500      	push	{lr}
90004290:	b083      	sub	sp, #12
90004292:	ab04      	add	r3, sp, #16
90004294:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90004298:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
9000429a:	f013 fd03 	bl	90017ca4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
9000429e:	b003      	add	sp, #12
900042a0:	f85d eb04 	ldr.w	lr, [sp], #4
900042a4:	b002      	add	sp, #8
900042a6:	4770      	bx	lr

900042a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
900042a8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
900042aa:	b510      	push	{r4, lr}
900042ac:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
900042ae:	b133      	cbz	r3, 900042be <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
900042b0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
900042b2:	b39b      	cbz	r3, 9000431c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
900042b4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900042b6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900042ba:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
900042bc:	b923      	cbnz	r3, 900042c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
900042be:	4620      	mov	r0, r4
}
900042c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
900042c4:	f014 bfc2 	b.w	9001924c <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
900042c8:	f015 f8be 	bl	90019448 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
900042cc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900042ce:	2b01      	cmp	r3, #1
900042d0:	d92a      	bls.n	90004328 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
900042d2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900042d4:	1c53      	adds	r3, r2, #1
900042d6:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
900042d8:	2b09      	cmp	r3, #9
900042da:	d812      	bhi.n	90004302 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
900042dc:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
900042e0:	f640 103f 	movw	r0, #2367	; 0x93f
900042e4:	8c49      	ldrh	r1, [r1, #34]	; 0x22
900042e6:	4281      	cmp	r1, r0
900042e8:	d1e9      	bne.n	900042be <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
900042ea:	eb04 0142 	add.w	r1, r4, r2, lsl #1
900042ee:	0052      	lsls	r2, r2, #1
900042f0:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
900042f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
900042f6:	4422      	add	r2, r4
900042f8:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
900042fc:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
900042fe:	8450      	strh	r0, [r2, #34]	; 0x22
        }
90004300:	e7dd      	b.n	900042be <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90004302:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90004306:	f640 113f 	movw	r1, #2367	; 0x93f
9000430a:	89db      	ldrh	r3, [r3, #14]
9000430c:	428b      	cmp	r3, r1
9000430e:	d1d6      	bne.n	900042be <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004310:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90004314:	2300      	movs	r3, #0
90004316:	0052      	lsls	r2, r2, #1
90004318:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
9000431a:	e7ea      	b.n	900042f2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
9000431c:	4b05      	ldr	r3, [pc, #20]	; (90004334 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
9000431e:	21c5      	movs	r1, #197	; 0xc5
90004320:	4a05      	ldr	r2, [pc, #20]	; (90004338 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90004322:	4806      	ldr	r0, [pc, #24]	; (9000433c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004324:	f023 feb4 	bl	90028090 <__assert_func>
            assert(offset < used);
90004328:	4b05      	ldr	r3, [pc, #20]	; (90004340 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
9000432a:	21cb      	movs	r1, #203	; 0xcb
9000432c:	4a05      	ldr	r2, [pc, #20]	; (90004344 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
9000432e:	4803      	ldr	r0, [pc, #12]	; (9000433c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004330:	f023 feae 	bl	90028090 <__assert_func>
90004334:	9002b36c 	.word	0x9002b36c
90004338:	9002b378 	.word	0x9002b378
9000433c:	9002b424 	.word	0x9002b424
90004340:	9002b470 	.word	0x9002b470
90004344:	9002b480 	.word	0x9002b480

90004348 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90004348:	f014 bf49 	b.w	900191de <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9000434c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
9000434c:	b510      	push	{r4, lr}
9000434e:	b086      	sub	sp, #24
90004350:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90004354:	ac0a      	add	r4, sp, #40	; 0x28
{
90004356:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
9000435a:	461a      	mov	r2, r3
9000435c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000435e:	4661      	mov	r1, ip
90004360:	9401      	str	r4, [sp, #4]
90004362:	9300      	str	r3, [sp, #0]
90004364:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
90004366:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90004368:	f012 f8a6 	bl	900164b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
9000436c:	b006      	add	sp, #24
9000436e:	bd10      	pop	{r4, pc}

90004370 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90004370:	b9e0      	cbnz	r0, 900043ac <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90004372:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90004374:	4b13      	ldr	r3, [pc, #76]	; (900043c4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90004376:	681b      	ldr	r3, [r3, #0]
90004378:	b1cb      	cbz	r3, 900043ae <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000437a:	4c13      	ldr	r4, [pc, #76]	; (900043c8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
9000437c:	4813      	ldr	r0, [pc, #76]	; (900043cc <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
9000437e:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90004382:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90004384:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90004386:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90004388:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
9000438a:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
9000438c:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
9000438e:	4b10      	ldr	r3, [pc, #64]	; (900043d0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90004390:	2200      	movs	r2, #0
90004392:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90004394:	f000 f83a 	bl	9000440c <_ZN17TypedTextDatabase8getFontsEv>
90004398:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
9000439a:	f000 f835 	bl	90004408 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
9000439e:	4b0d      	ldr	r3, [pc, #52]	; (900043d4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
900043a0:	4a0d      	ldr	r2, [pc, #52]	; (900043d8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
900043a2:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
900043a4:	4b0d      	ldr	r3, [pc, #52]	; (900043dc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
900043a6:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
900043a8:	8018      	strh	r0, [r3, #0]
    }
}
900043aa:	bd38      	pop	{r3, r4, r5, pc}
900043ac:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
900043ae:	4c0c      	ldr	r4, [pc, #48]	; (900043e0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
900043b0:	4905      	ldr	r1, [pc, #20]	; (900043c8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
900043b2:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
900043b4:	480b      	ldr	r0, [pc, #44]	; (900043e4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
900043b6:	4b05      	ldr	r3, [pc, #20]	; (900043cc <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900043b8:	4a0b      	ldr	r2, [pc, #44]	; (900043e8 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
900043ba:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
900043bc:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
900043be:	2c00      	cmp	r4, #0
900043c0:	d1e5      	bne.n	9000438e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
900043c2:	bd38      	pop	{r3, r4, r5, pc}
900043c4:	24009854 	.word	0x24009854
900043c8:	24009858 	.word	0x24009858
900043cc:	2400985c 	.word	0x2400985c
900043d0:	24009860 	.word	0x24009860
900043d4:	240398f4 	.word	0x240398f4
900043d8:	240398fc 	.word	0x240398fc
900043dc:	240398f8 	.word	0x240398f8
900043e0:	90202294 	.word	0x90202294
900043e4:	90202210 	.word	0x90202210
900043e8:	902021e8 	.word	0x902021e8

900043ec <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
900043ec:	4a04      	ldr	r2, [pc, #16]	; (90004400 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
900043ee:	4b05      	ldr	r3, [pc, #20]	; (90004404 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
900043f0:	6812      	ldr	r2, [r2, #0]
900043f2:	681b      	ldr	r3, [r3, #0]
900043f4:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
900043f8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
900043fc:	4770      	bx	lr
900043fe:	bf00      	nop
90004400:	2400985c 	.word	0x2400985c
90004404:	24009858 	.word	0x24009858

90004408 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90004408:	200a      	movs	r0, #10
9000440a:	4770      	bx	lr

9000440c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
9000440c:	4800      	ldr	r0, [pc, #0]	; (90004410 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
9000440e:	4770      	bx	lr
90004410:	24009864 	.word	0x24009864

90004414 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90004414:	b510      	push	{r4, lr}
};
90004416:	4c05      	ldr	r4, [pc, #20]	; (9000442c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90004418:	f7ff fea2 	bl	90004160 <_Z23getFont_verdana_20_4bppv>
};
9000441c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
9000441e:	f7ff fee1 	bl	900041e4 <_Z23getFont_verdana_40_4bppv>
};
90004422:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90004424:	f7ff fe5c 	bl	900040e0 <_Z23getFont_verdana_10_4bppv>
};
90004428:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
9000442a:	bd10      	pop	{r4, pc}
9000442c:	24009864 	.word	0x24009864

90004430 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004430:	4770      	bx	lr
90004432:	bf00      	nop

90004434 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004434:	4770      	bx	lr
90004436:	bf00      	nop

90004438 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004438:	4770      	bx	lr
9000443a:	bf00      	nop

9000443c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
9000443c:	4770      	bx	lr
9000443e:	bf00      	nop

90004440 <_ZN24screen_main_menuViewBaseD1Ev>:
}

screen_main_menuViewBase::~screen_main_menuViewBase()
{

}
90004440:	4770      	bx	lr
90004442:	bf00      	nop

90004444 <_ZN24screen_main_menuViewBase11setupScreenEv>:

void screen_main_menuViewBase::setupScreen()
{

}
90004444:	4770      	bx	lr
90004446:	bf00      	nop

90004448 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
90004448:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000444c:	b133      	cbz	r3, 9000445c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
9000444e:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004450:	f100 0374 	add.w	r3, r0, #116	; 0x74
90004454:	65c2      	str	r2, [r0, #92]	; 0x5c
90004456:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
90004458:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
9000445a:	4770      	bx	lr
9000445c:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000445e:	f100 0370 	add.w	r3, r0, #112	; 0x70
90004462:	65c2      	str	r2, [r0, #92]	; 0x5c
90004464:	681b      	ldr	r3, [r3, #0]
90004466:	6603      	str	r3, [r0, #96]	; 0x60
    }
90004468:	4770      	bx	lr
9000446a:	bf00      	nop

9000446c <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
9000446c:	4770      	bx	lr
9000446e:	bf00      	nop

90004470 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
90004470:	4770      	bx	lr
90004472:	bf00      	nop

90004474 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004474:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004476:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004478:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
9000447a:	6844      	ldr	r4, [r0, #4]
9000447c:	f012 0f01 	tst.w	r2, #1
90004480:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004484:	d103      	bne.n	9000448e <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90004486:	689b      	ldr	r3, [r3, #8]
    }
90004488:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
9000448c:	4718      	bx	r3
9000448e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90004492:	689b      	ldr	r3, [r3, #8]
90004494:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90004498:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
9000449c:	58d3      	ldr	r3, [r2, r3]
9000449e:	4718      	bx	r3

900044a0 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900044a0:	6843      	ldr	r3, [r0, #4]
900044a2:	b13b      	cbz	r3, 900044b4 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
900044a4:	6883      	ldr	r3, [r0, #8]
900044a6:	b10b      	cbz	r3, 900044ac <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
900044a8:	2001      	movs	r0, #1
    }
900044aa:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900044ac:	68c0      	ldr	r0, [r0, #12]
900044ae:	f000 0001 	and.w	r0, r0, #1
900044b2:	4770      	bx	lr
900044b4:	4618      	mov	r0, r3
900044b6:	4770      	bx	lr

900044b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900044b8:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
900044bc:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
900044c0:	4770      	bx	lr
900044c2:	bf00      	nop

900044c4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
900044c4:	b510      	push	{r4, lr}
900044c6:	4604      	mov	r4, r0
900044c8:	2178      	movs	r1, #120	; 0x78
900044ca:	f023 fdb3 	bl	90028034 <_ZdlPvj>
900044ce:	4620      	mov	r0, r4
900044d0:	bd10      	pop	{r4, pc}
900044d2:	bf00      	nop

900044d4 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900044d4:	b510      	push	{r4, lr}
900044d6:	4604      	mov	r4, r0
900044d8:	2110      	movs	r1, #16
900044da:	f023 fdab 	bl	90028034 <_ZdlPvj>
900044de:	4620      	mov	r0, r4
900044e0:	bd10      	pop	{r4, pc}
900044e2:	bf00      	nop

900044e4 <_ZN24screen_main_menuViewBaseD0Ev>:
screen_main_menuViewBase::~screen_main_menuViewBase()
900044e4:	b510      	push	{r4, lr}
900044e6:	4604      	mov	r4, r0
}
900044e8:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
900044ec:	f023 fda2 	bl	90028034 <_ZdlPvj>
900044f0:	4620      	mov	r0, r4
900044f2:	bd10      	pop	{r4, pc}

900044f4 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screen_main_menuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
900044f4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btn_snake)
900044f6:	f500 739e 	add.w	r3, r0, #316	; 0x13c
{
900044fa:	4604      	mov	r4, r0
900044fc:	460d      	mov	r5, r1
    if (&src == &btn_snake)
900044fe:	4299      	cmp	r1, r3
90004500:	d003      	beq.n	9000450a <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
        //intr_snake_game
        //When btn_snake clicked change screen to screen_snake_game
        //Go to screen_snake_game with screen transition towards East
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
    }
    if (&src == &btn_tictactoe)
90004502:	34c4      	adds	r4, #196	; 0xc4
90004504:	42a5      	cmp	r5, r4
90004506:	d007      	beq.n	90004518 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
        //intr_tictactoe_game
        //When btn_tictactoe clicked change screen to screen_tictactoe_game
        //Go to screen_tictactoe_game with screen transition towards East
        application().gotoscreen_tictactoe_gameScreenSlideTransitionEast();
    }
}
90004508:	bd38      	pop	{r3, r4, r5, pc}
    if (&src == &btn_tictactoe)
9000450a:	34c4      	adds	r4, #196	; 0xc4
    virtual ~screen_main_menuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
9000450c:	f012 fc54 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
90004510:	f7ff fd60 	bl	90003fd4 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>
    if (&src == &btn_tictactoe)
90004514:	42a5      	cmp	r5, r4
90004516:	d1f7      	bne.n	90004508 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
90004518:	f012 fc4e 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
}
9000451c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoscreen_tictactoe_gameScreenSlideTransitionEast();
90004520:	f7ff bd66 	b.w	90003ff0 <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv>

90004524 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
90004524:	6b03      	ldr	r3, [r0, #48]	; 0x30
90004526:	b30b      	cbz	r3, 9000456c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
90004528:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
9000452a:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
9000452c:	68d1      	ldr	r1, [r2, #12]
9000452e:	4604      	mov	r4, r0
90004530:	481a      	ldr	r0, [pc, #104]	; (9000459c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
90004532:	4281      	cmp	r1, r0
90004534:	d11b      	bne.n	9000456e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
90004536:	6858      	ldr	r0, [r3, #4]
90004538:	b180      	cbz	r0, 9000455c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
9000453a:	6899      	ldr	r1, [r3, #8]
9000453c:	b1f1      	cbz	r1, 9000457c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
9000453e:	6892      	ldr	r2, [r2, #8]
90004540:	4917      	ldr	r1, [pc, #92]	; (900045a0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
90004542:	428a      	cmp	r2, r1
90004544:	d124      	bne.n	90004590 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90004546:	68da      	ldr	r2, [r3, #12]
90004548:	6858      	ldr	r0, [r3, #4]
9000454a:	eb00 0062 	add.w	r0, r0, r2, asr #1
9000454e:	07d2      	lsls	r2, r2, #31
90004550:	d405      	bmi.n	9000455e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
90004552:	4621      	mov	r1, r4
90004554:	689b      	ldr	r3, [r3, #8]
        }
    }
90004556:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000455a:	4718      	bx	r3
9000455c:	bd70      	pop	{r4, r5, r6, pc}
9000455e:	6899      	ldr	r1, [r3, #8]
90004560:	6803      	ldr	r3, [r0, #0]
90004562:	585b      	ldr	r3, [r3, r1]
90004564:	4621      	mov	r1, r4
90004566:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000456a:	4718      	bx	r3
9000456c:	4770      	bx	lr
        if (action && action->isValid())
9000456e:	4618      	mov	r0, r3
90004570:	4788      	blx	r1
90004572:	2800      	cmp	r0, #0
90004574:	d0f2      	beq.n	9000455c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
90004576:	6b23      	ldr	r3, [r4, #48]	; 0x30
90004578:	681a      	ldr	r2, [r3, #0]
9000457a:	e7e0      	b.n	9000453e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
9000457c:	68dd      	ldr	r5, [r3, #12]
9000457e:	07ee      	lsls	r6, r5, #31
90004580:	d5ec      	bpl.n	9000455c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
90004582:	6892      	ldr	r2, [r2, #8]
90004584:	4e06      	ldr	r6, [pc, #24]	; (900045a0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
90004586:	42b2      	cmp	r2, r6
90004588:	d102      	bne.n	90004590 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
9000458a:	eb00 0065 	add.w	r0, r0, r5, asr #1
9000458e:	e7e7      	b.n	90004560 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
90004590:	4621      	mov	r1, r4
90004592:	4618      	mov	r0, r3
    }
90004594:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
90004598:	4710      	bx	r2
9000459a:	bf00      	nop
9000459c:	900044a1 	.word	0x900044a1
900045a0:	90004475 	.word	0x90004475

900045a4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
900045a4:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
900045a6:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
900045a8:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
900045aa:	bf18      	it	ne
900045ac:	2201      	movne	r2, #1
        return pressed;
900045ae:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
900045b2:	460d      	mov	r5, r1
900045b4:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
900045b6:	42b2      	cmp	r2, r6
900045b8:	d004      	beq.n	900045c4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
900045ba:	b116      	cbz	r6, 900045c2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900045bc:	792b      	ldrb	r3, [r5, #4]
900045be:	2b01      	cmp	r3, #1
900045c0:	d00e      	beq.n	900045e0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
900045c2:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
900045c4:	fab3 f383 	clz	r3, r3
900045c8:	095b      	lsrs	r3, r3, #5
900045ca:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
900045ce:	6803      	ldr	r3, [r0, #0]
900045d0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
900045d4:	4798      	blx	r3
            invalidate();
900045d6:	6823      	ldr	r3, [r4, #0]
900045d8:	4620      	mov	r0, r4
900045da:	695b      	ldr	r3, [r3, #20]
900045dc:	4798      	blx	r3
900045de:	e7ec      	b.n	900045ba <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
900045e0:	6823      	ldr	r3, [r4, #0]
900045e2:	4a20      	ldr	r2, [pc, #128]	; (90004664 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
900045e4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
900045e8:	4293      	cmp	r3, r2
900045ea:	d127      	bne.n	9000463c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
900045ec:	6b23      	ldr	r3, [r4, #48]	; 0x30
900045ee:	2b00      	cmp	r3, #0
900045f0:	d0e7      	beq.n	900045c2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900045f2:	6819      	ldr	r1, [r3, #0]
900045f4:	481c      	ldr	r0, [pc, #112]	; (90004668 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
900045f6:	68ca      	ldr	r2, [r1, #12]
900045f8:	4282      	cmp	r2, r0
900045fa:	d123      	bne.n	90004644 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
900045fc:	685a      	ldr	r2, [r3, #4]
900045fe:	2a00      	cmp	r2, #0
90004600:	d0df      	beq.n	900045c2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90004602:	689d      	ldr	r5, [r3, #8]
90004604:	b175      	cbz	r5, 90004624 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
90004606:	688e      	ldr	r6, [r1, #8]
90004608:	4a18      	ldr	r2, [pc, #96]	; (9000466c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
9000460a:	4296      	cmp	r6, r2
9000460c:	d123      	bne.n	90004656 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
9000460e:	68d9      	ldr	r1, [r3, #12]
90004610:	685a      	ldr	r2, [r3, #4]
90004612:	eb02 0061 	add.w	r0, r2, r1, asr #1
90004616:	07ca      	lsls	r2, r1, #31
90004618:	d41b      	bmi.n	90004652 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
9000461a:	689b      	ldr	r3, [r3, #8]
9000461c:	4621      	mov	r1, r4
    }
9000461e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90004622:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
90004624:	68d8      	ldr	r0, [r3, #12]
90004626:	07c6      	lsls	r6, r0, #31
90004628:	d5cb      	bpl.n	900045c2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000462a:	688e      	ldr	r6, [r1, #8]
9000462c:	490f      	ldr	r1, [pc, #60]	; (9000466c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
9000462e:	428e      	cmp	r6, r1
90004630:	d111      	bne.n	90004656 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
90004632:	eb02 0060 	add.w	r0, r2, r0, asr #1
90004636:	6803      	ldr	r3, [r0, #0]
90004638:	595b      	ldr	r3, [r3, r5]
9000463a:	e7ef      	b.n	9000461c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
9000463c:	4620      	mov	r0, r4
    }
9000463e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
90004642:	4718      	bx	r3
        if (action && action->isValid())
90004644:	4618      	mov	r0, r3
90004646:	4790      	blx	r2
90004648:	2800      	cmp	r0, #0
9000464a:	d0ba      	beq.n	900045c2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
9000464c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000464e:	6819      	ldr	r1, [r3, #0]
90004650:	e7d9      	b.n	90004606 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
90004652:	689d      	ldr	r5, [r3, #8]
90004654:	e7ef      	b.n	90004636 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
90004656:	4621      	mov	r1, r4
90004658:	4618      	mov	r0, r3
9000465a:	4633      	mov	r3, r6
    }
9000465c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90004660:	4718      	bx	r3
90004662:	bf00      	nop
90004664:	90004525 	.word	0x90004525
90004668:	900044a1 	.word	0x900044a1
9000466c:	90004475 	.word	0x90004475

90004670 <_ZN24screen_main_menuViewBaseC1Ev>:
screen_main_menuViewBase::screen_main_menuViewBase() :
90004670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004674:	b083      	sub	sp, #12
90004676:	4604      	mov	r4, r0
        : presenter(0)
90004678:	f013 ffd6 	bl	90018628 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
9000467c:	4ba8      	ldr	r3, [pc, #672]	; (90004920 <_ZN24screen_main_menuViewBaseC1Ev+0x2b0>)
9000467e:	2500      	movs	r5, #0
          touchable(false),
90004680:	f44f 7780 	mov.w	r7, #256	; 0x100
    flexButtonCallback(this, &screen_main_menuViewBase::flexButtonCallbackHandler)
90004684:	4aa7      	ldr	r2, [pc, #668]	; (90004924 <_ZN24screen_main_menuViewBaseC1Ev+0x2b4>)
90004686:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
9000468a:	6423      	str	r3, [r4, #64]	; 0x40
9000468c:	23ff      	movs	r3, #255	; 0xff
9000468e:	f104 0698 	add.w	r6, r4, #152	; 0x98
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90004692:	f64f 78ff 	movw	r8, #65535	; 0xffff
90004696:	6022      	str	r2, [r4, #0]
90004698:	a901      	add	r1, sp, #4
9000469a:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
9000469e:	4658      	mov	r0, fp
900046a0:	63e5      	str	r5, [r4, #60]	; 0x3c
        touchable = touch;
900046a2:	f240 1901 	movw	r9, #257	; 0x101
        : x(0), y(0), width(0), height(0)
900046a6:	6465      	str	r5, [r4, #68]	; 0x44
900046a8:	f104 0ac4 	add.w	sl, r4, #196	; 0xc4
          cachedAbsX(0),
900046ac:	6625      	str	r5, [r4, #96]	; 0x60
          touchable(false),
900046ae:	f8a4 7064 	strh.w	r7, [r4, #100]	; 0x64
        : color(col)
900046b2:	66a5      	str	r5, [r4, #104]	; 0x68
900046b4:	f8ad 8004 	strh.w	r8, [sp, #4]
        : x(0), y(0), width(0), height(0)
900046b8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
900046bc:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
900046c0:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
900046c4:	f00e fe4e 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900046c8:	a901      	add	r1, sp, #4
900046ca:	4630      	mov	r0, r6
900046cc:	f8ad 8004 	strh.w	r8, [sp, #4]
900046d0:	f00e fe48 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
900046d4:	f64f 7300 	movw	r3, #65280	; 0xff00
        : Box(), borderColor(0), borderSize(0)
900046d8:	4a93      	ldr	r2, [pc, #588]	; (90004928 <_ZN24screen_main_menuViewBaseC1Ev+0x2b8>)
        T::add(borderBox);
900046da:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
900046de:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
900046e2:	4650      	mov	r0, sl
        : T(), up(), down()
900046e4:	4b91      	ldr	r3, [pc, #580]	; (9000492c <_ZN24screen_main_menuViewBaseC1Ev+0x2bc>)
900046e6:	f884 811e 	strb.w	r8, [r4, #286]	; 0x11e
900046ea:	f504 789e 	add.w	r8, r4, #316	; 0x13c
          firstChild(0)
900046ee:	f8c4 50ec 	str.w	r5, [r4, #236]	; 0xec
900046f2:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
        touchable = touch;
900046f6:	f8a4 90e8 	strh.w	r9, [r4, #232]	; 0xe8
900046fa:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
          touchable(false),
900046fe:	f8a4 711c 	strh.w	r7, [r4, #284]	; 0x11c
        : color(col)
90004702:	f8c4 5120 	str.w	r5, [r4, #288]	; 0x120
90004706:	f8c4 20f8 	str.w	r2, [r4, #248]	; 0xf8
9000470a:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
9000470e:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
        : x(0), y(0), width(0), height(0)
90004712:	e9c4 5532 	strd	r5, r5, [r4, #200]	; 0xc8
90004716:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
          nextSibling(0),
9000471a:	e9c4 5536 	strd	r5, r5, [r4, #216]	; 0xd8
          cachedAbsX(0),
9000471e:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
          nextSibling(0),
90004722:	e9c4 5543 	strd	r5, r5, [r4, #268]	; 0x10c
          cachedAbsX(0),
90004726:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
        : color(0)
9000472a:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
9000472e:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
        rect.x = x;
90004732:	e9c4 553f 	strd	r5, r5, [r4, #252]	; 0xfc
90004736:	e9c4 5541 	strd	r5, r5, [r4, #260]	; 0x104
        T::add(borderBox);
9000473a:	f00c fee5 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), up(), down()
9000473e:	4b7b      	ldr	r3, [pc, #492]	; (9000492c <_ZN24screen_main_menuViewBaseC1Ev+0x2bc>)
90004740:	4a79      	ldr	r2, [pc, #484]	; (90004928 <_ZN24screen_main_menuViewBaseC1Ev+0x2b8>)
90004742:	f64f 7100 	movw	r1, #65280	; 0xff00
90004746:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
9000474a:	23ff      	movs	r3, #255	; 0xff
9000474c:	f8c4 2170 	str.w	r2, [r4, #368]	; 0x170
        T::add(borderBox);
90004750:	4640      	mov	r0, r8
90004752:	f884 3196 	strb.w	r3, [r4, #406]	; 0x196
90004756:	f8a4 1168 	strh.w	r1, [r4, #360]	; 0x168
9000475a:	f504 71b8 	add.w	r1, r4, #368	; 0x170
        touchable = touch;
9000475e:	f8a4 9160 	strh.w	r9, [r4, #352]	; 0x160
          touchable(false),
90004762:	f8a4 7194 	strh.w	r7, [r4, #404]	; 0x194
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90004766:	1d27      	adds	r7, r4, #4
90004768:	f8c4 5164 	str.w	r5, [r4, #356]	; 0x164
9000476c:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
90004770:	f8a4 51a0 	strh.w	r5, [r4, #416]	; 0x1a0
        rect.x = x;
90004774:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 90004954 <_ZN24screen_main_menuViewBaseC1Ev+0x2e4>
        : x(0), y(0), width(0), height(0)
90004778:	e9c4 5550 	strd	r5, r5, [r4, #320]	; 0x140
9000477c:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
          nextSibling(0),
90004780:	e9c4 5554 	strd	r5, r5, [r4, #336]	; 0x150
          cachedAbsX(0),
90004784:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
          nextSibling(0),
90004788:	e9c4 5561 	strd	r5, r5, [r4, #388]	; 0x184
          cachedAbsX(0),
9000478c:	e9c4 5563 	strd	r5, r5, [r4, #396]	; 0x18c
        : color(col)
90004790:	e9c4 5566 	strd	r5, r5, [r4, #408]	; 0x198
        : color(0)
90004794:	e9c4 5569 	strd	r5, r5, [r4, #420]	; 0x1a4
90004798:	e9c4 556b 	strd	r5, r5, [r4, #428]	; 0x1ac
        rect.x = x;
9000479c:	e9c4 555d 	strd	r5, r5, [r4, #372]	; 0x174
900047a0:	e9c4 555f 	strd	r5, r5, [r4, #380]	; 0x17c
900047a4:	f00c feb0 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
900047a8:	4961      	ldr	r1, [pc, #388]	; (90004930 <_ZN24screen_main_menuViewBaseC1Ev+0x2c0>)
900047aa:	4638      	mov	r0, r7
900047ac:	f8c4 51c0 	str.w	r5, [r4, #448]	; 0x1c0
900047b0:	f8c4 11b4 	str.w	r1, [r4, #436]	; 0x1b4
900047b4:	495f      	ldr	r1, [pc, #380]	; (90004934 <_ZN24screen_main_menuViewBaseC1Ev+0x2c4>)
900047b6:	6465      	str	r5, [r4, #68]	; 0x44
900047b8:	f8c4 11bc 	str.w	r1, [r4, #444]	; 0x1bc
900047bc:	495e      	ldr	r1, [pc, #376]	; (90004938 <_ZN24screen_main_menuViewBaseC1Ev+0x2c8>)
900047be:	f8c4 41b8 	str.w	r4, [r4, #440]	; 0x1b8
900047c2:	64a1      	str	r1, [r4, #72]	; 0x48
        color = newColor;
900047c4:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
900047c8:	66a1      	str	r1, [r4, #104]	; 0x68
900047ca:	f104 0140 	add.w	r1, r4, #64	; 0x40
900047ce:	f00c fe9b 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900047d2:	210c      	movs	r1, #12
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_SNAKE_LOGO_ID));
900047d4:	4658      	mov	r0, fp
900047d6:	f8ad 1004 	strh.w	r1, [sp, #4]
900047da:	a901      	add	r1, sp, #4
900047dc:	f00f fdfd 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900047e0:	4629      	mov	r1, r5
900047e2:	4658      	mov	r0, fp
900047e4:	e9c4 591c 	strd	r5, r9, [r4, #112]	; 0x70
900047e8:	f00e fd77 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900047ec:	4659      	mov	r1, fp
900047ee:	4638      	mov	r0, r7
900047f0:	f00c fe8a 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900047f4:	230d      	movs	r3, #13
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_TICTACTOE_LOGO_ID));
900047f6:	a901      	add	r1, sp, #4
900047f8:	4630      	mov	r0, r6
900047fa:	f8ad 3004 	strh.w	r3, [sp, #4]
900047fe:	f00f fdec 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90004802:	23f0      	movs	r3, #240	; 0xf0
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004804:	4629      	mov	r1, r5
90004806:	4630      	mov	r0, r6
90004808:	f8c4 90a0 	str.w	r9, [r4, #160]	; 0xa0
9000480c:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
90004810:	f00e fd63 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004814:	4631      	mov	r1, r6
90004816:	4638      	mov	r0, r7
90004818:	f00c fe76 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000481c:	4b47      	ldr	r3, [pc, #284]	; (9000493c <_ZN24screen_main_menuViewBaseC1Ev+0x2cc>)
        borderUp = borderColorReleased;
9000481e:	4848      	ldr	r0, [pc, #288]	; (90004940 <_ZN24screen_main_menuViewBaseC1Ev+0x2d0>)
90004820:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90004824:	2305      	movs	r3, #5
90004826:	f8c4 0134 	str.w	r0, [r4, #308]	; 0x134
        borderDown = borderColorPressed;
9000482a:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
        down = colorPressed;
9000482e:	4945      	ldr	r1, [pc, #276]	; (90004944 <_ZN24screen_main_menuViewBaseC1Ev+0x2d4>)
        borderDown = borderColorPressed;
90004830:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
90004834:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
90004838:	f8a4 3128 	strh.w	r3, [r4, #296]	; 0x128
        borderBox.setColor(T::getPressed() ? down : up);
9000483c:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
        down = colorPressed;
90004840:	4b41      	ldr	r3, [pc, #260]	; (90004948 <_ZN24screen_main_menuViewBaseC1Ev+0x2d8>)
        borderDown = borderColorPressed;
90004842:	f8c4 0138 	str.w	r0, [r4, #312]	; 0x138
        handlePressedUpdated();
90004846:	f8d4 00c4 	ldr.w	r0, [r4, #196]	; 0xc4
        down = colorPressed;
9000484a:	e9c4 314b 	strd	r3, r1, [r4, #300]	; 0x12c
        borderBox.setColor(T::getPressed() ? down : up);
9000484e:	2d00      	cmp	r5, #0
90004850:	d05a      	beq.n	90004908 <_ZN24screen_main_menuViewBaseC1Ev+0x298>
90004852:	460b      	mov	r3, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004854:	f504 719c 	add.w	r1, r4, #312	; 0x138
90004858:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
9000485c:	680b      	ldr	r3, [r1, #0]
        borderColor = colorBorder;
9000485e:	4e3b      	ldr	r6, [pc, #236]	; (9000494c <_ZN24screen_main_menuViewBaseC1Ev+0x2dc>)
90004860:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
        alpha = newAlpha;
90004864:	2301      	movs	r3, #1
90004866:	f884 30f1 	strb.w	r3, [r4, #241]	; 0xf1
        handleAlphaUpdated();
9000486a:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
9000486e:	42b1      	cmp	r1, r6
90004870:	d150      	bne.n	90004914 <_ZN24screen_main_menuViewBaseC1Ev+0x2a4>
        alpha = newAlpha;
90004872:	f884 311e 	strb.w	r3, [r4, #286]	; 0x11e
90004876:	4b36      	ldr	r3, [pc, #216]	; (90004950 <_ZN24screen_main_menuViewBaseC1Ev+0x2e0>)
    btn_tictactoe.setAction(flexButtonCallback);
90004878:	f504 75da 	add.w	r5, r4, #436	; 0x1b4
9000487c:	4651      	mov	r1, sl
9000487e:	4638      	mov	r0, r7
90004880:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
90004884:	f103 7387 	add.w	r3, r3, #17694720	; 0x10e0000
        action = &callback;
90004888:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
9000488c:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
90004890:	f00c fe3a 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004894:	2200      	movs	r2, #0
90004896:	4b2f      	ldr	r3, [pc, #188]	; (90004954 <_ZN24screen_main_menuViewBaseC1Ev+0x2e4>)
        borderUp = borderColorReleased;
90004898:	4929      	ldr	r1, [pc, #164]	; (90004940 <_ZN24screen_main_menuViewBaseC1Ev+0x2d0>)
        borderBox.setColor(T::getPressed() ? down : up);
9000489a:	f894 0168 	ldrb.w	r0, [r4, #360]	; 0x168
        borderUp = borderColorReleased;
9000489e:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
        borderDown = borderColorPressed;
900048a2:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
900048a6:	e9c4 235d 	strd	r2, r3, [r4, #372]	; 0x174
        borderSize = size;
900048aa:	2305      	movs	r3, #5
900048ac:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
900048b0:	4a24      	ldr	r2, [pc, #144]	; (90004944 <_ZN24screen_main_menuViewBaseC1Ev+0x2d4>)
900048b2:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
900048b6:	4b24      	ldr	r3, [pc, #144]	; (90004948 <_ZN24screen_main_menuViewBaseC1Ev+0x2d8>)
        borderDown = borderColorPressed;
900048b8:	f8c4 11b0 	str.w	r1, [r4, #432]	; 0x1b0
        handlePressedUpdated();
900048bc:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
        down = colorPressed;
900048c0:	e9c4 3269 	strd	r3, r2, [r4, #420]	; 0x1a4
        borderBox.setColor(T::getPressed() ? down : up);
900048c4:	b318      	cbz	r0, 9000490e <_ZN24screen_main_menuViewBaseC1Ev+0x29e>
        color = newColor;
900048c6:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900048c8:	f504 72d8 	add.w	r2, r4, #432	; 0x1b0
900048cc:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
900048d0:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
900048d2:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
        alpha = newAlpha;
900048d6:	2300      	movs	r3, #0
900048d8:	f884 3169 	strb.w	r3, [r4, #361]	; 0x169
        handleAlphaUpdated();
900048dc:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
900048e0:	42b2      	cmp	r2, r6
900048e2:	d11a      	bne.n	9000491a <_ZN24screen_main_menuViewBaseC1Ev+0x2aa>
        alpha = newAlpha;
900048e4:	f884 3196 	strb.w	r3, [r4, #406]	; 0x196
900048e8:	2300      	movs	r3, #0
900048ea:	4638      	mov	r0, r7
900048ec:	4641      	mov	r1, r8
        action = &callback;
900048ee:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
900048f2:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
900048f6:	4b17      	ldr	r3, [pc, #92]	; (90004954 <_ZN24screen_main_menuViewBaseC1Ev+0x2e4>)
900048f8:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
900048fc:	f00c fe04 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90004900:	4620      	mov	r0, r4
90004902:	b003      	add	sp, #12
90004904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004908:	f504 719a 	add.w	r1, r4, #308	; 0x134
9000490c:	e7a4      	b.n	90004858 <_ZN24screen_main_menuViewBaseC1Ev+0x1e8>
9000490e:	f504 72d6 	add.w	r2, r4, #428	; 0x1ac
90004912:	e7db      	b.n	900048cc <_ZN24screen_main_menuViewBaseC1Ev+0x25c>
        handleAlphaUpdated();
90004914:	4650      	mov	r0, sl
90004916:	4788      	blx	r1
90004918:	e7ad      	b.n	90004876 <_ZN24screen_main_menuViewBaseC1Ev+0x206>
9000491a:	4640      	mov	r0, r8
9000491c:	4790      	blx	r2
9000491e:	e7e3      	b.n	900048e8 <_ZN24screen_main_menuViewBaseC1Ev+0x278>
90004920:	9002c320 	.word	0x9002c320
90004924:	9002b610 	.word	0x9002b610
90004928:	9002c388 	.word	0x9002c388
9000492c:	9002b55c 	.word	0x9002b55c
90004930:	9002b5f8 	.word	0x9002b5f8
90004934:	900044f5 	.word	0x900044f5
90004938:	011001e0 	.word	0x011001e0
9000493c:	010f00f0 	.word	0x010f00f0
90004940:	ff003366 	.word	0xff003366
90004944:	ff0099cc 	.word	0xff0099cc
90004948:	ff006699 	.word	0xff006699
9000494c:	900044b9 	.word	0x900044b9
90004950:	000100f0 	.word	0x000100f0
90004954:	011000f0 	.word	0x011000f0

90004958 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004958:	b530      	push	{r4, r5, lr}
9000495a:	b085      	sub	sp, #20
9000495c:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
9000495e:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90004960:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004962:	466d      	mov	r5, sp
90004964:	4601      	mov	r1, r0
        rect.width = width;
90004966:	8102      	strh	r2, [r0, #8]
90004968:	343c      	adds	r4, #60	; 0x3c
9000496a:	4628      	mov	r0, r5
9000496c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004970:	4798      	blx	r3
90004972:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004976:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
9000497a:	b005      	add	sp, #20
9000497c:	bd30      	pop	{r4, r5, pc}
9000497e:	bf00      	nop

90004980 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90004980:	b530      	push	{r4, r5, lr}
90004982:	b085      	sub	sp, #20
90004984:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90004986:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90004988:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000498a:	466d      	mov	r5, sp
9000498c:	4601      	mov	r1, r0
        rect.height = height;
9000498e:	8142      	strh	r2, [r0, #10]
90004990:	343c      	adds	r4, #60	; 0x3c
90004992:	4628      	mov	r0, r5
90004994:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004998:	4798      	blx	r3
9000499a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000499e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
900049a2:	b005      	add	sp, #20
900049a4:	bd30      	pop	{r4, r5, pc}
900049a6:	bf00      	nop

900049a8 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
900049a8:	2200      	movs	r2, #0
900049aa:	6002      	str	r2, [r0, #0]
900049ac:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
900049ae:	4770      	bx	lr

900049b0 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900049b0:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
900049b4:	4770      	bx	lr
900049b6:	bf00      	nop

900049b8 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
900049b8:	2000      	movs	r0, #0
900049ba:	4770      	bx	lr

900049bc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
900049bc:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900049c0:	b112      	cbz	r2, 900049c8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
900049c2:	6803      	ldr	r3, [r0, #0]
900049c4:	695b      	ldr	r3, [r3, #20]
900049c6:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
900049c8:	4770      	bx	lr
900049ca:	bf00      	nop

900049cc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900049cc:	2200      	movs	r2, #0
900049ce:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
900049d2:	6082      	str	r2, [r0, #8]
900049d4:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
900049d8:	4770      	bx	lr
900049da:	bf00      	nop

900049dc <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
900049dc:	6c80      	ldr	r0, [r0, #72]	; 0x48
900049de:	4770      	bx	lr

900049e0 <_ZN25screen_snake_gameViewBase19change_direction_upEv>:
     * Virtual Action Handlers
     */
    virtual void change_direction_up()
    {
        // Override and implement this function in screen_snake_game
    }
900049e0:	4770      	bx	lr
900049e2:	bf00      	nop

900049e4 <_ZN25screen_snake_gameViewBase21change_direction_leftEv>:
    virtual void change_direction_left()
    {
        // Override and implement this function in screen_snake_game
    }
900049e4:	4770      	bx	lr
900049e6:	bf00      	nop

900049e8 <_ZN25screen_snake_gameViewBase22change_direction_rightEv>:
    virtual void change_direction_right()
    {
        // Override and implement this function in screen_snake_game
    }
900049e8:	4770      	bx	lr
900049ea:	bf00      	nop

900049ec <_ZN25screen_snake_gameViewBase21change_direction_downEv>:
    virtual void change_direction_down()
    {
        // Override and implement this function in screen_snake_game
    }
900049ec:	4770      	bx	lr
900049ee:	bf00      	nop

900049f0 <_ZN25screen_snake_gameViewBase16game_snake_startEv>:
    virtual void game_snake_start()
    {
        // Override and implement this function in screen_snake_game
    }
900049f0:	4770      	bx	lr
900049f2:	bf00      	nop

900049f4 <_ZN25screen_snake_gameViewBaseD1Ev>:
}

screen_snake_gameViewBase::~screen_snake_gameViewBase()
{

}
900049f4:	4770      	bx	lr
900049f6:	bf00      	nop

900049f8 <_ZN25screen_snake_gameViewBase11setupScreenEv>:

void screen_snake_gameViewBase::setupScreen()
{

}
900049f8:	4770      	bx	lr
900049fa:	bf00      	nop

900049fc <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900049fc:	4770      	bx	lr
900049fe:	bf00      	nop

90004a00 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90004a00:	4770      	bx	lr
90004a02:	bf00      	nop

90004a04 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004a04:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004a06:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004a08:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004a0a:	6844      	ldr	r4, [r0, #4]
90004a0c:	f012 0f01 	tst.w	r2, #1
90004a10:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004a14:	d103      	bne.n	90004a1e <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
90004a16:	689b      	ldr	r3, [r3, #8]
    }
90004a18:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004a1c:	4718      	bx	r3
90004a1e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90004a22:	689b      	ldr	r3, [r3, #8]
90004a24:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90004a28:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004a2c:	58d3      	ldr	r3, [r2, r3]
90004a2e:	4718      	bx	r3

90004a30 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004a30:	6843      	ldr	r3, [r0, #4]
90004a32:	b13b      	cbz	r3, 90004a44 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004a34:	6883      	ldr	r3, [r0, #8]
90004a36:	b10b      	cbz	r3, 90004a3c <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004a38:	2001      	movs	r0, #1
    }
90004a3a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004a3c:	68c0      	ldr	r0, [r0, #12]
90004a3e:	f000 0001 	and.w	r0, r0, #1
90004a42:	4770      	bx	lr
90004a44:	4618      	mov	r0, r3
90004a46:	4770      	bx	lr

90004a48 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90004a48:	b510      	push	{r4, lr}
90004a4a:	4604      	mov	r4, r0
90004a4c:	214c      	movs	r1, #76	; 0x4c
90004a4e:	f023 faf1 	bl	90028034 <_ZdlPvj>
90004a52:	4620      	mov	r0, r4
90004a54:	bd10      	pop	{r4, pc}
90004a56:	bf00      	nop

90004a58 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004a58:	b510      	push	{r4, lr}
90004a5a:	4604      	mov	r4, r0
90004a5c:	2110      	movs	r1, #16
90004a5e:	f023 fae9 	bl	90028034 <_ZdlPvj>
90004a62:	4620      	mov	r0, r4
90004a64:	bd10      	pop	{r4, pc}
90004a66:	bf00      	nop

90004a68 <_ZN25screen_snake_gameViewBaseD0Ev>:
screen_snake_gameViewBase::~screen_snake_gameViewBase()
90004a68:	b510      	push	{r4, lr}
90004a6a:	4604      	mov	r4, r0
}
90004a6c:	f44f 7164 	mov.w	r1, #912	; 0x390
90004a70:	f023 fae0 	bl	90028034 <_ZdlPvj>
90004a74:	4620      	mov	r0, r4
90004a76:	bd10      	pop	{r4, pc}

90004a78 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004a78:	4b1b      	ldr	r3, [pc, #108]	; (90004ae8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004a7a:	6802      	ldr	r2, [r0, #0]
90004a7c:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90004a7e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004a80:	6b55      	ldr	r5, [r2, #52]	; 0x34
90004a82:	b323      	cbz	r3, 90004ace <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90004a84:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90004a86:	4919      	ldr	r1, [pc, #100]	; (90004aec <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004a88:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90004a8a:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004a8c:	8809      	ldrh	r1, [r1, #0]
90004a8e:	4291      	cmp	r1, r2
90004a90:	d923      	bls.n	90004ada <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90004a92:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004a96:	4b16      	ldr	r3, [pc, #88]	; (90004af0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90004a98:	681b      	ldr	r3, [r3, #0]
90004a9a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004a9e:	4a15      	ldr	r2, [pc, #84]	; (90004af4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004aa0:	6803      	ldr	r3, [r0, #0]
90004aa2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004aa4:	4293      	cmp	r3, r2
90004aa6:	d107      	bne.n	90004ab8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90004aa8:	88c0      	ldrh	r0, [r0, #6]
90004aaa:	4b13      	ldr	r3, [pc, #76]	; (90004af8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004aac:	1a31      	subs	r1, r6, r0
90004aae:	429d      	cmp	r5, r3
90004ab0:	b209      	sxth	r1, r1
90004ab2:	d107      	bne.n	90004ac4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90004ab4:	80e1      	strh	r1, [r4, #6]
    }
90004ab6:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004ab8:	4798      	blx	r3
90004aba:	4b0f      	ldr	r3, [pc, #60]	; (90004af8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004abc:	1a31      	subs	r1, r6, r0
90004abe:	429d      	cmp	r5, r3
90004ac0:	b209      	sxth	r1, r1
90004ac2:	d0f7      	beq.n	90004ab4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90004ac4:	4620      	mov	r0, r4
90004ac6:	462b      	mov	r3, r5
    }
90004ac8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004acc:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004ace:	4b0b      	ldr	r3, [pc, #44]	; (90004afc <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90004ad0:	216c      	movs	r1, #108	; 0x6c
90004ad2:	4a0b      	ldr	r2, [pc, #44]	; (90004b00 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004ad4:	480b      	ldr	r0, [pc, #44]	; (90004b04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004ad6:	f023 fadb 	bl	90028090 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004ada:	4b0b      	ldr	r3, [pc, #44]	; (90004b08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90004adc:	216d      	movs	r1, #109	; 0x6d
90004ade:	4a08      	ldr	r2, [pc, #32]	; (90004b00 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004ae0:	4808      	ldr	r0, [pc, #32]	; (90004b04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004ae2:	f023 fad5 	bl	90028090 <__assert_func>
90004ae6:	bf00      	nop
90004ae8:	240398f4 	.word	0x240398f4
90004aec:	240398f8 	.word	0x240398f8
90004af0:	240398fc 	.word	0x240398fc
90004af4:	900035c1 	.word	0x900035c1
90004af8:	90002291 	.word	0x90002291
90004afc:	9002b63c 	.word	0x9002b63c
90004b00:	9002b680 	.word	0x9002b680
90004b04:	9002b6bc 	.word	0x9002b6bc
90004b08:	9002b704 	.word	0x9002b704

90004b0c <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_snake_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
90004b0c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btn_up)
90004b0e:	f500 739c 	add.w	r3, r0, #312	; 0x138
{
90004b12:	4604      	mov	r4, r0
90004b14:	460d      	mov	r5, r1
    if (&src == &btn_up)
90004b16:	4299      	cmp	r1, r3
90004b18:	d014      	beq.n	90004b44 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
        //intr_change_direction_up
        //When btn_up clicked call virtual function
        //Call change_direction_up
        change_direction_up();
    }
    if (&src == &btn_left)
90004b1a:	f504 73f6 	add.w	r3, r4, #492	; 0x1ec
90004b1e:	429d      	cmp	r5, r3
90004b20:	d02f      	beq.n	90004b82 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x76>
        //intr_change_direction_left
        //When btn_left clicked call virtual function
        //Call change_direction_left
        change_direction_left();
    }
    if (&src == &btn_right)
90004b22:	f504 73ba 	add.w	r3, r4, #372	; 0x174
90004b26:	429d      	cmp	r5, r3
90004b28:	d023      	beq.n	90004b72 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x66>
        //intr_change_direction_right
        //When btn_right clicked call virtual function
        //Call change_direction_right
        change_direction_right();
    }
    if (&src == &btn_down)
90004b2a:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
90004b2e:	429d      	cmp	r5, r3
90004b30:	d017      	beq.n	90004b62 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
        //intr_change_direction_down
        //When btn_down clicked call virtual function
        //Call change_direction_down
        change_direction_down();
    }
    if (&src == &btn_snake_start)
90004b32:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
90004b36:	429d      	cmp	r5, r3
90004b38:	d00b      	beq.n	90004b52 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x46>
        //intr_game_snake_start
        //When btn_snake_start clicked call virtual function
        //Call game_snake_start
        game_snake_start();
    }
    if (&src == &btn_back)
90004b3a:	f504 740a 	add.w	r4, r4, #552	; 0x228
90004b3e:	42a5      	cmp	r5, r4
90004b40:	d027      	beq.n	90004b92 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x86>
        //btn_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
90004b42:	bd38      	pop	{r3, r4, r5, pc}
        change_direction_up();
90004b44:	6803      	ldr	r3, [r0, #0]
90004b46:	4a16      	ldr	r2, [pc, #88]	; (90004ba0 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x94>)
90004b48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004b4a:	4293      	cmp	r3, r2
90004b4c:	d0e5      	beq.n	90004b1a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
90004b4e:	4798      	blx	r3
90004b50:	e7e3      	b.n	90004b1a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
        game_snake_start();
90004b52:	6823      	ldr	r3, [r4, #0]
90004b54:	4a13      	ldr	r2, [pc, #76]	; (90004ba4 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x98>)
90004b56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90004b58:	4293      	cmp	r3, r2
90004b5a:	d0ee      	beq.n	90004b3a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
90004b5c:	4620      	mov	r0, r4
90004b5e:	4798      	blx	r3
90004b60:	e7eb      	b.n	90004b3a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
        change_direction_down();
90004b62:	6823      	ldr	r3, [r4, #0]
90004b64:	4a10      	ldr	r2, [pc, #64]	; (90004ba8 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x9c>)
90004b66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90004b68:	4293      	cmp	r3, r2
90004b6a:	d0e2      	beq.n	90004b32 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
90004b6c:	4620      	mov	r0, r4
90004b6e:	4798      	blx	r3
90004b70:	e7df      	b.n	90004b32 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
        change_direction_right();
90004b72:	6823      	ldr	r3, [r4, #0]
90004b74:	4a0d      	ldr	r2, [pc, #52]	; (90004bac <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa0>)
90004b76:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004b78:	4293      	cmp	r3, r2
90004b7a:	d0d6      	beq.n	90004b2a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
90004b7c:	4620      	mov	r0, r4
90004b7e:	4798      	blx	r3
90004b80:	e7d3      	b.n	90004b2a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
        change_direction_left();
90004b82:	6823      	ldr	r3, [r4, #0]
90004b84:	4a0a      	ldr	r2, [pc, #40]	; (90004bb0 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa4>)
90004b86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004b88:	4293      	cmp	r3, r2
90004b8a:	d0ca      	beq.n	90004b22 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
90004b8c:	4620      	mov	r0, r4
90004b8e:	4798      	blx	r3
90004b90:	e7c7      	b.n	90004b22 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004b92:	f012 f911 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
}
90004b96:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoscreen_main_menuScreenNoTransition();
90004b9a:	f7ff ba0d 	b.w	90003fb8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90004b9e:	bf00      	nop
90004ba0:	900049e1 	.word	0x900049e1
90004ba4:	900049f1 	.word	0x900049f1
90004ba8:	900049ed 	.word	0x900049ed
90004bac:	900049e9 	.word	0x900049e9
90004bb0:	900049e5 	.word	0x900049e5

90004bb4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004bb4:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004bb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90004bba:	4f25      	ldr	r7, [pc, #148]	; (90004c50 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
90004bbc:	4605      	mov	r5, r0
        setX(x);
90004bbe:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004bc0:	4690      	mov	r8, r2
90004bc2:	42be      	cmp	r6, r7
90004bc4:	d125      	bne.n	90004c12 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
90004bc6:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
90004bc8:	80a9      	strh	r1, [r5, #4]
90004bca:	4922      	ldr	r1, [pc, #136]	; (90004c54 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004bcc:	428c      	cmp	r4, r1
90004bce:	d126      	bne.n	90004c1e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004bd0:	4921      	ldr	r1, [pc, #132]	; (90004c58 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004bd2:	fa1f f888 	uxth.w	r8, r8
90004bd6:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90004bd8:	680b      	ldr	r3, [r1, #0]
90004bda:	2b00      	cmp	r3, #0
90004bdc:	d032      	beq.n	90004c44 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
90004bde:	491f      	ldr	r1, [pc, #124]	; (90004c5c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90004be0:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004be2:	8809      	ldrh	r1, [r1, #0]
90004be4:	4291      	cmp	r1, r2
90004be6:	d927      	bls.n	90004c38 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
90004be8:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004bec:	4b1c      	ldr	r3, [pc, #112]	; (90004c60 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
90004bee:	681b      	ldr	r3, [r3, #0]
90004bf0:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004bf4:	4a1b      	ldr	r2, [pc, #108]	; (90004c64 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90004bf6:	6803      	ldr	r3, [r0, #0]
90004bf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004bfa:	4293      	cmp	r3, r2
90004bfc:	d11a      	bne.n	90004c34 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
90004bfe:	88c0      	ldrh	r0, [r0, #6]
90004c00:	4b19      	ldr	r3, [pc, #100]	; (90004c68 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004c02:	eba8 0200 	sub.w	r2, r8, r0
90004c06:	429e      	cmp	r6, r3
90004c08:	b211      	sxth	r1, r2
90004c0a:	d10e      	bne.n	90004c2a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
90004c0c:	80e9      	strh	r1, [r5, #6]
    }
90004c0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
90004c12:	47b0      	blx	r6
        setBaselineY(baselineY);
90004c14:	682b      	ldr	r3, [r5, #0]
90004c16:	490f      	ldr	r1, [pc, #60]	; (90004c54 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004c18:	6e5c      	ldr	r4, [r3, #100]	; 0x64
90004c1a:	428c      	cmp	r4, r1
90004c1c:	d0d8      	beq.n	90004bd0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
90004c1e:	4641      	mov	r1, r8
90004c20:	4628      	mov	r0, r5
90004c22:	4623      	mov	r3, r4
    }
90004c24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
90004c28:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004c2a:	4628      	mov	r0, r5
90004c2c:	4633      	mov	r3, r6
    }
90004c2e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004c32:	4718      	bx	r3
90004c34:	4798      	blx	r3
90004c36:	e7e3      	b.n	90004c00 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004c38:	4b0c      	ldr	r3, [pc, #48]	; (90004c6c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90004c3a:	216d      	movs	r1, #109	; 0x6d
90004c3c:	4a0c      	ldr	r2, [pc, #48]	; (90004c70 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004c3e:	480d      	ldr	r0, [pc, #52]	; (90004c74 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004c40:	f023 fa26 	bl	90028090 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004c44:	4b0c      	ldr	r3, [pc, #48]	; (90004c78 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
90004c46:	216c      	movs	r1, #108	; 0x6c
90004c48:	4a09      	ldr	r2, [pc, #36]	; (90004c70 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004c4a:	480a      	ldr	r0, [pc, #40]	; (90004c74 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004c4c:	f023 fa20 	bl	90028090 <__assert_func>
90004c50:	9000228d 	.word	0x9000228d
90004c54:	90004a79 	.word	0x90004a79
90004c58:	240398f4 	.word	0x240398f4
90004c5c:	240398f8 	.word	0x240398f8
90004c60:	240398fc 	.word	0x240398fc
90004c64:	900035c1 	.word	0x900035c1
90004c68:	90002291 	.word	0x90002291
90004c6c:	9002b704 	.word	0x9002b704
90004c70:	9002b680 	.word	0x9002b680
90004c74:	9002b6bc 	.word	0x9002b6bc
90004c78:	9002b63c 	.word	0x9002b63c

90004c7c <_ZN25screen_snake_gameViewBaseC1Ev>:
screen_snake_gameViewBase::screen_snake_gameViewBase() :
90004c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004c80:	4604      	mov	r4, r0
90004c82:	2500      	movs	r5, #0
        : Widget(), alpha(255), color(0)
90004c84:	f04f 08ff 	mov.w	r8, #255	; 0xff
          touchable(false),
90004c88:	f44f 7980 	mov.w	r9, #256	; 0x100
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90004c8c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
90004c90:	4edb      	ldr	r6, [pc, #876]	; (90005000 <_ZN25screen_snake_gameViewBaseC1Ev+0x384>)
90004c92:	f104 0bc4 	add.w	fp, r4, #196	; 0xc4
screen_snake_gameViewBase::screen_snake_gameViewBase() :
90004c96:	ed2d 8b04 	vpush	{d8-d9}
90004c9a:	b093      	sub	sp, #76	; 0x4c
90004c9c:	f013 fcc4 	bl	90018628 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90004ca0:	4bd8      	ldr	r3, [pc, #864]	; (90005004 <_ZN25screen_snake_gameViewBaseC1Ev+0x388>)
90004ca2:	af10      	add	r7, sp, #64	; 0x40
90004ca4:	4650      	mov	r0, sl
90004ca6:	6023      	str	r3, [r4, #0]
90004ca8:	f64f 73ff 	movw	r3, #65535	; 0xffff
90004cac:	4639      	mov	r1, r7
90004cae:	6426      	str	r6, [r4, #64]	; 0x40
90004cb0:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
90004cb4:	63e5      	str	r5, [r4, #60]	; 0x3c
        : x(0), y(0), width(0), height(0)
90004cb6:	6465      	str	r5, [r4, #68]	; 0x44
          cachedAbsX(0),
90004cb8:	6625      	str	r5, [r4, #96]	; 0x60
          touchable(false),
90004cba:	f8a4 9064 	strh.w	r9, [r4, #100]	; 0x64
        : color(col)
90004cbe:	66a5      	str	r5, [r4, #104]	; 0x68
90004cc0:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
        : x(0), y(0), width(0), height(0)
90004cc4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
90004cc8:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
90004ccc:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
90004cd0:	f00e fb48 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004cd4:	f504 739c 	add.w	r3, r4, #312	; 0x138
90004cd8:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
90004cdc:	4658      	mov	r0, fp
90004cde:	f884 80be 	strb.w	r8, [r4, #190]	; 0xbe
          touchable(false),
90004ce2:	f8a4 90bc 	strh.w	r9, [r4, #188]	; 0xbc
        : color(col)
90004ce6:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
90004cea:	9304      	str	r3, [sp, #16]
        : x(0), y(0), width(0), height(0)
90004cec:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
90004cf0:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          nextSibling(0),
90004cf4:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
          cachedAbsX(0),
90004cf8:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
90004cfc:	f00f fca4 	bl	90014648 <_ZN8touchgfx15ButtonWithLabelC1Ev>
90004d00:	f884 8132 	strb.w	r8, [r4, #306]	; 0x132
90004d04:	9804      	ldr	r0, [sp, #16]
90004d06:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
          touchable(false),
90004d0a:	f8a4 9130 	strh.w	r9, [r4, #304]	; 0x130
        : color(col)
90004d0e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
        : x(0), y(0), width(0), height(0)
90004d12:	e9c4 6543 	strd	r6, r5, [r4, #268]	; 0x10c
90004d16:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
90004d1a:	f504 76ba 	add.w	r6, r4, #372	; 0x174
          parent(0),
90004d1e:	e9c4 5547 	strd	r5, r5, [r4, #284]	; 0x11c
          nextDrawChainElement(0),
90004d22:	e9c4 5549 	strd	r5, r5, [r4, #292]	; 0x124
90004d26:	f00f fb31 	bl	9001438c <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d2a:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
90004d2e:	4630      	mov	r0, r6
90004d30:	ee08 6a90 	vmov	s17, r6
90004d34:	9305      	str	r3, [sp, #20]
90004d36:	f504 76f6 	add.w	r6, r4, #492	; 0x1ec
90004d3a:	f00f fb27 	bl	9001438c <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d3e:	9805      	ldr	r0, [sp, #20]
90004d40:	f00f fb24 	bl	9001438c <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d44:	f504 730a 	add.w	r3, r4, #552	; 0x228
90004d48:	4630      	mov	r0, r6
90004d4a:	ee09 6a10 	vmov	s18, r6
90004d4e:	9306      	str	r3, [sp, #24]
90004d50:	f00f fb1c 	bl	9001438c <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d54:	9806      	ldr	r0, [sp, #24]
90004d56:	1d26      	adds	r6, r4, #4
90004d58:	f00f fb18 	bl	9001438c <_ZN8touchgfx14ButtonWithIconC1Ev>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004d5c:	f04f 32ff 	mov.w	r2, #4294967295
        : typedTextId(id)
90004d60:	48a9      	ldr	r0, [pc, #676]	; (90005008 <_ZN25screen_snake_gameViewBaseC1Ev+0x38c>)
90004d62:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004d66:	49a9      	ldr	r1, [pc, #676]	; (9000500c <_ZN25screen_snake_gameViewBaseC1Ev+0x390>)
90004d68:	f8c4 22a4 	str.w	r2, [r4, #676]	; 0x2a4
90004d6c:	f8a4 22d8 	strh.w	r2, [r4, #728]	; 0x2d8
90004d70:	f8a4 3290 	strh.w	r3, [r4, #656]	; 0x290
90004d74:	f8c4 829a 	str.w	r8, [r4, #666]	; 0x29a
90004d78:	f8c4 82e2 	str.w	r8, [r4, #738]	; 0x2e2
90004d7c:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
90004d80:	f8c4 02d4 	str.w	r0, [r4, #724]	; 0x2d4
90004d84:	f8c4 1264 	str.w	r1, [r4, #612]	; 0x264
          touchable(false),
90004d88:	f8a4 9288 	strh.w	r9, [r4, #648]	; 0x288
        : color(col)
90004d8c:	f8c4 5294 	str.w	r5, [r4, #660]	; 0x294
90004d90:	f8a4 5298 	strh.w	r5, [r4, #664]	; 0x298
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004d94:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
              text(0)
90004d98:	f8c4 52a8 	str.w	r5, [r4, #680]	; 0x2a8
90004d9c:	f8a4 92d0 	strh.w	r9, [r4, #720]	; 0x2d0
        : color(col)
90004da0:	f8c4 52dc 	str.w	r5, [r4, #732]	; 0x2dc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004da4:	f8a4 52e0 	strh.w	r5, [r4, #736]	; 0x2e0
        : x(0), y(0), width(0), height(0)
90004da8:	e9c4 559a 	strd	r5, r5, [r4, #616]	; 0x268
90004dac:	e9c4 559c 	strd	r5, r5, [r4, #624]	; 0x270
          nextSibling(0),
90004db0:	e9c4 559e 	strd	r5, r5, [r4, #632]	; 0x278
          cachedAbsX(0),
90004db4:	e9c4 55a0 	strd	r5, r5, [r4, #640]	; 0x280
90004db8:	e9c4 55ac 	strd	r5, r5, [r4, #688]	; 0x2b0
90004dbc:	e9c4 55ae 	strd	r5, r5, [r4, #696]	; 0x2b8
          nextSibling(0),
90004dc0:	e9c4 55b0 	strd	r5, r5, [r4, #704]	; 0x2c0
          cachedAbsX(0),
90004dc4:	e9c4 55b2 	strd	r5, r5, [r4, #712]	; 0x2c8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004dc8:	f8c4 52e8 	str.w	r5, [r4, #744]	; 0x2e8
90004dcc:	f8a4 3324 	strh.w	r3, [r4, #804]	; 0x324
        : TextAreaWithWildcardBase(), wc1(0)
90004dd0:	4b8f      	ldr	r3, [pc, #572]	; (90005010 <_ZN25screen_snake_gameViewBaseC1Ev+0x394>)
90004dd2:	f8c4 832e 	str.w	r8, [r4, #814]	; 0x32e
90004dd6:	f8c4 32ac 	str.w	r3, [r4, #684]	; 0x2ac
        : pobject(pObject), pmemfun(pmemfun_1)
90004dda:	4b8e      	ldr	r3, [pc, #568]	; (90005014 <_ZN25screen_snake_gameViewBaseC1Ev+0x398>)
        rect.x = x;
90004ddc:	f8df 826c 	ldr.w	r8, [pc, #620]	; 9000504c <_ZN25screen_snake_gameViewBaseC1Ev+0x3d0>
90004de0:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
90004de4:	4b8c      	ldr	r3, [pc, #560]	; (90005018 <_ZN25screen_snake_gameViewBaseC1Ev+0x39c>)
90004de6:	f8c4 22ec 	str.w	r2, [r4, #748]	; 0x2ec
90004dea:	f8c4 3388 	str.w	r3, [r4, #904]	; 0x388
        color = newColor;
90004dee:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
90004df2:	f8c4 2338 	str.w	r2, [r4, #824]	; 0x338
90004df6:	f8c4 12f8 	str.w	r1, [r4, #760]	; 0x2f8
90004dfa:	f104 0140 	add.w	r1, r4, #64	; 0x40
90004dfe:	f8c4 0320 	str.w	r0, [r4, #800]	; 0x320
90004e02:	4630      	mov	r0, r6
90004e04:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
90004e08:	66a3      	str	r3, [r4, #104]	; 0x68
          touchable(false),
90004e0a:	f8a4 931c 	strh.w	r9, [r4, #796]	; 0x31c
        : color(col)
90004e0e:	f8c4 5328 	str.w	r5, [r4, #808]	; 0x328
90004e12:	f8a4 532c 	strh.w	r5, [r4, #812]	; 0x32c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004e16:	f8c4 5334 	str.w	r5, [r4, #820]	; 0x334
              text(0)
90004e1a:	f8c4 533c 	str.w	r5, [r4, #828]	; 0x33c
90004e1e:	f8c4 4384 	str.w	r4, [r4, #900]	; 0x384
90004e22:	f8c4 538c 	str.w	r5, [r4, #908]	; 0x38c
        rect.x = x;
90004e26:	6465      	str	r5, [r4, #68]	; 0x44
90004e28:	e9c4 55bc 	strd	r5, r5, [r4, #752]	; 0x2f0
        : x(0), y(0), width(0), height(0)
90004e2c:	e9c4 55bf 	strd	r5, r5, [r4, #764]	; 0x2fc
90004e30:	e9c4 55c1 	strd	r5, r5, [r4, #772]	; 0x304
          nextSibling(0),
90004e34:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
          cachedAbsX(0),
90004e38:	e9c4 55c5 	strd	r5, r5, [r4, #788]	; 0x314
90004e3c:	f00c fb64 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004e40:	2304      	movs	r3, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90004e42:	4650      	mov	r0, sl
90004e44:	4639      	mov	r1, r7
90004e46:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004e4a:	f00f fac6 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004e4e:	4650      	mov	r0, sl
90004e50:	4629      	mov	r1, r5
        rect.x = x;
90004e52:	e9c4 581c 	strd	r5, r8, [r4, #112]	; 0x70
90004e56:	f00e fa40 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004e5a:	4651      	mov	r1, sl
90004e5c:	4630      	mov	r0, r6
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90004e5e:	f504 7a19 	add.w	sl, r4, #612	; 0x264
90004e62:	f00c fb51 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004e66:	f04f 1096 	mov.w	r0, #9830550	; 0x960096
90004e6a:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
90004e6e:	f104 0198 	add.w	r1, r4, #152	; 0x98
90004e72:	f504 783e 	add.w	r8, r4, #760	; 0x2f8
90004e76:	e9c4 0327 	strd	r0, r3, [r4, #156]	; 0x9c
90004e7a:	4b68      	ldr	r3, [pc, #416]	; (9000501c <_ZN25screen_snake_gameViewBaseC1Ev+0x3a0>)
90004e7c:	4630      	mov	r0, r6
90004e7e:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
90004e82:	f00c fb41 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004e86:	4b66      	ldr	r3, [pc, #408]	; (90005020 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a4>)
    btn_snake_start.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90004e88:	a90f      	add	r1, sp, #60	; 0x3c
90004e8a:	463a      	mov	r2, r7
90004e8c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
90004e90:	2302      	movs	r3, #2
90004e92:	4658      	mov	r0, fp
90004e94:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004e98:	2303      	movs	r3, #3
90004e9a:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004e9e:	f00f f810 	bl	90013ec2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
90004ea2:	4b60      	ldr	r3, [pc, #384]	; (90005024 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a8>)
class TypedText
90004ea4:	2109      	movs	r1, #9
90004ea6:	881b      	ldrh	r3, [r3, #0]
90004ea8:	f8a4 10fc 	strh.w	r1, [r4, #252]	; 0xfc
90004eac:	428b      	cmp	r3, r1
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004eae:	4b5e      	ldr	r3, [pc, #376]	; (90005028 <_ZN25screen_snake_gameViewBaseC1Ev+0x3ac>)
90004eb0:	9307      	str	r3, [sp, #28]
90004eb2:	d925      	bls.n	90004f00 <_ZN25screen_snake_gameViewBaseC1Ev+0x284>
90004eb4:	681b      	ldr	r3, [r3, #0]
90004eb6:	2b00      	cmp	r3, #0
90004eb8:	f000 81f2 	beq.w	900052a0 <_ZN25screen_snake_gameViewBaseC1Ev+0x624>
        return fonts[typedTexts[typedTextId].fontIdx];
90004ebc:	7c9a      	ldrb	r2, [r3, #18]
90004ebe:	4b5b      	ldr	r3, [pc, #364]	; (9000502c <_ZN25screen_snake_gameViewBaseC1Ev+0x3b0>)
90004ec0:	681b      	ldr	r3, [r3, #0]
90004ec2:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90004ec6:	4b5a      	ldr	r3, [pc, #360]	; (90005030 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b4>)
90004ec8:	6818      	ldr	r0, [r3, #0]
90004eca:	f7ff fa8f 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004ece:	f8d9 2000 	ldr.w	r2, [r9]
90004ed2:	4601      	mov	r1, r0
90004ed4:	4857      	ldr	r0, [pc, #348]	; (90005034 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b8>)
90004ed6:	6b93      	ldr	r3, [r2, #56]	; 0x38
90004ed8:	4283      	cmp	r3, r0
90004eda:	f040 81d9 	bne.w	90005290 <_ZN25screen_snake_gameViewBaseC1Ev+0x614>
        return fontHeight;
90004ede:	f8b9 5004 	ldrh.w	r5, [r9, #4]
90004ee2:	6c93      	ldr	r3, [r2, #72]	; 0x48
90004ee4:	4648      	mov	r0, r9
90004ee6:	9103      	str	r1, [sp, #12]
90004ee8:	4798      	blx	r3
90004eea:	fb15 f500 	smulbb	r5, r5, r0
90004eee:	f8d9 3000 	ldr.w	r3, [r9]
90004ef2:	4648      	mov	r0, r9
90004ef4:	b2ad      	uxth	r5, r5
90004ef6:	9903      	ldr	r1, [sp, #12]
90004ef8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004efa:	4798      	blx	r3
90004efc:	4405      	add	r5, r0
90004efe:	b22d      	sxth	r5, r5
    btn_snake_start.setAction(buttonCallback);
90004f00:	f504 7360 	add.w	r3, r4, #896	; 0x380
        color = col;
90004f04:	f04f 32ff 	mov.w	r2, #4294967295
90004f08:	4659      	mov	r1, fp
90004f0a:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004f0c:	f8a4 510a 	strh.w	r5, [r4, #266]	; 0x10a
90004f10:	f04f 0901 	mov.w	r9, #1
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90004f14:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
90004f18:	2500      	movs	r5, #0
90004f1a:	9303      	str	r3, [sp, #12]
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004f1c:	f04f 0b5a 	mov.w	fp, #90	; 0x5a
        colorPressed = col;
90004f20:	e9c4 2240 	strd	r2, r2, [r4, #256]	; 0x100
90004f24:	f00c faf0 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004f28:	4943      	ldr	r1, [pc, #268]	; (90005038 <_ZN25screen_snake_gameViewBaseC1Ev+0x3bc>)
90004f2a:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
90004f2e:	4630      	mov	r0, r6
90004f30:	e9c4 1344 	strd	r1, r3, [r4, #272]	; 0x110
90004f34:	4b41      	ldr	r3, [pc, #260]	; (9000503c <_ZN25screen_snake_gameViewBaseC1Ev+0x3c0>)
90004f36:	f504 7186 	add.w	r1, r4, #268	; 0x10c
90004f3a:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
90004f3e:	f00c fae3 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004f42:	4b3f      	ldr	r3, [pc, #252]	; (90005040 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c4>)
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
90004f44:	ed9d 8a04 	vldr	s16, [sp, #16]
90004f48:	aa0f      	add	r2, sp, #60	; 0x3c
90004f4a:	9700      	str	r7, [sp, #0]
90004f4c:	a90d      	add	r1, sp, #52	; 0x34
90004f4e:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
90004f52:	230a      	movs	r3, #10
90004f54:	ee18 0a10 	vmov	r0, s16
90004f58:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004f5c:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004f60:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004f64:	4613      	mov	r3, r2
90004f66:	aa0e      	add	r2, sp, #56	; 0x38
90004f68:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004f6c:	f00f f978 	bl	90014260 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
90004f70:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004f74:	9b03      	ldr	r3, [sp, #12]
90004f76:	ee18 1a10 	vmov	r1, s16
90004f7a:	4630      	mov	r0, r6
90004f7c:	f8c4 2170 	str.w	r2, [r4, #368]	; 0x170
90004f80:	f8c4 3160 	str.w	r3, [r4, #352]	; 0x160
90004f84:	f884 b16a 	strb.w	fp, [r4, #362]	; 0x16a
90004f88:	f00c fabe 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004f8c:	4b2d      	ldr	r3, [pc, #180]	; (90005044 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c8>)
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90004f8e:	aa0f      	add	r2, sp, #60	; 0x3c
90004f90:	9700      	str	r7, [sp, #0]
90004f92:	f8c4 3178 	str.w	r3, [r4, #376]	; 0x178
90004f96:	2309      	movs	r3, #9
90004f98:	a90d      	add	r1, sp, #52	; 0x34
90004f9a:	ee18 0a90 	vmov	r0, s17
90004f9e:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004fa2:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004fa6:	4613      	mov	r3, r2
90004fa8:	aa0e      	add	r2, sp, #56	; 0x38
90004faa:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004fae:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004fb2:	f00f f955 	bl	90014260 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004fb6:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004fba:	9b03      	ldr	r3, [sp, #12]
90004fbc:	ee18 1a90 	vmov	r1, s17
90004fc0:	4630      	mov	r0, r6
90004fc2:	f8c4 21ac 	str.w	r2, [r4, #428]	; 0x1ac
90004fc6:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
90004fca:	f884 b1a6 	strb.w	fp, [r4, #422]	; 0x1a6
90004fce:	f00c fa9b 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004fd2:	4b1d      	ldr	r3, [pc, #116]	; (90005048 <_ZN25screen_snake_gameViewBaseC1Ev+0x3cc>)
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
90004fd4:	ed9d 8a05 	vldr	s16, [sp, #20]
90004fd8:	aa0f      	add	r2, sp, #60	; 0x3c
90004fda:	9700      	str	r7, [sp, #0]
90004fdc:	a90d      	add	r1, sp, #52	; 0x34
90004fde:	f8c4 31b4 	str.w	r3, [r4, #436]	; 0x1b4
90004fe2:	2307      	movs	r3, #7
90004fe4:	ee18 0a10 	vmov	r0, s16
90004fe8:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004fec:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004ff0:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004ff4:	4613      	mov	r3, r2
90004ff6:	aa0e      	add	r2, sp, #56	; 0x38
90004ff8:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004ffc:	e028      	b.n	90005050 <_ZN25screen_snake_gameViewBaseC1Ev+0x3d4>
90004ffe:	bf00      	nop
90005000:	9002c320 	.word	0x9002c320
90005004:	9002b830 	.word	0x9002b830
90005008:	9002ac2c 	.word	0x9002ac2c
9000500c:	9002c290 	.word	0x9002c290
90005010:	9002b788 	.word	0x9002b788
90005014:	9002b818 	.word	0x9002b818
90005018:	90004b0d 	.word	0x90004b0d
9000501c:	ff1eff00 	.word	0xff1eff00
90005020:	006f0078 	.word	0x006f0078
90005024:	240398f8 	.word	0x240398f8
90005028:	240398f4 	.word	0x240398f4
9000502c:	240398fc 	.word	0x240398fc
90005030:	24039900 	.word	0x24039900
90005034:	900035c5 	.word	0x900035c5
90005038:	001e0014 	.word	0x001e0014
9000503c:	ffff0000 	.word	0xffff0000
90005040:	0095018e 	.word	0x0095018e
90005044:	00b901b2 	.word	0x00b901b2
90005048:	00dd018e 	.word	0x00dd018e
9000504c:	011001e0 	.word	0x011001e0
90005050:	f00f f906 	bl	90014260 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005054:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90005058:	9b03      	ldr	r3, [sp, #12]
9000505a:	ee18 1a10 	vmov	r1, s16
9000505e:	4630      	mov	r0, r6
90005060:	f8c4 21e8 	str.w	r2, [r4, #488]	; 0x1e8
90005064:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
90005068:	f884 b1e2 	strb.w	fp, [r4, #482]	; 0x1e2
9000506c:	f00c fa4c 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005070:	4b94      	ldr	r3, [pc, #592]	; (900052c4 <_ZN25screen_snake_gameViewBaseC1Ev+0x648>)
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
90005072:	a90f      	add	r1, sp, #60	; 0x3c
90005074:	f04f 0208 	mov.w	r2, #8
90005078:	9700      	str	r7, [sp, #0]
9000507a:	ee19 0a10 	vmov	r0, s18
9000507e:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
90005082:	460b      	mov	r3, r1
90005084:	a90e      	add	r1, sp, #56	; 0x38
90005086:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
9000508a:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
9000508e:	460a      	mov	r2, r1
90005090:	a90d      	add	r1, sp, #52	; 0x34
90005092:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90005096:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
9000509a:	f00f f8e1 	bl	90014260 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
9000509e:	9b03      	ldr	r3, [sp, #12]
900050a0:	f06f 1006 	mvn.w	r0, #393222	; 0x60006
900050a4:	ee19 1a10 	vmov	r1, s18
900050a8:	f884 b21e 	strb.w	fp, [r4, #542]	; 0x21e
900050ac:	f8c4 0224 	str.w	r0, [r4, #548]	; 0x224
900050b0:	4630      	mov	r0, r6
900050b2:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
900050b6:	f00c fa27 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
900050ba:	a90f      	add	r1, sp, #60	; 0x3c
900050bc:	f04f 100c 	mov.w	r0, #786444	; 0xc000c
900050c0:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
900050c4:	460b      	mov	r3, r1
900050c6:	f8dd 9018 	ldr.w	r9, [sp, #24]
900050ca:	a90e      	add	r1, sp, #56	; 0x38
900050cc:	9700      	str	r7, [sp, #0]
900050ce:	f8c4 022c 	str.w	r0, [r4, #556]	; 0x22c
900050d2:	200b      	movs	r0, #11
900050d4:	460a      	mov	r2, r1
900050d6:	a90d      	add	r1, sp, #52	; 0x34
900050d8:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
900050dc:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
900050e0:	4648      	mov	r0, r9
900050e2:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
900050e6:	f00f f8bb 	bl	90014260 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900050ea:	f06f 1c06 	mvn.w	ip, #393222	; 0x60006
900050ee:	9b03      	ldr	r3, [sp, #12]
900050f0:	4649      	mov	r1, r9
900050f2:	4630      	mov	r0, r6
900050f4:	f8c4 c260 	str.w	ip, [r4, #608]	; 0x260
    lbl_score_val.setPosition(434, 0, 46, 24);
900050f8:	f504 792b 	add.w	r9, r4, #684	; 0x2ac
900050fc:	f8c4 3250 	str.w	r3, [r4, #592]	; 0x250
90005100:	f00c fa02 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
90005104:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
90005108:	f8a4 5298 	strh.w	r5, [r4, #664]	; 0x298
        boundingArea = calculateBoundingArea();
9000510c:	ad08      	add	r5, sp, #32
        color = newColor;
9000510e:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
90005112:	f44f 73b4 	mov.w	r3, #360	; 0x168
        boundingArea = calculateBoundingArea();
90005116:	4651      	mov	r1, sl
90005118:	4628      	mov	r0, r5
9000511a:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
9000511e:	f00e fbcb 	bl	900138b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        : typedTextId(id)
90005122:	f04f 0208 	mov.w	r2, #8
90005126:	4b68      	ldr	r3, [pc, #416]	; (900052c8 <_ZN25screen_snake_gameViewBaseC1Ev+0x64c>)
90005128:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
9000512c:	9310      	str	r3, [sp, #64]	; 0x40
9000512e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
90005132:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005136:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y8W6));
9000513a:	4639      	mov	r1, r7
9000513c:	4650      	mov	r0, sl
9000513e:	f00e fe63 	bl	90013e08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005142:	4651      	mov	r1, sl
90005144:	4630      	mov	r0, r6
        alpha = newAlpha;
90005146:	f884 b29a 	strb.w	fp, [r4, #666]	; 0x29a
9000514a:	f00c f9dd 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000514e:	f44f 72d9 	mov.w	r2, #434	; 0x1b2
        setX(x);
90005152:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
        setY(y);
90005156:	495d      	ldr	r1, [pc, #372]	; (900052cc <_ZN25screen_snake_gameViewBaseC1Ev+0x650>)
        rect.x = x;
90005158:	f8c4 22b0 	str.w	r2, [r4, #688]	; 0x2b0
        setWidth(width);
9000515c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000515e:	428a      	cmp	r2, r1
90005160:	f040 8092 	bne.w	90005288 <_ZN25screen_snake_gameViewBaseC1Ev+0x60c>
        rect.width = width;
90005164:	222e      	movs	r2, #46	; 0x2e
        boundingArea = calculateBoundingArea();
90005166:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9000516a:	4649      	mov	r1, r9
9000516c:	4628      	mov	r0, r5
9000516e:	f8a4 22b4 	strh.w	r2, [r4, #692]	; 0x2b4
90005172:	4798      	blx	r3
90005174:	f504 733a 	add.w	r3, r4, #744	; 0x2e8
90005178:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000517c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
90005180:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
90005184:	4952      	ldr	r1, [pc, #328]	; (900052d0 <_ZN25screen_snake_gameViewBaseC1Ev+0x654>)
90005186:	6bda      	ldr	r2, [r3, #60]	; 0x3c
90005188:	428a      	cmp	r2, r1
9000518a:	d16f      	bne.n	9000526c <_ZN25screen_snake_gameViewBaseC1Ev+0x5f0>
        rect.height = height;
9000518c:	2218      	movs	r2, #24
        boundingArea = calculateBoundingArea();
9000518e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90005192:	4649      	mov	r1, r9
90005194:	4628      	mov	r0, r5
90005196:	f8a4 22b6 	strh.w	r2, [r4, #694]	; 0x2b6
9000519a:	4798      	blx	r3
9000519c:	f109 033c 	add.w	r3, r9, #60	; 0x3c
900051a0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900051a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
900051a8:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
        color = newColor;
900051ac:	f04f 31ff 	mov.w	r1, #4294967295
900051b0:	4848      	ldr	r0, [pc, #288]	; (900052d4 <_ZN25screen_snake_gameViewBaseC1Ev+0x658>)
        boundingArea = calculateBoundingArea();
900051b2:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
        linespace = space;
900051b6:	2300      	movs	r3, #0
        color = newColor;
900051b8:	f8c4 12dc 	str.w	r1, [r4, #732]	; 0x2dc
        linespace = space;
900051bc:	4282      	cmp	r2, r0
900051be:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
        boundingArea = calculateBoundingArea();
900051c2:	d157      	bne.n	90005274 <_ZN25screen_snake_gameViewBaseC1Ev+0x5f8>
900051c4:	f8c4 32f0 	str.w	r3, [r4, #752]	; 0x2f0
900051c8:	e9c4 31ba 	strd	r3, r1, [r4, #744]	; 0x2e8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900051cc:	9b07      	ldr	r3, [sp, #28]
    Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8AZ9).getText());
900051ce:	f504 7a50 	add.w	sl, r4, #832	; 0x340
900051d2:	681b      	ldr	r3, [r3, #0]
900051d4:	2b00      	cmp	r3, #0
900051d6:	d069      	beq.n	900052ac <_ZN25screen_snake_gameViewBaseC1Ev+0x630>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900051d8:	4b3f      	ldr	r3, [pc, #252]	; (900052d8 <_ZN25screen_snake_gameViewBaseC1Ev+0x65c>)
900051da:	881b      	ldrh	r3, [r3, #0]
900051dc:	2b06      	cmp	r3, #6
900051de:	d96b      	bls.n	900052b8 <_ZN25screen_snake_gameViewBaseC1Ev+0x63c>
        return texts->getText(typedTextId);
900051e0:	4b3e      	ldr	r3, [pc, #248]	; (900052dc <_ZN25screen_snake_gameViewBaseC1Ev+0x660>)
900051e2:	2106      	movs	r1, #6
900051e4:	6818      	ldr	r0, [r3, #0]
900051e6:	f7ff f901 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
900051ea:	4a3d      	ldr	r2, [pc, #244]	; (900052e0 <_ZN25screen_snake_gameViewBaseC1Ev+0x664>)
900051ec:	4603      	mov	r3, r0
900051ee:	2120      	movs	r1, #32
900051f0:	4650      	mov	r0, sl
900051f2:	f014 fed1 	bl	90019f98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
900051f6:	4b34      	ldr	r3, [pc, #208]	; (900052c8 <_ZN25screen_snake_gameViewBaseC1Ev+0x64c>)
    lbl_score_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G1O3));
900051f8:	4639      	mov	r1, r7
900051fa:	4648      	mov	r0, r9
900051fc:	9310      	str	r3, [sp, #64]	; 0x40
900051fe:	2307      	movs	r3, #7
        wc1 = value;
90005200:	f8c4 a2f4 	str.w	sl, [r4, #756]	; 0x2f4
90005204:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90005208:	f00e fdfe 	bl	90013e08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
9000520c:	235a      	movs	r3, #90	; 0x5a
9000520e:	4649      	mov	r1, r9
90005210:	4630      	mov	r0, r6
        linespace = space;
90005212:	f04f 0900 	mov.w	r9, #0
        alpha = newAlpha;
90005216:	f884 32e2 	strb.w	r3, [r4, #738]	; 0x2e2
9000521a:	f00c f975 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
9000521e:	4b31      	ldr	r3, [pc, #196]	; (900052e4 <_ZN25screen_snake_gameViewBaseC1Ev+0x668>)
        boundingArea = calculateBoundingArea();
90005220:	4641      	mov	r1, r8
90005222:	4628      	mov	r0, r5
90005224:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
        color = newColor;
90005228:	4b2f      	ldr	r3, [pc, #188]	; (900052e8 <_ZN25screen_snake_gameViewBaseC1Ev+0x66c>)
        linespace = space;
9000522a:	f8a4 932c 	strh.w	r9, [r4, #812]	; 0x32c
        color = newColor;
9000522e:	f8c4 3328 	str.w	r3, [r4, #808]	; 0x328
        boundingArea = calculateBoundingArea();
90005232:	f00e fb41 	bl	900138b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005236:	4b24      	ldr	r3, [pc, #144]	; (900052c8 <_ZN25screen_snake_gameViewBaseC1Ev+0x64c>)
90005238:	2205      	movs	r2, #5
9000523a:	9310      	str	r3, [sp, #64]	; 0x40
9000523c:	f108 033c 	add.w	r3, r8, #60	; 0x3c
90005240:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
90005244:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005248:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6BFI));
9000524c:	4639      	mov	r1, r7
9000524e:	4640      	mov	r0, r8
90005250:	f00e fdda 	bl	90013e08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005254:	4630      	mov	r0, r6
90005256:	4641      	mov	r1, r8
        visible = vis;
90005258:	f884 931d 	strb.w	r9, [r4, #797]	; 0x31d
9000525c:	f00c f954 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005260:	4620      	mov	r0, r4
90005262:	b013      	add	sp, #76	; 0x4c
90005264:	ecbd 8b04 	vpop	{d8-d9}
90005268:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        setHeight(height);
9000526c:	2118      	movs	r1, #24
9000526e:	4648      	mov	r0, r9
90005270:	4790      	blx	r2
90005272:	e799      	b.n	900051a8 <_ZN25screen_snake_gameViewBaseC1Ev+0x52c>
90005274:	4649      	mov	r1, r9
90005276:	4628      	mov	r0, r5
90005278:	4790      	blx	r2
9000527a:	f109 033c 	add.w	r3, r9, #60	; 0x3c
9000527e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005282:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90005286:	e7a1      	b.n	900051cc <_ZN25screen_snake_gameViewBaseC1Ev+0x550>
        setWidth(width);
90005288:	212e      	movs	r1, #46	; 0x2e
9000528a:	4648      	mov	r0, r9
9000528c:	4790      	blx	r2
9000528e:	e777      	b.n	90005180 <_ZN25screen_snake_gameViewBaseC1Ev+0x504>
90005290:	9103      	str	r1, [sp, #12]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005292:	4648      	mov	r0, r9
90005294:	4798      	blx	r3
90005296:	f8d9 2000 	ldr.w	r2, [r9]
9000529a:	4605      	mov	r5, r0
9000529c:	9903      	ldr	r1, [sp, #12]
9000529e:	e620      	b.n	90004ee2 <_ZN25screen_snake_gameViewBaseC1Ev+0x266>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900052a0:	4b12      	ldr	r3, [pc, #72]	; (900052ec <_ZN25screen_snake_gameViewBaseC1Ev+0x670>)
900052a2:	216c      	movs	r1, #108	; 0x6c
900052a4:	4a12      	ldr	r2, [pc, #72]	; (900052f0 <_ZN25screen_snake_gameViewBaseC1Ev+0x674>)
900052a6:	4813      	ldr	r0, [pc, #76]	; (900052f4 <_ZN25screen_snake_gameViewBaseC1Ev+0x678>)
900052a8:	f022 fef2 	bl	90028090 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900052ac:	4b0f      	ldr	r3, [pc, #60]	; (900052ec <_ZN25screen_snake_gameViewBaseC1Ev+0x670>)
900052ae:	2160      	movs	r1, #96	; 0x60
900052b0:	4a11      	ldr	r2, [pc, #68]	; (900052f8 <_ZN25screen_snake_gameViewBaseC1Ev+0x67c>)
900052b2:	4810      	ldr	r0, [pc, #64]	; (900052f4 <_ZN25screen_snake_gameViewBaseC1Ev+0x678>)
900052b4:	f022 feec 	bl	90028090 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900052b8:	4b10      	ldr	r3, [pc, #64]	; (900052fc <_ZN25screen_snake_gameViewBaseC1Ev+0x680>)
900052ba:	2161      	movs	r1, #97	; 0x61
900052bc:	4a0e      	ldr	r2, [pc, #56]	; (900052f8 <_ZN25screen_snake_gameViewBaseC1Ev+0x67c>)
900052be:	480d      	ldr	r0, [pc, #52]	; (900052f4 <_ZN25screen_snake_gameViewBaseC1Ev+0x678>)
900052c0:	f022 fee6 	bl	90028090 <__assert_func>
900052c4:	00b9016a 	.word	0x00b9016a
900052c8:	9002ac2c 	.word	0x9002ac2c
900052cc:	90004959 	.word	0x90004959
900052d0:	90004981 	.word	0x90004981
900052d4:	900049cd 	.word	0x900049cd
900052d8:	240398f8 	.word	0x240398f8
900052dc:	24039900 	.word	0x24039900
900052e0:	9002b77c 	.word	0x9002b77c
900052e4:	00700076 	.word	0x00700076
900052e8:	ffff0000 	.word	0xffff0000
900052ec:	9002b63c 	.word	0x9002b63c
900052f0:	9002b680 	.word	0x9002b680
900052f4:	9002b6bc 	.word	0x9002b6bc
900052f8:	9002b744 	.word	0x9002b744
900052fc:	9002b704 	.word	0x9002b704

90005300 <_ZN29screen_tictactoe_gameViewBase12pos1_clickedEv>:
     * Virtual Action Handlers
     */
    virtual void pos1_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005300:	4770      	bx	lr
90005302:	bf00      	nop

90005304 <_ZN29screen_tictactoe_gameViewBase12pos2_clickedEv>:
    virtual void pos2_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005304:	4770      	bx	lr
90005306:	bf00      	nop

90005308 <_ZN29screen_tictactoe_gameViewBase12pos3_clickedEv>:
    virtual void pos3_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005308:	4770      	bx	lr
9000530a:	bf00      	nop

9000530c <_ZN29screen_tictactoe_gameViewBase12pos4_clickedEv>:
    virtual void pos4_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
9000530c:	4770      	bx	lr
9000530e:	bf00      	nop

90005310 <_ZN29screen_tictactoe_gameViewBase12pos5_clickedEv>:
    virtual void pos5_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005310:	4770      	bx	lr
90005312:	bf00      	nop

90005314 <_ZN29screen_tictactoe_gameViewBase12pos6_clickedEv>:
    virtual void pos6_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005314:	4770      	bx	lr
90005316:	bf00      	nop

90005318 <_ZN29screen_tictactoe_gameViewBase12pos7_clickedEv>:
    virtual void pos7_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005318:	4770      	bx	lr
9000531a:	bf00      	nop

9000531c <_ZN29screen_tictactoe_gameViewBase12pos8_clickedEv>:
    virtual void pos8_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
9000531c:	4770      	bx	lr
9000531e:	bf00      	nop

90005320 <_ZN29screen_tictactoe_gameViewBase12pos9_clickedEv>:
    virtual void pos9_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005320:	4770      	bx	lr
90005322:	bf00      	nop

90005324 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>:
}

void screen_tictactoe_gameViewBase::setupScreen()
{

}
90005324:	4770      	bx	lr
90005326:	bf00      	nop

90005328 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005328:	4770      	bx	lr
9000532a:	bf00      	nop

9000532c <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
9000532c:	4770      	bx	lr
9000532e:	bf00      	nop

90005330 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005330:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005332:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90005334:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90005336:	6844      	ldr	r4, [r0, #4]
90005338:	f012 0f01 	tst.w	r2, #1
9000533c:	eb04 0062 	add.w	r0, r4, r2, asr #1
90005340:	d103      	bne.n	9000534a <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
90005342:	689b      	ldr	r3, [r3, #8]
    }
90005344:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005348:	4718      	bx	r3
9000534a:	ea4f 0c62 	mov.w	ip, r2, asr #1
9000534e:	689b      	ldr	r3, [r3, #8]
90005350:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90005354:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005358:	58d3      	ldr	r3, [r2, r3]
9000535a:	4718      	bx	r3

9000535c <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
9000535c:	6843      	ldr	r3, [r0, #4]
9000535e:	b13b      	cbz	r3, 90005370 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90005360:	6883      	ldr	r3, [r0, #8]
90005362:	b10b      	cbz	r3, 90005368 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005364:	2001      	movs	r0, #1
    }
90005366:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005368:	68c0      	ldr	r0, [r0, #12]
9000536a:	f000 0001 	and.w	r0, r0, #1
9000536e:	4770      	bx	lr
90005370:	4618      	mov	r0, r3
90005372:	4770      	bx	lr

90005374 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005374:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005376:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90005378:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
9000537a:	6844      	ldr	r4, [r0, #4]
9000537c:	f012 0f01 	tst.w	r2, #1
90005380:	eb04 0062 	add.w	r0, r4, r2, asr #1
90005384:	d103      	bne.n	9000538e <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90005386:	689b      	ldr	r3, [r3, #8]
    }
90005388:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
9000538c:	4718      	bx	r3
9000538e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90005392:	689b      	ldr	r3, [r3, #8]
90005394:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90005398:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
9000539c:	58d3      	ldr	r3, [r2, r3]
9000539e:	4718      	bx	r3

900053a0 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900053a0:	6843      	ldr	r3, [r0, #4]
900053a2:	b13b      	cbz	r3, 900053b4 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
900053a4:	6883      	ldr	r3, [r0, #8]
900053a6:	b10b      	cbz	r3, 900053ac <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
900053a8:	2001      	movs	r0, #1
    }
900053aa:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900053ac:	68c0      	ldr	r0, [r0, #12]
900053ae:	f000 0001 	and.w	r0, r0, #1
900053b2:	4770      	bx	lr
900053b4:	4618      	mov	r0, r3
900053b6:	4770      	bx	lr

900053b8 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900053b8:	b510      	push	{r4, lr}
900053ba:	4604      	mov	r4, r0
900053bc:	2110      	movs	r1, #16
900053be:	f022 fe39 	bl	90028034 <_ZdlPvj>
900053c2:	4620      	mov	r0, r4
900053c4:	bd10      	pop	{r4, pc}
900053c6:	bf00      	nop

900053c8 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
900053c8:	b510      	push	{r4, lr}
900053ca:	4604      	mov	r4, r0
900053cc:	2110      	movs	r1, #16
900053ce:	f022 fe31 	bl	90028034 <_ZdlPvj>
900053d2:	4620      	mov	r0, r4
900053d4:	bd10      	pop	{r4, pc}
900053d6:	bf00      	nop

900053d8 <_ZN29screen_tictactoe_gameViewBaseD1Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
900053d8:	4b03      	ldr	r3, [pc, #12]	; (900053e8 <_ZN29screen_tictactoe_gameViewBaseD1Ev+0x10>)
900053da:	b510      	push	{r4, lr}
900053dc:	4604      	mov	r4, r0
900053de:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
900053e0:	f00f ffe8 	bl	900153b4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
900053e4:	4620      	mov	r0, r4
900053e6:	bd10      	pop	{r4, pc}
900053e8:	9002b9a8 	.word	0x9002b9a8

900053ec <_ZN29screen_tictactoe_gameViewBaseD0Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
900053ec:	4b07      	ldr	r3, [pc, #28]	; (9000540c <_ZN29screen_tictactoe_gameViewBaseD0Ev+0x20>)
900053ee:	b500      	push	{lr}
900053f0:	b083      	sub	sp, #12
900053f2:	6003      	str	r3, [r0, #0]
900053f4:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
900053f6:	f00f ffdd 	bl	900153b4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
900053fa:	9801      	ldr	r0, [sp, #4]
900053fc:	f242 71bc 	movw	r1, #10172	; 0x27bc
90005400:	f022 fe18 	bl	90028034 <_ZdlPvj>
90005404:	9801      	ldr	r0, [sp, #4]
90005406:	b003      	add	sp, #12
90005408:	f85d fb04 	ldr.w	pc, [sp], #4
9000540c:	9002b9a8 	.word	0x9002b9a8

90005410 <_ZN29screen_tictactoe_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    }
}

void screen_tictactoe_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_back)
90005410:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
90005414:	4288      	cmp	r0, r1
90005416:	d000      	beq.n	9000541a <_ZN29screen_tictactoe_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa>
90005418:	4770      	bx	lr
{
9000541a:	b508      	push	{r3, lr}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
9000541c:	f011 fccc 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
        //intr_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
90005420:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoscreen_main_menuScreenNoTransition();
90005424:	f7fe bdc8 	b.w	90003fb8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>

90005428 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    if (&src == &btn_pos1)
90005428:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
9000542c:	4299      	cmp	r1, r3
{
9000542e:	b570      	push	{r4, r5, r6, lr}
90005430:	4604      	mov	r4, r0
90005432:	460d      	mov	r5, r1
    if (&src == &btn_pos1)
90005434:	d061      	beq.n	900054fa <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xd2>
    if (&src == &btn_pos2)
90005436:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
9000543a:	429d      	cmp	r5, r3
9000543c:	d055      	beq.n	900054ea <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc2>
    if (&src == &btn_pos3)
9000543e:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
90005442:	429d      	cmp	r5, r3
90005444:	d049      	beq.n	900054da <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xb2>
    if (&src == &btn_pos4)
90005446:	f504 7348 	add.w	r3, r4, #800	; 0x320
9000544a:	429d      	cmp	r5, r3
9000544c:	d03d      	beq.n	900054ca <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa2>
    if (&src == &btn_pos5)
9000544e:	f504 6382 	add.w	r3, r4, #1040	; 0x410
90005452:	429d      	cmp	r5, r3
90005454:	d031      	beq.n	900054ba <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    if (&src == &btn_pos6)
90005456:	f504 7366 	add.w	r3, r4, #920	; 0x398
9000545a:	429d      	cmp	r5, r3
9000545c:	d025      	beq.n	900054aa <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x82>
    if (&src == &btn_pos7)
9000545e:	f504 6391 	add.w	r3, r4, #1160	; 0x488
90005462:	429d      	cmp	r5, r3
90005464:	d019      	beq.n	9000549a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x72>
    if (&src == &btn_pos8)
90005466:	f504 63af 	add.w	r3, r4, #1400	; 0x578
9000546a:	429d      	cmp	r5, r3
9000546c:	d00d      	beq.n	9000548a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x62>
    if (&src == &btn_pos9)
9000546e:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
90005472:	429d      	cmp	r5, r3
90005474:	d000      	beq.n	90005478 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x50>
}
90005476:	bd70      	pop	{r4, r5, r6, pc}
        pos9_clicked();
90005478:	6823      	ldr	r3, [r4, #0]
9000547a:	4a23      	ldr	r2, [pc, #140]	; (90005508 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe0>)
9000547c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9000547e:	4293      	cmp	r3, r2
90005480:	d0f9      	beq.n	90005476 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4e>
90005482:	4620      	mov	r0, r4
}
90005484:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pos9_clicked();
90005488:	4718      	bx	r3
        pos8_clicked();
9000548a:	6823      	ldr	r3, [r4, #0]
9000548c:	4a1f      	ldr	r2, [pc, #124]	; (9000550c <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe4>)
9000548e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90005490:	4293      	cmp	r3, r2
90005492:	d0ec      	beq.n	9000546e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
90005494:	4620      	mov	r0, r4
90005496:	4798      	blx	r3
90005498:	e7e9      	b.n	9000546e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
        pos7_clicked();
9000549a:	6823      	ldr	r3, [r4, #0]
9000549c:	4a1c      	ldr	r2, [pc, #112]	; (90005510 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe8>)
9000549e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900054a0:	4293      	cmp	r3, r2
900054a2:	d0e0      	beq.n	90005466 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
900054a4:	4620      	mov	r0, r4
900054a6:	4798      	blx	r3
900054a8:	e7dd      	b.n	90005466 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
        pos6_clicked();
900054aa:	6823      	ldr	r3, [r4, #0]
900054ac:	4a19      	ldr	r2, [pc, #100]	; (90005514 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xec>)
900054ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900054b0:	4293      	cmp	r3, r2
900054b2:	d0d4      	beq.n	9000545e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
900054b4:	4620      	mov	r0, r4
900054b6:	4798      	blx	r3
900054b8:	e7d1      	b.n	9000545e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
        pos5_clicked();
900054ba:	6823      	ldr	r3, [r4, #0]
900054bc:	4a16      	ldr	r2, [pc, #88]	; (90005518 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf0>)
900054be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900054c0:	4293      	cmp	r3, r2
900054c2:	d0c8      	beq.n	90005456 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
900054c4:	4620      	mov	r0, r4
900054c6:	4798      	blx	r3
900054c8:	e7c5      	b.n	90005456 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
        pos4_clicked();
900054ca:	6823      	ldr	r3, [r4, #0]
900054cc:	4a13      	ldr	r2, [pc, #76]	; (9000551c <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf4>)
900054ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900054d0:	4293      	cmp	r3, r2
900054d2:	d0bc      	beq.n	9000544e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
900054d4:	4620      	mov	r0, r4
900054d6:	4798      	blx	r3
900054d8:	e7b9      	b.n	9000544e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
        pos3_clicked();
900054da:	6823      	ldr	r3, [r4, #0]
900054dc:	4a10      	ldr	r2, [pc, #64]	; (90005520 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf8>)
900054de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900054e0:	4293      	cmp	r3, r2
900054e2:	d0b0      	beq.n	90005446 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
900054e4:	4620      	mov	r0, r4
900054e6:	4798      	blx	r3
900054e8:	e7ad      	b.n	90005446 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
        pos2_clicked();
900054ea:	6823      	ldr	r3, [r4, #0]
900054ec:	4a0d      	ldr	r2, [pc, #52]	; (90005524 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xfc>)
900054ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900054f0:	4293      	cmp	r3, r2
900054f2:	d0a4      	beq.n	9000543e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
900054f4:	4620      	mov	r0, r4
900054f6:	4798      	blx	r3
900054f8:	e7a1      	b.n	9000543e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
        pos1_clicked();
900054fa:	6803      	ldr	r3, [r0, #0]
900054fc:	4a0a      	ldr	r2, [pc, #40]	; (90005528 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x100>)
900054fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90005500:	4293      	cmp	r3, r2
90005502:	d098      	beq.n	90005436 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
90005504:	4798      	blx	r3
90005506:	e796      	b.n	90005436 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
90005508:	90005321 	.word	0x90005321
9000550c:	9000531d 	.word	0x9000531d
90005510:	90005319 	.word	0x90005319
90005514:	90005315 	.word	0x90005315
90005518:	90005311 	.word	0x90005311
9000551c:	9000530d 	.word	0x9000530d
90005520:	90005309 	.word	0x90005309
90005524:	90005305 	.word	0x90005305
90005528:	90005301 	.word	0x90005301

9000552c <_ZN29screen_tictactoe_gameViewBaseC1Ev>:
screen_tictactoe_gameViewBase::screen_tictactoe_gameViewBase() :
9000552c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005530:	ed2d 8b08 	vpush	{d8-d11}
90005534:	b0a9      	sub	sp, #164	; 0xa4
90005536:	4604      	mov	r4, r0
90005538:	f013 f876 	bl	90018628 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
9000553c:	f44f 7380 	mov.w	r3, #256	; 0x100
    buttonCallback(this, &screen_tictactoe_gameViewBase::buttonCallbackHandler)
90005540:	4a2a      	ldr	r2, [pc, #168]	; (900055ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc0>)
90005542:	2500      	movs	r5, #0
90005544:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
        : Widget(), alpha(255), color(0)
90005548:	23ff      	movs	r3, #255	; 0xff
9000554a:	4929      	ldr	r1, [pc, #164]	; (900055f0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc4>)
9000554c:	f104 0698 	add.w	r6, r4, #152	; 0x98
90005550:	6022      	str	r2, [r4, #0]
90005552:	f104 026c 	add.w	r2, r4, #108	; 0x6c
90005556:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
9000555a:	f64f 73ff 	movw	r3, #65535	; 0xffff
9000555e:	4610      	mov	r0, r2
90005560:	6421      	str	r1, [r4, #64]	; 0x40
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005562:	4f24      	ldr	r7, [pc, #144]	; (900055f4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc8>)
90005564:	a926      	add	r1, sp, #152	; 0x98
90005566:	63e5      	str	r5, [r4, #60]	; 0x3c
90005568:	ee0a 2a90 	vmov	s21, r2
9000556c:	6465      	str	r5, [r4, #68]	; 0x44
9000556e:	ee08 6a10 	vmov	s16, r6
          cachedAbsX(0),
90005572:	6625      	str	r5, [r4, #96]	; 0x60
        : color(col)
90005574:	66a5      	str	r5, [r4, #104]	; 0x68
90005576:	f8ad 3098 	strh.w	r3, [sp, #152]	; 0x98
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
9000557a:	f8df 808c 	ldr.w	r8, [pc, #140]	; 90005608 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdc>
        : x(0), y(0), width(0), height(0)
9000557e:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
90005582:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
90005586:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
9000558a:	f00d feeb 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000558e:	4630      	mov	r0, r6
90005590:	f00d fc12 	bl	90012db8 <_ZN8touchgfx4LineC1Ev>
90005594:	683b      	ldr	r3, [r7, #0]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90005596:	f504 7184 	add.w	r1, r4, #264	; 0x108
        : widgetWidth(0)
9000559a:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
9000559e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900055a2:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
900055a6:	911a      	str	r1, [sp, #104]	; 0x68
900055a8:	2a00      	cmp	r2, #0
900055aa:	d02f      	beq.n	9000560c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe0>
900055ac:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900055ae:	2800      	cmp	r0, #0
900055b0:	f001 825d 	beq.w	90006a6e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1542>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
900055b4:	6803      	ldr	r3, [r0, #0]
900055b6:	4d10      	ldr	r5, [pc, #64]	; (900055f8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcc>)
900055b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900055ba:	42aa      	cmp	r2, r5
900055bc:	d033      	beq.n	90005626 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900055be:	4790      	blx	r2
        return auxiliaryLCD;
900055c0:	683b      	ldr	r3, [r7, #0]
900055c2:	fab0 f680 	clz	r6, r0
900055c6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900055c8:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900055ca:	b140      	cbz	r0, 900055de <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb2>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900055cc:	6803      	ldr	r3, [r0, #0]
900055ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900055d0:	42ab      	cmp	r3, r5
900055d2:	d028      	beq.n	90005626 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900055d4:	4798      	blx	r3
900055d6:	2800      	cmp	r0, #0
900055d8:	bf08      	it	eq
900055da:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900055de:	bb16      	cbnz	r6, 90005626 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900055e0:	4b06      	ldr	r3, [pc, #24]	; (900055fc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd0>)
900055e2:	212c      	movs	r1, #44	; 0x2c
900055e4:	4a06      	ldr	r2, [pc, #24]	; (90005600 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd4>)
900055e6:	4807      	ldr	r0, [pc, #28]	; (90005604 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd8>)
900055e8:	f022 fd52 	bl	90028090 <__assert_func>
900055ec:	9002b9a8 	.word	0x9002b9a8
900055f0:	9002c320 	.word	0x9002c320
900055f4:	2403989c 	.word	0x2403989c
900055f8:	90002331 	.word	0x90002331
900055fc:	9002b870 	.word	0x9002b870
90005600:	9002b8d0 	.word	0x9002b8d0
90005604:	9002b90c 	.word	0x9002b90c
90005608:	9002aa14 	.word	0x9002aa14
        return instance->lcdRef;
9000560c:	6898      	ldr	r0, [r3, #8]
9000560e:	4de1      	ldr	r5, [pc, #900]	; (90005994 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x468>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90005610:	6802      	ldr	r2, [r0, #0]
90005612:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90005614:	42aa      	cmp	r2, r5
90005616:	d1d2      	bne.n	900055be <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
        return auxiliaryLCD;
90005618:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000561a:	b120      	cbz	r0, 90005626 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
        bool compat = HAL::lcd().framebufferFormat() == format;
9000561c:	6803      	ldr	r3, [r0, #0]
9000561e:	2601      	movs	r6, #1
90005620:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90005622:	42ab      	cmp	r3, r5
90005624:	d1d6      	bne.n	900055d4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa8>
90005626:	4edc      	ldr	r6, [pc, #880]	; (90005998 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x46c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90005628:	f04f 0b00 	mov.w	fp, #0
9000562c:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
90005630:	f504 708e 	add.w	r0, r4, #284	; 0x11c
90005634:	f106 0924 	add.w	r9, r6, #36	; 0x24
90005638:	f8c4 6108 	str.w	r6, [r4, #264]	; 0x108
9000563c:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
90005640:	ee08 0a90 	vmov	s17, r0
90005644:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
90005648:	931c      	str	r3, [sp, #112]	; 0x70
9000564a:	f00d fbb5 	bl	90012db8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000564e:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
90005650:	f8a4 b190 	strh.w	fp, [r4, #400]	; 0x190
90005654:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
        : AbstractPainter()
90005658:	f8c4 818c 	str.w	r8, [r4, #396]	; 0x18c
9000565c:	2a00      	cmp	r2, #0
9000565e:	f001 820f 	beq.w	90006a80 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1554>
90005662:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90005664:	b900      	cbnz	r0, 90005668 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x13c>
        return instance->lcdRef;
90005666:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90005668:	6803      	ldr	r3, [r0, #0]
9000566a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000566c:	42aa      	cmp	r2, r5
9000566e:	f041 8277 	bne.w	90006b60 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1634>
90005672:	f04f 0b00 	mov.w	fp, #0
90005676:	f504 7304 	add.w	r3, r4, #528	; 0x210
9000567a:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
9000567e:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
90005682:	f8c4 9194 	str.w	r9, [r4, #404]	; 0x194
90005686:	f8c4 b198 	str.w	fp, [r4, #408]	; 0x198
9000568a:	ee09 0a10 	vmov	s18, r0
9000568e:	931b      	str	r3, [sp, #108]	; 0x6c
90005690:	f00d fb92 	bl	90012db8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005694:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
90005696:	f8a4 b214 	strh.w	fp, [r4, #532]	; 0x214
9000569a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000569e:	f8c4 8210 	str.w	r8, [r4, #528]	; 0x210
900056a2:	2a00      	cmp	r2, #0
900056a4:	f001 8207 	beq.w	90006ab6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x158a>
900056a8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900056aa:	b900      	cbnz	r0, 900056ae <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x182>
        return instance->lcdRef;
900056ac:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900056ae:	6803      	ldr	r3, [r0, #0]
900056b0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900056b2:	42aa      	cmp	r2, r5
900056b4:	f041 826b 	bne.w	90006b8e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1662>
900056b8:	f04f 0b00 	mov.w	fp, #0
900056bc:	f504 7325 	add.w	r3, r4, #660	; 0x294
900056c0:	f504 7009 	add.w	r0, r4, #548	; 0x224
900056c4:	f8c4 6210 	str.w	r6, [r4, #528]	; 0x210
900056c8:	f8c4 9218 	str.w	r9, [r4, #536]	; 0x218
900056cc:	f8c4 b21c 	str.w	fp, [r4, #540]	; 0x21c
900056d0:	ee09 0a90 	vmov	s19, r0
900056d4:	931d      	str	r3, [sp, #116]	; 0x74
900056d6:	f00d fb6f 	bl	90012db8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900056da:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
900056dc:	f8a4 b298 	strh.w	fp, [r4, #664]	; 0x298
900056e0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900056e4:	f8c4 8294 	str.w	r8, [r4, #660]	; 0x294
900056e8:	2a00      	cmp	r2, #0
900056ea:	f001 81ff 	beq.w	90006aec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15c0>
900056ee:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900056f0:	b900      	cbnz	r0, 900056f4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1c8>
        return instance->lcdRef;
900056f2:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900056f4:	6803      	ldr	r3, [r0, #0]
900056f6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900056f8:	42aa      	cmp	r2, r5
900056fa:	f041 823d 	bne.w	90006b78 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x164c>
          touchable(false),
900056fe:	f44f 7580 	mov.w	r5, #256	; 0x100
90005702:	f04f 3aff 	mov.w	sl, #4294967295
        : pressed(false), alpha(255), action(0)
90005706:	f44f 4b7f 	mov.w	fp, #65280	; 0xff00
        : T(), up(), down()
9000570a:	f8df 8294 	ldr.w	r8, [pc, #660]	; 900059a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x474>
        : Box(), borderColor(0), borderSize(0)
9000570e:	4fa3      	ldr	r7, [pc, #652]	; (9000599c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x470>)
90005710:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
90005714:	f8c4 6294 	str.w	r6, [r4, #660]	; 0x294
90005718:	2600      	movs	r6, #0
9000571a:	f8c4 929c 	str.w	r9, [r4, #668]	; 0x29c
        touchable = touch;
9000571e:	f240 1901 	movw	r9, #257	; 0x101
90005722:	f504 7248 	add.w	r2, r4, #800	; 0x320
        T::add(borderBox);
90005726:	4618      	mov	r0, r3
90005728:	f504 7137 	add.w	r1, r4, #732	; 0x2dc
9000572c:	f8c4 62a0 	str.w	r6, [r4, #672]	; 0x2a0
90005730:	f8c4 62d0 	str.w	r6, [r4, #720]	; 0x2d0
90005734:	ee0a 3a10 	vmov	s20, r3
90005738:	f8c4 62d8 	str.w	r6, [r4, #728]	; 0x2d8
9000573c:	f8a4 630c 	strh.w	r6, [r4, #780]	; 0x30c
          touchable(false),
90005740:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
90005744:	f884 a302 	strb.w	sl, [r4, #770]	; 0x302
90005748:	f8a4 b2d4 	strh.w	fp, [r4, #724]	; 0x2d4
        touchable = touch;
9000574c:	f8a4 92cc 	strh.w	r9, [r4, #716]	; 0x2cc
        : T(), up(), down()
90005750:	f8c4 82a8 	str.w	r8, [r4, #680]	; 0x2a8
90005754:	f8c4 72dc 	str.w	r7, [r4, #732]	; 0x2dc
90005758:	e9c4 66ab 	strd	r6, r6, [r4, #684]	; 0x2ac
9000575c:	e9c4 66ad 	strd	r6, r6, [r4, #692]	; 0x2b4
          nextSibling(0),
90005760:	e9c4 66af 	strd	r6, r6, [r4, #700]	; 0x2bc
          cachedAbsX(0),
90005764:	e9c4 66b1 	strd	r6, r6, [r4, #708]	; 0x2c4
          nextSibling(0),
90005768:	e9c4 66bc 	strd	r6, r6, [r4, #752]	; 0x2f0
          cachedAbsX(0),
9000576c:	e9c4 66be 	strd	r6, r6, [r4, #760]	; 0x2f8
        : color(col)
90005770:	e9c4 66c1 	strd	r6, r6, [r4, #772]	; 0x304
        : color(0)
90005774:	e9c4 66c4 	strd	r6, r6, [r4, #784]	; 0x310
90005778:	e9c4 66c6 	strd	r6, r6, [r4, #792]	; 0x318
        rect.x = x;
9000577c:	e9c4 66b8 	strd	r6, r6, [r4, #736]	; 0x2e0
90005780:	e9c4 66ba 	strd	r6, r6, [r4, #744]	; 0x2e8
90005784:	9202      	str	r2, [sp, #8]
        T::add(borderBox);
90005786:	f00b febf 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000578a:	f504 7366 	add.w	r3, r4, #920	; 0x398
9000578e:	f504 7155 	add.w	r1, r4, #852	; 0x354
90005792:	f8c4 6348 	str.w	r6, [r4, #840]	; 0x348
90005796:	9303      	str	r3, [sp, #12]
90005798:	f8a4 b34c 	strh.w	fp, [r4, #844]	; 0x34c
9000579c:	f8c4 6350 	str.w	r6, [r4, #848]	; 0x350
        touchable = touch;
900057a0:	f8a4 9344 	strh.w	r9, [r4, #836]	; 0x344
        : T(), up(), down()
900057a4:	f8c4 8320 	str.w	r8, [r4, #800]	; 0x320
          touchable(false),
900057a8:	f8a4 5378 	strh.w	r5, [r4, #888]	; 0x378
900057ac:	f884 a37a 	strb.w	sl, [r4, #890]	; 0x37a
        : color(col)
900057b0:	f8c4 637c 	str.w	r6, [r4, #892]	; 0x37c
900057b4:	f8c4 7354 	str.w	r7, [r4, #852]	; 0x354
900057b8:	f8c4 6380 	str.w	r6, [r4, #896]	; 0x380
900057bc:	f8a4 6384 	strh.w	r6, [r4, #900]	; 0x384
        : x(0), y(0), width(0), height(0)
900057c0:	e9c4 66c9 	strd	r6, r6, [r4, #804]	; 0x324
900057c4:	e9c4 66cb 	strd	r6, r6, [r4, #812]	; 0x32c
          nextSibling(0),
900057c8:	e9c4 66cd 	strd	r6, r6, [r4, #820]	; 0x334
          cachedAbsX(0),
900057cc:	e9c4 66cf 	strd	r6, r6, [r4, #828]	; 0x33c
          nextSibling(0),
900057d0:	e9c4 66da 	strd	r6, r6, [r4, #872]	; 0x368
          cachedAbsX(0),
900057d4:	e9c4 66dc 	strd	r6, r6, [r4, #880]	; 0x370
        : color(0)
900057d8:	e9c4 66e2 	strd	r6, r6, [r4, #904]	; 0x388
900057dc:	e9c4 66e4 	strd	r6, r6, [r4, #912]	; 0x390
        rect.x = x;
900057e0:	e9c4 66d6 	strd	r6, r6, [r4, #856]	; 0x358
900057e4:	e9c4 66d8 	strd	r6, r6, [r4, #864]	; 0x360
        T::add(borderBox);
900057e8:	9802      	ldr	r0, [sp, #8]
900057ea:	f00b fe8d 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900057ee:	f504 6282 	add.w	r2, r4, #1040	; 0x410
900057f2:	f504 7173 	add.w	r1, r4, #972	; 0x3cc
900057f6:	f8c4 63c0 	str.w	r6, [r4, #960]	; 0x3c0
900057fa:	9204      	str	r2, [sp, #16]
900057fc:	f8a4 b3c4 	strh.w	fp, [r4, #964]	; 0x3c4
90005800:	f8c4 63c8 	str.w	r6, [r4, #968]	; 0x3c8
        touchable = touch;
90005804:	f8a4 93bc 	strh.w	r9, [r4, #956]	; 0x3bc
        : T(), up(), down()
90005808:	f8c4 8398 	str.w	r8, [r4, #920]	; 0x398
          touchable(false),
9000580c:	f8a4 53f0 	strh.w	r5, [r4, #1008]	; 0x3f0
90005810:	f884 a3f2 	strb.w	sl, [r4, #1010]	; 0x3f2
        : color(col)
90005814:	f8c4 63f4 	str.w	r6, [r4, #1012]	; 0x3f4
90005818:	f8c4 73cc 	str.w	r7, [r4, #972]	; 0x3cc
9000581c:	f8c4 63f8 	str.w	r6, [r4, #1016]	; 0x3f8
90005820:	f8a4 63fc 	strh.w	r6, [r4, #1020]	; 0x3fc
        : color(0)
90005824:	f8c4 6400 	str.w	r6, [r4, #1024]	; 0x400
90005828:	f8c4 6404 	str.w	r6, [r4, #1028]	; 0x404
9000582c:	f8c4 6408 	str.w	r6, [r4, #1032]	; 0x408
90005830:	f8c4 640c 	str.w	r6, [r4, #1036]	; 0x40c
        : x(0), y(0), width(0), height(0)
90005834:	e9c4 66e7 	strd	r6, r6, [r4, #924]	; 0x39c
90005838:	e9c4 66e9 	strd	r6, r6, [r4, #932]	; 0x3a4
          nextSibling(0),
9000583c:	e9c4 66eb 	strd	r6, r6, [r4, #940]	; 0x3ac
          cachedAbsX(0),
90005840:	e9c4 66ed 	strd	r6, r6, [r4, #948]	; 0x3b4
          nextSibling(0),
90005844:	e9c4 66f8 	strd	r6, r6, [r4, #992]	; 0x3e0
          cachedAbsX(0),
90005848:	e9c4 66fa 	strd	r6, r6, [r4, #1000]	; 0x3e8
        rect.x = x;
9000584c:	e9c4 66f4 	strd	r6, r6, [r4, #976]	; 0x3d0
90005850:	e9c4 66f6 	strd	r6, r6, [r4, #984]	; 0x3d8
        T::add(borderBox);
90005854:	9803      	ldr	r0, [sp, #12]
90005856:	f00b fe57 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000585a:	f504 6391 	add.w	r3, r4, #1160	; 0x488
9000585e:	f204 4144 	addw	r1, r4, #1092	; 0x444
90005862:	f8c4 6414 	str.w	r6, [r4, #1044]	; 0x414
90005866:	9305      	str	r3, [sp, #20]
90005868:	f8c4 6418 	str.w	r6, [r4, #1048]	; 0x418
9000586c:	f8c4 641c 	str.w	r6, [r4, #1052]	; 0x41c
90005870:	f8c4 6420 	str.w	r6, [r4, #1056]	; 0x420
          parent(0),
90005874:	f8c4 6424 	str.w	r6, [r4, #1060]	; 0x424
          nextSibling(0),
90005878:	f8c4 6428 	str.w	r6, [r4, #1064]	; 0x428
          nextDrawChainElement(0),
9000587c:	f8c4 642c 	str.w	r6, [r4, #1068]	; 0x42c
          cachedAbsX(0),
90005880:	f8c4 6430 	str.w	r6, [r4, #1072]	; 0x430
90005884:	f8c4 6438 	str.w	r6, [r4, #1080]	; 0x438
90005888:	f8a4 b43c 	strh.w	fp, [r4, #1084]	; 0x43c
9000588c:	f8c4 6440 	str.w	r6, [r4, #1088]	; 0x440
        touchable = touch;
90005890:	f8a4 9434 	strh.w	r9, [r4, #1076]	; 0x434
        : T(), up(), down()
90005894:	f8c4 8410 	str.w	r8, [r4, #1040]	; 0x410
          parent(0),
90005898:	f8c4 6458 	str.w	r6, [r4, #1112]	; 0x458
          nextSibling(0),
9000589c:	f8c4 645c 	str.w	r6, [r4, #1116]	; 0x45c
          nextDrawChainElement(0),
900058a0:	f8c4 6460 	str.w	r6, [r4, #1120]	; 0x460
          cachedAbsX(0),
900058a4:	f8c4 6464 	str.w	r6, [r4, #1124]	; 0x464
          touchable(false),
900058a8:	f8a4 5468 	strh.w	r5, [r4, #1128]	; 0x468
900058ac:	f884 a46a 	strb.w	sl, [r4, #1130]	; 0x46a
        : color(col)
900058b0:	f8c4 646c 	str.w	r6, [r4, #1132]	; 0x46c
900058b4:	f8c4 7444 	str.w	r7, [r4, #1092]	; 0x444
900058b8:	f8c4 6470 	str.w	r6, [r4, #1136]	; 0x470
900058bc:	f8a4 6474 	strh.w	r6, [r4, #1140]	; 0x474
        : color(0)
900058c0:	f8c4 6478 	str.w	r6, [r4, #1144]	; 0x478
900058c4:	f8c4 647c 	str.w	r6, [r4, #1148]	; 0x47c
900058c8:	f8c4 6480 	str.w	r6, [r4, #1152]	; 0x480
900058cc:	f8c4 6484 	str.w	r6, [r4, #1156]	; 0x484
        rect.x = x;
900058d0:	f8c4 6448 	str.w	r6, [r4, #1096]	; 0x448
900058d4:	f8c4 644c 	str.w	r6, [r4, #1100]	; 0x44c
900058d8:	f8c4 6450 	str.w	r6, [r4, #1104]	; 0x450
900058dc:	f8c4 6454 	str.w	r6, [r4, #1108]	; 0x454
        T::add(borderBox);
900058e0:	9804      	ldr	r0, [sp, #16]
900058e2:	f00b fe11 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900058e6:	f504 62a0 	add.w	r2, r4, #1280	; 0x500
900058ea:	f204 41bc 	addw	r1, r4, #1212	; 0x4bc
        : x(0), y(0), width(0), height(0)
900058ee:	f8c4 648c 	str.w	r6, [r4, #1164]	; 0x48c
900058f2:	9206      	str	r2, [sp, #24]
900058f4:	f8c4 6490 	str.w	r6, [r4, #1168]	; 0x490
900058f8:	f8c4 6494 	str.w	r6, [r4, #1172]	; 0x494
900058fc:	f8c4 6498 	str.w	r6, [r4, #1176]	; 0x498
          parent(0),
90005900:	f8c4 649c 	str.w	r6, [r4, #1180]	; 0x49c
          nextSibling(0),
90005904:	f8c4 64a0 	str.w	r6, [r4, #1184]	; 0x4a0
          nextDrawChainElement(0),
90005908:	f8c4 64a4 	str.w	r6, [r4, #1188]	; 0x4a4
          cachedAbsX(0),
9000590c:	f8c4 64a8 	str.w	r6, [r4, #1192]	; 0x4a8
90005910:	f8c4 64b0 	str.w	r6, [r4, #1200]	; 0x4b0
90005914:	f8a4 b4b4 	strh.w	fp, [r4, #1204]	; 0x4b4
90005918:	f8c4 64b8 	str.w	r6, [r4, #1208]	; 0x4b8
        touchable = touch;
9000591c:	f8a4 94ac 	strh.w	r9, [r4, #1196]	; 0x4ac
        : T(), up(), down()
90005920:	f8c4 8488 	str.w	r8, [r4, #1160]	; 0x488
          parent(0),
90005924:	f8c4 64d0 	str.w	r6, [r4, #1232]	; 0x4d0
          nextSibling(0),
90005928:	f8c4 64d4 	str.w	r6, [r4, #1236]	; 0x4d4
          nextDrawChainElement(0),
9000592c:	f8c4 64d8 	str.w	r6, [r4, #1240]	; 0x4d8
          cachedAbsX(0),
90005930:	f8c4 64dc 	str.w	r6, [r4, #1244]	; 0x4dc
          touchable(false),
90005934:	f8a4 54e0 	strh.w	r5, [r4, #1248]	; 0x4e0
90005938:	f884 a4e2 	strb.w	sl, [r4, #1250]	; 0x4e2
        : color(col)
9000593c:	f8c4 64e4 	str.w	r6, [r4, #1252]	; 0x4e4
90005940:	f8c4 74bc 	str.w	r7, [r4, #1212]	; 0x4bc
90005944:	f8c4 64e8 	str.w	r6, [r4, #1256]	; 0x4e8
90005948:	f8a4 64ec 	strh.w	r6, [r4, #1260]	; 0x4ec
        : color(0)
9000594c:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
90005950:	f8c4 64f4 	str.w	r6, [r4, #1268]	; 0x4f4
90005954:	f8c4 64f8 	str.w	r6, [r4, #1272]	; 0x4f8
90005958:	f8c4 64fc 	str.w	r6, [r4, #1276]	; 0x4fc
        rect.x = x;
9000595c:	f8c4 64c0 	str.w	r6, [r4, #1216]	; 0x4c0
90005960:	f8c4 64c4 	str.w	r6, [r4, #1220]	; 0x4c4
90005964:	f8c4 64c8 	str.w	r6, [r4, #1224]	; 0x4c8
90005968:	f8c4 64cc 	str.w	r6, [r4, #1228]	; 0x4cc
        T::add(borderBox);
9000596c:	9805      	ldr	r0, [sp, #20]
9000596e:	f00b fdcb 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005972:	f504 63af 	add.w	r3, r4, #1400	; 0x578
90005976:	f204 5134 	addw	r1, r4, #1332	; 0x534
        : x(0), y(0), width(0), height(0)
9000597a:	f8c4 6504 	str.w	r6, [r4, #1284]	; 0x504
9000597e:	9307      	str	r3, [sp, #28]
90005980:	f8c4 6508 	str.w	r6, [r4, #1288]	; 0x508
90005984:	f8c4 650c 	str.w	r6, [r4, #1292]	; 0x50c
90005988:	f8c4 6510 	str.w	r6, [r4, #1296]	; 0x510
          parent(0),
9000598c:	f8c4 6514 	str.w	r6, [r4, #1300]	; 0x514
90005990:	e008      	b.n	900059a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x478>
90005992:	bf00      	nop
90005994:	90002331 	.word	0x90002331
90005998:	9002bf70 	.word	0x9002bf70
9000599c:	9002c388 	.word	0x9002c388
900059a0:	9002b55c 	.word	0x9002b55c
          nextSibling(0),
900059a4:	f8c4 6518 	str.w	r6, [r4, #1304]	; 0x518
          nextDrawChainElement(0),
900059a8:	f8c4 651c 	str.w	r6, [r4, #1308]	; 0x51c
          cachedAbsX(0),
900059ac:	f8c4 6520 	str.w	r6, [r4, #1312]	; 0x520
900059b0:	f8c4 6528 	str.w	r6, [r4, #1320]	; 0x528
900059b4:	f8a4 b52c 	strh.w	fp, [r4, #1324]	; 0x52c
900059b8:	f8c4 6530 	str.w	r6, [r4, #1328]	; 0x530
        touchable = touch;
900059bc:	f8a4 9524 	strh.w	r9, [r4, #1316]	; 0x524
        : T(), up(), down()
900059c0:	f8c4 8500 	str.w	r8, [r4, #1280]	; 0x500
          parent(0),
900059c4:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
          nextSibling(0),
900059c8:	f8c4 654c 	str.w	r6, [r4, #1356]	; 0x54c
          nextDrawChainElement(0),
900059cc:	f8c4 6550 	str.w	r6, [r4, #1360]	; 0x550
          cachedAbsX(0),
900059d0:	f8c4 6554 	str.w	r6, [r4, #1364]	; 0x554
          touchable(false),
900059d4:	f8a4 5558 	strh.w	r5, [r4, #1368]	; 0x558
900059d8:	f884 a55a 	strb.w	sl, [r4, #1370]	; 0x55a
        : color(col)
900059dc:	f8c4 655c 	str.w	r6, [r4, #1372]	; 0x55c
900059e0:	f8c4 7534 	str.w	r7, [r4, #1332]	; 0x534
900059e4:	f8c4 6560 	str.w	r6, [r4, #1376]	; 0x560
900059e8:	f8a4 6564 	strh.w	r6, [r4, #1380]	; 0x564
        : color(0)
900059ec:	f8c4 6568 	str.w	r6, [r4, #1384]	; 0x568
900059f0:	f8c4 656c 	str.w	r6, [r4, #1388]	; 0x56c
900059f4:	f8c4 6570 	str.w	r6, [r4, #1392]	; 0x570
900059f8:	f8c4 6574 	str.w	r6, [r4, #1396]	; 0x574
        rect.x = x;
900059fc:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
90005a00:	f8c4 653c 	str.w	r6, [r4, #1340]	; 0x53c
90005a04:	f8c4 6540 	str.w	r6, [r4, #1344]	; 0x540
90005a08:	f8c4 6544 	str.w	r6, [r4, #1348]	; 0x544
        T::add(borderBox);
90005a0c:	9806      	ldr	r0, [sp, #24]
90005a0e:	f00b fd7b 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005a12:	f504 62be 	add.w	r2, r4, #1520	; 0x5f0
90005a16:	f204 51ac 	addw	r1, r4, #1452	; 0x5ac
        : x(0), y(0), width(0), height(0)
90005a1a:	f8c4 657c 	str.w	r6, [r4, #1404]	; 0x57c
90005a1e:	9208      	str	r2, [sp, #32]
90005a20:	f8c4 6580 	str.w	r6, [r4, #1408]	; 0x580
90005a24:	f8c4 6584 	str.w	r6, [r4, #1412]	; 0x584
90005a28:	f8c4 6588 	str.w	r6, [r4, #1416]	; 0x588
          parent(0),
90005a2c:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
          nextSibling(0),
90005a30:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
          nextDrawChainElement(0),
90005a34:	f8c4 6594 	str.w	r6, [r4, #1428]	; 0x594
          cachedAbsX(0),
90005a38:	f8c4 6598 	str.w	r6, [r4, #1432]	; 0x598
90005a3c:	f8c4 65a0 	str.w	r6, [r4, #1440]	; 0x5a0
90005a40:	f8a4 b5a4 	strh.w	fp, [r4, #1444]	; 0x5a4
90005a44:	f8c4 65a8 	str.w	r6, [r4, #1448]	; 0x5a8
        touchable = touch;
90005a48:	f8a4 959c 	strh.w	r9, [r4, #1436]	; 0x59c
        : T(), up(), down()
90005a4c:	f8c4 8578 	str.w	r8, [r4, #1400]	; 0x578
          parent(0),
90005a50:	f8c4 65c0 	str.w	r6, [r4, #1472]	; 0x5c0
          nextSibling(0),
90005a54:	f8c4 65c4 	str.w	r6, [r4, #1476]	; 0x5c4
          nextDrawChainElement(0),
90005a58:	f8c4 65c8 	str.w	r6, [r4, #1480]	; 0x5c8
          cachedAbsX(0),
90005a5c:	f8c4 65cc 	str.w	r6, [r4, #1484]	; 0x5cc
          touchable(false),
90005a60:	f8a4 55d0 	strh.w	r5, [r4, #1488]	; 0x5d0
90005a64:	f884 a5d2 	strb.w	sl, [r4, #1490]	; 0x5d2
        : color(col)
90005a68:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
90005a6c:	f8c4 75ac 	str.w	r7, [r4, #1452]	; 0x5ac
90005a70:	f8c4 65d8 	str.w	r6, [r4, #1496]	; 0x5d8
90005a74:	f8a4 65dc 	strh.w	r6, [r4, #1500]	; 0x5dc
        : color(0)
90005a78:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
90005a7c:	f8c4 65e4 	str.w	r6, [r4, #1508]	; 0x5e4
90005a80:	f8c4 65e8 	str.w	r6, [r4, #1512]	; 0x5e8
90005a84:	f8c4 65ec 	str.w	r6, [r4, #1516]	; 0x5ec
        rect.x = x;
90005a88:	f8c4 65b0 	str.w	r6, [r4, #1456]	; 0x5b0
90005a8c:	f8c4 65b4 	str.w	r6, [r4, #1460]	; 0x5b4
90005a90:	f8c4 65b8 	str.w	r6, [r4, #1464]	; 0x5b8
90005a94:	f8c4 65bc 	str.w	r6, [r4, #1468]	; 0x5bc
        T::add(borderBox);
90005a98:	9807      	ldr	r0, [sp, #28]
90005a9a:	f00b fd35 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005a9e:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
90005aa2:	f204 6124 	addw	r1, r4, #1572	; 0x624
        : x(0), y(0), width(0), height(0)
90005aa6:	f8c4 65f4 	str.w	r6, [r4, #1524]	; 0x5f4
90005aaa:	9309      	str	r3, [sp, #36]	; 0x24
90005aac:	f8c4 65f8 	str.w	r6, [r4, #1528]	; 0x5f8
90005ab0:	f8c4 65fc 	str.w	r6, [r4, #1532]	; 0x5fc
90005ab4:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
          parent(0),
90005ab8:	f8c4 6604 	str.w	r6, [r4, #1540]	; 0x604
          nextSibling(0),
90005abc:	f8c4 6608 	str.w	r6, [r4, #1544]	; 0x608
          nextDrawChainElement(0),
90005ac0:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
          cachedAbsX(0),
90005ac4:	f8c4 6610 	str.w	r6, [r4, #1552]	; 0x610
90005ac8:	f8c4 6618 	str.w	r6, [r4, #1560]	; 0x618
90005acc:	f8a4 b61c 	strh.w	fp, [r4, #1564]	; 0x61c
90005ad0:	f8c4 6620 	str.w	r6, [r4, #1568]	; 0x620
        touchable = touch;
90005ad4:	f8a4 9614 	strh.w	r9, [r4, #1556]	; 0x614
        : T(), up(), down()
90005ad8:	f8c4 85f0 	str.w	r8, [r4, #1520]	; 0x5f0
          parent(0),
90005adc:	f8c4 6638 	str.w	r6, [r4, #1592]	; 0x638
          nextSibling(0),
90005ae0:	f8c4 663c 	str.w	r6, [r4, #1596]	; 0x63c
          nextDrawChainElement(0),
90005ae4:	f8c4 6640 	str.w	r6, [r4, #1600]	; 0x640
          cachedAbsX(0),
90005ae8:	f8c4 6644 	str.w	r6, [r4, #1604]	; 0x644
          touchable(false),
90005aec:	f8a4 5648 	strh.w	r5, [r4, #1608]	; 0x648
90005af0:	f884 a64a 	strb.w	sl, [r4, #1610]	; 0x64a
        : color(col)
90005af4:	f8c4 664c 	str.w	r6, [r4, #1612]	; 0x64c
90005af8:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
90005afc:	f8c4 6650 	str.w	r6, [r4, #1616]	; 0x650
90005b00:	f8a4 6654 	strh.w	r6, [r4, #1620]	; 0x654
        : color(0)
90005b04:	f8c4 6658 	str.w	r6, [r4, #1624]	; 0x658
90005b08:	f8c4 665c 	str.w	r6, [r4, #1628]	; 0x65c
90005b0c:	f8c4 6660 	str.w	r6, [r4, #1632]	; 0x660
90005b10:	f8c4 6664 	str.w	r6, [r4, #1636]	; 0x664
        rect.x = x;
90005b14:	f8c4 6628 	str.w	r6, [r4, #1576]	; 0x628
90005b18:	f8c4 662c 	str.w	r6, [r4, #1580]	; 0x62c
90005b1c:	f8c4 6630 	str.w	r6, [r4, #1584]	; 0x630
90005b20:	f8c4 6634 	str.w	r6, [r4, #1588]	; 0x634
        T::add(borderBox);
90005b24:	9808      	ldr	r0, [sp, #32]
90005b26:	f00b fcef 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005b2a:	f204 619c 	addw	r1, r4, #1692	; 0x69c
90005b2e:	9809      	ldr	r0, [sp, #36]	; 0x24
90005b30:	f8a4 b694 	strh.w	fp, [r4, #1684]	; 0x694
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005b34:	f04f 3bff 	mov.w	fp, #4294967295
        touchable = touch;
90005b38:	f8a4 968c 	strh.w	r9, [r4, #1676]	; 0x68c
90005b3c:	f504 69dc 	add.w	r9, r4, #1760	; 0x6e0
        : T(), up(), down()
90005b40:	f8c4 8668 	str.w	r8, [r4, #1640]	; 0x668
90005b44:	f204 7864 	addw	r8, r4, #1892	; 0x764
90005b48:	f8c4 769c 	str.w	r7, [r4, #1692]	; 0x69c
90005b4c:	f64f 77ff 	movw	r7, #65535	; 0xffff
        : x(0), y(0), width(0), height(0)
90005b50:	f8c4 666c 	str.w	r6, [r4, #1644]	; 0x66c
90005b54:	f8c4 6670 	str.w	r6, [r4, #1648]	; 0x670
90005b58:	f8c4 6674 	str.w	r6, [r4, #1652]	; 0x674
90005b5c:	f8c4 6678 	str.w	r6, [r4, #1656]	; 0x678
          parent(0),
90005b60:	f8c4 667c 	str.w	r6, [r4, #1660]	; 0x67c
          nextSibling(0),
90005b64:	f8c4 6680 	str.w	r6, [r4, #1664]	; 0x680
          nextDrawChainElement(0),
90005b68:	f8c4 6684 	str.w	r6, [r4, #1668]	; 0x684
          cachedAbsX(0),
90005b6c:	f8c4 6688 	str.w	r6, [r4, #1672]	; 0x688
90005b70:	f8c4 6690 	str.w	r6, [r4, #1680]	; 0x690
90005b74:	f8c4 6698 	str.w	r6, [r4, #1688]	; 0x698
          parent(0),
90005b78:	f8c4 66b0 	str.w	r6, [r4, #1712]	; 0x6b0
          nextSibling(0),
90005b7c:	f8c4 66b4 	str.w	r6, [r4, #1716]	; 0x6b4
          nextDrawChainElement(0),
90005b80:	f8c4 66b8 	str.w	r6, [r4, #1720]	; 0x6b8
          cachedAbsX(0),
90005b84:	f8c4 66bc 	str.w	r6, [r4, #1724]	; 0x6bc
          touchable(false),
90005b88:	f8a4 56c0 	strh.w	r5, [r4, #1728]	; 0x6c0
90005b8c:	f884 a6c2 	strb.w	sl, [r4, #1730]	; 0x6c2
90005b90:	f104 0a04 	add.w	sl, r4, #4
        : color(col)
90005b94:	f8c4 66c4 	str.w	r6, [r4, #1732]	; 0x6c4
90005b98:	f8c4 66c8 	str.w	r6, [r4, #1736]	; 0x6c8
90005b9c:	f8a4 66cc 	strh.w	r6, [r4, #1740]	; 0x6cc
        : color(0)
90005ba0:	f8c4 66d0 	str.w	r6, [r4, #1744]	; 0x6d0
90005ba4:	f8c4 66d4 	str.w	r6, [r4, #1748]	; 0x6d4
90005ba8:	f8c4 66d8 	str.w	r6, [r4, #1752]	; 0x6d8
90005bac:	f8c4 66dc 	str.w	r6, [r4, #1756]	; 0x6dc
        rect.x = x;
90005bb0:	f8c4 66a0 	str.w	r6, [r4, #1696]	; 0x6a0
90005bb4:	f8c4 66a4 	str.w	r6, [r4, #1700]	; 0x6a4
90005bb8:	f8c4 66a8 	str.w	r6, [r4, #1704]	; 0x6a8
90005bbc:	f8c4 66ac 	str.w	r6, [r4, #1708]	; 0x6ac
        T::add(borderBox);
90005bc0:	f00b fca2 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005bc4:	f204 730c 	addw	r3, r4, #1804	; 0x70c
90005bc8:	a926      	add	r1, sp, #152	; 0x98
90005bca:	4648      	mov	r0, r9
90005bcc:	930a      	str	r3, [sp, #40]	; 0x28
90005bce:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005bd2:	f00d fbc7 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005bd6:	f504 62e7 	add.w	r2, r4, #1848	; 0x738
90005bda:	a926      	add	r1, sp, #152	; 0x98
90005bdc:	980a      	ldr	r0, [sp, #40]	; 0x28
90005bde:	920b      	str	r2, [sp, #44]	; 0x2c
90005be0:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005be4:	f00d fbbe 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005be8:	a926      	add	r1, sp, #152	; 0x98
90005bea:	980b      	ldr	r0, [sp, #44]	; 0x2c
90005bec:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005bf0:	f00d fbb8 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005bf4:	f504 63f2 	add.w	r3, r4, #1936	; 0x790
90005bf8:	a926      	add	r1, sp, #152	; 0x98
90005bfa:	4640      	mov	r0, r8
90005bfc:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005c00:	930c      	str	r3, [sp, #48]	; 0x30
90005c02:	f00d fbaf 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005c06:	f204 72bc 	addw	r2, r4, #1980	; 0x7bc
90005c0a:	a926      	add	r1, sp, #152	; 0x98
90005c0c:	980c      	ldr	r0, [sp, #48]	; 0x30
90005c0e:	920d      	str	r2, [sp, #52]	; 0x34
90005c10:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005c14:	f00d fba6 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005c18:	f504 63fd 	add.w	r3, r4, #2024	; 0x7e8
90005c1c:	a926      	add	r1, sp, #152	; 0x98
90005c1e:	980d      	ldr	r0, [sp, #52]	; 0x34
90005c20:	930e      	str	r3, [sp, #56]	; 0x38
90005c22:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005c26:	f00d fb9d 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005c2a:	f604 0214 	addw	r2, r4, #2068	; 0x814
90005c2e:	a926      	add	r1, sp, #152	; 0x98
90005c30:	980e      	ldr	r0, [sp, #56]	; 0x38
90005c32:	920f      	str	r2, [sp, #60]	; 0x3c
90005c34:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005c38:	f00d fb94 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005c3c:	f504 6304 	add.w	r3, r4, #2112	; 0x840
90005c40:	a926      	add	r1, sp, #152	; 0x98
90005c42:	980f      	ldr	r0, [sp, #60]	; 0x3c
90005c44:	9310      	str	r3, [sp, #64]	; 0x40
90005c46:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005c4a:	f00d fb8b 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005c4e:	f604 026c 	addw	r2, r4, #2156	; 0x86c
90005c52:	a926      	add	r1, sp, #152	; 0x98
90005c54:	9810      	ldr	r0, [sp, #64]	; 0x40
90005c56:	9211      	str	r2, [sp, #68]	; 0x44
90005c58:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005c5c:	f00d fb82 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005c60:	f604 0398 	addw	r3, r4, #2200	; 0x898
90005c64:	a926      	add	r1, sp, #152	; 0x98
90005c66:	9811      	ldr	r0, [sp, #68]	; 0x44
90005c68:	9312      	str	r3, [sp, #72]	; 0x48
90005c6a:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005c6e:	f00d fb79 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005c72:	f604 02c4 	addw	r2, r4, #2244	; 0x8c4
90005c76:	a926      	add	r1, sp, #152	; 0x98
90005c78:	9812      	ldr	r0, [sp, #72]	; 0x48
90005c7a:	9213      	str	r2, [sp, #76]	; 0x4c
90005c7c:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005c80:	f00d fb70 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005c84:	f504 630f 	add.w	r3, r4, #2288	; 0x8f0
90005c88:	a926      	add	r1, sp, #152	; 0x98
90005c8a:	9813      	ldr	r0, [sp, #76]	; 0x4c
90005c8c:	9314      	str	r3, [sp, #80]	; 0x50
90005c8e:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005c92:	f00d fb67 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005c96:	f604 121c 	addw	r2, r4, #2332	; 0x91c
90005c9a:	a926      	add	r1, sp, #152	; 0x98
90005c9c:	9814      	ldr	r0, [sp, #80]	; 0x50
90005c9e:	9215      	str	r2, [sp, #84]	; 0x54
90005ca0:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005ca4:	f00d fb5e 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005ca8:	f604 1348 	addw	r3, r4, #2376	; 0x948
90005cac:	a926      	add	r1, sp, #152	; 0x98
90005cae:	9815      	ldr	r0, [sp, #84]	; 0x54
90005cb0:	9316      	str	r3, [sp, #88]	; 0x58
90005cb2:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005cb6:	f00d fb55 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005cba:	f604 1274 	addw	r2, r4, #2420	; 0x974
90005cbe:	a926      	add	r1, sp, #152	; 0x98
90005cc0:	9816      	ldr	r0, [sp, #88]	; 0x58
90005cc2:	9217      	str	r2, [sp, #92]	; 0x5c
90005cc4:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005cc8:	f00d fb4c 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005ccc:	f504 631a 	add.w	r3, r4, #2464	; 0x9a0
90005cd0:	a926      	add	r1, sp, #152	; 0x98
90005cd2:	9817      	ldr	r0, [sp, #92]	; 0x5c
90005cd4:	9318      	str	r3, [sp, #96]	; 0x60
90005cd6:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005cda:	f00d fb43 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005cde:	f604 12cc 	addw	r2, r4, #2508	; 0x9cc
90005ce2:	a926      	add	r1, sp, #152	; 0x98
90005ce4:	9818      	ldr	r0, [sp, #96]	; 0x60
90005ce6:	9219      	str	r2, [sp, #100]	; 0x64
90005ce8:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005cec:	f00d fb3a 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005cf0:	a926      	add	r1, sp, #152	; 0x98
90005cf2:	9819      	ldr	r0, [sp, #100]	; 0x64
90005cf4:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90005cf8:	f00d fb34 	bl	90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005cfc:	4be8      	ldr	r3, [pc, #928]	; (900060a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb74>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005cfe:	20ff      	movs	r0, #255	; 0xff
90005d00:	4ae8      	ldr	r2, [pc, #928]	; (900060a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb78>)
90005d02:	f8c4 39f8 	str.w	r3, [r4, #2552]	; 0x9f8
90005d06:	f8c4 2a24 	str.w	r2, [r4, #2596]	; 0xa24
90005d0a:	f604 226c 	addw	r2, r4, #2668	; 0xa6c
        : typedTextId(id)
90005d0e:	4be6      	ldr	r3, [pc, #920]	; (900060a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb7c>)
        : x(0), y(0), width(0), height(0)
90005d10:	f8c4 69fc 	str.w	r6, [r4, #2556]	; 0x9fc
90005d14:	ee0b 2a10 	vmov	s22, r2
90005d18:	f8c4 6a00 	str.w	r6, [r4, #2560]	; 0xa00
90005d1c:	f8c4 6a04 	str.w	r6, [r4, #2564]	; 0xa04
90005d20:	f8c4 6a08 	str.w	r6, [r4, #2568]	; 0xa08
          parent(0),
90005d24:	f8c4 6a0c 	str.w	r6, [r4, #2572]	; 0xa0c
          nextSibling(0),
90005d28:	f8c4 6a10 	str.w	r6, [r4, #2576]	; 0xa10
          nextDrawChainElement(0),
90005d2c:	f8c4 6a14 	str.w	r6, [r4, #2580]	; 0xa14
          cachedAbsX(0),
90005d30:	f8c4 6a18 	str.w	r6, [r4, #2584]	; 0xa18
          touchable(false),
90005d34:	f8a4 5a1c 	strh.w	r5, [r4, #2588]	; 0xa1c
        : color(col)
90005d38:	f8c4 6a20 	str.w	r6, [r4, #2592]	; 0xa20
        : x(0), y(0), width(0), height(0)
90005d3c:	f8c4 6a28 	str.w	r6, [r4, #2600]	; 0xa28
90005d40:	f8c4 6a2c 	str.w	r6, [r4, #2604]	; 0xa2c
90005d44:	f8c4 6a30 	str.w	r6, [r4, #2608]	; 0xa30
90005d48:	f8c4 6a34 	str.w	r6, [r4, #2612]	; 0xa34
          parent(0),
90005d4c:	f8c4 6a38 	str.w	r6, [r4, #2616]	; 0xa38
          nextSibling(0),
90005d50:	f8c4 6a3c 	str.w	r6, [r4, #2620]	; 0xa3c
          nextDrawChainElement(0),
90005d54:	f8c4 6a40 	str.w	r6, [r4, #2624]	; 0xa40
          cachedAbsX(0),
90005d58:	f8c4 6a44 	str.w	r6, [r4, #2628]	; 0xa44
          touchable(false),
90005d5c:	f8a4 5a48 	strh.w	r5, [r4, #2632]	; 0xa48
        : color(col)
90005d60:	f8c4 6a54 	str.w	r6, [r4, #2644]	; 0xa54
90005d64:	f8a4 6a58 	strh.w	r6, [r4, #2648]	; 0xa58
90005d68:	f8c4 0a5a 	str.w	r0, [r4, #2650]	; 0xa5a
90005d6c:	4610      	mov	r0, r2
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005d6e:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
              text(0)
90005d72:	f8c4 6a68 	str.w	r6, [r4, #2664]	; 0xa68
90005d76:	f8c4 ba64 	str.w	fp, [r4, #2660]	; 0xa64
90005d7a:	f8c4 3a4c 	str.w	r3, [r4, #2636]	; 0xa4c
90005d7e:	f884 7a1e 	strb.w	r7, [r4, #2590]	; 0xa1e
90005d82:	f8a4 7a50 	strh.w	r7, [r4, #2640]	; 0xa50
90005d86:	f00e fb01 	bl	9001438c <_ZN8touchgfx14ButtonWithIconC1Ev>
90005d8a:	4bc7      	ldr	r3, [pc, #796]	; (900060a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb7c>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005d8c:	20ff      	movs	r0, #255	; 0xff
        : TextAreaWithWildcardBase(), wc1(0)
90005d8e:	49c7      	ldr	r1, [pc, #796]	; (900060ac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb80>)
        : pobject(pObject), pmemfun(pmemfun_1)
90005d90:	f504 5200 	add.w	r2, r4, #8192	; 0x2000
90005d94:	f8c4 3ad0 	str.w	r3, [r4, #2768]	; 0xad0
90005d98:	f8c4 3b1c 	str.w	r3, [r4, #2844]	; 0xb1c
        : x(0), y(0), width(0), height(0)
90005d9c:	f8c4 6aac 	str.w	r6, [r4, #2732]	; 0xaac
90005da0:	f8c4 6ab0 	str.w	r6, [r4, #2736]	; 0xab0
90005da4:	f8c4 6ab4 	str.w	r6, [r4, #2740]	; 0xab4
90005da8:	f8c4 6ab8 	str.w	r6, [r4, #2744]	; 0xab8
          parent(0),
90005dac:	f8c4 6abc 	str.w	r6, [r4, #2748]	; 0xabc
          nextSibling(0),
90005db0:	f8c4 6ac0 	str.w	r6, [r4, #2752]	; 0xac0
          nextDrawChainElement(0),
90005db4:	f8c4 6ac4 	str.w	r6, [r4, #2756]	; 0xac4
          cachedAbsX(0),
90005db8:	f8c4 6ac8 	str.w	r6, [r4, #2760]	; 0xac8
          touchable(false),
90005dbc:	f8a4 5acc 	strh.w	r5, [r4, #2764]	; 0xacc
90005dc0:	f8a4 5b18 	strh.w	r5, [r4, #2840]	; 0xb18
90005dc4:	f8a4 bad4 	strh.w	fp, [r4, #2772]	; 0xad4
        : color(col)
90005dc8:	f8c4 6ad8 	str.w	r6, [r4, #2776]	; 0xad8
90005dcc:	f8a4 6adc 	strh.w	r6, [r4, #2780]	; 0xadc
90005dd0:	f8c4 0ade 	str.w	r0, [r4, #2782]	; 0xade
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005dd4:	f8c4 6ae4 	str.w	r6, [r4, #2788]	; 0xae4
90005dd8:	f8c4 bae8 	str.w	fp, [r4, #2792]	; 0xae8
              text(0)
90005ddc:	f8c4 6aec 	str.w	r6, [r4, #2796]	; 0xaec
90005de0:	f8c4 6af0 	str.w	r6, [r4, #2800]	; 0xaf0
        : x(0), y(0), width(0), height(0)
90005de4:	f8c4 6af8 	str.w	r6, [r4, #2808]	; 0xaf8
90005de8:	f8c4 6afc 	str.w	r6, [r4, #2812]	; 0xafc
90005dec:	f8c4 6b00 	str.w	r6, [r4, #2816]	; 0xb00
90005df0:	f8c4 6b04 	str.w	r6, [r4, #2820]	; 0xb04
          parent(0),
90005df4:	f8c4 6b08 	str.w	r6, [r4, #2824]	; 0xb08
          nextSibling(0),
90005df8:	f8c4 6b0c 	str.w	r6, [r4, #2828]	; 0xb0c
          nextDrawChainElement(0),
90005dfc:	f8c4 6b10 	str.w	r6, [r4, #2832]	; 0xb10
          cachedAbsX(0),
90005e00:	f8c4 6b14 	str.w	r6, [r4, #2836]	; 0xb14
        : color(col)
90005e04:	f8c4 6b24 	str.w	r6, [r4, #2852]	; 0xb24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005e08:	f8a4 6b28 	strh.w	r6, [r4, #2856]	; 0xb28
90005e0c:	f8c4 1aa8 	str.w	r1, [r4, #2728]	; 0xaa8
90005e10:	f8a4 7b20 	strh.w	r7, [r4, #2848]	; 0xb20
90005e14:	f8c4 0b2a 	str.w	r0, [r4, #2858]	; 0xb2a
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90005e18:	f604 307c 	addw	r0, r4, #2940	; 0xb7c
90005e1c:	f8c4 1af4 	str.w	r1, [r4, #2804]	; 0xaf4
90005e20:	49a3      	ldr	r1, [pc, #652]	; (900060b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb84>)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005e22:	f8c4 6b30 	str.w	r6, [r4, #2864]	; 0xb30
90005e26:	f8c4 bb34 	str.w	fp, [r4, #2868]	; 0xb34
              text(0)
90005e2a:	f8c4 6b38 	str.w	r6, [r4, #2872]	; 0xb38
90005e2e:	f8c4 6b3c 	str.w	r6, [r4, #2876]	; 0xb3c
90005e32:	f8c2 179c 	str.w	r1, [r2, #1948]	; 0x79c
90005e36:	499f      	ldr	r1, [pc, #636]	; (900060b4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb88>)
90005e38:	f8c2 67a8 	str.w	r6, [r2, #1960]	; 0x7a8
90005e3c:	f8c2 17a4 	str.w	r1, [r2, #1956]	; 0x7a4
90005e40:	499d      	ldr	r1, [pc, #628]	; (900060b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb8c>)
90005e42:	f8c2 67b8 	str.w	r6, [r2, #1976]	; 0x7b8
90005e46:	f8c2 17ac 	str.w	r1, [r2, #1964]	; 0x7ac
90005e4a:	499c      	ldr	r1, [pc, #624]	; (900060bc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb90>)
90005e4c:	f8c2 47a0 	str.w	r4, [r2, #1952]	; 0x7a0
90005e50:	f8c2 17b4 	str.w	r1, [r2, #1972]	; 0x7b4
90005e54:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
90005e58:	f8c2 47b0 	str.w	r4, [r2, #1968]	; 0x7b0
90005e5c:	f00f faa0 	bl	900153a0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90005e60:	4d97      	ldr	r5, [pc, #604]	; (900060c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb94>)
        color = newColor;
90005e62:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
90005e66:	f104 0140 	add.w	r1, r4, #64	; 0x40
90005e6a:	4650      	mov	r0, sl
90005e6c:	6466      	str	r6, [r4, #68]	; 0x44
90005e6e:	66a2      	str	r2, [r4, #104]	; 0x68
90005e70:	64a5      	str	r5, [r4, #72]	; 0x48
90005e72:	f00b fb49 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005e76:	2204      	movs	r2, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90005e78:	a926      	add	r1, sp, #152	; 0x98
90005e7a:	ee1a 0a90 	vmov	r0, s21
90005e7e:	f8ad 2098 	strh.w	r2, [sp, #152]	; 0x98
90005e82:	f00e faaa 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005e86:	4631      	mov	r1, r6
90005e88:	ee1a 0a90 	vmov	r0, s21
90005e8c:	e9c4 651c 	strd	r6, r5, [r4, #112]	; 0x70
90005e90:	f00d fa23 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005e94:	ee1a 1a90 	vmov	r1, s21
90005e98:	4650      	mov	r0, sl
90005e9a:	4e8a      	ldr	r6, [pc, #552]	; (900060c4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
90005e9c:	f00b fb34 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        canvasPainter = &painter;
90005ea0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005ea2:	22a0      	movs	r2, #160	; 0xa0
90005ea4:	ee18 0a10 	vmov	r0, s16
90005ea8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
90005eac:	4b86      	ldr	r3, [pc, #536]	; (900060c8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
90005eae:	4611      	mov	r1, r2
90005eb0:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90005eb4:	f8a4 b118 	strh.w	fp, [r4, #280]	; 0x118
    buttonCallback(this, &screen_tictactoe_gameViewBase::buttonCallbackHandler)
90005eb8:	f604 2b24 	addw	fp, r4, #2596	; 0xa24
90005ebc:	e9c4 6327 	strd	r6, r3, [r4, #156]	; 0x9c
90005ec0:	f00d f890 	bl	90012fe4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005ec4:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90005ec8:	21a0      	movs	r1, #160	; 0xa0
90005eca:	ee18 0a10 	vmov	r0, s16
90005ece:	f00d f894 	bl	90012ffa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
90005ed2:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
90005ed6:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90005eda:	d007      	beq.n	90005eec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x9c0>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
90005edc:	f44f 73a0 	mov.w	r3, #320	; 0x140

        updateCachedShape();
90005ee0:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
90005ee4:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
90005ee8:	f00c ff86 	bl	90012df8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005eec:	2101      	movs	r1, #1
90005eee:	ee18 0a10 	vmov	r0, s16
90005ef2:	f00d f88d 	bl	90013010 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005ef6:	ee18 1a10 	vmov	r1, s16
90005efa:	4650      	mov	r0, sl
90005efc:	4d73      	ldr	r5, [pc, #460]	; (900060cc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
90005efe:	f00b fb03 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005f02:	9b1c      	ldr	r3, [sp, #112]	; 0x70
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005f04:	22a0      	movs	r2, #160	; 0xa0
90005f06:	ee18 0a90 	vmov	r0, s17
90005f0a:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
90005f0e:	f04f 33ff 	mov.w	r3, #4294967295
90005f12:	4611      	mov	r1, r2
90005f14:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
90005f18:	f8a4 319c 	strh.w	r3, [r4, #412]	; 0x19c
90005f1c:	4b6a      	ldr	r3, [pc, #424]	; (900060c8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
90005f1e:	e9c4 5348 	strd	r5, r3, [r4, #288]	; 0x120
90005f22:	f00d f85f 	bl	90012fe4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005f26:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90005f2a:	21a0      	movs	r1, #160	; 0xa0
90005f2c:	ee18 0a90 	vmov	r0, s17
90005f30:	f00d f863 	bl	90012ffa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005f34:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
90005f38:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90005f3c:	d007      	beq.n	90005f4e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa22>
        lineWidthQ5 = widthQ5;
90005f3e:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90005f42:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
90005f46:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
        updateCachedShape();
90005f4a:	f00c ff55 	bl	90012df8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005f4e:	2101      	movs	r1, #1
90005f50:	ee18 0a90 	vmov	r0, s17
90005f54:	f00d f85c 	bl	90013010 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005f58:	ee18 1a90 	vmov	r1, s17
90005f5c:	4650      	mov	r0, sl
90005f5e:	f00b fad3 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005f62:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005f64:	22a0      	movs	r2, #160	; 0xa0
90005f66:	485a      	ldr	r0, [pc, #360]	; (900060d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba4>)
90005f68:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
90005f6c:	f04f 33ff 	mov.w	r3, #4294967295
90005f70:	4611      	mov	r1, r2
90005f72:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
90005f76:	f8a4 3220 	strh.w	r3, [r4, #544]	; 0x220
90005f7a:	4b56      	ldr	r3, [pc, #344]	; (900060d4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba8>)
90005f7c:	e9c4 0369 	strd	r0, r3, [r4, #420]	; 0x1a4
90005f80:	ee19 0a10 	vmov	r0, s18
90005f84:	f00d f82e 	bl	90012fe4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005f88:	22a0      	movs	r2, #160	; 0xa0
90005f8a:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90005f8e:	ee19 0a10 	vmov	r0, s18
90005f92:	f00d f832 	bl	90012ffa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005f96:	f8d4 31dc 	ldr.w	r3, [r4, #476]	; 0x1dc
90005f9a:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90005f9e:	d007      	beq.n	90005fb0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa84>
        lineWidthQ5 = widthQ5;
90005fa0:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90005fa4:	ee19 0a10 	vmov	r0, s18
        lineWidthQ5 = widthQ5;
90005fa8:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
        updateCachedShape();
90005fac:	f00c ff24 	bl	90012df8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005fb0:	2101      	movs	r1, #1
90005fb2:	ee19 0a10 	vmov	r0, s18
90005fb6:	f00d f82b 	bl	90013010 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005fba:	ee19 1a10 	vmov	r1, s18
90005fbe:	4650      	mov	r0, sl
90005fc0:	f00b faa2 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005fc4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005fc6:	22a0      	movs	r2, #160	; 0xa0
90005fc8:	4943      	ldr	r1, [pc, #268]	; (900060d8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbac>)
90005fca:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
90005fce:	f04f 33ff 	mov.w	r3, #4294967295
90005fd2:	ee19 0a90 	vmov	r0, s19
90005fd6:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
90005fda:	f8a4 32a4 	strh.w	r3, [r4, #676]	; 0x2a4
90005fde:	4b3f      	ldr	r3, [pc, #252]	; (900060dc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb0>)
90005fe0:	e9c4 138a 	strd	r1, r3, [r4, #552]	; 0x228
90005fe4:	4611      	mov	r1, r2
90005fe6:	f00c fffd 	bl	90012fe4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005fea:	22a0      	movs	r2, #160	; 0xa0
90005fec:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90005ff0:	ee19 0a90 	vmov	r0, s19
90005ff4:	f00d f801 	bl	90012ffa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005ff8:	f8d4 3260 	ldr.w	r3, [r4, #608]	; 0x260
90005ffc:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006000:	d007      	beq.n	90006012 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xae6>
        lineWidthQ5 = widthQ5;
90006002:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006006:	ee19 0a90 	vmov	r0, s19
        lineWidthQ5 = widthQ5;
9000600a:	f8c4 3260 	str.w	r3, [r4, #608]	; 0x260
        updateCachedShape();
9000600e:	f00c fef3 	bl	90012df8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006012:	2101      	movs	r1, #1
90006014:	ee19 0a90 	vmov	r0, s19
90006018:	f00c fffa 	bl	90013010 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
9000601c:	ee19 1a90 	vmov	r1, s19
90006020:	4650      	mov	r0, sl
90006022:	f00b fa71 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006026:	2200      	movs	r2, #0
90006028:	4b2d      	ldr	r3, [pc, #180]	; (900060e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
        borderUp = borderColorReleased;
9000602a:	492e      	ldr	r1, [pc, #184]	; (900060e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb8>)
        borderBox.setColor(T::getPressed() ? down : up);
9000602c:	f894 02d4 	ldrb.w	r0, [r4, #724]	; 0x2d4
        borderUp = borderColorReleased;
90006030:	f8c4 1318 	str.w	r1, [r4, #792]	; 0x318
        borderDown = borderColorPressed;
90006034:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006038:	e9c4 23b8 	strd	r2, r3, [r4, #736]	; 0x2e0
        borderSize = size;
9000603c:	2305      	movs	r3, #5
9000603e:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006042:	4a29      	ldr	r2, [pc, #164]	; (900060e8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbbc>)
90006044:	f8a4 330c 	strh.w	r3, [r4, #780]	; 0x30c
90006048:	4b28      	ldr	r3, [pc, #160]	; (900060ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc0>)
        borderDown = borderColorPressed;
9000604a:	f8c4 131c 	str.w	r1, [r4, #796]	; 0x31c
        handlePressedUpdated();
9000604e:	f8d4 12a8 	ldr.w	r1, [r4, #680]	; 0x2a8
        down = colorPressed;
90006052:	e9c4 32c4 	strd	r3, r2, [r4, #784]	; 0x310
        borderBox.setColor(T::getPressed() ? down : up);
90006056:	2800      	cmp	r0, #0
90006058:	f000 857e 	beq.w	90006b58 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x162c>
9000605c:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000605e:	f504 7247 	add.w	r2, r4, #796	; 0x31c
90006062:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
90006066:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006068:	4e21      	ldr	r6, [pc, #132]	; (900060f0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc4>)
9000606a:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
        alpha = newAlpha;
9000606e:	2300      	movs	r3, #0
90006070:	f884 32d5 	strb.w	r3, [r4, #725]	; 0x2d5
        handleAlphaUpdated();
90006074:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006078:	42b2      	cmp	r2, r6
9000607a:	f040 85bd 	bne.w	90006bf8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16cc>
        alpha = newAlpha;
9000607e:	f884 3302 	strb.w	r3, [r4, #770]	; 0x302
    btn_pos1.setAction(flexButtonCallback);
90006082:	f242 759c 	movw	r5, #10140	; 0x279c
90006086:	4b16      	ldr	r3, [pc, #88]	; (900060e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
90006088:	f8df c068 	ldr.w	ip, [pc, #104]	; 900060f4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc8>
9000608c:	ee1a 1a10 	vmov	r1, s20
90006090:	4425      	add	r5, r4
90006092:	4650      	mov	r0, sl
90006094:	e9c4 c3ab 	strd	ip, r3, [r4, #684]	; 0x2ac
        action = &callback;
90006098:	f8c4 52d8 	str.w	r5, [r4, #728]	; 0x2d8
9000609c:	e02c      	b.n	900060f8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbcc>
9000609e:	bf00      	nop
900060a0:	9002c320 	.word	0x9002c320
900060a4:	9002c290 	.word	0x9002c290
900060a8:	9002ac2c 	.word	0x9002ac2c
900060ac:	9002b788 	.word	0x9002b788
900060b0:	9002b978 	.word	0x9002b978
900060b4:	90005429 	.word	0x90005429
900060b8:	9002b990 	.word	0x9002b990
900060bc:	90005411 	.word	0x90005411
900060c0:	011001e0 	.word	0x011001e0
900060c4:	0007009c 	.word	0x0007009c
900060c8:	0102000f 	.word	0x0102000f
900060cc:	00070123 	.word	0x00070123
900060d0:	004e0038 	.word	0x004e0038
900060d4:	000f0167 	.word	0x000f0167
900060d8:	00b90038 	.word	0x00b90038
900060dc:	000f0166 	.word	0x000f0166
900060e0:	00470064 	.word	0x00470064
900060e4:	ff003366 	.word	0xff003366
900060e8:	ff0099cc 	.word	0xff0099cc
900060ec:	ff006699 	.word	0xff006699
900060f0:	900044b9 	.word	0x900044b9
900060f4:	00070038 	.word	0x00070038
900060f8:	f00b fa06 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900060fc:	4bd8      	ldr	r3, [pc, #864]	; (90006460 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf34>)
        borderUp = borderColorReleased;
900060fe:	49d9      	ldr	r1, [pc, #868]	; (90006464 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
90006100:	f04f 0e00 	mov.w	lr, #0
        down = colorPressed;
90006104:	4ad8      	ldr	r2, [pc, #864]	; (90006468 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
        borderUp = borderColorReleased;
90006106:	f8c4 1390 	str.w	r1, [r4, #912]	; 0x390
        borderDown = borderColorPressed;
9000610a:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
9000610e:	f894 034c 	ldrb.w	r0, [r4, #844]	; 0x34c
        borderDown = borderColorPressed;
90006112:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90006116:	e9c4 e3d6 	strd	lr, r3, [r4, #856]	; 0x358
        borderSize = size;
9000611a:	2305      	movs	r3, #5
9000611c:	f8c4 1394 	str.w	r1, [r4, #916]	; 0x394
        handlePressedUpdated();
90006120:	f8d4 1320 	ldr.w	r1, [r4, #800]	; 0x320
90006124:	f8a4 3384 	strh.w	r3, [r4, #900]	; 0x384
        down = colorPressed;
90006128:	4bd0      	ldr	r3, [pc, #832]	; (9000646c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
9000612a:	e9c4 32e2 	strd	r3, r2, [r4, #904]	; 0x388
        borderBox.setColor(T::getPressed() ? down : up);
9000612e:	2800      	cmp	r0, #0
90006130:	f000 850e 	beq.w	90006b50 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1624>
        color = newColor;
90006134:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006136:	f504 7265 	add.w	r2, r4, #916	; 0x394
9000613a:	f8c4 337c 	str.w	r3, [r4, #892]	; 0x37c
9000613e:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006140:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
        alpha = newAlpha;
90006144:	2300      	movs	r3, #0
90006146:	f884 334d 	strb.w	r3, [r4, #845]	; 0x34d
        handleAlphaUpdated();
9000614a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
9000614e:	42b2      	cmp	r2, r6
90006150:	f040 854e 	bne.w	90006bf0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16c4>
        alpha = newAlpha;
90006154:	f884 337a 	strb.w	r3, [r4, #890]	; 0x37a
90006158:	4bc1      	ldr	r3, [pc, #772]	; (90006460 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf34>)
9000615a:	2700      	movs	r7, #0
9000615c:	48c4      	ldr	r0, [pc, #784]	; (90006470 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
9000615e:	9902      	ldr	r1, [sp, #8]
        action = &callback;
90006160:	f8c4 5350 	str.w	r5, [r4, #848]	; 0x350
90006164:	e9c4 03c9 	strd	r0, r3, [r4, #804]	; 0x324
90006168:	4650      	mov	r0, sl
9000616a:	f00b f9cd 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000616e:	4bc1      	ldr	r3, [pc, #772]	; (90006474 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
        borderUp = borderColorReleased;
90006170:	49bc      	ldr	r1, [pc, #752]	; (90006464 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
        down = colorPressed;
90006172:	4abd      	ldr	r2, [pc, #756]	; (90006468 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
        borderUp = borderColorReleased;
90006174:	f8c4 1408 	str.w	r1, [r4, #1032]	; 0x408
        borderDown = borderColorPressed;
90006178:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
9000617c:	f894 03c4 	ldrb.w	r0, [r4, #964]	; 0x3c4
        borderDown = borderColorPressed;
90006180:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006184:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
90006188:	e9c4 73f4 	strd	r7, r3, [r4, #976]	; 0x3d0
        borderSize = size;
9000618c:	2305      	movs	r3, #5
        borderDown = borderColorPressed;
9000618e:	f8c4 140c 	str.w	r1, [r4, #1036]	; 0x40c
        handlePressedUpdated();
90006192:	f8d4 1398 	ldr.w	r1, [r4, #920]	; 0x398
90006196:	f8a4 33fc 	strh.w	r3, [r4, #1020]	; 0x3fc
        up = colorReleased;
9000619a:	4bb4      	ldr	r3, [pc, #720]	; (9000646c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
9000619c:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
        borderBox.setColor(T::getPressed() ? down : up);
900061a0:	2800      	cmp	r0, #0
900061a2:	f000 84d1 	beq.w	90006b48 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x161c>
        color = newColor;
900061a6:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900061a8:	f204 420c 	addw	r2, r4, #1036	; 0x40c
900061ac:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
900061b0:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
900061b2:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
        alpha = newAlpha;
900061b6:	2300      	movs	r3, #0
900061b8:	f884 33c5 	strb.w	r3, [r4, #965]	; 0x3c5
        handleAlphaUpdated();
900061bc:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
900061c0:	42b2      	cmp	r2, r6
900061c2:	f040 8511 	bne.w	90006be8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16bc>
        alpha = newAlpha;
900061c6:	f884 33f2 	strb.w	r3, [r4, #1010]	; 0x3f2
900061ca:	4aab      	ldr	r2, [pc, #684]	; (90006478 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
900061cc:	4650      	mov	r0, sl
900061ce:	4ba9      	ldr	r3, [pc, #676]	; (90006474 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
900061d0:	9903      	ldr	r1, [sp, #12]
        action = &callback;
900061d2:	f8c4 53c8 	str.w	r5, [r4, #968]	; 0x3c8
900061d6:	e9c4 23e7 	strd	r2, r3, [r4, #924]	; 0x39c
900061da:	f00b f995 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900061de:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
900061e0:	49a0      	ldr	r1, [pc, #640]	; (90006464 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
900061e2:	f8c4 3448 	str.w	r3, [r4, #1096]	; 0x448
900061e6:	4ba5      	ldr	r3, [pc, #660]	; (9000647c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf50>)
900061e8:	f8c4 1480 	str.w	r1, [r4, #1152]	; 0x480
        borderDown = borderColorPressed;
900061ec:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
900061f0:	f8c4 344c 	str.w	r3, [r4, #1100]	; 0x44c
        borderSize = size;
900061f4:	2305      	movs	r3, #5
900061f6:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
900061fa:	4a9b      	ldr	r2, [pc, #620]	; (90006468 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
900061fc:	f8a4 3474 	strh.w	r3, [r4, #1140]	; 0x474
        borderBox.setColor(T::getPressed() ? down : up);
90006200:	f894 043c 	ldrb.w	r0, [r4, #1084]	; 0x43c
        up = colorReleased;
90006204:	4b99      	ldr	r3, [pc, #612]	; (9000646c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderDown = borderColorPressed;
90006206:	f8c4 1484 	str.w	r1, [r4, #1156]	; 0x484
        up = colorReleased;
9000620a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        handlePressedUpdated();
9000620e:	f8d4 1410 	ldr.w	r1, [r4, #1040]	; 0x410
        down = colorPressed;
90006212:	f8c4 247c 	str.w	r2, [r4, #1148]	; 0x47c
        borderBox.setColor(T::getPressed() ? down : up);
90006216:	2800      	cmp	r0, #0
90006218:	f000 8492 	beq.w	90006b40 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1614>
        color = newColor;
9000621c:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000621e:	f204 4284 	addw	r2, r4, #1156	; 0x484
90006222:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
90006226:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006228:	f8c4 3470 	str.w	r3, [r4, #1136]	; 0x470
        alpha = newAlpha;
9000622c:	2300      	movs	r3, #0
9000622e:	f884 343d 	strb.w	r3, [r4, #1085]	; 0x43d
        handleAlphaUpdated();
90006232:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006236:	42b2      	cmp	r2, r6
90006238:	f040 84d2 	bne.w	90006be0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16b4>
        alpha = newAlpha;
9000623c:	f884 346a 	strb.w	r3, [r4, #1130]	; 0x46a
90006240:	4b8f      	ldr	r3, [pc, #572]	; (90006480 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf54>)
90006242:	4650      	mov	r0, sl
90006244:	9904      	ldr	r1, [sp, #16]
90006246:	f8c4 3414 	str.w	r3, [r4, #1044]	; 0x414
9000624a:	4b8c      	ldr	r3, [pc, #560]	; (9000647c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf50>)
        action = &callback;
9000624c:	f8c4 5440 	str.w	r5, [r4, #1088]	; 0x440
90006250:	f8c4 3418 	str.w	r3, [r4, #1048]	; 0x418
90006254:	f00b f958 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006258:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
9000625a:	4982      	ldr	r1, [pc, #520]	; (90006464 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
9000625c:	f8c4 34c0 	str.w	r3, [r4, #1216]	; 0x4c0
90006260:	4b88      	ldr	r3, [pc, #544]	; (90006484 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf58>)
90006262:	f8c4 14f8 	str.w	r1, [r4, #1272]	; 0x4f8
        borderDown = borderColorPressed;
90006266:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
9000626a:	f8c4 34c4 	str.w	r3, [r4, #1220]	; 0x4c4
        borderSize = size;
9000626e:	2305      	movs	r3, #5
90006270:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006274:	4a7c      	ldr	r2, [pc, #496]	; (90006468 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006276:	f8a4 34ec 	strh.w	r3, [r4, #1260]	; 0x4ec
        borderBox.setColor(T::getPressed() ? down : up);
9000627a:	f894 04b4 	ldrb.w	r0, [r4, #1204]	; 0x4b4
        up = colorReleased;
9000627e:	4b7b      	ldr	r3, [pc, #492]	; (9000646c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderDown = borderColorPressed;
90006280:	f8c4 14fc 	str.w	r1, [r4, #1276]	; 0x4fc
        up = colorReleased;
90006284:	f8c4 34f0 	str.w	r3, [r4, #1264]	; 0x4f0
        handlePressedUpdated();
90006288:	f8d4 1488 	ldr.w	r1, [r4, #1160]	; 0x488
        down = colorPressed;
9000628c:	f8c4 24f4 	str.w	r2, [r4, #1268]	; 0x4f4
        borderBox.setColor(T::getPressed() ? down : up);
90006290:	2800      	cmp	r0, #0
90006292:	f000 8451 	beq.w	90006b38 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x160c>
        color = newColor;
90006296:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006298:	f204 42fc 	addw	r2, r4, #1276	; 0x4fc
9000629c:	f8c4 34e4 	str.w	r3, [r4, #1252]	; 0x4e4
900062a0:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
900062a2:	f8c4 34e8 	str.w	r3, [r4, #1256]	; 0x4e8
        alpha = newAlpha;
900062a6:	2300      	movs	r3, #0
900062a8:	f884 34b5 	strb.w	r3, [r4, #1205]	; 0x4b5
        handleAlphaUpdated();
900062ac:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
900062b0:	42b2      	cmp	r2, r6
900062b2:	f040 8491 	bne.w	90006bd8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16ac>
        alpha = newAlpha;
900062b6:	f884 34e2 	strb.w	r3, [r4, #1250]	; 0x4e2
900062ba:	4b73      	ldr	r3, [pc, #460]	; (90006488 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf5c>)
900062bc:	4650      	mov	r0, sl
900062be:	9905      	ldr	r1, [sp, #20]
900062c0:	f8c4 348c 	str.w	r3, [r4, #1164]	; 0x48c
900062c4:	4b6f      	ldr	r3, [pc, #444]	; (90006484 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf58>)
        action = &callback;
900062c6:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
900062ca:	f8c4 3490 	str.w	r3, [r4, #1168]	; 0x490
900062ce:	f00b f91b 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900062d2:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
900062d4:	4963      	ldr	r1, [pc, #396]	; (90006464 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
900062d6:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
900062da:	4b6c      	ldr	r3, [pc, #432]	; (9000648c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf60>)
900062dc:	f8c4 1570 	str.w	r1, [r4, #1392]	; 0x570
        borderDown = borderColorPressed;
900062e0:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
900062e4:	f8c4 353c 	str.w	r3, [r4, #1340]	; 0x53c
        borderSize = size;
900062e8:	2305      	movs	r3, #5
900062ea:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
900062ee:	4a5e      	ldr	r2, [pc, #376]	; (90006468 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
900062f0:	f8a4 3564 	strh.w	r3, [r4, #1380]	; 0x564
        borderBox.setColor(T::getPressed() ? down : up);
900062f4:	f894 052c 	ldrb.w	r0, [r4, #1324]	; 0x52c
        up = colorReleased;
900062f8:	4b5c      	ldr	r3, [pc, #368]	; (9000646c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderDown = borderColorPressed;
900062fa:	f8c4 1574 	str.w	r1, [r4, #1396]	; 0x574
        up = colorReleased;
900062fe:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
        handlePressedUpdated();
90006302:	f8d4 1500 	ldr.w	r1, [r4, #1280]	; 0x500
        down = colorPressed;
90006306:	f8c4 256c 	str.w	r2, [r4, #1388]	; 0x56c
        borderBox.setColor(T::getPressed() ? down : up);
9000630a:	2800      	cmp	r0, #0
9000630c:	f000 8410 	beq.w	90006b30 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1604>
        color = newColor;
90006310:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006312:	f204 5274 	addw	r2, r4, #1396	; 0x574
90006316:	f8c4 355c 	str.w	r3, [r4, #1372]	; 0x55c
9000631a:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
9000631c:	f8c4 3560 	str.w	r3, [r4, #1376]	; 0x560
        alpha = newAlpha;
90006320:	2300      	movs	r3, #0
90006322:	f884 352d 	strb.w	r3, [r4, #1325]	; 0x52d
        handleAlphaUpdated();
90006326:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
9000632a:	42b2      	cmp	r2, r6
9000632c:	f040 843b 	bne.w	90006ba6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x167a>
        alpha = newAlpha;
90006330:	f884 355a 	strb.w	r3, [r4, #1370]	; 0x55a
90006334:	4b56      	ldr	r3, [pc, #344]	; (90006490 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
90006336:	4650      	mov	r0, sl
90006338:	4e54      	ldr	r6, [pc, #336]	; (9000648c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf60>)
9000633a:	9906      	ldr	r1, [sp, #24]
9000633c:	f8c4 3504 	str.w	r3, [r4, #1284]	; 0x504
        action = &callback;
90006340:	f8c4 5530 	str.w	r5, [r4, #1328]	; 0x530
90006344:	f8c4 6508 	str.w	r6, [r4, #1288]	; 0x508
90006348:	f00b f8de 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
9000634c:	4945      	ldr	r1, [pc, #276]	; (90006464 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
9000634e:	2300      	movs	r3, #0
        down = colorPressed;
90006350:	4a45      	ldr	r2, [pc, #276]	; (90006468 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
        borderUp = borderColorReleased;
90006352:	f8c4 15e8 	str.w	r1, [r4, #1512]	; 0x5e8
        borderDown = borderColorPressed;
90006356:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
9000635a:	f8c4 35b0 	str.w	r3, [r4, #1456]	; 0x5b0
        borderSize = size;
9000635e:	2305      	movs	r3, #5
90006360:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90006364:	f8c4 65b4 	str.w	r6, [r4, #1460]	; 0x5b4
90006368:	f8a4 35dc 	strh.w	r3, [r4, #1500]	; 0x5dc
9000636c:	f8c4 15ec 	str.w	r1, [r4, #1516]	; 0x5ec
        up = colorReleased;
90006370:	4b3e      	ldr	r3, [pc, #248]	; (9000646c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderBox.setColor(T::getPressed() ? down : up);
90006372:	f894 15a4 	ldrb.w	r1, [r4, #1444]	; 0x5a4
        up = colorReleased;
90006376:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
        down = colorPressed;
9000637a:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
        borderBox.setColor(T::getPressed() ? down : up);
9000637e:	2900      	cmp	r1, #0
90006380:	f000 83d3 	beq.w	90006b2a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15fe>
        color = newColor;
90006384:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006386:	f204 52ec 	addw	r2, r4, #1516	; 0x5ec
9000638a:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
        alpha = newAlpha;
9000638e:	2600      	movs	r6, #0
90006390:	6813      	ldr	r3, [r2, #0]
90006392:	4650      	mov	r0, sl
90006394:	9907      	ldr	r1, [sp, #28]
        borderColor = colorBorder;
90006396:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
9000639a:	4b3e      	ldr	r3, [pc, #248]	; (90006494 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf68>)
        action = &callback;
9000639c:	f8c4 55a8 	str.w	r5, [r4, #1448]	; 0x5a8
900063a0:	f8c4 357c 	str.w	r3, [r4, #1404]	; 0x57c
900063a4:	4b39      	ldr	r3, [pc, #228]	; (9000648c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf60>)
        alpha = newAlpha;
900063a6:	f884 65a5 	strb.w	r6, [r4, #1445]	; 0x5a5
900063aa:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
        alpha = newAlpha;
900063ae:	f884 65d2 	strb.w	r6, [r4, #1490]	; 0x5d2
900063b2:	f00b f8a9 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
900063b6:	492b      	ldr	r1, [pc, #172]	; (90006464 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
900063b8:	4b37      	ldr	r3, [pc, #220]	; (90006498 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf6c>)
900063ba:	f8c4 1660 	str.w	r1, [r4, #1632]	; 0x660
        borderDown = borderColorPressed;
900063be:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
900063c2:	f8c4 362c 	str.w	r3, [r4, #1580]	; 0x62c
        borderSize = size;
900063c6:	2305      	movs	r3, #5
900063c8:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
900063cc:	4a26      	ldr	r2, [pc, #152]	; (90006468 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
900063ce:	f8a4 3654 	strh.w	r3, [r4, #1620]	; 0x654
        borderDown = borderColorPressed;
900063d2:	f8c4 1664 	str.w	r1, [r4, #1636]	; 0x664
        up = colorReleased;
900063d6:	4b25      	ldr	r3, [pc, #148]	; (9000646c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderBox.setColor(T::getPressed() ? down : up);
900063d8:	f894 161c 	ldrb.w	r1, [r4, #1564]	; 0x61c
900063dc:	f8c4 6628 	str.w	r6, [r4, #1576]	; 0x628
        up = colorReleased;
900063e0:	f8c4 3658 	str.w	r3, [r4, #1624]	; 0x658
        down = colorPressed;
900063e4:	f8c4 265c 	str.w	r2, [r4, #1628]	; 0x65c
        borderBox.setColor(T::getPressed() ? down : up);
900063e8:	2900      	cmp	r1, #0
900063ea:	f000 839b 	beq.w	90006b24 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15f8>
        color = newColor;
900063ee:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900063f0:	f204 6264 	addw	r2, r4, #1636	; 0x664
900063f4:	f8c4 364c 	str.w	r3, [r4, #1612]	; 0x64c
900063f8:	2600      	movs	r6, #0
900063fa:	6813      	ldr	r3, [r2, #0]
900063fc:	4650      	mov	r0, sl
900063fe:	4f26      	ldr	r7, [pc, #152]	; (90006498 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf6c>)
        borderColor = colorBorder;
90006400:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
90006404:	4b25      	ldr	r3, [pc, #148]	; (9000649c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf70>)
90006406:	9908      	ldr	r1, [sp, #32]
90006408:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
        action = &callback;
9000640c:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
        alpha = newAlpha;
90006410:	f884 661d 	strb.w	r6, [r4, #1565]	; 0x61d
        alpha = newAlpha;
90006414:	f884 664a 	strb.w	r6, [r4, #1610]	; 0x64a
90006418:	f8c4 75f8 	str.w	r7, [r4, #1528]	; 0x5f8
9000641c:	f00b f874 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90006420:	4910      	ldr	r1, [pc, #64]	; (90006464 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
        borderSize = size;
90006422:	2305      	movs	r3, #5
        down = colorPressed;
90006424:	4a10      	ldr	r2, [pc, #64]	; (90006468 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
        borderUp = borderColorReleased;
90006426:	f8c4 16d8 	str.w	r1, [r4, #1752]	; 0x6d8
        borderDown = borderColorPressed;
9000642a:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
9000642e:	f8a4 36cc 	strh.w	r3, [r4, #1740]	; 0x6cc
90006432:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        up = colorReleased;
90006436:	4b0d      	ldr	r3, [pc, #52]	; (9000646c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006438:	f8c4 66a0 	str.w	r6, [r4, #1696]	; 0x6a0
        borderDown = borderColorPressed;
9000643c:	f8c4 16dc 	str.w	r1, [r4, #1756]	; 0x6dc
        borderBox.setColor(T::getPressed() ? down : up);
90006440:	f894 1694 	ldrb.w	r1, [r4, #1684]	; 0x694
90006444:	f8c4 76a4 	str.w	r7, [r4, #1700]	; 0x6a4
        up = colorReleased;
90006448:	f8c4 36d0 	str.w	r3, [r4, #1744]	; 0x6d0
        down = colorPressed;
9000644c:	f8c4 26d4 	str.w	r2, [r4, #1748]	; 0x6d4
        borderBox.setColor(T::getPressed() ? down : up);
90006450:	2900      	cmp	r1, #0
90006452:	f000 8364 	beq.w	90006b1e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15f2>
        color = newColor;
90006456:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006458:	f204 62dc 	addw	r2, r4, #1756	; 0x6dc
9000645c:	e020      	b.n	900064a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf74>
9000645e:	bf00      	nop
90006460:	00610064 	.word	0x00610064
90006464:	ff003366 	.word	0xff003366
90006468:	ff0099cc 	.word	0xff0099cc
9000646c:	ff006699 	.word	0xff006699
90006470:	00580038 	.word	0x00580038
90006474:	00610070 	.word	0x00610070
90006478:	0058012e 	.word	0x0058012e
9000647c:	0061007c 	.word	0x0061007c
90006480:	005800a7 	.word	0x005800a7
90006484:	00470064 	.word	0x00470064
90006488:	00c20038 	.word	0x00c20038
9000648c:	0047007c 	.word	0x0047007c
90006490:	000700a7 	.word	0x000700a7
90006494:	00c200a7 	.word	0x00c200a7
90006498:	00470071 	.word	0x00470071
9000649c:	0007012e 	.word	0x0007012e
900064a0:	f8c4 36c4 	str.w	r3, [r4, #1732]	; 0x6c4
900064a4:	2705      	movs	r7, #5
900064a6:	6813      	ldr	r3, [r2, #0]
900064a8:	4650      	mov	r0, sl
        action = &callback;
900064aa:	f8c4 5698 	str.w	r5, [r4, #1688]	; 0x698
        alpha = newAlpha;
900064ae:	2500      	movs	r5, #0
        borderColor = colorBorder;
900064b0:	f8c4 36c8 	str.w	r3, [r4, #1736]	; 0x6c8
900064b4:	f04f 1650 	mov.w	r6, #5242960	; 0x500050
900064b8:	4bef      	ldr	r3, [pc, #956]	; (90006878 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x134c>)
900064ba:	9909      	ldr	r1, [sp, #36]	; 0x24
900064bc:	f8c4 366c 	str.w	r3, [r4, #1644]	; 0x66c
900064c0:	4bee      	ldr	r3, [pc, #952]	; (9000687c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1350>)
900064c2:	f884 5695 	strb.w	r5, [r4, #1685]	; 0x695
900064c6:	f8c4 3670 	str.w	r3, [r4, #1648]	; 0x670
        alpha = newAlpha;
900064ca:	f884 56c2 	strb.w	r5, [r4, #1730]	; 0x6c2
900064ce:	f00b f81b 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900064d2:	4648      	mov	r0, r9
900064d4:	a926      	add	r1, sp, #152	; 0x98
900064d6:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
900064da:	f00d ff7e 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900064de:	4be8      	ldr	r3, [pc, #928]	; (90006880 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1354>)
    pos1_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900064e0:	4648      	mov	r0, r9
900064e2:	4629      	mov	r1, r5
900064e4:	f8c4 36e4 	str.w	r3, [r4, #1764]	; 0x6e4
900064e8:	f8c4 66e8 	str.w	r6, [r4, #1768]	; 0x6e8
900064ec:	f00c fef5 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900064f0:	4649      	mov	r1, r9
900064f2:	4650      	mov	r0, sl
        visible = vis;
900064f4:	f884 5705 	strb.w	r5, [r4, #1797]	; 0x705
900064f8:	f00b f806 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900064fc:	ed9d 8a0a 	vldr	s16, [sp, #40]	; 0x28
90006500:	f04f 0906 	mov.w	r9, #6
90006504:	a926      	add	r1, sp, #152	; 0x98
90006506:	ee18 0a10 	vmov	r0, s16
9000650a:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
9000650e:	f00d ff64 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
90006512:	4bdb      	ldr	r3, [pc, #876]	; (90006880 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1354>)
    pos1_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006514:	ee18 0a10 	vmov	r0, s16
90006518:	4629      	mov	r1, r5
9000651a:	f8c4 6714 	str.w	r6, [r4, #1812]	; 0x714
9000651e:	f8c4 3710 	str.w	r3, [r4, #1808]	; 0x710
90006522:	f00c feda 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006526:	ee18 1a10 	vmov	r1, s16
9000652a:	4650      	mov	r0, sl
        visible = vis;
9000652c:	f884 5731 	strb.w	r5, [r4, #1841]	; 0x731
90006530:	f00a ffea 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006534:	ed9d 8a0b 	vldr	s16, [sp, #44]	; 0x2c
90006538:	a926      	add	r1, sp, #152	; 0x98
9000653a:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
9000653e:	ee18 0a10 	vmov	r0, s16
90006542:	f00d ff4a 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
90006546:	4bcf      	ldr	r3, [pc, #828]	; (90006884 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1358>)
    pos2_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006548:	ee18 0a10 	vmov	r0, s16
9000654c:	4629      	mov	r1, r5
9000654e:	f8c4 373c 	str.w	r3, [r4, #1852]	; 0x73c
90006552:	f8c4 6740 	str.w	r6, [r4, #1856]	; 0x740
90006556:	f00c fec0 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000655a:	ee18 1a10 	vmov	r1, s16
9000655e:	4650      	mov	r0, sl
        visible = vis;
90006560:	f884 575d 	strb.w	r5, [r4, #1885]	; 0x75d
90006564:	f00a ffd0 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006568:	4640      	mov	r0, r8
9000656a:	a926      	add	r1, sp, #152	; 0x98
9000656c:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90006570:	f00d ff33 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
90006574:	4bc3      	ldr	r3, [pc, #780]	; (90006884 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1358>)
    pos2_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006576:	4640      	mov	r0, r8
90006578:	4629      	mov	r1, r5
9000657a:	f8c4 3768 	str.w	r3, [r4, #1896]	; 0x768
9000657e:	f8c4 676c 	str.w	r6, [r4, #1900]	; 0x76c
90006582:	f00c feaa 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006586:	4641      	mov	r1, r8
90006588:	4650      	mov	r0, sl
        visible = vis;
9000658a:	f884 5789 	strb.w	r5, [r4, #1929]	; 0x789
9000658e:	f00a ffbb 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006592:	ed9d 8a0c 	vldr	s16, [sp, #48]	; 0x30
        rect.x = x;
90006596:	f8df 82f8 	ldr.w	r8, [pc, #760]	; 90006890 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1364>
9000659a:	a926      	add	r1, sp, #152	; 0x98
9000659c:	ee18 0a10 	vmov	r0, s16
900065a0:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
900065a4:	f00d ff19 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900065a8:	ee18 0a10 	vmov	r0, s16
900065ac:	4629      	mov	r1, r5
900065ae:	f8c4 8794 	str.w	r8, [r4, #1940]	; 0x794
900065b2:	f8c4 6798 	str.w	r6, [r4, #1944]	; 0x798
900065b6:	f00c fe90 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900065ba:	ee18 1a10 	vmov	r1, s16
900065be:	4650      	mov	r0, sl
        visible = vis;
900065c0:	f884 57b5 	strb.w	r5, [r4, #1973]	; 0x7b5
900065c4:	f00a ffa0 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900065c8:	ed9d 8a0d 	vldr	s16, [sp, #52]	; 0x34
900065cc:	a926      	add	r1, sp, #152	; 0x98
900065ce:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
900065d2:	ee18 0a10 	vmov	r0, s16
900065d6:	f00d ff00 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900065da:	ee18 0a10 	vmov	r0, s16
900065de:	4629      	mov	r1, r5
        rect.x = x;
900065e0:	f8c4 87c0 	str.w	r8, [r4, #1984]	; 0x7c0
900065e4:	f8c4 67c4 	str.w	r6, [r4, #1988]	; 0x7c4
900065e8:	f00c fe77 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900065ec:	ee18 1a10 	vmov	r1, s16
900065f0:	4650      	mov	r0, sl
        visible = vis;
900065f2:	f884 57e1 	strb.w	r5, [r4, #2017]	; 0x7e1
900065f6:	f00a ff87 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900065fa:	ed9d 8a0e 	vldr	s16, [sp, #56]	; 0x38
        rect.x = x;
900065fe:	f8df 8294 	ldr.w	r8, [pc, #660]	; 90006894 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1368>
90006602:	a926      	add	r1, sp, #152	; 0x98
90006604:	ee18 0a10 	vmov	r0, s16
90006608:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
9000660c:	f00d fee5 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006610:	ee18 0a10 	vmov	r0, s16
90006614:	4629      	mov	r1, r5
90006616:	f8c4 87ec 	str.w	r8, [r4, #2028]	; 0x7ec
9000661a:	f8c4 67f0 	str.w	r6, [r4, #2032]	; 0x7f0
9000661e:	f00c fe5c 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006622:	ee18 1a10 	vmov	r1, s16
90006626:	4650      	mov	r0, sl
        visible = vis;
90006628:	f884 580d 	strb.w	r5, [r4, #2061]	; 0x80d
9000662c:	f00a ff6c 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006630:	ed9d 8a0f 	vldr	s16, [sp, #60]	; 0x3c
90006634:	a926      	add	r1, sp, #152	; 0x98
90006636:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
9000663a:	ee18 0a10 	vmov	r0, s16
9000663e:	f00d fecc 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006642:	ee18 0a10 	vmov	r0, s16
90006646:	4629      	mov	r1, r5
        rect.x = x;
90006648:	f8c4 8818 	str.w	r8, [r4, #2072]	; 0x818
9000664c:	f8c4 681c 	str.w	r6, [r4, #2076]	; 0x81c
90006650:	f108 087a 	add.w	r8, r8, #122	; 0x7a
90006654:	f00c fe41 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006658:	ee18 1a10 	vmov	r1, s16
9000665c:	4650      	mov	r0, sl
        visible = vis;
9000665e:	f884 5839 	strb.w	r5, [r4, #2105]	; 0x839
90006662:	f00a ff51 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006666:	ed9d 8a10 	vldr	s16, [sp, #64]	; 0x40
9000666a:	a926      	add	r1, sp, #152	; 0x98
9000666c:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
90006670:	ee18 0a10 	vmov	r0, s16
90006674:	f00d feb1 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006678:	ee18 0a10 	vmov	r0, s16
9000667c:	4629      	mov	r1, r5
        rect.x = x;
9000667e:	f8c4 8844 	str.w	r8, [r4, #2116]	; 0x844
90006682:	f8c4 6848 	str.w	r6, [r4, #2120]	; 0x848
90006686:	f00c fe28 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000668a:	ee18 1a10 	vmov	r1, s16
9000668e:	4650      	mov	r0, sl
        visible = vis;
90006690:	f884 5865 	strb.w	r5, [r4, #2149]	; 0x865
90006694:	f00a ff38 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006698:	ed9d 8a11 	vldr	s16, [sp, #68]	; 0x44
9000669c:	a926      	add	r1, sp, #152	; 0x98
9000669e:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
900066a2:	ee18 0a10 	vmov	r0, s16
900066a6:	f00d fe98 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900066aa:	ee18 0a10 	vmov	r0, s16
900066ae:	4629      	mov	r1, r5
        rect.x = x;
900066b0:	f8c4 8870 	str.w	r8, [r4, #2160]	; 0x870
900066b4:	f8c4 6874 	str.w	r6, [r4, #2164]	; 0x874
900066b8:	f108 0876 	add.w	r8, r8, #118	; 0x76
900066bc:	f00c fe0d 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900066c0:	ee18 1a10 	vmov	r1, s16
900066c4:	4650      	mov	r0, sl
        visible = vis;
900066c6:	f884 5891 	strb.w	r5, [r4, #2193]	; 0x891
900066ca:	f00a ff1d 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900066ce:	ed9d 8a12 	vldr	s16, [sp, #72]	; 0x48
900066d2:	a926      	add	r1, sp, #152	; 0x98
900066d4:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
900066d8:	ee18 0a10 	vmov	r0, s16
900066dc:	f00d fe7d 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900066e0:	ee18 0a10 	vmov	r0, s16
900066e4:	4629      	mov	r1, r5
        rect.x = x;
900066e6:	f8c4 889c 	str.w	r8, [r4, #2204]	; 0x89c
900066ea:	f8c4 68a0 	str.w	r6, [r4, #2208]	; 0x8a0
900066ee:	f00c fdf4 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900066f2:	ee18 1a10 	vmov	r1, s16
900066f6:	4650      	mov	r0, sl
        visible = vis;
900066f8:	f884 58bd 	strb.w	r5, [r4, #2237]	; 0x8bd
900066fc:	f00a ff04 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006700:	ed9d 8a13 	vldr	s16, [sp, #76]	; 0x4c
90006704:	a926      	add	r1, sp, #152	; 0x98
90006706:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
9000670a:	ee18 0a10 	vmov	r0, s16
9000670e:	f00d fe64 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006712:	ee18 0a10 	vmov	r0, s16
90006716:	4629      	mov	r1, r5
        rect.x = x;
90006718:	f8c4 88c8 	str.w	r8, [r4, #2248]	; 0x8c8
9000671c:	f8c4 68cc 	str.w	r6, [r4, #2252]	; 0x8cc
90006720:	f00c fddb 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006724:	ee18 1a10 	vmov	r1, s16
90006728:	4650      	mov	r0, sl
        visible = vis;
9000672a:	f884 58e9 	strb.w	r5, [r4, #2281]	; 0x8e9
9000672e:	f00a feeb 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006732:	ed9d 8a14 	vldr	s16, [sp, #80]	; 0x50
        rect.x = x;
90006736:	f8df 8160 	ldr.w	r8, [pc, #352]	; 90006898 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x136c>
9000673a:	a926      	add	r1, sp, #152	; 0x98
9000673c:	ee18 0a10 	vmov	r0, s16
90006740:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90006744:	f00d fe49 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006748:	ee18 0a10 	vmov	r0, s16
9000674c:	4629      	mov	r1, r5
9000674e:	f8c4 88f4 	str.w	r8, [r4, #2292]	; 0x8f4
90006752:	f8c4 68f8 	str.w	r6, [r4, #2296]	; 0x8f8
90006756:	f00c fdc0 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000675a:	ee18 1a10 	vmov	r1, s16
9000675e:	4650      	mov	r0, sl
        visible = vis;
90006760:	f884 5915 	strb.w	r5, [r4, #2325]	; 0x915
90006764:	f00a fed0 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006768:	ed9d 8a15 	vldr	s16, [sp, #84]	; 0x54
9000676c:	a926      	add	r1, sp, #152	; 0x98
9000676e:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
90006772:	ee18 0a10 	vmov	r0, s16
90006776:	f00d fe30 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000677a:	ee18 0a10 	vmov	r0, s16
9000677e:	4629      	mov	r1, r5
        rect.x = x;
90006780:	f8c4 8920 	str.w	r8, [r4, #2336]	; 0x920
90006784:	f8c4 6924 	str.w	r6, [r4, #2340]	; 0x924
90006788:	f108 087e 	add.w	r8, r8, #126	; 0x7e
9000678c:	f00c fda5 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006790:	ee18 1a10 	vmov	r1, s16
90006794:	4650      	mov	r0, sl
        visible = vis;
90006796:	f884 5941 	strb.w	r5, [r4, #2369]	; 0x941
9000679a:	f00a feb5 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000679e:	ed9d 8a16 	vldr	s16, [sp, #88]	; 0x58
900067a2:	a926      	add	r1, sp, #152	; 0x98
900067a4:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
900067a8:	ee18 0a10 	vmov	r0, s16
900067ac:	f00d fe15 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900067b0:	ee18 0a10 	vmov	r0, s16
900067b4:	4629      	mov	r1, r5
        rect.x = x;
900067b6:	f8c4 894c 	str.w	r8, [r4, #2380]	; 0x94c
900067ba:	f8c4 6950 	str.w	r6, [r4, #2384]	; 0x950
900067be:	f00c fd8c 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900067c2:	ee18 1a10 	vmov	r1, s16
900067c6:	4650      	mov	r0, sl
        visible = vis;
900067c8:	f884 596d 	strb.w	r5, [r4, #2413]	; 0x96d
900067cc:	f00a fe9c 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900067d0:	ed9d 8a17 	vldr	s16, [sp, #92]	; 0x5c
900067d4:	a926      	add	r1, sp, #152	; 0x98
900067d6:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
900067da:	ee18 0a10 	vmov	r0, s16
900067de:	f00d fdfc 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900067e2:	4629      	mov	r1, r5
900067e4:	ee18 0a10 	vmov	r0, s16
        rect.x = x;
900067e8:	f8c4 8978 	str.w	r8, [r4, #2424]	; 0x978
900067ec:	f8c4 697c 	str.w	r6, [r4, #2428]	; 0x97c
900067f0:	f00c fd73 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900067f4:	ee18 1a10 	vmov	r1, s16
900067f8:	4650      	mov	r0, sl
        visible = vis;
900067fa:	f884 5999 	strb.w	r5, [r4, #2457]	; 0x999
900067fe:	f00a fe83 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos9_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006802:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
90006806:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
9000680a:	a926      	add	r1, sp, #152	; 0x98
        rect.x = x;
9000680c:	4f1e      	ldr	r7, [pc, #120]	; (90006888 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x135c>)
9000680e:	4640      	mov	r0, r8
90006810:	f00d fde3 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006814:	4640      	mov	r0, r8
90006816:	4629      	mov	r1, r5
90006818:	f8c4 79a4 	str.w	r7, [r4, #2468]	; 0x9a4
9000681c:	f8c4 69a8 	str.w	r6, [r4, #2472]	; 0x9a8
90006820:	f00c fd5b 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006824:	4641      	mov	r1, r8
90006826:	4650      	mov	r0, sl
        visible = vis;
90006828:	f884 59c5 	strb.w	r5, [r4, #2501]	; 0x9c5
9000682c:	f00a fe6c 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos9_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006830:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
90006834:	a926      	add	r1, sp, #152	; 0x98
90006836:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
9000683a:	4640      	mov	r0, r8
        boundingArea = calculateBoundingArea();
9000683c:	f604 29e4 	addw	r9, r4, #2788	; 0xae4
90006840:	f00d fdcb 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006844:	4640      	mov	r0, r8
90006846:	4629      	mov	r1, r5
        rect.x = x;
90006848:	f8c4 79d0 	str.w	r7, [r4, #2512]	; 0x9d0
9000684c:	f8c4 69d4 	str.w	r6, [r4, #2516]	; 0x9d4
    lbl_result.setPosition(100, 142, 258, 24);
90006850:	f604 27a8 	addw	r7, r4, #2728	; 0xaa8
    pos9_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006854:	f00c fd41 	bl	900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006858:	4641      	mov	r1, r8
9000685a:	4650      	mov	r0, sl
        visible = vis;
9000685c:	f884 59f1 	strb.w	r5, [r4, #2545]	; 0x9f1
90006860:	f00a fe52 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90006864:	4b09      	ldr	r3, [pc, #36]	; (9000688c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1360>)
90006866:	f604 11f8 	addw	r1, r4, #2552	; 0x9f8
9000686a:	4650      	mov	r0, sl
9000686c:	f8c4 39fc 	str.w	r3, [r4, #2556]	; 0x9fc
        boundingArea = calculateBoundingArea();
90006870:	f10d 0878 	add.w	r8, sp, #120	; 0x78
90006874:	e012      	b.n	9000689c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1370>
90006876:	bf00      	nop
90006878:	00c2012e 	.word	0x00c2012e
9000687c:	00470071 	.word	0x00470071
90006880:	fffe0042 	.word	0xfffe0042
90006884:	fffe00bc 	.word	0xfffe00bc
90006888:	00c30132 	.word	0x00c30132
9000688c:	003f006a 	.word	0x003f006a
90006890:	fffe0132 	.word	0xfffe0132
90006894:	00600042 	.word	0x00600042
90006898:	00c30042 	.word	0x00c30042
9000689c:	4bc4      	ldr	r3, [pc, #784]	; (90006bb0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1684>)
        color = newColor;
9000689e:	f04f 36ff 	mov.w	r6, #4294967295
        visible = vis;
900068a2:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
        rect.x = x;
900068a6:	f8c4 3a00 	str.w	r3, [r4, #2560]	; 0xa00
        color = newColor;
900068aa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
900068ae:	f8c4 3a20 	str.w	r3, [r4, #2592]	; 0xa20
900068b2:	f00a fe29 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900068b6:	4bbf      	ldr	r3, [pc, #764]	; (90006bb4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1688>)
        boundingArea = calculateBoundingArea();
900068b8:	4659      	mov	r1, fp
900068ba:	4640      	mov	r0, r8
900068bc:	f8c4 3a28 	str.w	r3, [r4, #2600]	; 0xa28
        color = newColor;
900068c0:	4bbd      	ldr	r3, [pc, #756]	; (90006bb8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x168c>)
        linespace = space;
900068c2:	f8a4 5a58 	strh.w	r5, [r4, #2648]	; 0xa58
        color = newColor;
900068c6:	f8c4 3a54 	str.w	r3, [r4, #2644]	; 0xa54
        boundingArea = calculateBoundingArea();
900068ca:	f00c fff5 	bl	900138b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900068ce:	2204      	movs	r2, #4
900068d0:	4bba      	ldr	r3, [pc, #744]	; (90006bbc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1690>)
900068d2:	f8ad 209c 	strh.w	r2, [sp, #156]	; 0x9c
    Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LKZS).getText());
900068d6:	f504 6234 	add.w	r2, r4, #2880	; 0xb40
900068da:	9326      	str	r3, [sp, #152]	; 0x98
900068dc:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
900068e0:	9202      	str	r2, [sp, #8]
900068e2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
900068e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FP7G));
900068ea:	a926      	add	r1, sp, #152	; 0x98
900068ec:	4658      	mov	r0, fp
900068ee:	f00d fa8b 	bl	90013e08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900068f2:	4659      	mov	r1, fp
900068f4:	4650      	mov	r0, sl
        visible = vis;
900068f6:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
900068fa:	f00a fe05 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
900068fe:	ab26      	add	r3, sp, #152	; 0x98
90006900:	aa24      	add	r2, sp, #144	; 0x90
90006902:	a923      	add	r1, sp, #140	; 0x8c
90006904:	9300      	str	r3, [sp, #0]
90006906:	f04f 0301 	mov.w	r3, #1
9000690a:	ee1b 0a10 	vmov	r0, s22
9000690e:	f8ad 508c 	strh.w	r5, [sp, #140]	; 0x8c
90006912:	f8ad 3090 	strh.w	r3, [sp, #144]	; 0x90
        rect.x = x;
90006916:	f04f 130c 	mov.w	r3, #786444	; 0xc000c
9000691a:	f8c4 3a70 	str.w	r3, [r4, #2672]	; 0xa70
9000691e:	230b      	movs	r3, #11
90006920:	f8ad 3094 	strh.w	r3, [sp, #148]	; 0x94
90006924:	f8ad 3098 	strh.w	r3, [sp, #152]	; 0x98
90006928:	ab25      	add	r3, sp, #148	; 0x94
9000692a:	f00d fc99 	bl	90014260 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    btn_back.setAction(buttonCallback);
9000692e:	f242 73ac 	movw	r3, #10156	; 0x27ac
90006932:	ee1b 1a10 	vmov	r1, s22
90006936:	4650      	mov	r0, sl
90006938:	4423      	add	r3, r4
        visible = vis;
9000693a:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
9000693e:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
90006942:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90006946:	f8c4 3aa4 	str.w	r3, [r4, #2724]	; 0xaa4
9000694a:	f00a fddd 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
9000694e:	4b9c      	ldr	r3, [pc, #624]	; (90006bc0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1694>)
        boundingArea = calculateBoundingArea();
90006950:	4639      	mov	r1, r7
90006952:	4640      	mov	r0, r8
90006954:	f8c4 3aac 	str.w	r3, [r4, #2732]	; 0xaac
        rect.width = width;
90006958:	f44f 7381 	mov.w	r3, #258	; 0x102
9000695c:	f8a4 3ab0 	strh.w	r3, [r4, #2736]	; 0xab0
90006960:	f7fe f834 	bl	900049cc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
90006964:	2318      	movs	r3, #24
90006966:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
9000696a:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
9000696e:	4639      	mov	r1, r7
90006970:	4640      	mov	r0, r8
90006972:	f8a4 3ab2 	strh.w	r3, [r4, #2738]	; 0xab2
90006976:	f7fe f829 	bl	900049cc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000697a:	4b92      	ldr	r3, [pc, #584]	; (90006bc4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1698>)
9000697c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
90006980:	681b      	ldr	r3, [r3, #0]
90006982:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        color = newColor;
90006986:	f8c4 6ad8 	str.w	r6, [r4, #2776]	; 0xad8
        linespace = space;
9000698a:	f8a4 5adc 	strh.w	r5, [r4, #2780]	; 0xadc
        boundingArea = calculateBoundingArea();
9000698e:	f8c4 5ae4 	str.w	r5, [r4, #2788]	; 0xae4
90006992:	f8c4 6ae8 	str.w	r6, [r4, #2792]	; 0xae8
90006996:	f8c4 5aec 	str.w	r5, [r4, #2796]	; 0xaec
9000699a:	2b00      	cmp	r3, #0
9000699c:	f000 8131 	beq.w	90006c02 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16d6>
        return typedTextId < numberOfTypedTexts;
900069a0:	f8df 9230 	ldr.w	r9, [pc, #560]	; 90006bd4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16a8>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900069a4:	f8b9 3000 	ldrh.w	r3, [r9]
900069a8:	2b02      	cmp	r3, #2
900069aa:	f240 8130 	bls.w	90006c0e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16e2>
        return texts->getText(typedTextId);
900069ae:	4b86      	ldr	r3, [pc, #536]	; (90006bc8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x169c>)
900069b0:	2102      	movs	r1, #2
    lbl_turn.setXY(337, 0);
900069b2:	f604 28f4 	addw	r8, r4, #2804	; 0xaf4
    Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_29C0).getText());
900069b6:	f604 3b68 	addw	fp, r4, #2920	; 0xb68
900069ba:	6818      	ldr	r0, [r3, #0]
900069bc:	f7fd fd16 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LKZS).getText());
900069c0:	4a82      	ldr	r2, [pc, #520]	; (90006bcc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16a0>)
900069c2:	4603      	mov	r3, r0
900069c4:	2114      	movs	r1, #20
900069c6:	9802      	ldr	r0, [sp, #8]
900069c8:	f013 fae6 	bl	90019f98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
900069cc:	9a02      	ldr	r2, [sp, #8]
        : typedTextId(id)
900069ce:	2303      	movs	r3, #3
    lbl_result.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DOP9));
900069d0:	a926      	add	r1, sp, #152	; 0x98
900069d2:	f8c4 2af0 	str.w	r2, [r4, #2800]	; 0xaf0
900069d6:	4638      	mov	r0, r7
900069d8:	4a78      	ldr	r2, [pc, #480]	; (90006bbc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1690>)
900069da:	f8ad 309c 	strh.w	r3, [sp, #156]	; 0x9c
900069de:	9226      	str	r2, [sp, #152]	; 0x98
900069e0:	f00d fa12 	bl	90013e08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900069e4:	4639      	mov	r1, r7
900069e6:	4650      	mov	r0, sl
        visible = vis;
900069e8:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
900069ec:	f00a fd8c 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900069f0:	4974      	ldr	r1, [pc, #464]	; (90006bc4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1698>)
        rect.x = x;
900069f2:	f240 1251 	movw	r2, #337	; 0x151
        color = newColor;
900069f6:	f8c4 6b24 	str.w	r6, [r4, #2852]	; 0xb24
900069fa:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
900069fc:	f8c4 6b34 	str.w	r6, [r4, #2868]	; 0xb34
        linespace = space;
90006a00:	f8a4 5b28 	strh.w	r5, [r4, #2856]	; 0xb28
        boundingArea = calculateBoundingArea();
90006a04:	f8c4 5b30 	str.w	r5, [r4, #2864]	; 0xb30
90006a08:	f8c4 5b38 	str.w	r5, [r4, #2872]	; 0xb38
90006a0c:	f8c4 2af8 	str.w	r2, [r4, #2808]	; 0xaf8
90006a10:	2b00      	cmp	r3, #0
90006a12:	f000 80f6 	beq.w	90006c02 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16d6>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006a16:	f8b9 3000 	ldrh.w	r3, [r9]
90006a1a:	2b00      	cmp	r3, #0
90006a1c:	f000 80f7 	beq.w	90006c0e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16e2>
        return texts->getText(typedTextId);
90006a20:	4b69      	ldr	r3, [pc, #420]	; (90006bc8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x169c>)
90006a22:	4629      	mov	r1, r5
90006a24:	6818      	ldr	r0, [r3, #0]
90006a26:	f7fd fce1 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_29C0).getText());
90006a2a:	4a68      	ldr	r2, [pc, #416]	; (90006bcc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16a0>)
90006a2c:	4603      	mov	r3, r0
90006a2e:	210a      	movs	r1, #10
90006a30:	4658      	mov	r0, fp
90006a32:	f013 fab1 	bl	90019f98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    lbl_turn.resizeToCurrentText();
90006a36:	4640      	mov	r0, r8
90006a38:	f8c4 bb3c 	str.w	fp, [r4, #2876]	; 0xb3c
90006a3c:	f00d f9c4 	bl	90013dc8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90006a40:	4a5e      	ldr	r2, [pc, #376]	; (90006bbc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1690>)
90006a42:	f04f 0301 	mov.w	r3, #1
    lbl_turn.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3N5W));
90006a46:	a926      	add	r1, sp, #152	; 0x98
90006a48:	4640      	mov	r0, r8
90006a4a:	9226      	str	r2, [sp, #152]	; 0x98
90006a4c:	f8ad 309c 	strh.w	r3, [sp, #156]	; 0x9c
90006a50:	f00d f9da 	bl	90013e08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
90006a54:	235f      	movs	r3, #95	; 0x5f
90006a56:	4650      	mov	r0, sl
90006a58:	4641      	mov	r1, r8
90006a5a:	f884 3b2a 	strb.w	r3, [r4, #2858]	; 0xb2a
90006a5e:	f00a fd53 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90006a62:	4620      	mov	r0, r4
90006a64:	b029      	add	sp, #164	; 0xa4
90006a66:	ecbd 8b08 	vpop	{d8-d11}
90006a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006a6e:	6898      	ldr	r0, [r3, #8]
90006a70:	4d57      	ldr	r5, [pc, #348]	; (90006bd0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16a4>)
90006a72:	6803      	ldr	r3, [r0, #0]
90006a74:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90006a76:	42aa      	cmp	r2, r5
90006a78:	f43e add5 	beq.w	90005626 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
90006a7c:	f7fe bd9f 	b.w	900055be <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
90006a80:	6898      	ldr	r0, [r3, #8]
90006a82:	6802      	ldr	r2, [r0, #0]
90006a84:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90006a86:	42aa      	cmp	r2, r5
90006a88:	d16a      	bne.n	90006b60 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1634>
        return auxiliaryLCD;
90006a8a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90006a8c:	2800      	cmp	r0, #0
90006a8e:	f43e adf0 	beq.w	90005672 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006a92:	6803      	ldr	r3, [r0, #0]
90006a94:	f04f 0b01 	mov.w	fp, #1
90006a98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006a9a:	42ab      	cmp	r3, r5
90006a9c:	f43e ade9 	beq.w	90005672 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
90006aa0:	4798      	blx	r3
90006aa2:	2800      	cmp	r0, #0
90006aa4:	bf08      	it	eq
90006aa6:	f04b 0b01 	orreq.w	fp, fp, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90006aaa:	f1bb 0f00 	cmp.w	fp, #0
90006aae:	f47e ade0 	bne.w	90005672 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
90006ab2:	f7fe bd95 	b.w	900055e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
90006ab6:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90006ab8:	6802      	ldr	r2, [r0, #0]
90006aba:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90006abc:	42aa      	cmp	r2, r5
90006abe:	d166      	bne.n	90006b8e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1662>
        return auxiliaryLCD;
90006ac0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90006ac2:	2800      	cmp	r0, #0
90006ac4:	f43e adf8 	beq.w	900056b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006ac8:	6803      	ldr	r3, [r0, #0]
90006aca:	f04f 0b01 	mov.w	fp, #1
90006ace:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006ad0:	42ab      	cmp	r3, r5
90006ad2:	f43e adf1 	beq.w	900056b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
90006ad6:	4798      	blx	r3
90006ad8:	2800      	cmp	r0, #0
90006ada:	bf08      	it	eq
90006adc:	f04b 0b01 	orreq.w	fp, fp, #1
90006ae0:	f1bb 0f00 	cmp.w	fp, #0
90006ae4:	f47e ade8 	bne.w	900056b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
90006ae8:	f7fe bd7a 	b.w	900055e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
90006aec:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90006aee:	6802      	ldr	r2, [r0, #0]
90006af0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90006af2:	42aa      	cmp	r2, r5
90006af4:	d140      	bne.n	90006b78 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x164c>
        return auxiliaryLCD;
90006af6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90006af8:	2800      	cmp	r0, #0
90006afa:	f43e ae00 	beq.w	900056fe <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006afe:	6803      	ldr	r3, [r0, #0]
90006b00:	2701      	movs	r7, #1
90006b02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006b04:	42ab      	cmp	r3, r5
90006b06:	f43e adfa 	beq.w	900056fe <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90006b0a:	4798      	blx	r3
90006b0c:	2800      	cmp	r0, #0
90006b0e:	bf08      	it	eq
90006b10:	f047 0701 	orreq.w	r7, r7, #1
90006b14:	2f00      	cmp	r7, #0
90006b16:	f47e adf2 	bne.w	900056fe <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90006b1a:	f7fe bd61 	b.w	900055e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
90006b1e:	f504 62db 	add.w	r2, r4, #1752	; 0x6d8
90006b22:	e4bd      	b.n	900064a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf74>
90006b24:	f504 62cc 	add.w	r2, r4, #1632	; 0x660
90006b28:	e464      	b.n	900063f4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xec8>
90006b2a:	f504 62bd 	add.w	r2, r4, #1512	; 0x5e8
90006b2e:	e42c      	b.n	9000638a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe5e>
90006b30:	f504 62ae 	add.w	r2, r4, #1392	; 0x570
90006b34:	f7ff bbef 	b.w	90006316 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdea>
90006b38:	f504 629f 	add.w	r2, r4, #1272	; 0x4f8
90006b3c:	f7ff bbae 	b.w	9000629c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd70>
90006b40:	f504 6290 	add.w	r2, r4, #1152	; 0x480
90006b44:	f7ff bb6d 	b.w	90006222 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcf6>
90006b48:	f504 6281 	add.w	r2, r4, #1032	; 0x408
90006b4c:	f7ff bb2e 	b.w	900061ac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc80>
90006b50:	f504 7264 	add.w	r2, r4, #912	; 0x390
90006b54:	f7ff baf1 	b.w	9000613a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc0e>
90006b58:	f504 7246 	add.w	r2, r4, #792	; 0x318
90006b5c:	f7ff ba81 	b.w	90006062 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb36>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006b60:	4790      	blx	r2
90006b62:	683b      	ldr	r3, [r7, #0]
90006b64:	fab0 fb80 	clz	fp, r0
90006b68:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006b6a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90006b6e:	2800      	cmp	r0, #0
90006b70:	d09b      	beq.n	90006aaa <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x157e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006b72:	6803      	ldr	r3, [r0, #0]
90006b74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90006b76:	e790      	b.n	90006a9a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x156e>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006b78:	4790      	blx	r2
90006b7a:	683b      	ldr	r3, [r7, #0]
90006b7c:	fab0 f780 	clz	r7, r0
90006b80:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006b82:	097f      	lsrs	r7, r7, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90006b84:	2800      	cmp	r0, #0
90006b86:	d0c5      	beq.n	90006b14 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15e8>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006b88:	6803      	ldr	r3, [r0, #0]
90006b8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90006b8c:	e7ba      	b.n	90006b04 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15d8>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006b8e:	4790      	blx	r2
90006b90:	683b      	ldr	r3, [r7, #0]
90006b92:	fab0 fb80 	clz	fp, r0
90006b96:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006b98:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90006b9c:	2800      	cmp	r0, #0
90006b9e:	d09f      	beq.n	90006ae0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15b4>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006ba0:	6803      	ldr	r3, [r0, #0]
90006ba2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90006ba4:	e794      	b.n	90006ad0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15a4>
        handleAlphaUpdated();
90006ba6:	9806      	ldr	r0, [sp, #24]
90006ba8:	4790      	blx	r2
90006baa:	f7ff bbc3 	b.w	90006334 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe08>
90006bae:	bf00      	nop
90006bb0:	00980110 	.word	0x00980110
90006bb4:	00550076 	.word	0x00550076
90006bb8:	ffff0000 	.word	0xffff0000
90006bbc:	9002ac2c 	.word	0x9002ac2c
90006bc0:	008e0064 	.word	0x008e0064
90006bc4:	240398f4 	.word	0x240398f4
90006bc8:	24039900 	.word	0x24039900
90006bcc:	9002b77c 	.word	0x9002b77c
90006bd0:	90002331 	.word	0x90002331
90006bd4:	240398f8 	.word	0x240398f8
90006bd8:	9805      	ldr	r0, [sp, #20]
90006bda:	4790      	blx	r2
90006bdc:	f7ff bb6d 	b.w	900062ba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd8e>
90006be0:	9804      	ldr	r0, [sp, #16]
90006be2:	4790      	blx	r2
90006be4:	f7ff bb2c 	b.w	90006240 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd14>
90006be8:	9803      	ldr	r0, [sp, #12]
90006bea:	4790      	blx	r2
90006bec:	f7ff baed 	b.w	900061ca <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc9e>
90006bf0:	9802      	ldr	r0, [sp, #8]
90006bf2:	4790      	blx	r2
90006bf4:	f7ff bab0 	b.w	90006158 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc2c>
90006bf8:	ee1a 0a10 	vmov	r0, s20
90006bfc:	4790      	blx	r2
90006bfe:	f7ff ba40 	b.w	90006082 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb56>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006c02:	4b06      	ldr	r3, [pc, #24]	; (90006c1c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16f0>)
90006c04:	2160      	movs	r1, #96	; 0x60
90006c06:	4a06      	ldr	r2, [pc, #24]	; (90006c20 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16f4>)
90006c08:	4806      	ldr	r0, [pc, #24]	; (90006c24 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16f8>)
90006c0a:	f021 fa41 	bl	90028090 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006c0e:	4b06      	ldr	r3, [pc, #24]	; (90006c28 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16fc>)
90006c10:	2161      	movs	r1, #97	; 0x61
90006c12:	4a03      	ldr	r2, [pc, #12]	; (90006c20 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16f4>)
90006c14:	4803      	ldr	r0, [pc, #12]	; (90006c24 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16f8>)
90006c16:	f021 fa3b 	bl	90028090 <__assert_func>
90006c1a:	bf00      	nop
90006c1c:	9002b63c 	.word	0x9002b63c
90006c20:	9002b744 	.word	0x9002b744
90006c24:	9002b6bc 	.word	0x9002b6bc
90006c28:	9002b704 	.word	0x9002b704

90006c2c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90006c2c:	4770      	bx	lr
90006c2e:	bf00      	nop

90006c30 <_ZN19FrontendApplicationD0Ev>:
90006c30:	b510      	push	{r4, lr}
90006c32:	4604      	mov	r4, r0
90006c34:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90006c38:	f021 f9fc 	bl	90028034 <_ZdlPvj>
90006c3c:	4620      	mov	r0, r4
90006c3e:	bd10      	pop	{r4, pc}

90006c40 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90006c40:	b510      	push	{r4, lr}
90006c42:	4604      	mov	r4, r0
    {
        model.tick();
90006c44:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
90006c48:	f000 f814 	bl	90006c74 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90006c4c:	4620      	mov	r0, r4
    }
90006c4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90006c52:	f010 b95b 	b.w	90016f0c <_ZN8touchgfx11Application15handleTickEventEv>
90006c56:	bf00      	nop

90006c58 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90006c58:	b510      	push	{r4, lr}
90006c5a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90006c5c:	f7fd f960 	bl	90003f20 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90006c60:	4b01      	ldr	r3, [pc, #4]	; (90006c68 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90006c62:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90006c64:	6023      	str	r3, [r4, #0]
}
90006c66:	bd10      	pop	{r4, pc}
90006c68:	9002ba00 	.word	0x9002ba00

90006c6c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
90006c6c:	2200      	movs	r2, #0
90006c6e:	6002      	str	r2, [r0, #0]
{

}
90006c70:	4770      	bx	lr
90006c72:	bf00      	nop

90006c74 <_ZN5Model4tickEv>:

void Model::tick()
{

}
90006c74:	4770      	bx	lr
90006c76:	bf00      	nop

90006c78 <_ZN25screen_main_menuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_main_menuPresenter() {}
90006c78:	4770      	bx	lr
90006c7a:	bf00      	nop

90006c7c <_ZThn4_N25screen_main_menuPresenterD1Ev>:
90006c7c:	3804      	subs	r0, #4
90006c7e:	4770      	bx	lr

90006c80 <_ZN25screen_main_menuPresenter10deactivateEv>:
}

void screen_main_menuPresenter::activate()
{

}
90006c80:	4770      	bx	lr
90006c82:	bf00      	nop

90006c84 <_ZN25screen_main_menuPresenterD0Ev>:
90006c84:	b510      	push	{r4, lr}
90006c86:	4604      	mov	r4, r0
90006c88:	2110      	movs	r1, #16
90006c8a:	f021 f9d3 	bl	90028034 <_ZdlPvj>
90006c8e:	4620      	mov	r0, r4
90006c90:	bd10      	pop	{r4, pc}
90006c92:	bf00      	nop

90006c94 <_ZThn4_N25screen_main_menuPresenterD0Ev>:
90006c94:	b500      	push	{lr}
90006c96:	3804      	subs	r0, #4
90006c98:	b083      	sub	sp, #12
90006c9a:	2110      	movs	r1, #16
90006c9c:	9001      	str	r0, [sp, #4]
90006c9e:	f021 f9c9 	bl	90028034 <_ZdlPvj>
90006ca2:	9801      	ldr	r0, [sp, #4]
90006ca4:	b003      	add	sp, #12
90006ca6:	f85d fb04 	ldr.w	pc, [sp], #4
90006caa:	bf00      	nop

90006cac <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>:
    : view(v)
90006cac:	4a06      	ldr	r2, [pc, #24]	; (90006cc8 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView+0x1c>)
90006cae:	60c1      	str	r1, [r0, #12]
screen_main_menuPresenter::screen_main_menuPresenter(screen_main_menuView& v)
90006cb0:	b410      	push	{r4}
    ModelListener() : model(0) {}
90006cb2:	2400      	movs	r4, #0
90006cb4:	6084      	str	r4, [r0, #8]
    : view(v)
90006cb6:	f102 0408 	add.w	r4, r2, #8
90006cba:	3220      	adds	r2, #32
90006cbc:	e9c0 4200 	strd	r4, r2, [r0]
}
90006cc0:	f85d 4b04 	ldr.w	r4, [sp], #4
90006cc4:	4770      	bx	lr
90006cc6:	bf00      	nop
90006cc8:	9002ba4c 	.word	0x9002ba4c

90006ccc <_ZN20screen_main_menuView14tearDownScreenEv>:
}

void screen_main_menuView::tearDownScreen()
{
    screen_main_menuViewBase::tearDownScreen();
}
90006ccc:	4770      	bx	lr
90006cce:	bf00      	nop

90006cd0 <_ZN20screen_main_menuViewD1Ev>:

class screen_main_menuView : public screen_main_menuViewBase
{
public:
    screen_main_menuView();
    virtual ~screen_main_menuView() {}
90006cd0:	4b03      	ldr	r3, [pc, #12]	; (90006ce0 <_ZN20screen_main_menuViewD1Ev+0x10>)
90006cd2:	b510      	push	{r4, lr}
90006cd4:	4604      	mov	r4, r0
90006cd6:	6003      	str	r3, [r0, #0]
90006cd8:	f7fd fbb2 	bl	90004440 <_ZN24screen_main_menuViewBaseD1Ev>
90006cdc:	4620      	mov	r0, r4
90006cde:	bd10      	pop	{r4, pc}
90006ce0:	9002ba7c 	.word	0x9002ba7c

90006ce4 <_ZN20screen_main_menuViewD0Ev>:
90006ce4:	4b06      	ldr	r3, [pc, #24]	; (90006d00 <_ZN20screen_main_menuViewD0Ev+0x1c>)
90006ce6:	b510      	push	{r4, lr}
90006ce8:	4604      	mov	r4, r0
90006cea:	6003      	str	r3, [r0, #0]
90006cec:	f7fd fba8 	bl	90004440 <_ZN24screen_main_menuViewBaseD1Ev>
90006cf0:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
90006cf4:	4620      	mov	r0, r4
90006cf6:	f021 f99d 	bl	90028034 <_ZdlPvj>
90006cfa:	4620      	mov	r0, r4
90006cfc:	bd10      	pop	{r4, pc}
90006cfe:	bf00      	nop
90006d00:	9002ba7c 	.word	0x9002ba7c

90006d04 <_ZN20screen_main_menuViewC1Ev>:
screen_main_menuView::screen_main_menuView()
90006d04:	b510      	push	{r4, lr}
90006d06:	4604      	mov	r4, r0
90006d08:	f7fd fcb2 	bl	90004670 <_ZN24screen_main_menuViewBaseC1Ev>
90006d0c:	4b01      	ldr	r3, [pc, #4]	; (90006d14 <_ZN20screen_main_menuViewC1Ev+0x10>)
}
90006d0e:	4620      	mov	r0, r4
screen_main_menuView::screen_main_menuView()
90006d10:	6023      	str	r3, [r4, #0]
}
90006d12:	bd10      	pop	{r4, pc}
90006d14:	9002ba7c 	.word	0x9002ba7c

90006d18 <_ZN20screen_main_menuView11setupScreenEv>:
    screen_main_menuViewBase::setupScreen();
90006d18:	f7fd bb94 	b.w	90004444 <_ZN24screen_main_menuViewBase11setupScreenEv>

90006d1c <_ZN26screen_snake_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_snake_gamePresenter() {}
90006d1c:	4770      	bx	lr
90006d1e:	bf00      	nop

90006d20 <_ZThn4_N26screen_snake_gamePresenterD1Ev>:
90006d20:	3804      	subs	r0, #4
90006d22:	4770      	bx	lr

90006d24 <_ZN26screen_snake_gamePresenter10deactivateEv>:
}

void screen_snake_gamePresenter::activate()
{

}
90006d24:	4770      	bx	lr
90006d26:	bf00      	nop

90006d28 <_ZN26screen_snake_gamePresenterD0Ev>:
90006d28:	b510      	push	{r4, lr}
90006d2a:	4604      	mov	r4, r0
90006d2c:	2110      	movs	r1, #16
90006d2e:	f021 f981 	bl	90028034 <_ZdlPvj>
90006d32:	4620      	mov	r0, r4
90006d34:	bd10      	pop	{r4, pc}
90006d36:	bf00      	nop

90006d38 <_ZThn4_N26screen_snake_gamePresenterD0Ev>:
90006d38:	b500      	push	{lr}
90006d3a:	3804      	subs	r0, #4
90006d3c:	b083      	sub	sp, #12
90006d3e:	2110      	movs	r1, #16
90006d40:	9001      	str	r0, [sp, #4]
90006d42:	f021 f977 	bl	90028034 <_ZdlPvj>
90006d46:	9801      	ldr	r0, [sp, #4]
90006d48:	b003      	add	sp, #12
90006d4a:	f85d fb04 	ldr.w	pc, [sp], #4
90006d4e:	bf00      	nop

90006d50 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>:
    : view(v)
90006d50:	4a06      	ldr	r2, [pc, #24]	; (90006d6c <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView+0x1c>)
90006d52:	60c1      	str	r1, [r0, #12]
screen_snake_gamePresenter::screen_snake_gamePresenter(screen_snake_gameView& v)
90006d54:	b410      	push	{r4}
90006d56:	2400      	movs	r4, #0
90006d58:	6084      	str	r4, [r0, #8]
    : view(v)
90006d5a:	f102 0408 	add.w	r4, r2, #8
90006d5e:	3220      	adds	r2, #32
90006d60:	e9c0 4200 	strd	r4, r2, [r0]
}
90006d64:	f85d 4b04 	ldr.w	r4, [sp], #4
90006d68:	4770      	bx	lr
90006d6a:	bf00      	nop
90006d6c:	9002baa8 	.word	0x9002baa8

90006d70 <_ZN21screen_snake_gameView14tearDownScreenEv>:
}

void screen_snake_gameView::tearDownScreen()
{
    screen_snake_gameViewBase::tearDownScreen();
}
90006d70:	4770      	bx	lr
90006d72:	bf00      	nop

90006d74 <_ZN21screen_snake_gameView19change_direction_upEv>:
	add(error_square);
	error_square.getParent()->invalidate();
}

void screen_snake_gameView::change_direction_up() {
	snake_direction = SNAKE_UP;
90006d74:	4b01      	ldr	r3, [pc, #4]	; (90006d7c <_ZN21screen_snake_gameView19change_direction_upEv+0x8>)
90006d76:	2201      	movs	r2, #1
90006d78:	801a      	strh	r2, [r3, #0]
}
90006d7a:	4770      	bx	lr
90006d7c:	24000030 	.word	0x24000030

90006d80 <_ZN21screen_snake_gameView21change_direction_downEv>:

void screen_snake_gameView::change_direction_down() {
	snake_direction = SNAKE_DOWN;
90006d80:	4b01      	ldr	r3, [pc, #4]	; (90006d88 <_ZN21screen_snake_gameView21change_direction_downEv+0x8>)
90006d82:	2203      	movs	r2, #3
90006d84:	801a      	strh	r2, [r3, #0]
}
90006d86:	4770      	bx	lr
90006d88:	24000030 	.word	0x24000030

90006d8c <_ZN21screen_snake_gameView21change_direction_leftEv>:

void screen_snake_gameView::change_direction_left() {
	snake_direction = SNAKE_LEFT;
90006d8c:	4b01      	ldr	r3, [pc, #4]	; (90006d94 <_ZN21screen_snake_gameView21change_direction_leftEv+0x8>)
90006d8e:	2202      	movs	r2, #2
90006d90:	801a      	strh	r2, [r3, #0]
}
90006d92:	4770      	bx	lr
90006d94:	24000030 	.word	0x24000030

90006d98 <_ZN21screen_snake_gameView22change_direction_rightEv>:

void screen_snake_gameView::change_direction_right() {
	snake_direction = SNAKE_RIGHT;
90006d98:	4b01      	ldr	r3, [pc, #4]	; (90006da0 <_ZN21screen_snake_gameView22change_direction_rightEv+0x8>)
90006d9a:	2200      	movs	r2, #0
90006d9c:	801a      	strh	r2, [r3, #0]
}
90006d9e:	4770      	bx	lr
90006da0:	24000030 	.word	0x24000030

90006da4 <_ZN21screen_snake_gameView13pseudo_randomEi>:

int screen_snake_gameView::pseudo_random(int tick) {
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
90006da4:	4b09      	ldr	r3, [pc, #36]	; (90006dcc <_ZN21screen_snake_gameView13pseudo_randomEi+0x28>)
90006da6:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
90006daa:	4a09      	ldr	r2, [pc, #36]	; (90006dd0 <_ZN21screen_snake_gameView13pseudo_randomEi+0x2c>)
90006dac:	681b      	ldr	r3, [r3, #0]
90006dae:	6810      	ldr	r0, [r2, #0]
90006db0:	689a      	ldr	r2, [r3, #8]
90006db2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90006db6:	8893      	ldrh	r3, [r2, #4]
90006db8:	88d2      	ldrh	r2, [r2, #6]
90006dba:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90006dbe:	fb13 f302 	smulbb	r3, r3, r2
90006dc2:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
}
90006dc6:	4418      	add	r0, r3
90006dc8:	4770      	bx	lr
90006dca:	bf00      	nop
90006dcc:	2401f87c 	.word	0x2401f87c
90006dd0:	24000034 	.word	0x24000034

90006dd4 <_ZN21screen_snake_gameView14pseudo_random2Ei>:

int screen_snake_gameView::pseudo_random2(int tick) {
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
90006dd4:	4b0a      	ldr	r3, [pc, #40]	; (90006e00 <_ZN21screen_snake_gameView14pseudo_random2Ei+0x2c>)
90006dd6:	f04f 0c46 	mov.w	ip, #70	; 0x46
90006dda:	4a0a      	ldr	r2, [pc, #40]	; (90006e04 <_ZN21screen_snake_gameView14pseudo_random2Ei+0x30>)
90006ddc:	681b      	ldr	r3, [r3, #0]
90006dde:	6810      	ldr	r0, [r2, #0]
90006de0:	689a      	ldr	r2, [r3, #8]
90006de2:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90006de6:	8893      	ldrh	r3, [r2, #4]
90006de8:	88d2      	ldrh	r2, [r2, #6]
90006dea:	fb0c 0001 	mla	r0, ip, r1, r0
90006dee:	fb13 f302 	smulbb	r3, r3, r2
90006df2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90006df6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
}
90006dfa:	4418      	add	r0, r3
90006dfc:	4770      	bx	lr
90006dfe:	bf00      	nop
90006e00:	2401f87c 	.word	0x2401f87c
90006e04:	24000034 	.word	0x24000034

90006e08 <_ZN21screen_snake_gameViewD1Ev>:

class screen_snake_gameView : public screen_snake_gameViewBase
{
public:
    screen_snake_gameView();
    virtual ~screen_snake_gameView() {}
90006e08:	4b03      	ldr	r3, [pc, #12]	; (90006e18 <_ZN21screen_snake_gameViewD1Ev+0x10>)
90006e0a:	b510      	push	{r4, lr}
90006e0c:	4604      	mov	r4, r0
90006e0e:	6003      	str	r3, [r0, #0]
90006e10:	f7fd fdf0 	bl	900049f4 <_ZN25screen_snake_gameViewBaseD1Ev>
90006e14:	4620      	mov	r0, r4
90006e16:	bd10      	pop	{r4, pc}
90006e18:	9002badc 	.word	0x9002badc

90006e1c <_ZN21screen_snake_gameViewD0Ev>:
90006e1c:	4b06      	ldr	r3, [pc, #24]	; (90006e38 <_ZN21screen_snake_gameViewD0Ev+0x1c>)
90006e1e:	b510      	push	{r4, lr}
90006e20:	4604      	mov	r4, r0
90006e22:	6003      	str	r3, [r0, #0]
90006e24:	f7fd fde6 	bl	900049f4 <_ZN25screen_snake_gameViewBaseD1Ev>
90006e28:	f44f 7164 	mov.w	r1, #912	; 0x390
90006e2c:	4620      	mov	r0, r4
90006e2e:	f021 f901 	bl	90028034 <_ZdlPvj>
90006e32:	4620      	mov	r0, r4
90006e34:	bd10      	pop	{r4, pc}
90006e36:	bf00      	nop
90006e38:	9002badc 	.word	0x9002badc

90006e3c <_ZN21screen_snake_gameViewC1Ev>:
screen_snake_gameView::screen_snake_gameView()
90006e3c:	b510      	push	{r4, lr}
90006e3e:	4604      	mov	r4, r0
90006e40:	f7fd ff1c 	bl	90004c7c <_ZN25screen_snake_gameViewBaseC1Ev>
90006e44:	4b01      	ldr	r3, [pc, #4]	; (90006e4c <_ZN21screen_snake_gameViewC1Ev+0x10>)
}
90006e46:	4620      	mov	r0, r4
screen_snake_gameView::screen_snake_gameView()
90006e48:	6023      	str	r3, [r4, #0]
}
90006e4a:	bd10      	pop	{r4, pc}
90006e4c:	9002badc 	.word	0x9002badc

90006e50 <_GLOBAL__sub_I_game_started>:
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90006e50:	4b0e      	ldr	r3, [pc, #56]	; (90006e8c <_GLOBAL__sub_I_game_started+0x3c>)
        : x(0), y(0), width(0), height(0)
90006e52:	2200      	movs	r2, #0
          touchable(false),
90006e54:	f44f 7c80 	mov.w	ip, #256	; 0x100
        : Widget(), alpha(255), color(0)
90006e58:	21ff      	movs	r1, #255	; 0xff
90006e5a:	f503 30b0 	add.w	r0, r3, #90112	; 0x16000
}
90006e5e:	b410      	push	{r4}
90006e60:	4c0b      	ldr	r4, [pc, #44]	; (90006e90 <_GLOBAL__sub_I_game_started+0x40>)
90006e62:	f8a3 c024 	strh.w	ip, [r3, #36]	; 0x24
90006e66:	601c      	str	r4, [r3, #0]
90006e68:	f883 1026 	strb.w	r1, [r3, #38]	; 0x26
        : color(col)
90006e6c:	629a      	str	r2, [r3, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
90006e6e:	e9c3 2201 	strd	r2, r2, [r3, #4]
90006e72:	e9c3 2203 	strd	r2, r2, [r3, #12]
          nextSibling(0),
90006e76:	e9c3 2205 	strd	r2, r2, [r3, #20]
          cachedAbsX(0),
90006e7a:	e9c3 2207 	strd	r2, r2, [r3, #28]
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90006e7e:	332c      	adds	r3, #44	; 0x2c
90006e80:	4283      	cmp	r3, r0
90006e82:	d1ee      	bne.n	90006e62 <_GLOBAL__sub_I_game_started+0x12>
}
90006e84:	f85d 4b04 	ldr.w	r4, [sp], #4
90006e88:	4770      	bx	lr
90006e8a:	bf00      	nop
90006e8c:	2400987c 	.word	0x2400987c
90006e90:	9002c320 	.word	0x9002c320

90006e94 <_GLOBAL__sub_D_game_started>:
90006e94:	b538      	push	{r3, r4, r5, lr}
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90006e96:	4c05      	ldr	r4, [pc, #20]	; (90006eac <_GLOBAL__sub_D_game_started+0x18>)
90006e98:	f5a4 35b0 	sub.w	r5, r4, #90112	; 0x16000
90006e9c:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
90006ea0:	681b      	ldr	r3, [r3, #0]
90006ea2:	4620      	mov	r0, r4
90006ea4:	4798      	blx	r3
90006ea6:	42ac      	cmp	r4, r5
90006ea8:	d1f8      	bne.n	90006e9c <_GLOBAL__sub_D_game_started+0x8>
}
90006eaa:	bd38      	pop	{r3, r4, r5, pc}
90006eac:	2401f87c 	.word	0x2401f87c

90006eb0 <_ZN21screen_snake_gameView11setupScreenEv>:
    screen_snake_gameViewBase::setupScreen();
90006eb0:	f7fd bda2 	b.w	900049f8 <_ZN25screen_snake_gameViewBase11setupScreenEv>

90006eb4 <_ZN21screen_snake_gameView16game_snake_startEv>:
{
90006eb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        visible = vis;
90006eb8:	2500      	movs	r5, #0
90006eba:	4606      	mov	r6, r0
	btn_snake_start.invalidate();
90006ebc:	30c4      	adds	r0, #196	; 0xc4
class Drawable
90006ebe:	4c2c      	ldr	r4, [pc, #176]	; (90006f70 <_ZN21screen_snake_gameView16game_snake_startEv+0xbc>)
        visible = vis;
90006ec0:	f886 50e9 	strb.w	r5, [r6, #233]	; 0xe9
90006ec4:	f011 f819 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
90006ec8:	f506 700a 	add.w	r0, r6, #552	; 0x228
90006ecc:	f886 524d 	strb.w	r5, [r6, #589]	; 0x24d
90006ed0:	f011 f813 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
	snake_head.invalidate();
90006ed4:	f106 0098 	add.w	r0, r6, #152	; 0x98
90006ed8:	f886 50bd 	strb.w	r5, [r6, #189]	; 0xbd
90006edc:	f011 f80d 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_game_over.invalidate();
90006ee0:	f506 703e 	add.w	r0, r6, #760	; 0x2f8
90006ee4:	f886 531d 	strb.w	r5, [r6, #797]	; 0x31d
90006ee8:	f011 f807 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
	if( head == NULL )
90006eec:	4f21      	ldr	r7, [pc, #132]	; (90006f74 <_ZN21screen_snake_gameView16game_snake_startEv+0xc0>)
class Drawable
90006eee:	f44f 7380 	mov.w	r3, #256	; 0x100
class Box : public Widget
90006ef2:	62a5      	str	r5, [r4, #40]	; 0x28
90006ef4:	6838      	ldr	r0, [r7, #0]
90006ef6:	84a3      	strh	r3, [r4, #36]	; 0x24
90006ef8:	23ff      	movs	r3, #255	; 0xff
90006efa:	e9c4 5501 	strd	r5, r5, [r4, #4]
90006efe:	e9c4 5503 	strd	r5, r5, [r4, #12]
90006f02:	e9c4 5505 	strd	r5, r5, [r4, #20]
90006f06:	e9c4 5507 	strd	r5, r5, [r4, #28]
90006f0a:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
90006f0e:	b318      	cbz	r0, 90006f58 <_ZN21screen_snake_gameView16game_snake_startEv+0xa4>
        rect.x = x;
90006f10:	4b19      	ldr	r3, [pc, #100]	; (90006f78 <_ZN21screen_snake_gameView16game_snake_startEv+0xc4>)
90006f12:	f04f 120a 	mov.w	r2, #655370	; 0xa000a
	head->pixel = &snake_pixels[0];
90006f16:	6084      	str	r4, [r0, #8]
90006f18:	1d30      	adds	r0, r6, #4
90006f1a:	6063      	str	r3, [r4, #4]
        color = newColor;
90006f1c:	4b17      	ldr	r3, [pc, #92]	; (90006f7c <_ZN21screen_snake_gameView16game_snake_startEv+0xc8>)
90006f1e:	60a2      	str	r2, [r4, #8]
90006f20:	4913      	ldr	r1, [pc, #76]	; (90006f70 <_ZN21screen_snake_gameView16game_snake_startEv+0xbc>)
90006f22:	62a3      	str	r3, [r4, #40]	; 0x28
90006f24:	f00a faf0 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	head->pixel->getParent()->invalidate();
90006f28:	683b      	ldr	r3, [r7, #0]
	tail = head;
90006f2a:	4c15      	ldr	r4, [pc, #84]	; (90006f80 <_ZN21screen_snake_gameView16game_snake_startEv+0xcc>)
        return parent;
90006f2c:	689b      	ldr	r3, [r3, #8]
90006f2e:	6958      	ldr	r0, [r3, #20]
	head->pixel->getParent()->invalidate();
90006f30:	6803      	ldr	r3, [r0, #0]
90006f32:	695b      	ldr	r3, [r3, #20]
90006f34:	4798      	blx	r3
	head->next = NULL;
90006f36:	683b      	ldr	r3, [r7, #0]
90006f38:	2200      	movs	r2, #0
	snake_length = 1;
90006f3a:	2101      	movs	r1, #1
	snake_direction = SNAKE_DOWN;
90006f3c:	4811      	ldr	r0, [pc, #68]	; (90006f84 <_ZN21screen_snake_gameView16game_snake_startEv+0xd0>)
	head->prev = NULL;
90006f3e:	e9c3 2200 	strd	r2, r2, [r3]
	head->old_y = 0;
90006f42:	e9c3 2203 	strd	r2, r2, [r3, #12]
	tail = head;
90006f46:	6023      	str	r3, [r4, #0]
	snake_direction = SNAKE_DOWN;
90006f48:	2403      	movs	r4, #3
	snake_length = 1;
90006f4a:	4a0f      	ldr	r2, [pc, #60]	; (90006f88 <_ZN21screen_snake_gameView16game_snake_startEv+0xd4>)
	game_started = true;
90006f4c:	4b0f      	ldr	r3, [pc, #60]	; (90006f8c <_ZN21screen_snake_gameView16game_snake_startEv+0xd8>)
	snake_direction = SNAKE_DOWN;
90006f4e:	8004      	strh	r4, [r0, #0]
	snake_length = 1;
90006f50:	6011      	str	r1, [r2, #0]
	game_started = true;
90006f52:	7019      	strb	r1, [r3, #0]
}
90006f54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		head = (snake_piece*)malloc(sizeof(snake_piece));
90006f58:	2014      	movs	r0, #20
90006f5a:	f021 f8bd 	bl	900280d8 <malloc>
90006f5e:	6038      	str	r0, [r7, #0]
	if( head == NULL ) {
90006f60:	2800      	cmp	r0, #0
90006f62:	d1d5      	bne.n	90006f10 <_ZN21screen_snake_gameView16game_snake_startEv+0x5c>
		error();
90006f64:	6833      	ldr	r3, [r6, #0]
90006f66:	4630      	mov	r0, r6
90006f68:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
90006f6a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		error();
90006f6e:	4718      	bx	r3
90006f70:	2400987c 	.word	0x2400987c
90006f74:	24009878 	.word	0x24009878
90006f78:	0014000a 	.word	0x0014000a
90006f7c:	ff00ff32 	.word	0xff00ff32
90006f80:	2401f87c 	.word	0x2401f87c
90006f84:	24000030 	.word	0x24000030
90006f88:	24000034 	.word	0x24000034
90006f8c:	24009874 	.word	0x24009874

90006f90 <_ZN21screen_snake_gameView15handleTickEventEv>:
void screen_snake_gameView::handleTickEvent() {
90006f90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( game_started )
90006f94:	4fbb      	ldr	r7, [pc, #748]	; (90007284 <_ZN21screen_snake_gameView15handleTickEventEv+0x2f4>)
void screen_snake_gameView::handleTickEvent() {
90006f96:	b083      	sub	sp, #12
90006f98:	4681      	mov	r9, r0
	if( game_started )
90006f9a:	783e      	ldrb	r6, [r7, #0]
90006f9c:	2e00      	cmp	r6, #0
90006f9e:	f000 81cb 	beq.w	90007338 <_ZN21screen_snake_gameView15handleTickEventEv+0x3a8>
		if( ++tick % SNAKE_SPEED == 0 )
90006fa2:	4eb9      	ldr	r6, [pc, #740]	; (90007288 <_ZN21screen_snake_gameView15handleTickEventEv+0x2f8>)
90006fa4:	49b9      	ldr	r1, [pc, #740]	; (9000728c <_ZN21screen_snake_gameView15handleTickEventEv+0x2fc>)
90006fa6:	6833      	ldr	r3, [r6, #0]
90006fa8:	4ab9      	ldr	r2, [pc, #740]	; (90007290 <_ZN21screen_snake_gameView15handleTickEventEv+0x300>)
90006faa:	3301      	adds	r3, #1
90006fac:	fb01 2203 	mla	r2, r1, r3, r2
90006fb0:	6033      	str	r3, [r6, #0]
90006fb2:	4bb8      	ldr	r3, [pc, #736]	; (90007294 <_ZN21screen_snake_gameView15handleTickEventEv+0x304>)
90006fb4:	ebb3 0f72 	cmp.w	r3, r2, ror #1
90006fb8:	f240 81bb 	bls.w	90007332 <_ZN21screen_snake_gameView15handleTickEventEv+0x3a2>
			if( head->pixel->getX() > SCREEN_WIDTH || head->pixel->getX() < 0 ||
90006fbc:	f8df a308 	ldr.w	sl, [pc, #776]	; 900072c8 <_ZN21screen_snake_gameView15handleTickEventEv+0x338>
90006fc0:	f8da c000 	ldr.w	ip, [sl]
90006fc4:	f8dc 5008 	ldr.w	r5, [ip, #8]
        return rect.x;
90006fc8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90006fcc:	b293      	uxth	r3, r2
90006fce:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
90006fd2:	f240 8209 	bls.w	900073e8 <_ZN21screen_snake_gameView15handleTickEventEv+0x458>
				game_started = false;
90006fd6:	2300      	movs	r3, #0
90006fd8:	703b      	strb	r3, [r7, #0]
			snake_piece *snake_part = head->next;
90006fda:	f8dc 3000 	ldr.w	r3, [ip]
			while( snake_part != NULL )
90006fde:	b913      	cbnz	r3, 90006fe6 <_ZN21screen_snake_gameView15handleTickEventEv+0x56>
90006fe0:	e00e      	b.n	90007000 <_ZN21screen_snake_gameView15handleTickEventEv+0x70>
				snake_part = snake_part->next;
90006fe2:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
90006fe4:	b163      	cbz	r3, 90007000 <_ZN21screen_snake_gameView15handleTickEventEv+0x70>
				if( snake_part->pixel->getX() == head->pixel->getX() && snake_part->pixel->getY() == head->pixel->getY() ) {
90006fe6:	6899      	ldr	r1, [r3, #8]
90006fe8:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
90006fec:	4294      	cmp	r4, r2
90006fee:	d1f8      	bne.n	90006fe2 <_ZN21screen_snake_gameView15handleTickEventEv+0x52>
90006ff0:	f9b1 0006 	ldrsh.w	r0, [r1, #6]
90006ff4:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90006ff8:	4288      	cmp	r0, r1
90006ffa:	d1f2      	bne.n	90006fe2 <_ZN21screen_snake_gameView15handleTickEventEv+0x52>
					game_started = false;
90006ffc:	2300      	movs	r3, #0
90006ffe:	703b      	strb	r3, [r7, #0]
90007000:	f9b9 0110 	ldrsh.w	r0, [r9, #272]	; 0x110
90007004:	4629      	mov	r1, r5
90007006:	4663      	mov	r3, ip
90007008:	e006      	b.n	90007018 <_ZN21screen_snake_gameView15handleTickEventEv+0x88>
				snake_part = snake_part->next;
9000700a:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
9000700c:	2b00      	cmp	r3, #0
9000700e:	f000 80e4 	beq.w	900071da <_ZN21screen_snake_gameView15handleTickEventEv+0x24a>
				if( snake_part->pixel->getX() == food.getX() && snake_part->pixel->getY() == food.getY() ) {
90007012:	6899      	ldr	r1, [r3, #8]
90007014:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
90007018:	4290      	cmp	r0, r2
9000701a:	d1f6      	bne.n	9000700a <_ZN21screen_snake_gameView15handleTickEventEv+0x7a>
9000701c:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
90007020:	f9b9 2112 	ldrsh.w	r2, [r9, #274]	; 0x112
90007024:	4291      	cmp	r1, r2
90007026:	d1f0      	bne.n	9000700a <_ZN21screen_snake_gameView15handleTickEventEv+0x7a>
					snake_length++;
90007028:	4d9b      	ldr	r5, [pc, #620]	; (90007298 <_ZN21screen_snake_gameView15handleTickEventEv+0x308>)
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
9000702a:	f240 72ff 	movw	r2, #2047	; 0x7ff
					snake_length++;
9000702e:	682c      	ldr	r4, [r5, #0]
90007030:	1c63      	adds	r3, r4, #1
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90007032:	4293      	cmp	r3, r2
					snake_length++;
90007034:	602b      	str	r3, [r5, #0]
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90007036:	f000 81ea 	beq.w	9000740e <_ZN21screen_snake_gameView15handleTickEventEv+0x47e>
					snake_piece *new_piece = (snake_piece*)malloc(sizeof(snake_piece));
9000703a:	2014      	movs	r0, #20
9000703c:	f021 f84c 	bl	900280d8 <malloc>
					if( new_piece == NULL ) {
90007040:	4680      	mov	r8, r0
90007042:	2800      	cmp	r0, #0
90007044:	f000 8309 	beq.w	9000765a <_ZN21screen_snake_gameView15handleTickEventEv+0x6ca>
					snake_pixels[snake_length-1] = Box();
90007048:	222c      	movs	r2, #44	; 0x2c
9000704a:	f8df b280 	ldr.w	fp, [pc, #640]	; 900072cc <_ZN21screen_snake_gameView15handleTickEventEv+0x33c>
class Drawable
9000704e:	2100      	movs	r1, #0
90007050:	f44f 7380 	mov.w	r3, #256	; 0x100
90007054:	fb04 f202 	mul.w	r2, r4, r2
90007058:	eb0b 0702 	add.w	r7, fp, r2
9000705c:	84bb      	strh	r3, [r7, #36]	; 0x24
					new_piece->pixel = &snake_pixels[snake_length-1];
9000705e:	6087      	str	r7, [r0, #8]
class Box : public Widget
90007060:	20ff      	movs	r0, #255	; 0xff
90007062:	e9c7 1101 	strd	r1, r1, [r7, #4]
90007066:	e9c7 1103 	strd	r1, r1, [r7, #12]
9000706a:	e9c7 1105 	strd	r1, r1, [r7, #20]
9000706e:	e9c7 1107 	strd	r1, r1, [r7, #28]
        setX(x);
90007072:	f85b 3002 	ldr.w	r3, [fp, r2]
90007076:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90007078:	f887 0026 	strb.w	r0, [r7, #38]	; 0x26
9000707c:	f10b 0028 	add.w	r0, fp, #40	; 0x28
90007080:	5081      	str	r1, [r0, r2]
90007082:	4a86      	ldr	r2, [pc, #536]	; (9000729c <_ZN21screen_snake_gameView15handleTickEventEv+0x30c>)
90007084:	4293      	cmp	r3, r2
90007086:	f040 820b 	bne.w	900074a0 <_ZN21screen_snake_gameView15handleTickEventEv+0x510>
        rect.x = x;
9000708a:	80b9      	strh	r1, [r7, #4]
        setY(y);
9000708c:	232c      	movs	r3, #44	; 0x2c
9000708e:	4984      	ldr	r1, [pc, #528]	; (900072a0 <_ZN21screen_snake_gameView15handleTickEventEv+0x310>)
90007090:	fb04 f303 	mul.w	r3, r4, r3
90007094:	f85b 2003 	ldr.w	r2, [fp, r3]
90007098:	445b      	add	r3, fp
9000709a:	6b52      	ldr	r2, [r2, #52]	; 0x34
9000709c:	428a      	cmp	r2, r1
9000709e:	f040 82be 	bne.w	9000761e <_ZN21screen_snake_gameView15handleTickEventEv+0x68e>
        rect.y = y;
900070a2:	2200      	movs	r2, #0
900070a4:	80da      	strh	r2, [r3, #6]
        setWidth(width);
900070a6:	222c      	movs	r2, #44	; 0x2c
900070a8:	210a      	movs	r1, #10
900070aa:	4638      	mov	r0, r7
900070ac:	fb04 f202 	mul.w	r2, r4, r2
					tail->next = new_piece;
900070b0:	4c7c      	ldr	r4, [pc, #496]	; (900072a4 <_ZN21screen_snake_gameView15handleTickEventEv+0x314>)
900070b2:	f85b 3002 	ldr.w	r3, [fp, r2]
900070b6:	9201      	str	r2, [sp, #4]
900070b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900070ba:	4798      	blx	r3
        setHeight(height);
900070bc:	9a01      	ldr	r2, [sp, #4]
900070be:	4638      	mov	r0, r7
900070c0:	210a      	movs	r1, #10
900070c2:	f85b 3002 	ldr.w	r3, [fp, r2]
900070c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900070c8:	4798      	blx	r3
					new_piece->pixel->setColor(touchgfx::Color::getColorFromRGB(255, 130, 0));
900070ca:	f8d8 1008 	ldr.w	r1, [r8, #8]
        color = newColor;
900070ce:	4b76      	ldr	r3, [pc, #472]	; (900072a8 <_ZN21screen_snake_gameView15handleTickEventEv+0x318>)
900070d0:	f109 0004 	add.w	r0, r9, #4
900070d4:	628b      	str	r3, [r1, #40]	; 0x28
        visible = vis;
900070d6:	2301      	movs	r3, #1
900070d8:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25
900070dc:	f00a fa14 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
900070e0:	f8d8 3008 	ldr.w	r3, [r8, #8]
900070e4:	6958      	ldr	r0, [r3, #20]
					new_piece->pixel->getParent()->invalidate();
900070e6:	6803      	ldr	r3, [r0, #0]
900070e8:	695b      	ldr	r3, [r3, #20]
900070ea:	4798      	blx	r3
					tail->next = new_piece;
900070ec:	6823      	ldr	r3, [r4, #0]
					int food_new_x = pseudo_random(tick) % 480;
900070ee:	f8d9 2000 	ldr.w	r2, [r9]
					tail->next = new_piece;
900070f2:	f8c3 8000 	str.w	r8, [r3]
					new_piece->prev = tail;
900070f6:	f8c8 3004 	str.w	r3, [r8, #4]
					new_piece->next = NULL;
900070fa:	2300      	movs	r3, #0
900070fc:	486b      	ldr	r0, [pc, #428]	; (900072ac <_ZN21screen_snake_gameView15handleTickEventEv+0x31c>)
900070fe:	f8c8 3000 	str.w	r3, [r8]
					int food_new_x = pseudo_random(tick) % 480;
90007102:	6831      	ldr	r1, [r6, #0]
					tail = new_piece;
90007104:	f8c4 8000 	str.w	r8, [r4]
					new_piece->old_y = 0;
90007108:	e9c8 3303 	strd	r3, r3, [r8, #12]
					int food_new_x = pseudo_random(tick) % 480;
9000710c:	6c13      	ldr	r3, [r2, #64]	; 0x40
9000710e:	4283      	cmp	r3, r0
90007110:	f040 827f 	bne.w	90007612 <_ZN21screen_snake_gameView15handleTickEventEv+0x682>
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
90007114:	f8d8 6008 	ldr.w	r6, [r8, #8]
90007118:	6828      	ldr	r0, [r5, #0]
9000711a:	88b3      	ldrh	r3, [r6, #4]
9000711c:	88f6      	ldrh	r6, [r6, #6]
9000711e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90007122:	fb13 f306 	smulbb	r3, r3, r6
90007126:	ebc1 1601 	rsb	r6, r1, r1, lsl #4
9000712a:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
9000712e:	eb00 0046 	add.w	r0, r0, r6, lsl #1
90007132:	4418      	add	r0, r3
					int food_new_x = pseudo_random(tick) % 480;
90007134:	4b5e      	ldr	r3, [pc, #376]	; (900072b0 <_ZN21screen_snake_gameView15handleTickEventEv+0x320>)
					int food_new_y = pseudo_random2(tick) % 272;
90007136:	6c52      	ldr	r2, [r2, #68]	; 0x44
					int food_new_x = pseudo_random(tick) % 480;
90007138:	fb83 6300 	smull	r6, r3, r3, r0
9000713c:	17c6      	asrs	r6, r0, #31
9000713e:	4403      	add	r3, r0
90007140:	ebc6 2623 	rsb	r6, r6, r3, asr #8
90007144:	4b5b      	ldr	r3, [pc, #364]	; (900072b4 <_ZN21screen_snake_gameView15handleTickEventEv+0x324>)
90007146:	ebc6 1606 	rsb	r6, r6, r6, lsl #4
9000714a:	429a      	cmp	r2, r3
9000714c:	eba0 1646 	sub.w	r6, r0, r6, lsl #5
					int food_new_y = pseudo_random2(tick) % 272;
90007150:	f040 825c 	bne.w	9000760c <_ZN21screen_snake_gameView15handleTickEventEv+0x67c>
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
90007154:	6823      	ldr	r3, [r4, #0]
90007156:	6898      	ldr	r0, [r3, #8]
90007158:	682b      	ldr	r3, [r5, #0]
9000715a:	8882      	ldrh	r2, [r0, #4]
9000715c:	88c0      	ldrh	r0, [r0, #6]
9000715e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90007162:	fb12 f200 	smulbb	r2, r2, r0
90007166:	2046      	movs	r0, #70	; 0x46
90007168:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
9000716c:	fb00 3301 	mla	r3, r0, r1, r3
90007170:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90007174:	1898      	adds	r0, r3, r2
					int food_new_y = pseudo_random2(tick) % 272;
90007176:	4a50      	ldr	r2, [pc, #320]	; (900072b8 <_ZN21screen_snake_gameView15handleTickEventEv+0x328>)
					food_new_x = food_new_x - (food_new_x % 10);
90007178:	4950      	ldr	r1, [pc, #320]	; (900072bc <_ZN21screen_snake_gameView15handleTickEventEv+0x32c>)
					int food_new_y = pseudo_random2(tick) % 272;
9000717a:	fb82 3200 	smull	r3, r2, r2, r0
9000717e:	17c3      	asrs	r3, r0, #31
90007180:	ebc3 13e2 	rsb	r3, r3, r2, asr #7
					food_new_x = food_new_x - (food_new_x % 10);
90007184:	17f2      	asrs	r2, r6, #31
					int food_new_y = pseudo_random2(tick) % 272;
90007186:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9000718a:	eba0 1303 	sub.w	r3, r0, r3, lsl #4
					food_new_x = food_new_x - (food_new_x % 10);
9000718e:	fb81 0606 	smull	r0, r6, r1, r6
					food_new_y = food_new_y - (food_new_y % 10);
90007192:	fb81 0103 	smull	r0, r1, r1, r3
90007196:	17db      	asrs	r3, r3, #31
					food_new_x = food_new_x - (food_new_x % 10);
90007198:	ebc2 02a6 	rsb	r2, r2, r6, asr #2
					food.invalidate();
9000719c:	f509 7086 	add.w	r0, r9, #268	; 0x10c
					food_new_y = food_new_y - (food_new_y % 10);
900071a0:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
					food_new_x = food_new_x - (food_new_x % 10);
900071a4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
					food_new_y = food_new_y - (food_new_y % 10);
900071a8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
					food_new_x = food_new_x - (food_new_x % 10);
900071ac:	0052      	lsls	r2, r2, #1
					food_new_y = food_new_y - (food_new_y % 10);
900071ae:	005b      	lsls	r3, r3, #1
					food.setXY(food_new_x, food_new_y);
900071b0:	f8a9 2110 	strh.w	r2, [r9, #272]	; 0x110
900071b4:	f8a9 3112 	strh.w	r3, [r9, #274]	; 0x112
					food.invalidate();
900071b8:	f010 fe9f 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
					Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%d", snake_length);
900071bc:	682b      	ldr	r3, [r5, #0]
900071be:	4a40      	ldr	r2, [pc, #256]	; (900072c0 <_ZN21screen_snake_gameView15handleTickEventEv+0x330>)
900071c0:	2120      	movs	r1, #32
900071c2:	f509 7050 	add.w	r0, r9, #832	; 0x340
900071c6:	f012 fee7 	bl	90019f98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
					lbl_score_val.invalidate();
900071ca:	f509 702b 	add.w	r0, r9, #684	; 0x2ac
900071ce:	f010 fe94 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
				head->old_x = head->pixel->getX();
900071d2:	f8da c000 	ldr.w	ip, [sl]
900071d6:	f8dc 5008 	ldr.w	r5, [ip, #8]
			if( snake_direction == SNAKE_RIGHT )
900071da:	4b3a      	ldr	r3, [pc, #232]	; (900072c4 <_ZN21screen_snake_gameView15handleTickEventEv+0x334>)
900071dc:	f9b3 3000 	ldrsh.w	r3, [r3]
900071e0:	2b00      	cmp	r3, #0
900071e2:	f040 80f3 	bne.w	900073cc <_ZN21screen_snake_gameView15handleTickEventEv+0x43c>
        return rect.x;
900071e6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
        return rect.y;
900071ea:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
        setX(x);
900071ee:	682a      	ldr	r2, [r5, #0]
				head->old_x = head->pixel->getX();
900071f0:	f8cc 300c 	str.w	r3, [ip, #12]
				head->pixel->setXY(head->old_x+(SNAKE_MOVE), head->old_y);
900071f4:	330a      	adds	r3, #10
900071f6:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 9000729c <_ZN21screen_snake_gameView15handleTickEventEv+0x30c>
900071fa:	b219      	sxth	r1, r3
900071fc:	6b13      	ldr	r3, [r2, #48]	; 0x30
				head->old_y = head->pixel->getY();
900071fe:	f8cc 4010 	str.w	r4, [ip, #16]
90007202:	4543      	cmp	r3, r8
90007204:	f040 81fc 	bne.w	90007600 <_ZN21screen_snake_gameView15handleTickEventEv+0x670>
        rect.x = x;
90007208:	80a9      	strh	r1, [r5, #4]
        setY(y);
9000720a:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000720c:	4f24      	ldr	r7, [pc, #144]	; (900072a0 <_ZN21screen_snake_gameView15handleTickEventEv+0x310>)
9000720e:	42bb      	cmp	r3, r7
90007210:	f040 81f2 	bne.w	900075f8 <_ZN21screen_snake_gameView15handleTickEventEv+0x668>
        rect.y = y;
90007214:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90007216:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
9000721a:	689b      	ldr	r3, [r3, #8]
9000721c:	6958      	ldr	r0, [r3, #20]
9000721e:	6803      	ldr	r3, [r0, #0]
90007220:	695b      	ldr	r3, [r3, #20]
90007222:	4798      	blx	r3
				snake_piece *piece = head->next;
90007224:	f8da 3000 	ldr.w	r3, [sl]
90007228:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
9000722a:	b97c      	cbnz	r4, 9000724c <_ZN21screen_snake_gameView15handleTickEventEv+0x2bc>
9000722c:	e1ec      	b.n	90007608 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        setY(y);
9000722e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90007230:	80a9      	strh	r1, [r5, #4]
        rect.y = y;
90007232:	42bb      	cmp	r3, r7
90007234:	d120      	bne.n	90007278 <_ZN21screen_snake_gameView15handleTickEventEv+0x2e8>
        return parent;
90007236:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90007238:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
9000723c:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
9000723e:	6803      	ldr	r3, [r0, #0]
90007240:	695b      	ldr	r3, [r3, #20]
90007242:	4798      	blx	r3
					piece = piece->next;
90007244:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90007246:	2c00      	cmp	r4, #0
90007248:	f000 80d4 	beq.w	900073f4 <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
9000724c:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90007250:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90007254:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90007258:	60e3      	str	r3, [r4, #12]
        setX(x);
9000725a:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
9000725c:	6121      	str	r1, [r4, #16]
9000725e:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007260:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90007264:	4546      	cmp	r6, r8
90007266:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
9000726a:	d0e0      	beq.n	9000722e <_ZN21screen_snake_gameView15handleTickEventEv+0x29e>
        setX(x);
9000726c:	4628      	mov	r0, r5
9000726e:	47b0      	blx	r6
        setY(y);
90007270:	682b      	ldr	r3, [r5, #0]
90007272:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007274:	42bb      	cmp	r3, r7
90007276:	d0de      	beq.n	90007236 <_ZN21screen_snake_gameView15handleTickEventEv+0x2a6>
90007278:	4649      	mov	r1, r9
9000727a:	4628      	mov	r0, r5
9000727c:	4798      	blx	r3
        return parent;
9000727e:	68a3      	ldr	r3, [r4, #8]
90007280:	e7dc      	b.n	9000723c <_ZN21screen_snake_gameView15handleTickEventEv+0x2ac>
90007282:	bf00      	nop
90007284:	24009874 	.word	0x24009874
90007288:	24009870 	.word	0x24009870
9000728c:	cccccccd 	.word	0xcccccccd
90007290:	19999998 	.word	0x19999998
90007294:	19999999 	.word	0x19999999
90007298:	24000034 	.word	0x24000034
9000729c:	9000228d 	.word	0x9000228d
900072a0:	90002291 	.word	0x90002291
900072a4:	2401f87c 	.word	0x2401f87c
900072a8:	ffff8200 	.word	0xffff8200
900072ac:	90006da5 	.word	0x90006da5
900072b0:	88888889 	.word	0x88888889
900072b4:	90006dd5 	.word	0x90006dd5
900072b8:	78787879 	.word	0x78787879
900072bc:	66666667 	.word	0x66666667
900072c0:	9002bad0 	.word	0x9002bad0
900072c4:	24000030 	.word	0x24000030
900072c8:	24009878 	.word	0x24009878
900072cc:	2400987c 	.word	0x2400987c
			else if (head != tail ) {
900072d0:	4c9e      	ldr	r4, [pc, #632]	; (9000754c <_ZN21screen_snake_gameView15handleTickEventEv+0x5bc>)
900072d2:	f8da 3000 	ldr.w	r3, [sl]
900072d6:	6820      	ldr	r0, [r4, #0]
900072d8:	4283      	cmp	r3, r0
900072da:	d003      	beq.n	900072e4 <_ZN21screen_snake_gameView15handleTickEventEv+0x354>
				free(tail);
900072dc:	f020 ff04 	bl	900280e8 <free>
		if( head != NULL ) {
900072e0:	f8da 0000 	ldr.w	r0, [sl]
900072e4:	b1d0      	cbz	r0, 9000731c <_ZN21screen_snake_gameView15handleTickEventEv+0x38c>
			tail = head;
900072e6:	6020      	str	r0, [r4, #0]
			head->next = NULL;
900072e8:	2300      	movs	r3, #0
			head->pixel->setXY(20, 50);
900072ea:	6884      	ldr	r4, [r0, #8]
			head->next = NULL;
900072ec:	6003      	str	r3, [r0, #0]
        setX(x);
900072ee:	6823      	ldr	r3, [r4, #0]
900072f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900072f2:	4542      	cmp	r2, r8
900072f4:	f040 8082 	bne.w	900073fc <_ZN21screen_snake_gameView15handleTickEventEv+0x46c>
        rect.x = x;
900072f8:	2214      	movs	r2, #20
900072fa:	80a2      	strh	r2, [r4, #4]
        setY(y);
900072fc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900072fe:	42bb      	cmp	r3, r7
90007300:	f040 8081 	bne.w	90007406 <_ZN21screen_snake_gameView15handleTickEventEv+0x476>
        rect.y = y;
90007304:	2332      	movs	r3, #50	; 0x32
90007306:	80e3      	strh	r3, [r4, #6]
			head->pixel->getParent()->invalidate();
90007308:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
9000730c:	689b      	ldr	r3, [r3, #8]
9000730e:	6958      	ldr	r0, [r3, #20]
90007310:	6803      	ldr	r3, [r0, #0]
90007312:	695b      	ldr	r3, [r3, #20]
90007314:	4798      	blx	r3
			snake_length = 1;
90007316:	4b8e      	ldr	r3, [pc, #568]	; (90007550 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c0>)
90007318:	2201      	movs	r2, #1
9000731a:	601a      	str	r2, [r3, #0]
        visible = vis;
9000731c:	2401      	movs	r4, #1
		btn_back.invalidate();
9000731e:	f509 700a 	add.w	r0, r9, #552	; 0x228
90007322:	f889 424d 	strb.w	r4, [r9, #589]	; 0x24d
90007326:	f010 fde8 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		if( tick > 0 ) {
9000732a:	4b8a      	ldr	r3, [pc, #552]	; (90007554 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c4>)
9000732c:	681a      	ldr	r2, [r3, #0]
9000732e:	2a00      	cmp	r2, #0
90007330:	dc41      	bgt.n	900073b6 <_ZN21screen_snake_gameView15handleTickEventEv+0x426>
}
90007332:	b003      	add	sp, #12
90007334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if( head != NULL ) {
90007338:	f8df a220 	ldr.w	sl, [pc, #544]	; 9000755c <_ZN21screen_snake_gameView15handleTickEventEv+0x5cc>
9000733c:	f8da 0000 	ldr.w	r0, [sl]
90007340:	2800      	cmp	r0, #0
90007342:	d0eb      	beq.n	9000731c <_ZN21screen_snake_gameView15handleTickEventEv+0x38c>
			old = head->next;
90007344:	6804      	ldr	r4, [r0, #0]
		while( old != NULL ) {
90007346:	f8df 8218 	ldr.w	r8, [pc, #536]	; 90007560 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
9000734a:	4f83      	ldr	r7, [pc, #524]	; (90007558 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
9000734c:	2c00      	cmp	r4, #0
9000734e:	f000 8182 	beq.w	90007656 <_ZN21screen_snake_gameView15handleTickEventEv+0x6c6>
			old->pixel->setXY(-1, -1);
90007352:	68a5      	ldr	r5, [r4, #8]
        rect.x = x;
90007354:	f64f 7bff 	movw	fp, #65535	; 0xffff
        setX(x);
90007358:	682b      	ldr	r3, [r5, #0]
9000735a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000735c:	4542      	cmp	r2, r8
9000735e:	d119      	bne.n	90007394 <_ZN21screen_snake_gameView15handleTickEventEv+0x404>
        setY(y);
90007360:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90007362:	f8a5 b004 	strh.w	fp, [r5, #4]
        rect.y = y;
90007366:	42bb      	cmp	r3, r7
90007368:	d11c      	bne.n	900073a4 <_ZN21screen_snake_gameView15handleTickEventEv+0x414>
			old->pixel->setVisible(false);
9000736a:	68a3      	ldr	r3, [r4, #8]
9000736c:	f8a5 b006 	strh.w	fp, [r5, #6]
        return parent;
90007370:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90007372:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
			old->pixel->getParent()->invalidate();
90007376:	6803      	ldr	r3, [r0, #0]
90007378:	695b      	ldr	r3, [r3, #20]
9000737a:	4798      	blx	r3
			old = old->next;
9000737c:	6824      	ldr	r4, [r4, #0]
			if( old != NULL ) {
9000737e:	2c00      	cmp	r4, #0
90007380:	d0a6      	beq.n	900072d0 <_ZN21screen_snake_gameView15handleTickEventEv+0x340>
				free(old->prev);
90007382:	6860      	ldr	r0, [r4, #4]
90007384:	f020 feb0 	bl	900280e8 <free>
			old->pixel->setXY(-1, -1);
90007388:	68a5      	ldr	r5, [r4, #8]
				old->prev = NULL;
9000738a:	6066      	str	r6, [r4, #4]
        setX(x);
9000738c:	682b      	ldr	r3, [r5, #0]
9000738e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007390:	4542      	cmp	r2, r8
90007392:	d0e5      	beq.n	90007360 <_ZN21screen_snake_gameView15handleTickEventEv+0x3d0>
90007394:	f04f 31ff 	mov.w	r1, #4294967295
90007398:	4628      	mov	r0, r5
9000739a:	4790      	blx	r2
        setY(y);
9000739c:	682b      	ldr	r3, [r5, #0]
9000739e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900073a0:	42bb      	cmp	r3, r7
900073a2:	d0e2      	beq.n	9000736a <_ZN21screen_snake_gameView15handleTickEventEv+0x3da>
900073a4:	4628      	mov	r0, r5
900073a6:	f04f 31ff 	mov.w	r1, #4294967295
900073aa:	4798      	blx	r3
			old->pixel->setVisible(false);
900073ac:	68a3      	ldr	r3, [r4, #8]
        return parent;
900073ae:	6958      	ldr	r0, [r3, #20]
        visible = vis;
900073b0:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
        return parent;
900073b4:	e7df      	b.n	90007376 <_ZN21screen_snake_gameView15handleTickEventEv+0x3e6>
			tick = 0;
900073b6:	2200      	movs	r2, #0
			lbl_game_over.invalidate();
900073b8:	f509 703e 	add.w	r0, r9, #760	; 0x2f8
        visible = vis;
900073bc:	f889 431d 	strb.w	r4, [r9, #797]	; 0x31d
			tick = 0;
900073c0:	601a      	str	r2, [r3, #0]
}
900073c2:	b003      	add	sp, #12
900073c4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			lbl_game_over.invalidate();
900073c8:	f010 bd97 	b.w	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
			else if( snake_direction == SNAKE_LEFT )
900073cc:	2b02      	cmp	r3, #2
900073ce:	d06a      	beq.n	900074a6 <_ZN21screen_snake_gameView15handleTickEventEv+0x516>
			else if( snake_direction == SNAKE_UP )
900073d0:	2b01      	cmp	r3, #1
900073d2:	f000 80c7 	beq.w	90007564 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d4>
			else if( snake_direction == SNAKE_DOWN )
900073d6:	2b03      	cmp	r3, #3
900073d8:	d01c      	beq.n	90007414 <_ZN21screen_snake_gameView15handleTickEventEv+0x484>
        return parent;
900073da:	6968      	ldr	r0, [r5, #20]
			head->pixel->getParent()->invalidate();
900073dc:	6803      	ldr	r3, [r0, #0]
900073de:	695b      	ldr	r3, [r3, #20]
}
900073e0:	b003      	add	sp, #12
900073e2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			head->pixel->getParent()->invalidate();
900073e6:	4718      	bx	r3
				head->pixel->getY() > SCREEN_HEIGHT || head->pixel->getY() < 0)
900073e8:	88eb      	ldrh	r3, [r5, #6]
900073ea:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
900073ee:	f63f adf2 	bhi.w	90006fd6 <_ZN21screen_snake_gameView15handleTickEventEv+0x46>
900073f2:	e5f2      	b.n	90006fda <_ZN21screen_snake_gameView15handleTickEventEv+0x4a>
			head->pixel->getParent()->invalidate();
900073f4:	f8da 3000 	ldr.w	r3, [sl]
900073f8:	689d      	ldr	r5, [r3, #8]
900073fa:	e7ee      	b.n	900073da <_ZN21screen_snake_gameView15handleTickEventEv+0x44a>
        setX(x);
900073fc:	2114      	movs	r1, #20
900073fe:	4620      	mov	r0, r4
90007400:	4790      	blx	r2
        setY(y);
90007402:	6823      	ldr	r3, [r4, #0]
90007404:	e77a      	b.n	900072fc <_ZN21screen_snake_gameView15handleTickEventEv+0x36c>
90007406:	2132      	movs	r1, #50	; 0x32
90007408:	4620      	mov	r0, r4
9000740a:	4798      	blx	r3
9000740c:	e77c      	b.n	90007308 <_ZN21screen_snake_gameView15handleTickEventEv+0x378>
						game_started = false;
9000740e:	2300      	movs	r3, #0
90007410:	703b      	strb	r3, [r7, #0]
90007412:	e612      	b.n	9000703a <_ZN21screen_snake_gameView15handleTickEventEv+0xaa>
        return rect.y;
90007414:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
90007418:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
9000741c:	f8cc 3010 	str.w	r3, [ip, #16]
				head->pixel->setXY(head->old_x, head->old_y+(SNAKE_MOVE));
90007420:	330a      	adds	r3, #10
90007422:	f8df 813c 	ldr.w	r8, [pc, #316]	; 90007560 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
90007426:	b21c      	sxth	r4, r3
        setX(x);
90007428:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
9000742a:	f8cc 100c 	str.w	r1, [ip, #12]
9000742e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007430:	4542      	cmp	r2, r8
90007432:	f040 810c 	bne.w	9000764e <_ZN21screen_snake_gameView15handleTickEventEv+0x6be>
        rect.x = x;
90007436:	80a9      	strh	r1, [r5, #4]
        setY(y);
90007438:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000743a:	4f47      	ldr	r7, [pc, #284]	; (90007558 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
9000743c:	42bb      	cmp	r3, r7
9000743e:	f040 8102 	bne.w	90007646 <_ZN21screen_snake_gameView15handleTickEventEv+0x6b6>
        rect.y = y;
90007442:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90007444:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90007448:	689b      	ldr	r3, [r3, #8]
9000744a:	6958      	ldr	r0, [r3, #20]
9000744c:	6803      	ldr	r3, [r0, #0]
9000744e:	695b      	ldr	r3, [r3, #20]
90007450:	4798      	blx	r3
				snake_piece *piece = head->next;
90007452:	f8da 3000 	ldr.w	r3, [sl]
90007456:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90007458:	b974      	cbnz	r4, 90007478 <_ZN21screen_snake_gameView15handleTickEventEv+0x4e8>
9000745a:	e0d5      	b.n	90007608 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
9000745c:	80a9      	strh	r1, [r5, #4]
        setY(y);
9000745e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007460:	42bb      	cmp	r3, r7
90007462:	d16d      	bne.n	90007540 <_ZN21screen_snake_gameView15handleTickEventEv+0x5b0>
        return parent;
90007464:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90007466:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
9000746a:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
9000746c:	6803      	ldr	r3, [r0, #0]
9000746e:	695b      	ldr	r3, [r3, #20]
90007470:	4798      	blx	r3
					piece = piece->next;
90007472:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90007474:	2c00      	cmp	r4, #0
90007476:	d0bd      	beq.n	900073f4 <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007478:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
9000747c:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90007480:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90007484:	60e3      	str	r3, [r4, #12]
        setX(x);
90007486:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90007488:	6121      	str	r1, [r4, #16]
9000748a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
9000748c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90007490:	4546      	cmp	r6, r8
90007492:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90007496:	d0e1      	beq.n	9000745c <_ZN21screen_snake_gameView15handleTickEventEv+0x4cc>
        setX(x);
90007498:	4628      	mov	r0, r5
9000749a:	47b0      	blx	r6
        setY(y);
9000749c:	682b      	ldr	r3, [r5, #0]
9000749e:	e7de      	b.n	9000745e <_ZN21screen_snake_gameView15handleTickEventEv+0x4ce>
        setX(x);
900074a0:	4638      	mov	r0, r7
900074a2:	4798      	blx	r3
900074a4:	e5f2      	b.n	9000708c <_ZN21screen_snake_gameView15handleTickEventEv+0xfc>
900074a6:	682a      	ldr	r2, [r5, #0]
        return rect.x;
900074a8:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
900074ac:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90007560 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
        setX(x);
900074b0:	6b16      	ldr	r6, [r2, #48]	; 0x30
        return rect.y;
900074b2:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
900074b6:	4546      	cmp	r6, r8
				head->old_x = head->pixel->getX();
900074b8:	f8cc 300c 	str.w	r3, [ip, #12]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
900074bc:	f1a3 030a 	sub.w	r3, r3, #10
				head->old_y = head->pixel->getY();
900074c0:	f8cc 4010 	str.w	r4, [ip, #16]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
900074c4:	b219      	sxth	r1, r3
        setX(x);
900074c6:	f040 80b2 	bne.w	9000762e <_ZN21screen_snake_gameView15handleTickEventEv+0x69e>
        rect.x = x;
900074ca:	80a9      	strh	r1, [r5, #4]
        setY(y);
900074cc:	6b53      	ldr	r3, [r2, #52]	; 0x34
900074ce:	4f22      	ldr	r7, [pc, #136]	; (90007558 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
900074d0:	42bb      	cmp	r3, r7
900074d2:	f040 80a8 	bne.w	90007626 <_ZN21screen_snake_gameView15handleTickEventEv+0x696>
        rect.y = y;
900074d6:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
900074d8:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
900074dc:	689b      	ldr	r3, [r3, #8]
900074de:	6958      	ldr	r0, [r3, #20]
900074e0:	6803      	ldr	r3, [r0, #0]
900074e2:	695b      	ldr	r3, [r3, #20]
900074e4:	4798      	blx	r3
				snake_piece *piece = head->next;
900074e6:	f8da 3000 	ldr.w	r3, [sl]
900074ea:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
900074ec:	b97c      	cbnz	r4, 9000750e <_ZN21screen_snake_gameView15handleTickEventEv+0x57e>
900074ee:	e08b      	b.n	90007608 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
900074f0:	80a9      	strh	r1, [r5, #4]
        setY(y);
900074f2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900074f4:	42bb      	cmp	r3, r7
900074f6:	d11e      	bne.n	90007536 <_ZN21screen_snake_gameView15handleTickEventEv+0x5a6>
        return parent;
900074f8:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
900074fa:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
900074fe:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90007500:	6803      	ldr	r3, [r0, #0]
90007502:	695b      	ldr	r3, [r3, #20]
90007504:	4798      	blx	r3
					piece = piece->next;
90007506:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90007508:	2c00      	cmp	r4, #0
9000750a:	f43f af73 	beq.w	900073f4 <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
9000750e:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90007512:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90007516:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
9000751a:	60e3      	str	r3, [r4, #12]
        setX(x);
9000751c:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
9000751e:	6121      	str	r1, [r4, #16]
90007520:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007522:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90007526:	4546      	cmp	r6, r8
90007528:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
9000752c:	d0e0      	beq.n	900074f0 <_ZN21screen_snake_gameView15handleTickEventEv+0x560>
        setX(x);
9000752e:	4628      	mov	r0, r5
90007530:	47b0      	blx	r6
        setY(y);
90007532:	682b      	ldr	r3, [r5, #0]
90007534:	e7dd      	b.n	900074f2 <_ZN21screen_snake_gameView15handleTickEventEv+0x562>
90007536:	4649      	mov	r1, r9
90007538:	4628      	mov	r0, r5
9000753a:	4798      	blx	r3
        return parent;
9000753c:	68a3      	ldr	r3, [r4, #8]
9000753e:	e7de      	b.n	900074fe <_ZN21screen_snake_gameView15handleTickEventEv+0x56e>
        setY(y);
90007540:	4649      	mov	r1, r9
90007542:	4628      	mov	r0, r5
90007544:	4798      	blx	r3
        return parent;
90007546:	68a3      	ldr	r3, [r4, #8]
90007548:	e78f      	b.n	9000746a <_ZN21screen_snake_gameView15handleTickEventEv+0x4da>
9000754a:	bf00      	nop
9000754c:	2401f87c 	.word	0x2401f87c
90007550:	24000034 	.word	0x24000034
90007554:	24009870 	.word	0x24009870
90007558:	90002291 	.word	0x90002291
9000755c:	24009878 	.word	0x24009878
90007560:	9000228d 	.word	0x9000228d
        return rect.y;
90007564:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
90007568:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
9000756c:	f8cc 3010 	str.w	r3, [ip, #16]
				head->pixel->setXY(head->old_x, head->old_y-(SNAKE_MOVE));
90007570:	3b0a      	subs	r3, #10
90007572:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 9000766c <_ZN21screen_snake_gameView15handleTickEventEv+0x6dc>
90007576:	b21c      	sxth	r4, r3
        setX(x);
90007578:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
9000757a:	f8cc 100c 	str.w	r1, [ip, #12]
9000757e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007580:	4542      	cmp	r2, r8
90007582:	d15c      	bne.n	9000763e <_ZN21screen_snake_gameView15handleTickEventEv+0x6ae>
        rect.x = x;
90007584:	80a9      	strh	r1, [r5, #4]
        setY(y);
90007586:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007588:	4f36      	ldr	r7, [pc, #216]	; (90007664 <_ZN21screen_snake_gameView15handleTickEventEv+0x6d4>)
9000758a:	42bb      	cmp	r3, r7
9000758c:	d153      	bne.n	90007636 <_ZN21screen_snake_gameView15handleTickEventEv+0x6a6>
        rect.y = y;
9000758e:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90007590:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90007594:	689b      	ldr	r3, [r3, #8]
90007596:	6958      	ldr	r0, [r3, #20]
90007598:	6803      	ldr	r3, [r0, #0]
9000759a:	695b      	ldr	r3, [r3, #20]
9000759c:	4798      	blx	r3
				snake_piece *piece = head->next;
9000759e:	f8da 3000 	ldr.w	r3, [sl]
900075a2:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
900075a4:	b97c      	cbnz	r4, 900075c6 <_ZN21screen_snake_gameView15handleTickEventEv+0x636>
900075a6:	e02f      	b.n	90007608 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
900075a8:	80a9      	strh	r1, [r5, #4]
        setY(y);
900075aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900075ac:	42bb      	cmp	r3, r7
900075ae:	d11e      	bne.n	900075ee <_ZN21screen_snake_gameView15handleTickEventEv+0x65e>
        return parent;
900075b0:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
900075b2:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
900075b6:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
900075b8:	6803      	ldr	r3, [r0, #0]
900075ba:	695b      	ldr	r3, [r3, #20]
900075bc:	4798      	blx	r3
					piece = piece->next;
900075be:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
900075c0:	2c00      	cmp	r4, #0
900075c2:	f43f af17 	beq.w	900073f4 <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
900075c6:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
900075ca:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
900075ce:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
900075d2:	60e3      	str	r3, [r4, #12]
        setX(x);
900075d4:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
900075d6:	6121      	str	r1, [r4, #16]
900075d8:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
900075da:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900075de:	4546      	cmp	r6, r8
900075e0:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
900075e4:	d0e0      	beq.n	900075a8 <_ZN21screen_snake_gameView15handleTickEventEv+0x618>
        setX(x);
900075e6:	4628      	mov	r0, r5
900075e8:	47b0      	blx	r6
        setY(y);
900075ea:	682b      	ldr	r3, [r5, #0]
900075ec:	e7dd      	b.n	900075aa <_ZN21screen_snake_gameView15handleTickEventEv+0x61a>
900075ee:	4649      	mov	r1, r9
900075f0:	4628      	mov	r0, r5
900075f2:	4798      	blx	r3
        return parent;
900075f4:	68a3      	ldr	r3, [r4, #8]
900075f6:	e7de      	b.n	900075b6 <_ZN21screen_snake_gameView15handleTickEventEv+0x626>
        setY(y);
900075f8:	4621      	mov	r1, r4
900075fa:	4628      	mov	r0, r5
900075fc:	4798      	blx	r3
900075fe:	e60a      	b.n	90007216 <_ZN21screen_snake_gameView15handleTickEventEv+0x286>
        setX(x);
90007600:	4628      	mov	r0, r5
90007602:	4798      	blx	r3
        setY(y);
90007604:	682a      	ldr	r2, [r5, #0]
90007606:	e600      	b.n	9000720a <_ZN21screen_snake_gameView15handleTickEventEv+0x27a>
			head->pixel->getParent()->invalidate();
90007608:	689d      	ldr	r5, [r3, #8]
9000760a:	e6e6      	b.n	900073da <_ZN21screen_snake_gameView15handleTickEventEv+0x44a>
					int food_new_y = pseudo_random2(tick) % 272;
9000760c:	4648      	mov	r0, r9
9000760e:	4790      	blx	r2
90007610:	e5b1      	b.n	90007176 <_ZN21screen_snake_gameView15handleTickEventEv+0x1e6>
					int food_new_x = pseudo_random(tick) % 480;
90007612:	4648      	mov	r0, r9
90007614:	4798      	blx	r3
					int food_new_y = pseudo_random2(tick) % 272;
90007616:	6831      	ldr	r1, [r6, #0]
90007618:	f8d9 2000 	ldr.w	r2, [r9]
9000761c:	e58a      	b.n	90007134 <_ZN21screen_snake_gameView15handleTickEventEv+0x1a4>
9000761e:	2100      	movs	r1, #0
90007620:	4638      	mov	r0, r7
90007622:	4790      	blx	r2
90007624:	e53f      	b.n	900070a6 <_ZN21screen_snake_gameView15handleTickEventEv+0x116>
90007626:	4621      	mov	r1, r4
90007628:	4628      	mov	r0, r5
9000762a:	4798      	blx	r3
9000762c:	e754      	b.n	900074d8 <_ZN21screen_snake_gameView15handleTickEventEv+0x548>
        setX(x);
9000762e:	4628      	mov	r0, r5
90007630:	47b0      	blx	r6
        setY(y);
90007632:	682a      	ldr	r2, [r5, #0]
90007634:	e74a      	b.n	900074cc <_ZN21screen_snake_gameView15handleTickEventEv+0x53c>
90007636:	4621      	mov	r1, r4
90007638:	4628      	mov	r0, r5
9000763a:	4798      	blx	r3
9000763c:	e7a8      	b.n	90007590 <_ZN21screen_snake_gameView15handleTickEventEv+0x600>
        setX(x);
9000763e:	4628      	mov	r0, r5
90007640:	4790      	blx	r2
        setY(y);
90007642:	682b      	ldr	r3, [r5, #0]
90007644:	e79f      	b.n	90007586 <_ZN21screen_snake_gameView15handleTickEventEv+0x5f6>
90007646:	4621      	mov	r1, r4
90007648:	4628      	mov	r0, r5
9000764a:	4798      	blx	r3
9000764c:	e6fa      	b.n	90007444 <_ZN21screen_snake_gameView15handleTickEventEv+0x4b4>
        setX(x);
9000764e:	4628      	mov	r0, r5
90007650:	4790      	blx	r2
        setY(y);
90007652:	682b      	ldr	r3, [r5, #0]
90007654:	e6f0      	b.n	90007438 <_ZN21screen_snake_gameView15handleTickEventEv+0x4a8>
90007656:	4c04      	ldr	r4, [pc, #16]	; (90007668 <_ZN21screen_snake_gameView15handleTickEventEv+0x6d8>)
90007658:	e645      	b.n	900072e6 <_ZN21screen_snake_gameView15handleTickEventEv+0x356>
						error();
9000765a:	f8d9 3000 	ldr.w	r3, [r9]
9000765e:	4648      	mov	r0, r9
90007660:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90007662:	e6bd      	b.n	900073e0 <_ZN21screen_snake_gameView15handleTickEventEv+0x450>
90007664:	90002291 	.word	0x90002291
90007668:	2401f87c 	.word	0x2401f87c
9000766c:	9000228d 	.word	0x9000228d

90007670 <_ZN21screen_snake_gameView5errorEv>:
void screen_snake_gameView::error() {
90007670:	b500      	push	{lr}
          touchable(false),
90007672:	f44f 7180 	mov.w	r1, #256	; 0x100
90007676:	b08d      	sub	sp, #52	; 0x34
        : Widget(), alpha(255), color(0)
90007678:	4a0f      	ldr	r2, [pc, #60]	; (900076b8 <_ZN21screen_snake_gameView5errorEv+0x48>)
          parent(0),
9000767a:	2300      	movs	r3, #0
          touchable(false),
9000767c:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
90007680:	f04f 0cff 	mov.w	ip, #255	; 0xff
        rect.x = x;
90007684:	490d      	ldr	r1, [pc, #52]	; (900076bc <_ZN21screen_snake_gameView5errorEv+0x4c>)
90007686:	3004      	adds	r0, #4
90007688:	9201      	str	r2, [sp, #4]
        color = newColor;
9000768a:	4a0d      	ldr	r2, [pc, #52]	; (900076c0 <_ZN21screen_snake_gameView5errorEv+0x50>)
        : Widget(), alpha(255), color(0)
9000768c:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
        color = newColor;
90007690:	920b      	str	r2, [sp, #44]	; 0x2c
90007692:	e9cd 3102 	strd	r3, r1, [sp, #8]
90007696:	a901      	add	r1, sp, #4
          nextSibling(0),
90007698:	e9cd 3306 	strd	r3, r3, [sp, #24]
          cachedAbsX(0),
9000769c:	e9cd 3308 	strd	r3, r3, [sp, #32]
        rect.x = x;
900076a0:	e9cd 3304 	strd	r3, r3, [sp, #16]
900076a4:	f009 ff30 	bl	90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
900076a8:	9806      	ldr	r0, [sp, #24]
	error_square.getParent()->invalidate();
900076aa:	6803      	ldr	r3, [r0, #0]
900076ac:	695b      	ldr	r3, [r3, #20]
900076ae:	4798      	blx	r3
}
900076b0:	b00d      	add	sp, #52	; 0x34
900076b2:	f85d fb04 	ldr.w	pc, [sp], #4
900076b6:	bf00      	nop
900076b8:	9002c320 	.word	0x9002c320
900076bc:	011001e0 	.word	0x011001e0
900076c0:	ffff0000 	.word	0xffff0000

900076c4 <_ZN30screen_tictactoe_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_tictactoe_gamePresenter() {}
900076c4:	4770      	bx	lr
900076c6:	bf00      	nop

900076c8 <_ZThn4_N30screen_tictactoe_gamePresenterD1Ev>:
900076c8:	3804      	subs	r0, #4
900076ca:	4770      	bx	lr

900076cc <_ZN30screen_tictactoe_gamePresenter10deactivateEv>:
}

void screen_tictactoe_gamePresenter::activate()
{

}
900076cc:	4770      	bx	lr
900076ce:	bf00      	nop

900076d0 <_ZN30screen_tictactoe_gamePresenterD0Ev>:
900076d0:	b510      	push	{r4, lr}
900076d2:	4604      	mov	r4, r0
900076d4:	2110      	movs	r1, #16
900076d6:	f020 fcad 	bl	90028034 <_ZdlPvj>
900076da:	4620      	mov	r0, r4
900076dc:	bd10      	pop	{r4, pc}
900076de:	bf00      	nop

900076e0 <_ZThn4_N30screen_tictactoe_gamePresenterD0Ev>:
900076e0:	b500      	push	{lr}
900076e2:	3804      	subs	r0, #4
900076e4:	b083      	sub	sp, #12
900076e6:	2110      	movs	r1, #16
900076e8:	9001      	str	r0, [sp, #4]
900076ea:	f020 fca3 	bl	90028034 <_ZdlPvj>
900076ee:	9801      	ldr	r0, [sp, #4]
900076f0:	b003      	add	sp, #12
900076f2:	f85d fb04 	ldr.w	pc, [sp], #4
900076f6:	bf00      	nop

900076f8 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>:
    : view(v)
900076f8:	4a06      	ldr	r2, [pc, #24]	; (90007714 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView+0x1c>)
900076fa:	60c1      	str	r1, [r0, #12]
screen_tictactoe_gamePresenter::screen_tictactoe_gamePresenter(screen_tictactoe_gameView& v)
900076fc:	b410      	push	{r4}
900076fe:	2400      	movs	r4, #0
90007700:	6084      	str	r4, [r0, #8]
    : view(v)
90007702:	f102 0408 	add.w	r4, r2, #8
90007706:	3220      	adds	r2, #32
90007708:	e9c0 4200 	strd	r4, r2, [r0]
}
9000770c:	f85d 4b04 	ldr.w	r4, [sp], #4
90007710:	4770      	bx	lr
90007712:	bf00      	nop
90007714:	9002bb28 	.word	0x9002bb28

90007718 <_ZN25screen_tictactoe_gameView14tearDownScreenEv>:
}

void screen_tictactoe_gameView::tearDownScreen()
{
    screen_tictactoe_gameViewBase::tearDownScreen();
}
90007718:	4770      	bx	lr
9000771a:	bf00      	nop

9000771c <_ZN25screen_tictactoe_gameView12is_game_overEii>:
	// 2 -> player 2 wins
	// 3 -> tie

	char symbol;

	if(turn)
9000771c:	4b22      	ldr	r3, [pc, #136]	; (900077a8 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x8c>)
9000771e:	7818      	ldrb	r0, [r3, #0]
	else
		symbol = 'O';

    //check col
    for(short i = 0; i < 3; i++){
        if(board[x][i] != symbol)
90007720:	eb01 0341 	add.w	r3, r1, r1, lsl #1
		symbol = 'O';
90007724:	2800      	cmp	r0, #0
short screen_tictactoe_gameView::is_game_over(int x, int y) {
90007726:	b530      	push	{r4, r5, lr}
        if(board[x][i] != symbol)
90007728:	4d20      	ldr	r5, [pc, #128]	; (900077ac <_ZN25screen_tictactoe_gameView12is_game_overEii+0x90>)
		symbol = 'O';
9000772a:	bf14      	ite	ne
9000772c:	2458      	movne	r4, #88	; 0x58
9000772e:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007730:	f815 c003 	ldrb.w	ip, [r5, r3]
90007734:	442b      	add	r3, r5
90007736:	45a4      	cmp	ip, r4
90007738:	d109      	bne.n	9000774e <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
9000773a:	f893 e001 	ldrb.w	lr, [r3, #1]
9000773e:	45e6      	cmp	lr, ip
90007740:	d105      	bne.n	9000774e <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
90007742:	789b      	ldrb	r3, [r3, #2]
90007744:	4573      	cmp	r3, lr
90007746:	d102      	bne.n	9000774e <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
    if(x + y == 3-1){
        for(int i = 0; i < 3; i++){
            if(board[i][(3-1)-i] != symbol)
                break;
            if(i == 3-1){
                if( turn )
90007748:	f1c0 0002 	rsb	r0, r0, #2

	if( turn_number == 9 )
		return 3;

	return 0;
}
9000774c:	bd30      	pop	{r4, r5, pc}
        if(board[i][y] != symbol)
9000774e:	5cab      	ldrb	r3, [r5, r2]
90007750:	42a3      	cmp	r3, r4
90007752:	d107      	bne.n	90007764 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
90007754:	18ab      	adds	r3, r5, r2
90007756:	f893 c003 	ldrb.w	ip, [r3, #3]
9000775a:	45a4      	cmp	ip, r4
9000775c:	d102      	bne.n	90007764 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
9000775e:	799b      	ldrb	r3, [r3, #6]
90007760:	42a3      	cmp	r3, r4
90007762:	d0f1      	beq.n	90007748 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
    if(x == y){
90007764:	4291      	cmp	r1, r2
90007766:	d00a      	beq.n	9000777e <_ZN25screen_tictactoe_gameView12is_game_overEii+0x62>
    if(x + y == 3-1){
90007768:	440a      	add	r2, r1
9000776a:	2a02      	cmp	r2, #2
9000776c:	d011      	beq.n	90007792 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x76>
	if( turn_number == 9 )
9000776e:	4b10      	ldr	r3, [pc, #64]	; (900077b0 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x94>)
90007770:	f9b3 3000 	ldrsh.w	r3, [r3]
		return 3;
90007774:	2b09      	cmp	r3, #9
90007776:	bf14      	ite	ne
90007778:	2000      	movne	r0, #0
9000777a:	2003      	moveq	r0, #3
}
9000777c:	bd30      	pop	{r4, r5, pc}
            if(board[i][i] != symbol)
9000777e:	782b      	ldrb	r3, [r5, #0]
90007780:	42a3      	cmp	r3, r4
90007782:	d1f1      	bne.n	90007768 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90007784:	792b      	ldrb	r3, [r5, #4]
90007786:	42a3      	cmp	r3, r4
90007788:	d1ee      	bne.n	90007768 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
9000778a:	7a2b      	ldrb	r3, [r5, #8]
9000778c:	42a3      	cmp	r3, r4
9000778e:	d0db      	beq.n	90007748 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
90007790:	e7ea      	b.n	90007768 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
            if(board[i][(3-1)-i] != symbol)
90007792:	78ab      	ldrb	r3, [r5, #2]
90007794:	42a3      	cmp	r3, r4
90007796:	d1ea      	bne.n	9000776e <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90007798:	792b      	ldrb	r3, [r5, #4]
9000779a:	42a3      	cmp	r3, r4
9000779c:	d1e7      	bne.n	9000776e <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
9000779e:	79ab      	ldrb	r3, [r5, #6]
900077a0:	42a3      	cmp	r3, r4
900077a2:	d0d1      	beq.n	90007748 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
900077a4:	e7e3      	b.n	9000776e <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
900077a6:	bf00      	nop
900077a8:	24000038 	.word	0x24000038
900077ac:	2401f880 	.word	0x2401f880
900077b0:	2401f88c 	.word	0x2401f88c

900077b4 <_ZN25screen_tictactoe_gameViewD1Ev>:

class screen_tictactoe_gameView : public screen_tictactoe_gameViewBase
{
public:
    screen_tictactoe_gameView();
    virtual ~screen_tictactoe_gameView() {}
900077b4:	4b03      	ldr	r3, [pc, #12]	; (900077c4 <_ZN25screen_tictactoe_gameViewD1Ev+0x10>)
900077b6:	b510      	push	{r4, lr}
900077b8:	4604      	mov	r4, r0
900077ba:	6003      	str	r3, [r0, #0]
900077bc:	f7fd fe0c 	bl	900053d8 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
900077c0:	4620      	mov	r0, r4
900077c2:	bd10      	pop	{r4, pc}
900077c4:	9002bb84 	.word	0x9002bb84

900077c8 <_ZN25screen_tictactoe_gameViewD0Ev>:
900077c8:	4b06      	ldr	r3, [pc, #24]	; (900077e4 <_ZN25screen_tictactoe_gameViewD0Ev+0x1c>)
900077ca:	b510      	push	{r4, lr}
900077cc:	4604      	mov	r4, r0
900077ce:	6003      	str	r3, [r0, #0]
900077d0:	f7fd fe02 	bl	900053d8 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
900077d4:	f242 71bc 	movw	r1, #10172	; 0x27bc
900077d8:	4620      	mov	r0, r4
900077da:	f020 fc2b 	bl	90028034 <_ZdlPvj>
900077de:	4620      	mov	r0, r4
900077e0:	bd10      	pop	{r4, pc}
900077e2:	bf00      	nop
900077e4:	9002bb84 	.word	0x9002bb84

900077e8 <_ZN25screen_tictactoe_gameViewC1Ev>:
screen_tictactoe_gameView::screen_tictactoe_gameView()
900077e8:	b538      	push	{r3, r4, r5, lr}
900077ea:	4604      	mov	r4, r0
			board[i][j] = 0;
900077ec:	2500      	movs	r5, #0
screen_tictactoe_gameView::screen_tictactoe_gameView()
900077ee:	f7fd fe9d 	bl	9000552c <_ZN29screen_tictactoe_gameViewBaseC1Ev>
			board[i][j] = 0;
900077f2:	4b13      	ldr	r3, [pc, #76]	; (90007840 <_ZN25screen_tictactoe_gameViewC1Ev+0x58>)
screen_tictactoe_gameView::screen_tictactoe_gameView()
900077f4:	4913      	ldr	r1, [pc, #76]	; (90007844 <_ZN25screen_tictactoe_gameViewC1Ev+0x5c>)
	lbl_game_over.invalidate();
900077f6:	f604 2024 	addw	r0, r4, #2596	; 0xa24
	game_over = false;
900077fa:	4a13      	ldr	r2, [pc, #76]	; (90007848 <_ZN25screen_tictactoe_gameViewC1Ev+0x60>)
screen_tictactoe_gameView::screen_tictactoe_gameView()
900077fc:	6021      	str	r1, [r4, #0]
			board[i][j] = 0;
900077fe:	721d      	strb	r5, [r3, #8]
        visible = vis;
90007800:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
	game_over = false;
90007804:	7015      	strb	r5, [r2, #0]
			board[i][j] = 0;
90007806:	e9c3 5500 	strd	r5, r5, [r3]
	lbl_game_over.invalidate();
9000780a:	f010 fb76 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
	box_background.invalidate();
9000780e:	f604 10f8 	addw	r0, r4, #2552	; 0x9f8
90007812:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
90007816:	f010 fb70 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_result.invalidate();
9000781a:	f604 20a8 	addw	r0, r4, #2728	; 0xaa8
9000781e:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
90007822:	f010 fb6a 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
90007826:	f604 206c 	addw	r0, r4, #2668	; 0xa6c
9000782a:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
9000782e:	f010 fb64 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
	turn_number = 0;
90007832:	4906      	ldr	r1, [pc, #24]	; (9000784c <_ZN25screen_tictactoe_gameViewC1Ev+0x64>)
	turn = true;
90007834:	4b06      	ldr	r3, [pc, #24]	; (90007850 <_ZN25screen_tictactoe_gameViewC1Ev+0x68>)
90007836:	2201      	movs	r2, #1
}
90007838:	4620      	mov	r0, r4
	turn_number = 0;
9000783a:	800d      	strh	r5, [r1, #0]
	turn = true;
9000783c:	701a      	strb	r2, [r3, #0]
}
9000783e:	bd38      	pop	{r3, r4, r5, pc}
90007840:	2401f880 	.word	0x2401f880
90007844:	9002bb84 	.word	0x9002bb84
90007848:	2401f889 	.word	0x2401f889
9000784c:	2401f88c 	.word	0x2401f88c
90007850:	24000038 	.word	0x24000038

90007854 <_ZN25screen_tictactoe_gameView12pos1_clickedEv>:
void screen_tictactoe_gameView::pos1_clicked() {
90007854:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][0] == 0 ) {
90007858:	4d2d      	ldr	r5, [pc, #180]	; (90007910 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xbc>)
9000785a:	782b      	ldrb	r3, [r5, #0]
9000785c:	2b00      	cmp	r3, #0
9000785e:	d12e      	bne.n	900078be <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6a>
90007860:	4e2c      	ldr	r6, [pc, #176]	; (90007914 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc0>)
90007862:	7833      	ldrb	r3, [r6, #0]
90007864:	bb5b      	cbnz	r3, 900078be <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6a>
		if( turn ) {
90007866:	4f2c      	ldr	r7, [pc, #176]	; (90007918 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc4>)
90007868:	4604      	mov	r4, r0
9000786a:	783b      	ldrb	r3, [r7, #0]
9000786c:	bb4b      	cbnz	r3, 900078c2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6e>
			board[0][0] = 'O';
9000786e:	234f      	movs	r3, #79	; 0x4f
			pos1_circle.invalidate();
90007870:	f500 60dc 	add.w	r0, r0, #1760	; 0x6e0
			board[0][0] = 'O';
90007874:	7033      	strb	r3, [r6, #0]
90007876:	2301      	movs	r3, #1
90007878:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos1_circle.invalidate();
9000787c:	f010 fb3d 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007880:	4a26      	ldr	r2, [pc, #152]	; (9000791c <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc8>)
		short temp_result = is_game_over(0, 0);
90007882:	6823      	ldr	r3, [r4, #0]
90007884:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007888:	8813      	ldrh	r3, [r2, #0]
9000788a:	3301      	adds	r3, #1
9000788c:	b21b      	sxth	r3, r3
9000788e:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 0);
90007890:	4a23      	ldr	r2, [pc, #140]	; (90007920 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xcc>)
90007892:	4590      	cmp	r8, r2
90007894:	d11f      	bne.n	900078d6 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x82>
	if(turn)
90007896:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007898:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
9000789a:	2800      	cmp	r0, #0
9000789c:	bf14      	ite	ne
9000789e:	2458      	movne	r4, #88	; 0x58
900078a0:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900078a2:	42a2      	cmp	r2, r4
900078a4:	d12f      	bne.n	90007906 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb2>
900078a6:	7871      	ldrb	r1, [r6, #1]
900078a8:	4291      	cmp	r1, r2
900078aa:	d120      	bne.n	900078ee <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x9a>
900078ac:	78b2      	ldrb	r2, [r6, #2]
900078ae:	428a      	cmp	r2, r1
900078b0:	d11d      	bne.n	900078ee <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x9a>
                if( turn )
900078b2:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900078b6:	2201      	movs	r2, #1
			result = temp_result;
900078b8:	4b1a      	ldr	r3, [pc, #104]	; (90007924 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xd0>)
			game_over = true;
900078ba:	702a      	strb	r2, [r5, #0]
			result = temp_result;
900078bc:	8018      	strh	r0, [r3, #0]
}
900078be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][0] = 'X';
900078c2:	2358      	movs	r3, #88	; 0x58
			pos1_cross.invalidate();
900078c4:	f200 700c 	addw	r0, r0, #1804	; 0x70c
			board[0][0] = 'X';
900078c8:	7033      	strb	r3, [r6, #0]
900078ca:	2301      	movs	r3, #1
900078cc:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos1_cross.invalidate();
900078d0:	f010 fb13 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
900078d4:	e7d4      	b.n	90007880 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x2c>
		short temp_result = is_game_over(0, 0);
900078d6:	2200      	movs	r2, #0
900078d8:	4620      	mov	r0, r4
900078da:	4611      	mov	r1, r2
900078dc:	47c0      	blx	r8
		if( temp_result != 0 ) {
900078de:	2800      	cmp	r0, #0
900078e0:	d1e9      	bne.n	900078b6 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
		turn = !turn;
900078e2:	783b      	ldrb	r3, [r7, #0]
900078e4:	f083 0301 	eor.w	r3, r3, #1
900078e8:	703b      	strb	r3, [r7, #0]
}
900078ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900078ee:	78f2      	ldrb	r2, [r6, #3]
900078f0:	42a2      	cmp	r2, r4
900078f2:	d102      	bne.n	900078fa <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xa6>
900078f4:	79b2      	ldrb	r2, [r6, #6]
900078f6:	42a2      	cmp	r2, r4
900078f8:	d0db      	beq.n	900078b2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x5e>
            if(board[i][i] != symbol)
900078fa:	7932      	ldrb	r2, [r6, #4]
900078fc:	42a2      	cmp	r2, r4
900078fe:	d102      	bne.n	90007906 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb2>
90007900:	7a32      	ldrb	r2, [r6, #8]
90007902:	42a2      	cmp	r2, r4
90007904:	d0d5      	beq.n	900078b2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x5e>
	if( turn_number == 9 )
90007906:	2b09      	cmp	r3, #9
90007908:	d1eb      	bne.n	900078e2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x8e>
		return 3;
9000790a:	2003      	movs	r0, #3
9000790c:	e7d3      	b.n	900078b6 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
9000790e:	bf00      	nop
90007910:	2401f889 	.word	0x2401f889
90007914:	2401f880 	.word	0x2401f880
90007918:	24000038 	.word	0x24000038
9000791c:	2401f88c 	.word	0x2401f88c
90007920:	9000771d 	.word	0x9000771d
90007924:	2401f88a 	.word	0x2401f88a

90007928 <_ZN25screen_tictactoe_gameView12pos2_clickedEv>:
void screen_tictactoe_gameView::pos2_clicked() {
90007928:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][1] == 0 ) {
9000792c:	4d2b      	ldr	r5, [pc, #172]	; (900079dc <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb4>)
9000792e:	782b      	ldrb	r3, [r5, #0]
90007930:	2b00      	cmp	r3, #0
90007932:	d12e      	bne.n	90007992 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6a>
90007934:	4e2a      	ldr	r6, [pc, #168]	; (900079e0 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb8>)
90007936:	7873      	ldrb	r3, [r6, #1]
90007938:	bb5b      	cbnz	r3, 90007992 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6a>
		if( turn ) {
9000793a:	4f2a      	ldr	r7, [pc, #168]	; (900079e4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xbc>)
9000793c:	4604      	mov	r4, r0
9000793e:	783b      	ldrb	r3, [r7, #0]
90007940:	bb4b      	cbnz	r3, 90007996 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6e>
			board[0][1] = 'O';
90007942:	234f      	movs	r3, #79	; 0x4f
			pos2_circle.invalidate();
90007944:	f200 7064 	addw	r0, r0, #1892	; 0x764
			board[0][1] = 'O';
90007948:	7073      	strb	r3, [r6, #1]
9000794a:	2301      	movs	r3, #1
9000794c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos2_circle.invalidate();
90007950:	f010 fad3 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007954:	4a24      	ldr	r2, [pc, #144]	; (900079e8 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc0>)
		short temp_result = is_game_over(0, 1);
90007956:	6823      	ldr	r3, [r4, #0]
90007958:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
9000795c:	8813      	ldrh	r3, [r2, #0]
9000795e:	3301      	adds	r3, #1
90007960:	b21b      	sxth	r3, r3
90007962:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 1);
90007964:	4a21      	ldr	r2, [pc, #132]	; (900079ec <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc4>)
90007966:	4590      	cmp	r8, r2
90007968:	d11f      	bne.n	900079aa <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x82>
	if(turn)
9000796a:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
9000796c:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
9000796e:	2800      	cmp	r0, #0
90007970:	bf14      	ite	ne
90007972:	2458      	movne	r4, #88	; 0x58
90007974:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007976:	42a2      	cmp	r2, r4
90007978:	d123      	bne.n	900079c2 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x9a>
9000797a:	7871      	ldrb	r1, [r6, #1]
9000797c:	4291      	cmp	r1, r2
9000797e:	d129      	bne.n	900079d4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90007980:	78b2      	ldrb	r2, [r6, #2]
90007982:	428a      	cmp	r2, r1
90007984:	d120      	bne.n	900079c8 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xa0>
            if( turn )
90007986:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
9000798a:	2201      	movs	r2, #1
			result = temp_result;
9000798c:	4b18      	ldr	r3, [pc, #96]	; (900079f0 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc8>)
			game_over = true;
9000798e:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007990:	8018      	strh	r0, [r3, #0]
}
90007992:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][1] = 'X';
90007996:	2358      	movs	r3, #88	; 0x58
			pos2_cross.invalidate();
90007998:	f500 60e7 	add.w	r0, r0, #1848	; 0x738
			board[0][1] = 'X';
9000799c:	7073      	strb	r3, [r6, #1]
9000799e:	2301      	movs	r3, #1
900079a0:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos2_cross.invalidate();
900079a4:	f010 faa9 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
900079a8:	e7d4      	b.n	90007954 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x2c>
		short temp_result = is_game_over(0, 1);
900079aa:	2201      	movs	r2, #1
900079ac:	4620      	mov	r0, r4
900079ae:	2100      	movs	r1, #0
900079b0:	47c0      	blx	r8
		if( temp_result != 0 ) {
900079b2:	2800      	cmp	r0, #0
900079b4:	d1e9      	bne.n	9000798a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
		turn = !turn;
900079b6:	7838      	ldrb	r0, [r7, #0]
900079b8:	f080 0001 	eor.w	r0, r0, #1
900079bc:	7038      	strb	r0, [r7, #0]
}
900079be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900079c2:	7872      	ldrb	r2, [r6, #1]
900079c4:	42a2      	cmp	r2, r4
900079c6:	d105      	bne.n	900079d4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
900079c8:	7932      	ldrb	r2, [r6, #4]
900079ca:	42a2      	cmp	r2, r4
900079cc:	d102      	bne.n	900079d4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
900079ce:	79f2      	ldrb	r2, [r6, #7]
900079d0:	42a2      	cmp	r2, r4
900079d2:	d0d8      	beq.n	90007986 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x5e>
	if( turn_number == 9 )
900079d4:	2b09      	cmp	r3, #9
900079d6:	d1ef      	bne.n	900079b8 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x90>
		return 3;
900079d8:	2003      	movs	r0, #3
900079da:	e7d6      	b.n	9000798a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
900079dc:	2401f889 	.word	0x2401f889
900079e0:	2401f880 	.word	0x2401f880
900079e4:	24000038 	.word	0x24000038
900079e8:	2401f88c 	.word	0x2401f88c
900079ec:	9000771d 	.word	0x9000771d
900079f0:	2401f88a 	.word	0x2401f88a

900079f4 <_ZN25screen_tictactoe_gameView12pos3_clickedEv>:
void screen_tictactoe_gameView::pos3_clicked() {
900079f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][2] == 0 ) {
900079f8:	4d2e      	ldr	r5, [pc, #184]	; (90007ab4 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc0>)
900079fa:	782b      	ldrb	r3, [r5, #0]
900079fc:	2b00      	cmp	r3, #0
900079fe:	d12e      	bne.n	90007a5e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6a>
90007a00:	4e2d      	ldr	r6, [pc, #180]	; (90007ab8 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc4>)
90007a02:	78b3      	ldrb	r3, [r6, #2]
90007a04:	bb5b      	cbnz	r3, 90007a5e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6a>
		if( turn ) {
90007a06:	4f2d      	ldr	r7, [pc, #180]	; (90007abc <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc8>)
90007a08:	4604      	mov	r4, r0
90007a0a:	783b      	ldrb	r3, [r7, #0]
90007a0c:	bb4b      	cbnz	r3, 90007a62 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6e>
			board[0][2] = 'O';
90007a0e:	234f      	movs	r3, #79	; 0x4f
			pos3_circle.invalidate();
90007a10:	f200 70bc 	addw	r0, r0, #1980	; 0x7bc
			board[0][2] = 'O';
90007a14:	70b3      	strb	r3, [r6, #2]
90007a16:	2301      	movs	r3, #1
90007a18:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos3_circle.invalidate();
90007a1c:	f010 fa6d 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007a20:	4a27      	ldr	r2, [pc, #156]	; (90007ac0 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xcc>)
		short temp_result = is_game_over(0, 2);
90007a22:	6823      	ldr	r3, [r4, #0]
90007a24:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007a28:	8813      	ldrh	r3, [r2, #0]
90007a2a:	3301      	adds	r3, #1
90007a2c:	b21b      	sxth	r3, r3
90007a2e:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 2);
90007a30:	4a24      	ldr	r2, [pc, #144]	; (90007ac4 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xd0>)
90007a32:	4590      	cmp	r8, r2
90007a34:	d11f      	bne.n	90007a76 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x82>
	if(turn)
90007a36:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007a38:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
90007a3a:	2800      	cmp	r0, #0
90007a3c:	bf14      	ite	ne
90007a3e:	2458      	movne	r4, #88	; 0x58
90007a40:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007a42:	42a2      	cmp	r2, r4
90007a44:	d123      	bne.n	90007a8e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x9a>
90007a46:	7871      	ldrb	r1, [r6, #1]
90007a48:	4291      	cmp	r1, r2
90007a4a:	d120      	bne.n	90007a8e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x9a>
90007a4c:	78b2      	ldrb	r2, [r6, #2]
90007a4e:	428a      	cmp	r2, r1
90007a50:	d12c      	bne.n	90007aac <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
                if( turn )
90007a52:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007a56:	2201      	movs	r2, #1
			result = temp_result;
90007a58:	4b1b      	ldr	r3, [pc, #108]	; (90007ac8 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xd4>)
			game_over = true;
90007a5a:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007a5c:	8018      	strh	r0, [r3, #0]
}
90007a5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][2] = 'X';
90007a62:	2358      	movs	r3, #88	; 0x58
			pos3_cross.invalidate();
90007a64:	f500 60f2 	add.w	r0, r0, #1936	; 0x790
			board[0][2] = 'X';
90007a68:	70b3      	strb	r3, [r6, #2]
90007a6a:	2301      	movs	r3, #1
90007a6c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos3_cross.invalidate();
90007a70:	f010 fa43 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
90007a74:	e7d4      	b.n	90007a20 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x2c>
		short temp_result = is_game_over(0, 2);
90007a76:	2202      	movs	r2, #2
90007a78:	4620      	mov	r0, r4
90007a7a:	2100      	movs	r1, #0
90007a7c:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007a7e:	2800      	cmp	r0, #0
90007a80:	d1e9      	bne.n	90007a56 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
		turn = !turn;
90007a82:	7838      	ldrb	r0, [r7, #0]
90007a84:	f080 0001 	eor.w	r0, r0, #1
90007a88:	7038      	strb	r0, [r7, #0]
}
90007a8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007a8e:	78b2      	ldrb	r2, [r6, #2]
90007a90:	42a2      	cmp	r2, r4
90007a92:	d10b      	bne.n	90007aac <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
90007a94:	7972      	ldrb	r2, [r6, #5]
90007a96:	42a2      	cmp	r2, r4
90007a98:	d102      	bne.n	90007aa0 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xac>
90007a9a:	7a32      	ldrb	r2, [r6, #8]
90007a9c:	42a2      	cmp	r2, r4
90007a9e:	d0d8      	beq.n	90007a52 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x5e>
            if(board[i][(3-1)-i] != symbol)
90007aa0:	7932      	ldrb	r2, [r6, #4]
90007aa2:	42a2      	cmp	r2, r4
90007aa4:	d102      	bne.n	90007aac <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
90007aa6:	79b2      	ldrb	r2, [r6, #6]
90007aa8:	42a2      	cmp	r2, r4
90007aaa:	d0d2      	beq.n	90007a52 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x5e>
	if( turn_number == 9 )
90007aac:	2b09      	cmp	r3, #9
90007aae:	d1e9      	bne.n	90007a84 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x90>
		return 3;
90007ab0:	2003      	movs	r0, #3
90007ab2:	e7d0      	b.n	90007a56 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
90007ab4:	2401f889 	.word	0x2401f889
90007ab8:	2401f880 	.word	0x2401f880
90007abc:	24000038 	.word	0x24000038
90007ac0:	2401f88c 	.word	0x2401f88c
90007ac4:	9000771d 	.word	0x9000771d
90007ac8:	2401f88a 	.word	0x2401f88a

90007acc <_ZN25screen_tictactoe_gameView12pos4_clickedEv>:
void screen_tictactoe_gameView::pos4_clicked() {
90007acc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][0] == 0 ) {
90007ad0:	4d2a      	ldr	r5, [pc, #168]	; (90007b7c <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb0>)
90007ad2:	782b      	ldrb	r3, [r5, #0]
90007ad4:	2b00      	cmp	r3, #0
90007ad6:	d12e      	bne.n	90007b36 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6a>
90007ad8:	4e29      	ldr	r6, [pc, #164]	; (90007b80 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb4>)
90007ada:	78f3      	ldrb	r3, [r6, #3]
90007adc:	bb5b      	cbnz	r3, 90007b36 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6a>
		if( turn ) {
90007ade:	4f29      	ldr	r7, [pc, #164]	; (90007b84 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb8>)
90007ae0:	4604      	mov	r4, r0
90007ae2:	783b      	ldrb	r3, [r7, #0]
90007ae4:	bb4b      	cbnz	r3, 90007b3a <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6e>
			board[1][0] = 'O';
90007ae6:	234f      	movs	r3, #79	; 0x4f
			pos4_circle.invalidate();
90007ae8:	f600 0014 	addw	r0, r0, #2068	; 0x814
			board[1][0] = 'O';
90007aec:	70f3      	strb	r3, [r6, #3]
90007aee:	2301      	movs	r3, #1
90007af0:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos4_circle.invalidate();
90007af4:	f010 fa01 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007af8:	4a23      	ldr	r2, [pc, #140]	; (90007b88 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xbc>)
		short temp_result = is_game_over(1, 0);
90007afa:	6823      	ldr	r3, [r4, #0]
90007afc:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007b00:	8813      	ldrh	r3, [r2, #0]
90007b02:	3301      	adds	r3, #1
90007b04:	b21b      	sxth	r3, r3
90007b06:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 0);
90007b08:	4a20      	ldr	r2, [pc, #128]	; (90007b8c <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xc0>)
90007b0a:	4590      	cmp	r8, r2
90007b0c:	d11f      	bne.n	90007b4e <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x82>
	if(turn)
90007b0e:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007b10:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
90007b12:	2800      	cmp	r0, #0
90007b14:	bf14      	ite	ne
90007b16:	2458      	movne	r4, #88	; 0x58
90007b18:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007b1a:	42a2      	cmp	r2, r4
90007b1c:	d129      	bne.n	90007b72 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa6>
90007b1e:	7931      	ldrb	r1, [r6, #4]
90007b20:	4291      	cmp	r1, r2
90007b22:	d120      	bne.n	90007b66 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9a>
90007b24:	7972      	ldrb	r2, [r6, #5]
90007b26:	428a      	cmp	r2, r1
90007b28:	d11d      	bne.n	90007b66 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9a>
            if( turn )
90007b2a:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007b2e:	2201      	movs	r2, #1
			result = temp_result;
90007b30:	4b17      	ldr	r3, [pc, #92]	; (90007b90 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xc4>)
			game_over = true;
90007b32:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007b34:	8018      	strh	r0, [r3, #0]
}
90007b36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][0] = 'X';
90007b3a:	2358      	movs	r3, #88	; 0x58
			pos4_cross.invalidate();
90007b3c:	f500 60fd 	add.w	r0, r0, #2024	; 0x7e8
			board[1][0] = 'X';
90007b40:	70f3      	strb	r3, [r6, #3]
90007b42:	2301      	movs	r3, #1
90007b44:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos4_cross.invalidate();
90007b48:	f010 f9d7 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
90007b4c:	e7d4      	b.n	90007af8 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x2c>
		short temp_result = is_game_over(1, 0);
90007b4e:	2200      	movs	r2, #0
90007b50:	4620      	mov	r0, r4
90007b52:	2101      	movs	r1, #1
90007b54:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007b56:	2800      	cmp	r0, #0
90007b58:	d1e9      	bne.n	90007b2e <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
		turn = !turn;
90007b5a:	7838      	ldrb	r0, [r7, #0]
90007b5c:	f080 0001 	eor.w	r0, r0, #1
90007b60:	7038      	strb	r0, [r7, #0]
}
90007b62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007b66:	7832      	ldrb	r2, [r6, #0]
90007b68:	42a2      	cmp	r2, r4
90007b6a:	d102      	bne.n	90007b72 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa6>
90007b6c:	79b2      	ldrb	r2, [r6, #6]
90007b6e:	42a2      	cmp	r2, r4
90007b70:	d0db      	beq.n	90007b2a <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x5e>
	if( turn_number == 9 )
90007b72:	2b09      	cmp	r3, #9
90007b74:	d1f2      	bne.n	90007b5c <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x90>
		return 3;
90007b76:	2003      	movs	r0, #3
90007b78:	e7d9      	b.n	90007b2e <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
90007b7a:	bf00      	nop
90007b7c:	2401f889 	.word	0x2401f889
90007b80:	2401f880 	.word	0x2401f880
90007b84:	24000038 	.word	0x24000038
90007b88:	2401f88c 	.word	0x2401f88c
90007b8c:	9000771d 	.word	0x9000771d
90007b90:	2401f88a 	.word	0x2401f88a

90007b94 <_ZN25screen_tictactoe_gameView12pos5_clickedEv>:
void screen_tictactoe_gameView::pos5_clicked() {
90007b94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][1] == 0 ) {
90007b98:	4d3c      	ldr	r5, [pc, #240]	; (90007c8c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xf8>)
90007b9a:	782b      	ldrb	r3, [r5, #0]
90007b9c:	2b00      	cmp	r3, #0
90007b9e:	d12e      	bne.n	90007bfe <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6a>
90007ba0:	4e3b      	ldr	r6, [pc, #236]	; (90007c90 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xfc>)
90007ba2:	7933      	ldrb	r3, [r6, #4]
90007ba4:	bb5b      	cbnz	r3, 90007bfe <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6a>
		if( turn ) {
90007ba6:	4f3b      	ldr	r7, [pc, #236]	; (90007c94 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x100>)
90007ba8:	4604      	mov	r4, r0
90007baa:	783b      	ldrb	r3, [r7, #0]
90007bac:	bb4b      	cbnz	r3, 90007c02 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6e>
			board[1][1] = 'O';
90007bae:	234f      	movs	r3, #79	; 0x4f
			pos5_circle.invalidate();
90007bb0:	f600 006c 	addw	r0, r0, #2156	; 0x86c
			board[1][1] = 'O';
90007bb4:	7133      	strb	r3, [r6, #4]
90007bb6:	2301      	movs	r3, #1
90007bb8:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos5_circle.invalidate();
90007bbc:	f010 f99d 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007bc0:	4a35      	ldr	r2, [pc, #212]	; (90007c98 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x104>)
		short temp_result = is_game_over(1, 1);
90007bc2:	6823      	ldr	r3, [r4, #0]
90007bc4:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007bc8:	8813      	ldrh	r3, [r2, #0]
90007bca:	3301      	adds	r3, #1
90007bcc:	b21b      	sxth	r3, r3
90007bce:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 1);
90007bd0:	4a32      	ldr	r2, [pc, #200]	; (90007c9c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x108>)
90007bd2:	4590      	cmp	r8, r2
90007bd4:	d11f      	bne.n	90007c16 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x82>
	if(turn)
90007bd6:	783a      	ldrb	r2, [r7, #0]
        if(board[x][i] != symbol)
90007bd8:	78f1      	ldrb	r1, [r6, #3]
		symbol = 'O';
90007bda:	2a00      	cmp	r2, #0
90007bdc:	bf14      	ite	ne
90007bde:	2458      	movne	r4, #88	; 0x58
90007be0:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007be2:	42a1      	cmp	r1, r4
90007be4:	d123      	bne.n	90007c2e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9a>
90007be6:	7930      	ldrb	r0, [r6, #4]
90007be8:	4288      	cmp	r0, r1
90007bea:	d120      	bne.n	90007c2e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9a>
90007bec:	7971      	ldrb	r1, [r6, #5]
90007bee:	4281      	cmp	r1, r0
90007bf0:	d136      	bne.n	90007c60 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xcc>
                if( turn )
90007bf2:	f1c2 0002 	rsb	r0, r2, #2
			game_over = true;
90007bf6:	2201      	movs	r2, #1
			result = temp_result;
90007bf8:	4b29      	ldr	r3, [pc, #164]	; (90007ca0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x10c>)
			game_over = true;
90007bfa:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007bfc:	8018      	strh	r0, [r3, #0]
}
90007bfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][1] = 'X';
90007c02:	2358      	movs	r3, #88	; 0x58
			pos5_cross.invalidate();
90007c04:	f500 6004 	add.w	r0, r0, #2112	; 0x840
			board[1][1] = 'X';
90007c08:	7133      	strb	r3, [r6, #4]
90007c0a:	2301      	movs	r3, #1
90007c0c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos5_cross.invalidate();
90007c10:	f010 f973 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
90007c14:	e7d4      	b.n	90007bc0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x2c>
		short temp_result = is_game_over(1, 1);
90007c16:	2201      	movs	r2, #1
90007c18:	4620      	mov	r0, r4
90007c1a:	4611      	mov	r1, r2
90007c1c:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007c1e:	2800      	cmp	r0, #0
90007c20:	d1e9      	bne.n	90007bf6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
		turn = !turn;
90007c22:	783b      	ldrb	r3, [r7, #0]
90007c24:	f083 0301 	eor.w	r3, r3, #1
90007c28:	703b      	strb	r3, [r7, #0]
}
90007c2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007c2e:	7871      	ldrb	r1, [r6, #1]
90007c30:	42a1      	cmp	r1, r4
90007c32:	d123      	bne.n	90007c7c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xe8>
90007c34:	7931      	ldrb	r1, [r6, #4]
90007c36:	42a1      	cmp	r1, r4
90007c38:	d116      	bne.n	90007c68 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xd4>
90007c3a:	79f1      	ldrb	r1, [r6, #7]
90007c3c:	42a1      	cmp	r1, r4
90007c3e:	d0d8      	beq.n	90007bf2 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
            if(board[i][i] != symbol)
90007c40:	7831      	ldrb	r1, [r6, #0]
90007c42:	42a1      	cmp	r1, r4
90007c44:	d113      	bne.n	90007c6e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xda>
90007c46:	7a31      	ldrb	r1, [r6, #8]
90007c48:	42a1      	cmp	r1, r4
90007c4a:	d0d2      	beq.n	90007bf2 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
            if(board[i][(3-1)-i] != symbol)
90007c4c:	78b1      	ldrb	r1, [r6, #2]
90007c4e:	42a1      	cmp	r1, r4
90007c50:	d102      	bne.n	90007c58 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
90007c52:	79b1      	ldrb	r1, [r6, #6]
90007c54:	42a1      	cmp	r1, r4
90007c56:	d0cc      	beq.n	90007bf2 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
	if( turn_number == 9 )
90007c58:	2b09      	cmp	r3, #9
90007c5a:	d1e2      	bne.n	90007c22 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x8e>
		return 3;
90007c5c:	2003      	movs	r0, #3
90007c5e:	e7ca      	b.n	90007bf6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
        if(board[i][y] != symbol)
90007c60:	7871      	ldrb	r1, [r6, #1]
90007c62:	42a1      	cmp	r1, r4
90007c64:	d0e9      	beq.n	90007c3a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xa6>
90007c66:	e7eb      	b.n	90007c40 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xac>
            if(board[i][i] != symbol)
90007c68:	7831      	ldrb	r1, [r6, #0]
90007c6a:	42a1      	cmp	r1, r4
90007c6c:	d0f4      	beq.n	90007c58 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
            if(board[i][(3-1)-i] != symbol)
90007c6e:	78b1      	ldrb	r1, [r6, #2]
90007c70:	42a1      	cmp	r1, r4
90007c72:	d1f1      	bne.n	90007c58 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
90007c74:	7931      	ldrb	r1, [r6, #4]
90007c76:	42a1      	cmp	r1, r4
90007c78:	d0eb      	beq.n	90007c52 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xbe>
90007c7a:	e7ed      	b.n	90007c58 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
            if(board[i][i] != symbol)
90007c7c:	7831      	ldrb	r1, [r6, #0]
90007c7e:	42a1      	cmp	r1, r4
90007c80:	d1f5      	bne.n	90007c6e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xda>
90007c82:	7931      	ldrb	r1, [r6, #4]
90007c84:	42a1      	cmp	r1, r4
90007c86:	d0de      	beq.n	90007c46 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb2>
90007c88:	e7e6      	b.n	90007c58 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
90007c8a:	bf00      	nop
90007c8c:	2401f889 	.word	0x2401f889
90007c90:	2401f880 	.word	0x2401f880
90007c94:	24000038 	.word	0x24000038
90007c98:	2401f88c 	.word	0x2401f88c
90007c9c:	9000771d 	.word	0x9000771d
90007ca0:	2401f88a 	.word	0x2401f88a

90007ca4 <_ZN25screen_tictactoe_gameView12pos6_clickedEv>:
void screen_tictactoe_gameView::pos6_clicked() {
90007ca4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][2] == 0 ) {
90007ca8:	4d2b      	ldr	r5, [pc, #172]	; (90007d58 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb4>)
90007caa:	782b      	ldrb	r3, [r5, #0]
90007cac:	2b00      	cmp	r3, #0
90007cae:	d12e      	bne.n	90007d0e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6a>
90007cb0:	4e2a      	ldr	r6, [pc, #168]	; (90007d5c <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb8>)
90007cb2:	7973      	ldrb	r3, [r6, #5]
90007cb4:	bb5b      	cbnz	r3, 90007d0e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6a>
		if( turn ) {
90007cb6:	4f2a      	ldr	r7, [pc, #168]	; (90007d60 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xbc>)
90007cb8:	4604      	mov	r4, r0
90007cba:	783b      	ldrb	r3, [r7, #0]
90007cbc:	bb4b      	cbnz	r3, 90007d12 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6e>
			board[1][2] = 'O';
90007cbe:	234f      	movs	r3, #79	; 0x4f
			pos6_circle.invalidate();
90007cc0:	f600 00c4 	addw	r0, r0, #2244	; 0x8c4
			board[1][2] = 'O';
90007cc4:	7173      	strb	r3, [r6, #5]
90007cc6:	2301      	movs	r3, #1
90007cc8:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos6_circle.invalidate();
90007ccc:	f010 f915 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007cd0:	4a24      	ldr	r2, [pc, #144]	; (90007d64 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc0>)
		short temp_result = is_game_over(1, 2);
90007cd2:	6823      	ldr	r3, [r4, #0]
90007cd4:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007cd8:	8813      	ldrh	r3, [r2, #0]
90007cda:	3301      	adds	r3, #1
90007cdc:	b21b      	sxth	r3, r3
90007cde:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 2);
90007ce0:	4a21      	ldr	r2, [pc, #132]	; (90007d68 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc4>)
90007ce2:	4590      	cmp	r8, r2
90007ce4:	d11f      	bne.n	90007d26 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x82>
	if(turn)
90007ce6:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007ce8:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
90007cea:	2800      	cmp	r0, #0
90007cec:	bf14      	ite	ne
90007cee:	2458      	movne	r4, #88	; 0x58
90007cf0:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007cf2:	42a2      	cmp	r2, r4
90007cf4:	d123      	bne.n	90007d3e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9a>
90007cf6:	7931      	ldrb	r1, [r6, #4]
90007cf8:	4291      	cmp	r1, r2
90007cfa:	d120      	bne.n	90007d3e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9a>
90007cfc:	7972      	ldrb	r2, [r6, #5]
90007cfe:	428a      	cmp	r2, r1
90007d00:	d126      	bne.n	90007d50 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
            if( turn )
90007d02:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007d06:	2201      	movs	r2, #1
			result = temp_result;
90007d08:	4b18      	ldr	r3, [pc, #96]	; (90007d6c <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc8>)
			game_over = true;
90007d0a:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007d0c:	8018      	strh	r0, [r3, #0]
}
90007d0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][2] = 'X';
90007d12:	2358      	movs	r3, #88	; 0x58
			pos6_cross.invalidate();
90007d14:	f600 0098 	addw	r0, r0, #2200	; 0x898
			board[1][2] = 'X';
90007d18:	7173      	strb	r3, [r6, #5]
90007d1a:	2301      	movs	r3, #1
90007d1c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos6_cross.invalidate();
90007d20:	f010 f8eb 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
90007d24:	e7d4      	b.n	90007cd0 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x2c>
		short temp_result = is_game_over(1, 2);
90007d26:	2202      	movs	r2, #2
90007d28:	4620      	mov	r0, r4
90007d2a:	2101      	movs	r1, #1
90007d2c:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007d2e:	2800      	cmp	r0, #0
90007d30:	d1e9      	bne.n	90007d06 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
		turn = !turn;
90007d32:	7838      	ldrb	r0, [r7, #0]
90007d34:	f080 0001 	eor.w	r0, r0, #1
90007d38:	7038      	strb	r0, [r7, #0]
}
90007d3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007d3e:	78b2      	ldrb	r2, [r6, #2]
90007d40:	42a2      	cmp	r2, r4
90007d42:	d105      	bne.n	90007d50 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
90007d44:	7972      	ldrb	r2, [r6, #5]
90007d46:	42a2      	cmp	r2, r4
90007d48:	d102      	bne.n	90007d50 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
90007d4a:	7a32      	ldrb	r2, [r6, #8]
90007d4c:	42a2      	cmp	r2, r4
90007d4e:	d0d8      	beq.n	90007d02 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x5e>
	if( turn_number == 9 )
90007d50:	2b09      	cmp	r3, #9
90007d52:	d1ef      	bne.n	90007d34 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x90>
		return 3;
90007d54:	2003      	movs	r0, #3
90007d56:	e7d6      	b.n	90007d06 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
90007d58:	2401f889 	.word	0x2401f889
90007d5c:	2401f880 	.word	0x2401f880
90007d60:	24000038 	.word	0x24000038
90007d64:	2401f88c 	.word	0x2401f88c
90007d68:	9000771d 	.word	0x9000771d
90007d6c:	2401f88a 	.word	0x2401f88a

90007d70 <_ZN25screen_tictactoe_gameView12pos7_clickedEv>:
void screen_tictactoe_gameView::pos7_clicked() {
90007d70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][0] == 0 ) {
90007d74:	4d2d      	ldr	r5, [pc, #180]	; (90007e2c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xbc>)
90007d76:	782b      	ldrb	r3, [r5, #0]
90007d78:	2b00      	cmp	r3, #0
90007d7a:	d12f      	bne.n	90007ddc <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x6c>
90007d7c:	4e2c      	ldr	r6, [pc, #176]	; (90007e30 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc0>)
90007d7e:	79b3      	ldrb	r3, [r6, #6]
90007d80:	bb63      	cbnz	r3, 90007ddc <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x6c>
		if( turn ) {
90007d82:	4f2c      	ldr	r7, [pc, #176]	; (90007e34 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc4>)
90007d84:	4604      	mov	r4, r0
90007d86:	783b      	ldrb	r3, [r7, #0]
90007d88:	bb53      	cbnz	r3, 90007de0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x70>
			board[2][0] = 'O';
90007d8a:	234f      	movs	r3, #79	; 0x4f
			pos7_circle.invalidate();
90007d8c:	f500 600f 	add.w	r0, r0, #2288	; 0x8f0
			board[2][0] = 'O';
90007d90:	71b3      	strb	r3, [r6, #6]
90007d92:	2301      	movs	r3, #1
90007d94:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos7_circle.invalidate();
90007d98:	f010 f8af 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007d9c:	4a26      	ldr	r2, [pc, #152]	; (90007e38 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc8>)
		short temp_result = is_game_over(2, 0);
90007d9e:	6823      	ldr	r3, [r4, #0]
90007da0:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007da4:	8813      	ldrh	r3, [r2, #0]
90007da6:	3301      	adds	r3, #1
90007da8:	b21b      	sxth	r3, r3
90007daa:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 0);
90007dac:	4a23      	ldr	r2, [pc, #140]	; (90007e3c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xcc>)
90007dae:	4590      	cmp	r8, r2
90007db0:	d120      	bne.n	90007df4 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x84>
	if(turn)
90007db2:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007db4:	79b4      	ldrb	r4, [r6, #6]
		symbol = 'O';
90007db6:	2800      	cmp	r0, #0
90007db8:	bf14      	ite	ne
90007dba:	2258      	movne	r2, #88	; 0x58
90007dbc:	224f      	moveq	r2, #79	; 0x4f
        if(board[x][i] != symbol)
90007dbe:	42a2      	cmp	r2, r4
90007dc0:	d130      	bne.n	90007e24 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>
90007dc2:	79f1      	ldrb	r1, [r6, #7]
90007dc4:	4291      	cmp	r1, r2
90007dc6:	d121      	bne.n	90007e0c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
90007dc8:	f896 c008 	ldrb.w	ip, [r6, #8]
90007dcc:	458c      	cmp	ip, r1
90007dce:	d11d      	bne.n	90007e0c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
                if( turn )
90007dd0:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007dd4:	2201      	movs	r2, #1
			result = temp_result;
90007dd6:	4b1a      	ldr	r3, [pc, #104]	; (90007e40 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xd0>)
			game_over = true;
90007dd8:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007dda:	8018      	strh	r0, [r3, #0]
}
90007ddc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][0] = 'X';
90007de0:	2358      	movs	r3, #88	; 0x58
			pos7_cross.invalidate();
90007de2:	f600 101c 	addw	r0, r0, #2332	; 0x91c
			board[2][0] = 'X';
90007de6:	71b3      	strb	r3, [r6, #6]
90007de8:	2301      	movs	r3, #1
90007dea:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos7_cross.invalidate();
90007dee:	f010 f884 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
90007df2:	e7d3      	b.n	90007d9c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x2c>
		short temp_result = is_game_over(2, 0);
90007df4:	2200      	movs	r2, #0
90007df6:	4620      	mov	r0, r4
90007df8:	2102      	movs	r1, #2
90007dfa:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007dfc:	2800      	cmp	r0, #0
90007dfe:	d1e9      	bne.n	90007dd4 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x64>
		turn = !turn;
90007e00:	7838      	ldrb	r0, [r7, #0]
90007e02:	f080 0001 	eor.w	r0, r0, #1
90007e06:	7038      	strb	r0, [r7, #0]
}
90007e08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007e0c:	7831      	ldrb	r1, [r6, #0]
90007e0e:	42a1      	cmp	r1, r4
90007e10:	d102      	bne.n	90007e18 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xa8>
90007e12:	78f1      	ldrb	r1, [r6, #3]
90007e14:	42a1      	cmp	r1, r4
90007e16:	d0db      	beq.n	90007dd0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
            if(board[i][(3-1)-i] != symbol)
90007e18:	78b1      	ldrb	r1, [r6, #2]
90007e1a:	4291      	cmp	r1, r2
90007e1c:	d102      	bne.n	90007e24 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>
90007e1e:	7931      	ldrb	r1, [r6, #4]
90007e20:	4291      	cmp	r1, r2
90007e22:	d0d5      	beq.n	90007dd0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
	if( turn_number == 9 )
90007e24:	2b09      	cmp	r3, #9
90007e26:	d1ec      	bne.n	90007e02 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x92>
		return 3;
90007e28:	2003      	movs	r0, #3
90007e2a:	e7d3      	b.n	90007dd4 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x64>
90007e2c:	2401f889 	.word	0x2401f889
90007e30:	2401f880 	.word	0x2401f880
90007e34:	24000038 	.word	0x24000038
90007e38:	2401f88c 	.word	0x2401f88c
90007e3c:	9000771d 	.word	0x9000771d
90007e40:	2401f88a 	.word	0x2401f88a

90007e44 <_ZN25screen_tictactoe_gameView12pos8_clickedEv>:
void screen_tictactoe_gameView::pos8_clicked() {
90007e44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][1] == 0 ) {
90007e48:	4d2b      	ldr	r5, [pc, #172]	; (90007ef8 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb4>)
90007e4a:	782b      	ldrb	r3, [r5, #0]
90007e4c:	2b00      	cmp	r3, #0
90007e4e:	d12e      	bne.n	90007eae <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6a>
90007e50:	4e2a      	ldr	r6, [pc, #168]	; (90007efc <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb8>)
90007e52:	79f3      	ldrb	r3, [r6, #7]
90007e54:	bb5b      	cbnz	r3, 90007eae <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6a>
		if( turn ) {
90007e56:	4f2a      	ldr	r7, [pc, #168]	; (90007f00 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xbc>)
90007e58:	4604      	mov	r4, r0
90007e5a:	783b      	ldrb	r3, [r7, #0]
90007e5c:	bb4b      	cbnz	r3, 90007eb2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6e>
			board[2][1] = 'O';
90007e5e:	234f      	movs	r3, #79	; 0x4f
			pos8_circle.invalidate();
90007e60:	f600 1048 	addw	r0, r0, #2376	; 0x948
			board[2][1] = 'O';
90007e64:	71f3      	strb	r3, [r6, #7]
90007e66:	2301      	movs	r3, #1
90007e68:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos8_circle.invalidate();
90007e6c:	f010 f845 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007e70:	4a24      	ldr	r2, [pc, #144]	; (90007f04 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc0>)
		short temp_result = is_game_over(2, 1);
90007e72:	6823      	ldr	r3, [r4, #0]
90007e74:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007e78:	8813      	ldrh	r3, [r2, #0]
90007e7a:	3301      	adds	r3, #1
90007e7c:	b21b      	sxth	r3, r3
90007e7e:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 1);
90007e80:	4a21      	ldr	r2, [pc, #132]	; (90007f08 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc4>)
90007e82:	4590      	cmp	r8, r2
90007e84:	d11f      	bne.n	90007ec6 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x82>
	if(turn)
90007e86:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007e88:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
90007e8a:	2800      	cmp	r0, #0
90007e8c:	bf14      	ite	ne
90007e8e:	2458      	movne	r4, #88	; 0x58
90007e90:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007e92:	42a2      	cmp	r2, r4
90007e94:	d123      	bne.n	90007ede <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
90007e96:	79f1      	ldrb	r1, [r6, #7]
90007e98:	4291      	cmp	r1, r2
90007e9a:	d120      	bne.n	90007ede <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
90007e9c:	7a32      	ldrb	r2, [r6, #8]
90007e9e:	428a      	cmp	r2, r1
90007ea0:	d11d      	bne.n	90007ede <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
            if( turn )
90007ea2:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007ea6:	2201      	movs	r2, #1
			result = temp_result;
90007ea8:	4b18      	ldr	r3, [pc, #96]	; (90007f0c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc8>)
			game_over = true;
90007eaa:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007eac:	8018      	strh	r0, [r3, #0]
}
90007eae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][1] = 'X';
90007eb2:	2358      	movs	r3, #88	; 0x58
			pos8_cross.invalidate();
90007eb4:	f600 1074 	addw	r0, r0, #2420	; 0x974
			board[2][1] = 'X';
90007eb8:	71f3      	strb	r3, [r6, #7]
90007eba:	2301      	movs	r3, #1
90007ebc:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos8_cross.invalidate();
90007ec0:	f010 f81b 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
90007ec4:	e7d4      	b.n	90007e70 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x2c>
		short temp_result = is_game_over(2, 1);
90007ec6:	2201      	movs	r2, #1
90007ec8:	4620      	mov	r0, r4
90007eca:	2102      	movs	r1, #2
90007ecc:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007ece:	2800      	cmp	r0, #0
90007ed0:	d1e9      	bne.n	90007ea6 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
		turn = !turn;
90007ed2:	7838      	ldrb	r0, [r7, #0]
90007ed4:	f080 0001 	eor.w	r0, r0, #1
90007ed8:	7038      	strb	r0, [r7, #0]
}
90007eda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007ede:	7872      	ldrb	r2, [r6, #1]
90007ee0:	42a2      	cmp	r2, r4
90007ee2:	d105      	bne.n	90007ef0 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>
90007ee4:	7932      	ldrb	r2, [r6, #4]
90007ee6:	42a2      	cmp	r2, r4
90007ee8:	d102      	bne.n	90007ef0 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>
90007eea:	79f2      	ldrb	r2, [r6, #7]
90007eec:	42a2      	cmp	r2, r4
90007eee:	d0d8      	beq.n	90007ea2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x5e>
	if( turn_number == 9 )
90007ef0:	2b09      	cmp	r3, #9
90007ef2:	d1ef      	bne.n	90007ed4 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x90>
		return 3;
90007ef4:	2003      	movs	r0, #3
90007ef6:	e7d6      	b.n	90007ea6 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
90007ef8:	2401f889 	.word	0x2401f889
90007efc:	2401f880 	.word	0x2401f880
90007f00:	24000038 	.word	0x24000038
90007f04:	2401f88c 	.word	0x2401f88c
90007f08:	9000771d 	.word	0x9000771d
90007f0c:	2401f88a 	.word	0x2401f88a

90007f10 <_ZN25screen_tictactoe_gameView12pos9_clickedEv>:
void screen_tictactoe_gameView::pos9_clicked() {
90007f10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][2] == 0 ) {
90007f14:	4d30      	ldr	r5, [pc, #192]	; (90007fd8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xc8>)
90007f16:	782b      	ldrb	r3, [r5, #0]
90007f18:	2b00      	cmp	r3, #0
90007f1a:	d12e      	bne.n	90007f7a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6a>
90007f1c:	4e2f      	ldr	r6, [pc, #188]	; (90007fdc <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xcc>)
90007f1e:	7a33      	ldrb	r3, [r6, #8]
90007f20:	bb5b      	cbnz	r3, 90007f7a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6a>
		if( turn ) {
90007f22:	4f2f      	ldr	r7, [pc, #188]	; (90007fe0 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd0>)
90007f24:	4604      	mov	r4, r0
90007f26:	783b      	ldrb	r3, [r7, #0]
90007f28:	bb4b      	cbnz	r3, 90007f7e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6e>
			board[2][2] = 'O';
90007f2a:	234f      	movs	r3, #79	; 0x4f
			pos9_circle.invalidate();
90007f2c:	f500 601a 	add.w	r0, r0, #2464	; 0x9a0
			board[2][2] = 'O';
90007f30:	7233      	strb	r3, [r6, #8]
90007f32:	2301      	movs	r3, #1
90007f34:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos9_circle.invalidate();
90007f38:	f00f ffdf 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007f3c:	4a29      	ldr	r2, [pc, #164]	; (90007fe4 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd4>)
		short temp_result = is_game_over(2, 2);
90007f3e:	6823      	ldr	r3, [r4, #0]
90007f40:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007f44:	8813      	ldrh	r3, [r2, #0]
90007f46:	3301      	adds	r3, #1
90007f48:	b21b      	sxth	r3, r3
90007f4a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 2);
90007f4c:	4a26      	ldr	r2, [pc, #152]	; (90007fe8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd8>)
90007f4e:	4590      	cmp	r8, r2
90007f50:	d11f      	bne.n	90007f92 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x82>
	if(turn)
90007f52:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007f54:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
90007f56:	2800      	cmp	r0, #0
90007f58:	bf14      	ite	ne
90007f5a:	2458      	movne	r4, #88	; 0x58
90007f5c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007f5e:	42a2      	cmp	r2, r4
90007f60:	d123      	bne.n	90007faa <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
90007f62:	79f1      	ldrb	r1, [r6, #7]
90007f64:	4291      	cmp	r1, r2
90007f66:	d120      	bne.n	90007faa <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
90007f68:	7a32      	ldrb	r2, [r6, #8]
90007f6a:	428a      	cmp	r2, r1
90007f6c:	d11d      	bne.n	90007faa <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
                if( turn )
90007f6e:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007f72:	2201      	movs	r2, #1
			result = temp_result;
90007f74:	4b1d      	ldr	r3, [pc, #116]	; (90007fec <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xdc>)
			game_over = true;
90007f76:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007f78:	8018      	strh	r0, [r3, #0]
}
90007f7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][2] = 'X';
90007f7e:	2358      	movs	r3, #88	; 0x58
			pos9_cross.invalidate();
90007f80:	f600 10cc 	addw	r0, r0, #2508	; 0x9cc
			board[2][2] = 'X';
90007f84:	7233      	strb	r3, [r6, #8]
90007f86:	2301      	movs	r3, #1
90007f88:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos9_cross.invalidate();
90007f8c:	f00f ffb5 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
90007f90:	e7d4      	b.n	90007f3c <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x2c>
		short temp_result = is_game_over(2, 2);
90007f92:	2202      	movs	r2, #2
90007f94:	4620      	mov	r0, r4
90007f96:	4611      	mov	r1, r2
90007f98:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007f9a:	2800      	cmp	r0, #0
90007f9c:	d1e9      	bne.n	90007f72 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
		turn = !turn;
90007f9e:	783b      	ldrb	r3, [r7, #0]
90007fa0:	f083 0301 	eor.w	r3, r3, #1
90007fa4:	703b      	strb	r3, [r7, #0]
}
90007fa6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007faa:	78b2      	ldrb	r2, [r6, #2]
90007fac:	42a2      	cmp	r2, r4
90007fae:	d105      	bne.n	90007fbc <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xac>
90007fb0:	7972      	ldrb	r2, [r6, #5]
90007fb2:	42a2      	cmp	r2, r4
90007fb4:	d102      	bne.n	90007fbc <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xac>
90007fb6:	7a32      	ldrb	r2, [r6, #8]
90007fb8:	42a2      	cmp	r2, r4
90007fba:	d0d8      	beq.n	90007f6e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x5e>
            if(board[i][i] != symbol)
90007fbc:	7832      	ldrb	r2, [r6, #0]
90007fbe:	42a2      	cmp	r2, r4
90007fc0:	d105      	bne.n	90007fce <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbe>
90007fc2:	7932      	ldrb	r2, [r6, #4]
90007fc4:	42a2      	cmp	r2, r4
90007fc6:	d102      	bne.n	90007fce <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbe>
90007fc8:	7a32      	ldrb	r2, [r6, #8]
90007fca:	42a2      	cmp	r2, r4
90007fcc:	d0cf      	beq.n	90007f6e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x5e>
	if( turn_number == 9 )
90007fce:	2b09      	cmp	r3, #9
90007fd0:	d1e5      	bne.n	90007f9e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x8e>
		return 3;
90007fd2:	2003      	movs	r0, #3
90007fd4:	e7cd      	b.n	90007f72 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
90007fd6:	bf00      	nop
90007fd8:	2401f889 	.word	0x2401f889
90007fdc:	2401f880 	.word	0x2401f880
90007fe0:	24000038 	.word	0x24000038
90007fe4:	2401f88c 	.word	0x2401f88c
90007fe8:	9000771d 	.word	0x9000771d
90007fec:	2401f88a 	.word	0x2401f88a

90007ff0 <_ZN25screen_tictactoe_gameView15handleTickEventEv>:
void screen_tictactoe_gameView::handleTickEvent() {
90007ff0:	b538      	push	{r3, r4, r5, lr}
	if( game_over ) {
90007ff2:	4b2c      	ldr	r3, [pc, #176]	; (900080a4 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xb4>)
void screen_tictactoe_gameView::handleTickEvent() {
90007ff4:	4604      	mov	r4, r0
	if( game_over ) {
90007ff6:	781b      	ldrb	r3, [r3, #0]
90007ff8:	b9d3      	cbnz	r3, 90008030 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x40>
		if( turn )
90007ffa:	4b2b      	ldr	r3, [pc, #172]	; (900080a8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xb8>)
90007ffc:	781b      	ldrb	r3, [r3, #0]
90007ffe:	b95b      	cbnz	r3, 90008018 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x28>
			Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "2");
90008000:	4a2a      	ldr	r2, [pc, #168]	; (900080ac <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xbc>)
90008002:	210a      	movs	r1, #10
90008004:	f600 3068 	addw	r0, r0, #2920	; 0xb68
90008008:	f011 ffc6 	bl	90019f98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		lbl_turn.invalidate();
9000800c:	f604 20f4 	addw	r0, r4, #2804	; 0xaf4
}
90008010:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_turn.invalidate();
90008014:	f00f bf71 	b.w	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
			Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "1");
90008018:	4a25      	ldr	r2, [pc, #148]	; (900080b0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xc0>)
9000801a:	210a      	movs	r1, #10
9000801c:	f600 3068 	addw	r0, r0, #2920	; 0xb68
90008020:	f011 ffba 	bl	90019f98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		lbl_turn.invalidate();
90008024:	f604 20f4 	addw	r0, r4, #2804	; 0xaf4
}
90008028:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_turn.invalidate();
9000802c:	f00f bf65 	b.w	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
90008030:	2501      	movs	r5, #1
		btn_back.invalidate();
90008032:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
90008036:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
9000803a:	f00f ff5e 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		box_background.invalidate();
9000803e:	f604 10f8 	addw	r0, r4, #2552	; 0x9f8
90008042:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
90008046:	f00f ff58 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		lbl_game_over.invalidate();
9000804a:	f604 2024 	addw	r0, r4, #2596	; 0xa24
9000804e:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
90008052:	f00f ff52 	bl	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
		if( result == 1 )
90008056:	4b17      	ldr	r3, [pc, #92]	; (900080b4 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xc4>)
90008058:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
9000805c:	f9b3 3000 	ldrsh.w	r3, [r3]
90008060:	42ab      	cmp	r3, r5
90008062:	d009      	beq.n	90008078 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x88>
		else if( result == 2 )
90008064:	2b02      	cmp	r3, #2
90008066:	d00e      	beq.n	90008086 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x96>
		else if( result == 3 )
90008068:	2b03      	cmp	r3, #3
9000806a:	d013      	beq.n	90008094 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xa4>
		lbl_result.invalidate();
9000806c:	f604 20a8 	addw	r0, r4, #2728	; 0xaa8
}
90008070:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_result.invalidate();
90008074:	f00f bf41 	b.w	90017efa <_ZNK8touchgfx8Drawable10invalidateEv>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Player 1 wins");
90008078:	4a0f      	ldr	r2, [pc, #60]	; (900080b8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xc8>)
9000807a:	2114      	movs	r1, #20
9000807c:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
90008080:	f011 ff8a 	bl	90019f98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
90008084:	e7f2      	b.n	9000806c <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x7c>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Player 2 wins");
90008086:	4a0d      	ldr	r2, [pc, #52]	; (900080bc <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xcc>)
90008088:	2114      	movs	r1, #20
9000808a:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
9000808e:	f011 ff83 	bl	90019f98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
90008092:	e7eb      	b.n	9000806c <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x7c>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Tie");
90008094:	4a0a      	ldr	r2, [pc, #40]	; (900080c0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xd0>)
90008096:	2114      	movs	r1, #20
90008098:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
9000809c:	f011 ff7c 	bl	90019f98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
900080a0:	e7e4      	b.n	9000806c <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x7c>
900080a2:	bf00      	nop
900080a4:	2401f889 	.word	0x2401f889
900080a8:	24000038 	.word	0x24000038
900080ac:	9002bb78 	.word	0x9002bb78
900080b0:	9002bb74 	.word	0x9002bb74
900080b4:	2401f88a 	.word	0x2401f88a
900080b8:	9002bb50 	.word	0x9002bb50
900080bc:	9002bb60 	.word	0x9002bb60
900080c0:	9002bb70 	.word	0x9002bb70

900080c4 <_ZN25screen_tictactoe_gameView11setupScreenEv>:
    screen_tictactoe_gameViewBase::setupScreen();
900080c4:	f7fd b92e 	b.w	90005324 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>

900080c8 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
900080c8:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900080cc:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
900080ce:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900080d2:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900080d6:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
900080d8:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
900080da:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900080de:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
900080e2:	4770      	bx	lr

900080e4 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
900080e4:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
900080e8:	2b01      	cmp	r3, #1
900080ea:	d102      	bne.n	900080f2 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
900080ec:	2300      	movs	r3, #0
900080ee:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
900080f2:	2000      	movs	r0, #0
900080f4:	4770      	bx	lr
900080f6:	bf00      	nop

900080f8 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
900080f8:	2000      	movs	r0, #0
900080fa:	4770      	bx	lr

900080fc <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900080fc:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900080fe:	6904      	ldr	r4, [r0, #16]
90008100:	8900      	ldrh	r0, [r0, #8]
90008102:	46a4      	mov	ip, r4
}
90008104:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90008108:	4760      	bx	ip
9000810a:	bf00      	nop

9000810c <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
9000810c:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
9000810e:	68c4      	ldr	r4, [r0, #12]
90008110:	8900      	ldrh	r0, [r0, #8]
90008112:	46a4      	mov	ip, r4
}
90008114:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90008118:	4760      	bx	ip
9000811a:	bf00      	nop

9000811c <FT5336_GestureConfig>:
{
9000811c:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
9000811e:	f100 0518 	add.w	r5, r0, #24
{
90008122:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90008124:	7809      	ldrb	r1, [r1, #0]
90008126:	4628      	mov	r0, r5
90008128:	f000 f96c 	bl	90008404 <ft5336_radian_value>
9000812c:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
9000812e:	7931      	ldrb	r1, [r6, #4]
90008130:	4628      	mov	r0, r5
90008132:	f000 f975 	bl	90008420 <ft5336_offset_left_right>
90008136:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90008138:	7a31      	ldrb	r1, [r6, #8]
9000813a:	4628      	mov	r0, r5
9000813c:	f000 f97e 	bl	9000843c <ft5336_offset_up_down>
90008140:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90008142:	7b31      	ldrb	r1, [r6, #12]
90008144:	4628      	mov	r0, r5
90008146:	f000 f987 	bl	90008458 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000814a:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
9000814c:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000814e:	4628      	mov	r0, r5
90008150:	f000 f990 	bl	90008474 <ft5336_distance_up_down>
90008154:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90008156:	7d31      	ldrb	r1, [r6, #20]
90008158:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000815a:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
9000815c:	f000 f998 	bl	90008490 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90008160:	42c4      	cmn	r4, r0
}
90008162:	bf14      	ite	ne
90008164:	f04f 30ff 	movne.w	r0, #4294967295
90008168:	2000      	moveq	r0, #0
9000816a:	bd70      	pop	{r4, r5, r6, pc}

9000816c <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
9000816c:	3018      	adds	r0, #24
9000816e:	f000 b9ab 	b.w	900084c8 <ft5336_chip_id>
90008172:	bf00      	nop

90008174 <FT5336_GetState>:
{
90008174:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90008176:	f100 0518 	add.w	r5, r0, #24
{
9000817a:	b083      	sub	sp, #12
9000817c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000817e:	4628      	mov	r0, r5
90008180:	a901      	add	r1, sp, #4
90008182:	f000 f931 	bl	900083e8 <ft5336_td_status>
90008186:	bb10      	cbnz	r0, 900081ce <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90008188:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
9000818c:	2b05      	cmp	r3, #5
9000818e:	bf94      	ite	ls
90008190:	4619      	movls	r1, r3
90008192:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90008194:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90008196:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90008198:	4628      	mov	r0, r5
9000819a:	2103      	movs	r1, #3
9000819c:	eb0d 0203 	add.w	r2, sp, r3
900081a0:	f000 f910 	bl	900083c4 <ft5336_read_reg>
900081a4:	b9b0      	cbnz	r0, 900081d4 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900081a6:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900081aa:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900081ae:	0212      	lsls	r2, r2, #8
900081b0:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900081b4:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900081b6:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900081ba:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900081be:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900081c0:	f89d 1007 	ldrb.w	r1, [sp, #7]
900081c4:	430b      	orrs	r3, r1
900081c6:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900081ca:	b003      	add	sp, #12
900081cc:	bd30      	pop	{r4, r5, pc}
900081ce:	f04f 31ff 	mov.w	r1, #4294967295
900081d2:	e7df      	b.n	90008194 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
900081d4:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
900081d8:	e7f7      	b.n	900081ca <FT5336_GetState+0x56>
900081da:	bf00      	nop

900081dc <FT5336_GetMultiTouchState>:
{
900081dc:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900081de:	f100 0518 	add.w	r5, r0, #24
{
900081e2:	b088      	sub	sp, #32
900081e4:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900081e6:	4628      	mov	r0, r5
900081e8:	4669      	mov	r1, sp
900081ea:	f000 f8fd 	bl	900083e8 <ft5336_td_status>
900081ee:	2800      	cmp	r0, #0
900081f0:	f040 809a 	bne.w	90008328 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900081f4:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900081f8:	2b05      	cmp	r3, #5
900081fa:	bf94      	ite	ls
900081fc:	4619      	movls	r1, r3
900081fe:	2100      	movhi	r1, #0
90008200:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90008202:	231e      	movs	r3, #30
90008204:	466a      	mov	r2, sp
90008206:	4628      	mov	r0, r5
90008208:	2103      	movs	r1, #3
9000820a:	f000 f8db 	bl	900083c4 <ft5336_read_reg>
9000820e:	2800      	cmp	r0, #0
90008210:	f040 808d 	bne.w	9000832e <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008214:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008218:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000821c:	020a      	lsls	r2, r1, #8
9000821e:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008222:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008224:	f89d c007 	ldrb.w	ip, [sp, #7]
90008228:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000822c:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000822e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008232:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008236:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008238:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000823c:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000823e:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008240:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008242:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008244:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008248:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000824a:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000824e:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008252:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008254:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008256:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000825a:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000825c:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000825e:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008260:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008264:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008266:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008268:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000826c:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008270:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008272:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008274:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008276:	ea45 050c 	orr.w	r5, r5, ip
9000827a:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000827e:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008282:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008284:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008286:	0212      	lsls	r2, r2, #8
90008288:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000828c:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000828e:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008292:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008296:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008298:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000829a:	f89d 300e 	ldrb.w	r3, [sp, #14]
9000829e:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900082a0:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900082a4:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900082a6:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900082a8:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900082ac:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900082ae:	f89d 200f 	ldrb.w	r2, [sp, #15]
900082b2:	4313      	orrs	r3, r2
900082b4:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900082b6:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900082b8:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900082bc:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900082c0:	020a      	lsls	r2, r1, #8
900082c2:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900082c6:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900082c8:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900082cc:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900082ce:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900082d2:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900082d4:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900082d8:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900082da:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900082dc:	f89d 1018 	ldrb.w	r1, [sp, #24]
900082e0:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900082e2:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900082e4:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900082e6:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900082ea:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900082ec:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900082f0:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900082f2:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900082f6:	f89d 301d 	ldrb.w	r3, [sp, #29]
900082fa:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900082fc:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900082fe:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008300:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008304:	6625      	str	r5, [r4, #96]	; 0x60
90008306:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008308:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000830c:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000830e:	021b      	lsls	r3, r3, #8
90008310:	f89d 101b 	ldrb.w	r1, [sp, #27]
90008314:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90008318:	430b      	orrs	r3, r1
9000831a:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000831c:	f89d 3019 	ldrb.w	r3, [sp, #25]
90008320:	4313      	orrs	r3, r2
90008322:	6163      	str	r3, [r4, #20]
}
90008324:	b008      	add	sp, #32
90008326:	bd70      	pop	{r4, r5, r6, pc}
90008328:	f04f 31ff 	mov.w	r1, #4294967295
9000832c:	e768      	b.n	90008200 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
9000832e:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90008332:	e7f7      	b.n	90008324 <FT5336_GetMultiTouchState+0x148>

90008334 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90008334:	3018      	adds	r0, #24
90008336:	f000 b84d 	b.w	900083d4 <ft5336_gest_id>
9000833a:	bf00      	nop

9000833c <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
9000833c:	2101      	movs	r1, #1
9000833e:	3018      	adds	r0, #24
90008340:	f000 b8b4 	b.w	900084ac <ft5336_g_mode>

90008344 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90008344:	2100      	movs	r1, #0
90008346:	3018      	adds	r0, #24
90008348:	f000 b8b0 	b.w	900084ac <ft5336_g_mode>

9000834c <FT5336_Init>:
{
9000834c:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
9000834e:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
90008352:	b98d      	cbnz	r5, 90008378 <FT5336_Init+0x2c>
    pObj->IO.Init();
90008354:	4606      	mov	r6, r0
90008356:	4604      	mov	r4, r0
90008358:	f856 3b18 	ldr.w	r3, [r6], #24
9000835c:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
9000835e:	4629      	mov	r1, r5
90008360:	4630      	mov	r0, r6
90008362:	f000 f8a3 	bl	900084ac <ft5336_g_mode>
  if(ret != FT5336_OK)
90008366:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90008368:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
9000836c:	bf18      	it	ne
9000836e:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90008370:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
90008374:	4240      	negs	r0, r0
}
90008376:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
90008378:	2000      	movs	r0, #0
}
9000837a:	bd70      	pop	{r4, r5, r6, pc}

9000837c <FT5336_ClearIT>:
9000837c:	2000      	movs	r0, #0
9000837e:	4770      	bx	lr

90008380 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90008380:	b1c0      	cbz	r0, 900083b4 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90008382:	890a      	ldrh	r2, [r1, #8]
{
90008384:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90008386:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
9000838a:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
9000838c:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90008390:	694a      	ldr	r2, [r1, #20]
90008392:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90008396:	4909      	ldr	r1, [pc, #36]	; (900083bc <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90008398:	60c5      	str	r5, [r0, #12]
9000839a:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
9000839e:	4a08      	ldr	r2, [pc, #32]	; (900083c0 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
900083a0:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
900083a4:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
900083a6:	b10b      	cbz	r3, 900083ac <FT5336_RegisterBusIO+0x2c>
}
900083a8:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
900083aa:	4718      	bx	r3
}
900083ac:	f04f 30ff 	mov.w	r0, #4294967295
900083b0:	bc30      	pop	{r4, r5}
900083b2:	4770      	bx	lr
900083b4:	f04f 30ff 	mov.w	r0, #4294967295
900083b8:	4770      	bx	lr
900083ba:	bf00      	nop
900083bc:	900080fd 	.word	0x900080fd
900083c0:	9000810d 	.word	0x9000810d

900083c4 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
900083c4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900083c6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900083ca:	46a4      	mov	ip, r4
}
900083cc:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900083d0:	4760      	bx	ip
900083d2:	bf00      	nop

900083d4 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900083d4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900083d6:	2301      	movs	r3, #1
{
900083d8:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900083da:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900083de:	4619      	mov	r1, r3
900083e0:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
900083e2:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900083e6:	4760      	bx	ip

900083e8 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
900083e8:	b538      	push	{r3, r4, r5, lr}
900083ea:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900083ec:	2301      	movs	r3, #1
900083ee:	2102      	movs	r1, #2
900083f0:	4622      	mov	r2, r4
900083f2:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
900083f6:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
900083f8:	b918      	cbnz	r0, 90008402 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
900083fa:	7823      	ldrb	r3, [r4, #0]
900083fc:	f003 030f 	and.w	r3, r3, #15
90008400:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90008402:	bd38      	pop	{r3, r4, r5, pc}

90008404 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90008404:	b510      	push	{r4, lr}
90008406:	460c      	mov	r4, r1
90008408:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000840a:	2301      	movs	r3, #1
9000840c:	2191      	movs	r1, #145	; 0x91
{
9000840e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90008412:	f10d 0207 	add.w	r2, sp, #7
90008416:	6804      	ldr	r4, [r0, #0]
90008418:	6880      	ldr	r0, [r0, #8]
9000841a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
9000841c:	b002      	add	sp, #8
9000841e:	bd10      	pop	{r4, pc}

90008420 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90008420:	b510      	push	{r4, lr}
90008422:	460c      	mov	r4, r1
90008424:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90008426:	2301      	movs	r3, #1
90008428:	2192      	movs	r1, #146	; 0x92
{
9000842a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000842e:	f10d 0207 	add.w	r2, sp, #7
90008432:	6804      	ldr	r4, [r0, #0]
90008434:	6880      	ldr	r0, [r0, #8]
90008436:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90008438:	b002      	add	sp, #8
9000843a:	bd10      	pop	{r4, pc}

9000843c <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
9000843c:	b510      	push	{r4, lr}
9000843e:	460c      	mov	r4, r1
90008440:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90008442:	2301      	movs	r3, #1
90008444:	2193      	movs	r1, #147	; 0x93
{
90008446:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000844a:	f10d 0207 	add.w	r2, sp, #7
9000844e:	6804      	ldr	r4, [r0, #0]
90008450:	6880      	ldr	r0, [r0, #8]
90008452:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90008454:	b002      	add	sp, #8
90008456:	bd10      	pop	{r4, pc}

90008458 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90008458:	b510      	push	{r4, lr}
9000845a:	460c      	mov	r4, r1
9000845c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000845e:	2301      	movs	r3, #1
90008460:	2194      	movs	r1, #148	; 0x94
{
90008462:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90008466:	f10d 0207 	add.w	r2, sp, #7
9000846a:	6804      	ldr	r4, [r0, #0]
9000846c:	6880      	ldr	r0, [r0, #8]
9000846e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90008470:	b002      	add	sp, #8
90008472:	bd10      	pop	{r4, pc}

90008474 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90008474:	b510      	push	{r4, lr}
90008476:	460c      	mov	r4, r1
90008478:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000847a:	2301      	movs	r3, #1
9000847c:	2195      	movs	r1, #149	; 0x95
{
9000847e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90008482:	f10d 0207 	add.w	r2, sp, #7
90008486:	6804      	ldr	r4, [r0, #0]
90008488:	6880      	ldr	r0, [r0, #8]
9000848a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
9000848c:	b002      	add	sp, #8
9000848e:	bd10      	pop	{r4, pc}

90008490 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90008490:	b510      	push	{r4, lr}
90008492:	460c      	mov	r4, r1
90008494:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90008496:	2301      	movs	r3, #1
90008498:	2196      	movs	r1, #150	; 0x96
{
9000849a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000849e:	f10d 0207 	add.w	r2, sp, #7
900084a2:	6804      	ldr	r4, [r0, #0]
900084a4:	6880      	ldr	r0, [r0, #8]
900084a6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
900084a8:	b002      	add	sp, #8
900084aa:	bd10      	pop	{r4, pc}

900084ac <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
900084ac:	b510      	push	{r4, lr}
900084ae:	460c      	mov	r4, r1
900084b0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900084b2:	2301      	movs	r3, #1
900084b4:	21a4      	movs	r1, #164	; 0xa4
{
900084b6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900084ba:	f10d 0207 	add.w	r2, sp, #7
900084be:	6804      	ldr	r4, [r0, #0]
900084c0:	6880      	ldr	r0, [r0, #8]
900084c2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
900084c4:	b002      	add	sp, #8
900084c6:	bd10      	pop	{r4, pc}

900084c8 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900084c8:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900084ca:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
900084ce:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900084d0:	2301      	movs	r3, #1
900084d2:	46a4      	mov	ip, r4
900084d4:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
900084d6:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900084da:	4760      	bx	ip

900084dc <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
900084dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900084de:	680b      	ldr	r3, [r1, #0]
{
900084e0:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900084e2:	4c2a      	ldr	r4, [pc, #168]	; (9000858c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900084e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
900084e8:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
900084ea:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
900084ec:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900084ee:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
900084f0:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900084f2:	2301      	movs	r3, #1
900084f4:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
900084f6:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900084f8:	f005 fd2a 	bl	9000df50 <HAL_SDRAM_SendCommand>
900084fc:	2800      	cmp	r0, #0
900084fe:	d142      	bne.n	90008586 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90008500:	f000 ff46 	bl	90009390 <HAL_GetTick>
90008504:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90008506:	f000 ff43 	bl	90009390 <HAL_GetTick>
9000850a:	4286      	cmp	r6, r0
9000850c:	d0fb      	beq.n	90008506 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
9000850e:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90008510:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90008512:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008514:	491d      	ldr	r1, [pc, #116]	; (9000858c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90008516:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90008518:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
9000851a:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000851c:	4638      	mov	r0, r7
9000851e:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
90008522:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90008524:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008526:	f005 fd13 	bl	9000df50 <HAL_SDRAM_SendCommand>
9000852a:	bb60      	cbnz	r0, 90008586 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000852c:	4917      	ldr	r1, [pc, #92]	; (9000858c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
9000852e:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90008532:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008534:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90008536:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
9000853a:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000853c:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90008540:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008542:	f005 fd05 	bl	9000df50 <HAL_SDRAM_SendCommand>
90008546:	b9f0      	cbnz	r0, 90008586 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008548:	4910      	ldr	r1, [pc, #64]	; (9000858c <MT48LC4M32B2_Init+0xb0>)
9000854a:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
9000854c:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90008550:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90008552:	696a      	ldr	r2, [r5, #20]
90008554:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90008556:	69aa      	ldr	r2, [r5, #24]
90008558:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
9000855a:	69ea      	ldr	r2, [r5, #28]
9000855c:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
9000855e:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90008560:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90008562:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90008564:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008568:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000856c:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000856e:	f005 fcef 	bl	9000df50 <HAL_SDRAM_SendCommand>
90008572:	b940      	cbnz	r0, 90008586 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90008574:	68a9      	ldr	r1, [r5, #8]
90008576:	4638      	mov	r0, r7
90008578:	f005 fd0a 	bl	9000df90 <HAL_SDRAM_ProgramRefreshRate>
9000857c:	3800      	subs	r0, #0
9000857e:	bf18      	it	ne
90008580:	2001      	movne	r0, #1
90008582:	4240      	negs	r0, r0
}
90008584:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90008586:	f04f 30ff 	mov.w	r0, #4294967295
}
9000858a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000858c:	2401f890 	.word	0x2401f890

90008590 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90008590:	4a10      	ldr	r2, [pc, #64]	; (900085d4 <BSP_I2C4_DeInit+0x44>)
{
90008592:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90008594:	6813      	ldr	r3, [r2, #0]
90008596:	3b01      	subs	r3, #1
90008598:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
9000859a:	b10b      	cbz	r3, 900085a0 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
9000859c:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
9000859e:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
900085a0:	f44f 5180 	mov.w	r1, #4096	; 0x1000
900085a4:	480c      	ldr	r0, [pc, #48]	; (900085d8 <BSP_I2C4_DeInit+0x48>)
900085a6:	f001 faaf 	bl	90009b08 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
900085aa:	480b      	ldr	r0, [pc, #44]	; (900085d8 <BSP_I2C4_DeInit+0x48>)
900085ac:	f44f 5100 	mov.w	r1, #8192	; 0x2000
900085b0:	f001 faaa 	bl	90009b08 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
900085b4:	4a09      	ldr	r2, [pc, #36]	; (900085dc <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900085b6:	480a      	ldr	r0, [pc, #40]	; (900085e0 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
900085b8:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
900085bc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900085c0:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900085c4:	f001 fd48 	bl	9000a058 <HAL_I2C_DeInit>
900085c8:	2800      	cmp	r0, #0
900085ca:	d0e7      	beq.n	9000859c <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900085cc:	f06f 0007 	mvn.w	r0, #7
}
900085d0:	bd08      	pop	{r3, pc}
900085d2:	bf00      	nop
900085d4:	2401f8a0 	.word	0x2401f8a0
900085d8:	58020c00 	.word	0x58020c00
900085dc:	58024400 	.word	0x58024400
900085e0:	240202a8 	.word	0x240202a8

900085e4 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
900085e4:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900085e6:	2201      	movs	r2, #1
{
900085e8:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
900085ea:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
900085ee:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
900085f2:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
900085f6:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
900085fa:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
900085fc:	f001 fcd4 	bl	90009fa8 <HAL_I2C_Init>
90008600:	b108      	cbz	r0, 90008606 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90008602:	2001      	movs	r0, #1
}
90008604:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90008606:	4601      	mov	r1, r0
90008608:	4620      	mov	r0, r4
9000860a:	f001 ffe3 	bl	9000a5d4 <HAL_I2CEx_ConfigAnalogFilter>
9000860e:	2800      	cmp	r0, #0
90008610:	d1f7      	bne.n	90008602 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90008612:	4601      	mov	r1, r0
90008614:	4620      	mov	r0, r4
90008616:	f002 f807 	bl	9000a628 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
9000861a:	3800      	subs	r0, #0
9000861c:	bf18      	it	ne
9000861e:	2001      	movne	r0, #1
}
90008620:	bd10      	pop	{r4, pc}
90008622:	bf00      	nop

90008624 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90008624:	4b99      	ldr	r3, [pc, #612]	; (9000888c <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
90008626:	489a      	ldr	r0, [pc, #616]	; (90008890 <BSP_I2C4_Init+0x26c>)
90008628:	4a9a      	ldr	r2, [pc, #616]	; (90008894 <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
9000862a:	6819      	ldr	r1, [r3, #0]
{
9000862c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008630:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
90008632:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90008634:	9103      	str	r1, [sp, #12]
90008636:	b119      	cbz	r1, 90008640 <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90008638:	2000      	movs	r0, #0
}
9000863a:	b01f      	add	sp, #124	; 0x7c
9000863c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90008640:	2201      	movs	r2, #1
90008642:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90008644:	f001 ffc0 	bl	9000a5c8 <HAL_I2C_GetState>
90008648:	2800      	cmp	r0, #0
9000864a:	d1f5      	bne.n	90008638 <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9000864c:	4c92      	ldr	r4, [pc, #584]	; (90008898 <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000864e:	f44f 5080 	mov.w	r0, #4096	; 0x1000
90008652:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90008654:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90008656:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000865a:	2600      	movs	r6, #0
9000865c:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9000865e:	f043 0308 	orr.w	r3, r3, #8
90008662:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90008666:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
9000866a:	f003 0308 	and.w	r3, r3, #8
9000866e:	9315      	str	r3, [sp, #84]	; 0x54
90008670:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90008672:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90008676:	f043 0308 	orr.w	r3, r3, #8
9000867a:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
9000867e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90008682:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90008684:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90008688:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000868c:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
9000868e:	a918      	add	r1, sp, #96	; 0x60
90008690:	4882      	ldr	r0, [pc, #520]	; (9000889c <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90008692:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90008694:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90008698:	f001 f904 	bl	900098a4 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000869c:	2312      	movs	r3, #18
9000869e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900086a2:	a918      	add	r1, sp, #96	; 0x60
900086a4:	487d      	ldr	r0, [pc, #500]	; (9000889c <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
900086a6:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900086a8:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
900086ac:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900086b0:	f001 f8f8 	bl	900098a4 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
900086b4:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900086b8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900086bc:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
900086c0:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900086c4:	f003 0380 	and.w	r3, r3, #128	; 0x80
900086c8:	9317      	str	r3, [sp, #92]	; 0x5c
900086ca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
900086cc:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
900086d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900086d4:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
900086d8:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
900086dc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900086e0:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900086e4:	f004 fc94 	bl	9000d010 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
900086e8:	2800      	cmp	r0, #0
900086ea:	f000 81f6 	beq.w	90008ada <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900086ee:	4b6c      	ldr	r3, [pc, #432]	; (900088a0 <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
900086f0:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
900086f4:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900086f6:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900086fa:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 900088a8 <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
900086fe:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90008700:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90008704:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90008706:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90008708:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
9000870c:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
90008710:	4b64      	ldr	r3, [pc, #400]	; (900088a4 <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90008712:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90008716:	0079      	lsls	r1, r7, #1
90008718:	681b      	ldr	r3, [r3, #0]
9000871a:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
9000871e:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
90008722:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90008724:	4699      	mov	r9, r3
90008726:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90008728:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
9000872c:	46b8      	mov	r8, r7
9000872e:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90008732:	bf94      	ite	ls
90008734:	2101      	movls	r1, #1
90008736:	2100      	movhi	r1, #0
90008738:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
9000873c:	f001 0101 	and.w	r1, r1, #1
90008740:	eb07 0287 	add.w	r2, r7, r7, lsl #2
90008744:	bf38      	it	cc
90008746:	2100      	movcc	r1, #0
90008748:	429c      	cmp	r4, r3
9000874a:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
9000874e:	9105      	str	r1, [sp, #20]
90008750:	bf8c      	ite	hi
90008752:	2100      	movhi	r1, #0
90008754:	2101      	movls	r1, #1
90008756:	459c      	cmp	ip, r3
90008758:	bf38      	it	cc
9000875a:	2100      	movcc	r1, #0
9000875c:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90008760:	9106      	str	r1, [sp, #24]
90008762:	eb07 0142 	add.w	r1, r7, r2, lsl #1
90008766:	9104      	str	r1, [sp, #16]
90008768:	eb07 0183 	add.w	r1, r7, r3, lsl #2
9000876c:	9111      	str	r1, [sp, #68]	; 0x44
9000876e:	bf94      	ite	ls
90008770:	2101      	movls	r1, #1
90008772:	2100      	movhi	r1, #0
90008774:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90008778:	f001 0e01 	and.w	lr, r1, #1
9000877c:	bf38      	it	cc
9000877e:	f04f 0e00 	movcc.w	lr, #0
90008782:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90008784:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90008788:	f8cd e01c 	str.w	lr, [sp, #28]
9000878c:	bf8c      	ite	hi
9000878e:	f04f 0e00 	movhi.w	lr, #0
90008792:	f04f 0e01 	movls.w	lr, #1
90008796:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90008798:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
9000879a:	bf38      	it	cc
9000879c:	f04f 0e00 	movcc.w	lr, #0
900087a0:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
900087a4:	bf98      	it	ls
900087a6:	2101      	movls	r1, #1
900087a8:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
900087ac:	f8cd e020 	str.w	lr, [sp, #32]
900087b0:	f001 0101 	and.w	r1, r1, #1
900087b4:	bf38      	it	cc
900087b6:	2100      	movcc	r1, #0
900087b8:	4284      	cmp	r4, r0
900087ba:	9109      	str	r1, [sp, #36]	; 0x24
900087bc:	4601      	mov	r1, r0
900087be:	bf8c      	ite	hi
900087c0:	2000      	movhi	r0, #0
900087c2:	2001      	movls	r0, #1
900087c4:	458c      	cmp	ip, r1
900087c6:	bf38      	it	cc
900087c8:	2000      	movcc	r0, #0
900087ca:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
900087ce:	900b      	str	r0, [sp, #44]	; 0x2c
900087d0:	bf94      	ite	ls
900087d2:	2001      	movls	r0, #1
900087d4:	2000      	movhi	r0, #0
900087d6:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
900087da:	f000 0001 	and.w	r0, r0, #1
900087de:	bf38      	it	cc
900087e0:	2000      	movcc	r0, #0
900087e2:	900c      	str	r0, [sp, #48]	; 0x30
900087e4:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
900087e8:	4284      	cmp	r4, r0
900087ea:	bf8c      	ite	hi
900087ec:	f04f 0e00 	movhi.w	lr, #0
900087f0:	f04f 0e01 	movls.w	lr, #1
900087f4:	4584      	cmp	ip, r0
900087f6:	bf38      	it	cc
900087f8:	f04f 0e00 	movcc.w	lr, #0
900087fc:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90008800:	4670      	mov	r0, lr
90008802:	bf94      	ite	ls
90008804:	2001      	movls	r0, #1
90008806:	2000      	movhi	r0, #0
90008808:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
9000880c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90008810:	f04f 0e00 	mov.w	lr, #0
90008814:	f000 0001 	and.w	r0, r0, #1
90008818:	bf38      	it	cc
9000881a:	2000      	movcc	r0, #0
9000881c:	900e      	str	r0, [sp, #56]	; 0x38
9000881e:	9804      	ldr	r0, [sp, #16]
90008820:	4284      	cmp	r4, r0
90008822:	4602      	mov	r2, r0
90008824:	bf8c      	ite	hi
90008826:	2200      	movhi	r2, #0
90008828:	2201      	movls	r2, #1
9000882a:	4584      	cmp	ip, r0
9000882c:	bf38      	it	cc
9000882e:	2200      	movcc	r2, #0
90008830:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
90008834:	920f      	str	r2, [sp, #60]	; 0x3c
90008836:	bf94      	ite	ls
90008838:	2201      	movls	r2, #1
9000883a:	2200      	movhi	r2, #0
9000883c:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90008840:	f002 0201 	and.w	r2, r2, #1
90008844:	bf38      	it	cc
90008846:	2200      	movcc	r2, #0
90008848:	9210      	str	r2, [sp, #64]	; 0x40
9000884a:	9a11      	ldr	r2, [sp, #68]	; 0x44
9000884c:	4294      	cmp	r4, r2
9000884e:	4613      	mov	r3, r2
90008850:	bf8c      	ite	hi
90008852:	2300      	movhi	r3, #0
90008854:	2301      	movls	r3, #1
90008856:	4594      	cmp	ip, r2
90008858:	bf38      	it	cc
9000885a:	2300      	movcc	r3, #0
9000885c:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
90008860:	9311      	str	r3, [sp, #68]	; 0x44
90008862:	bf94      	ite	ls
90008864:	2301      	movls	r3, #1
90008866:	2300      	movhi	r3, #0
90008868:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
9000886c:	f003 0301 	and.w	r3, r3, #1
90008870:	bf38      	it	cc
90008872:	2300      	movcc	r3, #0
90008874:	9312      	str	r3, [sp, #72]	; 0x48
90008876:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
9000887a:	429c      	cmp	r4, r3
9000887c:	bf8c      	ite	hi
9000887e:	2200      	movhi	r2, #0
90008880:	2201      	movls	r2, #1
90008882:	459c      	cmp	ip, r3
90008884:	bf38      	it	cc
90008886:	2200      	movcc	r2, #0
90008888:	9204      	str	r2, [sp, #16]
9000888a:	e014      	b.n	900088b6 <BSP_I2C4_Init+0x292>
9000888c:	2401f8a0 	.word	0x2401f8a0
90008890:	240202a8 	.word	0x240202a8
90008894:	58001c00 	.word	0x58001c00
90008898:	58024400 	.word	0x58024400
9000889c:	58020c00 	.word	0x58020c00
900088a0:	3b9aca00 	.word	0x3b9aca00
900088a4:	240202a4 	.word	0x240202a4
900088a8:	2401f8a4 	.word	0x2401f8a4
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900088ac:	f1be 0f10 	cmp.w	lr, #16
900088b0:	44b8      	add	r8, r7
900088b2:	f000 826c 	beq.w	90008d8e <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
900088b6:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
900088ba:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
900088bc:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
900088c0:	d3f4      	bcc.n	900088ac <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
900088c2:	ebbb 0205 	subs.w	r2, fp, r5
900088c6:	bf18      	it	ne
900088c8:	2201      	movne	r2, #1
900088ca:	2c00      	cmp	r4, #0
900088cc:	bf18      	it	ne
900088ce:	2200      	movne	r2, #0
900088d0:	2a00      	cmp	r2, #0
900088d2:	f040 824a 	bne.w	90008d6a <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900088d6:	45bc      	cmp	ip, r7
900088d8:	bf34      	ite	cc
900088da:	2200      	movcc	r2, #0
900088dc:	2201      	movcs	r2, #1
900088de:	42bc      	cmp	r4, r7
900088e0:	bf88      	it	hi
900088e2:	2200      	movhi	r2, #0
            if(presc != prev_presc)
900088e4:	45ab      	cmp	fp, r5
900088e6:	bf0c      	ite	eq
900088e8:	2200      	moveq	r2, #0
900088ea:	f002 0201 	andne.w	r2, r2, #1
900088ee:	2a00      	cmp	r2, #0
900088f0:	f000 80fd 	beq.w	90008aee <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900088f4:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900088f8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900088fc:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900088fe:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008902:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008906:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000890a:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000890c:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000890e:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008910:	f200 81a5 	bhi.w	90008c5e <BSP_I2C4_Init+0x63a>
90008914:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008916:	9906      	ldr	r1, [sp, #24]
90008918:	45ab      	cmp	fp, r5
9000891a:	bf0c      	ite	eq
9000891c:	2100      	moveq	r1, #0
9000891e:	f001 0101 	andne.w	r1, r1, #1
90008922:	2900      	cmp	r1, #0
90008924:	f000 80ff 	beq.w	90008b26 <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008928:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000892c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008930:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008932:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008936:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000893a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000893e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008940:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008942:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008944:	f200 818b 	bhi.w	90008c5e <BSP_I2C4_Init+0x63a>
90008948:	460a      	mov	r2, r1
9000894a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000894c:	9908      	ldr	r1, [sp, #32]
9000894e:	45ab      	cmp	fp, r5
90008950:	bf0c      	ite	eq
90008952:	2100      	moveq	r1, #0
90008954:	f001 0101 	andne.w	r1, r1, #1
90008958:	2900      	cmp	r1, #0
9000895a:	f000 80ff 	beq.w	90008b5c <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000895e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008962:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008966:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008968:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000896c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008970:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008974:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008976:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008978:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000897a:	f200 8170 	bhi.w	90008c5e <BSP_I2C4_Init+0x63a>
9000897e:	460a      	mov	r2, r1
90008980:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008982:	990b      	ldr	r1, [sp, #44]	; 0x2c
90008984:	45ab      	cmp	fp, r5
90008986:	bf0c      	ite	eq
90008988:	2100      	moveq	r1, #0
9000898a:	f001 0101 	andne.w	r1, r1, #1
9000898e:	2900      	cmp	r1, #0
90008990:	f000 80fe 	beq.w	90008b90 <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008994:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008998:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000899c:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000899e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900089a2:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900089a6:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900089aa:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900089ac:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900089ae:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900089b0:	f200 8155 	bhi.w	90008c5e <BSP_I2C4_Init+0x63a>
900089b4:	460a      	mov	r2, r1
900089b6:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900089b8:	990d      	ldr	r1, [sp, #52]	; 0x34
900089ba:	45ab      	cmp	fp, r5
900089bc:	bf0c      	ite	eq
900089be:	2100      	moveq	r1, #0
900089c0:	f001 0101 	andne.w	r1, r1, #1
900089c4:	2900      	cmp	r1, #0
900089c6:	f000 80fd 	beq.w	90008bc4 <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900089ca:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900089ce:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900089d2:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900089d4:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900089d8:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900089dc:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900089e0:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900089e2:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900089e4:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900089e6:	f200 813a 	bhi.w	90008c5e <BSP_I2C4_Init+0x63a>
900089ea:	460a      	mov	r2, r1
900089ec:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900089ee:	990f      	ldr	r1, [sp, #60]	; 0x3c
900089f0:	45ab      	cmp	fp, r5
900089f2:	bf0c      	ite	eq
900089f4:	2100      	moveq	r1, #0
900089f6:	f001 0101 	andne.w	r1, r1, #1
900089fa:	2900      	cmp	r1, #0
900089fc:	f000 80fc 	beq.w	90008bf8 <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008a00:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008a04:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008a08:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008a0a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008a0e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008a12:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008a16:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008a18:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008a1a:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008a1c:	f200 811f 	bhi.w	90008c5e <BSP_I2C4_Init+0x63a>
90008a20:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008a22:	9e11      	ldr	r6, [sp, #68]	; 0x44
90008a24:	455d      	cmp	r5, fp
90008a26:	bf0c      	ite	eq
90008a28:	2600      	moveq	r6, #0
90008a2a:	f006 0601 	andne.w	r6, r6, #1
90008a2e:	2e00      	cmp	r6, #0
90008a30:	f000 80fb 	beq.w	90008c2a <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008a34:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008a38:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008a3c:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008a3e:	4650      	mov	r0, sl
90008a40:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008a44:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008a48:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008a4c:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008a4e:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008a50:	f200 8105 	bhi.w	90008c5e <BSP_I2C4_Init+0x63a>
90008a54:	4631      	mov	r1, r6
90008a56:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008a58:	9e04      	ldr	r6, [sp, #16]
90008a5a:	455d      	cmp	r5, fp
90008a5c:	bf0c      	ite	eq
90008a5e:	2600      	moveq	r6, #0
90008a60:	f006 0601 	andne.w	r6, r6, #1
90008a64:	2e00      	cmp	r6, #0
90008a66:	f000 817c 	beq.w	90008d62 <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008a6a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008a6e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008a72:	4650      	mov	r0, sl
90008a74:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90008a78:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008a7c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008a80:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008a82:	f04f 030f 	mov.w	r3, #15
90008a86:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008a88:	f200 80e9 	bhi.w	90008c5e <BSP_I2C4_Init+0x63a>
90008a8c:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90008a8e:	e70d      	b.n	900088ac <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90008a90:	9a07      	ldr	r2, [sp, #28]
90008a92:	9b08      	ldr	r3, [sp, #32]
90008a94:	3214      	adds	r2, #20
90008a96:	3301      	adds	r3, #1
90008a98:	9207      	str	r2, [sp, #28]
90008a9a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90008a9c:	9308      	str	r3, [sp, #32]
90008a9e:	4293      	cmp	r3, r2
90008aa0:	f040 80ff 	bne.w	90008ca2 <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
90008aa4:	297f      	cmp	r1, #127	; 0x7f
90008aa6:	d818      	bhi.n	90008ada <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90008aa8:	eb01 0381 	add.w	r3, r1, r1, lsl #2
90008aac:	990b      	ldr	r1, [sp, #44]	; 0x2c
90008aae:	eb01 0283 	add.w	r2, r1, r3, lsl #2
90008ab2:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90008ab6:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90008ab8:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90008aba:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90008abc:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90008ac0:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90008ac4:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90008ac8:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90008aca:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90008acc:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90008ace:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90008ad2:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90008ad4:	430b      	orrs	r3, r1
90008ad6:	4313      	orrs	r3, r2
90008ad8:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90008ada:	9903      	ldr	r1, [sp, #12]
90008adc:	48b5      	ldr	r0, [pc, #724]	; (90008db4 <BSP_I2C4_Init+0x790>)
90008ade:	f7ff fd81 	bl	900085e4 <MX_I2C4_Init>
90008ae2:	2800      	cmp	r0, #0
90008ae4:	f43f ada8 	beq.w	90008638 <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
90008ae8:	f06f 0007 	mvn.w	r0, #7
  return ret;
90008aec:	e5a5      	b.n	9000863a <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
90008aee:	4632      	mov	r2, r6
90008af0:	9905      	ldr	r1, [sp, #20]
90008af2:	45ab      	cmp	fp, r5
90008af4:	bf0c      	ite	eq
90008af6:	2100      	moveq	r1, #0
90008af8:	f001 0101 	andne.w	r1, r1, #1
90008afc:	2900      	cmp	r1, #0
90008afe:	f43f af0a 	beq.w	90008916 <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b02:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008b06:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008b0a:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b0c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008b10:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b14:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008b18:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b1a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008b1c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008b1e:	f200 809e 	bhi.w	90008c5e <BSP_I2C4_Init+0x63a>
90008b22:	460a      	mov	r2, r1
90008b24:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008b26:	9907      	ldr	r1, [sp, #28]
90008b28:	45ab      	cmp	fp, r5
90008b2a:	bf0c      	ite	eq
90008b2c:	2100      	moveq	r1, #0
90008b2e:	f001 0101 	andne.w	r1, r1, #1
90008b32:	2900      	cmp	r1, #0
90008b34:	f43f af0a 	beq.w	9000894c <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b38:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008b3c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008b40:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b42:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008b46:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b4a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008b4e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b50:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008b52:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008b54:	f200 8083 	bhi.w	90008c5e <BSP_I2C4_Init+0x63a>
90008b58:	460a      	mov	r2, r1
90008b5a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008b5c:	9909      	ldr	r1, [sp, #36]	; 0x24
90008b5e:	45ab      	cmp	fp, r5
90008b60:	bf0c      	ite	eq
90008b62:	2100      	moveq	r1, #0
90008b64:	f001 0101 	andne.w	r1, r1, #1
90008b68:	2900      	cmp	r1, #0
90008b6a:	f43f af0a 	beq.w	90008982 <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b6e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008b72:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008b76:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b78:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008b7c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b80:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008b84:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008b86:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008b88:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008b8a:	d868      	bhi.n	90008c5e <BSP_I2C4_Init+0x63a>
90008b8c:	460a      	mov	r2, r1
90008b8e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008b90:	990c      	ldr	r1, [sp, #48]	; 0x30
90008b92:	45ab      	cmp	fp, r5
90008b94:	bf0c      	ite	eq
90008b96:	2100      	moveq	r1, #0
90008b98:	f001 0101 	andne.w	r1, r1, #1
90008b9c:	2900      	cmp	r1, #0
90008b9e:	f43f af0b 	beq.w	900089b8 <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008ba2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008ba6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008baa:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008bac:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008bb0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008bb4:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008bb8:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008bba:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008bbc:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008bbe:	d84e      	bhi.n	90008c5e <BSP_I2C4_Init+0x63a>
90008bc0:	460a      	mov	r2, r1
90008bc2:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008bc4:	990e      	ldr	r1, [sp, #56]	; 0x38
90008bc6:	45ab      	cmp	fp, r5
90008bc8:	bf0c      	ite	eq
90008bca:	2100      	moveq	r1, #0
90008bcc:	f001 0101 	andne.w	r1, r1, #1
90008bd0:	2900      	cmp	r1, #0
90008bd2:	f43f af0c 	beq.w	900089ee <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008bd6:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008bda:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008bde:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008be0:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008be4:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008be8:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008bec:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008bee:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008bf0:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008bf2:	d834      	bhi.n	90008c5e <BSP_I2C4_Init+0x63a>
90008bf4:	460a      	mov	r2, r1
90008bf6:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008bf8:	9910      	ldr	r1, [sp, #64]	; 0x40
90008bfa:	45ab      	cmp	fp, r5
90008bfc:	bf0c      	ite	eq
90008bfe:	2100      	moveq	r1, #0
90008c00:	f001 0101 	andne.w	r1, r1, #1
90008c04:	2900      	cmp	r1, #0
90008c06:	f000 80ae 	beq.w	90008d66 <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008c0a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008c0e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008c12:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008c14:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008c18:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008c1c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008c20:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008c22:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008c24:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008c26:	d81a      	bhi.n	90008c5e <BSP_I2C4_Init+0x63a>
90008c28:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008c2a:	9e12      	ldr	r6, [sp, #72]	; 0x48
90008c2c:	455d      	cmp	r5, fp
90008c2e:	bf0c      	ite	eq
90008c30:	2600      	moveq	r6, #0
90008c32:	f006 0601 	andne.w	r6, r6, #1
90008c36:	2e00      	cmp	r6, #0
90008c38:	f43f af0e 	beq.w	90008a58 <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008c3c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008c40:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008c44:	4650      	mov	r0, sl
90008c46:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90008c4a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008c4e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008c52:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008c54:	f04f 030e 	mov.w	r3, #14
90008c58:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008c5a:	f67f af17 	bls.w	90008a8c <BSP_I2C4_Init+0x468>
90008c5e:	4b56      	ldr	r3, [pc, #344]	; (90008db8 <BSP_I2C4_Init+0x794>)
90008c60:	900b      	str	r0, [sp, #44]	; 0x2c
90008c62:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
90008c66:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90008c6a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90008c6c:	f240 4201 	movw	r2, #1025	; 0x401
90008c70:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90008c74:	f640 1ac4 	movw	sl, #2500	; 0x9c4
90008c78:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90008c7a:	f240 4b12 	movw	fp, #1042	; 0x412
90008c7e:	920d      	str	r2, [sp, #52]	; 0x34
90008c80:	9a02      	ldr	r2, [sp, #8]
90008c82:	4296      	cmp	r6, r2
90008c84:	bf38      	it	cc
90008c86:	4616      	movcc	r6, r2
90008c88:	4a4c      	ldr	r2, [pc, #304]	; (90008dbc <BSP_I2C4_Init+0x798>)
90008c8a:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90008c8c:	2200      	movs	r2, #0
90008c8e:	9208      	str	r2, [sp, #32]
90008c90:	f04f 32ff 	mov.w	r2, #4294967295
90008c94:	4611      	mov	r1, r2
90008c96:	f103 0232 	add.w	r2, r3, #50	; 0x32
90008c9a:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
90008c9e:	920c      	str	r2, [sp, #48]	; 0x30
90008ca0:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90008ca2:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90008ca4:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90008ca8:	6818      	ldr	r0, [r3, #0]
90008caa:	9b02      	ldr	r3, [sp, #8]
90008cac:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90008cb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90008cb2:	1a1b      	subs	r3, r3, r0
90008cb4:	ea4f 0943 	mov.w	r9, r3, lsl #1
90008cb8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90008cba:	eb03 0e00 	add.w	lr, r3, r0
90008cbe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90008cc0:	4403      	add	r3, r0
90008cc2:	9309      	str	r3, [sp, #36]	; 0x24
90008cc4:	e006      	b.n	90008cd4 <BSP_I2C4_Init+0x6b0>
90008cc6:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
90008cca:	4486      	add	lr, r0
90008ccc:	eba9 0900 	sub.w	r9, r9, r0
90008cd0:	f43f aede 	beq.w	90008a90 <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90008cd4:	f240 5214 	movw	r2, #1300	; 0x514
90008cd8:	f8cd 8004 	str.w	r8, [sp, #4]
90008cdc:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90008ce0:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90008ce4:	4596      	cmp	lr, r2
90008ce6:	d9ee      	bls.n	90008cc6 <BSP_I2C4_Init+0x6a2>
90008ce8:	9a02      	ldr	r2, [sp, #8]
90008cea:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
90008cee:	d2ea      	bcs.n	90008cc6 <BSP_I2C4_Init+0x6a2>
90008cf0:	f640 0c34 	movw	ip, #2100	; 0x834
90008cf4:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90008cf6:	f8cd 9018 	str.w	r9, [sp, #24]
90008cfa:	2200      	movs	r2, #0
90008cfc:	ebac 0c03 	sub.w	ip, ip, r3
90008d00:	9b09      	ldr	r3, [sp, #36]	; 0x24
90008d02:	4689      	mov	r9, r1
90008d04:	4473      	add	r3, lr
90008d06:	e9cd e804 	strd	lr, r8, [sp, #16]
90008d0a:	f8dd 8020 	ldr.w	r8, [sp, #32]
90008d0e:	f8dd e01c 	ldr.w	lr, [sp, #28]
90008d12:	e005      	b.n	90008d20 <BSP_I2C4_Init+0x6fc>
90008d14:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90008d18:	4403      	add	r3, r0
90008d1a:	eba4 0400 	sub.w	r4, r4, r0
90008d1e:	d01a      	beq.n	90008d56 <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90008d20:	eb0c 0103 	add.w	r1, ip, r3
90008d24:	4617      	mov	r7, r2
90008d26:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90008d2a:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90008d2c:	42b1      	cmp	r1, r6
90008d2e:	d9f1      	bls.n	90008d14 <BSP_I2C4_Init+0x6f0>
90008d30:	455d      	cmp	r5, fp
90008d32:	d8ef      	bhi.n	90008d14 <BSP_I2C4_Init+0x6f0>
            if (error < 0)
90008d34:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90008d38:	bf28      	it	cs
90008d3a:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90008d3c:	458a      	cmp	sl, r1
90008d3e:	d9e9      	bls.n	90008d14 <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
90008d40:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90008d42:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
90008d46:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
90008d48:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90008d4a:	4403      	add	r3, r0
90008d4c:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90008d50:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90008d54:	d1e4      	bne.n	90008d20 <BSP_I2C4_Init+0x6fc>
90008d56:	4649      	mov	r1, r9
90008d58:	f8dd 9018 	ldr.w	r9, [sp, #24]
90008d5c:	e9dd e804 	ldrd	lr, r8, [sp, #16]
90008d60:	e7b1      	b.n	90008cc6 <BSP_I2C4_Init+0x6a2>
90008d62:	460e      	mov	r6, r1
90008d64:	e5a2      	b.n	900088ac <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90008d66:	4611      	mov	r1, r2
90008d68:	e65b      	b.n	90008a22 <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008d6a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008d6e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008d72:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008d74:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008d78:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008d7c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008d80:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008d82:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008d84:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008d86:	f63f af6a 	bhi.w	90008c5e <BSP_I2C4_Init+0x63a>
90008d8a:	46ab      	mov	fp, r5
90008d8c:	e6b0      	b.n	90008af0 <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90008d8e:	3501      	adds	r5, #1
90008d90:	9b02      	ldr	r3, [sp, #8]
90008d92:	2d10      	cmp	r5, #16
90008d94:	441f      	add	r7, r3
90008d96:	f47f acc7 	bne.w	90008728 <BSP_I2C4_Init+0x104>
90008d9a:	b126      	cbz	r6, 90008da6 <BSP_I2C4_Init+0x782>
90008d9c:	4b06      	ldr	r3, [pc, #24]	; (90008db8 <BSP_I2C4_Init+0x794>)
90008d9e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90008da2:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90008da6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90008da8:	2b00      	cmp	r3, #0
90008daa:	f43f ae96 	beq.w	90008ada <BSP_I2C4_Init+0x4b6>
90008dae:	4b03      	ldr	r3, [pc, #12]	; (90008dbc <BSP_I2C4_Init+0x798>)
90008db0:	930b      	str	r3, [sp, #44]	; 0x2c
90008db2:	e75a      	b.n	90008c6a <BSP_I2C4_Init+0x646>
90008db4:	240202a8 	.word	0x240202a8
90008db8:	240202a4 	.word	0x240202a4
90008dbc:	2401f8a4 	.word	0x2401f8a4

90008dc0 <BSP_I2C4_WriteReg>:
{
90008dc0:	b530      	push	{r4, r5, lr}
90008dc2:	4614      	mov	r4, r2
90008dc4:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90008dc6:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
90008dca:	460a      	mov	r2, r1
90008dcc:	9301      	str	r3, [sp, #4]
90008dce:	4601      	mov	r1, r0
90008dd0:	2301      	movs	r3, #1
90008dd2:	4809      	ldr	r0, [pc, #36]	; (90008df8 <BSP_I2C4_WriteReg+0x38>)
90008dd4:	9502      	str	r5, [sp, #8]
90008dd6:	9400      	str	r4, [sp, #0]
90008dd8:	f001 f958 	bl	9000a08c <HAL_I2C_Mem_Write>
90008ddc:	b908      	cbnz	r0, 90008de2 <BSP_I2C4_WriteReg+0x22>
}
90008dde:	b005      	add	sp, #20
90008de0:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90008de2:	4805      	ldr	r0, [pc, #20]	; (90008df8 <BSP_I2C4_WriteReg+0x38>)
90008de4:	f001 fbf4 	bl	9000a5d0 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90008de8:	2804      	cmp	r0, #4
90008dea:	bf0c      	ite	eq
90008dec:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90008df0:	f06f 0003 	mvnne.w	r0, #3
90008df4:	e7f3      	b.n	90008dde <BSP_I2C4_WriteReg+0x1e>
90008df6:	bf00      	nop
90008df8:	240202a8 	.word	0x240202a8

90008dfc <BSP_I2C4_ReadReg>:
{
90008dfc:	b530      	push	{r4, r5, lr}
90008dfe:	4614      	mov	r4, r2
90008e00:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90008e02:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
90008e06:	460a      	mov	r2, r1
90008e08:	9301      	str	r3, [sp, #4]
90008e0a:	4601      	mov	r1, r0
90008e0c:	2301      	movs	r3, #1
90008e0e:	4809      	ldr	r0, [pc, #36]	; (90008e34 <BSP_I2C4_ReadReg+0x38>)
90008e10:	9502      	str	r5, [sp, #8]
90008e12:	9400      	str	r4, [sp, #0]
90008e14:	f001 fa6e 	bl	9000a2f4 <HAL_I2C_Mem_Read>
90008e18:	b908      	cbnz	r0, 90008e1e <BSP_I2C4_ReadReg+0x22>
}
90008e1a:	b005      	add	sp, #20
90008e1c:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90008e1e:	4805      	ldr	r0, [pc, #20]	; (90008e34 <BSP_I2C4_ReadReg+0x38>)
90008e20:	f001 fbd6 	bl	9000a5d0 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90008e24:	2804      	cmp	r0, #4
90008e26:	bf0c      	ite	eq
90008e28:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90008e2c:	f06f 0003 	mvnne.w	r0, #3
90008e30:	e7f3      	b.n	90008e1a <BSP_I2C4_ReadReg+0x1e>
90008e32:	bf00      	nop
90008e34:	240202a8 	.word	0x240202a8

90008e38 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90008e38:	f000 baaa 	b.w	90009390 <HAL_GetTick>

90008e3c <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90008e3c:	b970      	cbnz	r0, 90008e5c <BSP_SDRAM_DeInit+0x20>
{
90008e3e:	b510      	push	{r4, lr}
90008e40:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90008e42:	4808      	ldr	r0, [pc, #32]	; (90008e64 <BSP_SDRAM_DeInit+0x28>)
90008e44:	f005 f876 	bl	9000df34 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90008e48:	207a      	movs	r0, #122	; 0x7a
90008e4a:	f000 fb0b 	bl	90009464 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90008e4e:	4b06      	ldr	r3, [pc, #24]	; (90008e68 <BSP_SDRAM_DeInit+0x2c>)
90008e50:	4806      	ldr	r0, [pc, #24]	; (90008e6c <BSP_SDRAM_DeInit+0x30>)
90008e52:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90008e54:	f003 f98e 	bl	9000c174 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90008e58:	4620      	mov	r0, r4
}
90008e5a:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90008e5c:	f06f 0001 	mvn.w	r0, #1
}
90008e60:	4770      	bx	lr
90008e62:	bf00      	nop
90008e64:	240202fc 	.word	0x240202fc
90008e68:	52000040 	.word	0x52000040
90008e6c:	24020330 	.word	0x24020330

90008e70 <MX_SDRAM_BANK2_Init>:
{
90008e70:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90008e72:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90008e74:	2200      	movs	r2, #0
{
90008e76:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
90008e78:	4c13      	ldr	r4, [pc, #76]	; (90008ec8 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90008e7a:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90008e7c:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90008e7e:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
90008e80:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90008e82:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90008e84:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90008e86:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90008e88:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
90008e8c:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90008e8e:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90008e90:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
90008e92:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90008e94:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90008e96:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90008e9a:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90008e9c:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90008ea0:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90008ea2:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90008ea4:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90008ea8:	2204      	movs	r2, #4
90008eaa:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90008eae:	2202      	movs	r2, #2
90008eb0:	2302      	movs	r3, #2
90008eb2:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90008eb6:	4b05      	ldr	r3, [pc, #20]	; (90008ecc <MX_SDRAM_BANK2_Init+0x5c>)
90008eb8:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90008eba:	f005 f811 	bl	9000dee0 <HAL_SDRAM_Init>
}
90008ebe:	3800      	subs	r0, #0
90008ec0:	bf18      	it	ne
90008ec2:	2001      	movne	r0, #1
90008ec4:	b009      	add	sp, #36	; 0x24
90008ec6:	bd30      	pop	{r4, r5, pc}
90008ec8:	240202fc 	.word	0x240202fc
90008ecc:	52004140 	.word	0x52004140

90008ed0 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90008ed0:	2800      	cmp	r0, #0
90008ed2:	f040 80d2 	bne.w	9000907a <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
90008ed6:	4b6c      	ldr	r3, [pc, #432]	; (90009088 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90008ed8:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90008eda:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008ede:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
90008ee2:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90008ee4:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
90008ee8:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
90008eea:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008eee:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008ef0:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90008ef4:	4c65      	ldr	r4, [pc, #404]	; (9000908c <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
90008ef6:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90008efa:	4e65      	ldr	r6, [pc, #404]	; (90009090 <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
90008efc:	9201      	str	r2, [sp, #4]
90008efe:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
90008f00:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008f04:	f042 0201 	orr.w	r2, r2, #1
90008f08:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90008f0c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008f10:	f002 0201 	and.w	r2, r2, #1
90008f14:	9202      	str	r2, [sp, #8]
90008f16:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90008f18:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008f1c:	f042 0208 	orr.w	r2, r2, #8
90008f20:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008f24:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008f28:	f002 0208 	and.w	r2, r2, #8
90008f2c:	9203      	str	r2, [sp, #12]
90008f2e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90008f30:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008f34:	f042 0210 	orr.w	r2, r2, #16
90008f38:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008f3c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008f40:	f002 0210 	and.w	r2, r2, #16
90008f44:	9204      	str	r2, [sp, #16]
90008f46:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90008f48:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008f4c:	f042 0220 	orr.w	r2, r2, #32
90008f50:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008f54:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008f58:	f002 0220 	and.w	r2, r2, #32
90008f5c:	9205      	str	r2, [sp, #20]
90008f5e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90008f60:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008f64:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90008f68:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008f6c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008f70:	f002 0240 	and.w	r2, r2, #64	; 0x40
90008f74:	9206      	str	r2, [sp, #24]
90008f76:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90008f78:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008f7c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90008f80:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008f84:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90008f88:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008f8a:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
90008f8c:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008f90:	e9cd 0108 	strd	r0, r1, [sp, #32]
90008f94:	2001      	movs	r0, #1
90008f96:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
90008f98:	9307      	str	r3, [sp, #28]
90008f9a:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008f9c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90008fa0:	a908      	add	r1, sp, #32
90008fa2:	483c      	ldr	r0, [pc, #240]	; (90009094 <BSP_SDRAM_Init+0x1c4>)
90008fa4:	f000 fc7e 	bl	900098a4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90008fa8:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90008fac:	a908      	add	r1, sp, #32
90008fae:	483a      	ldr	r0, [pc, #232]	; (90009098 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90008fb0:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90008fb2:	f000 fc77 	bl	900098a4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90008fb6:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90008fba:	a908      	add	r1, sp, #32
90008fbc:	4837      	ldr	r0, [pc, #220]	; (9000909c <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90008fbe:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90008fc0:	f000 fc70 	bl	900098a4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90008fc4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90008fc8:	a908      	add	r1, sp, #32
90008fca:	4835      	ldr	r0, [pc, #212]	; (900090a0 <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90008fcc:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90008fce:	f000 fc69 	bl	900098a4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90008fd2:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90008fd4:	a908      	add	r1, sp, #32
90008fd6:	4833      	ldr	r0, [pc, #204]	; (900090a4 <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90008fd8:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90008fda:	f000 fc63 	bl	900098a4 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90008fde:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90008fe0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90008fe4:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90008fe8:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90008fea:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90008fec:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90008fee:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90008ff0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90008ff4:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90008ff6:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90008ff8:	4a2b      	ldr	r2, [pc, #172]	; (900090a8 <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90008ffa:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90008ffc:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90008ffe:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90009000:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90009004:	f640 0308 	movw	r3, #2056	; 0x808
90009008:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000900a:	2320      	movs	r3, #32
9000900c:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000900e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90009012:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90009016:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
90009018:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
9000901c:	f003 f8aa 	bl	9000c174 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90009020:	4620      	mov	r0, r4
90009022:	f003 f82d 	bl	9000c080 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90009026:	462a      	mov	r2, r5
90009028:	210f      	movs	r1, #15
9000902a:	207a      	movs	r0, #122	; 0x7a
9000902c:	f000 f9ce 	bl	900093cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90009030:	207a      	movs	r0, #122	; 0x7a
90009032:	f000 fa09 	bl	90009448 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90009036:	2210      	movs	r2, #16
90009038:	2104      	movs	r1, #4
9000903a:	4630      	mov	r0, r6
9000903c:	f7ff ff18 	bl	90008e70 <MX_SDRAM_BANK2_Init>
90009040:	b9f0      	cbnz	r0, 90009080 <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90009042:	491a      	ldr	r1, [pc, #104]	; (900090ac <BSP_SDRAM_Init+0x1dc>)
90009044:	2208      	movs	r2, #8
90009046:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90009048:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000904a:	e9c1 2300 	strd	r2, r3, [r1]
9000904e:	f240 6203 	movw	r2, #1539	; 0x603
90009052:	2300      	movs	r3, #0
90009054:	e9c1 2302 	strd	r2, r3, [r1, #8]
90009058:	2200      	movs	r2, #0
9000905a:	2330      	movs	r3, #48	; 0x30
9000905c:	e9c1 2304 	strd	r2, r3, [r1, #16]
90009060:	2200      	movs	r2, #0
90009062:	f44f 7300 	mov.w	r3, #512	; 0x200
90009066:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000906a:	f7ff fa37 	bl	900084dc <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
9000906e:	2800      	cmp	r0, #0
90009070:	bf18      	it	ne
90009072:	f06f 0004 	mvnne.w	r0, #4
}
90009076:	b00e      	add	sp, #56	; 0x38
90009078:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000907a:	f06f 0001 	mvn.w	r0, #1
}
9000907e:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90009080:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90009084:	e7f7      	b.n	90009076 <BSP_SDRAM_Init+0x1a6>
90009086:	bf00      	nop
90009088:	58024400 	.word	0x58024400
9000908c:	2402039c 	.word	0x2402039c
90009090:	240202fc 	.word	0x240202fc
90009094:	58020c00 	.word	0x58020c00
90009098:	58021000 	.word	0x58021000
9000909c:	58021400 	.word	0x58021400
900090a0:	58021800 	.word	0x58021800
900090a4:	58021c00 	.word	0x58021c00
900090a8:	52000040 	.word	0x52000040
900090ac:	24020408 	.word	0x24020408

900090b0 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
900090b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900090b4:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
900090b6:	2800      	cmp	r0, #0
900090b8:	d16b      	bne.n	90009192 <BSP_TS_Init+0xe2>
900090ba:	680b      	ldr	r3, [r1, #0]
900090bc:	460c      	mov	r4, r1
900090be:	1e5a      	subs	r2, r3, #1
900090c0:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
900090c4:	d265      	bcs.n	90009192 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900090c6:	684a      	ldr	r2, [r1, #4]
900090c8:	1e51      	subs	r1, r2, #1
900090ca:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
900090ce:	d260      	bcs.n	90009192 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
900090d0:	4293      	cmp	r3, r2
900090d2:	bf28      	it	cs
900090d4:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900090d6:	68e2      	ldr	r2, [r4, #12]
900090d8:	429a      	cmp	r2, r3
900090da:	d85a      	bhi.n	90009192 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
900090dc:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
900090de:	4b31      	ldr	r3, [pc, #196]	; (900091a4 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900090e0:	4d31      	ldr	r5, [pc, #196]	; (900091a8 <BSP_TS_Init+0xf8>)
900090e2:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
900090e4:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
900090e8:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
900090ea:	4a30      	ldr	r2, [pc, #192]	; (900091ac <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
900090ec:	4b30      	ldr	r3, [pc, #192]	; (900091b0 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
900090ee:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
900090f0:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
900090f2:	4a30      	ldr	r2, [pc, #192]	; (900091b4 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
900090f4:	4b30      	ldr	r3, [pc, #192]	; (900091b8 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
900090f6:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900090f8:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
900090fa:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
900090fc:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900090fe:	f7ff f93f 	bl	90008380 <FT5336_RegisterBusIO>
90009102:	2800      	cmp	r0, #0
90009104:	d14b      	bne.n	9000919e <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90009106:	a901      	add	r1, sp, #4
90009108:	4628      	mov	r0, r5
9000910a:	f7ff f82f 	bl	9000816c <FT5336_ReadID>
9000910e:	2800      	cmp	r0, #0
90009110:	d145      	bne.n	9000919e <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90009112:	9b01      	ldr	r3, [sp, #4]
90009114:	2b51      	cmp	r3, #81	; 0x51
90009116:	d142      	bne.n	9000919e <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90009118:	4b28      	ldr	r3, [pc, #160]	; (900091bc <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000911a:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
9000911c:	4f28      	ldr	r7, [pc, #160]	; (900091c0 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000911e:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 900091c8 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90009122:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90009124:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90009128:	681b      	ldr	r3, [r3, #0]
9000912a:	4798      	blx	r3
9000912c:	4606      	mov	r6, r0
9000912e:	2800      	cmp	r0, #0
90009130:	d135      	bne.n	9000919e <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90009132:	4d24      	ldr	r5, [pc, #144]	; (900091c4 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90009134:	a902      	add	r1, sp, #8
90009136:	6838      	ldr	r0, [r7, #0]
90009138:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000913c:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90009140:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90009142:	e9c5 7200 	strd	r7, r2, [r5]
90009146:	68a2      	ldr	r2, [r4, #8]
90009148:	60aa      	str	r2, [r5, #8]
9000914a:	68e2      	ldr	r2, [r4, #12]
9000914c:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000914e:	4798      	blx	r3
90009150:	2800      	cmp	r0, #0
90009152:	db18      	blt.n	90009186 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90009154:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90009158:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000915c:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000915e:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009162:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009164:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009166:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009168:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000916a:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000916e:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009172:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009174:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009176:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009178:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000917a:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000917c:	63eb      	str	r3, [r5, #60]	; 0x3c
}
9000917e:	4630      	mov	r0, r6
90009180:	b008      	add	sp, #32
90009182:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90009186:	f06f 0604 	mvn.w	r6, #4
}
9000918a:	4630      	mov	r0, r6
9000918c:	b008      	add	sp, #32
9000918e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90009192:	f06f 0601 	mvn.w	r6, #1
}
90009196:	4630      	mov	r0, r6
90009198:	b008      	add	sp, #32
9000919a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
9000919e:	f04f 36ff 	mov.w	r6, #4294967295
900091a2:	e7ec      	b.n	9000917e <BSP_TS_Init+0xce>
900091a4:	90008625 	.word	0x90008625
900091a8:	24020428 	.word	0x24020428
900091ac:	90008591 	.word	0x90008591
900091b0:	90008dfd 	.word	0x90008dfd
900091b4:	90008dc1 	.word	0x90008dc1
900091b8:	90008e39 	.word	0x90008e39
900091bc:	2400003c 	.word	0x2400003c
900091c0:	24020450 	.word	0x24020450
900091c4:	24020454 	.word	0x24020454
900091c8:	24020494 	.word	0x24020494

900091cc <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
900091cc:	2800      	cmp	r0, #0
900091ce:	d157      	bne.n	90009280 <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900091d0:	4b2d      	ldr	r3, [pc, #180]	; (90009288 <BSP_TS_GetState+0xbc>)
900091d2:	4a2e      	ldr	r2, [pc, #184]	; (9000928c <BSP_TS_GetState+0xc0>)
900091d4:	681b      	ldr	r3, [r3, #0]
900091d6:	6810      	ldr	r0, [r2, #0]
900091d8:	691b      	ldr	r3, [r3, #16]
{
900091da:	b5f0      	push	{r4, r5, r6, r7, lr}
900091dc:	b085      	sub	sp, #20
900091de:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900091e0:	a901      	add	r1, sp, #4
900091e2:	4798      	blx	r3
900091e4:	2800      	cmp	r0, #0
900091e6:	db41      	blt.n	9000926c <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
900091e8:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900091ea:	4b29      	ldr	r3, [pc, #164]	; (90009290 <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
900091ec:	b93d      	cbnz	r5, 900091fe <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
900091ee:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
900091f0:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
900091f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
900091f4:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
900091f6:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900091fa:	b005      	add	sp, #20
900091fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900091fe:	6898      	ldr	r0, [r3, #8]
90009200:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
90009202:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90009206:	d435      	bmi.n	90009274 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90009208:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
9000920a:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000920c:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
9000920e:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90009212:	bf1c      	itt	ne
90009214:	f106 32ff 	addne.w	r2, r6, #4294967295
90009218:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
9000921c:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90009220:	6958      	ldr	r0, [r3, #20]
90009222:	bf18      	it	ne
90009224:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90009226:	681f      	ldr	r7, [r3, #0]
90009228:	fb07 f202 	mul.w	r2, r7, r2
9000922c:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90009230:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90009232:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90009234:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90009238:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
9000923a:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000923c:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000923e:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90009240:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90009244:	bf8c      	ite	hi
90009246:	1b90      	subhi	r0, r2, r6
90009248:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000924a:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000924c:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000924e:	bf8c      	ite	hi
90009250:	1b4f      	subhi	r7, r1, r5
90009252:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90009254:	42b8      	cmp	r0, r7
90009256:	bf38      	it	cc
90009258:	4638      	movcc	r0, r7
9000925a:	68df      	ldr	r7, [r3, #12]
9000925c:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
9000925e:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90009262:	d20a      	bcs.n	9000927a <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90009264:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90009266:	62d9      	str	r1, [r3, #44]	; 0x2c
}
90009268:	b005      	add	sp, #20
9000926a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
9000926c:	f06f 0004 	mvn.w	r0, #4
}
90009270:	b005      	add	sp, #20
90009272:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
90009274:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90009276:	463a      	mov	r2, r7
90009278:	e7c8      	b.n	9000920c <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000927a:	e9c4 6501 	strd	r6, r5, [r4, #4]
9000927e:	e7bc      	b.n	900091fa <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
90009280:	f06f 0001 	mvn.w	r0, #1
}
90009284:	4770      	bx	lr
90009286:	bf00      	nop
90009288:	24020494 	.word	0x24020494
9000928c:	24020450 	.word	0x24020450
90009290:	24020454 	.word	0x24020454

90009294 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90009294:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90009296:	4c19      	ldr	r4, [pc, #100]	; (900092fc <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90009298:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
9000929a:	4b19      	ldr	r3, [pc, #100]	; (90009300 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000929c:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
900092a0:	4818      	ldr	r0, [pc, #96]	; (90009304 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900092a2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
900092a6:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
900092aa:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900092ac:	4c16      	ldr	r4, [pc, #88]	; (90009308 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
900092ae:	f041 0101 	orr.w	r1, r1, #1
900092b2:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
900092b4:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
900092b6:	6819      	ldr	r1, [r3, #0]
900092b8:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900092ba:	4914      	ldr	r1, [pc, #80]	; (9000930c <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
900092bc:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
900092be:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
900092c0:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
900092c2:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
900092c4:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
900092c6:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
900092c8:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
900092ca:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
900092cc:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
900092ce:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
900092d0:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
900092d2:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
900092d4:	6818      	ldr	r0, [r3, #0]
900092d6:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
900092da:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
900092dc:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900092de:	6823      	ldr	r3, [r4, #0]
900092e0:	4019      	ands	r1, r3
900092e2:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
900092e6:	d203      	bcs.n	900092f0 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
900092e8:	4b09      	ldr	r3, [pc, #36]	; (90009310 <SystemInit+0x7c>)
900092ea:	2201      	movs	r2, #1
900092ec:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
900092f0:	4a08      	ldr	r2, [pc, #32]	; (90009314 <SystemInit+0x80>)
900092f2:	4b02      	ldr	r3, [pc, #8]	; (900092fc <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
900092f4:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
900092f8:	609a      	str	r2, [r3, #8]
}
900092fa:	4770      	bx	lr
900092fc:	e000ed00 	.word	0xe000ed00
90009300:	58024400 	.word	0x58024400
90009304:	eaf6ed7f 	.word	0xeaf6ed7f
90009308:	5c001000 	.word	0x5c001000
9000930c:	ffff0000 	.word	0xffff0000
90009310:	51008000 	.word	0x51008000
90009314:	90000000 	.word	0x90000000

90009318 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90009318:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000931a:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000931c:	4c12      	ldr	r4, [pc, #72]	; (90009368 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000931e:	f000 f843 	bl	900093a8 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90009322:	f003 fc65 	bl	9000cbf0 <HAL_RCC_GetSysClockFreq>
90009326:	4b11      	ldr	r3, [pc, #68]	; (9000936c <HAL_Init+0x54>)
90009328:	4911      	ldr	r1, [pc, #68]	; (90009370 <HAL_Init+0x58>)
9000932a:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000932c:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000932e:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90009332:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90009336:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90009338:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000933a:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000933e:	490d      	ldr	r1, [pc, #52]	; (90009374 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90009340:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90009344:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90009346:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000934a:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000934c:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000934e:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90009350:	f7fa f840 	bl	900033d4 <HAL_InitTick>
90009354:	b110      	cbz	r0, 9000935c <HAL_Init+0x44>
  {
    return HAL_ERROR;
90009356:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90009358:	4620      	mov	r0, r4
9000935a:	bd10      	pop	{r4, pc}
9000935c:	4604      	mov	r4, r0
  HAL_MspInit();
9000935e:	f7f9 fdf7 	bl	90002f50 <HAL_MspInit>
}
90009362:	4620      	mov	r0, r4
90009364:	bd10      	pop	{r4, pc}
90009366:	bf00      	nop
90009368:	24000070 	.word	0x24000070
9000936c:	58024400 	.word	0x58024400
90009370:	9002bbd8 	.word	0x9002bbd8
90009374:	2400006c 	.word	0x2400006c

90009378 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90009378:	4a03      	ldr	r2, [pc, #12]	; (90009388 <HAL_IncTick+0x10>)
9000937a:	4b04      	ldr	r3, [pc, #16]	; (9000938c <HAL_IncTick+0x14>)
9000937c:	6811      	ldr	r1, [r2, #0]
9000937e:	781b      	ldrb	r3, [r3, #0]
90009380:	440b      	add	r3, r1
90009382:	6013      	str	r3, [r2, #0]
}
90009384:	4770      	bx	lr
90009386:	bf00      	nop
90009388:	24020498 	.word	0x24020498
9000938c:	24000074 	.word	0x24000074

90009390 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90009390:	4b01      	ldr	r3, [pc, #4]	; (90009398 <HAL_GetTick+0x8>)
90009392:	6818      	ldr	r0, [r3, #0]
}
90009394:	4770      	bx	lr
90009396:	bf00      	nop
90009398:	24020498 	.word	0x24020498

9000939c <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
9000939c:	4b01      	ldr	r3, [pc, #4]	; (900093a4 <HAL_GetREVID+0x8>)
9000939e:	6818      	ldr	r0, [r3, #0]
}
900093a0:	0c00      	lsrs	r0, r0, #16
900093a2:	4770      	bx	lr
900093a4:	5c001000 	.word	0x5c001000

900093a8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900093a8:	4906      	ldr	r1, [pc, #24]	; (900093c4 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900093aa:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900093ae:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
900093b0:	4b05      	ldr	r3, [pc, #20]	; (900093c8 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900093b2:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900093b4:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900093b8:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
900093bc:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
900093be:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
900093c0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
900093c2:	4770      	bx	lr
900093c4:	e000ed00 	.word	0xe000ed00
900093c8:	05fa0000 	.word	0x05fa0000

900093cc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
900093cc:	4b1b      	ldr	r3, [pc, #108]	; (9000943c <HAL_NVIC_SetPriority+0x70>)
900093ce:	68db      	ldr	r3, [r3, #12]
900093d0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
900093d4:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900093d6:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900093da:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900093de:	f1be 0f04 	cmp.w	lr, #4
900093e2:	bf28      	it	cs
900093e4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900093e8:	f1bc 0f06 	cmp.w	ip, #6
900093ec:	d91a      	bls.n	90009424 <HAL_NVIC_SetPriority+0x58>
900093ee:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
900093f0:	f04f 3cff 	mov.w	ip, #4294967295
900093f4:	fa0c fc03 	lsl.w	ip, ip, r3
900093f8:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900093fc:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
90009400:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90009402:	fa0c fc0e 	lsl.w	ip, ip, lr
90009406:	ea21 010c 	bic.w	r1, r1, ip
9000940a:	fa01 f103 	lsl.w	r1, r1, r3
9000940e:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
90009412:	db0a      	blt.n	9000942a <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90009414:	0109      	lsls	r1, r1, #4
90009416:	4b0a      	ldr	r3, [pc, #40]	; (90009440 <HAL_NVIC_SetPriority+0x74>)
90009418:	b2c9      	uxtb	r1, r1
9000941a:	4403      	add	r3, r0
9000941c:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90009420:	f85d fb04 	ldr.w	pc, [sp], #4
90009424:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90009426:	4613      	mov	r3, r2
90009428:	e7e8      	b.n	900093fc <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000942a:	f000 000f 	and.w	r0, r0, #15
9000942e:	0109      	lsls	r1, r1, #4
90009430:	4b04      	ldr	r3, [pc, #16]	; (90009444 <HAL_NVIC_SetPriority+0x78>)
90009432:	b2c9      	uxtb	r1, r1
90009434:	4403      	add	r3, r0
90009436:	7619      	strb	r1, [r3, #24]
90009438:	f85d fb04 	ldr.w	pc, [sp], #4
9000943c:	e000ed00 	.word	0xe000ed00
90009440:	e000e100 	.word	0xe000e100
90009444:	e000ecfc 	.word	0xe000ecfc

90009448 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90009448:	2800      	cmp	r0, #0
9000944a:	db07      	blt.n	9000945c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000944c:	2301      	movs	r3, #1
9000944e:	f000 011f 	and.w	r1, r0, #31
90009452:	4a03      	ldr	r2, [pc, #12]	; (90009460 <HAL_NVIC_EnableIRQ+0x18>)
90009454:	0940      	lsrs	r0, r0, #5
90009456:	408b      	lsls	r3, r1
90009458:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000945c:	4770      	bx	lr
9000945e:	bf00      	nop
90009460:	e000e100 	.word	0xe000e100

90009464 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90009464:	2800      	cmp	r0, #0
90009466:	db0c      	blt.n	90009482 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90009468:	0943      	lsrs	r3, r0, #5
9000946a:	2201      	movs	r2, #1
9000946c:	f000 001f 	and.w	r0, r0, #31
90009470:	4904      	ldr	r1, [pc, #16]	; (90009484 <HAL_NVIC_DisableIRQ+0x20>)
90009472:	3320      	adds	r3, #32
90009474:	4082      	lsls	r2, r0
90009476:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000947a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000947e:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90009482:	4770      	bx	lr
90009484:	e000e100 	.word	0xe000e100

90009488 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90009488:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000948c:	4b04      	ldr	r3, [pc, #16]	; (900094a0 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000948e:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90009490:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90009492:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
90009496:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
90009498:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
9000949c:	4770      	bx	lr
9000949e:	bf00      	nop
900094a0:	e000ed00 	.word	0xe000ed00

900094a4 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
900094a4:	4b06      	ldr	r3, [pc, #24]	; (900094c0 <HAL_MPU_Enable+0x1c>)
900094a6:	f040 0001 	orr.w	r0, r0, #1
900094aa:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
900094ae:	6a5a      	ldr	r2, [r3, #36]	; 0x24
900094b0:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
900094b4:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
900094b6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900094ba:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
900094be:	4770      	bx	lr
900094c0:	e000ed00 	.word	0xe000ed00

900094c4 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
900094c4:	4a17      	ldr	r2, [pc, #92]	; (90009524 <HAL_MPU_ConfigRegion+0x60>)
900094c6:	7843      	ldrb	r3, [r0, #1]
900094c8:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
900094cc:	7801      	ldrb	r1, [r0, #0]
900094ce:	b321      	cbz	r1, 9000951a <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
900094d0:	6843      	ldr	r3, [r0, #4]
{
900094d2:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
900094d4:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900094d8:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900094da:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900094de:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
900094e0:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900094e4:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
900094e8:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900094ec:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
900094ee:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900094f0:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
900094f4:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900094f8:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
900094fc:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90009500:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
90009504:	7a01      	ldrb	r1, [r0, #8]
90009506:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
9000950a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000950e:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90009512:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
90009516:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
9000951a:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
9000951e:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
90009522:	4770      	bx	lr
90009524:	e000ed00 	.word	0xe000ed00

90009528 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90009528:	2800      	cmp	r0, #0
9000952a:	d036      	beq.n	9000959a <HAL_CRC_Init+0x72>
{
9000952c:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
9000952e:	7f43      	ldrb	r3, [r0, #29]
90009530:	4604      	mov	r4, r0
90009532:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90009536:	b363      	cbz	r3, 90009592 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90009538:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000953a:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
9000953c:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000953e:	b9f3      	cbnz	r3, 9000957e <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90009540:	6823      	ldr	r3, [r4, #0]
90009542:	4a17      	ldr	r2, [pc, #92]	; (900095a0 <HAL_CRC_Init+0x78>)
90009544:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90009546:	689a      	ldr	r2, [r3, #8]
90009548:	f022 0218 	bic.w	r2, r2, #24
9000954c:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000954e:	7962      	ldrb	r2, [r4, #5]
90009550:	b18a      	cbz	r2, 90009576 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90009552:	6922      	ldr	r2, [r4, #16]
90009554:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90009556:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90009558:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000955c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90009560:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90009562:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90009564:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90009566:	689a      	ldr	r2, [r3, #8]
90009568:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9000956c:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000956e:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90009570:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90009572:	7761      	strb	r1, [r4, #29]
}
90009574:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90009576:	f04f 32ff 	mov.w	r2, #4294967295
9000957a:	611a      	str	r2, [r3, #16]
9000957c:	e7eb      	b.n	90009556 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000957e:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90009582:	4620      	mov	r0, r4
90009584:	f000 f80e 	bl	900095a4 <HAL_CRCEx_Polynomial_Set>
90009588:	b908      	cbnz	r0, 9000958e <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000958a:	6823      	ldr	r3, [r4, #0]
9000958c:	e7df      	b.n	9000954e <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000958e:	2001      	movs	r0, #1
}
90009590:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90009592:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90009594:	f7f9 fcf6 	bl	90002f84 <HAL_CRC_MspInit>
90009598:	e7ce      	b.n	90009538 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000959a:	2001      	movs	r0, #1
}
9000959c:	4770      	bx	lr
9000959e:	bf00      	nop
900095a0:	04c11db7 	.word	0x04c11db7

900095a4 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
900095a4:	07cb      	lsls	r3, r1, #31
900095a6:	d51a      	bpl.n	900095de <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
900095a8:	231e      	movs	r3, #30
{
900095aa:	b410      	push	{r4}
900095ac:	e001      	b.n	900095b2 <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
900095ae:	3b01      	subs	r3, #1
900095b0:	d317      	bcc.n	900095e2 <HAL_CRCEx_Polynomial_Set+0x3e>
900095b2:	fa21 fc03 	lsr.w	ip, r1, r3
900095b6:	f01c 0f01 	tst.w	ip, #1
900095ba:	d0f8      	beq.n	900095ae <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
900095bc:	2a18      	cmp	r2, #24
900095be:	d811      	bhi.n	900095e4 <HAL_CRCEx_Polynomial_Set+0x40>
900095c0:	e8df f002 	tbb	[pc, r2]
900095c4:	10101016 	.word	0x10101016
900095c8:	10101010 	.word	0x10101010
900095cc:	10101024 	.word	0x10101024
900095d0:	10101010 	.word	0x10101010
900095d4:	10101021 	.word	0x10101021
900095d8:	10101010 	.word	0x10101010
900095dc:	14          	.byte	0x14
900095dd:	00          	.byte	0x00
    status =  HAL_ERROR;
900095de:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
900095e0:	4770      	bx	lr
    switch (PolyLength)
900095e2:	b12a      	cbz	r2, 900095f0 <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
900095e4:	2001      	movs	r0, #1
}
900095e6:	f85d 4b04 	ldr.w	r4, [sp], #4
900095ea:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
900095ec:	2b06      	cmp	r3, #6
900095ee:	d8f9      	bhi.n	900095e4 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
900095f0:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900095f2:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
900095f4:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900095f6:	68a3      	ldr	r3, [r4, #8]
900095f8:	f023 0318 	bic.w	r3, r3, #24
900095fc:	4313      	orrs	r3, r2
900095fe:	60a3      	str	r3, [r4, #8]
}
90009600:	f85d 4b04 	ldr.w	r4, [sp], #4
90009604:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
90009606:	2b07      	cmp	r3, #7
90009608:	d9f2      	bls.n	900095f0 <HAL_CRCEx_Polynomial_Set+0x4c>
9000960a:	e7eb      	b.n	900095e4 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
9000960c:	2b0f      	cmp	r3, #15
9000960e:	d9ef      	bls.n	900095f0 <HAL_CRCEx_Polynomial_Set+0x4c>
90009610:	e7e8      	b.n	900095e4 <HAL_CRCEx_Polynomial_Set+0x40>
90009612:	bf00      	nop

90009614 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90009614:	2800      	cmp	r0, #0
90009616:	d035      	beq.n	90009684 <HAL_DMA2D_Init+0x70>
{
90009618:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
9000961a:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
9000961e:	4604      	mov	r4, r0
90009620:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90009624:	b34b      	cbz	r3, 9000967a <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90009626:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90009628:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000962a:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000962c:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90009630:	69e1      	ldr	r1, [r4, #28]
90009632:	681d      	ldr	r5, [r3, #0]
90009634:	4814      	ldr	r0, [pc, #80]	; (90009688 <HAL_DMA2D_Init+0x74>)
90009636:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90009638:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000963a:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000963c:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000963e:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90009640:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90009642:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90009644:	4302      	orrs	r2, r0
90009646:	6b59      	ldr	r1, [r3, #52]	; 0x34
90009648:	4810      	ldr	r0, [pc, #64]	; (9000968c <HAL_DMA2D_Init+0x78>)
9000964a:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000964c:	4910      	ldr	r1, [pc, #64]	; (90009690 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000964e:	4302      	orrs	r2, r0
90009650:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90009652:	6c1a      	ldr	r2, [r3, #64]	; 0x40
90009654:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90009656:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000965a:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000965c:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000965e:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90009660:	6b59      	ldr	r1, [r3, #52]	; 0x34
90009662:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90009666:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90009668:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000966c:	430a      	orrs	r2, r1
9000966e:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90009670:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90009672:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90009674:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
90009678:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000967a:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000967e:	f7f9 fc99 	bl	90002fb4 <HAL_DMA2D_MspInit>
90009682:	e7d0      	b.n	90009626 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90009684:	2001      	movs	r0, #1
}
90009686:	4770      	bx	lr
90009688:	fff8ffbf 	.word	0xfff8ffbf
9000968c:	fffffef8 	.word	0xfffffef8
90009690:	ffff0000 	.word	0xffff0000

90009694 <HAL_DMA2D_LineEventCallback>:
90009694:	4770      	bx	lr
90009696:	bf00      	nop

90009698 <HAL_DMA2D_CLUTLoadingCpltCallback>:
90009698:	4770      	bx	lr
9000969a:	bf00      	nop

9000969c <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000969c:	6803      	ldr	r3, [r0, #0]
{
9000969e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
900096a0:	685d      	ldr	r5, [r3, #4]
{
900096a2:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
900096a4:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
900096a6:	07ea      	lsls	r2, r5, #31
900096a8:	d501      	bpl.n	900096ae <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
900096aa:	05f1      	lsls	r1, r6, #23
900096ac:	d456      	bmi.n	9000975c <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
900096ae:	06aa      	lsls	r2, r5, #26
900096b0:	d501      	bpl.n	900096b6 <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
900096b2:	04b3      	lsls	r3, r6, #18
900096b4:	d43b      	bmi.n	9000972e <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
900096b6:	0728      	lsls	r0, r5, #28
900096b8:	d501      	bpl.n	900096be <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
900096ba:	0531      	lsls	r1, r6, #20
900096bc:	d421      	bmi.n	90009702 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
900096be:	076a      	lsls	r2, r5, #29
900096c0:	d501      	bpl.n	900096c6 <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
900096c2:	0573      	lsls	r3, r6, #21
900096c4:	d472      	bmi.n	900097ac <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
900096c6:	07a8      	lsls	r0, r5, #30
900096c8:	d501      	bpl.n	900096ce <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
900096ca:	05b1      	lsls	r1, r6, #22
900096cc:	d404      	bmi.n	900096d8 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
900096ce:	06ea      	lsls	r2, r5, #27
900096d0:	d501      	bpl.n	900096d6 <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
900096d2:	04f3      	lsls	r3, r6, #19
900096d4:	d457      	bmi.n	90009786 <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
900096d6:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
900096d8:	6823      	ldr	r3, [r4, #0]
900096da:	681a      	ldr	r2, [r3, #0]
900096dc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
900096e0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
900096e2:	2202      	movs	r2, #2
900096e4:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
900096e6:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900096e8:	6e63      	ldr	r3, [r4, #100]	; 0x64
900096ea:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
900096ec:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
900096ee:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
900096f2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
900096f6:	6a23      	ldr	r3, [r4, #32]
900096f8:	2b00      	cmp	r3, #0
900096fa:	d0e8      	beq.n	900096ce <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
900096fc:	4620      	mov	r0, r4
900096fe:	4798      	blx	r3
90009700:	e7e5      	b.n	900096ce <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90009702:	6823      	ldr	r3, [r4, #0]
90009704:	681a      	ldr	r2, [r3, #0]
90009706:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
9000970a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
9000970c:	2208      	movs	r2, #8
9000970e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90009710:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90009712:	6e63      	ldr	r3, [r4, #100]	; 0x64
90009714:	4313      	orrs	r3, r2
90009716:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90009718:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000971c:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000971e:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90009720:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90009724:	2b00      	cmp	r3, #0
90009726:	d0ca      	beq.n	900096be <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90009728:	4620      	mov	r0, r4
9000972a:	4798      	blx	r3
9000972c:	e7c7      	b.n	900096be <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
9000972e:	6823      	ldr	r3, [r4, #0]
90009730:	681a      	ldr	r2, [r3, #0]
90009732:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
90009736:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90009738:	2220      	movs	r2, #32
9000973a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000973c:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
9000973e:	6e63      	ldr	r3, [r4, #100]	; 0x64
90009740:	f043 0302 	orr.w	r3, r3, #2
90009744:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90009746:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000974a:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000974c:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000974e:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90009752:	2b00      	cmp	r3, #0
90009754:	d0af      	beq.n	900096b6 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90009756:	4620      	mov	r0, r4
90009758:	4798      	blx	r3
9000975a:	e7ac      	b.n	900096b6 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
9000975c:	681a      	ldr	r2, [r3, #0]
9000975e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
90009762:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90009764:	6e42      	ldr	r2, [r0, #100]	; 0x64
90009766:	f042 0201 	orr.w	r2, r2, #1
9000976a:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
9000976c:	2201      	movs	r2, #1
9000976e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90009770:	2304      	movs	r3, #4
90009772:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90009776:	2300      	movs	r3, #0
90009778:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000977c:	6a43      	ldr	r3, [r0, #36]	; 0x24
9000977e:	2b00      	cmp	r3, #0
90009780:	d095      	beq.n	900096ae <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90009782:	4798      	blx	r3
90009784:	e793      	b.n	900096ae <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90009786:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90009788:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000978a:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
9000978c:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000978e:	681a      	ldr	r2, [r3, #0]
90009790:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
90009794:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90009796:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90009798:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000979a:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
9000979c:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900097a0:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
900097a2:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
900097a6:	f7ff ff77 	bl	90009698 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
900097aa:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
900097ac:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
900097ae:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
900097b0:	681a      	ldr	r2, [r3, #0]
900097b2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
900097b6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
900097b8:	2204      	movs	r2, #4
900097ba:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
900097bc:	f7ff ff6a 	bl	90009694 <HAL_DMA2D_LineEventCallback>
900097c0:	e781      	b.n	900096c6 <HAL_DMA2D_IRQHandler+0x2a>
900097c2:	bf00      	nop

900097c4 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
900097c4:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
900097c8:	2a01      	cmp	r2, #1
900097ca:	d065      	beq.n	90009898 <HAL_DMA2D_ConfigLayer+0xd4>
900097cc:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900097ce:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900097d2:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900097d4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
900097d8:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
900097da:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900097dc:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
900097e0:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900097e4:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900097e6:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
900097e8:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900097ea:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900097ec:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900097f0:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
900097f4:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900097f6:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900097fa:	ea42 0204 	orr.w	r2, r2, r4
900097fe:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90009802:	d922      	bls.n	9000984a <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90009804:	6b45      	ldr	r5, [r0, #52]	; 0x34
90009806:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000980a:	b981      	cbnz	r1, 9000982e <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000980c:	6818      	ldr	r0, [r3, #0]
9000980e:	4923      	ldr	r1, [pc, #140]	; (9000989c <HAL_DMA2D_ConfigLayer+0xd8>)
90009810:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90009812:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90009814:	4029      	ands	r1, r5
90009816:	4311      	orrs	r1, r2
90009818:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000981a:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
9000981c:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000981e:	2101      	movs	r1, #1

  return HAL_OK;
90009820:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90009822:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
90009826:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
9000982a:	bc70      	pop	{r4, r5, r6}
9000982c:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000982e:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90009830:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90009832:	d129      	bne.n	90009888 <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90009834:	69e5      	ldr	r5, [r4, #28]
90009836:	491a      	ldr	r1, [pc, #104]	; (900098a0 <HAL_DMA2D_ConfigLayer+0xdc>)
90009838:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
9000983a:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000983c:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000983e:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
90009842:	4311      	orrs	r1, r2
90009844:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90009846:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90009848:	e7e8      	b.n	9000981c <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000984a:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000984c:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
90009850:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90009852:	b961      	cbnz	r1, 9000986e <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90009854:	6819      	ldr	r1, [r3, #0]
90009856:	4a11      	ldr	r2, [pc, #68]	; (9000989c <HAL_DMA2D_ConfigLayer+0xd8>)
90009858:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000985a:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000985c:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000985e:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90009860:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90009864:	4322      	orrs	r2, r4
90009866:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90009868:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000986a:	6288      	str	r0, [r1, #40]	; 0x28
9000986c:	e7d6      	b.n	9000981c <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000986e:	6819      	ldr	r1, [r3, #0]
90009870:	4a0a      	ldr	r2, [pc, #40]	; (9000989c <HAL_DMA2D_ConfigLayer+0xd8>)
90009872:	69cd      	ldr	r5, [r1, #28]
90009874:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90009876:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90009878:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000987a:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000987c:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90009880:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90009882:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90009884:	620c      	str	r4, [r1, #32]
90009886:	e7c9      	b.n	9000981c <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90009888:	69e5      	ldr	r5, [r4, #28]
9000988a:	4904      	ldr	r1, [pc, #16]	; (9000989c <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000988c:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000988e:	4029      	ands	r1, r5
90009890:	4311      	orrs	r1, r2
90009892:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90009894:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90009896:	e7c1      	b.n	9000981c <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
90009898:	2002      	movs	r0, #2
}
9000989a:	4770      	bx	lr
9000989c:	00ccfff0 	.word	0x00ccfff0
900098a0:	00c0fff0 	.word	0x00c0fff0

900098a4 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
900098a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900098a8:	680c      	ldr	r4, [r1, #0]
{
900098aa:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900098ac:	2c00      	cmp	r4, #0
900098ae:	f000 80a7 	beq.w	90009a00 <HAL_GPIO_Init+0x15c>
900098b2:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900098b6:	4f8a      	ldr	r7, [pc, #552]	; (90009ae0 <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
900098b8:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
900098ba:	2201      	movs	r2, #1
900098bc:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
900098be:	ea12 0e04 	ands.w	lr, r2, r4
900098c2:	f000 8096 	beq.w	900099f2 <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900098c6:	684d      	ldr	r5, [r1, #4]
900098c8:	f005 0903 	and.w	r9, r5, #3
900098cc:	f109 36ff 	add.w	r6, r9, #4294967295
900098d0:	2e01      	cmp	r6, #1
900098d2:	f240 8098 	bls.w	90009a06 <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
900098d6:	f1b9 0f03 	cmp.w	r9, #3
900098da:	f040 80d2 	bne.w	90009a82 <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900098de:	fa09 f20c 	lsl.w	r2, r9, ip
900098e2:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
900098e6:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900098e8:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
900098ec:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900098f0:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
900098f4:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900098f6:	d07c      	beq.n	900099f2 <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900098f8:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
900098fc:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90009900:	f003 0903 	and.w	r9, r3, #3
90009904:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90009906:	f042 0202 	orr.w	r2, r2, #2
9000990a:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000990e:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90009912:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
90009916:	f508 6880 	add.w	r8, r8, #1024	; 0x400
9000991a:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000991e:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90009922:	f002 0202 	and.w	r2, r2, #2
90009926:	9201      	str	r2, [sp, #4]
90009928:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
9000992a:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000992e:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90009932:	4e6c      	ldr	r6, [pc, #432]	; (90009ae4 <HAL_GPIO_Init+0x240>)
90009934:	42b0      	cmp	r0, r6
90009936:	d028      	beq.n	9000998a <HAL_GPIO_Init+0xe6>
90009938:	f506 6680 	add.w	r6, r6, #1024	; 0x400
9000993c:	42b0      	cmp	r0, r6
9000993e:	f000 80ac 	beq.w	90009a9a <HAL_GPIO_Init+0x1f6>
90009942:	4e69      	ldr	r6, [pc, #420]	; (90009ae8 <HAL_GPIO_Init+0x244>)
90009944:	42b0      	cmp	r0, r6
90009946:	f000 80ad 	beq.w	90009aa4 <HAL_GPIO_Init+0x200>
9000994a:	4e68      	ldr	r6, [pc, #416]	; (90009aec <HAL_GPIO_Init+0x248>)
9000994c:	42b0      	cmp	r0, r6
9000994e:	f000 809f 	beq.w	90009a90 <HAL_GPIO_Init+0x1ec>
90009952:	4e67      	ldr	r6, [pc, #412]	; (90009af0 <HAL_GPIO_Init+0x24c>)
90009954:	42b0      	cmp	r0, r6
90009956:	f000 80af 	beq.w	90009ab8 <HAL_GPIO_Init+0x214>
9000995a:	4e66      	ldr	r6, [pc, #408]	; (90009af4 <HAL_GPIO_Init+0x250>)
9000995c:	42b0      	cmp	r0, r6
9000995e:	f000 80b0 	beq.w	90009ac2 <HAL_GPIO_Init+0x21e>
90009962:	4e65      	ldr	r6, [pc, #404]	; (90009af8 <HAL_GPIO_Init+0x254>)
90009964:	42b0      	cmp	r0, r6
90009966:	f000 80a2 	beq.w	90009aae <HAL_GPIO_Init+0x20a>
9000996a:	4e64      	ldr	r6, [pc, #400]	; (90009afc <HAL_GPIO_Init+0x258>)
9000996c:	42b0      	cmp	r0, r6
9000996e:	f000 80ad 	beq.w	90009acc <HAL_GPIO_Init+0x228>
90009972:	4e63      	ldr	r6, [pc, #396]	; (90009b00 <HAL_GPIO_Init+0x25c>)
90009974:	42b0      	cmp	r0, r6
90009976:	f000 80ae 	beq.w	90009ad6 <HAL_GPIO_Init+0x232>
9000997a:	4e62      	ldr	r6, [pc, #392]	; (90009b04 <HAL_GPIO_Init+0x260>)
9000997c:	42b0      	cmp	r0, r6
9000997e:	bf0c      	ite	eq
90009980:	2609      	moveq	r6, #9
90009982:	260a      	movne	r6, #10
90009984:	fa06 f609 	lsl.w	r6, r6, r9
90009988:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
9000998a:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
9000998e:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90009992:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
90009996:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
9000999a:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
9000999c:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
900099a0:	bf0c      	ite	eq
900099a2:	4032      	andeq	r2, r6
          temp |= iocurrent;
900099a4:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
900099a8:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
900099ac:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
900099b0:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
900099b4:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
900099b8:	bf0c      	ite	eq
900099ba:	4032      	andeq	r2, r6
          temp |= iocurrent;
900099bc:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
900099c0:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
900099c4:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
900099c8:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
900099cc:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
900099d0:	bf0c      	ite	eq
900099d2:	4032      	andeq	r2, r6
          temp |= iocurrent;
900099d4:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900099d8:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
900099da:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
900099de:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
900099e2:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
900099e6:	bf54      	ite	pl
900099e8:	4032      	andpl	r2, r6
          temp |= iocurrent;
900099ea:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
900099ee:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
900099f2:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900099f4:	f10c 0c02 	add.w	ip, ip, #2
900099f8:	fa34 f203 	lsrs.w	r2, r4, r3
900099fc:	f47f af5d 	bne.w	900098ba <HAL_GPIO_Init+0x16>
  }
}
90009a00:	b003      	add	sp, #12
90009a02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90009a06:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
90009a0a:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90009a0c:	fa08 f80c 	lsl.w	r8, r8, ip
90009a10:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
90009a14:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90009a16:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
90009a1a:	fa06 f60c 	lsl.w	r6, r6, ip
90009a1e:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
90009a22:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90009a24:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
90009a28:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90009a2c:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90009a2e:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90009a32:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
90009a34:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
90009a36:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90009a38:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90009a3c:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90009a3e:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90009a42:	fa06 f60c 	lsl.w	r6, r6, ip
90009a46:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
90009a4a:	fa09 f20c 	lsl.w	r2, r9, ip
90009a4e:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90009a50:	f47f af49 	bne.w	900098e6 <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
90009a54:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90009a58:	f003 0b07 	and.w	fp, r3, #7
90009a5c:	260f      	movs	r6, #15
90009a5e:	eb00 0989 	add.w	r9, r0, r9, lsl #2
90009a62:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
90009a66:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90009a6a:	fa06 f60b 	lsl.w	r6, r6, fp
90009a6e:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90009a72:	690e      	ldr	r6, [r1, #16]
90009a74:	fa06 f60b 	lsl.w	r6, r6, fp
90009a78:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
90009a7c:	f8c9 6020 	str.w	r6, [r9, #32]
90009a80:	e731      	b.n	900098e6 <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90009a82:	f04f 0803 	mov.w	r8, #3
90009a86:	fa08 f80c 	lsl.w	r8, r8, ip
90009a8a:	ea6f 0808 	mvn.w	r8, r8
90009a8e:	e7d2      	b.n	90009a36 <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90009a90:	2603      	movs	r6, #3
90009a92:	fa06 f609 	lsl.w	r6, r6, r9
90009a96:	4332      	orrs	r2, r6
90009a98:	e777      	b.n	9000998a <HAL_GPIO_Init+0xe6>
90009a9a:	2601      	movs	r6, #1
90009a9c:	fa06 f609 	lsl.w	r6, r6, r9
90009aa0:	4332      	orrs	r2, r6
90009aa2:	e772      	b.n	9000998a <HAL_GPIO_Init+0xe6>
90009aa4:	2602      	movs	r6, #2
90009aa6:	fa06 f609 	lsl.w	r6, r6, r9
90009aaa:	4332      	orrs	r2, r6
90009aac:	e76d      	b.n	9000998a <HAL_GPIO_Init+0xe6>
90009aae:	2606      	movs	r6, #6
90009ab0:	fa06 f609 	lsl.w	r6, r6, r9
90009ab4:	4332      	orrs	r2, r6
90009ab6:	e768      	b.n	9000998a <HAL_GPIO_Init+0xe6>
90009ab8:	2604      	movs	r6, #4
90009aba:	fa06 f609 	lsl.w	r6, r6, r9
90009abe:	4332      	orrs	r2, r6
90009ac0:	e763      	b.n	9000998a <HAL_GPIO_Init+0xe6>
90009ac2:	2605      	movs	r6, #5
90009ac4:	fa06 f609 	lsl.w	r6, r6, r9
90009ac8:	4332      	orrs	r2, r6
90009aca:	e75e      	b.n	9000998a <HAL_GPIO_Init+0xe6>
90009acc:	2607      	movs	r6, #7
90009ace:	fa06 f609 	lsl.w	r6, r6, r9
90009ad2:	4332      	orrs	r2, r6
90009ad4:	e759      	b.n	9000998a <HAL_GPIO_Init+0xe6>
90009ad6:	2608      	movs	r6, #8
90009ad8:	fa06 f609 	lsl.w	r6, r6, r9
90009adc:	4332      	orrs	r2, r6
90009ade:	e754      	b.n	9000998a <HAL_GPIO_Init+0xe6>
90009ae0:	58024400 	.word	0x58024400
90009ae4:	58020000 	.word	0x58020000
90009ae8:	58020800 	.word	0x58020800
90009aec:	58020c00 	.word	0x58020c00
90009af0:	58021000 	.word	0x58021000
90009af4:	58021400 	.word	0x58021400
90009af8:	58021800 	.word	0x58021800
90009afc:	58021c00 	.word	0x58021c00
90009b00:	58022000 	.word	0x58022000
90009b04:	58022400 	.word	0x58022400

90009b08 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90009b08:	2900      	cmp	r1, #0
90009b0a:	f000 80a4 	beq.w	90009c56 <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
90009b0e:	2300      	movs	r3, #0
{
90009b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009b14:	f8df 9168 	ldr.w	r9, [pc, #360]	; 90009c80 <HAL_GPIO_DeInit+0x178>
90009b18:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009b1a:	f8df 8168 	ldr.w	r8, [pc, #360]	; 90009c84 <HAL_GPIO_DeInit+0x17c>
90009b1e:	f8df a168 	ldr.w	sl, [pc, #360]	; 90009c88 <HAL_GPIO_DeInit+0x180>
90009b22:	f8df b168 	ldr.w	fp, [pc, #360]	; 90009c8c <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
90009b26:	f04f 0e01 	mov.w	lr, #1
90009b2a:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
90009b2e:	ea12 0c01 	ands.w	ip, r2, r1
90009b32:	d06b      	beq.n	90009c0c <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
90009b34:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90009b38:	f003 0403 	and.w	r4, r3, #3
90009b3c:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009b3e:	4540      	cmp	r0, r8
90009b40:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90009b42:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
90009b46:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90009b48:	fa06 f604 	lsl.w	r6, r6, r4
90009b4c:	ea07 0706 	and.w	r7, r7, r6
90009b50:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009b52:	d01f      	beq.n	90009b94 <HAL_GPIO_DeInit+0x8c>
90009b54:	4550      	cmp	r0, sl
90009b56:	d01a      	beq.n	90009b8e <HAL_GPIO_DeInit+0x86>
90009b58:	4558      	cmp	r0, fp
90009b5a:	d05e      	beq.n	90009c1a <HAL_GPIO_DeInit+0x112>
90009b5c:	4f43      	ldr	r7, [pc, #268]	; (90009c6c <HAL_GPIO_DeInit+0x164>)
90009b5e:	42b8      	cmp	r0, r7
90009b60:	d065      	beq.n	90009c2e <HAL_GPIO_DeInit+0x126>
90009b62:	4f43      	ldr	r7, [pc, #268]	; (90009c70 <HAL_GPIO_DeInit+0x168>)
90009b64:	42b8      	cmp	r0, r7
90009b66:	d067      	beq.n	90009c38 <HAL_GPIO_DeInit+0x130>
90009b68:	4f42      	ldr	r7, [pc, #264]	; (90009c74 <HAL_GPIO_DeInit+0x16c>)
90009b6a:	42b8      	cmp	r0, r7
90009b6c:	d05a      	beq.n	90009c24 <HAL_GPIO_DeInit+0x11c>
90009b6e:	4f42      	ldr	r7, [pc, #264]	; (90009c78 <HAL_GPIO_DeInit+0x170>)
90009b70:	42b8      	cmp	r0, r7
90009b72:	d06b      	beq.n	90009c4c <HAL_GPIO_DeInit+0x144>
90009b74:	4f41      	ldr	r7, [pc, #260]	; (90009c7c <HAL_GPIO_DeInit+0x174>)
90009b76:	42b8      	cmp	r0, r7
90009b78:	d06e      	beq.n	90009c58 <HAL_GPIO_DeInit+0x150>
90009b7a:	f8df e114 	ldr.w	lr, [pc, #276]	; 90009c90 <HAL_GPIO_DeInit+0x188>
90009b7e:	4570      	cmp	r0, lr
90009b80:	d05f      	beq.n	90009c42 <HAL_GPIO_DeInit+0x13a>
90009b82:	f8df e110 	ldr.w	lr, [pc, #272]	; 90009c94 <HAL_GPIO_DeInit+0x18c>
90009b86:	4570      	cmp	r0, lr
90009b88:	d06b      	beq.n	90009c62 <HAL_GPIO_DeInit+0x15a>
90009b8a:	f04f 0e0a 	mov.w	lr, #10
90009b8e:	fa0e f404 	lsl.w	r4, lr, r4
90009b92:	e000      	b.n	90009b96 <HAL_GPIO_DeInit+0x8e>
90009b94:	2400      	movs	r4, #0
90009b96:	9f01      	ldr	r7, [sp, #4]
90009b98:	42a7      	cmp	r7, r4
90009b9a:	d119      	bne.n	90009bd0 <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90009b9c:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
90009ba0:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
90009ba4:	ea27 070c 	bic.w	r7, r7, ip
90009ba8:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90009bac:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
90009bb0:	ea27 070c 	bic.w	r7, r7, ip
90009bb4:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
90009bb8:	6867      	ldr	r7, [r4, #4]
90009bba:	ea27 070c 	bic.w	r7, r7, ip
90009bbe:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90009bc0:	6827      	ldr	r7, [r4, #0]
90009bc2:	ea27 070c 	bic.w	r7, r7, ip
90009bc6:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90009bc8:	68ac      	ldr	r4, [r5, #8]
90009bca:	ea24 0406 	bic.w	r4, r4, r6
90009bce:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009bd0:	005d      	lsls	r5, r3, #1
90009bd2:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90009bd4:	f003 0607 	and.w	r6, r3, #7
90009bd8:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009bda:	40ac      	lsls	r4, r5
90009bdc:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90009bde:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009be0:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90009be2:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009be4:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90009be6:	08dd      	lsrs	r5, r3, #3
90009be8:	eb00 0585 	add.w	r5, r0, r5, lsl #2
90009bec:	6a2e      	ldr	r6, [r5, #32]
90009bee:	ea26 0607 	bic.w	r6, r6, r7
90009bf2:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90009bf4:	68c5      	ldr	r5, [r0, #12]
90009bf6:	ea25 0504 	bic.w	r5, r5, r4
90009bfa:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90009bfc:	6845      	ldr	r5, [r0, #4]
90009bfe:	ea25 0202 	bic.w	r2, r5, r2
90009c02:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90009c04:	6882      	ldr	r2, [r0, #8]
90009c06:	ea22 0204 	bic.w	r2, r2, r4
90009c0a:	6082      	str	r2, [r0, #8]
    }

    position++;
90009c0c:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90009c0e:	fa31 f203 	lsrs.w	r2, r1, r3
90009c12:	d188      	bne.n	90009b26 <HAL_GPIO_DeInit+0x1e>
  }
}
90009c14:	b003      	add	sp, #12
90009c16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009c1a:	f04f 0e02 	mov.w	lr, #2
90009c1e:	fa0e f404 	lsl.w	r4, lr, r4
90009c22:	e7b8      	b.n	90009b96 <HAL_GPIO_DeInit+0x8e>
90009c24:	f04f 0e05 	mov.w	lr, #5
90009c28:	fa0e f404 	lsl.w	r4, lr, r4
90009c2c:	e7b3      	b.n	90009b96 <HAL_GPIO_DeInit+0x8e>
90009c2e:	f04f 0e03 	mov.w	lr, #3
90009c32:	fa0e f404 	lsl.w	r4, lr, r4
90009c36:	e7ae      	b.n	90009b96 <HAL_GPIO_DeInit+0x8e>
90009c38:	f04f 0e04 	mov.w	lr, #4
90009c3c:	fa0e f404 	lsl.w	r4, lr, r4
90009c40:	e7a9      	b.n	90009b96 <HAL_GPIO_DeInit+0x8e>
90009c42:	f04f 0e08 	mov.w	lr, #8
90009c46:	fa0e f404 	lsl.w	r4, lr, r4
90009c4a:	e7a4      	b.n	90009b96 <HAL_GPIO_DeInit+0x8e>
90009c4c:	f04f 0e06 	mov.w	lr, #6
90009c50:	fa0e f404 	lsl.w	r4, lr, r4
90009c54:	e79f      	b.n	90009b96 <HAL_GPIO_DeInit+0x8e>
90009c56:	4770      	bx	lr
90009c58:	f04f 0e07 	mov.w	lr, #7
90009c5c:	fa0e f404 	lsl.w	r4, lr, r4
90009c60:	e799      	b.n	90009b96 <HAL_GPIO_DeInit+0x8e>
90009c62:	f04f 0e09 	mov.w	lr, #9
90009c66:	fa0e f404 	lsl.w	r4, lr, r4
90009c6a:	e794      	b.n	90009b96 <HAL_GPIO_DeInit+0x8e>
90009c6c:	58020c00 	.word	0x58020c00
90009c70:	58021000 	.word	0x58021000
90009c74:	58021400 	.word	0x58021400
90009c78:	58021800 	.word	0x58021800
90009c7c:	58021c00 	.word	0x58021c00
90009c80:	58000400 	.word	0x58000400
90009c84:	58020000 	.word	0x58020000
90009c88:	58020400 	.word	0x58020400
90009c8c:	58020800 	.word	0x58020800
90009c90:	58022000 	.word	0x58022000
90009c94:	58022400 	.word	0x58022400

90009c98 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90009c98:	6903      	ldr	r3, [r0, #16]
90009c9a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90009c9c:	bf14      	ite	ne
90009c9e:	2001      	movne	r0, #1
90009ca0:	2000      	moveq	r0, #0
90009ca2:	4770      	bx	lr

90009ca4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90009ca4:	b902      	cbnz	r2, 90009ca8 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
90009ca6:	0409      	lsls	r1, r1, #16
90009ca8:	6181      	str	r1, [r0, #24]
  }
}
90009caa:	4770      	bx	lr

90009cac <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
90009cac:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90009cae:	ea01 0203 	and.w	r2, r1, r3
90009cb2:	ea21 0103 	bic.w	r1, r1, r3
90009cb6:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
90009cba:	6181      	str	r1, [r0, #24]
}
90009cbc:	4770      	bx	lr
90009cbe:	bf00      	nop

90009cc0 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
90009cc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90009cc4:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90009cc6:	f04f 0820 	mov.w	r8, #32
{
90009cca:	4605      	mov	r5, r0
90009ccc:	460e      	mov	r6, r1
90009cce:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90009cd0:	6998      	ldr	r0, [r3, #24]
90009cd2:	f010 0902 	ands.w	r9, r0, #2
90009cd6:	f040 809e 	bne.w	90009e16 <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
90009cda:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90009cdc:	f014 0410 	ands.w	r4, r4, #16
90009ce0:	d068      	beq.n	90009db4 <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009ce2:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
90009ce4:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
90009ce6:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009ce8:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009cea:	1c71      	adds	r1, r6, #1
90009cec:	699a      	ldr	r2, [r3, #24]
90009cee:	d163      	bne.n	90009db8 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
90009cf0:	0690      	lsls	r0, r2, #26
90009cf2:	f100 8093 	bmi.w	90009e1c <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
90009cf6:	f1ba 0f00 	cmp.w	sl, #0
90009cfa:	d104      	bne.n	90009d06 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
90009cfc:	699c      	ldr	r4, [r3, #24]
90009cfe:	06a1      	lsls	r1, r4, #26
90009d00:	d5fc      	bpl.n	90009cfc <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009d02:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90009d06:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
90009d0a:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90009d0c:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90009d0e:	05d0      	lsls	r0, r2, #23
90009d10:	d530      	bpl.n	90009d74 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009d12:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009d16:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90009d18:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009d1c:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009d1e:	d504      	bpl.n	90009d2a <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009d20:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90009d24:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009d28:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90009d2a:	0591      	lsls	r1, r2, #22
90009d2c:	d504      	bpl.n	90009d38 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009d2e:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90009d32:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009d36:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90009d38:	699a      	ldr	r2, [r3, #24]
90009d3a:	0790      	lsls	r0, r2, #30
90009d3c:	d501      	bpl.n	90009d42 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
90009d3e:	2200      	movs	r2, #0
90009d40:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90009d42:	699a      	ldr	r2, [r3, #24]
90009d44:	07d1      	lsls	r1, r2, #31
90009d46:	d403      	bmi.n	90009d50 <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90009d48:	699a      	ldr	r2, [r3, #24]
90009d4a:	f042 0201 	orr.w	r2, r2, #1
90009d4e:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90009d50:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009d52:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90009d54:	4834      	ldr	r0, [pc, #208]	; (90009e28 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
90009d56:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
90009d58:	4002      	ands	r2, r0
      return HAL_ERROR;
90009d5a:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
90009d5c:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009d5e:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009d60:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
90009d64:	4323      	orrs	r3, r4
90009d66:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90009d68:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009d6c:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
90009d70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009d74:	0550      	lsls	r0, r2, #21
90009d76:	d4d3      	bmi.n	90009d20 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90009d78:	0592      	lsls	r2, r2, #22
90009d7a:	d4d8      	bmi.n	90009d2e <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
90009d7c:	2900      	cmp	r1, #0
90009d7e:	d1db      	bne.n	90009d38 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
90009d80:	1c72      	adds	r2, r6, #1
90009d82:	d0a5      	beq.n	90009cd0 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009d84:	f7ff fb04 	bl	90009390 <HAL_GetTick>
90009d88:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90009d8a:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009d8c:	42b0      	cmp	r0, r6
90009d8e:	d801      	bhi.n	90009d94 <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
90009d90:	2e00      	cmp	r6, #0
90009d92:	d19d      	bne.n	90009cd0 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90009d94:	699a      	ldr	r2, [r3, #24]
90009d96:	f012 0202 	ands.w	r2, r2, #2
90009d9a:	d199      	bne.n	90009cd0 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009d9c:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009d9e:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
90009da0:	2001      	movs	r0, #1
90009da2:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009da6:	430b      	orrs	r3, r1
90009da8:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009daa:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009dae:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
90009db2:	e7dd      	b.n	90009d70 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
90009db4:	4621      	mov	r1, r4
90009db6:	e7a9      	b.n	90009d0c <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009db8:	0692      	lsls	r2, r2, #26
90009dba:	d42f      	bmi.n	90009e1c <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
90009dbc:	f1ba 0f00 	cmp.w	sl, #0
90009dc0:	d1a1      	bne.n	90009d06 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009dc2:	f7ff fae5 	bl	90009390 <HAL_GetTick>
90009dc6:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009dc8:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009dca:	4286      	cmp	r6, r0
90009dcc:	d301      	bcc.n	90009dd2 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
90009dce:	2e00      	cmp	r6, #0
90009dd0:	d18b      	bne.n	90009cea <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009dd2:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90009dd4:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009dd8:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90009dda:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009ddc:	0409      	lsls	r1, r1, #16
90009dde:	d50b      	bpl.n	90009df8 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
90009de0:	0441      	lsls	r1, r0, #17
90009de2:	d409      	bmi.n	90009df8 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
90009de4:	2a20      	cmp	r2, #32
90009de6:	d007      	beq.n	90009df8 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90009de8:	685a      	ldr	r2, [r3, #4]
90009dea:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90009dee:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90009df0:	f7ff face 	bl	90009390 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009df4:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90009df6:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009df8:	699a      	ldr	r2, [r3, #24]
90009dfa:	0690      	lsls	r0, r2, #26
90009dfc:	f53f af75 	bmi.w	90009cea <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009e00:	f7ff fac6 	bl	90009390 <HAL_GetTick>
90009e04:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009e06:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009e08:	2819      	cmp	r0, #25
90009e0a:	d9f5      	bls.n	90009df8 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90009e0c:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
90009e10:	f04f 0a01 	mov.w	sl, #1
90009e14:	e769      	b.n	90009cea <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
90009e16:	2000      	movs	r0, #0
}
90009e18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
90009e1c:	f1ba 0f00 	cmp.w	sl, #0
90009e20:	f43f af6f 	beq.w	90009d02 <I2C_WaitOnTXISFlagUntilTimeout+0x42>
90009e24:	e76f      	b.n	90009d06 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
90009e26:	bf00      	nop
90009e28:	fe00e800 	.word	0xfe00e800

90009e2c <I2C_WaitOnSTOPFlagUntilTimeout>:
{
90009e2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009e30:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009e32:	6802      	ldr	r2, [r0, #0]
{
90009e34:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009e36:	6991      	ldr	r1, [r2, #24]
90009e38:	068c      	lsls	r4, r1, #26
90009e3a:	d469      	bmi.n	90009f10 <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
90009e3c:	4606      	mov	r6, r0
90009e3e:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009e40:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90009e44:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90009e46:	f014 0410 	ands.w	r4, r4, #16
90009e4a:	d064      	beq.n	90009f16 <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
90009e4c:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009e4e:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
90009e50:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009e52:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
90009e56:	46aa      	mov	sl, r5
90009e58:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009e5a:	699a      	ldr	r2, [r3, #24]
90009e5c:	d15d      	bne.n	90009f1a <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90009e5e:	0690      	lsls	r0, r2, #26
90009e60:	f100 8083 	bmi.w	90009f6a <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
90009e64:	f1ba 0f00 	cmp.w	sl, #0
90009e68:	d104      	bne.n	90009e74 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
90009e6a:	699c      	ldr	r4, [r3, #24]
90009e6c:	06a1      	lsls	r1, r4, #26
90009e6e:	d5fc      	bpl.n	90009e6a <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009e70:	2220      	movs	r2, #32
90009e72:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90009e74:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
90009e78:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90009e7a:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90009e7c:	05d0      	lsls	r0, r2, #23
90009e7e:	d530      	bpl.n	90009ee2 <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009e80:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009e84:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90009e86:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009e8a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009e8c:	d504      	bpl.n	90009e98 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009e8e:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90009e92:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009e96:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90009e98:	0591      	lsls	r1, r2, #22
90009e9a:	d504      	bpl.n	90009ea6 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009e9c:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90009ea0:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009ea4:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90009ea6:	699a      	ldr	r2, [r3, #24]
90009ea8:	0795      	lsls	r5, r2, #30
90009eaa:	d501      	bpl.n	90009eb0 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
90009eac:	2200      	movs	r2, #0
90009eae:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90009eb0:	699a      	ldr	r2, [r3, #24]
90009eb2:	07d0      	lsls	r0, r2, #31
90009eb4:	d403      	bmi.n	90009ebe <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90009eb6:	699a      	ldr	r2, [r3, #24]
90009eb8:	f042 0201 	orr.w	r2, r2, #1
90009ebc:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90009ebe:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009ec0:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90009ec2:	4837      	ldr	r0, [pc, #220]	; (90009fa0 <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
90009ec4:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
90009ec6:	4002      	ands	r2, r0
      return HAL_ERROR;
90009ec8:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
90009eca:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009ecc:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
90009ece:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
90009ed2:	4323      	orrs	r3, r4
90009ed4:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90009ed6:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009eda:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
90009ede:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009ee2:	0550      	lsls	r0, r2, #21
90009ee4:	d4d3      	bmi.n	90009e8e <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90009ee6:	0592      	lsls	r2, r2, #22
90009ee8:	d4d8      	bmi.n	90009e9c <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
90009eea:	2900      	cmp	r1, #0
90009eec:	d1db      	bne.n	90009ea6 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009eee:	f7ff fa4f 	bl	90009390 <HAL_GetTick>
90009ef2:	eba0 0008 	sub.w	r0, r0, r8
90009ef6:	42b8      	cmp	r0, r7
90009ef8:	d801      	bhi.n	90009efe <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
90009efa:	2f00      	cmp	r7, #0
90009efc:	d132      	bne.n	90009f64 <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009efe:	6832      	ldr	r2, [r6, #0]
90009f00:	6991      	ldr	r1, [r2, #24]
90009f02:	4613      	mov	r3, r2
90009f04:	f011 0120 	ands.w	r1, r1, #32
90009f08:	d034      	beq.n	90009f74 <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009f0a:	6991      	ldr	r1, [r2, #24]
90009f0c:	0689      	lsls	r1, r1, #26
90009f0e:	d599      	bpl.n	90009e44 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
90009f10:	2000      	movs	r0, #0
}
90009f12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90009f16:	4621      	mov	r1, r4
90009f18:	e7af      	b.n	90009e7a <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009f1a:	0692      	lsls	r2, r2, #26
90009f1c:	d425      	bmi.n	90009f6a <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
90009f1e:	f1ba 0f00 	cmp.w	sl, #0
90009f22:	d1a7      	bne.n	90009e74 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009f24:	f7ff fa34 	bl	90009390 <HAL_GetTick>
90009f28:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009f2a:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009f2c:	4287      	cmp	r7, r0
90009f2e:	d301      	bcc.n	90009f34 <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
90009f30:	2f00      	cmp	r7, #0
90009f32:	d191      	bne.n	90009e58 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009f34:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90009f36:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009f3a:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90009f3c:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009f3e:	0409      	lsls	r1, r1, #16
90009f40:	d503      	bpl.n	90009f4a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
90009f42:	0441      	lsls	r1, r0, #17
90009f44:	d401      	bmi.n	90009f4a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
90009f46:	2a20      	cmp	r2, #32
90009f48:	d121      	bne.n	90009f8e <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009f4a:	699a      	ldr	r2, [r3, #24]
90009f4c:	0690      	lsls	r0, r2, #26
90009f4e:	d483      	bmi.n	90009e58 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009f50:	f7ff fa1e 	bl	90009390 <HAL_GetTick>
90009f54:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009f56:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009f58:	2819      	cmp	r0, #25
90009f5a:	d9f6      	bls.n	90009f4a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90009f5c:	2520      	movs	r5, #32
              status = HAL_ERROR;
90009f5e:	f04f 0a01 	mov.w	sl, #1
90009f62:	e779      	b.n	90009e58 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009f64:	6833      	ldr	r3, [r6, #0]
90009f66:	461a      	mov	r2, r3
90009f68:	e7cf      	b.n	90009f0a <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
90009f6a:	f1ba 0f00 	cmp.w	sl, #0
90009f6e:	f43f af7f 	beq.w	90009e70 <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
90009f72:	e77f      	b.n	90009e74 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009f74:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009f76:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
90009f78:	2001      	movs	r0, #1
90009f7a:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009f7e:	4313      	orrs	r3, r2
90009f80:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009f82:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009f86:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
90009f8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90009f8e:	685a      	ldr	r2, [r3, #4]
90009f90:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90009f94:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90009f96:	f7ff f9fb 	bl	90009390 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009f9a:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
90009f9c:	4604      	mov	r4, r0
90009f9e:	e7d4      	b.n	90009f4a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
90009fa0:	fe00e800 	.word	0xfe00e800

90009fa4 <HAL_I2C_MspInit>:
}
90009fa4:	4770      	bx	lr
90009fa6:	bf00      	nop

90009fa8 <HAL_I2C_Init>:
  if (hi2c == NULL)
90009fa8:	2800      	cmp	r0, #0
90009faa:	d04e      	beq.n	9000a04a <HAL_I2C_Init+0xa2>
{
90009fac:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90009fae:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
90009fb2:	4604      	mov	r4, r0
90009fb4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90009fb8:	2b00      	cmp	r3, #0
90009fba:	d041      	beq.n	9000a040 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
90009fbc:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009fbe:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009fc0:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009fc2:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
90009fc6:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009fc8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009fcc:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90009fce:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009fd2:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90009fd4:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009fd6:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90009fd8:	689a      	ldr	r2, [r3, #8]
90009fda:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
90009fde:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90009fe0:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009fe2:	d029      	beq.n	9000a038 <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90009fe4:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009fe8:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90009fea:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009fec:	d102      	bne.n	90009ff4 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
90009fee:	f44f 6200 	mov.w	r2, #2048	; 0x800
90009ff2:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009ff4:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90009ff6:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009ffa:	4915      	ldr	r1, [pc, #84]	; (9000a050 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90009ffc:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009ffe:	4301      	orrs	r1, r0
9000a000:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9000a002:	68d9      	ldr	r1, [r3, #12]
9000a004:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
9000a008:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
9000a00a:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000a00e:	4302      	orrs	r2, r0
9000a010:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000a014:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000a018:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000a01a:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000a01c:	4301      	orrs	r1, r0
  return HAL_OK;
9000a01e:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000a020:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
9000a022:	6819      	ldr	r1, [r3, #0]
9000a024:	f041 0101 	orr.w	r1, r1, #1
9000a028:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000a02a:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
9000a02c:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000a030:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000a032:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000a036:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000a038:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000a03c:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000a03e:	e7d9      	b.n	90009ff4 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
9000a040:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
9000a044:	f7ff ffae 	bl	90009fa4 <HAL_I2C_MspInit>
9000a048:	e7b8      	b.n	90009fbc <HAL_I2C_Init+0x14>
    return HAL_ERROR;
9000a04a:	2001      	movs	r0, #1
}
9000a04c:	4770      	bx	lr
9000a04e:	bf00      	nop
9000a050:	02008000 	.word	0x02008000

9000a054 <HAL_I2C_MspDeInit>:
9000a054:	4770      	bx	lr
9000a056:	bf00      	nop

9000a058 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9000a058:	b1b0      	cbz	r0, 9000a088 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000a05a:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000a05c:	2324      	movs	r3, #36	; 0x24
{
9000a05e:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
9000a060:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
9000a064:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000a066:	6813      	ldr	r3, [r2, #0]
9000a068:	f023 0301 	bic.w	r3, r3, #1
9000a06c:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000a06e:	f7ff fff1 	bl	9000a054 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000a072:	2300      	movs	r3, #0
9000a074:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
9000a076:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
9000a078:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
9000a07c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000a080:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000a082:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
9000a086:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
9000a088:	2001      	movs	r0, #1
}
9000a08a:	4770      	bx	lr

9000a08c <HAL_I2C_Mem_Write>:
{
9000a08c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000a090:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000a092:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000a096:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000a09a:	2b20      	cmp	r3, #32
{
9000a09c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000a09e:	d132      	bne.n	9000a106 <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
9000a0a0:	9b08      	ldr	r3, [sp, #32]
9000a0a2:	4604      	mov	r4, r0
9000a0a4:	b34b      	cbz	r3, 9000a0fa <HAL_I2C_Mem_Write+0x6e>
9000a0a6:	f1ba 0f00 	cmp.w	sl, #0
9000a0aa:	d026      	beq.n	9000a0fa <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
9000a0ac:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000a0b0:	2b01      	cmp	r3, #1
9000a0b2:	d028      	beq.n	9000a106 <HAL_I2C_Mem_Write+0x7a>
9000a0b4:	2301      	movs	r3, #1
9000a0b6:	460e      	mov	r6, r1
9000a0b8:	4691      	mov	r9, r2
9000a0ba:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000a0be:	f7ff f967 	bl	90009390 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a0c2:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
9000a0c4:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a0c6:	699a      	ldr	r2, [r3, #24]
9000a0c8:	0411      	lsls	r1, r2, #16
9000a0ca:	d51f      	bpl.n	9000a10c <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a0cc:	f7ff f960 	bl	90009390 <HAL_GetTick>
9000a0d0:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a0d2:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a0d4:	2819      	cmp	r0, #25
9000a0d6:	d9f6      	bls.n	9000a0c6 <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a0d8:	699a      	ldr	r2, [r3, #24]
9000a0da:	0412      	lsls	r2, r2, #16
9000a0dc:	d5f3      	bpl.n	9000a0c6 <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a0de:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a0e0:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000a0e2:	2200      	movs	r2, #0
      return HAL_ERROR;
9000a0e4:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a0e6:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000a0e8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a0ec:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a0ee:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000a0f2:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000a0f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000a0fa:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000a0fe:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000a100:	6463      	str	r3, [r4, #68]	; 0x44
}
9000a102:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
9000a106:	2002      	movs	r0, #2
}
9000a108:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
9000a10c:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000a10e:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000a110:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a114:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000a116:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000a11a:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000a11c:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000a11e:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000a120:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000a124:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000a126:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000a128:	496d      	ldr	r1, [pc, #436]	; (9000a2e0 <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
9000a12a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000a12e:	685a      	ldr	r2, [r3, #4]
9000a130:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000a132:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000a136:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000a13a:	496a      	ldr	r1, [pc, #424]	; (9000a2e4 <HAL_I2C_Mem_Write+0x258>)
9000a13c:	4332      	orrs	r2, r6
9000a13e:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a140:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000a142:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a144:	4639      	mov	r1, r7
9000a146:	f7ff fdbb 	bl	90009cc0 <I2C_WaitOnTXISFlagUntilTimeout>
9000a14a:	2800      	cmp	r0, #0
9000a14c:	d175      	bne.n	9000a23a <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000a14e:	f1b8 0f01 	cmp.w	r8, #1
9000a152:	d00a      	beq.n	9000a16a <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000a154:	ea4f 2219 	mov.w	r2, r9, lsr #8
9000a158:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a15a:	4639      	mov	r1, r7
9000a15c:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000a15e:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a160:	462a      	mov	r2, r5
9000a162:	f7ff fdad 	bl	90009cc0 <I2C_WaitOnTXISFlagUntilTimeout>
9000a166:	2800      	cmp	r0, #0
9000a168:	d167      	bne.n	9000a23a <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000a16a:	fa5f f389 	uxtb.w	r3, r9
9000a16e:	6822      	ldr	r2, [r4, #0]
9000a170:	6293      	str	r3, [r2, #40]	; 0x28
9000a172:	1c78      	adds	r0, r7, #1
9000a174:	d14a      	bne.n	9000a20c <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a176:	6993      	ldr	r3, [r2, #24]
9000a178:	0619      	lsls	r1, r3, #24
9000a17a:	d5fc      	bpl.n	9000a176 <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000a17c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000a17e:	b29b      	uxth	r3, r3
9000a180:	2bff      	cmp	r3, #255	; 0xff
9000a182:	f240 808a 	bls.w	9000a29a <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
9000a186:	6853      	ldr	r3, [r2, #4]
9000a188:	4957      	ldr	r1, [pc, #348]	; (9000a2e8 <HAL_I2C_Mem_Write+0x25c>)
9000a18a:	400b      	ands	r3, r1
9000a18c:	4957      	ldr	r1, [pc, #348]	; (9000a2ec <HAL_I2C_Mem_Write+0x260>)
9000a18e:	4333      	orrs	r3, r6
9000a190:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000a192:	23ff      	movs	r3, #255	; 0xff
9000a194:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a196:	6051      	str	r1, [r2, #4]
9000a198:	f8df 814c 	ldr.w	r8, [pc, #332]	; 9000a2e8 <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000a19c:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000a1a0:	f8df 9148 	ldr.w	r9, [pc, #328]	; 9000a2ec <HAL_I2C_Mem_Write+0x260>
9000a1a4:	e004      	b.n	9000a1b0 <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
9000a1a6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000a1a8:	b29b      	uxth	r3, r3
9000a1aa:	2b00      	cmp	r3, #0
9000a1ac:	f000 8083 	beq.w	9000a2b6 <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000a1b0:	462a      	mov	r2, r5
9000a1b2:	4639      	mov	r1, r7
9000a1b4:	4620      	mov	r0, r4
9000a1b6:	f7ff fd83 	bl	90009cc0 <I2C_WaitOnTXISFlagUntilTimeout>
9000a1ba:	2800      	cmp	r0, #0
9000a1bc:	d16b      	bne.n	9000a296 <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000a1be:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a1c0:	6821      	ldr	r1, [r4, #0]
9000a1c2:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
9000a1c6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000a1c8:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
9000a1ca:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
9000a1cc:	3b01      	subs	r3, #1
      hi2c->XferCount--;
9000a1ce:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
9000a1d0:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9000a1d2:	3a01      	subs	r2, #1
      hi2c->XferSize--;
9000a1d4:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
9000a1d6:	b292      	uxth	r2, r2
9000a1d8:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000a1da:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
9000a1dc:	b292      	uxth	r2, r2
9000a1de:	2a00      	cmp	r2, #0
9000a1e0:	d0e1      	beq.n	9000a1a6 <HAL_I2C_Mem_Write+0x11a>
9000a1e2:	2b00      	cmp	r3, #0
9000a1e4:	d1df      	bne.n	9000a1a6 <HAL_I2C_Mem_Write+0x11a>
9000a1e6:	1c78      	adds	r0, r7, #1
9000a1e8:	d12c      	bne.n	9000a244 <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a1ea:	698b      	ldr	r3, [r1, #24]
9000a1ec:	061a      	lsls	r2, r3, #24
9000a1ee:	d5fc      	bpl.n	9000a1ea <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000a1f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000a1f2:	b29b      	uxth	r3, r3
9000a1f4:	2bff      	cmp	r3, #255	; 0xff
9000a1f6:	d940      	bls.n	9000a27a <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
9000a1f8:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000a1fa:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a1fe:	ea03 0308 	and.w	r3, r3, r8
9000a202:	4333      	orrs	r3, r6
9000a204:	ea43 0309 	orr.w	r3, r3, r9
9000a208:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000a20a:	e7cc      	b.n	9000a1a6 <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a20c:	6993      	ldr	r3, [r2, #24]
9000a20e:	061b      	lsls	r3, r3, #24
9000a210:	d4b4      	bmi.n	9000a17c <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a212:	f7ff f8bd 	bl	90009390 <HAL_GetTick>
9000a216:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a218:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a21a:	4287      	cmp	r7, r0
9000a21c:	d301      	bcc.n	9000a222 <HAL_I2C_Mem_Write+0x196>
9000a21e:	2f00      	cmp	r7, #0
9000a220:	d1a7      	bne.n	9000a172 <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a222:	6993      	ldr	r3, [r2, #24]
9000a224:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000a228:	d1a3      	bne.n	9000a172 <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a22a:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a22c:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a22e:	430a      	orrs	r2, r1
9000a230:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a232:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000a236:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000a23a:	2300      	movs	r3, #0
      return HAL_ERROR;
9000a23c:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000a23e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
9000a242:	e75e      	b.n	9000a102 <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a244:	698b      	ldr	r3, [r1, #24]
9000a246:	061b      	lsls	r3, r3, #24
9000a248:	d4d2      	bmi.n	9000a1f0 <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a24a:	f7ff f8a1 	bl	90009390 <HAL_GetTick>
9000a24e:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a250:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a252:	4287      	cmp	r7, r0
9000a254:	d301      	bcc.n	9000a25a <HAL_I2C_Mem_Write+0x1ce>
9000a256:	2f00      	cmp	r7, #0
9000a258:	d1c5      	bne.n	9000a1e6 <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a25a:	698b      	ldr	r3, [r1, #24]
9000a25c:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000a260:	d1c1      	bne.n	9000a1e6 <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a262:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a264:	2120      	movs	r1, #32
          return HAL_ERROR;
9000a266:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000a268:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a26c:	430a      	orrs	r2, r1
9000a26e:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a270:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000a274:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
9000a278:	e743      	b.n	9000a102 <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
9000a27a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000a27c:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000a27e:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
9000a280:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a282:	684b      	ldr	r3, [r1, #4]
9000a284:	ea03 0308 	and.w	r3, r3, r8
9000a288:	4333      	orrs	r3, r6
9000a28a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000a28e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000a292:	604b      	str	r3, [r1, #4]
}
9000a294:	e787      	b.n	9000a1a6 <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
9000a296:	2001      	movs	r0, #1
9000a298:	e733      	b.n	9000a102 <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
9000a29a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000a29c:	4812      	ldr	r0, [pc, #72]	; (9000a2e8 <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
9000a29e:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000a2a0:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
9000a2a2:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a2a4:	6853      	ldr	r3, [r2, #4]
9000a2a6:	4003      	ands	r3, r0
9000a2a8:	4333      	orrs	r3, r6
9000a2aa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000a2ae:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000a2b2:	6053      	str	r3, [r2, #4]
}
9000a2b4:	e770      	b.n	9000a198 <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000a2b6:	462a      	mov	r2, r5
9000a2b8:	4639      	mov	r1, r7
9000a2ba:	4620      	mov	r0, r4
9000a2bc:	f7ff fdb6 	bl	90009e2c <I2C_WaitOnSTOPFlagUntilTimeout>
9000a2c0:	2800      	cmp	r0, #0
9000a2c2:	d1e8      	bne.n	9000a296 <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000a2c4:	6823      	ldr	r3, [r4, #0]
9000a2c6:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000a2c8:	4d09      	ldr	r5, [pc, #36]	; (9000a2f0 <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000a2ca:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000a2cc:	685a      	ldr	r2, [r3, #4]
9000a2ce:	402a      	ands	r2, r5
9000a2d0:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000a2d2:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000a2d6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000a2da:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
9000a2de:	e710      	b.n	9000a102 <HAL_I2C_Mem_Write+0x76>
9000a2e0:	fc009800 	.word	0xfc009800
9000a2e4:	01002000 	.word	0x01002000
9000a2e8:	fc009c00 	.word	0xfc009c00
9000a2ec:	01ff0000 	.word	0x01ff0000
9000a2f0:	fe00e800 	.word	0xfe00e800

9000a2f4 <HAL_I2C_Mem_Read>:
{
9000a2f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000a2f8:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000a2fa:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000a2fe:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
9000a302:	2b20      	cmp	r3, #32
{
9000a304:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
9000a306:	d137      	bne.n	9000a378 <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
9000a308:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000a30a:	4683      	mov	fp, r0
9000a30c:	b36b      	cbz	r3, 9000a36a <HAL_I2C_Mem_Read+0x76>
9000a30e:	f1b9 0f00 	cmp.w	r9, #0
9000a312:	d02a      	beq.n	9000a36a <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
9000a314:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000a318:	2b01      	cmp	r3, #1
9000a31a:	d02d      	beq.n	9000a378 <HAL_I2C_Mem_Read+0x84>
9000a31c:	2301      	movs	r3, #1
9000a31e:	460f      	mov	r7, r1
9000a320:	4690      	mov	r8, r2
9000a322:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000a326:	f7ff f833 	bl	90009390 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a32a:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
9000a32e:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a330:	699a      	ldr	r2, [r3, #24]
9000a332:	0410      	lsls	r0, r2, #16
9000a334:	d523      	bpl.n	9000a37e <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a336:	f7ff f82b 	bl	90009390 <HAL_GetTick>
9000a33a:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a33c:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a340:	2819      	cmp	r0, #25
9000a342:	d9f5      	bls.n	9000a330 <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a344:	699a      	ldr	r2, [r3, #24]
9000a346:	0411      	lsls	r1, r2, #16
9000a348:	d5f2      	bpl.n	9000a330 <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a34a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a34e:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000a350:	2200      	movs	r2, #0
      return HAL_ERROR;
9000a352:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a354:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000a356:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a35a:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a35e:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000a362:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
9000a366:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000a36a:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000a36e:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000a370:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
9000a374:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
9000a378:	2002      	movs	r0, #2
}
9000a37a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
9000a37e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000a380:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000a382:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a386:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000a388:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000a38c:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000a38e:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000a392:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000a394:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000a398:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000a39c:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
9000a3a0:	4983      	ldr	r1, [pc, #524]	; (9000a5b0 <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
9000a3a2:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000a3a6:	685a      	ldr	r2, [r3, #4]
9000a3a8:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000a3aa:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
9000a3ac:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a3b0:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000a3b2:	433a      	orrs	r2, r7
9000a3b4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000a3b8:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a3ba:	4632      	mov	r2, r6
9000a3bc:	f7ff fc80 	bl	90009cc0 <I2C_WaitOnTXISFlagUntilTimeout>
9000a3c0:	2800      	cmp	r0, #0
9000a3c2:	f040 8091 	bne.w	9000a4e8 <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000a3c6:	2c01      	cmp	r4, #1
9000a3c8:	d00c      	beq.n	9000a3e4 <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000a3ca:	ea4f 2218 	mov.w	r2, r8, lsr #8
9000a3ce:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a3d2:	4629      	mov	r1, r5
9000a3d4:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000a3d6:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a3d8:	4632      	mov	r2, r6
9000a3da:	f7ff fc71 	bl	90009cc0 <I2C_WaitOnTXISFlagUntilTimeout>
9000a3de:	2800      	cmp	r0, #0
9000a3e0:	f040 8082 	bne.w	9000a4e8 <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000a3e4:	fa5f f388 	uxtb.w	r3, r8
9000a3e8:	f8db 4000 	ldr.w	r4, [fp]
9000a3ec:	62a3      	str	r3, [r4, #40]	; 0x28
9000a3ee:	1c6a      	adds	r2, r5, #1
9000a3f0:	d160      	bne.n	9000a4b4 <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a3f2:	69a3      	ldr	r3, [r4, #24]
9000a3f4:	065b      	lsls	r3, r3, #25
9000a3f6:	d5fc      	bpl.n	9000a3f2 <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000a3f8:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000a3fc:	b29b      	uxth	r3, r3
9000a3fe:	2bff      	cmp	r3, #255	; 0xff
9000a400:	f240 80ae 	bls.w	9000a560 <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000a404:	6863      	ldr	r3, [r4, #4]
9000a406:	4a6a      	ldr	r2, [pc, #424]	; (9000a5b0 <HAL_I2C_Mem_Read+0x2bc>)
9000a408:	4013      	ands	r3, r2
9000a40a:	4a6a      	ldr	r2, [pc, #424]	; (9000a5b4 <HAL_I2C_Mem_Read+0x2c0>)
9000a40c:	433b      	orrs	r3, r7
9000a40e:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000a410:	23ff      	movs	r3, #255	; 0xff
9000a412:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a416:	6062      	str	r2, [r4, #4]
9000a418:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 9000a5c0 <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000a41c:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000a420:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 9000a5c4 <HAL_I2C_Mem_Read+0x2d0>
9000a424:	1c69      	adds	r1, r5, #1
9000a426:	d127      	bne.n	9000a478 <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a428:	69a3      	ldr	r3, [r4, #24]
9000a42a:	075a      	lsls	r2, r3, #29
9000a42c:	d5fc      	bpl.n	9000a428 <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000a42e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a430:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
9000a434:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
9000a436:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
9000a43a:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
9000a43e:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
9000a440:	3301      	adds	r3, #1
      hi2c->XferCount--;
9000a442:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
9000a444:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
9000a448:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
9000a44c:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000a450:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000a452:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000a456:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000a458:	b292      	uxth	r2, r2
      hi2c->XferSize--;
9000a45a:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000a45e:	b10a      	cbz	r2, 9000a464 <HAL_I2C_Mem_Read+0x170>
9000a460:	2b00      	cmp	r3, #0
9000a462:	d046      	beq.n	9000a4f2 <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
9000a464:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000a468:	b29b      	uxth	r3, r3
9000a46a:	2b00      	cmp	r3, #0
9000a46c:	f000 8088 	beq.w	9000a580 <HAL_I2C_Mem_Read+0x28c>
9000a470:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a472:	f8db 4000 	ldr.w	r4, [fp]
9000a476:	d0d7      	beq.n	9000a428 <HAL_I2C_Mem_Read+0x134>
9000a478:	69a3      	ldr	r3, [r4, #24]
9000a47a:	075b      	lsls	r3, r3, #29
9000a47c:	d4d7      	bmi.n	9000a42e <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a47e:	f7fe ff87 	bl	90009390 <HAL_GetTick>
9000a482:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a484:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a488:	4285      	cmp	r5, r0
9000a48a:	d301      	bcc.n	9000a490 <HAL_I2C_Mem_Read+0x19c>
9000a48c:	2d00      	cmp	r5, #0
9000a48e:	d1c9      	bne.n	9000a424 <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a490:	69a3      	ldr	r3, [r4, #24]
9000a492:	f013 0304 	ands.w	r3, r3, #4
9000a496:	d1c5      	bne.n	9000a424 <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a498:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a49c:	2120      	movs	r1, #32
          return HAL_ERROR;
9000a49e:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000a4a0:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a4a4:	430a      	orrs	r2, r1
9000a4a6:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a4aa:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000a4ae:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
9000a4b2:	e75f      	b.n	9000a374 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a4b4:	69a3      	ldr	r3, [r4, #24]
9000a4b6:	0658      	lsls	r0, r3, #25
9000a4b8:	d49e      	bmi.n	9000a3f8 <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a4ba:	f7fe ff69 	bl	90009390 <HAL_GetTick>
9000a4be:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a4c0:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a4c4:	4285      	cmp	r5, r0
9000a4c6:	d301      	bcc.n	9000a4cc <HAL_I2C_Mem_Read+0x1d8>
9000a4c8:	2d00      	cmp	r5, #0
9000a4ca:	d190      	bne.n	9000a3ee <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a4cc:	69a3      	ldr	r3, [r4, #24]
9000a4ce:	f013 0340 	ands.w	r3, r3, #64	; 0x40
9000a4d2:	d18c      	bne.n	9000a3ee <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a4d4:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a4d8:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a4da:	430a      	orrs	r2, r1
9000a4dc:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a4e0:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000a4e4:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000a4e8:	2300      	movs	r3, #0
      return HAL_ERROR;
9000a4ea:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000a4ec:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
9000a4f0:	e740      	b.n	9000a374 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a4f2:	f8db 2000 	ldr.w	r2, [fp]
9000a4f6:	1c68      	adds	r0, r5, #1
9000a4f8:	d111      	bne.n	9000a51e <HAL_I2C_Mem_Read+0x22a>
9000a4fa:	6993      	ldr	r3, [r2, #24]
9000a4fc:	0619      	lsls	r1, r3, #24
9000a4fe:	d5fc      	bpl.n	9000a4fa <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000a500:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000a504:	b29b      	uxth	r3, r3
9000a506:	2bff      	cmp	r3, #255	; 0xff
9000a508:	d91a      	bls.n	9000a540 <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000a50a:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000a50c:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a510:	ea03 0308 	and.w	r3, r3, r8
9000a514:	433b      	orrs	r3, r7
9000a516:	ea43 0309 	orr.w	r3, r3, r9
9000a51a:	6053      	str	r3, [r2, #4]
}
9000a51c:	e7a2      	b.n	9000a464 <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a51e:	6993      	ldr	r3, [r2, #24]
9000a520:	061b      	lsls	r3, r3, #24
9000a522:	d4ed      	bmi.n	9000a500 <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a524:	f7fe ff34 	bl	90009390 <HAL_GetTick>
9000a528:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a52a:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a52e:	4285      	cmp	r5, r0
9000a530:	d301      	bcc.n	9000a536 <HAL_I2C_Mem_Read+0x242>
9000a532:	2d00      	cmp	r5, #0
9000a534:	d1df      	bne.n	9000a4f6 <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a536:	6993      	ldr	r3, [r2, #24]
9000a538:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000a53c:	d1db      	bne.n	9000a4f6 <HAL_I2C_Mem_Read+0x202>
9000a53e:	e7ab      	b.n	9000a498 <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
9000a540:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000a544:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000a546:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
9000a548:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a54c:	6853      	ldr	r3, [r2, #4]
9000a54e:	ea03 0308 	and.w	r3, r3, r8
9000a552:	433b      	orrs	r3, r7
9000a554:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000a558:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000a55c:	6053      	str	r3, [r2, #4]
}
9000a55e:	e781      	b.n	9000a464 <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
9000a560:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000a564:	4912      	ldr	r1, [pc, #72]	; (9000a5b0 <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
9000a566:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000a568:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
9000a56a:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a56e:	6863      	ldr	r3, [r4, #4]
9000a570:	400b      	ands	r3, r1
9000a572:	433b      	orrs	r3, r7
9000a574:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000a578:	4a0f      	ldr	r2, [pc, #60]	; (9000a5b8 <HAL_I2C_Mem_Read+0x2c4>)
9000a57a:	431a      	orrs	r2, r3
9000a57c:	6062      	str	r2, [r4, #4]
}
9000a57e:	e74b      	b.n	9000a418 <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000a580:	4632      	mov	r2, r6
9000a582:	4629      	mov	r1, r5
9000a584:	4658      	mov	r0, fp
9000a586:	f7ff fc51 	bl	90009e2c <I2C_WaitOnSTOPFlagUntilTimeout>
9000a58a:	b970      	cbnz	r0, 9000a5aa <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000a58c:	f8db 3000 	ldr.w	r3, [fp]
9000a590:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000a592:	4c0a      	ldr	r4, [pc, #40]	; (9000a5bc <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000a594:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000a596:	685a      	ldr	r2, [r3, #4]
9000a598:	4022      	ands	r2, r4
9000a59a:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000a59c:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000a5a0:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000a5a4:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
9000a5a8:	e6e4      	b.n	9000a374 <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
9000a5aa:	2001      	movs	r0, #1
9000a5ac:	e6e2      	b.n	9000a374 <HAL_I2C_Mem_Read+0x80>
9000a5ae:	bf00      	nop
9000a5b0:	fc009800 	.word	0xfc009800
9000a5b4:	01ff2400 	.word	0x01ff2400
9000a5b8:	02002400 	.word	0x02002400
9000a5bc:	fe00e800 	.word	0xfe00e800
9000a5c0:	fc009c00 	.word	0xfc009c00
9000a5c4:	01ff0000 	.word	0x01ff0000

9000a5c8 <HAL_I2C_GetState>:
  return hi2c->State;
9000a5c8:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
9000a5cc:	4770      	bx	lr
9000a5ce:	bf00      	nop

9000a5d0 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
9000a5d0:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
9000a5d2:	4770      	bx	lr

9000a5d4 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000a5d4:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000a5d8:	2a20      	cmp	r2, #32
9000a5da:	d123      	bne.n	9000a624 <HAL_I2CEx_ConfigAnalogFilter+0x50>
9000a5dc:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000a5e0:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000a5e4:	4603      	mov	r3, r0
9000a5e6:	2a01      	cmp	r2, #1
9000a5e8:	d01c      	beq.n	9000a624 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000a5ea:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000a5ec:	2024      	movs	r0, #36	; 0x24
{
9000a5ee:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
9000a5f0:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000a5f4:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
9000a5f8:	6810      	ldr	r0, [r2, #0]
9000a5fa:	f020 0001 	bic.w	r0, r0, #1
9000a5fe:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
9000a600:	6810      	ldr	r0, [r2, #0]
9000a602:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
9000a606:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
9000a608:	6810      	ldr	r0, [r2, #0]
9000a60a:	4301      	orrs	r1, r0

    return HAL_OK;
9000a60c:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
9000a60e:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000a610:	6811      	ldr	r1, [r2, #0]
9000a612:	f041 0101 	orr.w	r1, r1, #1
9000a616:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000a618:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000a61c:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000a620:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000a624:	2002      	movs	r0, #2
}
9000a626:	4770      	bx	lr

9000a628 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000a628:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000a62c:	2a20      	cmp	r2, #32
9000a62e:	d122      	bne.n	9000a676 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
9000a630:	4603      	mov	r3, r0
{
9000a632:	b500      	push	{lr}
9000a634:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000a638:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000a63c:	2a01      	cmp	r2, #1
9000a63e:	d01c      	beq.n	9000a67a <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000a640:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000a642:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000a644:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
9000a648:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
9000a64c:	6810      	ldr	r0, [r2, #0]
9000a64e:	f020 0001 	bic.w	r0, r0, #1
9000a652:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
9000a654:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
9000a656:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
9000a65a:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
9000a65e:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
9000a660:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000a662:	6811      	ldr	r1, [r2, #0]
9000a664:	f041 0101 	orr.w	r1, r1, #1
9000a668:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000a66a:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000a66e:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000a672:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000a676:	2002      	movs	r0, #2
}
9000a678:	4770      	bx	lr
    return HAL_BUSY;
9000a67a:	2002      	movs	r0, #2
}
9000a67c:	f85d fb04 	ldr.w	pc, [sp], #4

9000a680 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
9000a680:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000a684:	460d      	mov	r5, r1
9000a686:	4614      	mov	r4, r2
9000a688:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
9000a68a:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
9000a68c:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
9000a68e:	2701      	movs	r7, #1
  p = 0;
9000a690:	f04f 0800 	mov.w	r8, #0
9000a694:	e006      	b.n	9000a6a4 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
9000a696:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
9000a69a:	eb06 0308 	add.w	r3, r6, r8
9000a69e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000a6a2:	d837      	bhi.n	9000a714 <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
9000a6a4:	eb05 0008 	add.w	r0, r5, r8
9000a6a8:	4632      	mov	r2, r6
9000a6aa:	4639      	mov	r1, r7
    while (i != 0UL)
9000a6ac:	b116      	cbz	r6, 9000a6b4 <JPEG_Bits_To_SizeCodes+0x34>
      p++;
9000a6ae:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
9000a6b0:	f01d ff76 	bl	900285a0 <memset>
  for (l = 0; l < 16UL; l++)
9000a6b4:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
9000a6b6:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
9000a6ba:	d1ec      	bne.n	9000a696 <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
9000a6bc:	2300      	movs	r3, #0
9000a6be:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
9000a6c2:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
9000a6c6:	7828      	ldrb	r0, [r5, #0]
9000a6c8:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
9000a6ca:	b300      	cbz	r0, 9000a70e <JPEG_Bits_To_SizeCodes+0x8e>
9000a6cc:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000a6d0:	2701      	movs	r7, #1
  p = 0;
9000a6d2:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
9000a6d4:	4288      	cmp	r0, r1
9000a6d6:	d10f      	bne.n	9000a6f8 <JPEG_Bits_To_SizeCodes+0x78>
9000a6d8:	eb02 0008 	add.w	r0, r2, r8
9000a6dc:	1c56      	adds	r6, r2, #1
9000a6de:	eb05 0c02 	add.w	ip, r5, r2
9000a6e2:	eb04 0080 	add.w	r0, r4, r0, lsl #2
9000a6e6:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
9000a6e8:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
9000a6ec:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
9000a6ee:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
9000a6f2:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
9000a6f4:	458e      	cmp	lr, r1
9000a6f6:	d0f7      	beq.n	9000a6e8 <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
9000a6f8:	291f      	cmp	r1, #31
9000a6fa:	d80b      	bhi.n	9000a714 <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000a6fc:	fa07 f001 	lsl.w	r0, r7, r1
9000a700:	4298      	cmp	r0, r3
9000a702:	d907      	bls.n	9000a714 <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
9000a704:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000a706:	005b      	lsls	r3, r3, #1
    si++;
9000a708:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
9000a70a:	2800      	cmp	r0, #0
9000a70c:	d1e2      	bne.n	9000a6d4 <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
9000a70e:	2000      	movs	r0, #0
}
9000a710:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
9000a714:	2001      	movs	r0, #1
}
9000a716:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000a71a:	bf00      	nop

9000a71c <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
9000a71c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000a71e:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
9000a722:	460d      	mov	r5, r1
9000a724:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000a726:	ab01      	add	r3, sp, #4
9000a728:	aa43      	add	r2, sp, #268	; 0x10c
9000a72a:	a902      	add	r1, sp, #8
9000a72c:	f7ff ffa8 	bl	9000a680 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000a730:	b9d0      	cbnz	r0, 9000a768 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000a732:	9f01      	ldr	r7, [sp, #4]
9000a734:	b1c7      	cbz	r7, 9000a768 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000a736:	370f      	adds	r7, #15
9000a738:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
9000a73c:	a902      	add	r1, sp, #8
9000a73e:	f104 0c0f 	add.w	ip, r4, #15
9000a742:	4427      	add	r7, r4
9000a744:	e009      	b.n	9000a75a <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a746:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
9000a74a:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a74c:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a750:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a754:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a756:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
9000a758:	d006      	beq.n	9000a768 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000a75a:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000a75e:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a760:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000a764:	d9ef      	bls.n	9000a746 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000a766:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000a768:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
9000a76c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000a76e:	bf00      	nop

9000a770 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
9000a770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000a774:	6804      	ldr	r4, [r0, #0]
{
9000a776:	b093      	sub	sp, #76	; 0x4c
9000a778:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000a77a:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
9000a77e:	429a      	cmp	r2, r3
9000a780:	f000 809d 	beq.w	9000a8be <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
9000a784:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
9000a788:	429a      	cmp	r2, r3
9000a78a:	d003      	beq.n	9000a794 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000a78c:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000a78e:	b013      	add	sp, #76	; 0x4c
9000a790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000a794:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
9000a798:	a903      	add	r1, sp, #12
9000a79a:	f7ff ffbf 	bl	9000a71c <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
9000a79e:	2800      	cmp	r0, #0
9000a7a0:	d1f5      	bne.n	9000a78e <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
9000a7a2:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7a6:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7aa:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
9000a7ae:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7b0:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
9000a7b4:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7b6:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
9000a7ba:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7be:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
9000a7c2:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7c6:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
9000a7ca:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7cc:	f89d 9015 	ldrb.w	r9, [sp, #21]
9000a7d0:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7d4:	f89d c014 	ldrb.w	ip, [sp, #20]
9000a7d8:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7dc:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7e0:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7e4:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7e8:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7ea:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7ee:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
9000a7f2:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
9000a7f6:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7fa:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a7fe:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a802:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000a806:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a80a:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
9000a80c:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a810:	f89d 2010 	ldrb.w	r2, [sp, #16]
9000a814:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a818:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
9000a81a:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a81e:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a820:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
9000a824:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a828:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a82c:	f89d 600f 	ldrb.w	r6, [sp, #15]
9000a830:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a834:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a838:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a83a:	9b01      	ldr	r3, [sp, #4]
9000a83c:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a840:	f89d 500d 	ldrb.w	r5, [sp, #13]
9000a844:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a848:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
9000a84c:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a850:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
9000a852:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a856:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a85a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
9000a85e:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a862:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a866:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a86a:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
9000a86e:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
9000a872:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000a876:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a87a:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
9000a87e:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a880:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
9000a884:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000a886:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000a88a:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a88e:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
9000a892:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a894:	f89d 2020 	ldrb.w	r2, [sp, #32]
9000a898:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
9000a89a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000a89e:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a8a2:	f89d 301c 	ldrb.w	r3, [sp, #28]
9000a8a6:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a8a8:	f89d 3018 	ldrb.w	r3, [sp, #24]
9000a8ac:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
9000a8b0:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000a8b4:	f844 3c18 	str.w	r3, [r4, #-24]
}
9000a8b8:	b013      	add	sp, #76	; 0x4c
9000a8ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000a8be:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
9000a8c2:	e769      	b.n	9000a798 <JPEG_Set_HuffDC_Mem+0x28>

9000a8c4 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
9000a8c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000a8c8:	6804      	ldr	r4, [r0, #0]
{
9000a8ca:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
9000a8ce:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000a8d0:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
9000a8d4:	429a      	cmp	r2, r3
9000a8d6:	d042      	beq.n	9000a95e <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
9000a8d8:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
9000a8dc:	429a      	cmp	r2, r3
9000a8de:	d004      	beq.n	9000a8ea <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000a8e0:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000a8e2:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000a8e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000a8ea:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000a8ee:	4628      	mov	r0, r5
9000a8f0:	466b      	mov	r3, sp
9000a8f2:	f20d 4234 	addw	r2, sp, #1076	; 0x434
9000a8f6:	a901      	add	r1, sp, #4
9000a8f8:	f7ff fec2 	bl	9000a680 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000a8fc:	2800      	cmp	r0, #0
9000a8fe:	d1f0      	bne.n	9000a8e2 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000a900:	9b00      	ldr	r3, [sp, #0]
9000a902:	b37b      	cbz	r3, 9000a964 <JPEG_Set_HuffAC_Mem+0xa0>
9000a904:	330f      	adds	r3, #15
9000a906:	f20d 4734 	addw	r7, sp, #1076	; 0x434
9000a90a:	f10d 0c04 	add.w	ip, sp, #4
9000a90e:	f105 020f 	add.w	r2, r5, #15
9000a912:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a916:	ae42      	add	r6, sp, #264	; 0x108
9000a918:	e011      	b.n	9000a93e <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
9000a91a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000a91e:	2ba1      	cmp	r3, #161	; 0xa1
9000a920:	d8de      	bhi.n	9000a8e0 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a922:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a926:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000a92a:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
9000a92e:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a930:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a934:	4631      	mov	r1, r6
9000a936:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a93a:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000a93c:	d013      	beq.n	9000a966 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000a93e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000a942:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
9000a944:	2900      	cmp	r1, #0
9000a946:	d0ec      	beq.n	9000a922 <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
9000a948:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
9000a94a:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000a94e:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000a950:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000a954:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000a958:	d1df      	bne.n	9000a91a <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
9000a95a:	23a1      	movs	r3, #161	; 0xa1
9000a95c:	e7e1      	b.n	9000a922 <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000a95e:	f204 6444 	addw	r4, r4, #1604	; 0x644
9000a962:	e7c4      	b.n	9000a8ee <JPEG_Set_HuffAC_Mem+0x2a>
9000a964:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
9000a966:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
9000a96a:	4a1a      	ldr	r2, [pc, #104]	; (9000a9d4 <JPEG_Set_HuffAC_Mem+0x110>)
9000a96c:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
9000a970:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
9000a974:	6023      	str	r3, [r4, #0]
9000a976:	6063      	str	r3, [r4, #4]
9000a978:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
9000a97c:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000a97e:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000a982:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000a984:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
9000a988:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
9000a98c:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000a98e:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000a992:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000a994:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000a998:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a99a:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a99e:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a9a2:	0212      	lsls	r2, r2, #8
9000a9a4:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a9a8:	021b      	lsls	r3, r3, #8
9000a9aa:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a9ae:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
9000a9b2:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a9b4:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a9b8:	433a      	orrs	r2, r7
    while (i > 1UL)
9000a9ba:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a9bc:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000a9c0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000a9c4:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000a9c8:	d1e7      	bne.n	9000a99a <JPEG_Set_HuffAC_Mem+0xd6>
}
9000a9ca:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000a9ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a9d2:	bf00      	nop
9000a9d4:	0fd10fd0 	.word	0x0fd10fd0

9000a9d8 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000a9d8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a9da:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
9000a9de:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a9e0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a9e2:	f003 0303 	and.w	r3, r3, #3
9000a9e6:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000a9e8:	6803      	ldr	r3, [r0, #0]
9000a9ea:	685a      	ldr	r2, [r3, #4]
9000a9ec:	bf0c      	ite	eq
9000a9ee:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000a9f2:	f022 0208 	bicne.w	r2, r2, #8
9000a9f6:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a9f8:	681a      	ldr	r2, [r3, #0]
9000a9fa:	f022 0201 	bic.w	r2, r2, #1
9000a9fe:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000aa00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000aa02:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000aa06:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000aa08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000aa0a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000aa0e:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000aa10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000aa12:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000aa16:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000aa18:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000aa1a:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000aa1e:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000aa20:	681a      	ldr	r2, [r3, #0]
9000aa22:	f042 0201 	orr.w	r2, r2, #1
9000aa26:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000aa28:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000aa2a:	f002 020c 	and.w	r2, r2, #12
9000aa2e:	2a08      	cmp	r2, #8
9000aa30:	d00a      	beq.n	9000aa48 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000aa32:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000aa34:	f002 020c 	and.w	r2, r2, #12
9000aa38:	2a0c      	cmp	r2, #12
9000aa3a:	d000      	beq.n	9000aa3e <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000aa3c:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000aa3e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000aa40:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000aa44:	631a      	str	r2, [r3, #48]	; 0x30
}
9000aa46:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000aa48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000aa4a:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
9000aa4e:	631a      	str	r2, [r3, #48]	; 0x30
9000aa50:	4770      	bx	lr
9000aa52:	bf00      	nop

9000aa54 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000aa54:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000aa56:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
9000aa58:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000aa5a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
9000aa5c:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000aa5e:	42aa      	cmp	r2, r5
9000aa60:	d32d      	bcc.n	9000aabe <JPEG_DMA_StartProcess+0x6a>
9000aa62:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000aa64:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000aa66:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000aa68:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000aa6a:	42b3      	cmp	r3, r6
9000aa6c:	d327      	bcc.n	9000aabe <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000aa6e:	4f1b      	ldr	r7, [pc, #108]	; (9000aadc <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000aa70:	f8df c074 	ldr.w	ip, [pc, #116]	; 9000aae8 <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000aa74:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000aa76:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000aa7a:	4919      	ldr	r1, [pc, #100]	; (9000aae0 <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000aa7c:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000aa7e:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000aa80:	4918      	ldr	r1, [pc, #96]	; (9000aae4 <JPEG_DMA_StartProcess+0x90>)
9000aa82:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000aa84:	b1a5      	cbz	r5, 9000aab0 <JPEG_DMA_StartProcess+0x5c>
9000aa86:	b19e      	cbz	r6, 9000aab0 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000aa88:	fbb2 f1f5 	udiv	r1, r2, r5
9000aa8c:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aa90:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000aa92:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aa94:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000aa96:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aa98:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000aa9a:	fbb3 f2f6 	udiv	r2, r3, r6
9000aa9e:	fb06 3212 	mls	r2, r6, r2, r3
9000aaa2:	1a9b      	subs	r3, r3, r2
9000aaa4:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aaa6:	9500      	str	r5, [sp, #0]
9000aaa8:	69e2      	ldr	r2, [r4, #28]
9000aaaa:	f001 fbb5 	bl	9000c218 <HAL_MDMA_Start_IT>
9000aaae:	b148      	cbz	r0, 9000aac4 <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000aab0:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
9000aab2:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000aab4:	f043 0304 	orr.w	r3, r3, #4
9000aab8:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000aaba:	b003      	add	sp, #12
9000aabc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000aabe:	2001      	movs	r0, #1
}
9000aac0:	b003      	add	sp, #12
9000aac2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000aac4:	6822      	ldr	r2, [r4, #0]
9000aac6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000aac8:	69a1      	ldr	r1, [r4, #24]
9000aaca:	3240      	adds	r2, #64	; 0x40
9000aacc:	9500      	str	r5, [sp, #0]
9000aace:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000aad0:	f001 fba2 	bl	9000c218 <HAL_MDMA_Start_IT>
9000aad4:	2800      	cmp	r0, #0
9000aad6:	d0f3      	beq.n	9000aac0 <JPEG_DMA_StartProcess+0x6c>
9000aad8:	e7ea      	b.n	9000aab0 <JPEG_DMA_StartProcess+0x5c>
9000aada:	bf00      	nop
9000aadc:	9000b00d 	.word	0x9000b00d
9000aae0:	9000b285 	.word	0x9000b285
9000aae4:	9000b305 	.word	0x9000b305
9000aae8:	9000b039 	.word	0x9000b039

9000aaec <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000aaec:	6803      	ldr	r3, [r0, #0]
9000aaee:	685a      	ldr	r2, [r3, #4]
9000aaf0:	f002 0203 	and.w	r2, r2, #3
9000aaf4:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000aaf6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000aafa:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000aafc:	f000 8094 	beq.w	9000ac28 <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000ab00:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000ab02:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000ab04:	f014 0403 	ands.w	r4, r4, #3
9000ab08:	d172      	bne.n	9000abf0 <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000ab0a:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000ab0c:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000ab0e:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000ab10:	68da      	ldr	r2, [r3, #12]
9000ab12:	0c12      	lsrs	r2, r2, #16
9000ab14:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000ab16:	4a5f      	ldr	r2, [pc, #380]	; (9000ac94 <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000ab18:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000ab1c:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
9000ab20:	2600      	movs	r6, #0
9000ab22:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000ab26:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000ab2a:	f241 3488 	movw	r4, #5000	; 0x1388
9000ab2e:	e033      	b.n	9000ab98 <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000ab30:	f892 8001 	ldrb.w	r8, [r2, #1]
9000ab34:	fb0e f707 	mul.w	r7, lr, r7
9000ab38:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000ab3a:	f811 8008 	ldrb.w	r8, [r1, r8]
9000ab3e:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000ab42:	2f64      	cmp	r7, #100	; 0x64
9000ab44:	d961      	bls.n	9000ac0a <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
9000ab46:	fbb4 f7f7 	udiv	r7, r4, r7
9000ab4a:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000ab4c:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000ab50:	2f01      	cmp	r7, #1
9000ab52:	d03d      	beq.n	9000abd0 <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000ab54:	f892 8002 	ldrb.w	r8, [r2, #2]
9000ab58:	fb0e f707 	mul.w	r7, lr, r7
9000ab5c:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000ab5e:	f811 8008 	ldrb.w	r8, [r1, r8]
9000ab62:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000ab66:	2f64      	cmp	r7, #100	; 0x64
9000ab68:	d94a      	bls.n	9000ac00 <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
9000ab6a:	fbb4 f7f7 	udiv	r7, r4, r7
9000ab6e:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000ab70:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000ab72:	2b01      	cmp	r3, #1
9000ab74:	d030      	beq.n	9000abd8 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000ab76:	78d7      	ldrb	r7, [r2, #3]
9000ab78:	fb0e f303 	mul.w	r3, lr, r3
9000ab7c:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000ab7e:	5dcf      	ldrb	r7, [r1, r7]
9000ab80:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000ab84:	2b64      	cmp	r3, #100	; 0x64
9000ab86:	d94a      	bls.n	9000ac1e <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
9000ab88:	fbb4 f3f3 	udiv	r3, r4, r3
9000ab8c:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000ab8e:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000ab90:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000ab94:	4295      	cmp	r5, r2
9000ab96:	d025      	beq.n	9000abe4 <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
9000ab98:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000ab9c:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000ab9e:	2f01      	cmp	r7, #1
9000aba0:	d02c      	beq.n	9000abfc <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000aba2:	f892 8000 	ldrb.w	r8, [r2]
9000aba6:	fb0e f707 	mul.w	r7, lr, r7
9000abaa:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000abac:	f811 8008 	ldrb.w	r8, [r1, r8]
9000abb0:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000abb4:	2f64      	cmp	r7, #100	; 0x64
9000abb6:	d92d      	bls.n	9000ac14 <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
9000abb8:	fbb4 f7f7 	udiv	r7, r4, r7
9000abbc:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000abbe:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000abc2:	2f01      	cmp	r7, #1
9000abc4:	d1b4      	bne.n	9000ab30 <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000abc6:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000abca:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000abcc:	2f01      	cmp	r7, #1
9000abce:	d1c1      	bne.n	9000ab54 <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000abd0:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000abd2:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000abd4:	2b01      	cmp	r3, #1
9000abd6:	d1ce      	bne.n	9000ab76 <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000abd8:	3204      	adds	r2, #4
        quality += 100UL;
9000abda:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
9000abdc:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000abe0:	4295      	cmp	r5, r2
9000abe2:	d1d9      	bne.n	9000ab98 <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
9000abe4:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000abe6:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000abe8:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000abec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000abf0:	f002 0203 	and.w	r2, r2, #3
9000abf4:	2a03      	cmp	r2, #3
9000abf6:	d14a      	bne.n	9000ac8e <HAL_JPEG_GetInfo.part.0+0x1a2>
9000abf8:	2430      	movs	r4, #48	; 0x30
9000abfa:	e016      	b.n	9000ac2a <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
9000abfc:	3664      	adds	r6, #100	; 0x64
9000abfe:	e7de      	b.n	9000abbe <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
9000ac00:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000ac04:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000ac08:	e7b2      	b.n	9000ab70 <HAL_JPEG_GetInfo.part.0+0x84>
9000ac0a:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000ac0e:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000ac12:	e79b      	b.n	9000ab4c <HAL_JPEG_GetInfo.part.0+0x60>
9000ac14:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000ac18:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000ac1c:	e7cf      	b.n	9000abbe <HAL_JPEG_GetInfo.part.0+0xd2>
9000ac1e:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
9000ac22:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000ac26:	e7b2      	b.n	9000ab8e <HAL_JPEG_GetInfo.part.0+0xa2>
9000ac28:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000ac2a:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000ac2c:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000ac30:	0c12      	lsrs	r2, r2, #16
9000ac32:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000ac36:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000ac38:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000ac3a:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000ac3c:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000ac3e:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000ac40:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000ac44:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000ac48:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000ac4c:	ea4f 1215 	mov.w	r2, r5, lsr #4
9000ac50:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000ac54:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000ac58:	d108      	bne.n	9000ac6c <HAL_JPEG_GetInfo.part.0+0x180>
9000ac5a:	2d01      	cmp	r5, #1
9000ac5c:	d106      	bne.n	9000ac6c <HAL_JPEG_GetInfo.part.0+0x180>
9000ac5e:	f016 0f0f 	tst.w	r6, #15
9000ac62:	bf0c      	ite	eq
9000ac64:	2401      	moveq	r4, #1
9000ac66:	2400      	movne	r4, #0
9000ac68:	0064      	lsls	r4, r4, #1
9000ac6a:	e754      	b.n	9000ab16 <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000ac6c:	ea42 020c 	orr.w	r2, r2, ip
9000ac70:	f012 040f 	ands.w	r4, r2, #15
9000ac74:	f43f af4f 	beq.w	9000ab16 <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000ac78:	ea4c 0206 	orr.w	r2, ip, r6
9000ac7c:	f3c2 0203 	ubfx	r2, r2, #0, #4
9000ac80:	2d03      	cmp	r5, #3
9000ac82:	bf08      	it	eq
9000ac84:	2a00      	cmpeq	r2, #0
9000ac86:	bf0c      	ite	eq
9000ac88:	2401      	moveq	r4, #1
9000ac8a:	2400      	movne	r4, #0
9000ac8c:	e743      	b.n	9000ab16 <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
9000ac8e:	2001      	movs	r0, #1
}
9000ac90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000ac94:	9002be08 	.word	0x9002be08

9000ac98 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000ac98:	2800      	cmp	r0, #0
9000ac9a:	f000 810b 	beq.w	9000aeb4 <HAL_JPEG_Init+0x21c>
{
9000ac9e:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000aca0:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000aca4:	4604      	mov	r4, r0
9000aca6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000acaa:	2b00      	cmp	r3, #0
9000acac:	f000 80fd 	beq.w	9000aeaa <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
9000acb0:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000acb2:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
9000acb4:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000acb6:	4880      	ldr	r0, [pc, #512]	; (9000aeb8 <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000acb8:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000acbc:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000acbe:	f041 0101 	orr.w	r1, r1, #1
9000acc2:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000acc4:	6811      	ldr	r1, [r2, #0]
9000acc6:	f021 0101 	bic.w	r1, r1, #1
9000acca:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000accc:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000acce:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
9000acd2:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000acd4:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000acd6:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
9000acda:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000acdc:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000acde:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
9000ace2:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000ace4:	6b91      	ldr	r1, [r2, #56]	; 0x38
9000ace6:	f041 0160 	orr.w	r1, r1, #96	; 0x60
9000acea:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000acec:	4973      	ldr	r1, [pc, #460]	; (9000aebc <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000acee:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000acf0:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
9000acf2:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000acf4:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000acf8:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
9000acfc:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
9000ad00:	4b6f      	ldr	r3, [pc, #444]	; (9000aec0 <HAL_JPEG_Init+0x228>)
9000ad02:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
9000ad06:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ad0a:	486e      	ldr	r0, [pc, #440]	; (9000aec4 <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000ad0c:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ad10:	4b6d      	ldr	r3, [pc, #436]	; (9000aec8 <HAL_JPEG_Init+0x230>)
9000ad12:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
9000ad16:	496d      	ldr	r1, [pc, #436]	; (9000aecc <HAL_JPEG_Init+0x234>)
9000ad18:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000ad1c:	4b6c      	ldr	r3, [pc, #432]	; (9000aed0 <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ad1e:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000ad22:	486c      	ldr	r0, [pc, #432]	; (9000aed4 <HAL_JPEG_Init+0x23c>)
9000ad24:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
9000ad28:	496b      	ldr	r1, [pc, #428]	; (9000aed8 <HAL_JPEG_Init+0x240>)
9000ad2a:	4b6c      	ldr	r3, [pc, #432]	; (9000aedc <HAL_JPEG_Init+0x244>)
9000ad2c:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
9000ad30:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
9000ad34:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000ad38:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
9000ad3c:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
9000ad40:	4967      	ldr	r1, [pc, #412]	; (9000aee0 <HAL_JPEG_Init+0x248>)
9000ad42:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000ad44:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000ad48:	430b      	orrs	r3, r1
  *address = value;
9000ad4a:	4966      	ldr	r1, [pc, #408]	; (9000aee4 <HAL_JPEG_Init+0x24c>)
9000ad4c:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
9000ad50:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000ad54:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
9000ad58:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ad5a:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000ad5e:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000ad60:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000ad64:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
9000ad68:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ad6a:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000ad6e:	ea43 030c 	orr.w	r3, r3, ip
9000ad72:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ad76:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000ad7a:	d1eb      	bne.n	9000ad54 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000ad7c:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000ad80:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
9000ad84:	4856      	ldr	r0, [pc, #344]	; (9000aee0 <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000ad86:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
9000ad88:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000ad8a:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
9000ad8e:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
9000ad92:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000ad96:	4003      	ands	r3, r0
  *address = value;
9000ad98:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000ad9c:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
9000ada0:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
9000ada4:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000ada8:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
9000adac:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000adb0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000adb2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000adb6:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
9000adba:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000adbe:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000adc0:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000adc2:	4b49      	ldr	r3, [pc, #292]	; (9000aee8 <HAL_JPEG_Init+0x250>)
  *address = value;
9000adc4:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000adc8:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000adcc:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
9000add0:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
9000add4:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
9000add8:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000addc:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000adde:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
9000ade2:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
9000ade6:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
9000adea:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000adec:	483f      	ldr	r0, [pc, #252]	; (9000aeec <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000adee:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000adf0:	4b3f      	ldr	r3, [pc, #252]	; (9000aef0 <HAL_JPEG_Init+0x258>)
  *address = value;
9000adf2:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000adf6:	493f      	ldr	r1, [pc, #252]	; (9000aef4 <HAL_JPEG_Init+0x25c>)
9000adf8:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000adfc:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000ae00:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
9000ae04:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
9000ae08:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000ae0c:	493a      	ldr	r1, [pc, #232]	; (9000aef8 <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
9000ae0e:	b29b      	uxth	r3, r3
9000ae10:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000ae14:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000ae18:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000ae1c:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
9000ae20:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000ae22:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000ae26:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000ae28:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000ae2c:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
9000ae30:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000ae32:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
9000ae36:	ea43 030e 	orr.w	r3, r3, lr
9000ae3a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000ae3e:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000ae42:	d1eb      	bne.n	9000ae1c <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000ae44:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
9000ae48:	4926      	ldr	r1, [pc, #152]	; (9000aee4 <HAL_JPEG_Init+0x24c>)
9000ae4a:	4620      	mov	r0, r4
9000ae4c:	f7ff fd3a 	bl	9000a8c4 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000ae50:	b118      	cbz	r0, 9000ae5a <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000ae52:	2301      	movs	r3, #1
    return HAL_ERROR;
9000ae54:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000ae56:	6523      	str	r3, [r4, #80]	; 0x50
}
9000ae58:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
9000ae5a:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000ae5c:	4620      	mov	r0, r4
9000ae5e:	4926      	ldr	r1, [pc, #152]	; (9000aef8 <HAL_JPEG_Init+0x260>)
9000ae60:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
9000ae64:	f7ff fd2e 	bl	9000a8c4 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000ae68:	2800      	cmp	r0, #0
9000ae6a:	d1f2      	bne.n	9000ae52 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
9000ae6c:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000ae6e:	4620      	mov	r0, r4
9000ae70:	4922      	ldr	r1, [pc, #136]	; (9000aefc <HAL_JPEG_Init+0x264>)
9000ae72:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
9000ae76:	f7ff fc7b 	bl	9000a770 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000ae7a:	2800      	cmp	r0, #0
9000ae7c:	d1e9      	bne.n	9000ae52 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000ae7e:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000ae80:	4620      	mov	r0, r4
9000ae82:	491f      	ldr	r1, [pc, #124]	; (9000af00 <HAL_JPEG_Init+0x268>)
9000ae84:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
9000ae88:	f7ff fc72 	bl	9000a770 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000ae8c:	2800      	cmp	r0, #0
9000ae8e:	d1e0      	bne.n	9000ae52 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000ae90:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000ae92:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000ae94:	6853      	ldr	r3, [r2, #4]
9000ae96:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000ae9a:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
9000ae9c:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000ae9e:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000aea0:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000aea4:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
9000aea6:	6560      	str	r0, [r4, #84]	; 0x54
}
9000aea8:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000aeaa:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000aeae:	f7f8 f8a5 	bl	90002ffc <HAL_JPEG_MspInit>
9000aeb2:	e6fd      	b.n	9000acb0 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000aeb4:	2001      	movs	r0, #1
}
9000aeb6:	4770      	bx	lr
9000aeb8:	9002bdc8 	.word	0x9002bdc8
9000aebc:	9002bd50 	.word	0x9002bd50
9000aec0:	01050100 	.word	0x01050100
9000aec4:	0b0a0908 	.word	0x0b0a0908
9000aec8:	07060504 	.word	0x07060504
9000aecc:	03020100 	.word	0x03020100
9000aed0:	7d010000 	.word	0x7d010000
9000aed4:	04040505 	.word	0x04040505
9000aed8:	03040203 	.word	0x03040203
9000aedc:	03010200 	.word	0x03010200
9000aee0:	ffff0000 	.word	0xffff0000
9000aee4:	9002bc9c 	.word	0x9002bc9c
9000aee8:	09080706 	.word	0x09080706
9000aeec:	01000404 	.word	0x01000404
9000aef0:	04040201 	.word	0x04040201
9000aef4:	05070403 	.word	0x05070403
9000aef8:	9002bbe8 	.word	0x9002bbe8
9000aefc:	9002bdac 	.word	0x9002bdac
9000af00:	9002bd90 	.word	0x9002bd90

9000af04 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000af04:	2b00      	cmp	r3, #0
9000af06:	bf18      	it	ne
9000af08:	2900      	cmpne	r1, #0
9000af0a:	d03b      	beq.n	9000af84 <HAL_JPEG_Decode_DMA+0x80>
{
9000af0c:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000af0e:	fab0 f580 	clz	r5, r0
9000af12:	4604      	mov	r4, r0
9000af14:	096d      	lsrs	r5, r5, #5
9000af16:	b330      	cbz	r0, 9000af66 <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
9000af18:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
9000af1c:	f1bc 0f01 	cmp.w	ip, #1
9000af20:	d02e      	beq.n	9000af80 <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000af22:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
9000af26:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000af2a:	45f4      	cmp	ip, lr
9000af2c:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
9000af30:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000af34:	d119      	bne.n	9000af6a <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
9000af36:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000af38:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000af3c:	9b04      	ldr	r3, [sp, #16]
9000af3e:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000af40:	2304      	movs	r3, #4
9000af42:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000af46:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000af48:	f023 030f 	bic.w	r3, r3, #15
9000af4c:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000af4e:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000af50:	f043 030e 	orr.w	r3, r3, #14
9000af54:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
9000af56:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000af58:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
9000af5a:	f7ff fd3d 	bl	9000a9d8 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000af5e:	f7ff fd79 	bl	9000aa54 <JPEG_DMA_StartProcess>
9000af62:	b930      	cbnz	r0, 9000af72 <HAL_JPEG_Decode_DMA+0x6e>
}
9000af64:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000af66:	2001      	movs	r0, #1
}
9000af68:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
9000af6a:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
9000af6c:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
9000af70:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000af72:	2306      	movs	r3, #6
      return HAL_ERROR;
9000af74:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
9000af76:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000af7a:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000af7e:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
9000af80:	2002      	movs	r0, #2
}
9000af82:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000af84:	2001      	movs	r0, #1
}
9000af86:	4770      	bx	lr

9000af88 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000af88:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000af8a:	f003 030c 	and.w	r3, r3, #12
9000af8e:	2b0c      	cmp	r3, #12
9000af90:	d01a      	beq.n	9000afc8 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000af92:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000af94:	f003 030c 	and.w	r3, r3, #12
9000af98:	2b08      	cmp	r3, #8
9000af9a:	d001      	beq.n	9000afa0 <HAL_JPEG_Pause+0x18>
}
9000af9c:	2000      	movs	r0, #0
9000af9e:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000afa0:	07ca      	lsls	r2, r1, #31
9000afa2:	d41f      	bmi.n	9000afe4 <HAL_JPEG_Pause+0x5c>
9000afa4:	f04f 3cff 	mov.w	ip, #4294967295
9000afa8:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000afac:	078b      	lsls	r3, r1, #30
9000afae:	d504      	bpl.n	9000afba <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000afb0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000afb2:	4694      	mov	ip, r2
9000afb4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000afb8:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000afba:	6802      	ldr	r2, [r0, #0]
}
9000afbc:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000afbe:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000afc0:	ea03 030c 	and.w	r3, r3, ip
9000afc4:	6313      	str	r3, [r2, #48]	; 0x30
}
9000afc6:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000afc8:	07cb      	lsls	r3, r1, #31
9000afca:	d503      	bpl.n	9000afd4 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000afcc:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000afce:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000afd2:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000afd4:	0789      	lsls	r1, r1, #30
9000afd6:	d5e1      	bpl.n	9000af9c <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000afd8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000afda:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000afde:	6543      	str	r3, [r0, #84]	; 0x54
}
9000afe0:	2000      	movs	r0, #0
9000afe2:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000afe4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000afe6:	f06f 0c06 	mvn.w	ip, #6
9000afea:	f06f 022e 	mvn.w	r2, #46	; 0x2e
9000afee:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000aff2:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000aff4:	e7da      	b.n	9000afac <HAL_JPEG_Pause+0x24>
9000aff6:	bf00      	nop

9000aff8 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000aff8:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000affa:	6282      	str	r2, [r0, #40]	; 0x28
}
9000affc:	4770      	bx	lr
9000affe:	bf00      	nop

9000b000 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000b000:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000b002:	62c2      	str	r2, [r0, #44]	; 0x2c
}
9000b004:	4770      	bx	lr
9000b006:	bf00      	nop

9000b008 <HAL_JPEG_EncodeCpltCallback>:
9000b008:	4770      	bx	lr
9000b00a:	bf00      	nop

9000b00c <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000b00c:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000b00e:	2101      	movs	r1, #1
{
9000b010:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b012:	6803      	ldr	r3, [r0, #0]
9000b014:	681a      	ldr	r2, [r3, #0]
9000b016:	f022 0201 	bic.w	r2, r2, #1
9000b01a:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b01c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b01e:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000b022:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000b024:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000b028:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000b02a:	f043 0304 	orr.w	r3, r3, #4
9000b02e:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000b030:	f7f6 fb90 	bl	90001754 <HAL_JPEG_ErrorCallback>
}
9000b034:	bd08      	pop	{r3, pc}
9000b036:	bf00      	nop

9000b038 <JPEG_MDMAInCpltCallback>:
{
9000b038:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000b03a:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000b03c:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000b040:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b042:	6822      	ldr	r2, [r4, #0]
9000b044:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000b046:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
9000b04a:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000b04c:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000b04e:	400b      	ands	r3, r1
9000b050:	2b0c      	cmp	r3, #12
9000b052:	d001      	beq.n	9000b058 <JPEG_MDMAInCpltCallback+0x20>
}
9000b054:	b003      	add	sp, #12
9000b056:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b058:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000b05a:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b05c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b05e:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000b060:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b062:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000b066:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b068:	1a9b      	subs	r3, r3, r2
9000b06a:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000b06c:	6a21      	ldr	r1, [r4, #32]
9000b06e:	f7f6 fafd 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000b072:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b074:	42ab      	cmp	r3, r5
9000b076:	d311      	bcc.n	9000b09c <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000b078:	b305      	cbz	r5, 9000b0bc <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000b07a:	fbb3 f2f5 	udiv	r2, r3, r5
9000b07e:	fb05 3212 	mls	r2, r5, r2, r3
9000b082:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000b084:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000b086:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000b088:	04d1      	lsls	r1, r2, #19
9000b08a:	d400      	bmi.n	9000b08e <JPEG_MDMAInCpltCallback+0x56>
9000b08c:	b963      	cbnz	r3, 9000b0a8 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000b08e:	6822      	ldr	r2, [r4, #0]
9000b090:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000b092:	f043 0360 	orr.w	r3, r3, #96	; 0x60
9000b096:	6313      	str	r3, [r2, #48]	; 0x30
}
9000b098:	b003      	add	sp, #12
9000b09a:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000b09c:	b1cb      	cbz	r3, 9000b0d2 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000b09e:	0798      	lsls	r0, r3, #30
9000b0a0:	d119      	bne.n	9000b0d6 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000b0a2:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b0a4:	04d2      	lsls	r2, r2, #19
9000b0a6:	d4f2      	bmi.n	9000b08e <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000b0a8:	6822      	ldr	r2, [r4, #0]
9000b0aa:	2501      	movs	r5, #1
9000b0ac:	69a1      	ldr	r1, [r4, #24]
9000b0ae:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000b0b0:	3240      	adds	r2, #64	; 0x40
9000b0b2:	9500      	str	r5, [sp, #0]
9000b0b4:	f001 f8b0 	bl	9000c218 <HAL_MDMA_Start_IT>
9000b0b8:	2800      	cmp	r0, #0
9000b0ba:	d0e8      	beq.n	9000b08e <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000b0bc:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000b0be:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000b0c0:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000b0c2:	f043 0304 	orr.w	r3, r3, #4
9000b0c6:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000b0c8:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000b0cc:	f7f6 fb42 	bl	90001754 <HAL_JPEG_ErrorCallback>
        return;
9000b0d0:	e7c0      	b.n	9000b054 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000b0d2:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000b0d4:	e7db      	b.n	9000b08e <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000b0d6:	f023 0303 	bic.w	r3, r3, #3
9000b0da:	3304      	adds	r3, #4
9000b0dc:	e7d2      	b.n	9000b084 <JPEG_MDMAInCpltCallback+0x4c>
9000b0de:	bf00      	nop

9000b0e0 <JPEG_DMA_PollResidualData>:
{
9000b0e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000b0e2:	6802      	ldr	r2, [r0, #0]
9000b0e4:	2610      	movs	r6, #16
{
9000b0e6:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000b0e8:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000b0ea:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000b0ee:	d11d      	bne.n	9000b12c <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000b0f0:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000b0f2:	06df      	lsls	r7, r3, #27
9000b0f4:	d51a      	bpl.n	9000b12c <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000b0f6:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000b0f8:	69e7      	ldr	r7, [r4, #28]
9000b0fa:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000b0fc:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000b0fe:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000b100:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000b102:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000b104:	6a67      	ldr	r7, [r4, #36]	; 0x24
9000b106:	69e2      	ldr	r2, [r4, #28]
9000b108:	443a      	add	r2, r7
9000b10a:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000b10c:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000b10e:	69e2      	ldr	r2, [r4, #28]
9000b110:	4402      	add	r2, r0
9000b112:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000b114:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b116:	69e2      	ldr	r2, [r4, #28]
9000b118:	440a      	add	r2, r1
9000b11a:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000b11c:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000b11e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
9000b120:	3304      	adds	r3, #4
9000b122:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000b124:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b126:	4293      	cmp	r3, r2
9000b128:	d021      	beq.n	9000b16e <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000b12a:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000b12c:	3e01      	subs	r6, #1
9000b12e:	d1db      	bne.n	9000b0e8 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000b130:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000b132:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000b134:	06d8      	lsls	r0, r3, #27
9000b136:	d501      	bpl.n	9000b13c <JPEG_DMA_PollResidualData+0x5c>
9000b138:	048b      	lsls	r3, r1, #18
9000b13a:	d417      	bmi.n	9000b16c <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b13c:	6813      	ldr	r3, [r2, #0]
9000b13e:	f023 0301 	bic.w	r3, r3, #1
9000b142:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000b144:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b146:	b9eb      	cbnz	r3, 9000b184 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000b148:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000b14a:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b14c:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b14e:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b150:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000b154:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b158:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b15c:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b15e:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b160:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b162:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b166:	d00a      	beq.n	9000b17e <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000b168:	f7ff ff4e 	bl	9000b008 <HAL_JPEG_EncodeCpltCallback>
}
9000b16c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b16e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b170:	4620      	mov	r0, r4
9000b172:	69e1      	ldr	r1, [r4, #28]
9000b174:	f7f6 fa9a 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000b178:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000b17a:	6265      	str	r5, [r4, #36]	; 0x24
9000b17c:	e7d6      	b.n	9000b12c <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b17e:	f7f6 faeb 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000b182:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b184:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b186:	4620      	mov	r0, r4
9000b188:	69e1      	ldr	r1, [r4, #28]
9000b18a:	f7f6 fa8f 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b18e:	2300      	movs	r3, #0
9000b190:	6263      	str	r3, [r4, #36]	; 0x24
9000b192:	e7d9      	b.n	9000b148 <JPEG_DMA_PollResidualData+0x68>

9000b194 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000b194:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b196:	f413 5f40 	tst.w	r3, #12288	; 0x3000
9000b19a:	d028      	beq.n	9000b1ee <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b19c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b19e:	f003 030c 	and.w	r3, r3, #12
9000b1a2:	2b0c      	cmp	r3, #12
{
9000b1a4:	b570      	push	{r4, r5, r6, lr}
9000b1a6:	4604      	mov	r4, r0
9000b1a8:	b082      	sub	sp, #8
9000b1aa:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b1ac:	d007      	beq.n	9000b1be <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b1ae:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b1b0:	f003 030c 	and.w	r3, r3, #12
9000b1b4:	2b08      	cmp	r3, #8
9000b1b6:	d037      	beq.n	9000b228 <HAL_JPEG_Resume+0x94>
  return HAL_OK;
9000b1b8:	2000      	movs	r0, #0
}
9000b1ba:	b002      	add	sp, #8
9000b1bc:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000b1be:	07c8      	lsls	r0, r1, #31
9000b1c0:	d417      	bmi.n	9000b1f2 <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000b1c2:	07a9      	lsls	r1, r5, #30
9000b1c4:	d5f8      	bpl.n	9000b1b8 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000b1c6:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000b1c8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000b1cc:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000b1ce:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000b1d0:	041a      	lsls	r2, r3, #16
9000b1d2:	d453      	bmi.n	9000b27c <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000b1d4:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000b1d6:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
9000b1d8:	2a00      	cmp	r2, #0
9000b1da:	d13e      	bne.n	9000b25a <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000b1dc:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000b1de:	2206      	movs	r2, #6
          return HAL_ERROR;
9000b1e0:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000b1e2:	f043 0304 	orr.w	r3, r3, #4
9000b1e6:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000b1e8:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
9000b1ec:	e7e5      	b.n	9000b1ba <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
9000b1ee:	2001      	movs	r0, #1
}
9000b1f0:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000b1f2:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000b1f4:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000b1f6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000b1fa:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000b1fc:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
9000b1fe:	2a00      	cmp	r2, #0
9000b200:	d0ec      	beq.n	9000b1dc <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000b202:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b204:	fbb3 f1f2 	udiv	r1, r3, r2
9000b208:	fb02 3211 	mls	r2, r2, r1, r3
9000b20c:	1a9b      	subs	r3, r3, r2
9000b20e:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
9000b210:	2b00      	cmp	r3, #0
9000b212:	d0d6      	beq.n	9000b1c2 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000b214:	6822      	ldr	r2, [r4, #0]
9000b216:	2601      	movs	r6, #1
9000b218:	3240      	adds	r2, #64	; 0x40
9000b21a:	9600      	str	r6, [sp, #0]
9000b21c:	69a1      	ldr	r1, [r4, #24]
9000b21e:	f000 fffb 	bl	9000c218 <HAL_MDMA_Start_IT>
9000b222:	2800      	cmp	r0, #0
9000b224:	d0cd      	beq.n	9000b1c2 <HAL_JPEG_Resume+0x2e>
9000b226:	e7d9      	b.n	9000b1dc <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000b228:	f011 0101 	ands.w	r1, r1, #1
9000b22c:	d013      	beq.n	9000b256 <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000b22e:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b230:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000b232:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000b234:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000b238:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000b23a:	07ab      	lsls	r3, r5, #30
9000b23c:	d504      	bpl.n	9000b248 <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000b23e:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000b240:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000b242:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000b246:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000b248:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
9000b24a:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000b24c:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000b24e:	430b      	orrs	r3, r1
9000b250:	6313      	str	r3, [r2, #48]	; 0x30
}
9000b252:	b002      	add	sp, #8
9000b254:	bd70      	pop	{r4, r5, r6, pc}
9000b256:	2228      	movs	r2, #40	; 0x28
9000b258:	e7ef      	b.n	9000b23a <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000b25a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000b25c:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000b25e:	fbb3 f1f2 	udiv	r1, r3, r2
9000b262:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000b266:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000b268:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000b26a:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000b26c:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000b26e:	9500      	str	r5, [sp, #0]
9000b270:	69e2      	ldr	r2, [r4, #28]
9000b272:	f000 ffd1 	bl	9000c218 <HAL_MDMA_Start_IT>
9000b276:	2800      	cmp	r0, #0
9000b278:	d09e      	beq.n	9000b1b8 <HAL_JPEG_Resume+0x24>
9000b27a:	e7af      	b.n	9000b1dc <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000b27c:	4620      	mov	r0, r4
9000b27e:	f7ff ff2f 	bl	9000b0e0 <JPEG_DMA_PollResidualData>
9000b282:	e799      	b.n	9000b1b8 <HAL_JPEG_Resume+0x24>

9000b284 <JPEG_MDMAOutCpltCallback>:
{
9000b284:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000b286:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000b288:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000b28c:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b28e:	6823      	ldr	r3, [r4, #0]
9000b290:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b292:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000b296:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000b298:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b29a:	400a      	ands	r2, r1
9000b29c:	2a0c      	cmp	r2, #12
9000b29e:	d001      	beq.n	9000b2a4 <JPEG_MDMAOutCpltCallback+0x20>
}
9000b2a0:	b003      	add	sp, #12
9000b2a2:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000b2a4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b2a6:	0692      	lsls	r2, r2, #26
9000b2a8:	d505      	bpl.n	9000b2b6 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000b2aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b2ac:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000b2b0:	631a      	str	r2, [r3, #48]	; 0x30
}
9000b2b2:	b003      	add	sp, #12
9000b2b4:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b2b6:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b2b8:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b2ba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b2bc:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b2be:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b2c0:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000b2c4:	1a9b      	subs	r3, r3, r2
9000b2c6:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b2c8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b2ca:	f7f6 f9ef 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000b2ce:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000b2d0:	049b      	lsls	r3, r3, #18
9000b2d2:	d501      	bpl.n	9000b2d8 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000b2d4:	6823      	ldr	r3, [r4, #0]
9000b2d6:	e7e8      	b.n	9000b2aa <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000b2d8:	6821      	ldr	r1, [r4, #0]
9000b2da:	2501      	movs	r5, #1
9000b2dc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b2de:	69e2      	ldr	r2, [r4, #28]
9000b2e0:	3144      	adds	r1, #68	; 0x44
9000b2e2:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000b2e4:	9500      	str	r5, [sp, #0]
9000b2e6:	f000 ff97 	bl	9000c218 <HAL_MDMA_Start_IT>
9000b2ea:	2800      	cmp	r0, #0
9000b2ec:	d0f2      	beq.n	9000b2d4 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000b2ee:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000b2f0:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000b2f2:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000b2f4:	f043 0304 	orr.w	r3, r3, #4
9000b2f8:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000b2fa:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000b2fe:	f7f6 fa29 	bl	90001754 <HAL_JPEG_ErrorCallback>
          return;
9000b302:	e7cd      	b.n	9000b2a0 <JPEG_MDMAOutCpltCallback+0x1c>

9000b304 <JPEG_MDMAOutAbortCallback>:
{
9000b304:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000b306:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000b308:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000b30a:	041a      	lsls	r2, r3, #16
9000b30c:	d400      	bmi.n	9000b310 <JPEG_MDMAOutAbortCallback+0xc>
}
9000b30e:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b310:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000b312:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b314:	681b      	ldr	r3, [r3, #0]
9000b316:	695b      	ldr	r3, [r3, #20]
9000b318:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000b31c:	1ad3      	subs	r3, r2, r3
9000b31e:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000b320:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b322:	429a      	cmp	r2, r3
9000b324:	d025      	beq.n	9000b372 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000b326:	6822      	ldr	r2, [r4, #0]
9000b328:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000b32a:	f015 0510 	ands.w	r5, r5, #16
9000b32e:	d118      	bne.n	9000b362 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000b330:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b332:	bb4b      	cbnz	r3, 9000b388 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b334:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000b336:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b338:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b33a:	f023 0301 	bic.w	r3, r3, #1
9000b33e:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000b340:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b342:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b344:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000b348:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b34c:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b350:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b352:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b354:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b356:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b35a:	d012      	beq.n	9000b382 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000b35c:	f7ff fe54 	bl	9000b008 <HAL_JPEG_EncodeCpltCallback>
}
9000b360:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000b362:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000b364:	049b      	lsls	r3, r3, #18
9000b366:	d4d2      	bmi.n	9000b30e <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000b368:	4620      	mov	r0, r4
}
9000b36a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000b36e:	f7ff beb7 	b.w	9000b0e0 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b372:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b374:	4620      	mov	r0, r4
9000b376:	69e1      	ldr	r1, [r4, #28]
9000b378:	f7f6 f998 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000b37c:	2300      	movs	r3, #0
9000b37e:	6263      	str	r3, [r4, #36]	; 0x24
9000b380:	e7d1      	b.n	9000b326 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b382:	f7f6 f9e9 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000b386:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b388:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b38a:	4620      	mov	r0, r4
9000b38c:	69e1      	ldr	r1, [r4, #28]
9000b38e:	f7f6 f98d 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b392:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b394:	6265      	str	r5, [r4, #36]	; 0x24
9000b396:	e7cd      	b.n	9000b334 <JPEG_MDMAOutAbortCallback+0x30>

9000b398 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b398:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b39a:	f003 0303 	and.w	r3, r3, #3
9000b39e:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b3a0:	6803      	ldr	r3, [r0, #0]
{
9000b3a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000b3a6:	4604      	mov	r4, r0
9000b3a8:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b3aa:	d01f      	beq.n	9000b3ec <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000b3ac:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b3ae:	04d7      	lsls	r7, r2, #19
9000b3b0:	d407      	bmi.n	9000b3c2 <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000b3b2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b3b4:	0796      	lsls	r6, r2, #30
9000b3b6:	f100 811d 	bmi.w	9000b5f4 <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000b3ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b3bc:	0750      	lsls	r0, r2, #29
9000b3be:	f100 81b1 	bmi.w	9000b724 <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000b3c2:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000b3c4:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000b3c8:	d107      	bne.n	9000b3da <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000b3ca:	6b5e      	ldr	r6, [r3, #52]	; 0x34
9000b3cc:	f016 0608 	ands.w	r6, r6, #8
9000b3d0:	d14c      	bne.n	9000b46c <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000b3d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b3d4:	06d2      	lsls	r2, r2, #27
9000b3d6:	f100 81e3 	bmi.w	9000b7a0 <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b3da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b3dc:	f002 0238 	and.w	r2, r2, #56	; 0x38
9000b3e0:	2a20      	cmp	r2, #32
9000b3e2:	d01a      	beq.n	9000b41a <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
9000b3e4:	2000      	movs	r0, #0
}
9000b3e6:	b002      	add	sp, #8
9000b3e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b3ec:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b3ee:	0652      	lsls	r2, r2, #25
9000b3f0:	d5dc      	bpl.n	9000b3ac <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000b3f2:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000b3f4:	9101      	str	r1, [sp, #4]
9000b3f6:	f7ff fb79 	bl	9000aaec <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000b3fa:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b3fc:	9901      	ldr	r1, [sp, #4]
9000b3fe:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000b400:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b402:	f7f6 f8fd 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000b406:	6823      	ldr	r3, [r4, #0]
9000b408:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b40a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000b40e:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000b410:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000b412:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000b416:	639a      	str	r2, [r3, #56]	; 0x38
9000b418:	e7c8      	b.n	9000b3ac <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b41a:	681a      	ldr	r2, [r3, #0]
9000b41c:	f022 0201 	bic.w	r2, r2, #1
9000b420:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b422:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b424:	f002 020c 	and.w	r2, r2, #12
9000b428:	2a08      	cmp	r2, #8
9000b42a:	f000 81e6 	beq.w	9000b7fa <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000b42e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000b430:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000b434:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000b436:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b438:	2b00      	cmp	r3, #0
9000b43a:	f040 81e3 	bne.w	9000b804 <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
9000b43e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000b440:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b442:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b444:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b446:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b44a:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b44c:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
9000b450:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b454:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b456:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b458:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b45c:	f000 81c9 	beq.w	9000b7f2 <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000b460:	f7ff fdd2 	bl	9000b008 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000b464:	4628      	mov	r0, r5
}
9000b466:	b002      	add	sp, #8
9000b468:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000b46c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b46e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000b470:	3220      	adds	r2, #32
9000b472:	4296      	cmp	r6, r2
9000b474:	f0c0 81e4 	bcc.w	9000b840 <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
9000b478:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b47a:	69e1      	ldr	r1, [r4, #28]
9000b47c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b47e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b480:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b482:	69e2      	ldr	r2, [r4, #28]
9000b484:	440a      	add	r2, r1
9000b486:	0a19      	lsrs	r1, r3, #8
9000b488:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b48a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b48c:	69e2      	ldr	r2, [r4, #28]
9000b48e:	440a      	add	r2, r1
9000b490:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b492:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b494:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b496:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b498:	69e2      	ldr	r2, [r4, #28]
9000b49a:	440a      	add	r2, r1
9000b49c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b49e:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b4a0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b4a2:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b4a4:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000b4a6:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b4a8:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b4aa:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b4ac:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b4ae:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b4b0:	69e2      	ldr	r2, [r4, #28]
9000b4b2:	440a      	add	r2, r1
9000b4b4:	0a19      	lsrs	r1, r3, #8
9000b4b6:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b4b8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b4ba:	69e2      	ldr	r2, [r4, #28]
9000b4bc:	440a      	add	r2, r1
9000b4be:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b4c0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b4c2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b4c4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b4c6:	69e2      	ldr	r2, [r4, #28]
9000b4c8:	440a      	add	r2, r1
9000b4ca:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b4cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b4ce:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b4d0:	3304      	adds	r3, #4
9000b4d2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b4d4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b4d6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b4d8:	69e1      	ldr	r1, [r4, #28]
9000b4da:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b4dc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b4de:	69e2      	ldr	r2, [r4, #28]
9000b4e0:	440a      	add	r2, r1
9000b4e2:	0a19      	lsrs	r1, r3, #8
9000b4e4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b4e6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b4e8:	69e2      	ldr	r2, [r4, #28]
9000b4ea:	440a      	add	r2, r1
9000b4ec:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b4ee:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b4f0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b4f2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b4f4:	69e2      	ldr	r2, [r4, #28]
9000b4f6:	440a      	add	r2, r1
9000b4f8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b4fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b4fc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b4fe:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b500:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000b502:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b504:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b506:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b508:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b50a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b50c:	69e2      	ldr	r2, [r4, #28]
9000b50e:	440a      	add	r2, r1
9000b510:	0a19      	lsrs	r1, r3, #8
9000b512:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b514:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b516:	69e2      	ldr	r2, [r4, #28]
9000b518:	440a      	add	r2, r1
9000b51a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b51c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b51e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b520:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b522:	69e2      	ldr	r2, [r4, #28]
9000b524:	440a      	add	r2, r1
9000b526:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b528:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b52a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b52c:	3304      	adds	r3, #4
9000b52e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b530:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b532:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b534:	69e1      	ldr	r1, [r4, #28]
9000b536:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b538:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b53a:	69e2      	ldr	r2, [r4, #28]
9000b53c:	440a      	add	r2, r1
9000b53e:	0a19      	lsrs	r1, r3, #8
9000b540:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b542:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b544:	69e2      	ldr	r2, [r4, #28]
9000b546:	440a      	add	r2, r1
9000b548:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b54a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b54c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b54e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b550:	69e2      	ldr	r2, [r4, #28]
9000b552:	440a      	add	r2, r1
9000b554:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b556:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b558:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b55a:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b55c:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000b55e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b560:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b562:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b564:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b566:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b568:	69e2      	ldr	r2, [r4, #28]
9000b56a:	440a      	add	r2, r1
9000b56c:	0a19      	lsrs	r1, r3, #8
9000b56e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b570:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b572:	69e2      	ldr	r2, [r4, #28]
9000b574:	440a      	add	r2, r1
9000b576:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b578:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b57a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b57c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b57e:	69e2      	ldr	r2, [r4, #28]
9000b580:	440a      	add	r2, r1
9000b582:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b584:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b586:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b588:	3304      	adds	r3, #4
9000b58a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b58c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b58e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b590:	69e1      	ldr	r1, [r4, #28]
9000b592:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b594:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b596:	69e2      	ldr	r2, [r4, #28]
9000b598:	440a      	add	r2, r1
9000b59a:	0a19      	lsrs	r1, r3, #8
9000b59c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b59e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b5a0:	69e2      	ldr	r2, [r4, #28]
9000b5a2:	440a      	add	r2, r1
9000b5a4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b5a6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b5a8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b5aa:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b5ac:	69e2      	ldr	r2, [r4, #28]
9000b5ae:	440a      	add	r2, r1
9000b5b0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b5b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b5b4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b5b6:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b5b8:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000b5ba:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b5bc:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b5be:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b5c0:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b5c2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b5c4:	69e2      	ldr	r2, [r4, #28]
9000b5c6:	440a      	add	r2, r1
9000b5c8:	0a19      	lsrs	r1, r3, #8
9000b5ca:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b5cc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b5ce:	69e2      	ldr	r2, [r4, #28]
9000b5d0:	440a      	add	r2, r1
9000b5d2:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b5d4:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b5d6:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b5d8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b5da:	69e2      	ldr	r2, [r4, #28]
9000b5dc:	440a      	add	r2, r1
9000b5de:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b5e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b5e2:	3304      	adds	r3, #4
9000b5e4:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b5e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b5e8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b5ea:	429a      	cmp	r2, r3
9000b5ec:	f000 82ae 	beq.w	9000bb4c <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b5f0:	6823      	ldr	r3, [r4, #0]
9000b5f2:	e6f2      	b.n	9000b3da <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000b5f4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b5f6:	2a00      	cmp	r2, #0
9000b5f8:	f000 810c 	beq.w	9000b814 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000b5fc:	6a21      	ldr	r1, [r4, #32]
9000b5fe:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b600:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000b602:	f240 81a4 	bls.w	9000b94e <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b606:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b608:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000b60a:	04cd      	lsls	r5, r1, #19
9000b60c:	f53f aed9 	bmi.w	9000b3c2 <JPEG_Process+0x2a>
9000b610:	2a00      	cmp	r2, #0
9000b612:	f43f aed6 	beq.w	9000b3c2 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000b616:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000b618:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000b61c:	f240 8203 	bls.w	9000ba26 <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b620:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000b622:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b624:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b626:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b628:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b62a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b62c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b62e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b630:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b634:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b636:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b63a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b63c:	6a21      	ldr	r1, [r4, #32]
9000b63e:	3104      	adds	r1, #4
9000b640:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b642:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b644:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b646:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b648:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b64a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b64c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b64e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b650:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b654:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b656:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b65a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b65c:	6a21      	ldr	r1, [r4, #32]
9000b65e:	3104      	adds	r1, #4
9000b660:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b662:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b664:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b666:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b668:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b66a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b66c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b66e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b670:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b674:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b676:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b67a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b67c:	6a21      	ldr	r1, [r4, #32]
9000b67e:	3104      	adds	r1, #4
9000b680:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b682:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b684:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b686:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b688:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b68a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b68c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b68e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b690:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b694:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b696:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b69a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b69c:	6a21      	ldr	r1, [r4, #32]
9000b69e:	3104      	adds	r1, #4
9000b6a0:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b6a2:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6a4:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b6a6:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6a8:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6aa:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6ac:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b6ae:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6b0:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b6b4:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6b6:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b6ba:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b6bc:	6a21      	ldr	r1, [r4, #32]
9000b6be:	3104      	adds	r1, #4
9000b6c0:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b6c2:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6c4:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b6c6:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6c8:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6ca:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6cc:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b6ce:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6d0:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b6d4:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6d6:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b6da:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b6dc:	6a21      	ldr	r1, [r4, #32]
9000b6de:	3104      	adds	r1, #4
9000b6e0:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b6e2:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6e4:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b6e6:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6e8:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6ea:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6ec:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b6ee:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6f0:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b6f4:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6f6:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b6fa:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b6fc:	6a21      	ldr	r1, [r4, #32]
9000b6fe:	3104      	adds	r1, #4
9000b700:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b702:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b704:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b706:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b708:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b70a:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b70c:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b70e:	7849      	ldrb	r1, [r1, #1]
9000b710:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000b714:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b716:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b71a:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b71c:	6a22      	ldr	r2, [r4, #32]
9000b71e:	3204      	adds	r2, #4
9000b720:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000b722:	e64e      	b.n	9000b3c2 <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000b724:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b726:	2a00      	cmp	r2, #0
9000b728:	d074      	beq.n	9000b814 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000b72a:	6a21      	ldr	r1, [r4, #32]
9000b72c:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b72e:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000b730:	f200 8164 	bhi.w	9000b9fc <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000b734:	428a      	cmp	r2, r1
9000b736:	f040 810c 	bne.w	9000b952 <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000b73a:	6a21      	ldr	r1, [r4, #32]
9000b73c:	4620      	mov	r0, r4
9000b73e:	f7f5 ff95 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000b742:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b744:	2a04      	cmp	r2, #4
9000b746:	d902      	bls.n	9000b74e <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000b748:	f022 0203 	bic.w	r2, r2, #3
9000b74c:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000b74e:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b750:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000b752:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b754:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000b756:	04c9      	lsls	r1, r1, #19
9000b758:	f53f ae33 	bmi.w	9000b3c2 <JPEG_Process+0x2a>
9000b75c:	2a00      	cmp	r2, #0
9000b75e:	f43f ae30 	beq.w	9000b3c2 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000b762:	0891      	lsrs	r1, r2, #2
9000b764:	f040 8203 	bne.w	9000bb6e <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b768:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b76a:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000b76c:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b76e:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000b770:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b774:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
9000b776:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b778:	d010      	beq.n	9000b79c <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b77a:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b77c:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b77e:	5c69      	ldrb	r1, [r5, r1]
9000b780:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
9000b784:	6a21      	ldr	r1, [r4, #32]
9000b786:	f101 0101 	add.w	r1, r1, #1
9000b78a:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b78c:	d106      	bne.n	9000b79c <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b78e:	6a22      	ldr	r2, [r4, #32]
9000b790:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
9000b792:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b794:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000b798:	3201      	adds	r2, #1
9000b79a:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000b79c:	6418      	str	r0, [r3, #64]	; 0x40
9000b79e:	e610      	b.n	9000b3c2 <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000b7a0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b7a2:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000b7a4:	3204      	adds	r2, #4
9000b7a6:	4295      	cmp	r5, r2
9000b7a8:	f0c0 80d5 	bcc.w	9000b956 <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
9000b7ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b7ae:	69e1      	ldr	r1, [r4, #28]
9000b7b0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b7b2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b7b4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b7b6:	69e2      	ldr	r2, [r4, #28]
9000b7b8:	440a      	add	r2, r1
9000b7ba:	0a19      	lsrs	r1, r3, #8
9000b7bc:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b7be:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b7c0:	69e2      	ldr	r2, [r4, #28]
9000b7c2:	440a      	add	r2, r1
9000b7c4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b7c6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b7c8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b7ca:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b7cc:	69e2      	ldr	r2, [r4, #28]
9000b7ce:	440a      	add	r2, r1
9000b7d0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b7d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b7d4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
9000b7d6:	3304      	adds	r3, #4
9000b7d8:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b7da:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b7dc:	429a      	cmp	r2, r3
9000b7de:	f47f af07 	bne.w	9000b5f0 <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b7e2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b7e4:	4620      	mov	r0, r4
9000b7e6:	69e1      	ldr	r1, [r4, #28]
9000b7e8:	f7f5 ff60 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b7ec:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b7ee:	6266      	str	r6, [r4, #36]	; 0x24
9000b7f0:	e5f3      	b.n	9000b3da <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b7f2:	f7f5 ffb1 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000b7f6:	4628      	mov	r0, r5
9000b7f8:	e5f5      	b.n	9000b3e6 <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b7fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b7fc:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000b800:	631a      	str	r2, [r3, #48]	; 0x30
9000b802:	e614      	b.n	9000b42e <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b804:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b806:	4620      	mov	r0, r4
9000b808:	69e1      	ldr	r1, [r4, #28]
9000b80a:	f7f5 ff4f 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b80e:	2300      	movs	r3, #0
9000b810:	6263      	str	r3, [r4, #36]	; 0x24
9000b812:	e614      	b.n	9000b43e <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b814:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b816:	f002 020c 	and.w	r2, r2, #12
9000b81a:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b81c:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b81e:	f000 80fd 	beq.w	9000ba1c <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b822:	f002 020c 	and.w	r2, r2, #12
9000b826:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b828:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b82a:	f47f adca 	bne.w	9000b3c2 <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b82e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000b832:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000b834:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b836:	f022 0206 	bic.w	r2, r2, #6
9000b83a:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b83c:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b83e:	e5c0      	b.n	9000b3c2 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000b840:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b842:	4296      	cmp	r6, r2
9000b844:	f67f adc9 	bls.w	9000b3da <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000b848:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000b84a:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000b84c:	0880      	lsrs	r0, r0, #2
9000b84e:	d020      	beq.n	9000b892 <JPEG_Process+0x4fa>
9000b850:	4629      	mov	r1, r5
9000b852:	e000      	b.n	9000b856 <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
9000b854:	6823      	ldr	r3, [r4, #0]
9000b856:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000b858:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b85a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b85c:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000b85e:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b860:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b862:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000b864:	69e2      	ldr	r2, [r4, #28]
9000b866:	4432      	add	r2, r6
9000b868:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000b86c:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b86e:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000b870:	69e2      	ldr	r2, [r4, #28]
9000b872:	4432      	add	r2, r6
9000b874:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b878:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b87c:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b87e:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000b880:	69e2      	ldr	r2, [r4, #28]
9000b882:	4432      	add	r2, r6
9000b884:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b886:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b888:	f103 0304 	add.w	r3, r3, #4
9000b88c:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000b88e:	d1e1      	bne.n	9000b854 <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b890:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000b892:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b894:	42b3      	cmp	r3, r6
9000b896:	f000 8161 	beq.w	9000bb5c <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000b89a:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b89e:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000b8a0:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000b8a4:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000b8a6:	d00e      	beq.n	9000b8c6 <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b8a8:	f005 0303 	and.w	r3, r5, #3
9000b8ac:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b8ae:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000b8b0:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b8b2:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000b8b4:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b8b6:	fa27 f303 	lsr.w	r3, r7, r3
9000b8ba:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000b8bc:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b8be:	f103 0301 	add.w	r3, r3, #1
9000b8c2:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000b8c4:	d1f0      	bne.n	9000b8a8 <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
9000b8c6:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b8ca:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b8cc:	69e1      	ldr	r1, [r4, #28]
9000b8ce:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000b8d0:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b8d4:	f7f5 feea 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b8d8:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000b8da:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000b8de:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b8e0:	f63f ae86 	bhi.w	9000b5f0 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b8e4:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9000b8e8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b8ea:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b8ec:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b8f0:	fa27 f003 	lsr.w	r0, r7, r3
9000b8f4:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
9000b8f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b8f8:	f102 0201 	add.w	r2, r2, #1
9000b8fc:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b8fe:	f43f ae77 	beq.w	9000b5f0 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b902:	f103 0208 	add.w	r2, r3, #8
9000b906:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b908:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b90a:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b90e:	fa27 f202 	lsr.w	r2, r7, r2
9000b912:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000b914:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b916:	f102 0201 	add.w	r2, r2, #1
9000b91a:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b91c:	f108 0202 	add.w	r2, r8, #2
9000b920:	f43f ae66 	beq.w	9000b5f0 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b924:	3310      	adds	r3, #16
9000b926:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b928:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b92a:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b92c:	fa27 f303 	lsr.w	r3, r7, r3
9000b930:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000b932:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b934:	f103 0301 	add.w	r3, r3, #1
9000b938:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b93a:	f47f ae59 	bne.w	9000b5f0 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b93e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b940:	0e3f      	lsrs	r7, r7, #24
9000b942:	69e2      	ldr	r2, [r4, #28]
9000b944:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000b946:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b948:	3301      	adds	r3, #1
9000b94a:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b94c:	e650      	b.n	9000b5f0 <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000b94e:	428a      	cmp	r2, r1
9000b950:	d056      	beq.n	9000ba00 <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b952:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b954:	e535      	b.n	9000b3c2 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000b956:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b958:	4295      	cmp	r5, r2
9000b95a:	f67f ad3e 	bls.w	9000b3da <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000b95e:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000b960:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000b962:	0880      	lsrs	r0, r0, #2
9000b964:	d020      	beq.n	9000b9a8 <JPEG_Process+0x610>
9000b966:	4631      	mov	r1, r6
9000b968:	e000      	b.n	9000b96c <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
9000b96a:	6823      	ldr	r3, [r4, #0]
9000b96c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000b96e:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b970:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b972:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000b974:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b976:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b978:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000b97a:	69e2      	ldr	r2, [r4, #28]
9000b97c:	442a      	add	r2, r5
9000b97e:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000b982:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b984:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000b986:	69e2      	ldr	r2, [r4, #28]
9000b988:	442a      	add	r2, r5
9000b98a:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b98e:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b992:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b994:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000b996:	69e2      	ldr	r2, [r4, #28]
9000b998:	442a      	add	r2, r5
9000b99a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b99c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b99e:	f103 0304 	add.w	r3, r3, #4
9000b9a2:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000b9a4:	d1e1      	bne.n	9000b96a <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b9a6:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000b9a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b9aa:	429d      	cmp	r5, r3
9000b9ac:	f000 80d6 	beq.w	9000bb5c <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000b9b0:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b9b4:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000b9b6:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000b9ba:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000b9bc:	d00e      	beq.n	9000b9dc <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b9be:	f006 0303 	and.w	r3, r6, #3
9000b9c2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b9c4:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000b9c6:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b9c8:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000b9ca:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b9cc:	fa27 f303 	lsr.w	r3, r7, r3
9000b9d0:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000b9d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b9d4:	f103 0301 	add.w	r3, r3, #1
9000b9d8:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000b9da:	d1f0      	bne.n	9000b9be <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
9000b9dc:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b9e0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b9e2:	69e1      	ldr	r1, [r4, #28]
9000b9e4:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000b9e6:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b9ea:	f7f5 fe5f 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b9ee:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000b9f0:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000b9f4:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b9f6:	f67f af75 	bls.w	9000b8e4 <JPEG_Process+0x54c>
9000b9fa:	e5f9      	b.n	9000b5f0 <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b9fc:	1a52      	subs	r2, r2, r1
9000b9fe:	e6a9      	b.n	9000b754 <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000ba00:	6a21      	ldr	r1, [r4, #32]
9000ba02:	4620      	mov	r0, r4
9000ba04:	f7f5 fe32 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000ba08:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ba0a:	2a04      	cmp	r2, #4
9000ba0c:	d902      	bls.n	9000ba14 <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000ba0e:	f022 0203 	bic.w	r2, r2, #3
9000ba12:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000ba14:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ba16:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000ba18:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000ba1a:	e5f5      	b.n	9000b608 <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000ba1c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000ba20:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ba22:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000ba24:	e4cd      	b.n	9000b3c2 <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000ba26:	2a03      	cmp	r2, #3
9000ba28:	f240 80a4 	bls.w	9000bb74 <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
9000ba2c:	2900      	cmp	r1, #0
9000ba2e:	f43f acc8 	beq.w	9000b3c2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000ba32:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ba34:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ba36:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ba38:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ba3c:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ba3e:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ba40:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ba42:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ba46:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ba48:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000ba4c:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ba50:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ba54:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000ba56:	6a20      	ldr	r0, [r4, #32]
9000ba58:	f100 0004 	add.w	r0, r0, #4
9000ba5c:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ba5e:	f43f acb0 	beq.w	9000b3c2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000ba62:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ba64:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ba66:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ba6a:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ba6c:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ba6e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ba70:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ba74:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ba76:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000ba7a:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ba7e:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ba82:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000ba84:	6a20      	ldr	r0, [r4, #32]
9000ba86:	f100 0004 	add.w	r0, r0, #4
9000ba8a:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ba8c:	f43f ac99 	beq.w	9000b3c2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000ba90:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ba92:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ba94:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ba98:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ba9a:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ba9c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ba9e:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000baa2:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000baa4:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000baa8:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000baac:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000bab0:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000bab2:	6a20      	ldr	r0, [r4, #32]
9000bab4:	f100 0004 	add.w	r0, r0, #4
9000bab8:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000baba:	f43f ac82 	beq.w	9000b3c2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000babe:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000bac0:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000bac2:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000bac6:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000bac8:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000baca:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000bacc:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000bad0:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000bad2:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000bad6:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000bada:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000bade:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000bae0:	6a20      	ldr	r0, [r4, #32]
9000bae2:	f100 0004 	add.w	r0, r0, #4
9000bae6:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000bae8:	f43f ac6b 	beq.w	9000b3c2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000baec:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000baee:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000baf0:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000baf4:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000baf6:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000baf8:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000bafa:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000bafe:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000bb00:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000bb04:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000bb08:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000bb0c:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000bb0e:	6a20      	ldr	r0, [r4, #32]
9000bb10:	f100 0004 	add.w	r0, r0, #4
9000bb14:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000bb16:	f43f ac54 	beq.w	9000b3c2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000bb1a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000bb1c:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000bb1e:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000bb22:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000bb24:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000bb26:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000bb28:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000bb2c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000bb2e:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000bb32:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000bb36:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000bb3a:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000bb3c:	6a20      	ldr	r0, [r4, #32]
9000bb3e:	f100 0004 	add.w	r0, r0, #4
9000bb42:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000bb44:	f47f ac3d 	bne.w	9000b3c2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000bb48:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000bb4a:	e5db      	b.n	9000b704 <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000bb4c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000bb4e:	4620      	mov	r0, r4
9000bb50:	69e1      	ldr	r1, [r4, #28]
9000bb52:	f7f5 fdab 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000bb56:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000bb58:	6265      	str	r5, [r4, #36]	; 0x24
9000bb5a:	e43e      	b.n	9000b3da <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000bb5c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000bb5e:	4620      	mov	r0, r4
9000bb60:	69e1      	ldr	r1, [r4, #28]
9000bb62:	f7f5 fda3 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000bb66:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000bb68:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000bb6a:	6262      	str	r2, [r4, #36]	; 0x24
9000bb6c:	e435      	b.n	9000b3da <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000bb6e:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000bb70:	69a0      	ldr	r0, [r4, #24]
9000bb72:	e5c7      	b.n	9000b704 <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000bb74:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000bb76:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000bb78:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000bb7a:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000bb7c:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000bb80:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000bb82:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000bb84:	d010      	beq.n	9000bba8 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000bb86:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000bb88:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000bb8a:	5c28      	ldrb	r0, [r5, r0]
9000bb8c:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000bb90:	6a20      	ldr	r0, [r4, #32]
9000bb92:	f100 0001 	add.w	r0, r0, #1
9000bb96:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000bb98:	d106      	bne.n	9000bba8 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000bb9a:	6a22      	ldr	r2, [r4, #32]
9000bb9c:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000bb9e:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000bba0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000bba4:	3201      	adds	r2, #1
9000bba6:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000bba8:	6419      	str	r1, [r3, #64]	; 0x40
9000bbaa:	e40a      	b.n	9000b3c2 <JPEG_Process+0x2a>

9000bbac <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000bbac:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000bbb0:	3b03      	subs	r3, #3
9000bbb2:	2b01      	cmp	r3, #1
9000bbb4:	d900      	bls.n	9000bbb8 <HAL_JPEG_IRQHandler+0xc>
9000bbb6:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000bbb8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bbba:	f003 030c 	and.w	r3, r3, #12
9000bbbe:	2b08      	cmp	r3, #8
{
9000bbc0:	b530      	push	{r4, r5, lr}
9000bbc2:	4604      	mov	r4, r0
9000bbc4:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000bbc6:	d006      	beq.n	9000bbd6 <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000bbc8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bbca:	f003 030c 	and.w	r3, r3, #12
9000bbce:	2b0c      	cmp	r3, #12
9000bbd0:	d006      	beq.n	9000bbe0 <HAL_JPEG_IRQHandler+0x34>
}
9000bbd2:	b003      	add	sp, #12
9000bbd4:	bd30      	pop	{r4, r5, pc}
9000bbd6:	b003      	add	sp, #12
9000bbd8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000bbdc:	f7ff bbdc 	b.w	9000b398 <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000bbe0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bbe2:	f003 0303 	and.w	r3, r3, #3
9000bbe6:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000bbe8:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000bbea:	d045      	beq.n	9000bc78 <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000bbec:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000bbee:	0692      	lsls	r2, r2, #26
9000bbf0:	d5ef      	bpl.n	9000bbd2 <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000bbf2:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000bbf4:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000bbf6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000bbfa:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000bbfc:	681a      	ldr	r2, [r3, #0]
9000bbfe:	f022 0201 	bic.w	r2, r2, #1
9000bc02:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000bc04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bc06:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000bc0a:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000bc0c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000bc0e:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000bc12:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000bc14:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000bc18:	2b02      	cmp	r3, #2
9000bc1a:	d052      	beq.n	9000bcc2 <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000bc1c:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000bc1e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000bc22:	2b02      	cmp	r3, #2
9000bc24:	d03f      	beq.n	9000bca6 <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000bc26:	6803      	ldr	r3, [r0, #0]
9000bc28:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000bc2a:	695b      	ldr	r3, [r3, #20]
9000bc2c:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000bc30:	1ad3      	subs	r3, r2, r3
9000bc32:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000bc34:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000bc36:	429a      	cmp	r2, r3
9000bc38:	d046      	beq.n	9000bcc8 <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000bc3a:	6822      	ldr	r2, [r4, #0]
9000bc3c:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000bc3e:	f015 0510 	ands.w	r5, r5, #16
9000bc42:	d135      	bne.n	9000bcb0 <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000bc44:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000bc46:	2b00      	cmp	r3, #0
9000bc48:	d149      	bne.n	9000bcde <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000bc4a:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000bc4c:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000bc4e:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000bc50:	f023 0301 	bic.w	r3, r3, #1
9000bc54:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000bc56:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000bc58:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000bc5a:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000bc5e:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000bc62:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000bc66:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000bc68:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000bc6a:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000bc6c:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000bc70:	d032      	beq.n	9000bcd8 <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000bc72:	f7ff f9c9 	bl	9000b008 <HAL_JPEG_EncodeCpltCallback>
9000bc76:	e7ac      	b.n	9000bbd2 <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000bc78:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000bc7a:	0651      	lsls	r1, r2, #25
9000bc7c:	d5b6      	bpl.n	9000bbec <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000bc7e:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000bc80:	9101      	str	r1, [sp, #4]
9000bc82:	f7fe ff33 	bl	9000aaec <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000bc86:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000bc88:	9901      	ldr	r1, [sp, #4]
9000bc8a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000bc8c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000bc8e:	f7f5 fcb7 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000bc92:	6823      	ldr	r3, [r4, #0]
9000bc94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bc96:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000bc9a:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000bc9c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000bc9e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000bca2:	639a      	str	r2, [r3, #56]	; 0x38
9000bca4:	e7a2      	b.n	9000bbec <HAL_JPEG_IRQHandler+0x40>
}
9000bca6:	b003      	add	sp, #12
9000bca8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000bcac:	f000 bb30 	b.w	9000c310 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000bcb0:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000bcb2:	049b      	lsls	r3, r3, #18
9000bcb4:	d48d      	bmi.n	9000bbd2 <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000bcb6:	4620      	mov	r0, r4
}
9000bcb8:	b003      	add	sp, #12
9000bcba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000bcbe:	f7ff ba0f 	b.w	9000b0e0 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000bcc2:	f000 fb25 	bl	9000c310 <HAL_MDMA_Abort_IT>
9000bcc6:	e7a9      	b.n	9000bc1c <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000bcc8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000bcca:	4620      	mov	r0, r4
9000bccc:	69e1      	ldr	r1, [r4, #28]
9000bcce:	f7f5 fced 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000bcd2:	2300      	movs	r3, #0
9000bcd4:	6263      	str	r3, [r4, #36]	; 0x24
9000bcd6:	e7b0      	b.n	9000bc3a <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000bcd8:	f7f5 fd3e 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
9000bcdc:	e779      	b.n	9000bbd2 <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000bcde:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000bce0:	4620      	mov	r0, r4
9000bce2:	69e1      	ldr	r1, [r4, #28]
9000bce4:	f7f5 fce2 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000bce8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000bcea:	6265      	str	r5, [r4, #36]	; 0x24
9000bcec:	e7ad      	b.n	9000bc4a <HAL_JPEG_IRQHandler+0x9e>
9000bcee:	bf00      	nop

9000bcf0 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000bcf0:	2800      	cmp	r0, #0
9000bcf2:	d067      	beq.n	9000bdc4 <HAL_LTDC_Init+0xd4>
{
9000bcf4:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000bcf6:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000bcfa:	4604      	mov	r4, r0
9000bcfc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000bd00:	2b00      	cmp	r3, #0
9000bd02:	d05a      	beq.n	9000bdba <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000bd04:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000bd06:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000bd08:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000bd0c:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000bd10:	4302      	orrs	r2, r0
9000bd12:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000bd14:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000bd16:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000bd18:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000bd1a:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000bd1e:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000bd20:	4929      	ldr	r1, [pc, #164]	; (9000bdc8 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000bd22:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000bd24:	6998      	ldr	r0, [r3, #24]
9000bd26:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000bd28:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000bd2a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000bd2c:	689a      	ldr	r2, [r3, #8]
9000bd2e:	400a      	ands	r2, r1
9000bd30:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000bd32:	689a      	ldr	r2, [r3, #8]
9000bd34:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000bd38:	69a0      	ldr	r0, [r4, #24]
9000bd3a:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000bd3c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000bd3e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000bd40:	68da      	ldr	r2, [r3, #12]
9000bd42:	400a      	ands	r2, r1
9000bd44:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000bd46:	68da      	ldr	r2, [r3, #12]
9000bd48:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000bd4c:	6a20      	ldr	r0, [r4, #32]
9000bd4e:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000bd50:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000bd52:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000bd54:	691a      	ldr	r2, [r3, #16]
9000bd56:	400a      	ands	r2, r1
9000bd58:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000bd5a:	691a      	ldr	r2, [r3, #16]
9000bd5c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000bd60:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000bd62:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000bd64:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000bd66:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000bd68:	695a      	ldr	r2, [r3, #20]
9000bd6a:	400a      	ands	r2, r1
9000bd6c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000bd6e:	695a      	ldr	r2, [r3, #20]
9000bd70:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000bd72:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000bd76:	430a      	orrs	r2, r1
9000bd78:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000bd7a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000bd7c:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000bd80:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000bd84:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000bd88:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000bd8a:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000bd8c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000bd90:	432a      	orrs	r2, r5
9000bd92:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000bd96:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000bd98:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000bd9c:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000bd9e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000bda0:	f042 0206 	orr.w	r2, r2, #6
9000bda4:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000bda6:	699a      	ldr	r2, [r3, #24]
9000bda8:	f042 0201 	orr.w	r2, r2, #1
9000bdac:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000bdae:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000bdb0:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000bdb4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000bdb8:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000bdba:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000bdbe:	f7f7 f9a9 	bl	90003114 <HAL_LTDC_MspInit>
9000bdc2:	e79f      	b.n	9000bd04 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000bdc4:	2001      	movs	r0, #1
}
9000bdc6:	4770      	bx	lr
9000bdc8:	f000f800 	.word	0xf000f800

9000bdcc <HAL_LTDC_ErrorCallback>:
9000bdcc:	4770      	bx	lr
9000bdce:	bf00      	nop

9000bdd0 <HAL_LTDC_ReloadEventCallback>:
9000bdd0:	4770      	bx	lr
9000bdd2:	bf00      	nop

9000bdd4 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000bdd4:	6803      	ldr	r3, [r0, #0]
{
9000bdd6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000bdd8:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000bdda:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000bddc:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000bdde:	076a      	lsls	r2, r5, #29
9000bde0:	d501      	bpl.n	9000bde6 <HAL_LTDC_IRQHandler+0x12>
9000bde2:	0771      	lsls	r1, r6, #29
9000bde4:	d41d      	bmi.n	9000be22 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000bde6:	07aa      	lsls	r2, r5, #30
9000bde8:	d501      	bpl.n	9000bdee <HAL_LTDC_IRQHandler+0x1a>
9000bdea:	07b3      	lsls	r3, r6, #30
9000bdec:	d42d      	bmi.n	9000be4a <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000bdee:	07e8      	lsls	r0, r5, #31
9000bdf0:	d501      	bpl.n	9000bdf6 <HAL_LTDC_IRQHandler+0x22>
9000bdf2:	07f1      	lsls	r1, r6, #31
9000bdf4:	d440      	bmi.n	9000be78 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000bdf6:	072a      	lsls	r2, r5, #28
9000bdf8:	d501      	bpl.n	9000bdfe <HAL_LTDC_IRQHandler+0x2a>
9000bdfa:	0733      	lsls	r3, r6, #28
9000bdfc:	d400      	bmi.n	9000be00 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000bdfe:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000be00:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000be02:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000be04:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000be06:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000be08:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000be0a:	f022 0208 	bic.w	r2, r2, #8
9000be0e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000be10:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000be12:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000be14:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000be18:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000be1c:	f7ff ffd8 	bl	9000bdd0 <HAL_LTDC_ReloadEventCallback>
}
9000be20:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000be22:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000be24:	f022 0204 	bic.w	r2, r2, #4
9000be28:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000be2a:	2204      	movs	r2, #4
9000be2c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000be2e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000be32:	f043 0301 	orr.w	r3, r3, #1
9000be36:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000be3a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000be3c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000be40:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000be44:	f7ff ffc2 	bl	9000bdcc <HAL_LTDC_ErrorCallback>
9000be48:	e7cd      	b.n	9000bde6 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000be4a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000be4c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000be4e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000be50:	f022 0202 	bic.w	r2, r2, #2
9000be54:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000be56:	2202      	movs	r2, #2
9000be58:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000be5a:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000be5c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000be60:	f043 0302 	orr.w	r3, r3, #2
9000be64:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000be68:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000be6a:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000be6e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000be72:	f7ff ffab 	bl	9000bdcc <HAL_LTDC_ErrorCallback>
9000be76:	e7ba      	b.n	9000bdee <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000be78:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000be7a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000be7c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000be7e:	f022 0201 	bic.w	r2, r2, #1
9000be82:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000be84:	2201      	movs	r2, #1
9000be86:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000be88:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000be8a:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000be8e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000be92:	f7f6 fcb5 	bl	90002800 <HAL_LTDC_LineEventCallback>
9000be96:	e7ae      	b.n	9000bdf6 <HAL_LTDC_IRQHandler+0x22>

9000be98 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000be98:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000be9c:	2b01      	cmp	r3, #1
9000be9e:	f000 80c0 	beq.w	9000c022 <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000bea2:	2302      	movs	r3, #2
{
9000bea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000bea8:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000beac:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000beb0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000beb4:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000beb6:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000beba:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000bebc:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000bec0:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000bec2:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000bec6:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000bec8:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000becc:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000bece:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000bed2:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000bed6:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000c038 <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000beda:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000bede:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000bee2:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000bee4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000bee6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000beea:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000beec:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000beee:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000bef2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000bef4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000bef8:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000befa:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000befc:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000bf00:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000bf02:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000bf04:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000bf08:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000bf0c:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000bf0e:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000bf10:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000bf14:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000bf18:	440b      	add	r3, r1
9000bf1a:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000bf1e:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000bf22:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000bf26:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000bf2a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000bf2e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000bf32:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000bf34:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000bf38:	68ab      	ldr	r3, [r5, #8]
9000bf3a:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000bf3e:	3301      	adds	r3, #1
9000bf40:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000bf44:	4403      	add	r3, r0
9000bf46:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000bf4a:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000bf4c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000bf50:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000bf54:	f023 0307 	bic.w	r3, r3, #7
9000bf58:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000bf5c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000bf60:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000bf64:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000bf66:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000bf6a:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000bf6e:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000bf72:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000bf76:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000bf7a:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000bf7e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000bf82:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000bf86:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000bf8a:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000bf8e:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000bf92:	696b      	ldr	r3, [r5, #20]
9000bf94:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000bf98:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000bf9c:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000bf9e:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000bfa2:	6a28      	ldr	r0, [r5, #32]
9000bfa4:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000bfa6:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000bfaa:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000bfae:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000bfb2:	2300      	movs	r3, #0
9000bfb4:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000bfb8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000bfba:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000bfbe:	bb59      	cbnz	r1, 9000c018 <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000bfc0:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000bfc2:	1abf      	subs	r7, r7, r2
9000bfc4:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000bfc6:	fb03 f707 	mul.w	r7, r3, r7
9000bfca:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000bfce:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000bfd0:	3707      	adds	r7, #7
9000bfd2:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000bfd6:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000bfda:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000bfde:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000bfe2:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000bfe6:	4b12      	ldr	r3, [pc, #72]	; (9000c030 <HAL_LTDC_ConfigLayer+0x198>)
9000bfe8:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000bfec:	400b      	ands	r3, r1
9000bfee:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000bff2:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000bff6:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000bff8:	f859 3006 	ldr.w	r3, [r9, r6]
9000bffc:	4313      	orrs	r3, r2
9000bffe:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000c002:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000c004:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000c008:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000c00a:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000c00e:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000c012:	b003      	add	sp, #12
9000c014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000c018:	3901      	subs	r1, #1
9000c01a:	2906      	cmp	r1, #6
9000c01c:	d903      	bls.n	9000c026 <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000c01e:	2301      	movs	r3, #1
9000c020:	e7cf      	b.n	9000bfc2 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000c022:	2002      	movs	r0, #2
}
9000c024:	4770      	bx	lr
9000c026:	4b03      	ldr	r3, [pc, #12]	; (9000c034 <HAL_LTDC_ConfigLayer+0x19c>)
9000c028:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000c02c:	e7c9      	b.n	9000bfc2 <HAL_LTDC_ConfigLayer+0x12a>
9000c02e:	bf00      	nop
9000c030:	fffff800 	.word	0xfffff800
9000c034:	9002be48 	.word	0x9002be48
9000c038:	fffff8f8 	.word	0xfffff8f8

9000c03c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000c03c:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000c040:	2a01      	cmp	r2, #1
9000c042:	d019      	beq.n	9000c078 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000c044:	6802      	ldr	r2, [r0, #0]
9000c046:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000c048:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000c04a:	f04f 0c00 	mov.w	ip, #0
{
9000c04e:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000c050:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000c054:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000c056:	4c09      	ldr	r4, [pc, #36]	; (9000c07c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000c058:	f020 0001 	bic.w	r0, r0, #1
9000c05c:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000c05e:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000c060:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000c062:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000c064:	4301      	orrs	r1, r0
9000c066:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000c068:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000c06c:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000c06e:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000c072:	f85d 4b04 	ldr.w	r4, [sp], #4
9000c076:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000c078:	2002      	movs	r0, #2
}
9000c07a:	4770      	bx	lr
9000c07c:	50001000 	.word	0x50001000

9000c080 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000c080:	b538      	push	{r3, r4, r5, lr}
9000c082:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000c084:	f7fd f984 	bl	90009390 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000c088:	2c00      	cmp	r4, #0
9000c08a:	d05a      	beq.n	9000c142 <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000c08c:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000c08e:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000c090:	2100      	movs	r1, #0
9000c092:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000c094:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000c098:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000c09c:	68da      	ldr	r2, [r3, #12]
9000c09e:	f022 0201 	bic.w	r2, r2, #1
9000c0a2:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000c0a4:	e005      	b.n	9000c0b2 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000c0a6:	f7fd f973 	bl	90009390 <HAL_GetTick>
9000c0aa:	1b43      	subs	r3, r0, r5
9000c0ac:	2b05      	cmp	r3, #5
9000c0ae:	d841      	bhi.n	9000c134 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000c0b0:	6823      	ldr	r3, [r4, #0]
9000c0b2:	68da      	ldr	r2, [r3, #12]
9000c0b4:	07d2      	lsls	r2, r2, #31
9000c0b6:	d4f6      	bmi.n	9000c0a6 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000c0b8:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000c0bc:	69e0      	ldr	r0, [r4, #28]
9000c0be:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000c0c0:	68e1      	ldr	r1, [r4, #12]
9000c0c2:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000c0c4:	4302      	orrs	r2, r0
9000c0c6:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000c0c8:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000c0ca:	4302      	orrs	r2, r0
9000c0cc:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000c0ce:	4302      	orrs	r2, r0
9000c0d0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000c0d2:	4302      	orrs	r2, r0
9000c0d4:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000c0d6:	4302      	orrs	r2, r0
9000c0d8:	68a0      	ldr	r0, [r4, #8]
9000c0da:	4302      	orrs	r2, r0
9000c0dc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000c0de:	3801      	subs	r0, #1
9000c0e0:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000c0e4:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000c0e6:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000c0e8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000c0ec:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000c0ee:	d103      	bne.n	9000c0f8 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000c0f0:	691a      	ldr	r2, [r3, #16]
9000c0f2:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000c0f6:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000c0f8:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000c0fa:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000c0fc:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000c0fe:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000c100:	db30      	blt.n	9000c164 <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000c102:	b292      	uxth	r2, r2
9000c104:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000c106:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000c108:	2a00      	cmp	r2, #0
9000c10a:	db1c      	blt.n	9000c146 <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000c10c:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000c10e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000c112:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000c116:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000c118:	d021      	beq.n	9000c15e <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000c11a:	b2c0      	uxtb	r0, r0
9000c11c:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000c11e:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000c120:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000c122:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000c124:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000c126:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000c128:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000c12a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000c12e:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000c132:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000c134:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000c136:	2303      	movs	r3, #3
      return HAL_ERROR;
9000c138:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000c13a:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000c13c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000c140:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000c142:	2001      	movs	r0, #1
}
9000c144:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000c146:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000c148:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000c14a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000c14e:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000c152:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000c154:	6a19      	ldr	r1, [r3, #32]
9000c156:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000c15a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000c15c:	d1dd      	bne.n	9000c11a <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000c15e:	2200      	movs	r2, #0
9000c160:	629a      	str	r2, [r3, #40]	; 0x28
9000c162:	e7dc      	b.n	9000c11e <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000c164:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000c166:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000c168:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000c16c:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000c16e:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000c170:	621a      	str	r2, [r3, #32]
9000c172:	e7c8      	b.n	9000c106 <HAL_MDMA_Init+0x86>

9000c174 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000c174:	b1f8      	cbz	r0, 9000c1b6 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000c176:	6802      	ldr	r2, [r0, #0]
9000c178:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000c17a:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000c17c:	68d0      	ldr	r0, [r2, #12]
{
9000c17e:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000c180:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000c184:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000c186:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000c188:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000c18a:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000c18c:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000c18e:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000c190:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000c192:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000c194:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000c196:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000c198:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000c19a:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000c19c:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000c19e:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000c1a0:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000c1a2:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000c1a6:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000c1aa:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000c1ae:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000c1b0:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000c1b4:	4770      	bx	lr
    return HAL_ERROR;
9000c1b6:	2001      	movs	r0, #1
}
9000c1b8:	4770      	bx	lr
9000c1ba:	bf00      	nop

9000c1bc <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000c1bc:	b310      	cbz	r0, 9000c204 <HAL_MDMA_ConfigPostRequestMask+0x48>
9000c1be:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000c1c0:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000c1c4:	2801      	cmp	r0, #1
9000c1c6:	d01f      	beq.n	9000c208 <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000c1c8:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000c1ca:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000c1ce:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000c1d2:	45f4      	cmp	ip, lr
9000c1d4:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000c1d8:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000c1dc:	d004      	beq.n	9000c1e8 <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000c1de:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000c1e0:	2200      	movs	r2, #0
9000c1e2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000c1e6:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000c1e8:	681d      	ldr	r5, [r3, #0]
9000c1ea:	692c      	ldr	r4, [r5, #16]
9000c1ec:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000c1f0:	d1f6      	bne.n	9000c1e0 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000c1f2:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000c1f4:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000c1f6:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000c1f8:	b941      	cbnz	r1, 9000c20c <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000c1fa:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000c1fe:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000c200:	612a      	str	r2, [r5, #16]
9000c202:	e7ed      	b.n	9000c1e0 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000c204:	2001      	movs	r0, #1
9000c206:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000c208:	2002      	movs	r0, #2
}
9000c20a:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000c20c:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000c210:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000c212:	612a      	str	r2, [r5, #16]
9000c214:	e7e4      	b.n	9000c1e0 <HAL_MDMA_ConfigPostRequestMask+0x24>
9000c216:	bf00      	nop

9000c218 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000c218:	2800      	cmp	r0, #0
9000c21a:	d06f      	beq.n	9000c2fc <HAL_MDMA_Start_IT+0xe4>
9000c21c:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000c21e:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000c222:	2801      	cmp	r0, #1
9000c224:	d072      	beq.n	9000c30c <HAL_MDMA_Start_IT+0xf4>
9000c226:	2001      	movs	r0, #1
9000c228:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000c22c:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000c230:	2801      	cmp	r0, #1
9000c232:	d004      	beq.n	9000c23e <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000c234:	2300      	movs	r3, #0
    return HAL_BUSY;
9000c236:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000c238:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000c23c:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000c23e:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000c240:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000c244:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000c248:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000c24a:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000c24c:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000c250:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000c254:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000c258:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000c25c:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000c260:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000c264:	68e5      	ldr	r5, [r4, #12]
9000c266:	f025 0501 	bic.w	r5, r5, #1
9000c26a:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000c26c:	6965      	ldr	r5, [r4, #20]
9000c26e:	ea00 0005 	and.w	r0, r0, r5
9000c272:	ea40 0003 	orr.w	r0, r0, r3
9000c276:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000c278:	6963      	ldr	r3, [r4, #20]
9000c27a:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000c27e:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000c282:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000c284:	f04f 031f 	mov.w	r3, #31
9000c288:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000c28a:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000c28c:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000c28e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c290:	bf0c      	ite	eq
9000c292:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000c296:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000c29a:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000c29e:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000c2a2:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000c2a4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c2a6:	bf0c      	ite	eq
9000c2a8:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000c2ac:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000c2b0:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000c2b2:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000c2b6:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000c2b8:	68e3      	ldr	r3, [r4, #12]
9000c2ba:	f043 0306 	orr.w	r3, r3, #6
9000c2be:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000c2c0:	b11a      	cbz	r2, 9000c2ca <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000c2c2:	68e3      	ldr	r3, [r4, #12]
9000c2c4:	f043 0310 	orr.w	r3, r3, #16
9000c2c8:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000c2ca:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000c2ce:	b11b      	cbz	r3, 9000c2d8 <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000c2d0:	68e3      	ldr	r3, [r4, #12]
9000c2d2:	f043 0308 	orr.w	r3, r3, #8
9000c2d6:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000c2d8:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000c2dc:	b11b      	cbz	r3, 9000c2e6 <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000c2de:	68e3      	ldr	r3, [r4, #12]
9000c2e0:	f043 0320 	orr.w	r3, r3, #32
9000c2e4:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000c2e6:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000c2e8:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000c2ec:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000c2f0:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000c2f4:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000c2f6:	d003      	beq.n	9000c300 <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000c2f8:	2000      	movs	r0, #0
}
9000c2fa:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000c2fc:	2001      	movs	r0, #1
9000c2fe:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000c300:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000c302:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000c304:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000c308:	60e3      	str	r3, [r4, #12]
}
9000c30a:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000c30c:	2002      	movs	r0, #2
}
9000c30e:	4770      	bx	lr

9000c310 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000c310:	4603      	mov	r3, r0
9000c312:	b188      	cbz	r0, 9000c338 <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000c314:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000c318:	2a02      	cmp	r2, #2
9000c31a:	d003      	beq.n	9000c324 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000c31c:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000c31e:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000c320:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000c322:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000c324:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000c326:	2104      	movs	r1, #4
  return HAL_OK;
9000c328:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000c32a:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000c32e:	68d3      	ldr	r3, [r2, #12]
9000c330:	f023 0301 	bic.w	r3, r3, #1
9000c334:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000c336:	4770      	bx	lr
    return HAL_ERROR;
9000c338:	2001      	movs	r0, #1
}
9000c33a:	4770      	bx	lr

9000c33c <HAL_MDMA_IRQHandler>:
{
9000c33c:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000c33e:	2300      	movs	r3, #0
{
9000c340:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000c342:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000c346:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000c348:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000c34a:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000c34c:	4b57      	ldr	r3, [pc, #348]	; (9000c4ac <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000c34e:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000c350:	4a57      	ldr	r2, [pc, #348]	; (9000c4b0 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000c352:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000c354:	6823      	ldr	r3, [r4, #0]
9000c356:	441a      	add	r2, r3
9000c358:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000c35c:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000c360:	4202      	tst	r2, r0
9000c362:	f000 80a0 	beq.w	9000c4a6 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000c366:	681a      	ldr	r2, [r3, #0]
9000c368:	07d1      	lsls	r1, r2, #31
9000c36a:	d529      	bpl.n	9000c3c0 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000c36c:	68da      	ldr	r2, [r3, #12]
9000c36e:	0792      	lsls	r2, r2, #30
9000c370:	d526      	bpl.n	9000c3c0 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000c372:	68da      	ldr	r2, [r3, #12]
9000c374:	f022 0202 	bic.w	r2, r2, #2
9000c378:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000c37a:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000c37c:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000c37e:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000c380:	bf54      	ite	pl
9000c382:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000c386:	f041 0102 	orrmi.w	r1, r1, #2
9000c38a:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000c38c:	0591      	lsls	r1, r2, #22
9000c38e:	d503      	bpl.n	9000c398 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000c390:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000c392:	f041 0104 	orr.w	r1, r1, #4
9000c396:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000c398:	05d0      	lsls	r0, r2, #23
9000c39a:	d503      	bpl.n	9000c3a4 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000c39c:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000c39e:	f041 0108 	orr.w	r1, r1, #8
9000c3a2:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000c3a4:	0551      	lsls	r1, r2, #21
9000c3a6:	d503      	bpl.n	9000c3b0 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000c3a8:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000c3aa:	f041 0110 	orr.w	r1, r1, #16
9000c3ae:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000c3b0:	0510      	lsls	r0, r2, #20
9000c3b2:	d503      	bpl.n	9000c3bc <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000c3b4:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000c3b6:	f042 0220 	orr.w	r2, r2, #32
9000c3ba:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000c3bc:	2201      	movs	r2, #1
9000c3be:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000c3c0:	681a      	ldr	r2, [r3, #0]
9000c3c2:	06d1      	lsls	r1, r2, #27
9000c3c4:	d509      	bpl.n	9000c3da <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000c3c6:	68da      	ldr	r2, [r3, #12]
9000c3c8:	0692      	lsls	r2, r2, #26
9000c3ca:	d506      	bpl.n	9000c3da <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000c3cc:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000c3ce:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000c3d0:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000c3d2:	b112      	cbz	r2, 9000c3da <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000c3d4:	4620      	mov	r0, r4
9000c3d6:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000c3d8:	6823      	ldr	r3, [r4, #0]
9000c3da:	681a      	ldr	r2, [r3, #0]
9000c3dc:	0710      	lsls	r0, r2, #28
9000c3de:	d509      	bpl.n	9000c3f4 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000c3e0:	68da      	ldr	r2, [r3, #12]
9000c3e2:	06d1      	lsls	r1, r2, #27
9000c3e4:	d506      	bpl.n	9000c3f4 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000c3e6:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000c3e8:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000c3ea:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000c3ec:	b112      	cbz	r2, 9000c3f4 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000c3ee:	4620      	mov	r0, r4
9000c3f0:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000c3f2:	6823      	ldr	r3, [r4, #0]
9000c3f4:	681a      	ldr	r2, [r3, #0]
9000c3f6:	0752      	lsls	r2, r2, #29
9000c3f8:	d509      	bpl.n	9000c40e <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000c3fa:	68da      	ldr	r2, [r3, #12]
9000c3fc:	0710      	lsls	r0, r2, #28
9000c3fe:	d506      	bpl.n	9000c40e <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000c400:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000c402:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000c404:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000c406:	b112      	cbz	r2, 9000c40e <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000c408:	4620      	mov	r0, r4
9000c40a:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000c40c:	6823      	ldr	r3, [r4, #0]
9000c40e:	681a      	ldr	r2, [r3, #0]
9000c410:	0791      	lsls	r1, r2, #30
9000c412:	d516      	bpl.n	9000c442 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000c414:	68da      	ldr	r2, [r3, #12]
9000c416:	0752      	lsls	r2, r2, #29
9000c418:	d513      	bpl.n	9000c442 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000c41a:	68da      	ldr	r2, [r3, #12]
9000c41c:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000c420:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000c422:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000c426:	2a04      	cmp	r2, #4
9000c428:	d034      	beq.n	9000c494 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000c42a:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000c42c:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000c42e:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000c430:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000c432:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000c434:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000c438:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000c43c:	b10b      	cbz	r3, 9000c442 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000c43e:	4620      	mov	r0, r4
9000c440:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000c442:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000c444:	2b00      	cmp	r3, #0
9000c446:	d02e      	beq.n	9000c4a6 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000c448:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000c44a:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000c44c:	4b19      	ldr	r3, [pc, #100]	; (9000c4b4 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000c44e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000c452:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000c456:	68cb      	ldr	r3, [r1, #12]
9000c458:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000c45c:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000c45e:	60cb      	str	r3, [r1, #12]
9000c460:	e002      	b.n	9000c468 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000c462:	68cb      	ldr	r3, [r1, #12]
9000c464:	07d8      	lsls	r0, r3, #31
9000c466:	d504      	bpl.n	9000c472 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000c468:	9b01      	ldr	r3, [sp, #4]
9000c46a:	3301      	adds	r3, #1
9000c46c:	4293      	cmp	r3, r2
9000c46e:	9301      	str	r3, [sp, #4]
9000c470:	d9f7      	bls.n	9000c462 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000c472:	2300      	movs	r3, #0
9000c474:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000c478:	68cb      	ldr	r3, [r1, #12]
9000c47a:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000c47c:	bf4c      	ite	mi
9000c47e:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000c480:	2301      	movpl	r3, #1
9000c482:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000c486:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c488:	b16b      	cbz	r3, 9000c4a6 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000c48a:	4620      	mov	r0, r4
}
9000c48c:	b003      	add	sp, #12
9000c48e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000c492:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000c494:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000c496:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000c498:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000c49a:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000c49e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000c4a2:	2b00      	cmp	r3, #0
9000c4a4:	d1f1      	bne.n	9000c48a <HAL_MDMA_IRQHandler+0x14e>
}
9000c4a6:	b003      	add	sp, #12
9000c4a8:	bd30      	pop	{r4, r5, pc}
9000c4aa:	bf00      	nop
9000c4ac:	2400006c 	.word	0x2400006c
9000c4b0:	adffffc0 	.word	0xadffffc0
9000c4b4:	1b4e81b5 	.word	0x1b4e81b5

9000c4b8 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000c4b8:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000c4ba:	4c10      	ldr	r4, [pc, #64]	; (9000c4fc <HAL_PWREx_ConfigSupply+0x44>)
9000c4bc:	68e3      	ldr	r3, [r4, #12]
9000c4be:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000c4c2:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000c4c4:	d105      	bne.n	9000c4d2 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000c4c6:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000c4ca:	1a18      	subs	r0, r3, r0
9000c4cc:	bf18      	it	ne
9000c4ce:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000c4d0:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000c4d2:	f023 0307 	bic.w	r3, r3, #7
9000c4d6:	4303      	orrs	r3, r0
9000c4d8:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000c4da:	f7fc ff59 	bl	90009390 <HAL_GetTick>
9000c4de:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000c4e0:	e005      	b.n	9000c4ee <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000c4e2:	f7fc ff55 	bl	90009390 <HAL_GetTick>
9000c4e6:	1b40      	subs	r0, r0, r5
9000c4e8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000c4ec:	d804      	bhi.n	9000c4f8 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000c4ee:	6863      	ldr	r3, [r4, #4]
9000c4f0:	049b      	lsls	r3, r3, #18
9000c4f2:	d5f6      	bpl.n	9000c4e2 <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000c4f4:	2000      	movs	r0, #0
}
9000c4f6:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000c4f8:	2001      	movs	r0, #1
}
9000c4fa:	bd38      	pop	{r3, r4, r5, pc}
9000c4fc:	58024800 	.word	0x58024800

9000c500 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c500:	4b3b      	ldr	r3, [pc, #236]	; (9000c5f0 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000c502:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c504:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c506:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c508:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000c50a:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c50e:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c510:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000c514:	d038      	beq.n	9000c588 <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c516:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c51a:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c51e:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c522:	fb05 f101 	mul.w	r1, r5, r1
9000c526:	2a01      	cmp	r2, #1
9000c528:	ee07 1a90 	vmov	s15, r1
9000c52c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000c530:	d002      	beq.n	9000c538 <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000c532:	2a02      	cmp	r2, #2
9000c534:	d04e      	beq.n	9000c5d4 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000c536:	b34a      	cbz	r2, 9000c58c <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c538:	ee07 0a90 	vmov	s15, r0
9000c53c:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000c5f4 <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000c540:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c544:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000c546:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000c54a:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000c5f8 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000c54e:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c552:	ee07 3a90 	vmov	s15, r3
9000c556:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000c55a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c55e:	eee7 7a25 	vfma.f32	s15, s14, s11
9000c562:	ee77 7a86 	vadd.f32	s15, s15, s12
9000c566:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000c56a:	4b21      	ldr	r3, [pc, #132]	; (9000c5f0 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000c56c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000c56e:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c572:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000c574:	ee07 3a90 	vmov	s15, r3
9000c578:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c57c:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000c580:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000c584:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000c588:	bc30      	pop	{r4, r5}
9000c58a:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c58c:	681a      	ldr	r2, [r3, #0]
9000c58e:	0692      	lsls	r2, r2, #26
9000c590:	d527      	bpl.n	9000c5e2 <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c592:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c594:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c598:	4a18      	ldr	r2, [pc, #96]	; (9000c5fc <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c59a:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000c59e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c5a0:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c5a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c5a8:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000c5f8 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000c5ac:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c5b0:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c5b2:	ee06 3a90 	vmov	s13, r3
9000c5b6:	ee06 2a10 	vmov	s12, r2
9000c5ba:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c5be:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c5c2:	eee7 6a05 	vfma.f32	s13, s14, s10
9000c5c6:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000c5ca:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000c5ce:	ee66 6a87 	vmul.f32	s13, s13, s14
9000c5d2:	e7ca      	b.n	9000c56a <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c5d4:	ee07 0a90 	vmov	s15, r0
9000c5d8:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000c600 <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000c5dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c5e0:	e7b0      	b.n	9000c544 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c5e2:	ee07 0a90 	vmov	s15, r0
9000c5e6:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000c604 <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000c5ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c5ee:	e7a9      	b.n	9000c544 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000c5f0:	58024400 	.word	0x58024400
9000c5f4:	4a742400 	.word	0x4a742400
9000c5f8:	39000000 	.word	0x39000000
9000c5fc:	03d09000 	.word	0x03d09000
9000c600:	4bbebc20 	.word	0x4bbebc20
9000c604:	4c742400 	.word	0x4c742400

9000c608 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000c608:	2800      	cmp	r0, #0
9000c60a:	f000 81e8 	beq.w	9000c9de <HAL_RCC_OscConfig+0x3d6>
{
9000c60e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000c610:	6803      	ldr	r3, [r0, #0]
9000c612:	4604      	mov	r4, r0
9000c614:	07d9      	lsls	r1, r3, #31
9000c616:	d52e      	bpl.n	9000c676 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c618:	49a4      	ldr	r1, [pc, #656]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
9000c61a:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c61c:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c61e:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000c622:	2a10      	cmp	r2, #16
9000c624:	f000 8107 	beq.w	9000c836 <HAL_RCC_OscConfig+0x22e>
9000c628:	2a18      	cmp	r2, #24
9000c62a:	f000 80ff 	beq.w	9000c82c <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c62e:	6863      	ldr	r3, [r4, #4]
9000c630:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000c634:	f000 812a 	beq.w	9000c88c <HAL_RCC_OscConfig+0x284>
9000c638:	2b00      	cmp	r3, #0
9000c63a:	f000 8168 	beq.w	9000c90e <HAL_RCC_OscConfig+0x306>
9000c63e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000c642:	4b9a      	ldr	r3, [pc, #616]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
9000c644:	681a      	ldr	r2, [r3, #0]
9000c646:	f000 8289 	beq.w	9000cb5c <HAL_RCC_OscConfig+0x554>
9000c64a:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000c64e:	601a      	str	r2, [r3, #0]
9000c650:	681a      	ldr	r2, [r3, #0]
9000c652:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000c656:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000c658:	f7fc fe9a 	bl	90009390 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c65c:	4e93      	ldr	r6, [pc, #588]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000c65e:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c660:	e005      	b.n	9000c66e <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000c662:	f7fc fe95 	bl	90009390 <HAL_GetTick>
9000c666:	1b40      	subs	r0, r0, r5
9000c668:	2864      	cmp	r0, #100	; 0x64
9000c66a:	f200 814e 	bhi.w	9000c90a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c66e:	6833      	ldr	r3, [r6, #0]
9000c670:	039b      	lsls	r3, r3, #14
9000c672:	d5f6      	bpl.n	9000c662 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000c674:	6823      	ldr	r3, [r4, #0]
9000c676:	079d      	lsls	r5, r3, #30
9000c678:	f100 808a 	bmi.w	9000c790 <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c67c:	06d9      	lsls	r1, r3, #27
9000c67e:	d533      	bpl.n	9000c6e8 <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c680:	4a8a      	ldr	r2, [pc, #552]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
9000c682:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c684:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c686:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000c68a:	2b08      	cmp	r3, #8
9000c68c:	f000 80e3 	beq.w	9000c856 <HAL_RCC_OscConfig+0x24e>
9000c690:	2b18      	cmp	r3, #24
9000c692:	f000 80db 	beq.w	9000c84c <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000c696:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000c698:	4d84      	ldr	r5, [pc, #528]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000c69a:	2b00      	cmp	r3, #0
9000c69c:	f000 816f 	beq.w	9000c97e <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000c6a0:	682b      	ldr	r3, [r5, #0]
9000c6a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000c6a6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c6a8:	f7fc fe72 	bl	90009390 <HAL_GetTick>
9000c6ac:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c6ae:	e005      	b.n	9000c6bc <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000c6b0:	f7fc fe6e 	bl	90009390 <HAL_GetTick>
9000c6b4:	1b80      	subs	r0, r0, r6
9000c6b6:	2802      	cmp	r0, #2
9000c6b8:	f200 8127 	bhi.w	9000c90a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c6bc:	682b      	ldr	r3, [r5, #0]
9000c6be:	05db      	lsls	r3, r3, #23
9000c6c0:	d5f6      	bpl.n	9000c6b0 <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c6c2:	f7fc fe6b 	bl	9000939c <HAL_GetREVID>
9000c6c6:	f241 0303 	movw	r3, #4099	; 0x1003
9000c6ca:	4298      	cmp	r0, r3
9000c6cc:	f200 826d 	bhi.w	9000cbaa <HAL_RCC_OscConfig+0x5a2>
9000c6d0:	6a22      	ldr	r2, [r4, #32]
9000c6d2:	686b      	ldr	r3, [r5, #4]
9000c6d4:	2a20      	cmp	r2, #32
9000c6d6:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000c6da:	bf0c      	ite	eq
9000c6dc:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000c6e0:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000c6e4:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c6e6:	6823      	ldr	r3, [r4, #0]
9000c6e8:	071d      	lsls	r5, r3, #28
9000c6ea:	d516      	bpl.n	9000c71a <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000c6ec:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000c6ee:	4d6f      	ldr	r5, [pc, #444]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000c6f0:	2b00      	cmp	r3, #0
9000c6f2:	f000 8122 	beq.w	9000c93a <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000c6f6:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000c6f8:	f043 0301 	orr.w	r3, r3, #1
9000c6fc:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000c6fe:	f7fc fe47 	bl	90009390 <HAL_GetTick>
9000c702:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000c704:	e005      	b.n	9000c712 <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000c706:	f7fc fe43 	bl	90009390 <HAL_GetTick>
9000c70a:	1b80      	subs	r0, r0, r6
9000c70c:	2802      	cmp	r0, #2
9000c70e:	f200 80fc 	bhi.w	9000c90a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000c712:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000c714:	0798      	lsls	r0, r3, #30
9000c716:	d5f6      	bpl.n	9000c706 <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000c718:	6823      	ldr	r3, [r4, #0]
9000c71a:	069a      	lsls	r2, r3, #26
9000c71c:	d516      	bpl.n	9000c74c <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000c71e:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000c720:	4d62      	ldr	r5, [pc, #392]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000c722:	2b00      	cmp	r3, #0
9000c724:	f000 811a 	beq.w	9000c95c <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000c728:	682b      	ldr	r3, [r5, #0]
9000c72a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000c72e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000c730:	f7fc fe2e 	bl	90009390 <HAL_GetTick>
9000c734:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000c736:	e005      	b.n	9000c744 <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000c738:	f7fc fe2a 	bl	90009390 <HAL_GetTick>
9000c73c:	1b80      	subs	r0, r0, r6
9000c73e:	2802      	cmp	r0, #2
9000c740:	f200 80e3 	bhi.w	9000c90a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000c744:	682b      	ldr	r3, [r5, #0]
9000c746:	049f      	lsls	r7, r3, #18
9000c748:	d5f6      	bpl.n	9000c738 <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000c74a:	6823      	ldr	r3, [r4, #0]
9000c74c:	0759      	lsls	r1, r3, #29
9000c74e:	f100 80a3 	bmi.w	9000c898 <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000c752:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000c754:	b1d0      	cbz	r0, 9000c78c <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000c756:	4d55      	ldr	r5, [pc, #340]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
9000c758:	692b      	ldr	r3, [r5, #16]
9000c75a:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000c75e:	2b18      	cmp	r3, #24
9000c760:	f000 81ae 	beq.w	9000cac0 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000c764:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000c766:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000c768:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000c76c:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000c76e:	f000 8142 	beq.w	9000c9f6 <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000c772:	f7fc fe0d 	bl	90009390 <HAL_GetTick>
9000c776:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c778:	e005      	b.n	9000c786 <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c77a:	f7fc fe09 	bl	90009390 <HAL_GetTick>
9000c77e:	1b00      	subs	r0, r0, r4
9000c780:	2802      	cmp	r0, #2
9000c782:	f200 80c2 	bhi.w	9000c90a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c786:	682b      	ldr	r3, [r5, #0]
9000c788:	019b      	lsls	r3, r3, #6
9000c78a:	d4f6      	bmi.n	9000c77a <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000c78c:	2000      	movs	r0, #0
}
9000c78e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c790:	4a46      	ldr	r2, [pc, #280]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
9000c792:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c794:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000c796:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000c79a:	d12d      	bne.n	9000c7f8 <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000c79c:	4b43      	ldr	r3, [pc, #268]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
9000c79e:	68e2      	ldr	r2, [r4, #12]
9000c7a0:	681b      	ldr	r3, [r3, #0]
9000c7a2:	0759      	lsls	r1, r3, #29
9000c7a4:	d501      	bpl.n	9000c7aa <HAL_RCC_OscConfig+0x1a2>
9000c7a6:	2a00      	cmp	r2, #0
9000c7a8:	d04e      	beq.n	9000c848 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000c7aa:	4d40      	ldr	r5, [pc, #256]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
9000c7ac:	682b      	ldr	r3, [r5, #0]
9000c7ae:	f023 0319 	bic.w	r3, r3, #25
9000c7b2:	4313      	orrs	r3, r2
9000c7b4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c7b6:	f7fc fdeb 	bl	90009390 <HAL_GetTick>
9000c7ba:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c7bc:	e005      	b.n	9000c7ca <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000c7be:	f7fc fde7 	bl	90009390 <HAL_GetTick>
9000c7c2:	1b80      	subs	r0, r0, r6
9000c7c4:	2802      	cmp	r0, #2
9000c7c6:	f200 80a0 	bhi.w	9000c90a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c7ca:	682b      	ldr	r3, [r5, #0]
9000c7cc:	075b      	lsls	r3, r3, #29
9000c7ce:	d5f6      	bpl.n	9000c7be <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000c7d0:	f7fc fde4 	bl	9000939c <HAL_GetREVID>
9000c7d4:	f241 0303 	movw	r3, #4099	; 0x1003
9000c7d8:	4298      	cmp	r0, r3
9000c7da:	f200 80f7 	bhi.w	9000c9cc <HAL_RCC_OscConfig+0x3c4>
9000c7de:	6922      	ldr	r2, [r4, #16]
9000c7e0:	686b      	ldr	r3, [r5, #4]
9000c7e2:	2a40      	cmp	r2, #64	; 0x40
9000c7e4:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000c7e8:	bf0c      	ite	eq
9000c7ea:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000c7ee:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000c7f2:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c7f4:	6823      	ldr	r3, [r4, #0]
9000c7f6:	e741      	b.n	9000c67c <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000c7f8:	2b18      	cmp	r3, #24
9000c7fa:	f000 80e3 	beq.w	9000c9c4 <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000c7fe:	4d2b      	ldr	r5, [pc, #172]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000c800:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000c802:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000c804:	2a00      	cmp	r2, #0
9000c806:	f000 80cc 	beq.w	9000c9a2 <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000c80a:	f023 0319 	bic.w	r3, r3, #25
9000c80e:	4313      	orrs	r3, r2
9000c810:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c812:	f7fc fdbd 	bl	90009390 <HAL_GetTick>
9000c816:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c818:	e004      	b.n	9000c824 <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000c81a:	f7fc fdb9 	bl	90009390 <HAL_GetTick>
9000c81e:	1b80      	subs	r0, r0, r6
9000c820:	2802      	cmp	r0, #2
9000c822:	d872      	bhi.n	9000c90a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c824:	682b      	ldr	r3, [r5, #0]
9000c826:	075f      	lsls	r7, r3, #29
9000c828:	d5f7      	bpl.n	9000c81a <HAL_RCC_OscConfig+0x212>
9000c82a:	e7d1      	b.n	9000c7d0 <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000c82c:	f001 0103 	and.w	r1, r1, #3
9000c830:	2902      	cmp	r1, #2
9000c832:	f47f aefc 	bne.w	9000c62e <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000c836:	4a1d      	ldr	r2, [pc, #116]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
9000c838:	6812      	ldr	r2, [r2, #0]
9000c83a:	0392      	lsls	r2, r2, #14
9000c83c:	f57f af1b 	bpl.w	9000c676 <HAL_RCC_OscConfig+0x6e>
9000c840:	6862      	ldr	r2, [r4, #4]
9000c842:	2a00      	cmp	r2, #0
9000c844:	f47f af17 	bne.w	9000c676 <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000c848:	2001      	movs	r0, #1
}
9000c84a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000c84c:	f002 0203 	and.w	r2, r2, #3
9000c850:	2a01      	cmp	r2, #1
9000c852:	f47f af20 	bne.w	9000c696 <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000c856:	4b15      	ldr	r3, [pc, #84]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
9000c858:	681b      	ldr	r3, [r3, #0]
9000c85a:	05da      	lsls	r2, r3, #23
9000c85c:	d502      	bpl.n	9000c864 <HAL_RCC_OscConfig+0x25c>
9000c85e:	69e3      	ldr	r3, [r4, #28]
9000c860:	2b80      	cmp	r3, #128	; 0x80
9000c862:	d1f1      	bne.n	9000c848 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c864:	f7fc fd9a 	bl	9000939c <HAL_GetREVID>
9000c868:	f241 0303 	movw	r3, #4099	; 0x1003
9000c86c:	4298      	cmp	r0, r3
9000c86e:	f200 80b8 	bhi.w	9000c9e2 <HAL_RCC_OscConfig+0x3da>
9000c872:	6a22      	ldr	r2, [r4, #32]
9000c874:	2a20      	cmp	r2, #32
9000c876:	f000 81a7 	beq.w	9000cbc8 <HAL_RCC_OscConfig+0x5c0>
9000c87a:	490c      	ldr	r1, [pc, #48]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
9000c87c:	684b      	ldr	r3, [r1, #4]
9000c87e:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000c882:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000c886:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c888:	6823      	ldr	r3, [r4, #0]
9000c88a:	e72d      	b.n	9000c6e8 <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c88c:	4a07      	ldr	r2, [pc, #28]	; (9000c8ac <HAL_RCC_OscConfig+0x2a4>)
9000c88e:	6813      	ldr	r3, [r2, #0]
9000c890:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000c894:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000c896:	e6df      	b.n	9000c658 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000c898:	4d05      	ldr	r5, [pc, #20]	; (9000c8b0 <HAL_RCC_OscConfig+0x2a8>)
9000c89a:	682b      	ldr	r3, [r5, #0]
9000c89c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000c8a0:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000c8a2:	f7fc fd75 	bl	90009390 <HAL_GetTick>
9000c8a6:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c8a8:	e009      	b.n	9000c8be <HAL_RCC_OscConfig+0x2b6>
9000c8aa:	bf00      	nop
9000c8ac:	58024400 	.word	0x58024400
9000c8b0:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000c8b4:	f7fc fd6c 	bl	90009390 <HAL_GetTick>
9000c8b8:	1b80      	subs	r0, r0, r6
9000c8ba:	2864      	cmp	r0, #100	; 0x64
9000c8bc:	d825      	bhi.n	9000c90a <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c8be:	682b      	ldr	r3, [r5, #0]
9000c8c0:	05da      	lsls	r2, r3, #23
9000c8c2:	d5f7      	bpl.n	9000c8b4 <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c8c4:	68a3      	ldr	r3, [r4, #8]
9000c8c6:	2b01      	cmp	r3, #1
9000c8c8:	f000 8178 	beq.w	9000cbbc <HAL_RCC_OscConfig+0x5b4>
9000c8cc:	2b00      	cmp	r3, #0
9000c8ce:	f000 8153 	beq.w	9000cb78 <HAL_RCC_OscConfig+0x570>
9000c8d2:	2b05      	cmp	r3, #5
9000c8d4:	4ba5      	ldr	r3, [pc, #660]	; (9000cb6c <HAL_RCC_OscConfig+0x564>)
9000c8d6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000c8d8:	f000 817f 	beq.w	9000cbda <HAL_RCC_OscConfig+0x5d2>
9000c8dc:	f022 0201 	bic.w	r2, r2, #1
9000c8e0:	671a      	str	r2, [r3, #112]	; 0x70
9000c8e2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000c8e4:	f022 0204 	bic.w	r2, r2, #4
9000c8e8:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000c8ea:	f7fc fd51 	bl	90009390 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c8ee:	4e9f      	ldr	r6, [pc, #636]	; (9000cb6c <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c8f0:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000c8f4:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c8f6:	e004      	b.n	9000c902 <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c8f8:	f7fc fd4a 	bl	90009390 <HAL_GetTick>
9000c8fc:	1b40      	subs	r0, r0, r5
9000c8fe:	42b8      	cmp	r0, r7
9000c900:	d803      	bhi.n	9000c90a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c902:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000c904:	079b      	lsls	r3, r3, #30
9000c906:	d5f7      	bpl.n	9000c8f8 <HAL_RCC_OscConfig+0x2f0>
9000c908:	e723      	b.n	9000c752 <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000c90a:	2003      	movs	r0, #3
}
9000c90c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c90e:	4d97      	ldr	r5, [pc, #604]	; (9000cb6c <HAL_RCC_OscConfig+0x564>)
9000c910:	682b      	ldr	r3, [r5, #0]
9000c912:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000c916:	602b      	str	r3, [r5, #0]
9000c918:	682b      	ldr	r3, [r5, #0]
9000c91a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000c91e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c920:	f7fc fd36 	bl	90009390 <HAL_GetTick>
9000c924:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000c926:	e004      	b.n	9000c932 <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000c928:	f7fc fd32 	bl	90009390 <HAL_GetTick>
9000c92c:	1b80      	subs	r0, r0, r6
9000c92e:	2864      	cmp	r0, #100	; 0x64
9000c930:	d8eb      	bhi.n	9000c90a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000c932:	682b      	ldr	r3, [r5, #0]
9000c934:	039f      	lsls	r7, r3, #14
9000c936:	d4f7      	bmi.n	9000c928 <HAL_RCC_OscConfig+0x320>
9000c938:	e69c      	b.n	9000c674 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000c93a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000c93c:	f023 0301 	bic.w	r3, r3, #1
9000c940:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000c942:	f7fc fd25 	bl	90009390 <HAL_GetTick>
9000c946:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000c948:	e004      	b.n	9000c954 <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000c94a:	f7fc fd21 	bl	90009390 <HAL_GetTick>
9000c94e:	1b80      	subs	r0, r0, r6
9000c950:	2802      	cmp	r0, #2
9000c952:	d8da      	bhi.n	9000c90a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000c954:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000c956:	0799      	lsls	r1, r3, #30
9000c958:	d4f7      	bmi.n	9000c94a <HAL_RCC_OscConfig+0x342>
9000c95a:	e6dd      	b.n	9000c718 <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000c95c:	682b      	ldr	r3, [r5, #0]
9000c95e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000c962:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000c964:	f7fc fd14 	bl	90009390 <HAL_GetTick>
9000c968:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000c96a:	e004      	b.n	9000c976 <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000c96c:	f7fc fd10 	bl	90009390 <HAL_GetTick>
9000c970:	1b80      	subs	r0, r0, r6
9000c972:	2802      	cmp	r0, #2
9000c974:	d8c9      	bhi.n	9000c90a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000c976:	682b      	ldr	r3, [r5, #0]
9000c978:	0498      	lsls	r0, r3, #18
9000c97a:	d4f7      	bmi.n	9000c96c <HAL_RCC_OscConfig+0x364>
9000c97c:	e6e5      	b.n	9000c74a <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000c97e:	682b      	ldr	r3, [r5, #0]
9000c980:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000c984:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c986:	f7fc fd03 	bl	90009390 <HAL_GetTick>
9000c98a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000c98c:	e004      	b.n	9000c998 <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000c98e:	f7fc fcff 	bl	90009390 <HAL_GetTick>
9000c992:	1b80      	subs	r0, r0, r6
9000c994:	2802      	cmp	r0, #2
9000c996:	d8b8      	bhi.n	9000c90a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000c998:	682b      	ldr	r3, [r5, #0]
9000c99a:	05df      	lsls	r7, r3, #23
9000c99c:	d4f7      	bmi.n	9000c98e <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c99e:	6823      	ldr	r3, [r4, #0]
9000c9a0:	e6a2      	b.n	9000c6e8 <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000c9a2:	f023 0301 	bic.w	r3, r3, #1
9000c9a6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c9a8:	f7fc fcf2 	bl	90009390 <HAL_GetTick>
9000c9ac:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000c9ae:	e004      	b.n	9000c9ba <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000c9b0:	f7fc fcee 	bl	90009390 <HAL_GetTick>
9000c9b4:	1b80      	subs	r0, r0, r6
9000c9b6:	2802      	cmp	r0, #2
9000c9b8:	d8a7      	bhi.n	9000c90a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000c9ba:	682b      	ldr	r3, [r5, #0]
9000c9bc:	0758      	lsls	r0, r3, #29
9000c9be:	d4f7      	bmi.n	9000c9b0 <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c9c0:	6823      	ldr	r3, [r4, #0]
9000c9c2:	e65b      	b.n	9000c67c <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000c9c4:	0790      	lsls	r0, r2, #30
9000c9c6:	f47f af1a 	bne.w	9000c7fe <HAL_RCC_OscConfig+0x1f6>
9000c9ca:	e6e7      	b.n	9000c79c <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000c9cc:	686b      	ldr	r3, [r5, #4]
9000c9ce:	6922      	ldr	r2, [r4, #16]
9000c9d0:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000c9d4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c9d8:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c9da:	6823      	ldr	r3, [r4, #0]
9000c9dc:	e64e      	b.n	9000c67c <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000c9de:	2001      	movs	r0, #1
}
9000c9e0:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c9e2:	4a62      	ldr	r2, [pc, #392]	; (9000cb6c <HAL_RCC_OscConfig+0x564>)
9000c9e4:	6a21      	ldr	r1, [r4, #32]
9000c9e6:	68d3      	ldr	r3, [r2, #12]
9000c9e8:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000c9ec:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000c9f0:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c9f2:	6823      	ldr	r3, [r4, #0]
9000c9f4:	e678      	b.n	9000c6e8 <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000c9f6:	f7fc fccb 	bl	90009390 <HAL_GetTick>
9000c9fa:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c9fc:	e004      	b.n	9000ca08 <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c9fe:	f7fc fcc7 	bl	90009390 <HAL_GetTick>
9000ca02:	1b80      	subs	r0, r0, r6
9000ca04:	2802      	cmp	r0, #2
9000ca06:	d880      	bhi.n	9000c90a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ca08:	682b      	ldr	r3, [r5, #0]
9000ca0a:	0199      	lsls	r1, r3, #6
9000ca0c:	d4f7      	bmi.n	9000c9fe <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000ca0e:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000ca10:	4b57      	ldr	r3, [pc, #348]	; (9000cb70 <HAL_RCC_OscConfig+0x568>)
9000ca12:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ca14:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000ca16:	4957      	ldr	r1, [pc, #348]	; (9000cb74 <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ca18:	4e54      	ldr	r6, [pc, #336]	; (9000cb6c <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000ca1a:	4313      	orrs	r3, r2
9000ca1c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ca1e:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000ca22:	62ab      	str	r3, [r5, #40]	; 0x28
9000ca24:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000ca28:	3b01      	subs	r3, #1
9000ca2a:	3a01      	subs	r2, #1
9000ca2c:	025b      	lsls	r3, r3, #9
9000ca2e:	0412      	lsls	r2, r2, #16
9000ca30:	b29b      	uxth	r3, r3
9000ca32:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000ca36:	4313      	orrs	r3, r2
9000ca38:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000ca3a:	3a01      	subs	r2, #1
9000ca3c:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000ca40:	4313      	orrs	r3, r2
9000ca42:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000ca44:	3a01      	subs	r2, #1
9000ca46:	0612      	lsls	r2, r2, #24
9000ca48:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000ca4c:	4313      	orrs	r3, r2
9000ca4e:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000ca50:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ca52:	f023 0301 	bic.w	r3, r3, #1
9000ca56:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000ca58:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000ca5a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000ca5c:	4011      	ands	r1, r2
9000ca5e:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000ca62:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000ca64:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ca66:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000ca68:	f023 030c 	bic.w	r3, r3, #12
9000ca6c:	4313      	orrs	r3, r2
9000ca6e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000ca70:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ca72:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000ca74:	f023 0302 	bic.w	r3, r3, #2
9000ca78:	4313      	orrs	r3, r2
9000ca7a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000ca7c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ca7e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000ca82:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ca84:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ca86:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000ca8a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000ca8c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ca8e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000ca92:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000ca94:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ca96:	f043 0301 	orr.w	r3, r3, #1
9000ca9a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000ca9c:	682b      	ldr	r3, [r5, #0]
9000ca9e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000caa2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000caa4:	f7fc fc74 	bl	90009390 <HAL_GetTick>
9000caa8:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000caaa:	e005      	b.n	9000cab8 <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000caac:	f7fc fc70 	bl	90009390 <HAL_GetTick>
9000cab0:	1b00      	subs	r0, r0, r4
9000cab2:	2802      	cmp	r0, #2
9000cab4:	f63f af29 	bhi.w	9000c90a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000cab8:	6833      	ldr	r3, [r6, #0]
9000caba:	019a      	lsls	r2, r3, #6
9000cabc:	d5f6      	bpl.n	9000caac <HAL_RCC_OscConfig+0x4a4>
9000cabe:	e665      	b.n	9000c78c <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000cac0:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000cac2:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000cac4:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000cac6:	f43f ae62 	beq.w	9000c78e <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000caca:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000cace:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000cad0:	428b      	cmp	r3, r1
9000cad2:	f47f aeb9 	bne.w	9000c848 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000cad6:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000cada:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000cadc:	429a      	cmp	r2, r3
9000cade:	f47f aeb3 	bne.w	9000c848 <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000cae2:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000cae4:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000cae8:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000caea:	429a      	cmp	r2, r3
9000caec:	f47f aeac 	bne.w	9000c848 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000caf0:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000caf2:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000caf6:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000caf8:	429a      	cmp	r2, r3
9000cafa:	f47f aea5 	bne.w	9000c848 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000cafe:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000cb00:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000cb04:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000cb06:	429a      	cmp	r2, r3
9000cb08:	f47f ae9e 	bne.w	9000c848 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000cb0c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000cb0e:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000cb12:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000cb14:	429e      	cmp	r6, r3
9000cb16:	f47f ae97 	bne.w	9000c848 <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000cb1a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000cb1c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000cb1e:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000cb22:	429a      	cmp	r2, r3
9000cb24:	f43f ae32 	beq.w	9000c78c <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000cb28:	4a10      	ldr	r2, [pc, #64]	; (9000cb6c <HAL_RCC_OscConfig+0x564>)
9000cb2a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000cb2c:	f023 0301 	bic.w	r3, r3, #1
9000cb30:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000cb32:	f7fc fc2d 	bl	90009390 <HAL_GetTick>
9000cb36:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000cb38:	f7fc fc2a 	bl	90009390 <HAL_GetTick>
9000cb3c:	42a8      	cmp	r0, r5
9000cb3e:	d0fb      	beq.n	9000cb38 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000cb40:	4a0a      	ldr	r2, [pc, #40]	; (9000cb6c <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000cb42:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000cb44:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000cb46:	4b0b      	ldr	r3, [pc, #44]	; (9000cb74 <HAL_RCC_OscConfig+0x56c>)
9000cb48:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000cb4a:	4023      	ands	r3, r4
9000cb4c:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000cb50:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000cb52:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000cb54:	f043 0301 	orr.w	r3, r3, #1
9000cb58:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000cb5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000cb5c:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000cb60:	601a      	str	r2, [r3, #0]
9000cb62:	681a      	ldr	r2, [r3, #0]
9000cb64:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000cb68:	601a      	str	r2, [r3, #0]
9000cb6a:	e575      	b.n	9000c658 <HAL_RCC_OscConfig+0x50>
9000cb6c:	58024400 	.word	0x58024400
9000cb70:	fffffc0c 	.word	0xfffffc0c
9000cb74:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000cb78:	4d1c      	ldr	r5, [pc, #112]	; (9000cbec <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000cb7a:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000cb7e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000cb80:	f023 0301 	bic.w	r3, r3, #1
9000cb84:	672b      	str	r3, [r5, #112]	; 0x70
9000cb86:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000cb88:	f023 0304 	bic.w	r3, r3, #4
9000cb8c:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000cb8e:	f7fc fbff 	bl	90009390 <HAL_GetTick>
9000cb92:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000cb94:	e005      	b.n	9000cba2 <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000cb96:	f7fc fbfb 	bl	90009390 <HAL_GetTick>
9000cb9a:	1b80      	subs	r0, r0, r6
9000cb9c:	42b8      	cmp	r0, r7
9000cb9e:	f63f aeb4 	bhi.w	9000c90a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000cba2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000cba4:	0798      	lsls	r0, r3, #30
9000cba6:	d4f6      	bmi.n	9000cb96 <HAL_RCC_OscConfig+0x58e>
9000cba8:	e5d3      	b.n	9000c752 <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000cbaa:	68eb      	ldr	r3, [r5, #12]
9000cbac:	6a22      	ldr	r2, [r4, #32]
9000cbae:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000cbb2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000cbb6:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000cbb8:	6823      	ldr	r3, [r4, #0]
9000cbba:	e595      	b.n	9000c6e8 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000cbbc:	4a0b      	ldr	r2, [pc, #44]	; (9000cbec <HAL_RCC_OscConfig+0x5e4>)
9000cbbe:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000cbc0:	f043 0301 	orr.w	r3, r3, #1
9000cbc4:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000cbc6:	e690      	b.n	9000c8ea <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000cbc8:	4a08      	ldr	r2, [pc, #32]	; (9000cbec <HAL_RCC_OscConfig+0x5e4>)
9000cbca:	6853      	ldr	r3, [r2, #4]
9000cbcc:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000cbd0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000cbd4:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000cbd6:	6823      	ldr	r3, [r4, #0]
9000cbd8:	e586      	b.n	9000c6e8 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000cbda:	f042 0204 	orr.w	r2, r2, #4
9000cbde:	671a      	str	r2, [r3, #112]	; 0x70
9000cbe0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000cbe2:	f042 0201 	orr.w	r2, r2, #1
9000cbe6:	671a      	str	r2, [r3, #112]	; 0x70
9000cbe8:	e67f      	b.n	9000c8ea <HAL_RCC_OscConfig+0x2e2>
9000cbea:	bf00      	nop
9000cbec:	58024400 	.word	0x58024400

9000cbf0 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000cbf0:	4a47      	ldr	r2, [pc, #284]	; (9000cd10 <HAL_RCC_GetSysClockFreq+0x120>)
9000cbf2:	6913      	ldr	r3, [r2, #16]
9000cbf4:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000cbf8:	2b10      	cmp	r3, #16
9000cbfa:	d004      	beq.n	9000cc06 <HAL_RCC_GetSysClockFreq+0x16>
9000cbfc:	2b18      	cmp	r3, #24
9000cbfe:	d00d      	beq.n	9000cc1c <HAL_RCC_GetSysClockFreq+0x2c>
9000cc00:	b11b      	cbz	r3, 9000cc0a <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000cc02:	4844      	ldr	r0, [pc, #272]	; (9000cd14 <HAL_RCC_GetSysClockFreq+0x124>)
9000cc04:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000cc06:	4844      	ldr	r0, [pc, #272]	; (9000cd18 <HAL_RCC_GetSysClockFreq+0x128>)
9000cc08:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000cc0a:	6813      	ldr	r3, [r2, #0]
9000cc0c:	0699      	lsls	r1, r3, #26
9000cc0e:	d54a      	bpl.n	9000cca6 <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cc10:	6813      	ldr	r3, [r2, #0]
9000cc12:	4842      	ldr	r0, [pc, #264]	; (9000cd1c <HAL_RCC_GetSysClockFreq+0x12c>)
9000cc14:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000cc18:	40d8      	lsrs	r0, r3
9000cc1a:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000cc1c:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000cc1e:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000cc20:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000cc22:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000cc24:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000cc28:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000cc2a:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000cc2e:	d038      	beq.n	9000cca2 <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000cc30:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000cc34:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000cc38:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000cc3c:	fb05 f101 	mul.w	r1, r5, r1
9000cc40:	2b01      	cmp	r3, #1
9000cc42:	ee07 1a90 	vmov	s15, r1
9000cc46:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000cc4a:	d002      	beq.n	9000cc52 <HAL_RCC_GetSysClockFreq+0x62>
9000cc4c:	2b02      	cmp	r3, #2
9000cc4e:	d02c      	beq.n	9000ccaa <HAL_RCC_GetSysClockFreq+0xba>
9000cc50:	b393      	cbz	r3, 9000ccb8 <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cc52:	ee07 0a90 	vmov	s15, r0
9000cc56:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000cd20 <HAL_RCC_GetSysClockFreq+0x130>
9000cc5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000cc5e:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000cc60:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000cc64:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000cd24 <HAL_RCC_GetSysClockFreq+0x134>
9000cc68:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000cc6c:	ee07 3a90 	vmov	s15, r3
9000cc70:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000cc74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000cc78:	eee7 7a25 	vfma.f32	s15, s14, s11
9000cc7c:	ee77 7a86 	vadd.f32	s15, s15, s12
9000cc80:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000cc84:	4b22      	ldr	r3, [pc, #136]	; (9000cd10 <HAL_RCC_GetSysClockFreq+0x120>)
9000cc86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000cc88:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000cc8c:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000cc8e:	ee07 3a90 	vmov	s15, r3
9000cc92:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000cc96:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000cc9a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000cc9e:	ee17 0a90 	vmov	r0, s15
}
9000cca2:	bc30      	pop	{r4, r5}
9000cca4:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000cca6:	481d      	ldr	r0, [pc, #116]	; (9000cd1c <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000cca8:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ccaa:	ee07 0a90 	vmov	s15, r0
9000ccae:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000cd28 <HAL_RCC_GetSysClockFreq+0x138>
9000ccb2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ccb6:	e7d2      	b.n	9000cc5e <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ccb8:	6813      	ldr	r3, [r2, #0]
9000ccba:	069b      	lsls	r3, r3, #26
9000ccbc:	d520      	bpl.n	9000cd00 <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ccbe:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ccc0:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ccc4:	4915      	ldr	r1, [pc, #84]	; (9000cd1c <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ccc6:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000ccca:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cccc:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ccd0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ccd4:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000cd24 <HAL_RCC_GetSysClockFreq+0x134>
9000ccd8:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ccdc:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ccde:	ee06 3a90 	vmov	s13, r3
9000cce2:	ee06 1a10 	vmov	s12, r1
9000cce6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000ccea:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000ccee:	eee7 6a05 	vfma.f32	s13, s14, s10
9000ccf2:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000ccf6:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000ccfa:	ee66 6a87 	vmul.f32	s13, s13, s14
9000ccfe:	e7c1      	b.n	9000cc84 <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cd00:	ee07 0a90 	vmov	s15, r0
9000cd04:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000cd2c <HAL_RCC_GetSysClockFreq+0x13c>
9000cd08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000cd0c:	e7a7      	b.n	9000cc5e <HAL_RCC_GetSysClockFreq+0x6e>
9000cd0e:	bf00      	nop
9000cd10:	58024400 	.word	0x58024400
9000cd14:	003d0900 	.word	0x003d0900
9000cd18:	017d7840 	.word	0x017d7840
9000cd1c:	03d09000 	.word	0x03d09000
9000cd20:	4a742400 	.word	0x4a742400
9000cd24:	39000000 	.word	0x39000000
9000cd28:	4bbebc20 	.word	0x4bbebc20
9000cd2c:	4c742400 	.word	0x4c742400

9000cd30 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000cd30:	2800      	cmp	r0, #0
9000cd32:	f000 810c 	beq.w	9000cf4e <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000cd36:	4a8c      	ldr	r2, [pc, #560]	; (9000cf68 <HAL_RCC_ClockConfig+0x238>)
9000cd38:	6813      	ldr	r3, [r2, #0]
9000cd3a:	f003 030f 	and.w	r3, r3, #15
9000cd3e:	428b      	cmp	r3, r1
{
9000cd40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000cd44:	4604      	mov	r4, r0
9000cd46:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000cd48:	d20c      	bcs.n	9000cd64 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000cd4a:	6813      	ldr	r3, [r2, #0]
9000cd4c:	f023 030f 	bic.w	r3, r3, #15
9000cd50:	430b      	orrs	r3, r1
9000cd52:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000cd54:	6813      	ldr	r3, [r2, #0]
9000cd56:	f003 030f 	and.w	r3, r3, #15
9000cd5a:	428b      	cmp	r3, r1
9000cd5c:	d002      	beq.n	9000cd64 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000cd5e:	2001      	movs	r0, #1
}
9000cd60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000cd64:	6823      	ldr	r3, [r4, #0]
9000cd66:	075f      	lsls	r7, r3, #29
9000cd68:	d50b      	bpl.n	9000cd82 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000cd6a:	4980      	ldr	r1, [pc, #512]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000cd6c:	6920      	ldr	r0, [r4, #16]
9000cd6e:	698a      	ldr	r2, [r1, #24]
9000cd70:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000cd74:	4290      	cmp	r0, r2
9000cd76:	d904      	bls.n	9000cd82 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000cd78:	698a      	ldr	r2, [r1, #24]
9000cd7a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000cd7e:	4302      	orrs	r2, r0
9000cd80:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000cd82:	071e      	lsls	r6, r3, #28
9000cd84:	d50b      	bpl.n	9000cd9e <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000cd86:	4979      	ldr	r1, [pc, #484]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000cd88:	6960      	ldr	r0, [r4, #20]
9000cd8a:	69ca      	ldr	r2, [r1, #28]
9000cd8c:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000cd90:	4290      	cmp	r0, r2
9000cd92:	d904      	bls.n	9000cd9e <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000cd94:	69ca      	ldr	r2, [r1, #28]
9000cd96:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000cd9a:	4302      	orrs	r2, r0
9000cd9c:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000cd9e:	06d8      	lsls	r0, r3, #27
9000cda0:	d50b      	bpl.n	9000cdba <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000cda2:	4972      	ldr	r1, [pc, #456]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000cda4:	69a0      	ldr	r0, [r4, #24]
9000cda6:	69ca      	ldr	r2, [r1, #28]
9000cda8:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000cdac:	4290      	cmp	r0, r2
9000cdae:	d904      	bls.n	9000cdba <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000cdb0:	69ca      	ldr	r2, [r1, #28]
9000cdb2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000cdb6:	4302      	orrs	r2, r0
9000cdb8:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000cdba:	0699      	lsls	r1, r3, #26
9000cdbc:	d50b      	bpl.n	9000cdd6 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000cdbe:	496b      	ldr	r1, [pc, #428]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000cdc0:	69e0      	ldr	r0, [r4, #28]
9000cdc2:	6a0a      	ldr	r2, [r1, #32]
9000cdc4:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000cdc8:	4290      	cmp	r0, r2
9000cdca:	d904      	bls.n	9000cdd6 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000cdcc:	6a0a      	ldr	r2, [r1, #32]
9000cdce:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000cdd2:	4302      	orrs	r2, r0
9000cdd4:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000cdd6:	079a      	lsls	r2, r3, #30
9000cdd8:	f140 80ab 	bpl.w	9000cf32 <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000cddc:	4863      	ldr	r0, [pc, #396]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000cdde:	68e1      	ldr	r1, [r4, #12]
9000cde0:	6982      	ldr	r2, [r0, #24]
9000cde2:	f002 020f 	and.w	r2, r2, #15
9000cde6:	4291      	cmp	r1, r2
9000cde8:	d904      	bls.n	9000cdf4 <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000cdea:	6982      	ldr	r2, [r0, #24]
9000cdec:	f022 020f 	bic.w	r2, r2, #15
9000cdf0:	430a      	orrs	r2, r1
9000cdf2:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000cdf4:	07d8      	lsls	r0, r3, #31
9000cdf6:	d530      	bpl.n	9000ce5a <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000cdf8:	4a5c      	ldr	r2, [pc, #368]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000cdfa:	68a1      	ldr	r1, [r4, #8]
9000cdfc:	6993      	ldr	r3, [r2, #24]
9000cdfe:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000ce02:	430b      	orrs	r3, r1
9000ce04:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000ce06:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ce08:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000ce0a:	2902      	cmp	r1, #2
9000ce0c:	f000 80a1 	beq.w	9000cf52 <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000ce10:	2903      	cmp	r1, #3
9000ce12:	f000 8098 	beq.w	9000cf46 <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000ce16:	2901      	cmp	r1, #1
9000ce18:	f000 80a1 	beq.w	9000cf5e <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ce1c:	0758      	lsls	r0, r3, #29
9000ce1e:	d59e      	bpl.n	9000cd5e <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ce20:	4e52      	ldr	r6, [pc, #328]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ce22:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ce26:	6933      	ldr	r3, [r6, #16]
9000ce28:	f023 0307 	bic.w	r3, r3, #7
9000ce2c:	430b      	orrs	r3, r1
9000ce2e:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000ce30:	f7fc faae 	bl	90009390 <HAL_GetTick>
9000ce34:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ce36:	e005      	b.n	9000ce44 <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ce38:	f7fc faaa 	bl	90009390 <HAL_GetTick>
9000ce3c:	1bc0      	subs	r0, r0, r7
9000ce3e:	4540      	cmp	r0, r8
9000ce40:	f200 808b 	bhi.w	9000cf5a <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ce44:	6933      	ldr	r3, [r6, #16]
9000ce46:	6862      	ldr	r2, [r4, #4]
9000ce48:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000ce4c:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000ce50:	d1f2      	bne.n	9000ce38 <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ce52:	6823      	ldr	r3, [r4, #0]
9000ce54:	0799      	lsls	r1, r3, #30
9000ce56:	d506      	bpl.n	9000ce66 <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000ce58:	68e1      	ldr	r1, [r4, #12]
9000ce5a:	4844      	ldr	r0, [pc, #272]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000ce5c:	6982      	ldr	r2, [r0, #24]
9000ce5e:	f002 020f 	and.w	r2, r2, #15
9000ce62:	428a      	cmp	r2, r1
9000ce64:	d869      	bhi.n	9000cf3a <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000ce66:	4940      	ldr	r1, [pc, #256]	; (9000cf68 <HAL_RCC_ClockConfig+0x238>)
9000ce68:	680a      	ldr	r2, [r1, #0]
9000ce6a:	f002 020f 	and.w	r2, r2, #15
9000ce6e:	42aa      	cmp	r2, r5
9000ce70:	d90a      	bls.n	9000ce88 <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000ce72:	680a      	ldr	r2, [r1, #0]
9000ce74:	f022 020f 	bic.w	r2, r2, #15
9000ce78:	432a      	orrs	r2, r5
9000ce7a:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000ce7c:	680a      	ldr	r2, [r1, #0]
9000ce7e:	f002 020f 	and.w	r2, r2, #15
9000ce82:	42aa      	cmp	r2, r5
9000ce84:	f47f af6b 	bne.w	9000cd5e <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000ce88:	075a      	lsls	r2, r3, #29
9000ce8a:	d50b      	bpl.n	9000cea4 <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000ce8c:	4937      	ldr	r1, [pc, #220]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000ce8e:	6920      	ldr	r0, [r4, #16]
9000ce90:	698a      	ldr	r2, [r1, #24]
9000ce92:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000ce96:	4290      	cmp	r0, r2
9000ce98:	d204      	bcs.n	9000cea4 <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000ce9a:	698a      	ldr	r2, [r1, #24]
9000ce9c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000cea0:	4302      	orrs	r2, r0
9000cea2:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000cea4:	071f      	lsls	r7, r3, #28
9000cea6:	d50b      	bpl.n	9000cec0 <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000cea8:	4930      	ldr	r1, [pc, #192]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000ceaa:	6960      	ldr	r0, [r4, #20]
9000ceac:	69ca      	ldr	r2, [r1, #28]
9000ceae:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000ceb2:	4290      	cmp	r0, r2
9000ceb4:	d204      	bcs.n	9000cec0 <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000ceb6:	69ca      	ldr	r2, [r1, #28]
9000ceb8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000cebc:	4302      	orrs	r2, r0
9000cebe:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000cec0:	06de      	lsls	r6, r3, #27
9000cec2:	d50b      	bpl.n	9000cedc <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000cec4:	4929      	ldr	r1, [pc, #164]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000cec6:	69a0      	ldr	r0, [r4, #24]
9000cec8:	69ca      	ldr	r2, [r1, #28]
9000ceca:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000cece:	4290      	cmp	r0, r2
9000ced0:	d204      	bcs.n	9000cedc <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000ced2:	69ca      	ldr	r2, [r1, #28]
9000ced4:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000ced8:	4302      	orrs	r2, r0
9000ceda:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000cedc:	069d      	lsls	r5, r3, #26
9000cede:	d50b      	bpl.n	9000cef8 <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000cee0:	4a22      	ldr	r2, [pc, #136]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000cee2:	69e1      	ldr	r1, [r4, #28]
9000cee4:	6a13      	ldr	r3, [r2, #32]
9000cee6:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000ceea:	4299      	cmp	r1, r3
9000ceec:	d204      	bcs.n	9000cef8 <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000ceee:	6a13      	ldr	r3, [r2, #32]
9000cef0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000cef4:	430b      	orrs	r3, r1
9000cef6:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000cef8:	f7ff fe7a 	bl	9000cbf0 <HAL_RCC_GetSysClockFreq>
9000cefc:	4a1b      	ldr	r2, [pc, #108]	; (9000cf6c <HAL_RCC_ClockConfig+0x23c>)
9000cefe:	4603      	mov	r3, r0
9000cf00:	481b      	ldr	r0, [pc, #108]	; (9000cf70 <HAL_RCC_ClockConfig+0x240>)
9000cf02:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cf04:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000cf06:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000cf0a:	4d1a      	ldr	r5, [pc, #104]	; (9000cf74 <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cf0c:	f002 020f 	and.w	r2, r2, #15
9000cf10:	4c19      	ldr	r4, [pc, #100]	; (9000cf78 <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000cf12:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cf14:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000cf16:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000cf1a:	4818      	ldr	r0, [pc, #96]	; (9000cf7c <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cf1c:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000cf20:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000cf22:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000cf24:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cf26:	40d3      	lsrs	r3, r2
9000cf28:	6023      	str	r3, [r4, #0]
}
9000cf2a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000cf2e:	f7f6 ba51 	b.w	900033d4 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000cf32:	07da      	lsls	r2, r3, #31
9000cf34:	f53f af60 	bmi.w	9000cdf8 <HAL_RCC_ClockConfig+0xc8>
9000cf38:	e795      	b.n	9000ce66 <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000cf3a:	6982      	ldr	r2, [r0, #24]
9000cf3c:	f022 020f 	bic.w	r2, r2, #15
9000cf40:	430a      	orrs	r2, r1
9000cf42:	6182      	str	r2, [r0, #24]
9000cf44:	e78f      	b.n	9000ce66 <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000cf46:	019f      	lsls	r7, r3, #6
9000cf48:	f53f af6a 	bmi.w	9000ce20 <HAL_RCC_ClockConfig+0xf0>
9000cf4c:	e707      	b.n	9000cd5e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000cf4e:	2001      	movs	r0, #1
}
9000cf50:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000cf52:	039b      	lsls	r3, r3, #14
9000cf54:	f53f af64 	bmi.w	9000ce20 <HAL_RCC_ClockConfig+0xf0>
9000cf58:	e701      	b.n	9000cd5e <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000cf5a:	2003      	movs	r0, #3
9000cf5c:	e700      	b.n	9000cd60 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000cf5e:	05de      	lsls	r6, r3, #23
9000cf60:	f53f af5e 	bmi.w	9000ce20 <HAL_RCC_ClockConfig+0xf0>
9000cf64:	e6fb      	b.n	9000cd5e <HAL_RCC_ClockConfig+0x2e>
9000cf66:	bf00      	nop
9000cf68:	52002000 	.word	0x52002000
9000cf6c:	58024400 	.word	0x58024400
9000cf70:	9002bbd8 	.word	0x9002bbd8
9000cf74:	2400006c 	.word	0x2400006c
9000cf78:	24000070 	.word	0x24000070
9000cf7c:	24000078 	.word	0x24000078

9000cf80 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000cf80:	4a1c      	ldr	r2, [pc, #112]	; (9000cff4 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000cf82:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000cf84:	6913      	ldr	r3, [r2, #16]
9000cf86:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000cf8a:	2b10      	cmp	r3, #16
9000cf8c:	d021      	beq.n	9000cfd2 <HAL_RCC_GetPCLK1Freq+0x52>
9000cf8e:	2b18      	cmp	r3, #24
9000cf90:	d02a      	beq.n	9000cfe8 <HAL_RCC_GetPCLK1Freq+0x68>
9000cf92:	b303      	cbz	r3, 9000cfd6 <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000cf94:	4818      	ldr	r0, [pc, #96]	; (9000cff8 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000cf96:	4a17      	ldr	r2, [pc, #92]	; (9000cff4 <HAL_RCC_GetPCLK1Freq+0x74>)
9000cf98:	4918      	ldr	r1, [pc, #96]	; (9000cffc <HAL_RCC_GetPCLK1Freq+0x7c>)
9000cf9a:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cf9c:	4c18      	ldr	r4, [pc, #96]	; (9000d000 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000cf9e:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000cfa2:	4d18      	ldr	r5, [pc, #96]	; (9000d004 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000cfa4:	5ccb      	ldrb	r3, [r1, r3]
9000cfa6:	f003 031f 	and.w	r3, r3, #31
9000cfaa:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cfac:	6993      	ldr	r3, [r2, #24]
9000cfae:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000cfb2:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cfb4:	5ccb      	ldrb	r3, [r1, r3]
9000cfb6:	f003 031f 	and.w	r3, r3, #31
9000cfba:	fa20 f303 	lsr.w	r3, r0, r3
9000cfbe:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000cfc0:	69d2      	ldr	r2, [r2, #28]
9000cfc2:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000cfc6:	5c88      	ldrb	r0, [r1, r2]
9000cfc8:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000cfcc:	fa23 f000 	lsr.w	r0, r3, r0
9000cfd0:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000cfd2:	480d      	ldr	r0, [pc, #52]	; (9000d008 <HAL_RCC_GetPCLK1Freq+0x88>)
9000cfd4:	e7df      	b.n	9000cf96 <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000cfd6:	6813      	ldr	r3, [r2, #0]
9000cfd8:	069b      	lsls	r3, r3, #26
9000cfda:	d508      	bpl.n	9000cfee <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cfdc:	6813      	ldr	r3, [r2, #0]
9000cfde:	480b      	ldr	r0, [pc, #44]	; (9000d00c <HAL_RCC_GetPCLK1Freq+0x8c>)
9000cfe0:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000cfe4:	40d8      	lsrs	r0, r3
9000cfe6:	e7d6      	b.n	9000cf96 <HAL_RCC_GetPCLK1Freq+0x16>
9000cfe8:	f7ff fa8a 	bl	9000c500 <HAL_RCC_GetSysClockFreq.part.0>
9000cfec:	e7d3      	b.n	9000cf96 <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000cfee:	4807      	ldr	r0, [pc, #28]	; (9000d00c <HAL_RCC_GetPCLK1Freq+0x8c>)
9000cff0:	e7d1      	b.n	9000cf96 <HAL_RCC_GetPCLK1Freq+0x16>
9000cff2:	bf00      	nop
9000cff4:	58024400 	.word	0x58024400
9000cff8:	003d0900 	.word	0x003d0900
9000cffc:	9002bbd8 	.word	0x9002bbd8
9000d000:	24000070 	.word	0x24000070
9000d004:	2400006c 	.word	0x2400006c
9000d008:	017d7840 	.word	0x017d7840
9000d00c:	03d09000 	.word	0x03d09000

9000d010 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d010:	4a1c      	ldr	r2, [pc, #112]	; (9000d084 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000d012:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d014:	6913      	ldr	r3, [r2, #16]
9000d016:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000d01a:	2b10      	cmp	r3, #16
9000d01c:	d021      	beq.n	9000d062 <HAL_RCC_GetPCLK2Freq+0x52>
9000d01e:	2b18      	cmp	r3, #24
9000d020:	d02a      	beq.n	9000d078 <HAL_RCC_GetPCLK2Freq+0x68>
9000d022:	b303      	cbz	r3, 9000d066 <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000d024:	4818      	ldr	r0, [pc, #96]	; (9000d088 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d026:	4a17      	ldr	r2, [pc, #92]	; (9000d084 <HAL_RCC_GetPCLK2Freq+0x74>)
9000d028:	4918      	ldr	r1, [pc, #96]	; (9000d08c <HAL_RCC_GetPCLK2Freq+0x7c>)
9000d02a:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d02c:	4c18      	ldr	r4, [pc, #96]	; (9000d090 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d02e:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000d032:	4d18      	ldr	r5, [pc, #96]	; (9000d094 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d034:	5ccb      	ldrb	r3, [r1, r3]
9000d036:	f003 031f 	and.w	r3, r3, #31
9000d03a:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d03c:	6993      	ldr	r3, [r2, #24]
9000d03e:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000d042:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d044:	5ccb      	ldrb	r3, [r1, r3]
9000d046:	f003 031f 	and.w	r3, r3, #31
9000d04a:	fa20 f303 	lsr.w	r3, r0, r3
9000d04e:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000d050:	69d2      	ldr	r2, [r2, #28]
9000d052:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000d056:	5c88      	ldrb	r0, [r1, r2]
9000d058:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000d05c:	fa23 f000 	lsr.w	r0, r3, r0
9000d060:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d062:	480d      	ldr	r0, [pc, #52]	; (9000d098 <HAL_RCC_GetPCLK2Freq+0x88>)
9000d064:	e7df      	b.n	9000d026 <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d066:	6813      	ldr	r3, [r2, #0]
9000d068:	069b      	lsls	r3, r3, #26
9000d06a:	d508      	bpl.n	9000d07e <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d06c:	6813      	ldr	r3, [r2, #0]
9000d06e:	480b      	ldr	r0, [pc, #44]	; (9000d09c <HAL_RCC_GetPCLK2Freq+0x8c>)
9000d070:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000d074:	40d8      	lsrs	r0, r3
9000d076:	e7d6      	b.n	9000d026 <HAL_RCC_GetPCLK2Freq+0x16>
9000d078:	f7ff fa42 	bl	9000c500 <HAL_RCC_GetSysClockFreq.part.0>
9000d07c:	e7d3      	b.n	9000d026 <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000d07e:	4807      	ldr	r0, [pc, #28]	; (9000d09c <HAL_RCC_GetPCLK2Freq+0x8c>)
9000d080:	e7d1      	b.n	9000d026 <HAL_RCC_GetPCLK2Freq+0x16>
9000d082:	bf00      	nop
9000d084:	58024400 	.word	0x58024400
9000d088:	003d0900 	.word	0x003d0900
9000d08c:	9002bbd8 	.word	0x9002bbd8
9000d090:	24000070 	.word	0x24000070
9000d094:	2400006c 	.word	0x2400006c
9000d098:	017d7840 	.word	0x017d7840
9000d09c:	03d09000 	.word	0x03d09000

9000d0a0 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000d0a0:	4b13      	ldr	r3, [pc, #76]	; (9000d0f0 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000d0a2:	223f      	movs	r2, #63	; 0x3f
9000d0a4:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000d0a6:	691a      	ldr	r2, [r3, #16]
9000d0a8:	f002 0207 	and.w	r2, r2, #7
9000d0ac:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000d0ae:	699a      	ldr	r2, [r3, #24]
9000d0b0:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000d0b4:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000d0b6:	699a      	ldr	r2, [r3, #24]
9000d0b8:	f002 020f 	and.w	r2, r2, #15
9000d0bc:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000d0be:	699a      	ldr	r2, [r3, #24]
9000d0c0:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000d0c4:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000d0c6:	69da      	ldr	r2, [r3, #28]
9000d0c8:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000d0cc:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000d0ce:	69da      	ldr	r2, [r3, #28]
9000d0d0:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000d0d4:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000d0d6:	6a1b      	ldr	r3, [r3, #32]
{
9000d0d8:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000d0da:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000d0de:	4c05      	ldr	r4, [pc, #20]	; (9000d0f4 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000d0e0:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000d0e2:	6823      	ldr	r3, [r4, #0]
}
9000d0e4:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000d0e8:	f003 030f 	and.w	r3, r3, #15
9000d0ec:	600b      	str	r3, [r1, #0]
}
9000d0ee:	4770      	bx	lr
9000d0f0:	58024400 	.word	0x58024400
9000d0f4:	52002000 	.word	0x52002000

9000d0f8 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000d0f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d0fa:	4c3a      	ldr	r4, [pc, #232]	; (9000d1e4 <RCCEx_PLL2_Config+0xec>)
9000d0fc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000d0fe:	f003 0303 	and.w	r3, r3, #3
9000d102:	2b03      	cmp	r3, #3
9000d104:	d067      	beq.n	9000d1d6 <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000d106:	6823      	ldr	r3, [r4, #0]
9000d108:	4606      	mov	r6, r0
9000d10a:	460f      	mov	r7, r1
9000d10c:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000d110:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d112:	f7fc f93d 	bl	90009390 <HAL_GetTick>
9000d116:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000d118:	e004      	b.n	9000d124 <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000d11a:	f7fc f939 	bl	90009390 <HAL_GetTick>
9000d11e:	1b43      	subs	r3, r0, r5
9000d120:	2b02      	cmp	r3, #2
9000d122:	d856      	bhi.n	9000d1d2 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000d124:	6823      	ldr	r3, [r4, #0]
9000d126:	011a      	lsls	r2, r3, #4
9000d128:	d4f7      	bmi.n	9000d11a <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000d12a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000d12c:	6832      	ldr	r2, [r6, #0]
9000d12e:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000d132:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000d136:	62a3      	str	r3, [r4, #40]	; 0x28
9000d138:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000d13c:	3b01      	subs	r3, #1
9000d13e:	3a01      	subs	r2, #1
9000d140:	025b      	lsls	r3, r3, #9
9000d142:	0412      	lsls	r2, r2, #16
9000d144:	b29b      	uxth	r3, r3
9000d146:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000d14a:	4313      	orrs	r3, r2
9000d14c:	6872      	ldr	r2, [r6, #4]
9000d14e:	3a01      	subs	r2, #1
9000d150:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000d154:	4313      	orrs	r3, r2
9000d156:	6932      	ldr	r2, [r6, #16]
9000d158:	3a01      	subs	r2, #1
9000d15a:	0612      	lsls	r2, r2, #24
9000d15c:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000d160:	4313      	orrs	r3, r2
9000d162:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000d164:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000d166:	6972      	ldr	r2, [r6, #20]
9000d168:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000d16c:	4313      	orrs	r3, r2
9000d16e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000d170:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000d172:	69b3      	ldr	r3, [r6, #24]
9000d174:	f022 0220 	bic.w	r2, r2, #32
9000d178:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000d17a:	4b1b      	ldr	r3, [pc, #108]	; (9000d1e8 <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000d17c:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000d17e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000d180:	f022 0210 	bic.w	r2, r2, #16
9000d184:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000d186:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000d188:	69f2      	ldr	r2, [r6, #28]
9000d18a:	400b      	ands	r3, r1
9000d18c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000d190:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000d192:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000d194:	f043 0310 	orr.w	r3, r3, #16
9000d198:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000d19a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000d19c:	b1ef      	cbz	r7, 9000d1da <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000d19e:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000d1a0:	bf0c      	ite	eq
9000d1a2:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000d1a6:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000d1aa:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000d1ac:	4c0d      	ldr	r4, [pc, #52]	; (9000d1e4 <RCCEx_PLL2_Config+0xec>)
9000d1ae:	6823      	ldr	r3, [r4, #0]
9000d1b0:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000d1b4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d1b6:	f7fc f8eb 	bl	90009390 <HAL_GetTick>
9000d1ba:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000d1bc:	e004      	b.n	9000d1c8 <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000d1be:	f7fc f8e7 	bl	90009390 <HAL_GetTick>
9000d1c2:	1b40      	subs	r0, r0, r5
9000d1c4:	2802      	cmp	r0, #2
9000d1c6:	d804      	bhi.n	9000d1d2 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000d1c8:	6823      	ldr	r3, [r4, #0]
9000d1ca:	011b      	lsls	r3, r3, #4
9000d1cc:	d5f7      	bpl.n	9000d1be <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000d1ce:	2000      	movs	r0, #0
}
9000d1d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000d1d2:	2003      	movs	r0, #3
}
9000d1d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000d1d6:	2001      	movs	r0, #1
}
9000d1d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000d1da:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000d1de:	62e3      	str	r3, [r4, #44]	; 0x2c
9000d1e0:	e7e4      	b.n	9000d1ac <RCCEx_PLL2_Config+0xb4>
9000d1e2:	bf00      	nop
9000d1e4:	58024400 	.word	0x58024400
9000d1e8:	ffff0007 	.word	0xffff0007

9000d1ec <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000d1ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d1ee:	4c3a      	ldr	r4, [pc, #232]	; (9000d2d8 <RCCEx_PLL3_Config+0xec>)
9000d1f0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000d1f2:	f003 0303 	and.w	r3, r3, #3
9000d1f6:	2b03      	cmp	r3, #3
9000d1f8:	d067      	beq.n	9000d2ca <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000d1fa:	6823      	ldr	r3, [r4, #0]
9000d1fc:	4606      	mov	r6, r0
9000d1fe:	460f      	mov	r7, r1
9000d200:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000d204:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d206:	f7fc f8c3 	bl	90009390 <HAL_GetTick>
9000d20a:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000d20c:	e004      	b.n	9000d218 <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000d20e:	f7fc f8bf 	bl	90009390 <HAL_GetTick>
9000d212:	1b43      	subs	r3, r0, r5
9000d214:	2b02      	cmp	r3, #2
9000d216:	d856      	bhi.n	9000d2c6 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000d218:	6823      	ldr	r3, [r4, #0]
9000d21a:	009a      	lsls	r2, r3, #2
9000d21c:	d4f7      	bmi.n	9000d20e <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000d21e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000d220:	6832      	ldr	r2, [r6, #0]
9000d222:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000d226:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000d22a:	62a3      	str	r3, [r4, #40]	; 0x28
9000d22c:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000d230:	3b01      	subs	r3, #1
9000d232:	3a01      	subs	r2, #1
9000d234:	025b      	lsls	r3, r3, #9
9000d236:	0412      	lsls	r2, r2, #16
9000d238:	b29b      	uxth	r3, r3
9000d23a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000d23e:	4313      	orrs	r3, r2
9000d240:	6872      	ldr	r2, [r6, #4]
9000d242:	3a01      	subs	r2, #1
9000d244:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000d248:	4313      	orrs	r3, r2
9000d24a:	6932      	ldr	r2, [r6, #16]
9000d24c:	3a01      	subs	r2, #1
9000d24e:	0612      	lsls	r2, r2, #24
9000d250:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000d254:	4313      	orrs	r3, r2
9000d256:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000d258:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000d25a:	6972      	ldr	r2, [r6, #20]
9000d25c:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000d260:	4313      	orrs	r3, r2
9000d262:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000d264:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000d266:	69b3      	ldr	r3, [r6, #24]
9000d268:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000d26c:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000d26e:	4b1b      	ldr	r3, [pc, #108]	; (9000d2dc <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000d270:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000d272:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000d274:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000d278:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000d27a:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000d27c:	69f2      	ldr	r2, [r6, #28]
9000d27e:	400b      	ands	r3, r1
9000d280:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000d284:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000d286:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000d288:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000d28c:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000d28e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000d290:	b1ef      	cbz	r7, 9000d2ce <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000d292:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000d294:	bf0c      	ite	eq
9000d296:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000d29a:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000d29e:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000d2a0:	4c0d      	ldr	r4, [pc, #52]	; (9000d2d8 <RCCEx_PLL3_Config+0xec>)
9000d2a2:	6823      	ldr	r3, [r4, #0]
9000d2a4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000d2a8:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d2aa:	f7fc f871 	bl	90009390 <HAL_GetTick>
9000d2ae:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000d2b0:	e004      	b.n	9000d2bc <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000d2b2:	f7fc f86d 	bl	90009390 <HAL_GetTick>
9000d2b6:	1b40      	subs	r0, r0, r5
9000d2b8:	2802      	cmp	r0, #2
9000d2ba:	d804      	bhi.n	9000d2c6 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000d2bc:	6823      	ldr	r3, [r4, #0]
9000d2be:	009b      	lsls	r3, r3, #2
9000d2c0:	d5f7      	bpl.n	9000d2b2 <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000d2c2:	2000      	movs	r0, #0
}
9000d2c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000d2c6:	2003      	movs	r0, #3
}
9000d2c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000d2ca:	2001      	movs	r0, #1
}
9000d2cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000d2ce:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000d2d2:	62e3      	str	r3, [r4, #44]	; 0x2c
9000d2d4:	e7e4      	b.n	9000d2a0 <RCCEx_PLL3_Config+0xb4>
9000d2d6:	bf00      	nop
9000d2d8:	58024400 	.word	0x58024400
9000d2dc:	ffff0007 	.word	0xffff0007

9000d2e0 <HAL_RCCEx_PeriphCLKConfig>:
{
9000d2e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000d2e4:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000d2e8:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000d2ea:	011d      	lsls	r5, r3, #4
9000d2ec:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000d2f0:	d523      	bpl.n	9000d33a <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000d2f2:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000d2f4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000d2f8:	f000 8553 	beq.w	9000dda2 <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000d2fc:	d812      	bhi.n	9000d324 <HAL_RCCEx_PeriphCLKConfig+0x44>
9000d2fe:	2900      	cmp	r1, #0
9000d300:	f000 85a9 	beq.w	9000de56 <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000d304:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000d308:	f040 85a2 	bne.w	9000de50 <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d30c:	2102      	movs	r1, #2
9000d30e:	3008      	adds	r0, #8
9000d310:	f7ff fef2 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d314:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000d316:	2e00      	cmp	r6, #0
9000d318:	f040 8522 	bne.w	9000dd60 <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000d31c:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000d31e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d322:	e003      	b.n	9000d32c <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000d324:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000d328:	f040 8592 	bne.w	9000de50 <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000d32c:	4dae      	ldr	r5, [pc, #696]	; (9000d5e8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d32e:	2600      	movs	r6, #0
9000d330:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000d332:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000d336:	4301      	orrs	r1, r0
9000d338:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000d33a:	05d8      	lsls	r0, r3, #23
9000d33c:	d50a      	bpl.n	9000d354 <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000d33e:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000d340:	2904      	cmp	r1, #4
9000d342:	d806      	bhi.n	9000d352 <HAL_RCCEx_PeriphCLKConfig+0x72>
9000d344:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d348:	053d0536 	.word	0x053d0536
9000d34c:	0323051a 	.word	0x0323051a
9000d350:	0323      	.short	0x0323
9000d352:	2601      	movs	r6, #1
9000d354:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d356:	0599      	lsls	r1, r3, #22
9000d358:	d51d      	bpl.n	9000d396 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000d35a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000d35c:	2980      	cmp	r1, #128	; 0x80
9000d35e:	f000 8516 	beq.w	9000dd8e <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000d362:	f200 80f9 	bhi.w	9000d558 <HAL_RCCEx_PeriphCLKConfig+0x278>
9000d366:	2900      	cmp	r1, #0
9000d368:	f000 8433 	beq.w	9000dbd2 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000d36c:	2940      	cmp	r1, #64	; 0x40
9000d36e:	f040 80fa 	bne.w	9000d566 <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d372:	2100      	movs	r1, #0
9000d374:	f104 0008 	add.w	r0, r4, #8
9000d378:	f7ff febe 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d37c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d37e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d382:	2d00      	cmp	r5, #0
9000d384:	f040 83fe 	bne.w	9000db84 <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000d388:	4f97      	ldr	r7, [pc, #604]	; (9000d5e8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d38a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000d38c:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000d38e:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000d392:	4301      	orrs	r1, r0
9000d394:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d396:	055f      	lsls	r7, r3, #21
9000d398:	d521      	bpl.n	9000d3de <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000d39a:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000d39e:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000d3a2:	f000 8521 	beq.w	9000dde8 <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000d3a6:	f200 80e1 	bhi.w	9000d56c <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000d3aa:	2900      	cmp	r1, #0
9000d3ac:	f000 8418 	beq.w	9000dbe0 <HAL_RCCEx_PeriphCLKConfig+0x900>
9000d3b0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000d3b4:	f040 80e2 	bne.w	9000d57c <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d3b8:	2100      	movs	r1, #0
9000d3ba:	f104 0008 	add.w	r0, r4, #8
9000d3be:	f7ff fe9b 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d3c2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d3c4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d3c8:	2d00      	cmp	r5, #0
9000d3ca:	f040 83e2 	bne.w	9000db92 <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000d3ce:	4f86      	ldr	r7, [pc, #536]	; (9000d5e8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d3d0:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000d3d4:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d3d6:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000d3da:	4301      	orrs	r1, r0
9000d3dc:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d3de:	0518      	lsls	r0, r3, #20
9000d3e0:	d521      	bpl.n	9000d426 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000d3e2:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000d3e6:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000d3ea:	f000 84bd 	beq.w	9000dd68 <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000d3ee:	f200 80c8 	bhi.w	9000d582 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000d3f2:	2900      	cmp	r1, #0
9000d3f4:	f000 83e7 	beq.w	9000dbc6 <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000d3f8:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000d3fc:	f040 80c9 	bne.w	9000d592 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d400:	2100      	movs	r1, #0
9000d402:	f104 0008 	add.w	r0, r4, #8
9000d406:	f7ff fe77 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d40a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d40c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d410:	2d00      	cmp	r5, #0
9000d412:	f040 83b5 	bne.w	9000db80 <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000d416:	4f74      	ldr	r7, [pc, #464]	; (9000d5e8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d418:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000d41c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d41e:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000d422:	4301      	orrs	r1, r0
9000d424:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d426:	0199      	lsls	r1, r3, #6
9000d428:	d518      	bpl.n	9000d45c <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000d42a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000d42c:	2920      	cmp	r1, #32
9000d42e:	f000 841f 	beq.w	9000dc70 <HAL_RCCEx_PeriphCLKConfig+0x990>
9000d432:	f200 80b1 	bhi.w	9000d598 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000d436:	b139      	cbz	r1, 9000d448 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000d438:	2910      	cmp	r1, #16
9000d43a:	f040 80b0 	bne.w	9000d59e <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d43e:	486a      	ldr	r0, [pc, #424]	; (9000d5e8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d440:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d442:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d446:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d448:	2d00      	cmp	r5, #0
9000d44a:	f040 83d8 	bne.w	9000dbfe <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000d44e:	4f66      	ldr	r7, [pc, #408]	; (9000d5e8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d450:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000d452:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000d454:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000d458:	4301      	orrs	r1, r0
9000d45a:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000d45c:	04df      	lsls	r7, r3, #19
9000d45e:	d51f      	bpl.n	9000d4a0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000d460:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000d462:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000d466:	f000 84b5 	beq.w	9000ddd4 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000d46a:	f200 809b 	bhi.w	9000d5a4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000d46e:	2900      	cmp	r1, #0
9000d470:	f000 83a3 	beq.w	9000dbba <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000d474:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000d478:	f040 809c 	bne.w	9000d5b4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d47c:	2100      	movs	r1, #0
9000d47e:	f104 0008 	add.w	r0, r4, #8
9000d482:	f7ff fe39 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d486:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d488:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d48c:	2d00      	cmp	r5, #0
9000d48e:	f040 837b 	bne.w	9000db88 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000d492:	4f55      	ldr	r7, [pc, #340]	; (9000d5e8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d494:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000d496:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000d498:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000d49c:	4301      	orrs	r1, r0
9000d49e:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d4a0:	0498      	lsls	r0, r3, #18
9000d4a2:	d51d      	bpl.n	9000d4e0 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000d4a4:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000d4a6:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000d4aa:	f000 8410 	beq.w	9000dcce <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000d4ae:	f200 8084 	bhi.w	9000d5ba <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000d4b2:	b159      	cbz	r1, 9000d4cc <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000d4b4:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000d4b8:	f040 8087 	bne.w	9000d5ca <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d4bc:	2101      	movs	r1, #1
9000d4be:	f104 0008 	add.w	r0, r4, #8
9000d4c2:	f7ff fe19 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d4c6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d4c8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d4cc:	2d00      	cmp	r5, #0
9000d4ce:	f040 839a 	bne.w	9000dc06 <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000d4d2:	4f45      	ldr	r7, [pc, #276]	; (9000d5e8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d4d4:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000d4d6:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000d4d8:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000d4dc:	4301      	orrs	r1, r0
9000d4de:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d4e0:	0459      	lsls	r1, r3, #17
9000d4e2:	d51d      	bpl.n	9000d520 <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000d4e4:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000d4e8:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000d4ec:	f000 83fb 	beq.w	9000dce6 <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000d4f0:	d86e      	bhi.n	9000d5d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000d4f2:	b151      	cbz	r1, 9000d50a <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000d4f4:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000d4f8:	d172      	bne.n	9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d4fa:	2101      	movs	r1, #1
9000d4fc:	f104 0008 	add.w	r0, r4, #8
9000d500:	f7ff fdfa 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d504:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d506:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d50a:	2d00      	cmp	r5, #0
9000d50c:	f040 837f 	bne.w	9000dc0e <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000d510:	4f35      	ldr	r7, [pc, #212]	; (9000d5e8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d512:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000d516:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d518:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000d51c:	4301      	orrs	r1, r0
9000d51e:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d520:	041f      	lsls	r7, r3, #16
9000d522:	d50d      	bpl.n	9000d540 <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000d524:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000d526:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000d52a:	f000 83c8 	beq.w	9000dcbe <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000d52e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000d532:	f000 823b 	beq.w	9000d9ac <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000d536:	2900      	cmp	r1, #0
9000d538:	f000 8240 	beq.w	9000d9bc <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000d53c:	2601      	movs	r6, #1
9000d53e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000d540:	01d8      	lsls	r0, r3, #7
9000d542:	d562      	bpl.n	9000d60a <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000d544:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000d546:	2903      	cmp	r1, #3
9000d548:	f200 84bf 	bhi.w	9000deca <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000d54c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d550:	004e0053 	.word	0x004e0053
9000d554:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000d558:	29c0      	cmp	r1, #192	; 0xc0
9000d55a:	f43f af12 	beq.w	9000d382 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000d55e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000d562:	f43f af0e 	beq.w	9000d382 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000d566:	2601      	movs	r6, #1
9000d568:	4635      	mov	r5, r6
9000d56a:	e714      	b.n	9000d396 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000d56c:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000d570:	f43f af2a 	beq.w	9000d3c8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000d574:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000d578:	f43f af26 	beq.w	9000d3c8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000d57c:	2601      	movs	r6, #1
9000d57e:	4635      	mov	r5, r6
9000d580:	e72d      	b.n	9000d3de <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000d582:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000d586:	f43f af43 	beq.w	9000d410 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000d58a:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000d58e:	f43f af3f 	beq.w	9000d410 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000d592:	2601      	movs	r6, #1
9000d594:	4635      	mov	r5, r6
9000d596:	e746      	b.n	9000d426 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000d598:	2930      	cmp	r1, #48	; 0x30
9000d59a:	f43f af55 	beq.w	9000d448 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000d59e:	2601      	movs	r6, #1
9000d5a0:	4635      	mov	r5, r6
9000d5a2:	e75b      	b.n	9000d45c <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000d5a4:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000d5a8:	f43f af70 	beq.w	9000d48c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000d5ac:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000d5b0:	f43f af6c 	beq.w	9000d48c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000d5b4:	2601      	movs	r6, #1
9000d5b6:	4635      	mov	r5, r6
9000d5b8:	e772      	b.n	9000d4a0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000d5ba:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000d5be:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000d5c2:	d083      	beq.n	9000d4cc <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000d5c4:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000d5c8:	d080      	beq.n	9000d4cc <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000d5ca:	2601      	movs	r6, #1
9000d5cc:	4635      	mov	r5, r6
9000d5ce:	e787      	b.n	9000d4e0 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000d5d0:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000d5d4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000d5d8:	d097      	beq.n	9000d50a <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000d5da:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000d5de:	d094      	beq.n	9000d50a <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000d5e0:	2601      	movs	r6, #1
9000d5e2:	4635      	mov	r5, r6
9000d5e4:	e79c      	b.n	9000d520 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000d5e6:	bf00      	nop
9000d5e8:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d5ec:	4839      	ldr	r0, [pc, #228]	; (9000d6d4 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000d5ee:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d5f0:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d5f4:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d5f6:	2d00      	cmp	r5, #0
9000d5f8:	f040 8303 	bne.w	9000dc02 <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000d5fc:	4f35      	ldr	r7, [pc, #212]	; (9000d6d4 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000d5fe:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000d600:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000d602:	f021 0103 	bic.w	r1, r1, #3
9000d606:	4301      	orrs	r1, r0
9000d608:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000d60a:	0259      	lsls	r1, r3, #9
9000d60c:	f100 826a 	bmi.w	9000dae4 <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d610:	07d8      	lsls	r0, r3, #31
9000d612:	d52f      	bpl.n	9000d674 <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000d614:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000d616:	2928      	cmp	r1, #40	; 0x28
9000d618:	d82a      	bhi.n	9000d670 <HAL_RCCEx_PeriphCLKConfig+0x390>
9000d61a:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d61e:	020a      	.short	0x020a
9000d620:	00290029 	.word	0x00290029
9000d624:	00290029 	.word	0x00290029
9000d628:	00290029 	.word	0x00290029
9000d62c:	02020029 	.word	0x02020029
9000d630:	00290029 	.word	0x00290029
9000d634:	00290029 	.word	0x00290029
9000d638:	00290029 	.word	0x00290029
9000d63c:	04070029 	.word	0x04070029
9000d640:	00290029 	.word	0x00290029
9000d644:	00290029 	.word	0x00290029
9000d648:	00290029 	.word	0x00290029
9000d64c:	020a0029 	.word	0x020a0029
9000d650:	00290029 	.word	0x00290029
9000d654:	00290029 	.word	0x00290029
9000d658:	00290029 	.word	0x00290029
9000d65c:	020a0029 	.word	0x020a0029
9000d660:	00290029 	.word	0x00290029
9000d664:	00290029 	.word	0x00290029
9000d668:	00290029 	.word	0x00290029
9000d66c:	020a0029 	.word	0x020a0029
9000d670:	2601      	movs	r6, #1
9000d672:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d674:	0799      	lsls	r1, r3, #30
9000d676:	d51d      	bpl.n	9000d6b4 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000d678:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000d67a:	2905      	cmp	r1, #5
9000d67c:	f200 8421 	bhi.w	9000dec2 <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000d680:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d684:	0006000e 	.word	0x0006000e
9000d688:	000e03c8 	.word	0x000e03c8
9000d68c:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d690:	2101      	movs	r1, #1
9000d692:	f104 0008 	add.w	r0, r4, #8
9000d696:	f7ff fd2f 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d69a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d69c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d6a0:	2d00      	cmp	r5, #0
9000d6a2:	f040 82b8 	bne.w	9000dc16 <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000d6a6:	4f0b      	ldr	r7, [pc, #44]	; (9000d6d4 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000d6a8:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000d6aa:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d6ac:	f021 0107 	bic.w	r1, r1, #7
9000d6b0:	4301      	orrs	r1, r0
9000d6b2:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d6b4:	075f      	lsls	r7, r3, #29
9000d6b6:	d522      	bpl.n	9000d6fe <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000d6b8:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000d6bc:	2905      	cmp	r1, #5
9000d6be:	f200 8408 	bhi.w	9000ded2 <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000d6c2:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d6c6:	0011      	.short	0x0011
9000d6c8:	039b0009 	.word	0x039b0009
9000d6cc:	00110011 	.word	0x00110011
9000d6d0:	0011      	.short	0x0011
9000d6d2:	bf00      	nop
9000d6d4:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d6d8:	2101      	movs	r1, #1
9000d6da:	f104 0008 	add.w	r0, r4, #8
9000d6de:	f7ff fd0b 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d6e2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d6e4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d6e8:	2d00      	cmp	r5, #0
9000d6ea:	f040 8286 	bne.w	9000dbfa <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000d6ee:	4fae      	ldr	r7, [pc, #696]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d6f0:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000d6f4:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d6f6:	f021 0107 	bic.w	r1, r1, #7
9000d6fa:	4301      	orrs	r1, r0
9000d6fc:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d6fe:	0698      	lsls	r0, r3, #26
9000d700:	d51f      	bpl.n	9000d742 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000d702:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000d706:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000d70a:	f000 82f7 	beq.w	9000dcfc <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000d70e:	f200 810b 	bhi.w	9000d928 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000d712:	b159      	cbz	r1, 9000d72c <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000d714:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000d718:	f040 8110 	bne.w	9000d93c <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d71c:	2100      	movs	r1, #0
9000d71e:	f104 0008 	add.w	r0, r4, #8
9000d722:	f7ff fce9 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d726:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000d728:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d72c:	2d00      	cmp	r5, #0
9000d72e:	f040 8260 	bne.w	9000dbf2 <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000d732:	4f9d      	ldr	r7, [pc, #628]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d734:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000d738:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d73a:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000d73e:	4301      	orrs	r1, r0
9000d740:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000d742:	0659      	lsls	r1, r3, #25
9000d744:	d51f      	bpl.n	9000d786 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000d746:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000d74a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000d74e:	f000 829b 	beq.w	9000dc88 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000d752:	f200 80f6 	bhi.w	9000d942 <HAL_RCCEx_PeriphCLKConfig+0x662>
9000d756:	b159      	cbz	r1, 9000d770 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000d758:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000d75c:	f040 80fb 	bne.w	9000d956 <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d760:	2100      	movs	r1, #0
9000d762:	f104 0008 	add.w	r0, r4, #8
9000d766:	f7ff fcc7 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d76a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000d76c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d770:	2d00      	cmp	r5, #0
9000d772:	f040 824e 	bne.w	9000dc12 <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000d776:	4f8c      	ldr	r7, [pc, #560]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d778:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000d77c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d77e:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000d782:	4301      	orrs	r1, r0
9000d784:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000d786:	061f      	lsls	r7, r3, #24
9000d788:	d51f      	bpl.n	9000d7ca <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000d78a:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000d78e:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000d792:	f000 8289 	beq.w	9000dca8 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000d796:	f200 80e1 	bhi.w	9000d95c <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000d79a:	b159      	cbz	r1, 9000d7b4 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000d79c:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000d7a0:	f040 80e6 	bne.w	9000d970 <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d7a4:	2100      	movs	r1, #0
9000d7a6:	f104 0008 	add.w	r0, r4, #8
9000d7aa:	f7ff fca5 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d7ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000d7b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d7b4:	2d00      	cmp	r5, #0
9000d7b6:	f040 8228 	bne.w	9000dc0a <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000d7ba:	4f7b      	ldr	r7, [pc, #492]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d7bc:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000d7c0:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d7c2:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000d7c6:	4301      	orrs	r1, r0
9000d7c8:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000d7ca:	0718      	lsls	r0, r3, #28
9000d7cc:	d50b      	bpl.n	9000d7e6 <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000d7ce:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000d7d2:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000d7d6:	f000 82a9 	beq.w	9000dd2c <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d7da:	4f73      	ldr	r7, [pc, #460]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d7dc:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d7de:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000d7e2:	4301      	orrs	r1, r0
9000d7e4:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d7e6:	06d9      	lsls	r1, r3, #27
9000d7e8:	d50b      	bpl.n	9000d802 <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000d7ea:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000d7ee:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000d7f2:	f000 82a8 	beq.w	9000dd46 <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d7f6:	4f6c      	ldr	r7, [pc, #432]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d7f8:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d7fa:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000d7fe:	4301      	orrs	r1, r0
9000d800:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d802:	031f      	lsls	r7, r3, #12
9000d804:	d50e      	bpl.n	9000d824 <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000d806:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000d80a:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000d80e:	f000 80f4 	beq.w	9000d9fa <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000d812:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000d816:	f000 80f8 	beq.w	9000da0a <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000d81a:	2900      	cmp	r1, #0
9000d81c:	f000 821c 	beq.w	9000dc58 <HAL_RCCEx_PeriphCLKConfig+0x978>
9000d820:	2601      	movs	r6, #1
9000d822:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d824:	0358      	lsls	r0, r3, #13
9000d826:	d50f      	bpl.n	9000d848 <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000d828:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000d82c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000d830:	f000 80cf 	beq.w	9000d9d2 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000d834:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000d838:	f000 80d3 	beq.w	9000d9e2 <HAL_RCCEx_PeriphCLKConfig+0x702>
9000d83c:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000d840:	f000 8202 	beq.w	9000dc48 <HAL_RCCEx_PeriphCLKConfig+0x968>
9000d844:	2601      	movs	r6, #1
9000d846:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d848:	03d9      	lsls	r1, r3, #15
9000d84a:	d509      	bpl.n	9000d860 <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000d84c:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000d84e:	2900      	cmp	r1, #0
9000d850:	f000 81f1 	beq.w	9000dc36 <HAL_RCCEx_PeriphCLKConfig+0x956>
9000d854:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000d858:	f000 819d 	beq.w	9000db96 <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000d85c:	2601      	movs	r6, #1
9000d85e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000d860:	009f      	lsls	r7, r3, #2
9000d862:	f100 80f1 	bmi.w	9000da48 <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000d866:	0398      	lsls	r0, r3, #14
9000d868:	d50c      	bpl.n	9000d884 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000d86a:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000d86e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000d872:	f000 81d8 	beq.w	9000dc26 <HAL_RCCEx_PeriphCLKConfig+0x946>
9000d876:	d97e      	bls.n	9000d976 <HAL_RCCEx_PeriphCLKConfig+0x696>
9000d878:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000d87c:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000d880:	d07b      	beq.n	9000d97a <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000d882:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000d884:	02d9      	lsls	r1, r3, #11
9000d886:	d506      	bpl.n	9000d896 <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000d888:	4847      	ldr	r0, [pc, #284]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d88a:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000d88c:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000d88e:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000d892:	4329      	orrs	r1, r5
9000d894:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000d896:	00df      	lsls	r7, r3, #3
9000d898:	d507      	bpl.n	9000d8aa <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000d89a:	4843      	ldr	r0, [pc, #268]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d89c:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000d8a0:	6901      	ldr	r1, [r0, #16]
9000d8a2:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000d8a6:	4329      	orrs	r1, r5
9000d8a8:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000d8aa:	029d      	lsls	r5, r3, #10
9000d8ac:	d506      	bpl.n	9000d8bc <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000d8ae:	483e      	ldr	r0, [pc, #248]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d8b0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000d8b2:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000d8b4:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000d8b8:	4329      	orrs	r1, r5
9000d8ba:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000d8bc:	0058      	lsls	r0, r3, #1
9000d8be:	d509      	bpl.n	9000d8d4 <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000d8c0:	4939      	ldr	r1, [pc, #228]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d8c2:	6908      	ldr	r0, [r1, #16]
9000d8c4:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000d8c8:	6108      	str	r0, [r1, #16]
9000d8ca:	6908      	ldr	r0, [r1, #16]
9000d8cc:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000d8d0:	4328      	orrs	r0, r5
9000d8d2:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000d8d4:	2b00      	cmp	r3, #0
9000d8d6:	da06      	bge.n	9000d8e6 <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000d8d8:	4833      	ldr	r0, [pc, #204]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d8da:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000d8dc:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000d8de:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000d8e2:	4329      	orrs	r1, r5
9000d8e4:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000d8e6:	0219      	lsls	r1, r3, #8
9000d8e8:	d507      	bpl.n	9000d8fa <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000d8ea:	492f      	ldr	r1, [pc, #188]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d8ec:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000d8f0:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000d8f2:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000d8f6:	4303      	orrs	r3, r0
9000d8f8:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000d8fa:	07d3      	lsls	r3, r2, #31
9000d8fc:	f100 80b0 	bmi.w	9000da60 <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d900:	0797      	lsls	r7, r2, #30
9000d902:	f100 80ba 	bmi.w	9000da7a <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d906:	0755      	lsls	r5, r2, #29
9000d908:	f100 80c4 	bmi.w	9000da94 <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d90c:	0710      	lsls	r0, r2, #28
9000d90e:	f100 80ce 	bmi.w	9000daae <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d912:	06d1      	lsls	r1, r2, #27
9000d914:	f100 80d8 	bmi.w	9000dac8 <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d918:	0692      	lsls	r2, r2, #26
9000d91a:	f100 8125 	bmi.w	9000db68 <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000d91e:	1e30      	subs	r0, r6, #0
9000d920:	bf18      	it	ne
9000d922:	2001      	movne	r0, #1
}
9000d924:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000d928:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000d92c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000d930:	f43f aefc 	beq.w	9000d72c <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000d934:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000d938:	f43f aef8 	beq.w	9000d72c <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000d93c:	2601      	movs	r6, #1
9000d93e:	4635      	mov	r5, r6
9000d940:	e6ff      	b.n	9000d742 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000d942:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000d946:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000d94a:	f43f af11 	beq.w	9000d770 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000d94e:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000d952:	f43f af0d 	beq.w	9000d770 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000d956:	2601      	movs	r6, #1
9000d958:	4635      	mov	r5, r6
9000d95a:	e714      	b.n	9000d786 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000d95c:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000d960:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000d964:	f43f af26 	beq.w	9000d7b4 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000d968:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000d96c:	f43f af22 	beq.w	9000d7b4 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000d970:	2601      	movs	r6, #1
9000d972:	4635      	mov	r5, r6
9000d974:	e729      	b.n	9000d7ca <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000d976:	2900      	cmp	r1, #0
9000d978:	d183      	bne.n	9000d882 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000d97a:	2d00      	cmp	r5, #0
9000d97c:	f040 8151 	bne.w	9000dc22 <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000d980:	4d09      	ldr	r5, [pc, #36]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d982:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000d984:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000d988:	4301      	orrs	r1, r0
9000d98a:	6569      	str	r1, [r5, #84]	; 0x54
9000d98c:	e77a      	b.n	9000d884 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000d98e:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000d990:	2d00      	cmp	r5, #0
9000d992:	f040 80fb 	bne.w	9000db8c <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000d996:	4f04      	ldr	r7, [pc, #16]	; (9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d998:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000d99a:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000d99c:	f021 0107 	bic.w	r1, r1, #7
9000d9a0:	4301      	orrs	r1, r0
9000d9a2:	6539      	str	r1, [r7, #80]	; 0x50
9000d9a4:	e4d7      	b.n	9000d356 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d9a6:	bf00      	nop
9000d9a8:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d9ac:	2101      	movs	r1, #1
9000d9ae:	f104 0008 	add.w	r0, r4, #8
9000d9b2:	f7ff fba1 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000d9b6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000d9b8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d9bc:	2d00      	cmp	r5, #0
9000d9be:	f040 811a 	bne.w	9000dbf6 <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000d9c2:	4fb7      	ldr	r7, [pc, #732]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d9c4:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000d9c6:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000d9c8:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000d9cc:	4301      	orrs	r1, r0
9000d9ce:	6539      	str	r1, [r7, #80]	; 0x50
9000d9d0:	e5b6      	b.n	9000d540 <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d9d2:	2101      	movs	r1, #1
9000d9d4:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d9d8:	f7ff fc08 	bl	9000d1ec <RCCEx_PLL3_Config>
9000d9dc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d9de:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d9e2:	2d00      	cmp	r5, #0
9000d9e4:	f040 811b 	bne.w	9000dc1e <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000d9e8:	4fad      	ldr	r7, [pc, #692]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d9ea:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000d9ee:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d9f0:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000d9f4:	4301      	orrs	r1, r0
9000d9f6:	6579      	str	r1, [r7, #84]	; 0x54
9000d9f8:	e726      	b.n	9000d848 <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d9fa:	2102      	movs	r1, #2
9000d9fc:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000da00:	f7ff fbf4 	bl	9000d1ec <RCCEx_PLL3_Config>
9000da04:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000da06:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000da0a:	2d00      	cmp	r5, #0
9000da0c:	f040 8105 	bne.w	9000dc1a <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000da10:	4fa3      	ldr	r7, [pc, #652]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000da12:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000da16:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000da18:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000da1c:	4301      	orrs	r1, r0
9000da1e:	65b9      	str	r1, [r7, #88]	; 0x58
9000da20:	e700      	b.n	9000d824 <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000da22:	2101      	movs	r1, #1
9000da24:	f104 0008 	add.w	r0, r4, #8
9000da28:	f7ff fb66 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000da2c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000da2e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000da32:	2d00      	cmp	r5, #0
9000da34:	f040 80db 	bne.w	9000dbee <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000da38:	4f99      	ldr	r7, [pc, #612]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000da3a:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000da3c:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000da3e:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000da42:	4301      	orrs	r1, r0
9000da44:	6579      	str	r1, [r7, #84]	; 0x54
9000da46:	e615      	b.n	9000d674 <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000da48:	2102      	movs	r1, #2
9000da4a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000da4e:	f7ff fbcd 	bl	9000d1ec <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000da52:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000da56:	2800      	cmp	r0, #0
9000da58:	f43f af05 	beq.w	9000d866 <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000da5c:	2601      	movs	r6, #1
9000da5e:	e702      	b.n	9000d866 <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000da60:	2100      	movs	r1, #0
9000da62:	f104 0008 	add.w	r0, r4, #8
9000da66:	f7ff fb47 	bl	9000d0f8 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000da6a:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000da6c:	2800      	cmp	r0, #0
9000da6e:	f43f af47 	beq.w	9000d900 <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000da72:	0797      	lsls	r7, r2, #30
9000da74:	4606      	mov	r6, r0
9000da76:	f57f af46 	bpl.w	9000d906 <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000da7a:	2101      	movs	r1, #1
9000da7c:	f104 0008 	add.w	r0, r4, #8
9000da80:	f7ff fb3a 	bl	9000d0f8 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000da84:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000da86:	2800      	cmp	r0, #0
9000da88:	f43f af3d 	beq.w	9000d906 <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000da8c:	0755      	lsls	r5, r2, #29
9000da8e:	4606      	mov	r6, r0
9000da90:	f57f af3c 	bpl.w	9000d90c <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000da94:	2102      	movs	r1, #2
9000da96:	f104 0008 	add.w	r0, r4, #8
9000da9a:	f7ff fb2d 	bl	9000d0f8 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000da9e:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000daa0:	2800      	cmp	r0, #0
9000daa2:	f43f af33 	beq.w	9000d90c <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000daa6:	4606      	mov	r6, r0
9000daa8:	0710      	lsls	r0, r2, #28
9000daaa:	f57f af32 	bpl.w	9000d912 <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000daae:	2100      	movs	r1, #0
9000dab0:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000dab4:	f7ff fb9a 	bl	9000d1ec <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000dab8:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000daba:	2800      	cmp	r0, #0
9000dabc:	f43f af29 	beq.w	9000d912 <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000dac0:	06d1      	lsls	r1, r2, #27
9000dac2:	4606      	mov	r6, r0
9000dac4:	f57f af28 	bpl.w	9000d918 <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000dac8:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000dacc:	2101      	movs	r1, #1
9000dace:	4628      	mov	r0, r5
9000dad0:	f7ff fb8c 	bl	9000d1ec <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000dad4:	2800      	cmp	r0, #0
9000dad6:	f000 80c9 	beq.w	9000dc6c <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000dada:	6863      	ldr	r3, [r4, #4]
9000dadc:	069b      	lsls	r3, r3, #26
9000dade:	d54c      	bpl.n	9000db7a <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000dae0:	4606      	mov	r6, r0
9000dae2:	e043      	b.n	9000db6c <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000dae4:	4f6f      	ldr	r7, [pc, #444]	; (9000dca4 <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000dae6:	683b      	ldr	r3, [r7, #0]
9000dae8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000daec:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000daee:	f7fb fc4f 	bl	90009390 <HAL_GetTick>
9000daf2:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000daf4:	e006      	b.n	9000db04 <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000daf6:	f7fb fc4b 	bl	90009390 <HAL_GetTick>
9000dafa:	eba0 0008 	sub.w	r0, r0, r8
9000dafe:	2864      	cmp	r0, #100	; 0x64
9000db00:	f200 81a0 	bhi.w	9000de44 <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000db04:	683b      	ldr	r3, [r7, #0]
9000db06:	05da      	lsls	r2, r3, #23
9000db08:	d5f5      	bpl.n	9000daf6 <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000db0a:	2d00      	cmp	r5, #0
9000db0c:	f040 81d4 	bne.w	9000deb8 <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000db10:	4a63      	ldr	r2, [pc, #396]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000db12:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000db16:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000db18:	4059      	eors	r1, r3
9000db1a:	f411 7f40 	tst.w	r1, #768	; 0x300
9000db1e:	d00b      	beq.n	9000db38 <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000db20:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000db22:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000db24:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000db28:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000db2c:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000db2e:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000db30:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000db34:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000db36:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000db38:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000db3c:	f000 819e 	beq.w	9000de7c <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000db40:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000db44:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000db48:	f000 81ac 	beq.w	9000dea4 <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000db4c:	4954      	ldr	r1, [pc, #336]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000db4e:	690a      	ldr	r2, [r1, #16]
9000db50:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000db54:	610a      	str	r2, [r1, #16]
9000db56:	4852      	ldr	r0, [pc, #328]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000db58:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000db5c:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000db5e:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000db60:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000db64:	6701      	str	r1, [r0, #112]	; 0x70
9000db66:	e553      	b.n	9000d610 <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000db68:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000db6c:	2102      	movs	r1, #2
9000db6e:	4628      	mov	r0, r5
9000db70:	f7ff fb3c 	bl	9000d1ec <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000db74:	2800      	cmp	r0, #0
9000db76:	f43f aed2 	beq.w	9000d91e <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000db7a:	2001      	movs	r0, #1
}
9000db7c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000db80:	462e      	mov	r6, r5
9000db82:	e450      	b.n	9000d426 <HAL_RCCEx_PeriphCLKConfig+0x146>
9000db84:	462e      	mov	r6, r5
9000db86:	e406      	b.n	9000d396 <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000db88:	462e      	mov	r6, r5
9000db8a:	e489      	b.n	9000d4a0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000db8c:	462e      	mov	r6, r5
9000db8e:	f7ff bbe2 	b.w	9000d356 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000db92:	462e      	mov	r6, r5
9000db94:	e423      	b.n	9000d3de <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000db96:	2102      	movs	r1, #2
9000db98:	f104 0008 	add.w	r0, r4, #8
9000db9c:	f7ff faac 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000dba0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000dba2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dba6:	2d00      	cmp	r5, #0
9000dba8:	d14c      	bne.n	9000dc44 <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000dbaa:	4f3d      	ldr	r7, [pc, #244]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000dbac:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000dbae:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000dbb0:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000dbb4:	4301      	orrs	r1, r0
9000dbb6:	64f9      	str	r1, [r7, #76]	; 0x4c
9000dbb8:	e652      	b.n	9000d860 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000dbba:	4839      	ldr	r0, [pc, #228]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000dbbc:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000dbbe:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000dbc2:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000dbc4:	e462      	b.n	9000d48c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000dbc6:	4836      	ldr	r0, [pc, #216]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000dbc8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000dbca:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000dbce:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000dbd0:	e41e      	b.n	9000d410 <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000dbd2:	4833      	ldr	r0, [pc, #204]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000dbd4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000dbd6:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000dbda:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000dbdc:	f7ff bbd1 	b.w	9000d382 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000dbe0:	482f      	ldr	r0, [pc, #188]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000dbe2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000dbe4:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000dbe8:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000dbea:	f7ff bbed 	b.w	9000d3c8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000dbee:	462e      	mov	r6, r5
9000dbf0:	e540      	b.n	9000d674 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000dbf2:	462e      	mov	r6, r5
9000dbf4:	e5a5      	b.n	9000d742 <HAL_RCCEx_PeriphCLKConfig+0x462>
9000dbf6:	462e      	mov	r6, r5
9000dbf8:	e4a2      	b.n	9000d540 <HAL_RCCEx_PeriphCLKConfig+0x260>
9000dbfa:	462e      	mov	r6, r5
9000dbfc:	e57f      	b.n	9000d6fe <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000dbfe:	462e      	mov	r6, r5
9000dc00:	e42c      	b.n	9000d45c <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000dc02:	462e      	mov	r6, r5
9000dc04:	e501      	b.n	9000d60a <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000dc06:	462e      	mov	r6, r5
9000dc08:	e46a      	b.n	9000d4e0 <HAL_RCCEx_PeriphCLKConfig+0x200>
9000dc0a:	462e      	mov	r6, r5
9000dc0c:	e5dd      	b.n	9000d7ca <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000dc0e:	462e      	mov	r6, r5
9000dc10:	e486      	b.n	9000d520 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000dc12:	462e      	mov	r6, r5
9000dc14:	e5b7      	b.n	9000d786 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000dc16:	462e      	mov	r6, r5
9000dc18:	e54c      	b.n	9000d6b4 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000dc1a:	462e      	mov	r6, r5
9000dc1c:	e602      	b.n	9000d824 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000dc1e:	462e      	mov	r6, r5
9000dc20:	e612      	b.n	9000d848 <HAL_RCCEx_PeriphCLKConfig+0x568>
9000dc22:	462e      	mov	r6, r5
9000dc24:	e62e      	b.n	9000d884 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000dc26:	4f1e      	ldr	r7, [pc, #120]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000dc28:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000dc2a:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000dc2e:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000dc30:	2d00      	cmp	r5, #0
9000dc32:	d1f6      	bne.n	9000dc22 <HAL_RCCEx_PeriphCLKConfig+0x942>
9000dc34:	e6a4      	b.n	9000d980 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000dc36:	481a      	ldr	r0, [pc, #104]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000dc38:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000dc3a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000dc3e:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000dc40:	2d00      	cmp	r5, #0
9000dc42:	d0b2      	beq.n	9000dbaa <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000dc44:	462e      	mov	r6, r5
9000dc46:	e60b      	b.n	9000d860 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000dc48:	4815      	ldr	r0, [pc, #84]	; (9000dca0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000dc4a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000dc4c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000dc50:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000dc52:	2d00      	cmp	r5, #0
9000dc54:	d1e3      	bne.n	9000dc1e <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000dc56:	e6c7      	b.n	9000d9e8 <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000dc58:	f104 0008 	add.w	r0, r4, #8
9000dc5c:	f7ff fa4c 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000dc60:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000dc62:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dc66:	2d00      	cmp	r5, #0
9000dc68:	d1d7      	bne.n	9000dc1a <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000dc6a:	e6d1      	b.n	9000da10 <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000dc6c:	6862      	ldr	r2, [r4, #4]
9000dc6e:	e653      	b.n	9000d918 <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000dc70:	2102      	movs	r1, #2
9000dc72:	f104 0008 	add.w	r0, r4, #8
9000dc76:	f7ff fa3f 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000dc7a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000dc7c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dc80:	2d00      	cmp	r5, #0
9000dc82:	d1bc      	bne.n	9000dbfe <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000dc84:	f7ff bbe3 	b.w	9000d44e <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000dc88:	2102      	movs	r1, #2
9000dc8a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000dc8e:	f7ff faad 	bl	9000d1ec <RCCEx_PLL3_Config>
9000dc92:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000dc94:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dc98:	2d00      	cmp	r5, #0
9000dc9a:	d1ba      	bne.n	9000dc12 <HAL_RCCEx_PeriphCLKConfig+0x932>
9000dc9c:	e56b      	b.n	9000d776 <HAL_RCCEx_PeriphCLKConfig+0x496>
9000dc9e:	bf00      	nop
9000dca0:	58024400 	.word	0x58024400
9000dca4:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000dca8:	2102      	movs	r1, #2
9000dcaa:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000dcae:	f7ff fa9d 	bl	9000d1ec <RCCEx_PLL3_Config>
9000dcb2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000dcb4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dcb8:	2d00      	cmp	r5, #0
9000dcba:	d1a6      	bne.n	9000dc0a <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000dcbc:	e57d      	b.n	9000d7ba <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000dcbe:	4886      	ldr	r0, [pc, #536]	; (9000ded8 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000dcc0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000dcc2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000dcc6:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000dcc8:	2d00      	cmp	r5, #0
9000dcca:	d194      	bne.n	9000dbf6 <HAL_RCCEx_PeriphCLKConfig+0x916>
9000dccc:	e679      	b.n	9000d9c2 <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000dcce:	2101      	movs	r1, #1
9000dcd0:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000dcd4:	f7ff fa8a 	bl	9000d1ec <RCCEx_PLL3_Config>
9000dcd8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000dcda:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dcde:	2d00      	cmp	r5, #0
9000dce0:	d191      	bne.n	9000dc06 <HAL_RCCEx_PeriphCLKConfig+0x926>
9000dce2:	f7ff bbf6 	b.w	9000d4d2 <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000dce6:	2101      	movs	r1, #1
9000dce8:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000dcec:	f7ff fa7e 	bl	9000d1ec <RCCEx_PLL3_Config>
9000dcf0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000dcf2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dcf6:	2d00      	cmp	r5, #0
9000dcf8:	d189      	bne.n	9000dc0e <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000dcfa:	e409      	b.n	9000d510 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000dcfc:	2102      	movs	r1, #2
9000dcfe:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000dd02:	f7ff fa73 	bl	9000d1ec <RCCEx_PLL3_Config>
9000dd06:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000dd08:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dd0c:	2d00      	cmp	r5, #0
9000dd0e:	f47f af70 	bne.w	9000dbf2 <HAL_RCCEx_PeriphCLKConfig+0x912>
9000dd12:	e50e      	b.n	9000d732 <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000dd14:	2102      	movs	r1, #2
9000dd16:	f104 0008 	add.w	r0, r4, #8
9000dd1a:	f7ff f9ed 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000dd1e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000dd20:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dd24:	2d00      	cmp	r5, #0
9000dd26:	f47f af6c 	bne.w	9000dc02 <HAL_RCCEx_PeriphCLKConfig+0x922>
9000dd2a:	e467      	b.n	9000d5fc <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000dd2c:	2102      	movs	r1, #2
9000dd2e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000dd32:	f7ff fa5b 	bl	9000d1ec <RCCEx_PLL3_Config>
9000dd36:	2800      	cmp	r0, #0
9000dd38:	f040 8094 	bne.w	9000de64 <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000dd3c:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000dd40:	e9d4 3200 	ldrd	r3, r2, [r4]
9000dd44:	e549      	b.n	9000d7da <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000dd46:	2102      	movs	r1, #2
9000dd48:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000dd4c:	f7ff fa4e 	bl	9000d1ec <RCCEx_PLL3_Config>
9000dd50:	2800      	cmp	r0, #0
9000dd52:	f040 808d 	bne.w	9000de70 <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000dd56:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000dd5a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000dd5e:	e54a      	b.n	9000d7f6 <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000dd60:	e9d4 3200 	ldrd	r3, r2, [r4]
9000dd64:	f7ff bae9 	b.w	9000d33a <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000dd68:	2100      	movs	r1, #0
9000dd6a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000dd6e:	f7ff fa3d 	bl	9000d1ec <RCCEx_PLL3_Config>
9000dd72:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000dd74:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000dd78:	f7ff bb4a 	b.w	9000d410 <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000dd7c:	2100      	movs	r1, #0
9000dd7e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000dd82:	f7ff fa33 	bl	9000d1ec <RCCEx_PLL3_Config>
9000dd86:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000dd88:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000dd8c:	e600      	b.n	9000d990 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000dd8e:	2100      	movs	r1, #0
9000dd90:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000dd94:	f7ff fa2a 	bl	9000d1ec <RCCEx_PLL3_Config>
9000dd98:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000dd9a:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000dd9e:	f7ff baf0 	b.w	9000d382 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000dda2:	2102      	movs	r1, #2
9000dda4:	3028      	adds	r0, #40	; 0x28
9000dda6:	f7ff fa21 	bl	9000d1ec <RCCEx_PLL3_Config>
9000ddaa:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000ddac:	2e00      	cmp	r6, #0
9000ddae:	f43f aab5 	beq.w	9000d31c <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000ddb2:	e7d5      	b.n	9000dd60 <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ddb4:	4848      	ldr	r0, [pc, #288]	; (9000ded8 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000ddb6:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ddb8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000ddba:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000ddbe:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000ddc0:	e5e6      	b.n	9000d990 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ddc2:	2100      	movs	r1, #0
9000ddc4:	f104 0008 	add.w	r0, r4, #8
9000ddc8:	f7ff f996 	bl	9000d0f8 <RCCEx_PLL2_Config>
9000ddcc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000ddce:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000ddd2:	e5dd      	b.n	9000d990 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000ddd4:	2100      	movs	r1, #0
9000ddd6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ddda:	f7ff fa07 	bl	9000d1ec <RCCEx_PLL3_Config>
9000ddde:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000dde0:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000dde4:	f7ff bb52 	b.w	9000d48c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000dde8:	2100      	movs	r1, #0
9000ddea:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ddee:	f7ff f9fd 	bl	9000d1ec <RCCEx_PLL3_Config>
9000ddf2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000ddf4:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000ddf8:	f7ff bae6 	b.w	9000d3c8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000ddfc:	2101      	movs	r1, #1
9000ddfe:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000de02:	f7ff f9f3 	bl	9000d1ec <RCCEx_PLL3_Config>
9000de06:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000de08:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000de0c:	2d00      	cmp	r5, #0
9000de0e:	f47f aef4 	bne.w	9000dbfa <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000de12:	e46c      	b.n	9000d6ee <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000de14:	2101      	movs	r1, #1
9000de16:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000de1a:	f7ff f9e7 	bl	9000d1ec <RCCEx_PLL3_Config>
9000de1e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000de20:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000de24:	2d00      	cmp	r5, #0
9000de26:	f47f aef6 	bne.w	9000dc16 <HAL_RCCEx_PeriphCLKConfig+0x936>
9000de2a:	e43c      	b.n	9000d6a6 <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000de2c:	2101      	movs	r1, #1
9000de2e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000de32:	f7ff f9db 	bl	9000d1ec <RCCEx_PLL3_Config>
9000de36:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000de38:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000de3c:	2d00      	cmp	r5, #0
9000de3e:	f47f aed6 	bne.w	9000dbee <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000de42:	e5f9      	b.n	9000da38 <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000de44:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000de46:	e9d4 3200 	ldrd	r3, r2, [r4]
9000de4a:	4635      	mov	r5, r6
9000de4c:	f7ff bbe0 	b.w	9000d610 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000de50:	2601      	movs	r6, #1
9000de52:	f7ff ba72 	b.w	9000d33a <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000de56:	4d20      	ldr	r5, [pc, #128]	; (9000ded8 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000de58:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000de5a:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000de5e:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000de60:	f7ff ba64 	b.w	9000d32c <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000de64:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000de68:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000de6a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000de6e:	e4b4      	b.n	9000d7da <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000de70:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000de74:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000de76:	e9d4 3200 	ldrd	r3, r2, [r4]
9000de7a:	e4bc      	b.n	9000d7f6 <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000de7c:	f7fb fa88 	bl	90009390 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000de80:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000ded8 <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000de84:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000de86:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000de8a:	e004      	b.n	9000de96 <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000de8c:	f7fb fa80 	bl	90009390 <HAL_GetTick>
9000de90:	1bc0      	subs	r0, r0, r7
9000de92:	4548      	cmp	r0, r9
9000de94:	d8d6      	bhi.n	9000de44 <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000de96:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000de9a:	079b      	lsls	r3, r3, #30
9000de9c:	d5f6      	bpl.n	9000de8c <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000de9e:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000dea2:	e64d      	b.n	9000db40 <HAL_RCCEx_PeriphCLKConfig+0x860>
9000dea4:	480c      	ldr	r0, [pc, #48]	; (9000ded8 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000dea6:	4a0d      	ldr	r2, [pc, #52]	; (9000dedc <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000dea8:	6901      	ldr	r1, [r0, #16]
9000deaa:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000deae:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000deb2:	430a      	orrs	r2, r1
9000deb4:	6102      	str	r2, [r0, #16]
9000deb6:	e64e      	b.n	9000db56 <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000deb8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000debc:	462e      	mov	r6, r5
9000debe:	f7ff bba7 	b.w	9000d610 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000dec2:	2601      	movs	r6, #1
9000dec4:	4635      	mov	r5, r6
9000dec6:	f7ff bbf5 	b.w	9000d6b4 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000deca:	2601      	movs	r6, #1
9000decc:	4635      	mov	r5, r6
9000dece:	f7ff bb9c 	b.w	9000d60a <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000ded2:	2601      	movs	r6, #1
9000ded4:	4635      	mov	r5, r6
9000ded6:	e412      	b.n	9000d6fe <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000ded8:	58024400 	.word	0x58024400
9000dedc:	00ffffcf 	.word	0x00ffffcf

9000dee0 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000dee0:	b318      	cbz	r0, 9000df2a <HAL_SDRAM_Init+0x4a>
{
9000dee2:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000dee4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000dee8:	4604      	mov	r4, r0
9000deea:	460d      	mov	r5, r1
9000deec:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000def0:	b1b3      	cbz	r3, 9000df20 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000def2:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000def4:	2302      	movs	r3, #2
9000def6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000defa:	f851 0b04 	ldr.w	r0, [r1], #4
9000defe:	f000 fa39 	bl	9000e374 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000df02:	6862      	ldr	r2, [r4, #4]
9000df04:	4629      	mov	r1, r5
9000df06:	6820      	ldr	r0, [r4, #0]
9000df08:	f000 fa72 	bl	9000e3f0 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000df0c:	4a08      	ldr	r2, [pc, #32]	; (9000df30 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000df0e:	2101      	movs	r1, #1

  return HAL_OK;
9000df10:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000df12:	6813      	ldr	r3, [r2, #0]
9000df14:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000df18:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000df1a:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000df1e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000df20:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000df24:	f7f5 f9a4 	bl	90003270 <HAL_SDRAM_MspInit>
9000df28:	e7e3      	b.n	9000def2 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000df2a:	2001      	movs	r0, #1
}
9000df2c:	4770      	bx	lr
9000df2e:	bf00      	nop
9000df30:	52004000 	.word	0x52004000

9000df34 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000df34:	b510      	push	{r4, lr}
9000df36:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000df38:	f7f5 fa16 	bl	90003368 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000df3c:	e9d4 0100 	ldrd	r0, r1, [r4]
9000df40:	f000 faa4 	bl	9000e48c <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000df44:	2000      	movs	r0, #0
9000df46:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000df4a:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000df4e:	bd10      	pop	{r4, pc}

9000df50 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000df50:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000df52:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000df56:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000df58:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000df5a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000df5c:	d004      	beq.n	9000df68 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000df5e:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000df62:	2e01      	cmp	r6, #1
9000df64:	d001      	beq.n	9000df6a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000df66:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000df68:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000df6a:	2302      	movs	r3, #2
9000df6c:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000df6e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000df70:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000df74:	f000 fa9e 	bl	9000e4b4 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000df78:	682b      	ldr	r3, [r5, #0]
9000df7a:	2b02      	cmp	r3, #2
9000df7c:	d003      	beq.n	9000df86 <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000df7e:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000df80:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000df84:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000df86:	2305      	movs	r3, #5
  return HAL_OK;
9000df88:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000df8a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000df8e:	bd70      	pop	{r4, r5, r6, pc}

9000df90 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000df90:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000df92:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000df96:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000df98:	2b02      	cmp	r3, #2
9000df9a:	b2d8      	uxtb	r0, r3
9000df9c:	d005      	beq.n	9000dfaa <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000df9e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000dfa2:	2b01      	cmp	r3, #1
9000dfa4:	b2dd      	uxtb	r5, r3
9000dfa6:	d001      	beq.n	9000dfac <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000dfa8:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000dfaa:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000dfac:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000dfae:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000dfb0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000dfb4:	f000 fa96 	bl	9000e4e4 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000dfb8:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000dfba:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000dfbe:	bd38      	pop	{r3, r4, r5, pc}

9000dfc0 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000dfc0:	4770      	bx	lr
9000dfc2:	bf00      	nop

9000dfc4 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000dfc4:	2800      	cmp	r0, #0
9000dfc6:	f000 80a5 	beq.w	9000e114 <HAL_TIM_Base_Init+0x150>
{
9000dfca:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000dfcc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000dfd0:	4604      	mov	r4, r0
9000dfd2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000dfd6:	2b00      	cmp	r3, #0
9000dfd8:	d076      	beq.n	9000e0c8 <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000dfda:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000dfdc:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dfde:	494e      	ldr	r1, [pc, #312]	; (9000e118 <HAL_TIM_Base_Init+0x154>)
9000dfe0:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000dfe4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dfe8:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000dfec:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dfee:	fab1 f181 	clz	r1, r1
9000dff2:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000dff6:	d027      	beq.n	9000e048 <HAL_TIM_Base_Init+0x84>
9000dff8:	bb31      	cbnz	r1, 9000e048 <HAL_TIM_Base_Init+0x84>
9000dffa:	4848      	ldr	r0, [pc, #288]	; (9000e11c <HAL_TIM_Base_Init+0x158>)
9000dffc:	4d48      	ldr	r5, [pc, #288]	; (9000e120 <HAL_TIM_Base_Init+0x15c>)
9000dffe:	4282      	cmp	r2, r0
9000e000:	d067      	beq.n	9000e0d2 <HAL_TIM_Base_Init+0x10e>
9000e002:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000e006:	4282      	cmp	r2, r0
9000e008:	d063      	beq.n	9000e0d2 <HAL_TIM_Base_Init+0x10e>
9000e00a:	1b55      	subs	r5, r2, r5
9000e00c:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000e010:	fab5 f585 	clz	r5, r5
9000e014:	4282      	cmp	r2, r0
9000e016:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000e01a:	d063      	beq.n	9000e0e4 <HAL_TIM_Base_Init+0x120>
9000e01c:	2d00      	cmp	r5, #0
9000e01e:	d161      	bne.n	9000e0e4 <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e020:	4840      	ldr	r0, [pc, #256]	; (9000e124 <HAL_TIM_Base_Init+0x160>)
9000e022:	4941      	ldr	r1, [pc, #260]	; (9000e128 <HAL_TIM_Base_Init+0x164>)
9000e024:	428a      	cmp	r2, r1
9000e026:	bf18      	it	ne
9000e028:	4282      	cmpne	r2, r0
9000e02a:	d065      	beq.n	9000e0f8 <HAL_TIM_Base_Init+0x134>
9000e02c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000e030:	428a      	cmp	r2, r1
9000e032:	d061      	beq.n	9000e0f8 <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e034:	69a0      	ldr	r0, [r4, #24]
9000e036:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e03a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e03c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000e03e:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000e040:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e042:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e044:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e046:	e023      	b.n	9000e090 <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e048:	4d35      	ldr	r5, [pc, #212]	; (9000e120 <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000e04a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000e04e:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e050:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000e052:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e054:	fab5 f585 	clz	r5, r5
9000e058:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e05a:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000e05c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e060:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e062:	69a0      	ldr	r0, [r4, #24]
9000e064:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000e068:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000e06a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e06c:	68e3      	ldr	r3, [r4, #12]
9000e06e:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e070:	6863      	ldr	r3, [r4, #4]
9000e072:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e074:	b951      	cbnz	r1, 9000e08c <HAL_TIM_Base_Init+0xc8>
9000e076:	b94d      	cbnz	r5, 9000e08c <HAL_TIM_Base_Init+0xc8>
9000e078:	492a      	ldr	r1, [pc, #168]	; (9000e124 <HAL_TIM_Base_Init+0x160>)
9000e07a:	4b2b      	ldr	r3, [pc, #172]	; (9000e128 <HAL_TIM_Base_Init+0x164>)
9000e07c:	429a      	cmp	r2, r3
9000e07e:	bf18      	it	ne
9000e080:	428a      	cmpne	r2, r1
9000e082:	d003      	beq.n	9000e08c <HAL_TIM_Base_Init+0xc8>
9000e084:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000e088:	429a      	cmp	r2, r3
9000e08a:	d101      	bne.n	9000e090 <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000e08c:	6963      	ldr	r3, [r4, #20]
9000e08e:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000e090:	2301      	movs	r3, #1
  return HAL_OK;
9000e092:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000e094:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000e096:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000e09a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000e09e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000e0a2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000e0a6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000e0aa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000e0ae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000e0b2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000e0b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000e0ba:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000e0be:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000e0c2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000e0c6:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000e0c8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000e0cc:	f7ff ff78 	bl	9000dfc0 <HAL_TIM_Base_MspInit>
9000e0d0:	e783      	b.n	9000dfda <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e0d2:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000e0d4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000e0d8:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e0da:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000e0de:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e0e0:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e0e2:	e7ba      	b.n	9000e05a <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000e0e4:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000e0e6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000e0ea:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e0ec:	480f      	ldr	r0, [pc, #60]	; (9000e12c <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e0ee:	4282      	cmp	r2, r0
9000e0f0:	d0b3      	beq.n	9000e05a <HAL_TIM_Base_Init+0x96>
9000e0f2:	2d00      	cmp	r5, #0
9000e0f4:	d1b1      	bne.n	9000e05a <HAL_TIM_Base_Init+0x96>
9000e0f6:	e793      	b.n	9000e020 <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e0f8:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000e0fa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e0fe:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e100:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e102:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e104:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000e108:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000e10a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000e10c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e10e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e110:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e112:	e7b1      	b.n	9000e078 <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000e114:	2001      	movs	r0, #1
}
9000e116:	4770      	bx	lr
9000e118:	40010000 	.word	0x40010000
9000e11c:	40000400 	.word	0x40000400
9000e120:	40010400 	.word	0x40010400
9000e124:	40014000 	.word	0x40014000
9000e128:	40014400 	.word	0x40014400
9000e12c:	40000c00 	.word	0x40000c00

9000e130 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000e130:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000e134:	2b01      	cmp	r3, #1
9000e136:	d141      	bne.n	9000e1bc <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e138:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000e13a:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e13c:	4b24      	ldr	r3, [pc, #144]	; (9000e1d0 <HAL_TIM_Base_Start_IT+0xa0>)
9000e13e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000e142:	bf18      	it	ne
9000e144:	429a      	cmpne	r2, r3
{
9000e146:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e148:	bf0c      	ite	eq
9000e14a:	2301      	moveq	r3, #1
9000e14c:	2300      	movne	r3, #0
9000e14e:	4d21      	ldr	r5, [pc, #132]	; (9000e1d4 <HAL_TIM_Base_Start_IT+0xa4>)
9000e150:	4c21      	ldr	r4, [pc, #132]	; (9000e1d8 <HAL_TIM_Base_Start_IT+0xa8>)
9000e152:	42aa      	cmp	r2, r5
9000e154:	bf08      	it	eq
9000e156:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000e15a:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e15e:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e160:	42a2      	cmp	r2, r4
9000e162:	bf08      	it	eq
9000e164:	f043 0301 	orreq.w	r3, r3, #1
9000e168:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e16c:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e170:	481a      	ldr	r0, [pc, #104]	; (9000e1dc <HAL_TIM_Base_Start_IT+0xac>)
9000e172:	42a2      	cmp	r2, r4
9000e174:	bf08      	it	eq
9000e176:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e17a:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e17c:	4282      	cmp	r2, r0
9000e17e:	bf08      	it	eq
9000e180:	f043 0301 	orreq.w	r3, r3, #1
9000e184:	4916      	ldr	r1, [pc, #88]	; (9000e1e0 <HAL_TIM_Base_Start_IT+0xb0>)
9000e186:	428a      	cmp	r2, r1
9000e188:	bf08      	it	eq
9000e18a:	f043 0301 	orreq.w	r3, r3, #1
9000e18e:	b933      	cbnz	r3, 9000e19e <HAL_TIM_Base_Start_IT+0x6e>
9000e190:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000e194:	1a10      	subs	r0, r2, r0
9000e196:	fab0 f080 	clz	r0, r0
9000e19a:	0940      	lsrs	r0, r0, #5
9000e19c:	b198      	cbz	r0, 9000e1c6 <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000e19e:	6891      	ldr	r1, [r2, #8]
9000e1a0:	4b10      	ldr	r3, [pc, #64]	; (9000e1e4 <HAL_TIM_Base_Start_IT+0xb4>)
9000e1a2:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000e1a4:	2b06      	cmp	r3, #6
9000e1a6:	d00b      	beq.n	9000e1c0 <HAL_TIM_Base_Start_IT+0x90>
9000e1a8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000e1ac:	d008      	beq.n	9000e1c0 <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000e1ae:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000e1b0:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000e1b2:	f043 0301 	orr.w	r3, r3, #1
9000e1b6:	6013      	str	r3, [r2, #0]
}
9000e1b8:	bc30      	pop	{r4, r5}
9000e1ba:	4770      	bx	lr
    return HAL_ERROR;
9000e1bc:	2001      	movs	r0, #1
}
9000e1be:	4770      	bx	lr
  return HAL_OK;
9000e1c0:	2000      	movs	r0, #0
}
9000e1c2:	bc30      	pop	{r4, r5}
9000e1c4:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000e1c6:	6813      	ldr	r3, [r2, #0]
9000e1c8:	f043 0301 	orr.w	r3, r3, #1
9000e1cc:	6013      	str	r3, [r2, #0]
9000e1ce:	e7f3      	b.n	9000e1b8 <HAL_TIM_Base_Start_IT+0x88>
9000e1d0:	40010000 	.word	0x40010000
9000e1d4:	40000400 	.word	0x40000400
9000e1d8:	40000800 	.word	0x40000800
9000e1dc:	40010400 	.word	0x40010400
9000e1e0:	40001800 	.word	0x40001800
9000e1e4:	00010007 	.word	0x00010007

9000e1e8 <HAL_TIM_OC_DelayElapsedCallback>:
9000e1e8:	4770      	bx	lr
9000e1ea:	bf00      	nop

9000e1ec <HAL_TIM_IC_CaptureCallback>:
9000e1ec:	4770      	bx	lr
9000e1ee:	bf00      	nop

9000e1f0 <HAL_TIM_PWM_PulseFinishedCallback>:
9000e1f0:	4770      	bx	lr
9000e1f2:	bf00      	nop

9000e1f4 <HAL_TIM_TriggerCallback>:
9000e1f4:	4770      	bx	lr
9000e1f6:	bf00      	nop

9000e1f8 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000e1f8:	6803      	ldr	r3, [r0, #0]
9000e1fa:	691a      	ldr	r2, [r3, #16]
9000e1fc:	0791      	lsls	r1, r2, #30
{
9000e1fe:	b510      	push	{r4, lr}
9000e200:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000e202:	d502      	bpl.n	9000e20a <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000e204:	68da      	ldr	r2, [r3, #12]
9000e206:	0792      	lsls	r2, r2, #30
9000e208:	d468      	bmi.n	9000e2dc <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000e20a:	691a      	ldr	r2, [r3, #16]
9000e20c:	0752      	lsls	r2, r2, #29
9000e20e:	d502      	bpl.n	9000e216 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000e210:	68da      	ldr	r2, [r3, #12]
9000e212:	0750      	lsls	r0, r2, #29
9000e214:	d44f      	bmi.n	9000e2b6 <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000e216:	691a      	ldr	r2, [r3, #16]
9000e218:	0711      	lsls	r1, r2, #28
9000e21a:	d502      	bpl.n	9000e222 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000e21c:	68da      	ldr	r2, [r3, #12]
9000e21e:	0712      	lsls	r2, r2, #28
9000e220:	d437      	bmi.n	9000e292 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000e222:	691a      	ldr	r2, [r3, #16]
9000e224:	06d0      	lsls	r0, r2, #27
9000e226:	d502      	bpl.n	9000e22e <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000e228:	68da      	ldr	r2, [r3, #12]
9000e22a:	06d1      	lsls	r1, r2, #27
9000e22c:	d41e      	bmi.n	9000e26c <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000e22e:	691a      	ldr	r2, [r3, #16]
9000e230:	07d2      	lsls	r2, r2, #31
9000e232:	d502      	bpl.n	9000e23a <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000e234:	68da      	ldr	r2, [r3, #12]
9000e236:	07d0      	lsls	r0, r2, #31
9000e238:	d469      	bmi.n	9000e30e <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000e23a:	691a      	ldr	r2, [r3, #16]
9000e23c:	0611      	lsls	r1, r2, #24
9000e23e:	d502      	bpl.n	9000e246 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000e240:	68da      	ldr	r2, [r3, #12]
9000e242:	0612      	lsls	r2, r2, #24
9000e244:	d46b      	bmi.n	9000e31e <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000e246:	691a      	ldr	r2, [r3, #16]
9000e248:	05d0      	lsls	r0, r2, #23
9000e24a:	d502      	bpl.n	9000e252 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000e24c:	68da      	ldr	r2, [r3, #12]
9000e24e:	0611      	lsls	r1, r2, #24
9000e250:	d46d      	bmi.n	9000e32e <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000e252:	691a      	ldr	r2, [r3, #16]
9000e254:	0652      	lsls	r2, r2, #25
9000e256:	d502      	bpl.n	9000e25e <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000e258:	68da      	ldr	r2, [r3, #12]
9000e25a:	0650      	lsls	r0, r2, #25
9000e25c:	d46f      	bmi.n	9000e33e <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000e25e:	691a      	ldr	r2, [r3, #16]
9000e260:	0691      	lsls	r1, r2, #26
9000e262:	d502      	bpl.n	9000e26a <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000e264:	68da      	ldr	r2, [r3, #12]
9000e266:	0692      	lsls	r2, r2, #26
9000e268:	d449      	bmi.n	9000e2fe <HAL_TIM_IRQHandler+0x106>
}
9000e26a:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000e26c:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000e270:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000e272:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000e274:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000e276:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000e278:	69db      	ldr	r3, [r3, #28]
9000e27a:	f413 7f40 	tst.w	r3, #768	; 0x300
9000e27e:	d16f      	bne.n	9000e360 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000e280:	f7ff ffb2 	bl	9000e1e8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e284:	4620      	mov	r0, r4
9000e286:	f7ff ffb3 	bl	9000e1f0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e28a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000e28c:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e28e:	7722      	strb	r2, [r4, #28]
9000e290:	e7cd      	b.n	9000e22e <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000e292:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000e296:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000e298:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000e29a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000e29c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000e29e:	69db      	ldr	r3, [r3, #28]
9000e2a0:	079b      	lsls	r3, r3, #30
9000e2a2:	d15a      	bne.n	9000e35a <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000e2a4:	f7ff ffa0 	bl	9000e1e8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e2a8:	4620      	mov	r0, r4
9000e2aa:	f7ff ffa1 	bl	9000e1f0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e2ae:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000e2b0:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e2b2:	7722      	strb	r2, [r4, #28]
9000e2b4:	e7b5      	b.n	9000e222 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000e2b6:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000e2ba:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000e2bc:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000e2be:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000e2c0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000e2c2:	699b      	ldr	r3, [r3, #24]
9000e2c4:	f413 7f40 	tst.w	r3, #768	; 0x300
9000e2c8:	d144      	bne.n	9000e354 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000e2ca:	f7ff ff8d 	bl	9000e1e8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e2ce:	4620      	mov	r0, r4
9000e2d0:	f7ff ff8e 	bl	9000e1f0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e2d4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000e2d6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e2d8:	7722      	strb	r2, [r4, #28]
9000e2da:	e79c      	b.n	9000e216 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000e2dc:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000e2e0:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000e2e2:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000e2e4:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000e2e6:	699b      	ldr	r3, [r3, #24]
9000e2e8:	0799      	lsls	r1, r3, #30
9000e2ea:	d130      	bne.n	9000e34e <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000e2ec:	f7ff ff7c 	bl	9000e1e8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e2f0:	4620      	mov	r0, r4
9000e2f2:	f7ff ff7d 	bl	9000e1f0 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e2f6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000e2f8:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e2fa:	7722      	strb	r2, [r4, #28]
9000e2fc:	e785      	b.n	9000e20a <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000e2fe:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000e302:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000e304:	611a      	str	r2, [r3, #16]
}
9000e306:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000e30a:	f000 b82d 	b.w	9000e368 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000e30e:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000e312:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000e314:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000e316:	f7f4 fe0f 	bl	90002f38 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000e31a:	6823      	ldr	r3, [r4, #0]
9000e31c:	e78d      	b.n	9000e23a <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000e31e:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000e322:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000e324:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000e326:	f000 f821 	bl	9000e36c <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000e32a:	6823      	ldr	r3, [r4, #0]
9000e32c:	e78b      	b.n	9000e246 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000e32e:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000e332:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000e334:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000e336:	f000 f81b 	bl	9000e370 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000e33a:	6823      	ldr	r3, [r4, #0]
9000e33c:	e789      	b.n	9000e252 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000e33e:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000e342:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000e344:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000e346:	f7ff ff55 	bl	9000e1f4 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000e34a:	6823      	ldr	r3, [r4, #0]
9000e34c:	e787      	b.n	9000e25e <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000e34e:	f7ff ff4d 	bl	9000e1ec <HAL_TIM_IC_CaptureCallback>
9000e352:	e7d0      	b.n	9000e2f6 <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000e354:	f7ff ff4a 	bl	9000e1ec <HAL_TIM_IC_CaptureCallback>
9000e358:	e7bc      	b.n	9000e2d4 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000e35a:	f7ff ff47 	bl	9000e1ec <HAL_TIM_IC_CaptureCallback>
9000e35e:	e7a6      	b.n	9000e2ae <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000e360:	f7ff ff44 	bl	9000e1ec <HAL_TIM_IC_CaptureCallback>
9000e364:	e791      	b.n	9000e28a <HAL_TIM_IRQHandler+0x92>
9000e366:	bf00      	nop

9000e368 <HAL_TIMEx_CommutCallback>:
9000e368:	4770      	bx	lr
9000e36a:	bf00      	nop

9000e36c <HAL_TIMEx_BreakCallback>:
9000e36c:	4770      	bx	lr
9000e36e:	bf00      	nop

9000e370 <HAL_TIMEx_Break2Callback>:
9000e370:	4770      	bx	lr
9000e372:	bf00      	nop

9000e374 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000e374:	680b      	ldr	r3, [r1, #0]
{
9000e376:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000e378:	b9d3      	cbnz	r3, 9000e3b0 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e37a:	6804      	ldr	r4, [r0, #0]
9000e37c:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9000e380:	684a      	ldr	r2, [r1, #4]
9000e382:	4023      	ands	r3, r4
9000e384:	4313      	orrs	r3, r2
9000e386:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000e38a:	4323      	orrs	r3, r4
9000e38c:	4313      	orrs	r3, r2
9000e38e:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9000e392:	4323      	orrs	r3, r4
9000e394:	4313      	orrs	r3, r2
9000e396:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
9000e39a:	4323      	orrs	r3, r4
9000e39c:	4313      	orrs	r3, r2
9000e39e:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9000e3a2:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000e3a4:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e3a8:	4313      	orrs	r3, r2
9000e3aa:	6003      	str	r3, [r0, #0]
}
9000e3ac:	2000      	movs	r0, #0
9000e3ae:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e3b0:	6802      	ldr	r2, [r0, #0]
9000e3b2:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000e3b6:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000e3ba:	4322      	orrs	r2, r4
9000e3bc:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9000e3be:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e3c0:	4b0a      	ldr	r3, [pc, #40]	; (9000e3ec <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e3c2:	4322      	orrs	r2, r4
9000e3c4:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e3c6:	6842      	ldr	r2, [r0, #4]
9000e3c8:	4013      	ands	r3, r2
9000e3ca:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
9000e3ce:	4323      	orrs	r3, r4
9000e3d0:	4313      	orrs	r3, r2
9000e3d2:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
9000e3d6:	4323      	orrs	r3, r4
9000e3d8:	4313      	orrs	r3, r2
9000e3da:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
9000e3de:	4323      	orrs	r3, r4
}
9000e3e0:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e3e4:	4313      	orrs	r3, r2
9000e3e6:	6043      	str	r3, [r0, #4]
}
9000e3e8:	2000      	movs	r0, #0
9000e3ea:	4770      	bx	lr
9000e3ec:	ffff8000 	.word	0xffff8000

9000e3f0 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000e3f0:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000e3f2:	bb0a      	cbnz	r2, 9000e438 <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e3f4:	6883      	ldr	r3, [r0, #8]
9000e3f6:	e9d1 2400 	ldrd	r2, r4, [r1]
9000e3fa:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000e3fe:	3c01      	subs	r4, #1
9000e400:	3a01      	subs	r2, #1
9000e402:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000e406:	4313      	orrs	r3, r2
9000e408:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000e40c:	3c01      	subs	r4, #1
9000e40e:	3a01      	subs	r2, #1
9000e410:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000e414:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000e418:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000e41c:	698a      	ldr	r2, [r1, #24]
9000e41e:	3d01      	subs	r5, #1
9000e420:	1e61      	subs	r1, r4, #1
9000e422:	3a01      	subs	r2, #1
9000e424:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000e428:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
9000e42c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000e430:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e432:	6083      	str	r3, [r0, #8]
}
9000e434:	2000      	movs	r0, #0
9000e436:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e438:	6885      	ldr	r5, [r0, #8]
9000e43a:	68ca      	ldr	r2, [r1, #12]
9000e43c:	4b12      	ldr	r3, [pc, #72]	; (9000e488 <FMC_SDRAM_Timing_Init+0x98>)
9000e43e:	1e54      	subs	r4, r2, #1
9000e440:	694a      	ldr	r2, [r1, #20]
9000e442:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e444:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e446:	3a01      	subs	r2, #1
9000e448:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e44c:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e450:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e454:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e458:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e45a:	68c3      	ldr	r3, [r0, #12]
9000e45c:	3c01      	subs	r4, #1
9000e45e:	3a01      	subs	r2, #1
9000e460:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000e464:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000e468:	690c      	ldr	r4, [r1, #16]
9000e46a:	4313      	orrs	r3, r2
9000e46c:	698a      	ldr	r2, [r1, #24]
9000e46e:	1e61      	subs	r1, r4, #1
9000e470:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000e474:	3a01      	subs	r2, #1
9000e476:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000e47a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9000e47e:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e480:	60c3      	str	r3, [r0, #12]
}
9000e482:	2000      	movs	r0, #0
9000e484:	4770      	bx	lr
9000e486:	bf00      	nop
9000e488:	ff0f0fff 	.word	0xff0f0fff

9000e48c <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000e48c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000e48e:	2200      	movs	r2, #0
{
9000e490:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000e492:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e496:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
9000e49a:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000e49e:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000e4a2:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e4a4:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000e4a8:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000e4aa:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000e4ac:	619a      	str	r2, [r3, #24]
}
9000e4ae:	bc30      	pop	{r4, r5}
9000e4b0:	4770      	bx	lr
9000e4b2:	bf00      	nop

9000e4b4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000e4b4:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e4b6:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000e4ba:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e4bc:	6900      	ldr	r0, [r0, #16]
9000e4be:	4323      	orrs	r3, r4
9000e4c0:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000e4c4:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000e4c8:	4c05      	ldr	r4, [pc, #20]	; (9000e4e0 <FMC_SDRAM_SendCommand+0x2c>)
9000e4ca:	3901      	subs	r1, #1
9000e4cc:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000e4ce:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e4d0:	4323      	orrs	r3, r4
}
9000e4d2:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e4d6:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000e4da:	6113      	str	r3, [r2, #16]
}
9000e4dc:	4770      	bx	lr
9000e4de:	bf00      	nop
9000e4e0:	ffc00000 	.word	0xffc00000

9000e4e4 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000e4e4:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e4e6:	4b05      	ldr	r3, [pc, #20]	; (9000e4fc <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000e4e8:	2000      	movs	r0, #0
{
9000e4ea:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e4ec:	6954      	ldr	r4, [r2, #20]
9000e4ee:	4023      	ands	r3, r4
}
9000e4f0:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e4f4:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000e4f8:	6151      	str	r1, [r2, #20]
}
9000e4fa:	4770      	bx	lr
9000e4fc:	ffffc001 	.word	0xffffc001

9000e500 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000e500:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000e502:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e506:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000e508:	f002 fcd6 	bl	90010eb8 <xTaskGetSchedulerState>
9000e50c:	2801      	cmp	r0, #1
9000e50e:	d100      	bne.n	9000e512 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000e510:	bd08      	pop	{r3, pc}
9000e512:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000e516:	f000 bcd5 	b.w	9000eec4 <xPortSysTickHandler>
9000e51a:	bf00      	nop

9000e51c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000e51c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000e520:	b92b      	cbnz	r3, 9000e52e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000e522:	4b06      	ldr	r3, [pc, #24]	; (9000e53c <osKernelInitialize+0x20>)
9000e524:	6818      	ldr	r0, [r3, #0]
9000e526:	b928      	cbnz	r0, 9000e534 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000e528:	2201      	movs	r2, #1
9000e52a:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000e52c:	4770      	bx	lr
    stat = osErrorISR;
9000e52e:	f06f 0005 	mvn.w	r0, #5
9000e532:	4770      	bx	lr
    } else {
      stat = osError;
9000e534:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000e538:	4770      	bx	lr
9000e53a:	bf00      	nop
9000e53c:	240206fc 	.word	0x240206fc

9000e540 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000e540:	b510      	push	{r4, lr}
9000e542:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000e546:	b974      	cbnz	r4, 9000e566 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000e548:	4b08      	ldr	r3, [pc, #32]	; (9000e56c <osKernelStart+0x2c>)
9000e54a:	681a      	ldr	r2, [r3, #0]
9000e54c:	2a01      	cmp	r2, #1
9000e54e:	d107      	bne.n	9000e560 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000e550:	4907      	ldr	r1, [pc, #28]	; (9000e570 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000e552:	2202      	movs	r2, #2
9000e554:	77cc      	strb	r4, [r1, #31]
9000e556:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000e558:	f002 fa3c 	bl	900109d4 <vTaskStartScheduler>
      stat = osOK;
9000e55c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000e55e:	bd10      	pop	{r4, pc}
      stat = osError;
9000e560:	f04f 30ff 	mov.w	r0, #4294967295
}
9000e564:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000e566:	f06f 0005 	mvn.w	r0, #5
}
9000e56a:	bd10      	pop	{r4, pc}
9000e56c:	240206fc 	.word	0x240206fc
9000e570:	e000ed00 	.word	0xe000ed00

9000e574 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000e574:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000e576:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000e578:	b087      	sub	sp, #28
9000e57a:	4614      	mov	r4, r2
  hTask = NULL;
9000e57c:	9505      	str	r5, [sp, #20]
9000e57e:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000e582:	bb5a      	cbnz	r2, 9000e5dc <osThreadNew+0x68>
9000e584:	4606      	mov	r6, r0
9000e586:	b348      	cbz	r0, 9000e5dc <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000e588:	b1e4      	cbz	r4, 9000e5c4 <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000e58a:	69a7      	ldr	r7, [r4, #24]
9000e58c:	bb4f      	cbnz	r7, 9000e5e2 <osThreadNew+0x6e>
9000e58e:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000e590:	6863      	ldr	r3, [r4, #4]
9000e592:	07db      	lsls	r3, r3, #31
9000e594:	d422      	bmi.n	9000e5dc <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000e596:	6963      	ldr	r3, [r4, #20]
9000e598:	b33b      	cbz	r3, 9000e5ea <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000e59a:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000e59e:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9000e5a0:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000e5a2:	b338      	cbz	r0, 9000e5f4 <osThreadNew+0x80>
9000e5a4:	68e2      	ldr	r2, [r4, #12]
9000e5a6:	2a5f      	cmp	r2, #95	; 0x5f
9000e5a8:	d918      	bls.n	9000e5dc <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000e5aa:	6924      	ldr	r4, [r4, #16]
9000e5ac:	b1b3      	cbz	r3, 9000e5dc <osThreadNew+0x68>
9000e5ae:	b1ac      	cbz	r4, 9000e5dc <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000e5b0:	460b      	mov	r3, r1
9000e5b2:	4662      	mov	r2, ip
9000e5b4:	4629      	mov	r1, r5
9000e5b6:	9700      	str	r7, [sp, #0]
9000e5b8:	e9cd 4001 	strd	r4, r0, [sp, #4]
9000e5bc:	4630      	mov	r0, r6
9000e5be:	f002 f86d 	bl	9001069c <xTaskCreateStatic>
9000e5c2:	e00c      	b.n	9000e5de <osThreadNew+0x6a>
9000e5c4:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000e5c6:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000e5c8:	460b      	mov	r3, r1
9000e5ca:	4621      	mov	r1, r4
9000e5cc:	ac05      	add	r4, sp, #20
9000e5ce:	4630      	mov	r0, r6
9000e5d0:	9700      	str	r7, [sp, #0]
9000e5d2:	9401      	str	r4, [sp, #4]
9000e5d4:	f002 f90c 	bl	900107f0 <xTaskCreate>
9000e5d8:	2801      	cmp	r0, #1
9000e5da:	d009      	beq.n	9000e5f0 <osThreadNew+0x7c>
        return (NULL);
9000e5dc:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000e5de:	b007      	add	sp, #28
9000e5e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000e5e2:	1e7a      	subs	r2, r7, #1
9000e5e4:	2a37      	cmp	r2, #55	; 0x37
9000e5e6:	d9d3      	bls.n	9000e590 <osThreadNew+0x1c>
9000e5e8:	e7f8      	b.n	9000e5dc <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
9000e5ea:	f04f 0c80 	mov.w	ip, #128	; 0x80
9000e5ee:	e7d6      	b.n	9000e59e <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
9000e5f0:	9805      	ldr	r0, [sp, #20]
9000e5f2:	e7f4      	b.n	9000e5de <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000e5f4:	68e3      	ldr	r3, [r4, #12]
9000e5f6:	2b00      	cmp	r3, #0
9000e5f8:	d1f1      	bne.n	9000e5de <osThreadNew+0x6a>
9000e5fa:	6923      	ldr	r3, [r4, #16]
9000e5fc:	2b00      	cmp	r3, #0
9000e5fe:	d1ee      	bne.n	9000e5de <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000e600:	fa1f f28c 	uxth.w	r2, ip
9000e604:	462c      	mov	r4, r5
9000e606:	e7df      	b.n	9000e5c8 <osThreadNew+0x54>

9000e608 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000e608:	b510      	push	{r4, lr}
9000e60a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000e60e:	b92c      	cbnz	r4, 9000e61c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000e610:	b900      	cbnz	r0, 9000e614 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000e612:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
9000e614:	f002 f988 	bl	90010928 <vTaskDelay>
    stat = osOK;
9000e618:	4620      	mov	r0, r4
}
9000e61a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000e61c:	f06f 0005 	mvn.w	r0, #5
}
9000e620:	bd10      	pop	{r4, pc}
9000e622:	bf00      	nop

9000e624 <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
9000e624:	b570      	push	{r4, r5, r6, lr}
9000e626:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9000e62a:	b9db      	cbnz	r3, 9000e664 <osMutexNew+0x40>
    if (attr != NULL) {
9000e62c:	4604      	mov	r4, r0
9000e62e:	b1e0      	cbz	r0, 9000e66a <osMutexNew+0x46>
      type = attr->attr_bits;
9000e630:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9000e632:	0733      	lsls	r3, r6, #28
9000e634:	d416      	bmi.n	9000e664 <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000e636:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9000e638:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000e63c:	68c3      	ldr	r3, [r0, #12]
9000e63e:	b181      	cbz	r1, 9000e662 <osMutexNew+0x3e>
9000e640:	2b4f      	cmp	r3, #79	; 0x4f
9000e642:	d90f      	bls.n	9000e664 <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
9000e644:	b31e      	cbz	r6, 9000e68e <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
9000e646:	2004      	movs	r0, #4
9000e648:	f001 f84e 	bl	9000f6e8 <xQueueCreateMutexStatic>
9000e64c:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9000e64e:	b14d      	cbz	r5, 9000e664 <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9000e650:	6821      	ldr	r1, [r4, #0]
9000e652:	4628      	mov	r0, r5
9000e654:	f001 fd7e 	bl	90010154 <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
9000e658:	b12e      	cbz	r6, 9000e666 <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9000e65a:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9000e65e:	4628      	mov	r0, r5
9000e660:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000e662:	b163      	cbz	r3, 9000e67e <osMutexNew+0x5a>
  hMutex = NULL;
9000e664:	2500      	movs	r5, #0
}
9000e666:	4628      	mov	r0, r5
9000e668:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
9000e66a:	2001      	movs	r0, #1
9000e66c:	f001 f8ac 	bl	9000f7c8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000e670:	4605      	mov	r5, r0
9000e672:	2800      	cmp	r0, #0
9000e674:	d0f6      	beq.n	9000e664 <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
9000e676:	4621      	mov	r1, r4
9000e678:	f001 fd6c 	bl	90010154 <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
9000e67c:	e7f3      	b.n	9000e666 <osMutexNew+0x42>
            if (rmtx != 0U) {
9000e67e:	b15e      	cbz	r6, 9000e698 <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9000e680:	2004      	movs	r0, #4
9000e682:	f001 f8a1 	bl	9000f7c8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000e686:	4605      	mov	r5, r0
9000e688:	2800      	cmp	r0, #0
9000e68a:	d1e1      	bne.n	9000e650 <osMutexNew+0x2c>
9000e68c:	e7ea      	b.n	9000e664 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9000e68e:	2001      	movs	r0, #1
9000e690:	f001 f82a 	bl	9000f6e8 <xQueueCreateMutexStatic>
9000e694:	4605      	mov	r5, r0
9000e696:	e7da      	b.n	9000e64e <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
9000e698:	2001      	movs	r0, #1
9000e69a:	f001 f895 	bl	9000f7c8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000e69e:	4605      	mov	r5, r0
9000e6a0:	e7d5      	b.n	9000e64e <osMutexNew+0x2a>
9000e6a2:	bf00      	nop

9000e6a4 <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
9000e6a4:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
9000e6a8:	f000 0301 	and.w	r3, r0, #1
9000e6ac:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
9000e6b0:	b9a8      	cbnz	r0, 9000e6de <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000e6b2:	b1ba      	cbz	r2, 9000e6e4 <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000e6b4:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
9000e6b6:	b510      	push	{r4, lr}
9000e6b8:	460c      	mov	r4, r1
    if (rmtx != 0U) {
9000e6ba:	b953      	cbnz	r3, 9000e6d2 <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
9000e6bc:	f001 fafc 	bl	9000fcb8 <xQueueSemaphoreTake>
9000e6c0:	2801      	cmp	r0, #1
9000e6c2:	d00a      	beq.n	9000e6da <osMutexAcquire+0x36>
          stat = osErrorResource;
9000e6c4:	2c00      	cmp	r4, #0
9000e6c6:	bf14      	ite	ne
9000e6c8:	f06f 0001 	mvnne.w	r0, #1
9000e6cc:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
9000e6d0:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000e6d2:	f001 fc79 	bl	9000ffc8 <xQueueTakeMutexRecursive>
9000e6d6:	2801      	cmp	r0, #1
9000e6d8:	d1f4      	bne.n	9000e6c4 <osMutexAcquire+0x20>
  stat = osOK;
9000e6da:	2000      	movs	r0, #0
}
9000e6dc:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000e6de:	f06f 0005 	mvn.w	r0, #5
9000e6e2:	4770      	bx	lr
    stat = osErrorParameter;
9000e6e4:	f06f 0003 	mvn.w	r0, #3
}
9000e6e8:	4770      	bx	lr
9000e6ea:	bf00      	nop

9000e6ec <osMutexRelease>:
9000e6ec:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
9000e6f0:	b9ba      	cbnz	r2, 9000e722 <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
9000e6f2:	b510      	push	{r4, lr}
9000e6f4:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000e6f8:	b1b4      	cbz	r4, 9000e728 <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
9000e6fa:	f000 0301 	and.w	r3, r0, #1
9000e6fe:	b943      	cbnz	r3, 9000e712 <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
9000e700:	461a      	mov	r2, r3
9000e702:	4619      	mov	r1, r3
9000e704:	4620      	mov	r0, r4
9000e706:	f000 fe6d 	bl	9000f3e4 <xQueueGenericSend>
9000e70a:	2801      	cmp	r0, #1
9000e70c:	d106      	bne.n	9000e71c <osMutexRelease+0x30>
  stat = osOK;
9000e70e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e710:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9000e712:	4620      	mov	r0, r4
9000e714:	f001 f838 	bl	9000f788 <xQueueGiveMutexRecursive>
9000e718:	2801      	cmp	r0, #1
9000e71a:	d0f8      	beq.n	9000e70e <osMutexRelease+0x22>
        stat = osErrorResource;
9000e71c:	f06f 0002 	mvn.w	r0, #2
}
9000e720:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000e722:	f06f 0005 	mvn.w	r0, #5
}
9000e726:	4770      	bx	lr
    stat = osErrorParameter;
9000e728:	f06f 0003 	mvn.w	r0, #3
}
9000e72c:	bd10      	pop	{r4, pc}
9000e72e:	bf00      	nop

9000e730 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000e730:	b5f0      	push	{r4, r5, r6, r7, lr}
9000e732:	b083      	sub	sp, #12
9000e734:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000e738:	b98e      	cbnz	r6, 9000e75e <osSemaphoreNew+0x2e>
9000e73a:	4605      	mov	r5, r0
9000e73c:	b178      	cbz	r0, 9000e75e <osSemaphoreNew+0x2e>
9000e73e:	4288      	cmp	r0, r1
9000e740:	460f      	mov	r7, r1
9000e742:	d30c      	bcc.n	9000e75e <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000e744:	4614      	mov	r4, r2
9000e746:	b182      	cbz	r2, 9000e76a <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000e748:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000e74c:	b15a      	cbz	r2, 9000e766 <osSemaphoreNew+0x36>
9000e74e:	2b4f      	cmp	r3, #79	; 0x4f
9000e750:	d905      	bls.n	9000e75e <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000e752:	2801      	cmp	r0, #1
9000e754:	d032      	beq.n	9000e7bc <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000e756:	f000 fd9d 	bl	9000f294 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000e75a:	4605      	mov	r5, r0
9000e75c:	b978      	cbnz	r0, 9000e77e <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9000e75e:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000e760:	4628      	mov	r0, r5
9000e762:	b003      	add	sp, #12
9000e764:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000e766:	2b00      	cmp	r3, #0
9000e768:	d1f9      	bne.n	9000e75e <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000e76a:	2d01      	cmp	r5, #1
9000e76c:	d00f      	beq.n	9000e78e <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000e76e:	4628      	mov	r0, r5
9000e770:	4639      	mov	r1, r7
9000e772:	f000 fdf1 	bl	9000f358 <xQueueCreateCountingSemaphore>
9000e776:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000e778:	2d00      	cmp	r5, #0
9000e77a:	d0f0      	beq.n	9000e75e <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000e77c:	b104      	cbz	r4, 9000e780 <osSemaphoreNew+0x50>
          name = attr->name;
9000e77e:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9000e780:	4628      	mov	r0, r5
9000e782:	4621      	mov	r1, r4
9000e784:	f001 fce6 	bl	90010154 <vQueueAddToRegistry>
}
9000e788:	4628      	mov	r0, r5
9000e78a:	b003      	add	sp, #12
9000e78c:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000e78e:	4628      	mov	r0, r5
9000e790:	2203      	movs	r2, #3
9000e792:	2100      	movs	r1, #0
9000e794:	f000 fd3c 	bl	9000f210 <xQueueGenericCreate>
9000e798:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000e79a:	2d00      	cmp	r5, #0
9000e79c:	d0df      	beq.n	9000e75e <osSemaphoreNew+0x2e>
9000e79e:	2f00      	cmp	r7, #0
9000e7a0:	d0ea      	beq.n	9000e778 <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e7a2:	2300      	movs	r3, #0
9000e7a4:	4628      	mov	r0, r5
9000e7a6:	461a      	mov	r2, r3
9000e7a8:	4619      	mov	r1, r3
9000e7aa:	f000 fe1b 	bl	9000f3e4 <xQueueGenericSend>
9000e7ae:	2801      	cmp	r0, #1
9000e7b0:	d0e4      	beq.n	9000e77c <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
9000e7b2:	4628      	mov	r0, r5
            hSemaphore = NULL;
9000e7b4:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
9000e7b6:	f001 fc87 	bl	900100c8 <vQueueDelete>
      if (hSemaphore != NULL) {
9000e7ba:	e7d1      	b.n	9000e760 <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000e7bc:	4613      	mov	r3, r2
9000e7be:	2203      	movs	r2, #3
9000e7c0:	4631      	mov	r1, r6
9000e7c2:	9200      	str	r2, [sp, #0]
9000e7c4:	4632      	mov	r2, r6
9000e7c6:	f000 fcb7 	bl	9000f138 <xQueueGenericCreateStatic>
9000e7ca:	4605      	mov	r5, r0
9000e7cc:	e7e5      	b.n	9000e79a <osSemaphoreNew+0x6a>
9000e7ce:	bf00      	nop

9000e7d0 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000e7d0:	b370      	cbz	r0, 9000e830 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000e7d2:	b510      	push	{r4, lr}
9000e7d4:	460c      	mov	r4, r1
9000e7d6:	b082      	sub	sp, #8
9000e7d8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000e7dc:	b1c3      	cbz	r3, 9000e810 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
9000e7de:	bb21      	cbnz	r1, 9000e82a <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000e7e0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e7e2:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000e7e4:	f001 fc10 	bl	90010008 <xQueueReceiveFromISR>
9000e7e8:	2801      	cmp	r0, #1
9000e7ea:	d11a      	bne.n	9000e822 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e7ec:	9b01      	ldr	r3, [sp, #4]
9000e7ee:	b913      	cbnz	r3, 9000e7f6 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000e7f0:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e7f2:	b002      	add	sp, #8
9000e7f4:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000e7f6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e7fa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e7fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e802:	f3bf 8f4f 	dsb	sy
9000e806:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e80a:	4620      	mov	r0, r4
}
9000e80c:	b002      	add	sp, #8
9000e80e:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000e810:	f001 fa52 	bl	9000fcb8 <xQueueSemaphoreTake>
9000e814:	2801      	cmp	r0, #1
9000e816:	d0eb      	beq.n	9000e7f0 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000e818:	b11c      	cbz	r4, 9000e822 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
9000e81a:	f06f 0001 	mvn.w	r0, #1
}
9000e81e:	b002      	add	sp, #8
9000e820:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000e822:	f06f 0002 	mvn.w	r0, #2
}
9000e826:	b002      	add	sp, #8
9000e828:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000e82a:	f06f 0003 	mvn.w	r0, #3
9000e82e:	e7e0      	b.n	9000e7f2 <osSemaphoreAcquire+0x22>
9000e830:	f06f 0003 	mvn.w	r0, #3
}
9000e834:	4770      	bx	lr
9000e836:	bf00      	nop

9000e838 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000e838:	b330      	cbz	r0, 9000e888 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000e83a:	b510      	push	{r4, lr}
9000e83c:	b082      	sub	sp, #8
9000e83e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000e842:	b1ab      	cbz	r3, 9000e870 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
9000e844:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e846:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000e848:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e84a:	f001 f85f 	bl	9000f90c <xQueueGiveFromISR>
9000e84e:	2801      	cmp	r0, #1
9000e850:	d117      	bne.n	9000e882 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000e852:	9b01      	ldr	r3, [sp, #4]
9000e854:	b193      	cbz	r3, 9000e87c <osSemaphoreRelease+0x44>
9000e856:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e85a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e85e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e862:	f3bf 8f4f 	dsb	sy
9000e866:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e86a:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000e86c:	b002      	add	sp, #8
9000e86e:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e870:	461a      	mov	r2, r3
9000e872:	4619      	mov	r1, r3
9000e874:	f000 fdb6 	bl	9000f3e4 <xQueueGenericSend>
9000e878:	2801      	cmp	r0, #1
9000e87a:	d102      	bne.n	9000e882 <osSemaphoreRelease+0x4a>
  stat = osOK;
9000e87c:	2000      	movs	r0, #0
}
9000e87e:	b002      	add	sp, #8
9000e880:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9000e882:	f06f 0002 	mvn.w	r0, #2
9000e886:	e7fa      	b.n	9000e87e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
9000e888:	f06f 0003 	mvn.w	r0, #3
}
9000e88c:	4770      	bx	lr
9000e88e:	bf00      	nop

9000e890 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000e890:	b5f0      	push	{r4, r5, r6, r7, lr}
9000e892:	b083      	sub	sp, #12
9000e894:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000e898:	b987      	cbnz	r7, 9000e8bc <osMessageQueueNew+0x2c>
9000e89a:	4605      	mov	r5, r0
9000e89c:	b170      	cbz	r0, 9000e8bc <osMessageQueueNew+0x2c>
9000e89e:	b169      	cbz	r1, 9000e8bc <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000e8a0:	4614      	mov	r4, r2
9000e8a2:	b17a      	cbz	r2, 9000e8c4 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e8a4:	6893      	ldr	r3, [r2, #8]
9000e8a6:	b1cb      	cbz	r3, 9000e8dc <osMessageQueueNew+0x4c>
9000e8a8:	68d2      	ldr	r2, [r2, #12]
9000e8aa:	2a4f      	cmp	r2, #79	; 0x4f
9000e8ac:	d906      	bls.n	9000e8bc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e8ae:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e8b0:	b122      	cbz	r2, 9000e8bc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e8b2:	fb01 f505 	mul.w	r5, r1, r5
9000e8b6:	6966      	ldr	r6, [r4, #20]
9000e8b8:	42ae      	cmp	r6, r5
9000e8ba:	d21f      	bcs.n	9000e8fc <osMessageQueueNew+0x6c>
  hQueue = NULL;
9000e8bc:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000e8be:	4628      	mov	r0, r5
9000e8c0:	b003      	add	sp, #12
9000e8c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000e8c4:	f000 fca4 	bl	9000f210 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e8c8:	4605      	mov	r5, r0
9000e8ca:	2800      	cmp	r0, #0
9000e8cc:	d0f6      	beq.n	9000e8bc <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000e8ce:	4628      	mov	r0, r5
9000e8d0:	4621      	mov	r1, r4
9000e8d2:	f001 fc3f 	bl	90010154 <vQueueAddToRegistry>
}
9000e8d6:	4628      	mov	r0, r5
9000e8d8:	b003      	add	sp, #12
9000e8da:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000e8dc:	68d3      	ldr	r3, [r2, #12]
9000e8de:	2b00      	cmp	r3, #0
9000e8e0:	d1ec      	bne.n	9000e8bc <osMessageQueueNew+0x2c>
9000e8e2:	6913      	ldr	r3, [r2, #16]
9000e8e4:	2b00      	cmp	r3, #0
9000e8e6:	d1e9      	bne.n	9000e8bc <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000e8e8:	6952      	ldr	r2, [r2, #20]
9000e8ea:	2a00      	cmp	r2, #0
9000e8ec:	d1e6      	bne.n	9000e8bc <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000e8ee:	f000 fc8f 	bl	9000f210 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e8f2:	4605      	mov	r5, r0
9000e8f4:	2800      	cmp	r0, #0
9000e8f6:	d0e1      	beq.n	9000e8bc <osMessageQueueNew+0x2c>
        name = attr->name;
9000e8f8:	6824      	ldr	r4, [r4, #0]
9000e8fa:	e7e8      	b.n	9000e8ce <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000e8fc:	9700      	str	r7, [sp, #0]
9000e8fe:	f000 fc1b 	bl	9000f138 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000e902:	4605      	mov	r5, r0
9000e904:	2800      	cmp	r0, #0
9000e906:	d1f7      	bne.n	9000e8f8 <osMessageQueueNew+0x68>
9000e908:	e7d8      	b.n	9000e8bc <osMessageQueueNew+0x2c>
9000e90a:	bf00      	nop

9000e90c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000e90c:	b530      	push	{r4, r5, lr}
9000e90e:	461c      	mov	r4, r3
9000e910:	b083      	sub	sp, #12
9000e912:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000e916:	b30b      	cbz	r3, 9000e95c <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e918:	3c00      	subs	r4, #0
9000e91a:	bf18      	it	ne
9000e91c:	2401      	movne	r4, #1
9000e91e:	2900      	cmp	r1, #0
9000e920:	bf08      	it	eq
9000e922:	f044 0401 	orreq.w	r4, r4, #1
9000e926:	bb7c      	cbnz	r4, 9000e988 <osMessageQueuePut+0x7c>
9000e928:	fab0 f480 	clz	r4, r0
9000e92c:	0964      	lsrs	r4, r4, #5
9000e92e:	b358      	cbz	r0, 9000e988 <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e930:	4623      	mov	r3, r4
9000e932:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e934:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e936:	f000 ff7f 	bl	9000f838 <xQueueGenericSendFromISR>
9000e93a:	2801      	cmp	r0, #1
9000e93c:	d120      	bne.n	9000e980 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e93e:	9b01      	ldr	r3, [sp, #4]
9000e940:	b1db      	cbz	r3, 9000e97a <osMessageQueuePut+0x6e>
9000e942:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e946:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e94a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e94e:	f3bf 8f4f 	dsb	sy
9000e952:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e956:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000e958:	b003      	add	sp, #12
9000e95a:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e95c:	b1a0      	cbz	r0, 9000e988 <osMessageQueuePut+0x7c>
9000e95e:	fab1 f381 	clz	r3, r1
9000e962:	095b      	lsrs	r3, r3, #5
9000e964:	b181      	cbz	r1, 9000e988 <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e966:	4622      	mov	r2, r4
9000e968:	f000 fd3c 	bl	9000f3e4 <xQueueGenericSend>
9000e96c:	2801      	cmp	r0, #1
9000e96e:	d004      	beq.n	9000e97a <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
9000e970:	b134      	cbz	r4, 9000e980 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
9000e972:	f06f 0001 	mvn.w	r0, #1
}
9000e976:	b003      	add	sp, #12
9000e978:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000e97a:	2000      	movs	r0, #0
}
9000e97c:	b003      	add	sp, #12
9000e97e:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000e980:	f06f 0002 	mvn.w	r0, #2
}
9000e984:	b003      	add	sp, #12
9000e986:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000e988:	f06f 0003 	mvn.w	r0, #3
9000e98c:	e7e4      	b.n	9000e958 <osMessageQueuePut+0x4c>
9000e98e:	bf00      	nop

9000e990 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000e990:	b530      	push	{r4, r5, lr}
9000e992:	461c      	mov	r4, r3
9000e994:	b083      	sub	sp, #12
9000e996:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000e99a:	b303      	cbz	r3, 9000e9de <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e99c:	3c00      	subs	r4, #0
9000e99e:	bf18      	it	ne
9000e9a0:	2401      	movne	r4, #1
9000e9a2:	2900      	cmp	r1, #0
9000e9a4:	bf08      	it	eq
9000e9a6:	f044 0401 	orreq.w	r4, r4, #1
9000e9aa:	bb5c      	cbnz	r4, 9000ea04 <osMessageQueueGet+0x74>
9000e9ac:	fab0 f480 	clz	r4, r0
9000e9b0:	0964      	lsrs	r4, r4, #5
9000e9b2:	b338      	cbz	r0, 9000ea04 <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e9b4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e9b6:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e9b8:	f001 fb26 	bl	90010008 <xQueueReceiveFromISR>
9000e9bc:	2801      	cmp	r0, #1
9000e9be:	d11d      	bne.n	9000e9fc <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e9c0:	9b01      	ldr	r3, [sp, #4]
9000e9c2:	b1c3      	cbz	r3, 9000e9f6 <osMessageQueueGet+0x66>
9000e9c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e9c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e9cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e9d0:	f3bf 8f4f 	dsb	sy
9000e9d4:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e9d8:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000e9da:	b003      	add	sp, #12
9000e9dc:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e9de:	b188      	cbz	r0, 9000ea04 <osMessageQueueGet+0x74>
9000e9e0:	b181      	cbz	r1, 9000ea04 <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e9e2:	4622      	mov	r2, r4
9000e9e4:	f000 ffea 	bl	9000f9bc <xQueueReceive>
9000e9e8:	2801      	cmp	r0, #1
9000e9ea:	d004      	beq.n	9000e9f6 <osMessageQueueGet+0x66>
        if (timeout != 0U) {
9000e9ec:	b134      	cbz	r4, 9000e9fc <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
9000e9ee:	f06f 0001 	mvn.w	r0, #1
}
9000e9f2:	b003      	add	sp, #12
9000e9f4:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000e9f6:	2000      	movs	r0, #0
}
9000e9f8:	b003      	add	sp, #12
9000e9fa:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000e9fc:	f06f 0002 	mvn.w	r0, #2
}
9000ea00:	b003      	add	sp, #12
9000ea02:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000ea04:	f06f 0003 	mvn.w	r0, #3
9000ea08:	e7e7      	b.n	9000e9da <osMessageQueueGet+0x4a>
9000ea0a:	bf00      	nop

9000ea0c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000ea0c:	4b04      	ldr	r3, [pc, #16]	; (9000ea20 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000ea0e:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000ea10:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000ea12:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000ea14:	4c03      	ldr	r4, [pc, #12]	; (9000ea24 <vApplicationGetIdleTaskMemory+0x18>)
9000ea16:	600c      	str	r4, [r1, #0]
}
9000ea18:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000ea1c:	6013      	str	r3, [r2, #0]
}
9000ea1e:	4770      	bx	lr
9000ea20:	2402069c 	.word	0x2402069c
9000ea24:	2402049c 	.word	0x2402049c

9000ea28 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000ea28:	4b05      	ldr	r3, [pc, #20]	; (9000ea40 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000ea2a:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000ea2c:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000ea2e:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000ea32:	4c04      	ldr	r4, [pc, #16]	; (9000ea44 <vApplicationGetTimerTaskMemory+0x1c>)
9000ea34:	600c      	str	r4, [r1, #0]
}
9000ea36:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000ea3a:	6013      	str	r3, [r2, #0]
}
9000ea3c:	4770      	bx	lr
9000ea3e:	bf00      	nop
9000ea40:	24020b00 	.word	0x24020b00
9000ea44:	24020700 	.word	0x24020700

9000ea48 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000ea48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ea4c:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000ea4e:	f002 f85d 	bl	90010b0c <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000ea52:	4a54      	ldr	r2, [pc, #336]	; (9000eba4 <pvPortMalloc+0x15c>)
9000ea54:	6816      	ldr	r6, [r2, #0]
9000ea56:	2e00      	cmp	r6, #0
9000ea58:	d06f      	beq.n	9000eb3a <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000ea5a:	4b53      	ldr	r3, [pc, #332]	; (9000eba8 <pvPortMalloc+0x160>)
9000ea5c:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000ea5e:	423d      	tst	r5, r7
9000ea60:	d12e      	bne.n	9000eac0 <pvPortMalloc+0x78>
9000ea62:	b36d      	cbz	r5, 9000eac0 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
9000ea64:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000ea68:	076d      	lsls	r5, r5, #29
9000ea6a:	d002      	beq.n	9000ea72 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000ea6c:	f024 0407 	bic.w	r4, r4, #7
9000ea70:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000ea72:	b32c      	cbz	r4, 9000eac0 <pvPortMalloc+0x78>
9000ea74:	f8df c148 	ldr.w	ip, [pc, #328]	; 9000ebc0 <pvPortMalloc+0x178>
9000ea78:	f8dc 5000 	ldr.w	r5, [ip]
9000ea7c:	42a5      	cmp	r5, r4
9000ea7e:	d31f      	bcc.n	9000eac0 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000ea80:	484a      	ldr	r0, [pc, #296]	; (9000ebac <pvPortMalloc+0x164>)
9000ea82:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000ea84:	e003      	b.n	9000ea8e <pvPortMalloc+0x46>
9000ea86:	681a      	ldr	r2, [r3, #0]
9000ea88:	b122      	cbz	r2, 9000ea94 <pvPortMalloc+0x4c>
9000ea8a:	4618      	mov	r0, r3
9000ea8c:	4613      	mov	r3, r2
9000ea8e:	6859      	ldr	r1, [r3, #4]
9000ea90:	42a1      	cmp	r1, r4
9000ea92:	d3f8      	bcc.n	9000ea86 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000ea94:	42b3      	cmp	r3, r6
9000ea96:	d013      	beq.n	9000eac0 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000ea98:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000ea9a:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000ea9c:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000eaa0:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000eaa2:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000eaa6:	d929      	bls.n	9000eafc <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000eaa8:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000eaaa:	0748      	lsls	r0, r1, #29
9000eaac:	d00f      	beq.n	9000eace <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000eaae:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eab2:	f383 8811 	msr	BASEPRI, r3
9000eab6:	f3bf 8f6f 	isb	sy
9000eaba:	f3bf 8f4f 	dsb	sy
9000eabe:	e7fe      	b.n	9000eabe <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000eac0:	f04f 0800 	mov.w	r8, #0
9000eac4:	f002 f82a 	bl	90010b1c <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000eac8:	4640      	mov	r0, r8
9000eaca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000eace:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000ead0:	4a36      	ldr	r2, [pc, #216]	; (9000ebac <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
9000ead2:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000ead4:	4614      	mov	r4, r2
9000ead6:	6812      	ldr	r2, [r2, #0]
9000ead8:	4291      	cmp	r1, r2
9000eada:	d8fb      	bhi.n	9000ead4 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000eadc:	6860      	ldr	r0, [r4, #4]
9000eade:	eb04 0e00 	add.w	lr, r4, r0
9000eae2:	4571      	cmp	r1, lr
9000eae4:	d04a      	beq.n	9000eb7c <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000eae6:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000eaea:	eb01 000e 	add.w	r0, r1, lr
9000eaee:	4282      	cmp	r2, r0
9000eaf0:	d050      	beq.n	9000eb94 <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000eaf2:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000eaf4:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000eaf6:	bf18      	it	ne
9000eaf8:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000eafa:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000eafc:	4a2c      	ldr	r2, [pc, #176]	; (9000ebb0 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000eafe:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000eb00:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000eb02:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000eb04:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000eb08:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
9000eb0a:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000eb0e:	bf38      	it	cc
9000eb10:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
9000eb12:	4a28      	ldr	r2, [pc, #160]	; (9000ebb4 <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
9000eb14:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
9000eb18:	6813      	ldr	r3, [r2, #0]
9000eb1a:	3301      	adds	r3, #1
9000eb1c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9000eb1e:	f001 fffd 	bl	90010b1c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000eb22:	f018 0f07 	tst.w	r8, #7
9000eb26:	d0cf      	beq.n	9000eac8 <pvPortMalloc+0x80>
9000eb28:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eb2c:	f383 8811 	msr	BASEPRI, r3
9000eb30:	f3bf 8f6f 	isb	sy
9000eb34:	f3bf 8f4f 	dsb	sy
9000eb38:	e7fe      	b.n	9000eb38 <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
9000eb3a:	4b1f      	ldr	r3, [pc, #124]	; (9000ebb8 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000eb3c:	075e      	lsls	r6, r3, #29
9000eb3e:	d117      	bne.n	9000eb70 <pvPortMalloc+0x128>
9000eb40:	4e1e      	ldr	r6, [pc, #120]	; (9000ebbc <pvPortMalloc+0x174>)
9000eb42:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
9000eb44:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000eb46:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000eb4a:	4818      	ldr	r0, [pc, #96]	; (9000ebac <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000eb4c:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
9000eb50:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000eb52:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000eb54:	4a16      	ldr	r2, [pc, #88]	; (9000ebb0 <pvPortMalloc+0x168>)
9000eb56:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000eb58:	4a19      	ldr	r2, [pc, #100]	; (9000ebc0 <pvPortMalloc+0x178>)
9000eb5a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000eb5c:	4a12      	ldr	r2, [pc, #72]	; (9000eba8 <pvPortMalloc+0x160>)
9000eb5e:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000eb60:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000eb62:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
9000eb66:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000eb6a:	e9c1 6300 	strd	r6, r3, [r1]
}
9000eb6e:	e776      	b.n	9000ea5e <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000eb70:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9000eb72:	4e12      	ldr	r6, [pc, #72]	; (9000ebbc <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9000eb74:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000eb78:	460b      	mov	r3, r1
9000eb7a:	e7e3      	b.n	9000eb44 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000eb7c:	6849      	ldr	r1, [r1, #4]
9000eb7e:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000eb82:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000eb86:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000eb8a:	428a      	cmp	r2, r1
9000eb8c:	d001      	beq.n	9000eb92 <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000eb8e:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
9000eb90:	e7b3      	b.n	9000eafa <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000eb92:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000eb94:	42b2      	cmp	r2, r6
9000eb96:	d0ac      	beq.n	9000eaf2 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000eb98:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000eb9a:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000eb9c:	4470      	add	r0, lr
9000eb9e:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000eba0:	e7a7      	b.n	9000eaf2 <pvPortMalloc+0xaa>
9000eba2:	bf00      	nop
9000eba4:	24020b60 	.word	0x24020b60
9000eba8:	24039204 	.word	0x24039204
9000ebac:	24039218 	.word	0x24039218
9000ebb0:	2403920c 	.word	0x2403920c
9000ebb4:	24039210 	.word	0x24039210
9000ebb8:	24020b64 	.word	0x24020b64
9000ebbc:	24039204 	.word	0x24039204
9000ebc0:	24039208 	.word	0x24039208

9000ebc4 <vPortFree>:
	if( pv != NULL )
9000ebc4:	b1d0      	cbz	r0, 9000ebfc <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000ebc6:	4a2c      	ldr	r2, [pc, #176]	; (9000ec78 <vPortFree+0xb4>)
9000ebc8:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000ebcc:	6812      	ldr	r2, [r2, #0]
9000ebce:	4213      	tst	r3, r2
9000ebd0:	d00b      	beq.n	9000ebea <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000ebd2:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000ebd6:	b191      	cbz	r1, 9000ebfe <vPortFree+0x3a>
9000ebd8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ebdc:	f383 8811 	msr	BASEPRI, r3
9000ebe0:	f3bf 8f6f 	isb	sy
9000ebe4:	f3bf 8f4f 	dsb	sy
9000ebe8:	e7fe      	b.n	9000ebe8 <vPortFree+0x24>
9000ebea:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ebee:	f383 8811 	msr	BASEPRI, r3
9000ebf2:	f3bf 8f6f 	isb	sy
9000ebf6:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000ebfa:	e7fe      	b.n	9000ebfa <vPortFree+0x36>
9000ebfc:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000ebfe:	ea23 0302 	bic.w	r3, r3, r2
{
9000ec02:	b530      	push	{r4, r5, lr}
9000ec04:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000ec06:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000ec0a:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9000ec0e:	4d1b      	ldr	r5, [pc, #108]	; (9000ec7c <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000ec10:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000ec12:	f001 ff7b 	bl	90010b0c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000ec16:	9801      	ldr	r0, [sp, #4]
9000ec18:	682a      	ldr	r2, [r5, #0]
9000ec1a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000ec1e:	4b18      	ldr	r3, [pc, #96]	; (9000ec80 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
9000ec20:	440a      	add	r2, r1
9000ec22:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000ec24:	461a      	mov	r2, r3
9000ec26:	681b      	ldr	r3, [r3, #0]
9000ec28:	429c      	cmp	r4, r3
9000ec2a:	d8fb      	bhi.n	9000ec24 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000ec2c:	6850      	ldr	r0, [r2, #4]
9000ec2e:	eb02 0c00 	add.w	ip, r2, r0
9000ec32:	4564      	cmp	r4, ip
9000ec34:	d00f      	beq.n	9000ec56 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ec36:	1860      	adds	r0, r4, r1
9000ec38:	4283      	cmp	r3, r0
9000ec3a:	d014      	beq.n	9000ec66 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
9000ec3c:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ec3e:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000ec40:	bf18      	it	ne
9000ec42:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000ec44:	4a0f      	ldr	r2, [pc, #60]	; (9000ec84 <vPortFree+0xc0>)
9000ec46:	6813      	ldr	r3, [r2, #0]
9000ec48:	3301      	adds	r3, #1
9000ec4a:	6013      	str	r3, [r2, #0]
}
9000ec4c:	b003      	add	sp, #12
9000ec4e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000ec52:	f001 bf63 	b.w	90010b1c <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000ec56:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ec58:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000ec5a:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ec5c:	4283      	cmp	r3, r0
9000ec5e:	d001      	beq.n	9000ec64 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ec60:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
9000ec62:	e7ef      	b.n	9000ec44 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ec64:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000ec66:	4808      	ldr	r0, [pc, #32]	; (9000ec88 <vPortFree+0xc4>)
9000ec68:	6800      	ldr	r0, [r0, #0]
9000ec6a:	4283      	cmp	r3, r0
9000ec6c:	d0e6      	beq.n	9000ec3c <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ec6e:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000ec72:	4401      	add	r1, r0
9000ec74:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ec76:	e7e1      	b.n	9000ec3c <vPortFree+0x78>
9000ec78:	24039204 	.word	0x24039204
9000ec7c:	24039208 	.word	0x24039208
9000ec80:	24039218 	.word	0x24039218
9000ec84:	24039214 	.word	0x24039214
9000ec88:	24020b60 	.word	0x24020b60

9000ec8c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000ec8c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000ec90:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000ec94:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000ec96:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000ec98:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000ec9a:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000ec9c:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000eca0:	4770      	bx	lr
9000eca2:	bf00      	nop

9000eca4 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000eca4:	2300      	movs	r3, #0
9000eca6:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000eca8:	4770      	bx	lr
9000ecaa:	bf00      	nop

9000ecac <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
9000ecac:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000ecae:	6802      	ldr	r2, [r0, #0]
{
9000ecb0:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000ecb2:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9000ecb4:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
9000ecb6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000ecb8:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000ecba:	689c      	ldr	r4, [r3, #8]
9000ecbc:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000ecbe:	6099      	str	r1, [r3, #8]
}
9000ecc0:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000ecc4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000ecc6:	6002      	str	r2, [r0, #0]
}
9000ecc8:	4770      	bx	lr
9000ecca:	bf00      	nop

9000eccc <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000eccc:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000ecce:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000ecd0:	1c6b      	adds	r3, r5, #1
9000ecd2:	d010      	beq.n	9000ecf6 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000ecd4:	f100 0308 	add.w	r3, r0, #8
9000ecd8:	461c      	mov	r4, r3
9000ecda:	685b      	ldr	r3, [r3, #4]
9000ecdc:	681a      	ldr	r2, [r3, #0]
9000ecde:	42aa      	cmp	r2, r5
9000ece0:	d9fa      	bls.n	9000ecd8 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000ece2:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000ece4:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000ece6:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000ece8:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000ecea:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000ecec:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000ecee:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000ecf0:	6002      	str	r2, [r0, #0]
}
9000ecf2:	bc30      	pop	{r4, r5}
9000ecf4:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000ecf6:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000ecf8:	6863      	ldr	r3, [r4, #4]
9000ecfa:	e7f2      	b.n	9000ece2 <vListInsert+0x16>

9000ecfc <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000ecfc:	6903      	ldr	r3, [r0, #16]
{
9000ecfe:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000ed00:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000ed02:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000ed06:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000ed08:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000ed0c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000ed0e:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000ed10:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000ed14:	bf08      	it	eq
9000ed16:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000ed18:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000ed1a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000ed1c:	3a01      	subs	r2, #1
9000ed1e:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000ed20:	6818      	ldr	r0, [r3, #0]
}
9000ed22:	4770      	bx	lr

9000ed24 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000ed24:	4808      	ldr	r0, [pc, #32]	; (9000ed48 <prvPortStartFirstTask+0x24>)
9000ed26:	6800      	ldr	r0, [r0, #0]
9000ed28:	6800      	ldr	r0, [r0, #0]
9000ed2a:	f380 8808 	msr	MSP, r0
9000ed2e:	f04f 0000 	mov.w	r0, #0
9000ed32:	f380 8814 	msr	CONTROL, r0
9000ed36:	b662      	cpsie	i
9000ed38:	b661      	cpsie	f
9000ed3a:	f3bf 8f4f 	dsb	sy
9000ed3e:	f3bf 8f6f 	isb	sy
9000ed42:	df00      	svc	0
9000ed44:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000ed46:	0000      	.short	0x0000
9000ed48:	e000ed08 	.word	0xe000ed08

9000ed4c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000ed4c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 9000ed5c <vPortEnableVFP+0x10>
9000ed50:	6801      	ldr	r1, [r0, #0]
9000ed52:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000ed56:	6001      	str	r1, [r0, #0]
9000ed58:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000ed5a:	0000      	.short	0x0000
9000ed5c:	e000ed88 	.word	0xe000ed88

9000ed60 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000ed60:	4b0e      	ldr	r3, [pc, #56]	; (9000ed9c <prvTaskExitError+0x3c>)
{
9000ed62:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000ed64:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000ed66:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000ed68:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000ed6a:	3301      	adds	r3, #1
9000ed6c:	d008      	beq.n	9000ed80 <prvTaskExitError+0x20>
9000ed6e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ed72:	f383 8811 	msr	BASEPRI, r3
9000ed76:	f3bf 8f6f 	isb	sy
9000ed7a:	f3bf 8f4f 	dsb	sy
9000ed7e:	e7fe      	b.n	9000ed7e <prvTaskExitError+0x1e>
9000ed80:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ed84:	f383 8811 	msr	BASEPRI, r3
9000ed88:	f3bf 8f6f 	isb	sy
9000ed8c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000ed90:	9b01      	ldr	r3, [sp, #4]
9000ed92:	2b00      	cmp	r3, #0
9000ed94:	d0fc      	beq.n	9000ed90 <prvTaskExitError+0x30>
}
9000ed96:	b002      	add	sp, #8
9000ed98:	4770      	bx	lr
9000ed9a:	bf00      	nop
9000ed9c:	2400007c 	.word	0x2400007c

9000eda0 <pxPortInitialiseStack>:
{
9000eda0:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000eda2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000eda6:	4809      	ldr	r0, [pc, #36]	; (9000edcc <pxPortInitialiseStack+0x2c>)
{
9000eda8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000edaa:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000edae:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000edb2:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000edb6:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000edba:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000edbe:	f06f 0102 	mvn.w	r1, #2
}
9000edc2:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000edc6:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000edca:	4770      	bx	lr
9000edcc:	9000ed61 	.word	0x9000ed61

9000edd0 <SVC_Handler>:
	__asm volatile (
9000edd0:	4b07      	ldr	r3, [pc, #28]	; (9000edf0 <pxCurrentTCBConst2>)
9000edd2:	6819      	ldr	r1, [r3, #0]
9000edd4:	6808      	ldr	r0, [r1, #0]
9000edd6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000edda:	f380 8809 	msr	PSP, r0
9000edde:	f3bf 8f6f 	isb	sy
9000ede2:	f04f 0000 	mov.w	r0, #0
9000ede6:	f380 8811 	msr	BASEPRI, r0
9000edea:	4770      	bx	lr
9000edec:	f3af 8000 	nop.w

9000edf0 <pxCurrentTCBConst2>:
9000edf0:	24039268 	.word	0x24039268

9000edf4 <vPortEnterCritical>:
9000edf4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000edf8:	f383 8811 	msr	BASEPRI, r3
9000edfc:	f3bf 8f6f 	isb	sy
9000ee00:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000ee04:	4a0b      	ldr	r2, [pc, #44]	; (9000ee34 <vPortEnterCritical+0x40>)
9000ee06:	6813      	ldr	r3, [r2, #0]
9000ee08:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000ee0a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000ee0c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000ee0e:	d000      	beq.n	9000ee12 <vPortEnterCritical+0x1e>
}
9000ee10:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000ee12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ee16:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
9000ee1a:	b2db      	uxtb	r3, r3
9000ee1c:	2b00      	cmp	r3, #0
9000ee1e:	d0f7      	beq.n	9000ee10 <vPortEnterCritical+0x1c>
9000ee20:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ee24:	f383 8811 	msr	BASEPRI, r3
9000ee28:	f3bf 8f6f 	isb	sy
9000ee2c:	f3bf 8f4f 	dsb	sy
9000ee30:	e7fe      	b.n	9000ee30 <vPortEnterCritical+0x3c>
9000ee32:	bf00      	nop
9000ee34:	2400007c 	.word	0x2400007c

9000ee38 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000ee38:	4a08      	ldr	r2, [pc, #32]	; (9000ee5c <vPortExitCritical+0x24>)
9000ee3a:	6813      	ldr	r3, [r2, #0]
9000ee3c:	b943      	cbnz	r3, 9000ee50 <vPortExitCritical+0x18>
9000ee3e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ee42:	f383 8811 	msr	BASEPRI, r3
9000ee46:	f3bf 8f6f 	isb	sy
9000ee4a:	f3bf 8f4f 	dsb	sy
9000ee4e:	e7fe      	b.n	9000ee4e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000ee50:	3b01      	subs	r3, #1
9000ee52:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000ee54:	b90b      	cbnz	r3, 9000ee5a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000ee56:	f383 8811 	msr	BASEPRI, r3
}
9000ee5a:	4770      	bx	lr
9000ee5c:	2400007c 	.word	0x2400007c

9000ee60 <PendSV_Handler>:
	__asm volatile
9000ee60:	f3ef 8009 	mrs	r0, PSP
9000ee64:	f3bf 8f6f 	isb	sy
9000ee68:	4b15      	ldr	r3, [pc, #84]	; (9000eec0 <pxCurrentTCBConst>)
9000ee6a:	681a      	ldr	r2, [r3, #0]
9000ee6c:	f01e 0f10 	tst.w	lr, #16
9000ee70:	bf08      	it	eq
9000ee72:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000ee76:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ee7a:	6010      	str	r0, [r2, #0]
9000ee7c:	e92d 0009 	stmdb	sp!, {r0, r3}
9000ee80:	f04f 0050 	mov.w	r0, #80	; 0x50
9000ee84:	f380 8811 	msr	BASEPRI, r0
9000ee88:	f3bf 8f4f 	dsb	sy
9000ee8c:	f3bf 8f6f 	isb	sy
9000ee90:	f001 fe80 	bl	90010b94 <vTaskSwitchContext>
9000ee94:	f04f 0000 	mov.w	r0, #0
9000ee98:	f380 8811 	msr	BASEPRI, r0
9000ee9c:	bc09      	pop	{r0, r3}
9000ee9e:	6819      	ldr	r1, [r3, #0]
9000eea0:	6808      	ldr	r0, [r1, #0]
9000eea2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000eea6:	f01e 0f10 	tst.w	lr, #16
9000eeaa:	bf08      	it	eq
9000eeac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000eeb0:	f380 8809 	msr	PSP, r0
9000eeb4:	f3bf 8f6f 	isb	sy
9000eeb8:	4770      	bx	lr
9000eeba:	bf00      	nop
9000eebc:	f3af 8000 	nop.w

9000eec0 <pxCurrentTCBConst>:
9000eec0:	24039268 	.word	0x24039268

9000eec4 <xPortSysTickHandler>:
{
9000eec4:	b508      	push	{r3, lr}
	__asm volatile
9000eec6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eeca:	f383 8811 	msr	BASEPRI, r3
9000eece:	f3bf 8f6f 	isb	sy
9000eed2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000eed6:	f001 fe37 	bl	90010b48 <xTaskIncrementTick>
9000eeda:	b128      	cbz	r0, 9000eee8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000eedc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000eee0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000eee4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
9000eee8:	2300      	movs	r3, #0
9000eeea:	f383 8811 	msr	BASEPRI, r3
}
9000eeee:	bd08      	pop	{r3, pc}

9000eef0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000eef0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
9000eef4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000eef6:	4806      	ldr	r0, [pc, #24]	; (9000ef10 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000eef8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000eefa:	4906      	ldr	r1, [pc, #24]	; (9000ef14 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000eefc:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000eefe:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000ef00:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ef02:	fba1 1303 	umull	r1, r3, r1, r3
9000ef06:	099b      	lsrs	r3, r3, #6
9000ef08:	3b01      	subs	r3, #1
9000ef0a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000ef0c:	6110      	str	r0, [r2, #16]
}
9000ef0e:	4770      	bx	lr
9000ef10:	2400006c 	.word	0x2400006c
9000ef14:	10624dd3 	.word	0x10624dd3

9000ef18 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000ef18:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ef1c:	4a48      	ldr	r2, [pc, #288]	; (9000f040 <xPortStartScheduler+0x128>)
9000ef1e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
9000ef22:	4291      	cmp	r1, r2
9000ef24:	d041      	beq.n	9000efaa <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000ef26:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
9000ef2a:	4b46      	ldr	r3, [pc, #280]	; (9000f044 <xPortStartScheduler+0x12c>)
9000ef2c:	429a      	cmp	r2, r3
9000ef2e:	d033      	beq.n	9000ef98 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000ef30:	4b45      	ldr	r3, [pc, #276]	; (9000f048 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000ef32:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000ef34:	4945      	ldr	r1, [pc, #276]	; (9000f04c <xPortStartScheduler+0x134>)
{
9000ef36:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000ef38:	781a      	ldrb	r2, [r3, #0]
{
9000ef3a:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000ef3c:	4c44      	ldr	r4, [pc, #272]	; (9000f050 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000ef3e:	b2d2      	uxtb	r2, r2
9000ef40:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000ef42:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000ef44:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000ef46:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000ef48:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000ef4a:	b2db      	uxtb	r3, r3
9000ef4c:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000ef50:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000ef54:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000ef58:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000ef5c:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000ef5e:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000ef60:	d511      	bpl.n	9000ef86 <xPortStartScheduler+0x6e>
9000ef62:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000ef64:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000ef68:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000ef6a:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000ef6c:	005b      	lsls	r3, r3, #1
9000ef6e:	b2db      	uxtb	r3, r3
9000ef70:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000ef74:	f89d 1007 	ldrb.w	r1, [sp, #7]
9000ef78:	0609      	lsls	r1, r1, #24
9000ef7a:	d4f3      	bmi.n	9000ef64 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000ef7c:	2803      	cmp	r0, #3
9000ef7e:	6020      	str	r0, [r4, #0]
9000ef80:	f88d 3007 	strb.w	r3, [sp, #7]
9000ef84:	d01a      	beq.n	9000efbc <xPortStartScheduler+0xa4>
	__asm volatile
9000ef86:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef8a:	f383 8811 	msr	BASEPRI, r3
9000ef8e:	f3bf 8f6f 	isb	sy
9000ef92:	f3bf 8f4f 	dsb	sy
9000ef96:	e7fe      	b.n	9000ef96 <xPortStartScheduler+0x7e>
9000ef98:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef9c:	f383 8811 	msr	BASEPRI, r3
9000efa0:	f3bf 8f6f 	isb	sy
9000efa4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000efa8:	e7fe      	b.n	9000efa8 <xPortStartScheduler+0x90>
9000efaa:	f04f 0350 	mov.w	r3, #80	; 0x50
9000efae:	f383 8811 	msr	BASEPRI, r3
9000efb2:	f3bf 8f6f 	isb	sy
9000efb6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000efba:	e7fe      	b.n	9000efba <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000efbc:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000efbe:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000efc2:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000efc6:	4a20      	ldr	r2, [pc, #128]	; (9000f048 <xPortStartScheduler+0x130>)
9000efc8:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000efca:	4e22      	ldr	r6, [pc, #136]	; (9000f054 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000efcc:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
9000efce:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000efd0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000efd2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000efd6:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9000efda:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000efde:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000efe2:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
9000efe6:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
9000efea:	f7ff ff81 	bl	9000eef0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000efee:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
9000eff0:	f7ff feac 	bl	9000ed4c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000eff4:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
9000eff8:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9000effc:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
9000f000:	f7ff fe90 	bl	9000ed24 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000f004:	f001 fdc6 	bl	90010b94 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000f008:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000f00a:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000f00c:	3301      	adds	r3, #1
9000f00e:	d008      	beq.n	9000f022 <xPortStartScheduler+0x10a>
9000f010:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f014:	f383 8811 	msr	BASEPRI, r3
9000f018:	f3bf 8f6f 	isb	sy
9000f01c:	f3bf 8f4f 	dsb	sy
9000f020:	e7fe      	b.n	9000f020 <xPortStartScheduler+0x108>
9000f022:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f026:	f383 8811 	msr	BASEPRI, r3
9000f02a:	f3bf 8f6f 	isb	sy
9000f02e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000f032:	9b03      	ldr	r3, [sp, #12]
9000f034:	2b00      	cmp	r3, #0
9000f036:	d0fc      	beq.n	9000f032 <xPortStartScheduler+0x11a>
}
9000f038:	2000      	movs	r0, #0
9000f03a:	b004      	add	sp, #16
9000f03c:	bd70      	pop	{r4, r5, r6, pc}
9000f03e:	bf00      	nop
9000f040:	410fc271 	.word	0x410fc271
9000f044:	410fc270 	.word	0x410fc270
9000f048:	e000e400 	.word	0xe000e400
9000f04c:	24039220 	.word	0x24039220
9000f050:	24039224 	.word	0x24039224
9000f054:	2400007c 	.word	0x2400007c

9000f058 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000f058:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000f05c:	2b0f      	cmp	r3, #15
9000f05e:	d90e      	bls.n	9000f07e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000f060:	4911      	ldr	r1, [pc, #68]	; (9000f0a8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000f062:	4a12      	ldr	r2, [pc, #72]	; (9000f0ac <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000f064:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000f066:	7812      	ldrb	r2, [r2, #0]
9000f068:	429a      	cmp	r2, r3
9000f06a:	d908      	bls.n	9000f07e <vPortValidateInterruptPriority+0x26>
9000f06c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f070:	f383 8811 	msr	BASEPRI, r3
9000f074:	f3bf 8f6f 	isb	sy
9000f078:	f3bf 8f4f 	dsb	sy
9000f07c:	e7fe      	b.n	9000f07c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000f07e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f082:	4a0b      	ldr	r2, [pc, #44]	; (9000f0b0 <vPortValidateInterruptPriority+0x58>)
9000f084:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
9000f088:	6812      	ldr	r2, [r2, #0]
9000f08a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9000f08e:	4293      	cmp	r3, r2
9000f090:	d908      	bls.n	9000f0a4 <vPortValidateInterruptPriority+0x4c>
9000f092:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f096:	f383 8811 	msr	BASEPRI, r3
9000f09a:	f3bf 8f6f 	isb	sy
9000f09e:	f3bf 8f4f 	dsb	sy
9000f0a2:	e7fe      	b.n	9000f0a2 <vPortValidateInterruptPriority+0x4a>
	}
9000f0a4:	4770      	bx	lr
9000f0a6:	bf00      	nop
9000f0a8:	e000e3f0 	.word	0xe000e3f0
9000f0ac:	24039220 	.word	0x24039220
9000f0b0:	24039224 	.word	0x24039224

9000f0b4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000f0b4:	b570      	push	{r4, r5, r6, lr}
9000f0b6:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000f0b8:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9000f0ba:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f0bc:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000f0be:	b92a      	cbnz	r2, 9000f0cc <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f0c0:	6805      	ldr	r5, [r0, #0]
9000f0c2:	b365      	cbz	r5, 9000f11e <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f0c4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000f0c6:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f0c8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
9000f0ca:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000f0cc:	b97d      	cbnz	r5, 9000f0ee <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f0ce:	6840      	ldr	r0, [r0, #4]
9000f0d0:	f019 fb46 	bl	90028760 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f0d4:	6863      	ldr	r3, [r4, #4]
9000f0d6:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000f0d8:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000f0da:	68a2      	ldr	r2, [r4, #8]
9000f0dc:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f0de:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000f0e0:	d319      	bcc.n	9000f116 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000f0e2:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f0e4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000f0e6:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000f0e8:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f0ea:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000f0ec:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000f0ee:	68c0      	ldr	r0, [r0, #12]
9000f0f0:	f019 fb36 	bl	90028760 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000f0f4:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000f0f6:	68e3      	ldr	r3, [r4, #12]
9000f0f8:	4251      	negs	r1, r2
9000f0fa:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000f0fc:	6822      	ldr	r2, [r4, #0]
9000f0fe:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000f100:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000f102:	d202      	bcs.n	9000f10a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000f104:	68a3      	ldr	r3, [r4, #8]
9000f106:	440b      	add	r3, r1
9000f108:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000f10a:	2d02      	cmp	r5, #2
9000f10c:	d00d      	beq.n	9000f12a <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f10e:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000f110:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f112:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000f114:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f116:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000f118:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f11a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000f11c:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000f11e:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f120:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000f122:	f001 ff1f 	bl	90010f64 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000f126:	60a5      	str	r5, [r4, #8]
9000f128:	e7ce      	b.n	9000f0c8 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f12a:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9000f12c:	f04f 0000 	mov.w	r0, #0
9000f130:	bf38      	it	cc
9000f132:	2601      	movcc	r6, #1
9000f134:	e7c8      	b.n	9000f0c8 <prvCopyDataToQueue+0x14>
9000f136:	bf00      	nop

9000f138 <xQueueGenericCreateStatic>:
	{
9000f138:	b530      	push	{r4, r5, lr}
9000f13a:	b083      	sub	sp, #12
9000f13c:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000f140:	b940      	cbnz	r0, 9000f154 <xQueueGenericCreateStatic+0x1c>
9000f142:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f146:	f383 8811 	msr	BASEPRI, r3
9000f14a:	f3bf 8f6f 	isb	sy
9000f14e:	f3bf 8f4f 	dsb	sy
9000f152:	e7fe      	b.n	9000f152 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000f154:	461d      	mov	r5, r3
9000f156:	b153      	cbz	r3, 9000f16e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000f158:	b30a      	cbz	r2, 9000f19e <xQueueGenericCreateStatic+0x66>
9000f15a:	b989      	cbnz	r1, 9000f180 <xQueueGenericCreateStatic+0x48>
9000f15c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f160:	f383 8811 	msr	BASEPRI, r3
9000f164:	f3bf 8f6f 	isb	sy
9000f168:	f3bf 8f4f 	dsb	sy
9000f16c:	e7fe      	b.n	9000f16c <xQueueGenericCreateStatic+0x34>
9000f16e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f172:	f383 8811 	msr	BASEPRI, r3
9000f176:	f3bf 8f6f 	isb	sy
9000f17a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000f17e:	e7fe      	b.n	9000f17e <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000f180:	b16a      	cbz	r2, 9000f19e <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000f182:	2350      	movs	r3, #80	; 0x50
9000f184:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000f186:	9b01      	ldr	r3, [sp, #4]
9000f188:	2b50      	cmp	r3, #80	; 0x50
9000f18a:	d013      	beq.n	9000f1b4 <xQueueGenericCreateStatic+0x7c>
9000f18c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f190:	f383 8811 	msr	BASEPRI, r3
9000f194:	f3bf 8f6f 	isb	sy
9000f198:	f3bf 8f4f 	dsb	sy
9000f19c:	e7fe      	b.n	9000f19c <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000f19e:	2900      	cmp	r1, #0
9000f1a0:	d0ef      	beq.n	9000f182 <xQueueGenericCreateStatic+0x4a>
9000f1a2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f1a6:	f383 8811 	msr	BASEPRI, r3
9000f1aa:	f3bf 8f6f 	isb	sy
9000f1ae:	f3bf 8f4f 	dsb	sy
9000f1b2:	e7fe      	b.n	9000f1b2 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
9000f1b4:	2900      	cmp	r1, #0
9000f1b6:	bf08      	it	eq
9000f1b8:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
9000f1ba:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
9000f1bc:	6429      	str	r1, [r5, #64]	; 0x40
9000f1be:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000f1c0:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000f1c2:	2201      	movs	r2, #1
9000f1c4:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
9000f1c8:	f7ff fe14 	bl	9000edf4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f1cc:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f1ce:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f1d0:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f1d2:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f1d4:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
9000f1d8:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f1dc:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f1de:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f1e0:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f1e2:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000f1e4:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f1e6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f1ea:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000f1ec:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f1f0:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f1f4:	f7ff fd4a 	bl	9000ec8c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f1f8:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000f1fc:	f7ff fd46 	bl	9000ec8c <vListInitialise>
	taskEXIT_CRITICAL();
9000f200:	f7ff fe1a 	bl	9000ee38 <vPortExitCritical>
	}
9000f204:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000f206:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
9000f20a:	b003      	add	sp, #12
9000f20c:	bd30      	pop	{r4, r5, pc}
9000f20e:	bf00      	nop

9000f210 <xQueueGenericCreate>:
	{
9000f210:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000f212:	b940      	cbnz	r0, 9000f226 <xQueueGenericCreate+0x16>
9000f214:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f218:	f383 8811 	msr	BASEPRI, r3
9000f21c:	f3bf 8f6f 	isb	sy
9000f220:	f3bf 8f4f 	dsb	sy
9000f224:	e7fe      	b.n	9000f224 <xQueueGenericCreate+0x14>
9000f226:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f228:	fb01 f000 	mul.w	r0, r1, r0
9000f22c:	460e      	mov	r6, r1
9000f22e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000f230:	3050      	adds	r0, #80	; 0x50
9000f232:	f7ff fc09 	bl	9000ea48 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000f236:	4604      	mov	r4, r0
9000f238:	b340      	cbz	r0, 9000f28c <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000f23a:	2300      	movs	r3, #0
9000f23c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000f240:	b336      	cbz	r6, 9000f290 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f242:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000f246:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000f248:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
9000f24c:	f7ff fdd2 	bl	9000edf4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f250:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f252:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f256:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f258:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9000f25c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f260:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f262:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f264:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f266:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f268:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000f26a:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f26c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f26e:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000f270:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f274:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f278:	f7ff fd08 	bl	9000ec8c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f27c:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f280:	f7ff fd04 	bl	9000ec8c <vListInitialise>
	taskEXIT_CRITICAL();
9000f284:	f7ff fdd8 	bl	9000ee38 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000f288:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9000f28c:	4620      	mov	r0, r4
9000f28e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000f290:	4603      	mov	r3, r0
9000f292:	e7d8      	b.n	9000f246 <xQueueGenericCreate+0x36>

9000f294 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000f294:	b940      	cbnz	r0, 9000f2a8 <xQueueCreateCountingSemaphoreStatic+0x14>
9000f296:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f29a:	f383 8811 	msr	BASEPRI, r3
9000f29e:	f3bf 8f6f 	isb	sy
9000f2a2:	f3bf 8f4f 	dsb	sy
9000f2a6:	e7fe      	b.n	9000f2a6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000f2a8:	4288      	cmp	r0, r1
9000f2aa:	d208      	bcs.n	9000f2be <xQueueCreateCountingSemaphoreStatic+0x2a>
9000f2ac:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f2b0:	f383 8811 	msr	BASEPRI, r3
9000f2b4:	f3bf 8f6f 	isb	sy
9000f2b8:	f3bf 8f4f 	dsb	sy
9000f2bc:	e7fe      	b.n	9000f2bc <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000f2be:	b530      	push	{r4, r5, lr}
9000f2c0:	4615      	mov	r5, r2
9000f2c2:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000f2c4:	2a00      	cmp	r2, #0
9000f2c6:	d03d      	beq.n	9000f344 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000f2c8:	2350      	movs	r3, #80	; 0x50
9000f2ca:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000f2cc:	9b03      	ldr	r3, [sp, #12]
9000f2ce:	2b50      	cmp	r3, #80	; 0x50
9000f2d0:	d008      	beq.n	9000f2e4 <xQueueCreateCountingSemaphoreStatic+0x50>
9000f2d2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f2d6:	f383 8811 	msr	BASEPRI, r3
9000f2da:	f3bf 8f6f 	isb	sy
9000f2de:	f3bf 8f4f 	dsb	sy
9000f2e2:	e7fe      	b.n	9000f2e2 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000f2e4:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000f2e6:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000f2e8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000f2ea:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000f2ec:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000f2f0:	6414      	str	r4, [r2, #64]	; 0x40
9000f2f2:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000f2f4:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000f2f6:	f7ff fd7d 	bl	9000edf4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f2fa:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f2fc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f2fe:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f300:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
9000f304:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f308:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f30c:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f30e:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f310:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000f312:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f314:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f318:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000f31c:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f320:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f324:	f7ff fcb2 	bl	9000ec8c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f328:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000f32c:	f7ff fcae 	bl	9000ec8c <vListInitialise>
	taskEXIT_CRITICAL();
9000f330:	f7ff fd82 	bl	9000ee38 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000f334:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000f336:	9901      	ldr	r1, [sp, #4]
	}
9000f338:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000f33a:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000f33e:	63a9      	str	r1, [r5, #56]	; 0x38
	}
9000f340:	b005      	add	sp, #20
9000f342:	bd30      	pop	{r4, r5, pc}
9000f344:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f348:	f383 8811 	msr	BASEPRI, r3
9000f34c:	f3bf 8f6f 	isb	sy
9000f350:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000f354:	e7fe      	b.n	9000f354 <xQueueCreateCountingSemaphoreStatic+0xc0>
9000f356:	bf00      	nop

9000f358 <xQueueCreateCountingSemaphore>:
	{
9000f358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000f35a:	b940      	cbnz	r0, 9000f36e <xQueueCreateCountingSemaphore+0x16>
9000f35c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f360:	f383 8811 	msr	BASEPRI, r3
9000f364:	f3bf 8f6f 	isb	sy
9000f368:	f3bf 8f4f 	dsb	sy
9000f36c:	e7fe      	b.n	9000f36c <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000f36e:	4288      	cmp	r0, r1
9000f370:	4604      	mov	r4, r0
9000f372:	460e      	mov	r6, r1
9000f374:	d208      	bcs.n	9000f388 <xQueueCreateCountingSemaphore+0x30>
9000f376:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f37a:	f383 8811 	msr	BASEPRI, r3
9000f37e:	f3bf 8f6f 	isb	sy
9000f382:	f3bf 8f4f 	dsb	sy
9000f386:	e7fe      	b.n	9000f386 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000f388:	2050      	movs	r0, #80	; 0x50
9000f38a:	f7ff fb5d 	bl	9000ea48 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000f38e:	4605      	mov	r5, r0
9000f390:	b330      	cbz	r0, 9000f3e0 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000f392:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000f394:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000f396:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000f398:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000f39c:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
9000f39e:	f7ff fd29 	bl	9000edf4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f3a2:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f3a4:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f3a6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f3aa:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f3ac:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
9000f3b0:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f3b4:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f3b6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f3b8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f3ba:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000f3bc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f3be:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000f3c0:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f3c4:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f3c8:	f7ff fc60 	bl	9000ec8c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f3cc:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000f3d0:	f7ff fc5c 	bl	9000ec8c <vListInitialise>
	taskEXIT_CRITICAL();
9000f3d4:	f7ff fd30 	bl	9000ee38 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000f3d8:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000f3da:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000f3dc:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
9000f3e0:	4628      	mov	r0, r5
9000f3e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000f3e4 <xQueueGenericSend>:
{
9000f3e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000f3e8:	b084      	sub	sp, #16
9000f3ea:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000f3ec:	2800      	cmp	r0, #0
9000f3ee:	f000 8103 	beq.w	9000f5f8 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f3f2:	4688      	mov	r8, r1
9000f3f4:	4604      	mov	r4, r0
9000f3f6:	461f      	mov	r7, r3
9000f3f8:	2900      	cmp	r1, #0
9000f3fa:	f000 8097 	beq.w	9000f52c <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000f3fe:	2f02      	cmp	r7, #2
9000f400:	d10b      	bne.n	9000f41a <xQueueGenericSend+0x36>
9000f402:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f404:	2b01      	cmp	r3, #1
9000f406:	d008      	beq.n	9000f41a <xQueueGenericSend+0x36>
9000f408:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f40c:	f383 8811 	msr	BASEPRI, r3
9000f410:	f3bf 8f6f 	isb	sy
9000f414:	f3bf 8f4f 	dsb	sy
9000f418:	e7fe      	b.n	9000f418 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f41a:	f001 fd4d 	bl	90010eb8 <xTaskGetSchedulerState>
9000f41e:	2800      	cmp	r0, #0
9000f420:	f000 80f3 	beq.w	9000f60a <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f424:	f1a7 0902 	sub.w	r9, r7, #2
9000f428:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f42a:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f42e:	fab9 f989 	clz	r9, r9
9000f432:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000f436:	f7ff fcdd 	bl	9000edf4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f43a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000f43c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f43e:	429a      	cmp	r2, r3
9000f440:	f0c0 80f0 	bcc.w	9000f624 <xQueueGenericSend+0x240>
9000f444:	f1b9 0f00 	cmp.w	r9, #0
9000f448:	f040 80ec 	bne.w	9000f624 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f44c:	9b01      	ldr	r3, [sp, #4]
9000f44e:	2b00      	cmp	r3, #0
9000f450:	f000 8101 	beq.w	9000f656 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000f454:	2d00      	cmp	r5, #0
9000f456:	f000 80cb 	beq.w	9000f5f0 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000f45a:	f7ff fced 	bl	9000ee38 <vPortExitCritical>
		vTaskSuspendAll();
9000f45e:	f001 fb55 	bl	90010b0c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f462:	f7ff fcc7 	bl	9000edf4 <vPortEnterCritical>
9000f466:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f46a:	2bff      	cmp	r3, #255	; 0xff
9000f46c:	d102      	bne.n	9000f474 <xQueueGenericSend+0x90>
9000f46e:	2300      	movs	r3, #0
9000f470:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000f474:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f478:	2bff      	cmp	r3, #255	; 0xff
9000f47a:	d102      	bne.n	9000f482 <xQueueGenericSend+0x9e>
9000f47c:	2300      	movs	r3, #0
9000f47e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f482:	f7ff fcd9 	bl	9000ee38 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f486:	a901      	add	r1, sp, #4
9000f488:	a802      	add	r0, sp, #8
9000f48a:	f001 fcc1 	bl	90010e10 <xTaskCheckForTimeOut>
9000f48e:	2800      	cmp	r0, #0
9000f490:	f040 80e5 	bne.w	9000f65e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000f494:	f7ff fcae 	bl	9000edf4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000f498:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000f49a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f49c:	429a      	cmp	r2, r3
9000f49e:	d052      	beq.n	9000f546 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000f4a0:	f7ff fcca 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f4a4:	f7ff fca6 	bl	9000edf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f4a8:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
9000f4ac:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f4ae:	2d00      	cmp	r5, #0
9000f4b0:	dc04      	bgt.n	9000f4bc <xQueueGenericSend+0xd8>
9000f4b2:	e011      	b.n	9000f4d8 <xQueueGenericSend+0xf4>
			--cTxLock;
9000f4b4:	1e6a      	subs	r2, r5, #1
9000f4b6:	b2d3      	uxtb	r3, r2
9000f4b8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f4ba:	b16b      	cbz	r3, 9000f4d8 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f4bc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f4be:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f4c0:	b153      	cbz	r3, 9000f4d8 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f4c2:	f001 fc4f 	bl	90010d64 <xTaskRemoveFromEventList>
9000f4c6:	2800      	cmp	r0, #0
9000f4c8:	d0f4      	beq.n	9000f4b4 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000f4ca:	f001 fce9 	bl	90010ea0 <vTaskMissedYield>
			--cTxLock;
9000f4ce:	1e6a      	subs	r2, r5, #1
9000f4d0:	b2d3      	uxtb	r3, r2
9000f4d2:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f4d4:	2b00      	cmp	r3, #0
9000f4d6:	d1f1      	bne.n	9000f4bc <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000f4d8:	23ff      	movs	r3, #255	; 0xff
9000f4da:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f4de:	f7ff fcab 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f4e2:	f7ff fc87 	bl	9000edf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f4e6:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
9000f4ea:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f4ec:	2d00      	cmp	r5, #0
9000f4ee:	dd14      	ble.n	9000f51a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f4f0:	f104 0a10 	add.w	sl, r4, #16
9000f4f4:	e003      	b.n	9000f4fe <xQueueGenericSend+0x11a>
				--cRxLock;
9000f4f6:	1e6a      	subs	r2, r5, #1
9000f4f8:	b2d3      	uxtb	r3, r2
9000f4fa:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f4fc:	b16b      	cbz	r3, 9000f51a <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f4fe:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f500:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f502:	b153      	cbz	r3, 9000f51a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f504:	f001 fc2e 	bl	90010d64 <xTaskRemoveFromEventList>
9000f508:	2800      	cmp	r0, #0
9000f50a:	d0f4      	beq.n	9000f4f6 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000f50c:	f001 fcc8 	bl	90010ea0 <vTaskMissedYield>
				--cRxLock;
9000f510:	1e6a      	subs	r2, r5, #1
9000f512:	b2d3      	uxtb	r3, r2
9000f514:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f516:	2b00      	cmp	r3, #0
9000f518:	d1f1      	bne.n	9000f4fe <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000f51a:	23ff      	movs	r3, #255	; 0xff
9000f51c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f520:	f7ff fc8a 	bl	9000ee38 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f524:	f001 fafa 	bl	90010b1c <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f528:	2501      	movs	r5, #1
9000f52a:	e784      	b.n	9000f436 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f52c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000f52e:	2b00      	cmp	r3, #0
9000f530:	f43f af65 	beq.w	9000f3fe <xQueueGenericSend+0x1a>
9000f534:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f538:	f383 8811 	msr	BASEPRI, r3
9000f53c:	f3bf 8f6f 	isb	sy
9000f540:	f3bf 8f4f 	dsb	sy
9000f544:	e7fe      	b.n	9000f544 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000f546:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000f54a:	f7ff fc75 	bl	9000ee38 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000f54e:	9901      	ldr	r1, [sp, #4]
9000f550:	4650      	mov	r0, sl
9000f552:	f001 fb79 	bl	90010c48 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f556:	f7ff fc4d 	bl	9000edf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f55a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f55e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f560:	2d00      	cmp	r5, #0
9000f562:	dc04      	bgt.n	9000f56e <xQueueGenericSend+0x18a>
9000f564:	e011      	b.n	9000f58a <xQueueGenericSend+0x1a6>
			--cTxLock;
9000f566:	1e6b      	subs	r3, r5, #1
9000f568:	b2da      	uxtb	r2, r3
9000f56a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f56c:	b16a      	cbz	r2, 9000f58a <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f56e:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f570:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f572:	b153      	cbz	r3, 9000f58a <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f574:	f001 fbf6 	bl	90010d64 <xTaskRemoveFromEventList>
9000f578:	2800      	cmp	r0, #0
9000f57a:	d0f4      	beq.n	9000f566 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000f57c:	f001 fc90 	bl	90010ea0 <vTaskMissedYield>
			--cTxLock;
9000f580:	1e6b      	subs	r3, r5, #1
9000f582:	b2da      	uxtb	r2, r3
9000f584:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f586:	2a00      	cmp	r2, #0
9000f588:	d1f1      	bne.n	9000f56e <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000f58a:	23ff      	movs	r3, #255	; 0xff
9000f58c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f590:	f7ff fc52 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f594:	f7ff fc2e 	bl	9000edf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f598:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f59c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f59e:	2d00      	cmp	r5, #0
9000f5a0:	dc04      	bgt.n	9000f5ac <xQueueGenericSend+0x1c8>
9000f5a2:	e011      	b.n	9000f5c8 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000f5a4:	1e6b      	subs	r3, r5, #1
9000f5a6:	b2da      	uxtb	r2, r3
9000f5a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f5aa:	b16a      	cbz	r2, 9000f5c8 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f5ac:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f5ae:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f5b0:	b153      	cbz	r3, 9000f5c8 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f5b2:	f001 fbd7 	bl	90010d64 <xTaskRemoveFromEventList>
9000f5b6:	2800      	cmp	r0, #0
9000f5b8:	d0f4      	beq.n	9000f5a4 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000f5ba:	f001 fc71 	bl	90010ea0 <vTaskMissedYield>
				--cRxLock;
9000f5be:	1e6b      	subs	r3, r5, #1
9000f5c0:	b2da      	uxtb	r2, r3
9000f5c2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f5c4:	2a00      	cmp	r2, #0
9000f5c6:	d1f1      	bne.n	9000f5ac <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000f5c8:	23ff      	movs	r3, #255	; 0xff
9000f5ca:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f5ce:	f7ff fc33 	bl	9000ee38 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f5d2:	f001 faa3 	bl	90010b1c <xTaskResumeAll>
9000f5d6:	2800      	cmp	r0, #0
9000f5d8:	d1a6      	bne.n	9000f528 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000f5da:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f5de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f5e2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f5e6:	f3bf 8f4f 	dsb	sy
9000f5ea:	f3bf 8f6f 	isb	sy
9000f5ee:	e79b      	b.n	9000f528 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f5f0:	a802      	add	r0, sp, #8
9000f5f2:	f001 fc01 	bl	90010df8 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000f5f6:	e730      	b.n	9000f45a <xQueueGenericSend+0x76>
9000f5f8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f5fc:	f383 8811 	msr	BASEPRI, r3
9000f600:	f3bf 8f6f 	isb	sy
9000f604:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f608:	e7fe      	b.n	9000f608 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f60a:	9b01      	ldr	r3, [sp, #4]
9000f60c:	2b00      	cmp	r3, #0
9000f60e:	f43f af09 	beq.w	9000f424 <xQueueGenericSend+0x40>
9000f612:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f616:	f383 8811 	msr	BASEPRI, r3
9000f61a:	f3bf 8f6f 	isb	sy
9000f61e:	f3bf 8f4f 	dsb	sy
9000f622:	e7fe      	b.n	9000f622 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f624:	463a      	mov	r2, r7
9000f626:	4641      	mov	r1, r8
9000f628:	4620      	mov	r0, r4
9000f62a:	f7ff fd43 	bl	9000f0b4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f62e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000f630:	2b00      	cmp	r3, #0
9000f632:	d152      	bne.n	9000f6da <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
9000f634:	b148      	cbz	r0, 9000f64a <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000f636:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f63a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f63e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f642:	f3bf 8f4f 	dsb	sy
9000f646:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000f64a:	f7ff fbf5 	bl	9000ee38 <vPortExitCritical>
				return pdPASS;
9000f64e:	2001      	movs	r0, #1
}
9000f650:	b004      	add	sp, #16
9000f652:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000f656:	f7ff fbef 	bl	9000ee38 <vPortExitCritical>
					return errQUEUE_FULL;
9000f65a:	4648      	mov	r0, r9
9000f65c:	e7f8      	b.n	9000f650 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000f65e:	f7ff fbc9 	bl	9000edf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f662:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f666:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f668:	2d00      	cmp	r5, #0
9000f66a:	dd10      	ble.n	9000f68e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f66c:	f104 0624 	add.w	r6, r4, #36	; 0x24
9000f670:	e003      	b.n	9000f67a <xQueueGenericSend+0x296>
			--cTxLock;
9000f672:	1e6b      	subs	r3, r5, #1
9000f674:	b2da      	uxtb	r2, r3
9000f676:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f678:	b14a      	cbz	r2, 9000f68e <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f67a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f67c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f67e:	b133      	cbz	r3, 9000f68e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f680:	f001 fb70 	bl	90010d64 <xTaskRemoveFromEventList>
9000f684:	2800      	cmp	r0, #0
9000f686:	d0f4      	beq.n	9000f672 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000f688:	f001 fc0a 	bl	90010ea0 <vTaskMissedYield>
9000f68c:	e7f1      	b.n	9000f672 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f68e:	23ff      	movs	r3, #255	; 0xff
9000f690:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f694:	f7ff fbd0 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f698:	f7ff fbac 	bl	9000edf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f69c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f6a0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f6a2:	2d00      	cmp	r5, #0
9000f6a4:	dd10      	ble.n	9000f6c8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f6a6:	f104 0610 	add.w	r6, r4, #16
9000f6aa:	e003      	b.n	9000f6b4 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000f6ac:	1e6b      	subs	r3, r5, #1
9000f6ae:	b2da      	uxtb	r2, r3
9000f6b0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f6b2:	b14a      	cbz	r2, 9000f6c8 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f6b4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f6b6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f6b8:	b133      	cbz	r3, 9000f6c8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f6ba:	f001 fb53 	bl	90010d64 <xTaskRemoveFromEventList>
9000f6be:	2800      	cmp	r0, #0
9000f6c0:	d0f4      	beq.n	9000f6ac <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000f6c2:	f001 fbed 	bl	90010ea0 <vTaskMissedYield>
9000f6c6:	e7f1      	b.n	9000f6ac <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000f6c8:	23ff      	movs	r3, #255	; 0xff
9000f6ca:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f6ce:	f7ff fbb3 	bl	9000ee38 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f6d2:	f001 fa23 	bl	90010b1c <xTaskResumeAll>
			return errQUEUE_FULL;
9000f6d6:	2000      	movs	r0, #0
9000f6d8:	e7ba      	b.n	9000f650 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f6da:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f6de:	f001 fb41 	bl	90010d64 <xTaskRemoveFromEventList>
9000f6e2:	2800      	cmp	r0, #0
9000f6e4:	d0b1      	beq.n	9000f64a <xQueueGenericSend+0x266>
9000f6e6:	e7a6      	b.n	9000f636 <xQueueGenericSend+0x252>

9000f6e8 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
9000f6e8:	b179      	cbz	r1, 9000f70a <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000f6ea:	2350      	movs	r3, #80	; 0x50
	{
9000f6ec:	b570      	push	{r4, r5, r6, lr}
9000f6ee:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
9000f6f0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000f6f2:	9b01      	ldr	r3, [sp, #4]
9000f6f4:	2b50      	cmp	r3, #80	; 0x50
9000f6f6:	d011      	beq.n	9000f71c <xQueueCreateMutexStatic+0x34>
9000f6f8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f6fc:	f383 8811 	msr	BASEPRI, r3
9000f700:	f3bf 8f6f 	isb	sy
9000f704:	f3bf 8f4f 	dsb	sy
9000f708:	e7fe      	b.n	9000f708 <xQueueCreateMutexStatic+0x20>
9000f70a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f70e:	f383 8811 	msr	BASEPRI, r3
9000f712:	f3bf 8f6f 	isb	sy
9000f716:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000f71a:	e7fe      	b.n	9000f71a <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
9000f71c:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000f71e:	2301      	movs	r3, #1
9000f720:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000f722:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000f724:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
9000f728:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000f72a:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
9000f72c:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
9000f730:	f7ff fb60 	bl	9000edf4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f734:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
9000f736:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f738:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f73a:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
9000f73c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f740:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f744:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
9000f748:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f74c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f74e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f750:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f752:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f756:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f75a:	f7ff fa97 	bl	9000ec8c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f75e:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f762:	f7ff fa93 	bl	9000ec8c <vListInitialise>
	taskEXIT_CRITICAL();
9000f766:	f7ff fb67 	bl	9000ee38 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000f76a:	4633      	mov	r3, r6
9000f76c:	4632      	mov	r2, r6
9000f76e:	4631      	mov	r1, r6
9000f770:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000f772:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000f776:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000f778:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000f77a:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000f77c:	f7ff fe32 	bl	9000f3e4 <xQueueGenericSend>
	}
9000f780:	4620      	mov	r0, r4
9000f782:	b002      	add	sp, #8
9000f784:	bd70      	pop	{r4, r5, r6, pc}
9000f786:	bf00      	nop

9000f788 <xQueueGiveMutexRecursive>:
	{
9000f788:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
9000f78a:	b138      	cbz	r0, 9000f79c <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000f78c:	6885      	ldr	r5, [r0, #8]
9000f78e:	4604      	mov	r4, r0
9000f790:	f001 fb8c 	bl	90010eac <xTaskGetCurrentTaskHandle>
9000f794:	4285      	cmp	r5, r0
9000f796:	d00a      	beq.n	9000f7ae <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
9000f798:	2000      	movs	r0, #0
	}
9000f79a:	bd38      	pop	{r3, r4, r5, pc}
9000f79c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f7a0:	f383 8811 	msr	BASEPRI, r3
9000f7a4:	f3bf 8f6f 	isb	sy
9000f7a8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000f7ac:	e7fe      	b.n	9000f7ac <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
9000f7ae:	68e3      	ldr	r3, [r4, #12]
9000f7b0:	3b01      	subs	r3, #1
9000f7b2:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
9000f7b4:	b10b      	cbz	r3, 9000f7ba <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
9000f7b6:	2001      	movs	r0, #1
	}
9000f7b8:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
9000f7ba:	461a      	mov	r2, r3
9000f7bc:	4619      	mov	r1, r3
9000f7be:	4620      	mov	r0, r4
9000f7c0:	f7ff fe10 	bl	9000f3e4 <xQueueGenericSend>
			xReturn = pdPASS;
9000f7c4:	2001      	movs	r0, #1
	}
9000f7c6:	bd38      	pop	{r3, r4, r5, pc}

9000f7c8 <xQueueCreateMutex>:
	{
9000f7c8:	b570      	push	{r4, r5, r6, lr}
9000f7ca:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000f7cc:	2050      	movs	r0, #80	; 0x50
9000f7ce:	f7ff f93b 	bl	9000ea48 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000f7d2:	4604      	mov	r4, r0
9000f7d4:	b370      	cbz	r0, 9000f834 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000f7d6:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
9000f7d8:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000f7da:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000f7dc:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000f7e0:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
9000f7e4:	f7ff fb06 	bl	9000edf4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f7e8:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f7ea:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f7ec:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f7f0:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f7f2:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
9000f7f6:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f7fa:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f7fc:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f7fe:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
9000f800:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f802:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000f806:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f80a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f80e:	f7ff fa3d 	bl	9000ec8c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f812:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f816:	f7ff fa39 	bl	9000ec8c <vListInitialise>
	taskEXIT_CRITICAL();
9000f81a:	f7ff fb0d 	bl	9000ee38 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000f81e:	4633      	mov	r3, r6
9000f820:	4632      	mov	r2, r6
9000f822:	4631      	mov	r1, r6
9000f824:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000f826:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000f82a:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000f82c:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000f82e:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000f830:	f7ff fdd8 	bl	9000f3e4 <xQueueGenericSend>
	}
9000f834:	4620      	mov	r0, r4
9000f836:	bd70      	pop	{r4, r5, r6, pc}

9000f838 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000f838:	2800      	cmp	r0, #0
9000f83a:	d04e      	beq.n	9000f8da <xQueueGenericSendFromISR+0xa2>
{
9000f83c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f840:	460e      	mov	r6, r1
9000f842:	4604      	mov	r4, r0
9000f844:	4617      	mov	r7, r2
9000f846:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f848:	b339      	cbz	r1, 9000f89a <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000f84a:	2d02      	cmp	r5, #2
9000f84c:	d10b      	bne.n	9000f866 <xQueueGenericSendFromISR+0x2e>
9000f84e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f850:	2b01      	cmp	r3, #1
9000f852:	d008      	beq.n	9000f866 <xQueueGenericSendFromISR+0x2e>
9000f854:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f858:	f383 8811 	msr	BASEPRI, r3
9000f85c:	f3bf 8f6f 	isb	sy
9000f860:	f3bf 8f4f 	dsb	sy
9000f864:	e7fe      	b.n	9000f864 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f866:	f7ff fbf7 	bl	9000f058 <vPortValidateInterruptPriority>
	__asm volatile
9000f86a:	f3ef 8811 	mrs	r8, BASEPRI
9000f86e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f872:	f383 8811 	msr	BASEPRI, r3
9000f876:	f3bf 8f6f 	isb	sy
9000f87a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f87e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000f880:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f882:	429a      	cmp	r2, r3
9000f884:	d315      	bcc.n	9000f8b2 <xQueueGenericSendFromISR+0x7a>
9000f886:	f1a5 0002 	sub.w	r0, r5, #2
9000f88a:	fab0 f080 	clz	r0, r0
9000f88e:	0940      	lsrs	r0, r0, #5
9000f890:	b978      	cbnz	r0, 9000f8b2 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000f892:	f388 8811 	msr	BASEPRI, r8
}
9000f896:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f89a:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000f89c:	2b00      	cmp	r3, #0
9000f89e:	d0d4      	beq.n	9000f84a <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000f8a0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f8a4:	f383 8811 	msr	BASEPRI, r3
9000f8a8:	f3bf 8f6f 	isb	sy
9000f8ac:	f3bf 8f4f 	dsb	sy
9000f8b0:	e7fe      	b.n	9000f8b0 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f8b2:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000f8b4:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f8b8:	4631      	mov	r1, r6
9000f8ba:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000f8bc:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f8be:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f8c0:	f7ff fbf8 	bl	9000f0b4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000f8c4:	1c6b      	adds	r3, r5, #1
9000f8c6:	d011      	beq.n	9000f8ec <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f8c8:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
9000f8ca:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f8cc:	b25b      	sxtb	r3, r3
9000f8ce:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
9000f8d2:	f388 8811 	msr	BASEPRI, r8
}
9000f8d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
9000f8da:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f8de:	f383 8811 	msr	BASEPRI, r3
9000f8e2:	f3bf 8f6f 	isb	sy
9000f8e6:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f8ea:	e7fe      	b.n	9000f8ea <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f8ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000f8ee:	b90b      	cbnz	r3, 9000f8f4 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
9000f8f0:	2001      	movs	r0, #1
9000f8f2:	e7ce      	b.n	9000f892 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f8f4:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f8f8:	f001 fa34 	bl	90010d64 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000f8fc:	2800      	cmp	r0, #0
9000f8fe:	d0f7      	beq.n	9000f8f0 <xQueueGenericSendFromISR+0xb8>
9000f900:	2f00      	cmp	r7, #0
9000f902:	d0f5      	beq.n	9000f8f0 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f904:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000f906:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f908:	603b      	str	r3, [r7, #0]
9000f90a:	e7c2      	b.n	9000f892 <xQueueGenericSendFromISR+0x5a>

9000f90c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000f90c:	b360      	cbz	r0, 9000f968 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f90e:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
9000f910:	b570      	push	{r4, r5, r6, lr}
9000f912:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000f914:	b143      	cbz	r3, 9000f928 <xQueueGiveFromISR+0x1c>
9000f916:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f91a:	f383 8811 	msr	BASEPRI, r3
9000f91e:	f3bf 8f6f 	isb	sy
9000f922:	f3bf 8f4f 	dsb	sy
9000f926:	e7fe      	b.n	9000f926 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000f928:	6803      	ldr	r3, [r0, #0]
9000f92a:	460d      	mov	r5, r1
9000f92c:	b32b      	cbz	r3, 9000f97a <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f92e:	f7ff fb93 	bl	9000f058 <vPortValidateInterruptPriority>
	__asm volatile
9000f932:	f3ef 8611 	mrs	r6, BASEPRI
9000f936:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f93a:	f383 8811 	msr	BASEPRI, r3
9000f93e:	f3bf 8f6f 	isb	sy
9000f942:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f946:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000f948:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000f94a:	429a      	cmp	r2, r3
9000f94c:	d921      	bls.n	9000f992 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000f94e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f952:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000f954:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f956:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000f958:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000f95a:	d01e      	beq.n	9000f99a <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f95c:	3301      	adds	r3, #1
			xReturn = pdPASS;
9000f95e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f960:	b25b      	sxtb	r3, r3
9000f962:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f966:	e015      	b.n	9000f994 <xQueueGiveFromISR+0x88>
	__asm volatile
9000f968:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f96c:	f383 8811 	msr	BASEPRI, r3
9000f970:	f3bf 8f6f 	isb	sy
9000f974:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f978:	e7fe      	b.n	9000f978 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000f97a:	6883      	ldr	r3, [r0, #8]
9000f97c:	2b00      	cmp	r3, #0
9000f97e:	d0d6      	beq.n	9000f92e <xQueueGiveFromISR+0x22>
9000f980:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f984:	f383 8811 	msr	BASEPRI, r3
9000f988:	f3bf 8f6f 	isb	sy
9000f98c:	f3bf 8f4f 	dsb	sy
9000f990:	e7fe      	b.n	9000f990 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000f992:	2000      	movs	r0, #0
	__asm volatile
9000f994:	f386 8811 	msr	BASEPRI, r6
}
9000f998:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f99a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000f99c:	b90b      	cbnz	r3, 9000f9a2 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
9000f99e:	2001      	movs	r0, #1
9000f9a0:	e7f8      	b.n	9000f994 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f9a2:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f9a6:	f001 f9dd 	bl	90010d64 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000f9aa:	2d00      	cmp	r5, #0
9000f9ac:	d0f7      	beq.n	9000f99e <xQueueGiveFromISR+0x92>
9000f9ae:	2800      	cmp	r0, #0
9000f9b0:	d0f5      	beq.n	9000f99e <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f9b2:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000f9b4:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f9b6:	602b      	str	r3, [r5, #0]
9000f9b8:	e7ec      	b.n	9000f994 <xQueueGiveFromISR+0x88>
9000f9ba:	bf00      	nop

9000f9bc <xQueueReceive>:
{
9000f9bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f9c0:	b085      	sub	sp, #20
9000f9c2:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f9c4:	2800      	cmp	r0, #0
9000f9c6:	f000 815c 	beq.w	9000fc82 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f9ca:	460f      	mov	r7, r1
9000f9cc:	4604      	mov	r4, r0
9000f9ce:	2900      	cmp	r1, #0
9000f9d0:	d079      	beq.n	9000fac6 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f9d2:	f001 fa71 	bl	90010eb8 <xTaskGetSchedulerState>
9000f9d6:	2800      	cmp	r0, #0
9000f9d8:	f000 8081 	beq.w	9000fade <xQueueReceive+0x122>
		taskENTER_CRITICAL();
9000f9dc:	f7ff fa0a 	bl	9000edf4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f9e0:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f9e2:	2d00      	cmp	r5, #0
9000f9e4:	f040 8138 	bne.w	9000fc58 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f9e8:	9b01      	ldr	r3, [sp, #4]
9000f9ea:	2b00      	cmp	r3, #0
9000f9ec:	f000 80d5 	beq.w	9000fb9a <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
9000f9f0:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f9f2:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f9f6:	a802      	add	r0, sp, #8
9000f9f8:	f001 f9fe 	bl	90010df8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000f9fc:	f7ff fa1c 	bl	9000ee38 <vPortExitCritical>
		vTaskSuspendAll();
9000fa00:	f001 f884 	bl	90010b0c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000fa04:	f7ff f9f6 	bl	9000edf4 <vPortEnterCritical>
9000fa08:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000fa0c:	2bff      	cmp	r3, #255	; 0xff
9000fa0e:	d101      	bne.n	9000fa14 <xQueueReceive+0x58>
9000fa10:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
9000fa14:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000fa18:	2bff      	cmp	r3, #255	; 0xff
9000fa1a:	d101      	bne.n	9000fa20 <xQueueReceive+0x64>
9000fa1c:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
9000fa20:	f7ff fa0a 	bl	9000ee38 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000fa24:	a901      	add	r1, sp, #4
9000fa26:	a802      	add	r0, sp, #8
9000fa28:	f001 f9f2 	bl	90010e10 <xTaskCheckForTimeOut>
9000fa2c:	2800      	cmp	r0, #0
9000fa2e:	d163      	bne.n	9000faf8 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
9000fa30:	f7ff f9e0 	bl	9000edf4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000fa34:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000fa36:	2b00      	cmp	r3, #0
9000fa38:	f000 80b5 	beq.w	9000fba6 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
9000fa3c:	f7ff f9fc 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fa40:	f7ff f9d8 	bl	9000edf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fa44:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000fa48:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fa4a:	2d00      	cmp	r5, #0
9000fa4c:	dc04      	bgt.n	9000fa58 <xQueueReceive+0x9c>
9000fa4e:	e011      	b.n	9000fa74 <xQueueReceive+0xb8>
			--cTxLock;
9000fa50:	1e6b      	subs	r3, r5, #1
9000fa52:	b2da      	uxtb	r2, r3
9000fa54:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fa56:	b16a      	cbz	r2, 9000fa74 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fa58:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fa5a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fa5c:	b153      	cbz	r3, 9000fa74 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fa5e:	f001 f981 	bl	90010d64 <xTaskRemoveFromEventList>
9000fa62:	2800      	cmp	r0, #0
9000fa64:	d0f4      	beq.n	9000fa50 <xQueueReceive+0x94>
						vTaskMissedYield();
9000fa66:	f001 fa1b 	bl	90010ea0 <vTaskMissedYield>
			--cTxLock;
9000fa6a:	1e6b      	subs	r3, r5, #1
9000fa6c:	b2da      	uxtb	r2, r3
9000fa6e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fa70:	2a00      	cmp	r2, #0
9000fa72:	d1f1      	bne.n	9000fa58 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
9000fa74:	23ff      	movs	r3, #255	; 0xff
9000fa76:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000fa7a:	f7ff f9dd 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fa7e:	f7ff f9b9 	bl	9000edf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fa82:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000fa86:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fa88:	2d00      	cmp	r5, #0
9000fa8a:	dd14      	ble.n	9000fab6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fa8c:	f104 0910 	add.w	r9, r4, #16
9000fa90:	e003      	b.n	9000fa9a <xQueueReceive+0xde>
				--cRxLock;
9000fa92:	1e6b      	subs	r3, r5, #1
9000fa94:	b2da      	uxtb	r2, r3
9000fa96:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fa98:	b16a      	cbz	r2, 9000fab6 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fa9a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fa9c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fa9e:	b153      	cbz	r3, 9000fab6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000faa0:	f001 f960 	bl	90010d64 <xTaskRemoveFromEventList>
9000faa4:	2800      	cmp	r0, #0
9000faa6:	d0f4      	beq.n	9000fa92 <xQueueReceive+0xd6>
					vTaskMissedYield();
9000faa8:	f001 f9fa 	bl	90010ea0 <vTaskMissedYield>
				--cRxLock;
9000faac:	1e6b      	subs	r3, r5, #1
9000faae:	b2da      	uxtb	r2, r3
9000fab0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fab2:	2a00      	cmp	r2, #0
9000fab4:	d1f1      	bne.n	9000fa9a <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
9000fab6:	23ff      	movs	r3, #255	; 0xff
9000fab8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000fabc:	f7ff f9bc 	bl	9000ee38 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000fac0:	f001 f82c 	bl	90010b1c <xTaskResumeAll>
		taskENTER_CRITICAL();
9000fac4:	e060      	b.n	9000fb88 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000fac6:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000fac8:	2b00      	cmp	r3, #0
9000faca:	d082      	beq.n	9000f9d2 <xQueueReceive+0x16>
	__asm volatile
9000facc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fad0:	f383 8811 	msr	BASEPRI, r3
9000fad4:	f3bf 8f6f 	isb	sy
9000fad8:	f3bf 8f4f 	dsb	sy
9000fadc:	e7fe      	b.n	9000fadc <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000fade:	9b01      	ldr	r3, [sp, #4]
9000fae0:	2b00      	cmp	r3, #0
9000fae2:	f43f af7b 	beq.w	9000f9dc <xQueueReceive+0x20>
9000fae6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000faea:	f383 8811 	msr	BASEPRI, r3
9000faee:	f3bf 8f6f 	isb	sy
9000faf2:	f3bf 8f4f 	dsb	sy
9000faf6:	e7fe      	b.n	9000faf6 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
9000faf8:	f7ff f97c 	bl	9000edf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fafc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000fb00:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fb02:	2d00      	cmp	r5, #0
9000fb04:	dc04      	bgt.n	9000fb10 <xQueueReceive+0x154>
9000fb06:	e011      	b.n	9000fb2c <xQueueReceive+0x170>
			--cTxLock;
9000fb08:	1e6b      	subs	r3, r5, #1
9000fb0a:	b2da      	uxtb	r2, r3
9000fb0c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fb0e:	b16a      	cbz	r2, 9000fb2c <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fb10:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fb12:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fb14:	b153      	cbz	r3, 9000fb2c <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fb16:	f001 f925 	bl	90010d64 <xTaskRemoveFromEventList>
9000fb1a:	2800      	cmp	r0, #0
9000fb1c:	d0f4      	beq.n	9000fb08 <xQueueReceive+0x14c>
						vTaskMissedYield();
9000fb1e:	f001 f9bf 	bl	90010ea0 <vTaskMissedYield>
			--cTxLock;
9000fb22:	1e6b      	subs	r3, r5, #1
9000fb24:	b2da      	uxtb	r2, r3
9000fb26:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fb28:	2a00      	cmp	r2, #0
9000fb2a:	d1f1      	bne.n	9000fb10 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
9000fb2c:	23ff      	movs	r3, #255	; 0xff
9000fb2e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000fb32:	f7ff f981 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fb36:	f7ff f95d 	bl	9000edf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fb3a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000fb3e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fb40:	2d00      	cmp	r5, #0
9000fb42:	dd14      	ble.n	9000fb6e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fb44:	f104 0910 	add.w	r9, r4, #16
9000fb48:	e003      	b.n	9000fb52 <xQueueReceive+0x196>
				--cRxLock;
9000fb4a:	1e6b      	subs	r3, r5, #1
9000fb4c:	b2da      	uxtb	r2, r3
9000fb4e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fb50:	b16a      	cbz	r2, 9000fb6e <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fb52:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fb54:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fb56:	b153      	cbz	r3, 9000fb6e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fb58:	f001 f904 	bl	90010d64 <xTaskRemoveFromEventList>
9000fb5c:	2800      	cmp	r0, #0
9000fb5e:	d0f4      	beq.n	9000fb4a <xQueueReceive+0x18e>
					vTaskMissedYield();
9000fb60:	f001 f99e 	bl	90010ea0 <vTaskMissedYield>
				--cRxLock;
9000fb64:	1e6b      	subs	r3, r5, #1
9000fb66:	b2da      	uxtb	r2, r3
9000fb68:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fb6a:	2a00      	cmp	r2, #0
9000fb6c:	d1f1      	bne.n	9000fb52 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
9000fb6e:	23ff      	movs	r3, #255	; 0xff
9000fb70:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000fb74:	f7ff f960 	bl	9000ee38 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000fb78:	f000 ffd0 	bl	90010b1c <xTaskResumeAll>
	taskENTER_CRITICAL();
9000fb7c:	f7ff f93a 	bl	9000edf4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000fb80:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000fb82:	b153      	cbz	r3, 9000fb9a <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
9000fb84:	f7ff f958 	bl	9000ee38 <vPortExitCritical>
		taskENTER_CRITICAL();
9000fb88:	f7ff f934 	bl	9000edf4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000fb8c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000fb8e:	2d00      	cmp	r5, #0
9000fb90:	d162      	bne.n	9000fc58 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000fb92:	9b01      	ldr	r3, [sp, #4]
9000fb94:	2b00      	cmp	r3, #0
9000fb96:	f47f af31 	bne.w	9000f9fc <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000fb9a:	f7ff f94d 	bl	9000ee38 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000fb9e:	2000      	movs	r0, #0
}
9000fba0:	b005      	add	sp, #20
9000fba2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000fba6:	f7ff f947 	bl	9000ee38 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000fbaa:	9901      	ldr	r1, [sp, #4]
9000fbac:	4630      	mov	r0, r6
9000fbae:	f001 f84b 	bl	90010c48 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000fbb2:	f7ff f91f 	bl	9000edf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fbb6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000fbba:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fbbc:	2d00      	cmp	r5, #0
9000fbbe:	dc04      	bgt.n	9000fbca <xQueueReceive+0x20e>
9000fbc0:	e011      	b.n	9000fbe6 <xQueueReceive+0x22a>
			--cTxLock;
9000fbc2:	1e6b      	subs	r3, r5, #1
9000fbc4:	b2da      	uxtb	r2, r3
9000fbc6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fbc8:	b16a      	cbz	r2, 9000fbe6 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fbca:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fbcc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fbce:	b153      	cbz	r3, 9000fbe6 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fbd0:	f001 f8c8 	bl	90010d64 <xTaskRemoveFromEventList>
9000fbd4:	2800      	cmp	r0, #0
9000fbd6:	d0f4      	beq.n	9000fbc2 <xQueueReceive+0x206>
						vTaskMissedYield();
9000fbd8:	f001 f962 	bl	90010ea0 <vTaskMissedYield>
			--cTxLock;
9000fbdc:	1e6b      	subs	r3, r5, #1
9000fbde:	b2da      	uxtb	r2, r3
9000fbe0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fbe2:	2a00      	cmp	r2, #0
9000fbe4:	d1f1      	bne.n	9000fbca <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
9000fbe6:	23ff      	movs	r3, #255	; 0xff
9000fbe8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000fbec:	f7ff f924 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fbf0:	f7ff f900 	bl	9000edf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fbf4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000fbf8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fbfa:	2d00      	cmp	r5, #0
9000fbfc:	dd14      	ble.n	9000fc28 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fbfe:	f104 0910 	add.w	r9, r4, #16
9000fc02:	e003      	b.n	9000fc0c <xQueueReceive+0x250>
				--cRxLock;
9000fc04:	1e6b      	subs	r3, r5, #1
9000fc06:	b2da      	uxtb	r2, r3
9000fc08:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fc0a:	b16a      	cbz	r2, 9000fc28 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fc0c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fc0e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fc10:	b153      	cbz	r3, 9000fc28 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fc12:	f001 f8a7 	bl	90010d64 <xTaskRemoveFromEventList>
9000fc16:	2800      	cmp	r0, #0
9000fc18:	d0f4      	beq.n	9000fc04 <xQueueReceive+0x248>
					vTaskMissedYield();
9000fc1a:	f001 f941 	bl	90010ea0 <vTaskMissedYield>
				--cRxLock;
9000fc1e:	1e6b      	subs	r3, r5, #1
9000fc20:	b2da      	uxtb	r2, r3
9000fc22:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fc24:	2a00      	cmp	r2, #0
9000fc26:	d1f1      	bne.n	9000fc0c <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
9000fc28:	23ff      	movs	r3, #255	; 0xff
9000fc2a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000fc2e:	f7ff f903 	bl	9000ee38 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000fc32:	f000 ff73 	bl	90010b1c <xTaskResumeAll>
9000fc36:	2800      	cmp	r0, #0
9000fc38:	d1a6      	bne.n	9000fb88 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
9000fc3a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fc3e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fc42:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fc46:	f3bf 8f4f 	dsb	sy
9000fc4a:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000fc4e:	f7ff f8d1 	bl	9000edf4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000fc52:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000fc54:	2d00      	cmp	r5, #0
9000fc56:	d09c      	beq.n	9000fb92 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000fc58:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000fc5a:	b152      	cbz	r2, 9000fc72 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fc5c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fc5e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fc60:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fc62:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fc64:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fc66:	d301      	bcc.n	9000fc6c <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000fc68:	6821      	ldr	r1, [r4, #0]
9000fc6a:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000fc6c:	4638      	mov	r0, r7
9000fc6e:	f018 fd77 	bl	90028760 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000fc72:	3d01      	subs	r5, #1
9000fc74:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fc76:	6923      	ldr	r3, [r4, #16]
9000fc78:	b963      	cbnz	r3, 9000fc94 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000fc7a:	f7ff f8dd 	bl	9000ee38 <vPortExitCritical>
				return pdPASS;
9000fc7e:	2001      	movs	r0, #1
9000fc80:	e78e      	b.n	9000fba0 <xQueueReceive+0x1e4>
9000fc82:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fc86:	f383 8811 	msr	BASEPRI, r3
9000fc8a:	f3bf 8f6f 	isb	sy
9000fc8e:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000fc92:	e7fe      	b.n	9000fc92 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fc94:	f104 0010 	add.w	r0, r4, #16
9000fc98:	f001 f864 	bl	90010d64 <xTaskRemoveFromEventList>
9000fc9c:	2800      	cmp	r0, #0
9000fc9e:	d0ec      	beq.n	9000fc7a <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
9000fca0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fca4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fca8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fcac:	f3bf 8f4f 	dsb	sy
9000fcb0:	f3bf 8f6f 	isb	sy
9000fcb4:	e7e1      	b.n	9000fc7a <xQueueReceive+0x2be>
9000fcb6:	bf00      	nop

9000fcb8 <xQueueSemaphoreTake>:
{
9000fcb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fcbc:	b084      	sub	sp, #16
9000fcbe:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000fcc0:	2800      	cmp	r0, #0
9000fcc2:	d05c      	beq.n	9000fd7e <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
9000fcc4:	6c07      	ldr	r7, [r0, #64]	; 0x40
9000fcc6:	4604      	mov	r4, r0
9000fcc8:	b147      	cbz	r7, 9000fcdc <xQueueSemaphoreTake+0x24>
9000fcca:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fcce:	f383 8811 	msr	BASEPRI, r3
9000fcd2:	f3bf 8f6f 	isb	sy
9000fcd6:	f3bf 8f4f 	dsb	sy
9000fcda:	e7fe      	b.n	9000fcda <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000fcdc:	f001 f8ec 	bl	90010eb8 <xTaskGetSchedulerState>
9000fce0:	4605      	mov	r5, r0
9000fce2:	2800      	cmp	r0, #0
9000fce4:	d054      	beq.n	9000fd90 <xQueueSemaphoreTake+0xd8>
9000fce6:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fce8:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
9000fcec:	f7ff f882 	bl	9000edf4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000fcf0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000fcf2:	2b00      	cmp	r3, #0
9000fcf4:	f040 8149 	bne.w	9000ff8a <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000fcf8:	9b01      	ldr	r3, [sp, #4]
9000fcfa:	2b00      	cmp	r3, #0
9000fcfc:	f000 813a 	beq.w	9000ff74 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
9000fd00:	2d00      	cmp	r5, #0
9000fd02:	f000 809d 	beq.w	9000fe40 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
9000fd06:	f7ff f897 	bl	9000ee38 <vPortExitCritical>
		vTaskSuspendAll();
9000fd0a:	f000 feff 	bl	90010b0c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000fd0e:	f7ff f871 	bl	9000edf4 <vPortEnterCritical>
9000fd12:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000fd16:	2bff      	cmp	r3, #255	; 0xff
9000fd18:	d102      	bne.n	9000fd20 <xQueueSemaphoreTake+0x68>
9000fd1a:	2300      	movs	r3, #0
9000fd1c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000fd20:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000fd24:	2bff      	cmp	r3, #255	; 0xff
9000fd26:	d102      	bne.n	9000fd2e <xQueueSemaphoreTake+0x76>
9000fd28:	2300      	movs	r3, #0
9000fd2a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000fd2e:	f7ff f883 	bl	9000ee38 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000fd32:	a901      	add	r1, sp, #4
9000fd34:	a802      	add	r0, sp, #8
9000fd36:	f001 f86b 	bl	90010e10 <xTaskCheckForTimeOut>
9000fd3a:	2800      	cmp	r0, #0
9000fd3c:	d135      	bne.n	9000fdaa <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
9000fd3e:	f7ff f859 	bl	9000edf4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000fd42:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000fd44:	2b00      	cmp	r3, #0
9000fd46:	f000 80a4 	beq.w	9000fe92 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
9000fd4a:	f7ff f875 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fd4e:	f7ff f851 	bl	9000edf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fd52:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000fd56:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fd58:	2d00      	cmp	r5, #0
9000fd5a:	dc05      	bgt.n	9000fd68 <xQueueSemaphoreTake+0xb0>
9000fd5c:	e074      	b.n	9000fe48 <xQueueSemaphoreTake+0x190>
			--cTxLock;
9000fd5e:	1e6b      	subs	r3, r5, #1
9000fd60:	b2da      	uxtb	r2, r3
9000fd62:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fd64:	2a00      	cmp	r2, #0
9000fd66:	d06f      	beq.n	9000fe48 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fd68:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fd6a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fd6c:	2b00      	cmp	r3, #0
9000fd6e:	d06b      	beq.n	9000fe48 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fd70:	f000 fff8 	bl	90010d64 <xTaskRemoveFromEventList>
9000fd74:	2800      	cmp	r0, #0
9000fd76:	d0f2      	beq.n	9000fd5e <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
9000fd78:	f001 f892 	bl	90010ea0 <vTaskMissedYield>
9000fd7c:	e7ef      	b.n	9000fd5e <xQueueSemaphoreTake+0xa6>
9000fd7e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fd82:	f383 8811 	msr	BASEPRI, r3
9000fd86:	f3bf 8f6f 	isb	sy
9000fd8a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000fd8e:	e7fe      	b.n	9000fd8e <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000fd90:	9b01      	ldr	r3, [sp, #4]
9000fd92:	2b00      	cmp	r3, #0
9000fd94:	f000 80d4 	beq.w	9000ff40 <xQueueSemaphoreTake+0x288>
9000fd98:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fd9c:	f383 8811 	msr	BASEPRI, r3
9000fda0:	f3bf 8f6f 	isb	sy
9000fda4:	f3bf 8f4f 	dsb	sy
9000fda8:	e7fe      	b.n	9000fda8 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
9000fdaa:	f7ff f823 	bl	9000edf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fdae:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000fdb2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fdb4:	2d00      	cmp	r5, #0
9000fdb6:	dc04      	bgt.n	9000fdc2 <xQueueSemaphoreTake+0x10a>
9000fdb8:	e011      	b.n	9000fdde <xQueueSemaphoreTake+0x126>
			--cTxLock;
9000fdba:	1e6b      	subs	r3, r5, #1
9000fdbc:	b2da      	uxtb	r2, r3
9000fdbe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fdc0:	b16a      	cbz	r2, 9000fdde <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fdc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fdc4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fdc6:	b153      	cbz	r3, 9000fdde <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fdc8:	f000 ffcc 	bl	90010d64 <xTaskRemoveFromEventList>
9000fdcc:	2800      	cmp	r0, #0
9000fdce:	d0f4      	beq.n	9000fdba <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
9000fdd0:	f001 f866 	bl	90010ea0 <vTaskMissedYield>
			--cTxLock;
9000fdd4:	1e6b      	subs	r3, r5, #1
9000fdd6:	b2da      	uxtb	r2, r3
9000fdd8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fdda:	2a00      	cmp	r2, #0
9000fddc:	d1f1      	bne.n	9000fdc2 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
9000fdde:	23ff      	movs	r3, #255	; 0xff
9000fde0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000fde4:	f7ff f828 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fde8:	f7ff f804 	bl	9000edf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fdec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000fdf0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fdf2:	2d00      	cmp	r5, #0
9000fdf4:	dd14      	ble.n	9000fe20 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fdf6:	f104 0810 	add.w	r8, r4, #16
9000fdfa:	e003      	b.n	9000fe04 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
9000fdfc:	1e6b      	subs	r3, r5, #1
9000fdfe:	b2da      	uxtb	r2, r3
9000fe00:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fe02:	b16a      	cbz	r2, 9000fe20 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fe04:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fe06:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fe08:	b153      	cbz	r3, 9000fe20 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fe0a:	f000 ffab 	bl	90010d64 <xTaskRemoveFromEventList>
9000fe0e:	2800      	cmp	r0, #0
9000fe10:	d0f4      	beq.n	9000fdfc <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
9000fe12:	f001 f845 	bl	90010ea0 <vTaskMissedYield>
				--cRxLock;
9000fe16:	1e6b      	subs	r3, r5, #1
9000fe18:	b2da      	uxtb	r2, r3
9000fe1a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fe1c:	2a00      	cmp	r2, #0
9000fe1e:	d1f1      	bne.n	9000fe04 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
9000fe20:	23ff      	movs	r3, #255	; 0xff
9000fe22:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000fe26:	f7ff f807 	bl	9000ee38 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000fe2a:	f000 fe77 	bl	90010b1c <xTaskResumeAll>
	taskENTER_CRITICAL();
9000fe2e:	f7fe ffe1 	bl	9000edf4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000fe32:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000fe34:	2b00      	cmp	r3, #0
9000fe36:	d07c      	beq.n	9000ff32 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
9000fe38:	f7fe fffe 	bl	9000ee38 <vPortExitCritical>
	return xReturn;
9000fe3c:	2501      	movs	r5, #1
9000fe3e:	e755      	b.n	9000fcec <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000fe40:	a802      	add	r0, sp, #8
9000fe42:	f000 ffd9 	bl	90010df8 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000fe46:	e75e      	b.n	9000fd06 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000fe48:	23ff      	movs	r3, #255	; 0xff
9000fe4a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000fe4e:	f7fe fff3 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fe52:	f7fe ffcf 	bl	9000edf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fe56:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000fe5a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fe5c:	2d00      	cmp	r5, #0
9000fe5e:	dd10      	ble.n	9000fe82 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fe60:	f104 0810 	add.w	r8, r4, #16
9000fe64:	e003      	b.n	9000fe6e <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
9000fe66:	1e6b      	subs	r3, r5, #1
9000fe68:	b2da      	uxtb	r2, r3
9000fe6a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fe6c:	b14a      	cbz	r2, 9000fe82 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fe6e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fe70:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fe72:	b133      	cbz	r3, 9000fe82 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fe74:	f000 ff76 	bl	90010d64 <xTaskRemoveFromEventList>
9000fe78:	2800      	cmp	r0, #0
9000fe7a:	d0f4      	beq.n	9000fe66 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
9000fe7c:	f001 f810 	bl	90010ea0 <vTaskMissedYield>
9000fe80:	e7f1      	b.n	9000fe66 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
9000fe82:	23ff      	movs	r3, #255	; 0xff
9000fe84:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000fe88:	f7fe ffd6 	bl	9000ee38 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000fe8c:	f000 fe46 	bl	90010b1c <xTaskResumeAll>
9000fe90:	e7d4      	b.n	9000fe3c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000fe92:	f7fe ffd1 	bl	9000ee38 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000fe96:	6823      	ldr	r3, [r4, #0]
9000fe98:	2b00      	cmp	r3, #0
9000fe9a:	d062      	beq.n	9000ff62 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000fe9c:	9901      	ldr	r1, [sp, #4]
9000fe9e:	4630      	mov	r0, r6
9000fea0:	f000 fed2 	bl	90010c48 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000fea4:	f7fe ffa6 	bl	9000edf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fea8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000feac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000feae:	2d00      	cmp	r5, #0
9000feb0:	dc04      	bgt.n	9000febc <xQueueSemaphoreTake+0x204>
9000feb2:	e00d      	b.n	9000fed0 <xQueueSemaphoreTake+0x218>
			--cTxLock;
9000feb4:	1e6b      	subs	r3, r5, #1
9000feb6:	b2da      	uxtb	r2, r3
9000feb8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000feba:	b14a      	cbz	r2, 9000fed0 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000febc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000febe:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fec0:	b133      	cbz	r3, 9000fed0 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fec2:	f000 ff4f 	bl	90010d64 <xTaskRemoveFromEventList>
9000fec6:	2800      	cmp	r0, #0
9000fec8:	d0f4      	beq.n	9000feb4 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
9000feca:	f000 ffe9 	bl	90010ea0 <vTaskMissedYield>
9000fece:	e7f1      	b.n	9000feb4 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
9000fed0:	23ff      	movs	r3, #255	; 0xff
9000fed2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000fed6:	f7fe ffaf 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
9000feda:	f7fe ff8b 	bl	9000edf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fede:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000fee2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fee4:	2d00      	cmp	r5, #0
9000fee6:	dd10      	ble.n	9000ff0a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fee8:	f104 0810 	add.w	r8, r4, #16
9000feec:	e003      	b.n	9000fef6 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
9000feee:	1e6b      	subs	r3, r5, #1
9000fef0:	b2da      	uxtb	r2, r3
9000fef2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fef4:	b14a      	cbz	r2, 9000ff0a <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fef6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fef8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fefa:	b133      	cbz	r3, 9000ff0a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fefc:	f000 ff32 	bl	90010d64 <xTaskRemoveFromEventList>
9000ff00:	2800      	cmp	r0, #0
9000ff02:	d0f4      	beq.n	9000feee <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
9000ff04:	f000 ffcc 	bl	90010ea0 <vTaskMissedYield>
9000ff08:	e7f1      	b.n	9000feee <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
9000ff0a:	23ff      	movs	r3, #255	; 0xff
9000ff0c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000ff10:	f7fe ff92 	bl	9000ee38 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000ff14:	f000 fe02 	bl	90010b1c <xTaskResumeAll>
9000ff18:	2800      	cmp	r0, #0
9000ff1a:	d18f      	bne.n	9000fe3c <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
9000ff1c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ff20:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ff24:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ff28:	f3bf 8f4f 	dsb	sy
9000ff2c:	f3bf 8f6f 	isb	sy
9000ff30:	e784      	b.n	9000fe3c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000ff32:	f7fe ff81 	bl	9000ee38 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000ff36:	b92f      	cbnz	r7, 9000ff44 <xQueueSemaphoreTake+0x28c>
}
9000ff38:	4638      	mov	r0, r7
9000ff3a:	b004      	add	sp, #16
9000ff3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000ff40:	4607      	mov	r7, r0
9000ff42:	e6d1      	b.n	9000fce8 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000ff44:	f7fe ff56 	bl	9000edf4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000ff48:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ff4a:	b119      	cbz	r1, 9000ff54 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000ff4c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000ff4e:	6819      	ldr	r1, [r3, #0]
9000ff50:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000ff54:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
9000ff56:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000ff58:	f001 f84a 	bl	90010ff0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000ff5c:	f7fe ff6c 	bl	9000ee38 <vPortExitCritical>
9000ff60:	e7ea      	b.n	9000ff38 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
9000ff62:	f7fe ff47 	bl	9000edf4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000ff66:	68a0      	ldr	r0, [r4, #8]
9000ff68:	f000 ffb6 	bl	90010ed8 <xTaskPriorityInherit>
9000ff6c:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000ff6e:	f7fe ff63 	bl	9000ee38 <vPortExitCritical>
9000ff72:	e793      	b.n	9000fe9c <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000ff74:	2f00      	cmp	r7, #0
9000ff76:	d0f1      	beq.n	9000ff5c <xQueueSemaphoreTake+0x2a4>
9000ff78:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ff7c:	f383 8811 	msr	BASEPRI, r3
9000ff80:	f3bf 8f6f 	isb	sy
9000ff84:	f3bf 8f4f 	dsb	sy
9000ff88:	e7fe      	b.n	9000ff88 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000ff8a:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ff8c:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000ff8e:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ff90:	b12a      	cbz	r2, 9000ff9e <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ff92:	6923      	ldr	r3, [r4, #16]
9000ff94:	b93b      	cbnz	r3, 9000ffa6 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
9000ff96:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
9000ff98:	f7fe ff4e 	bl	9000ee38 <vPortExitCritical>
				return pdPASS;
9000ff9c:	e7cc      	b.n	9000ff38 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000ff9e:	f001 f87b 	bl	90011098 <pvTaskIncrementMutexHeldCount>
9000ffa2:	60a0      	str	r0, [r4, #8]
9000ffa4:	e7f5      	b.n	9000ff92 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ffa6:	f104 0010 	add.w	r0, r4, #16
9000ffaa:	f000 fedb 	bl	90010d64 <xTaskRemoveFromEventList>
9000ffae:	2800      	cmp	r0, #0
9000ffb0:	d0f1      	beq.n	9000ff96 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
9000ffb2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ffb6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ffba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ffbe:	f3bf 8f4f 	dsb	sy
9000ffc2:	f3bf 8f6f 	isb	sy
9000ffc6:	e7e6      	b.n	9000ff96 <xQueueSemaphoreTake+0x2de>

9000ffc8 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
9000ffc8:	b1a8      	cbz	r0, 9000fff6 <xQueueTakeMutexRecursive+0x2e>
	{
9000ffca:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000ffcc:	6886      	ldr	r6, [r0, #8]
9000ffce:	4604      	mov	r4, r0
9000ffd0:	460d      	mov	r5, r1
9000ffd2:	f000 ff6b 	bl	90010eac <xTaskGetCurrentTaskHandle>
9000ffd6:	4286      	cmp	r6, r0
9000ffd8:	d008      	beq.n	9000ffec <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
9000ffda:	4629      	mov	r1, r5
9000ffdc:	4620      	mov	r0, r4
9000ffde:	f7ff fe6b 	bl	9000fcb8 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
9000ffe2:	b110      	cbz	r0, 9000ffea <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000ffe4:	68e3      	ldr	r3, [r4, #12]
9000ffe6:	3301      	adds	r3, #1
9000ffe8:	60e3      	str	r3, [r4, #12]
	}
9000ffea:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000ffec:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
9000ffee:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000fff0:	4403      	add	r3, r0
9000fff2:	60e3      	str	r3, [r4, #12]
	}
9000fff4:	bd70      	pop	{r4, r5, r6, pc}
9000fff6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fffa:	f383 8811 	msr	BASEPRI, r3
9000fffe:	f3bf 8f6f 	isb	sy
90010002:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
90010006:	e7fe      	b.n	90010006 <xQueueTakeMutexRecursive+0x3e>

90010008 <xQueueReceiveFromISR>:
{
90010008:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9001000c:	b310      	cbz	r0, 90010054 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001000e:	460e      	mov	r6, r1
90010010:	4604      	mov	r4, r0
90010012:	4617      	mov	r7, r2
90010014:	b191      	cbz	r1, 9001003c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90010016:	f7ff f81f 	bl	9000f058 <vPortValidateInterruptPriority>
	__asm volatile
9001001a:	f3ef 8911 	mrs	r9, BASEPRI
9001001e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010022:	f383 8811 	msr	BASEPRI, r3
90010026:	f3bf 8f6f 	isb	sy
9001002a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001002e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010030:	b9cd      	cbnz	r5, 90010066 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
90010032:	4628      	mov	r0, r5
	__asm volatile
90010034:	f389 8811 	msr	BASEPRI, r9
}
90010038:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001003c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9001003e:	2b00      	cmp	r3, #0
90010040:	d0e9      	beq.n	90010016 <xQueueReceiveFromISR+0xe>
	__asm volatile
90010042:	f04f 0350 	mov.w	r3, #80	; 0x50
90010046:	f383 8811 	msr	BASEPRI, r3
9001004a:	f3bf 8f6f 	isb	sy
9001004e:	f3bf 8f4f 	dsb	sy
90010052:	e7fe      	b.n	90010052 <xQueueReceiveFromISR+0x4a>
90010054:	f04f 0350 	mov.w	r3, #80	; 0x50
90010058:	f383 8811 	msr	BASEPRI, r3
9001005c:	f3bf 8f6f 	isb	sy
90010060:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010064:	e7fe      	b.n	90010064 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
90010066:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9001006a:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9001006c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010070:	b142      	cbz	r2, 90010084 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010072:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010074:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010076:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010078:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001007a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9001007c:	d215      	bcs.n	900100aa <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9001007e:	4630      	mov	r0, r6
90010080:	f018 fb6e 	bl	90028760 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010084:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
90010086:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9001008a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9001008c:	d009      	beq.n	900100a2 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9001008e:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
90010092:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
90010094:	b25b      	sxtb	r3, r3
90010096:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
9001009a:	f389 8811 	msr	BASEPRI, r9
}
9001009e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900100a2:	6923      	ldr	r3, [r4, #16]
900100a4:	b923      	cbnz	r3, 900100b0 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
900100a6:	2001      	movs	r0, #1
900100a8:	e7c4      	b.n	90010034 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
900100aa:	6821      	ldr	r1, [r4, #0]
900100ac:	60e1      	str	r1, [r4, #12]
900100ae:	e7e6      	b.n	9001007e <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900100b0:	f104 0010 	add.w	r0, r4, #16
900100b4:	f000 fe56 	bl	90010d64 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
900100b8:	2f00      	cmp	r7, #0
900100ba:	d0f4      	beq.n	900100a6 <xQueueReceiveFromISR+0x9e>
900100bc:	2800      	cmp	r0, #0
900100be:	d0f2      	beq.n	900100a6 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
900100c0:	2301      	movs	r3, #1
			xReturn = pdPASS;
900100c2:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
900100c4:	603b      	str	r3, [r7, #0]
900100c6:	e7b5      	b.n	90010034 <xQueueReceiveFromISR+0x2c>

900100c8 <vQueueDelete>:
	configASSERT( pxQueue );
900100c8:	b1e0      	cbz	r0, 90010104 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
900100ca:	4b21      	ldr	r3, [pc, #132]	; (90010150 <vQueueDelete+0x88>)
900100cc:	685a      	ldr	r2, [r3, #4]
900100ce:	4290      	cmp	r0, r2
900100d0:	d02b      	beq.n	9001012a <vQueueDelete+0x62>
900100d2:	68da      	ldr	r2, [r3, #12]
900100d4:	4290      	cmp	r0, r2
900100d6:	d02a      	beq.n	9001012e <vQueueDelete+0x66>
900100d8:	695a      	ldr	r2, [r3, #20]
900100da:	4290      	cmp	r0, r2
900100dc:	d029      	beq.n	90010132 <vQueueDelete+0x6a>
900100de:	69da      	ldr	r2, [r3, #28]
900100e0:	4290      	cmp	r0, r2
900100e2:	d028      	beq.n	90010136 <vQueueDelete+0x6e>
900100e4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
900100e6:	4290      	cmp	r0, r2
900100e8:	d027      	beq.n	9001013a <vQueueDelete+0x72>
900100ea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900100ec:	4290      	cmp	r0, r2
900100ee:	d014      	beq.n	9001011a <vQueueDelete+0x52>
900100f0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900100f2:	4290      	cmp	r0, r2
900100f4:	d023      	beq.n	9001013e <vQueueDelete+0x76>
900100f6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
900100f8:	4290      	cmp	r0, r2
900100fa:	d022      	beq.n	90010142 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
900100fc:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
90010100:	b14b      	cbz	r3, 90010116 <vQueueDelete+0x4e>
}
90010102:	4770      	bx	lr
	__asm volatile
90010104:	f04f 0350 	mov.w	r3, #80	; 0x50
90010108:	f383 8811 	msr	BASEPRI, r3
9001010c:	f3bf 8f6f 	isb	sy
90010110:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010114:	e7fe      	b.n	90010114 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
90010116:	f7fe bd55 	b.w	9000ebc4 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9001011a:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9001011c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
90010120:	ed9f 7b09 	vldr	d7, [pc, #36]	; 90010148 <vQueueDelete+0x80>
90010124:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
90010128:	e7e8      	b.n	900100fc <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9001012a:	2200      	movs	r2, #0
9001012c:	e7f6      	b.n	9001011c <vQueueDelete+0x54>
9001012e:	2201      	movs	r2, #1
90010130:	e7f4      	b.n	9001011c <vQueueDelete+0x54>
90010132:	2202      	movs	r2, #2
90010134:	e7f2      	b.n	9001011c <vQueueDelete+0x54>
90010136:	2203      	movs	r2, #3
90010138:	e7f0      	b.n	9001011c <vQueueDelete+0x54>
9001013a:	2204      	movs	r2, #4
9001013c:	e7ee      	b.n	9001011c <vQueueDelete+0x54>
9001013e:	2206      	movs	r2, #6
90010140:	e7ec      	b.n	9001011c <vQueueDelete+0x54>
90010142:	2207      	movs	r2, #7
90010144:	e7ea      	b.n	9001011c <vQueueDelete+0x54>
90010146:	bf00      	nop
	...
90010150:	24039228 	.word	0x24039228

90010154 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
90010154:	4b12      	ldr	r3, [pc, #72]	; (900101a0 <vQueueAddToRegistry+0x4c>)
90010156:	681a      	ldr	r2, [r3, #0]
90010158:	b17a      	cbz	r2, 9001017a <vQueueAddToRegistry+0x26>
9001015a:	689a      	ldr	r2, [r3, #8]
9001015c:	b162      	cbz	r2, 90010178 <vQueueAddToRegistry+0x24>
9001015e:	691a      	ldr	r2, [r3, #16]
90010160:	b192      	cbz	r2, 90010188 <vQueueAddToRegistry+0x34>
90010162:	699a      	ldr	r2, [r3, #24]
90010164:	b192      	cbz	r2, 9001018c <vQueueAddToRegistry+0x38>
90010166:	6a1a      	ldr	r2, [r3, #32]
90010168:	b192      	cbz	r2, 90010190 <vQueueAddToRegistry+0x3c>
9001016a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
9001016c:	b192      	cbz	r2, 90010194 <vQueueAddToRegistry+0x40>
9001016e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90010170:	b192      	cbz	r2, 90010198 <vQueueAddToRegistry+0x44>
90010172:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90010174:	b192      	cbz	r2, 9001019c <vQueueAddToRegistry+0x48>
	}
90010176:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90010178:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9001017a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9001017e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
90010182:	f8cc 0004 	str.w	r0, [ip, #4]
	}
90010186:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90010188:	2202      	movs	r2, #2
9001018a:	e7f6      	b.n	9001017a <vQueueAddToRegistry+0x26>
9001018c:	2203      	movs	r2, #3
9001018e:	e7f4      	b.n	9001017a <vQueueAddToRegistry+0x26>
90010190:	2204      	movs	r2, #4
90010192:	e7f2      	b.n	9001017a <vQueueAddToRegistry+0x26>
90010194:	2205      	movs	r2, #5
90010196:	e7f0      	b.n	9001017a <vQueueAddToRegistry+0x26>
90010198:	2206      	movs	r2, #6
9001019a:	e7ee      	b.n	9001017a <vQueueAddToRegistry+0x26>
9001019c:	2207      	movs	r2, #7
9001019e:	e7ec      	b.n	9001017a <vQueueAddToRegistry+0x26>
900101a0:	24039228 	.word	0x24039228

900101a4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
900101a4:	b570      	push	{r4, r5, r6, lr}
900101a6:	4605      	mov	r5, r0
900101a8:	460e      	mov	r6, r1
900101aa:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
900101ac:	f7fe fe22 	bl	9000edf4 <vPortEnterCritical>
900101b0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
900101b4:	2bff      	cmp	r3, #255	; 0xff
900101b6:	d102      	bne.n	900101be <vQueueWaitForMessageRestricted+0x1a>
900101b8:	2300      	movs	r3, #0
900101ba:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
900101be:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
900101c2:	2bff      	cmp	r3, #255	; 0xff
900101c4:	d102      	bne.n	900101cc <vQueueWaitForMessageRestricted+0x28>
900101c6:	2300      	movs	r3, #0
900101c8:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
900101cc:	f7fe fe34 	bl	9000ee38 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
900101d0:	6bab      	ldr	r3, [r5, #56]	; 0x38
900101d2:	2b00      	cmp	r3, #0
900101d4:	d043      	beq.n	9001025e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
900101d6:	f7fe fe0d 	bl	9000edf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900101da:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
900101de:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900101e0:	2c00      	cmp	r4, #0
900101e2:	dd14      	ble.n	9001020e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900101e4:	f105 0624 	add.w	r6, r5, #36	; 0x24
900101e8:	e003      	b.n	900101f2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
900101ea:	1e63      	subs	r3, r4, #1
900101ec:	b2da      	uxtb	r2, r3
900101ee:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900101f0:	b16a      	cbz	r2, 9001020e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900101f2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900101f4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900101f6:	b153      	cbz	r3, 9001020e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900101f8:	f000 fdb4 	bl	90010d64 <xTaskRemoveFromEventList>
900101fc:	2800      	cmp	r0, #0
900101fe:	d0f4      	beq.n	900101ea <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
90010200:	f000 fe4e 	bl	90010ea0 <vTaskMissedYield>
			--cTxLock;
90010204:	1e63      	subs	r3, r4, #1
90010206:	b2da      	uxtb	r2, r3
90010208:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001020a:	2a00      	cmp	r2, #0
9001020c:	d1f1      	bne.n	900101f2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9001020e:	23ff      	movs	r3, #255	; 0xff
90010210:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
90010214:	f7fe fe10 	bl	9000ee38 <vPortExitCritical>
	taskENTER_CRITICAL();
90010218:	f7fe fdec 	bl	9000edf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001021c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
90010220:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010222:	2c00      	cmp	r4, #0
90010224:	dd14      	ble.n	90010250 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010226:	f105 0610 	add.w	r6, r5, #16
9001022a:	e003      	b.n	90010234 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9001022c:	1e63      	subs	r3, r4, #1
9001022e:	b2da      	uxtb	r2, r3
90010230:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010232:	b16a      	cbz	r2, 90010250 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010234:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010236:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010238:	b153      	cbz	r3, 90010250 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001023a:	f000 fd93 	bl	90010d64 <xTaskRemoveFromEventList>
9001023e:	2800      	cmp	r0, #0
90010240:	d0f4      	beq.n	9001022c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
90010242:	f000 fe2d 	bl	90010ea0 <vTaskMissedYield>
				--cRxLock;
90010246:	1e63      	subs	r3, r4, #1
90010248:	b2da      	uxtb	r2, r3
9001024a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001024c:	2a00      	cmp	r2, #0
9001024e:	d1f1      	bne.n	90010234 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
90010250:	23ff      	movs	r3, #255	; 0xff
90010252:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
90010256:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9001025a:	f7fe bded 	b.w	9000ee38 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9001025e:	4622      	mov	r2, r4
90010260:	4631      	mov	r1, r6
90010262:	f105 0024 	add.w	r0, r5, #36	; 0x24
90010266:	f000 fd33 	bl	90010cd0 <vTaskPlaceOnEventListRestricted>
9001026a:	e7b4      	b.n	900101d6 <vQueueWaitForMessageRestricted+0x32>

9001026c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9001026c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90010270:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
90010272:	f7fe fdbf 	bl	9000edf4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
90010276:	4a34      	ldr	r2, [pc, #208]	; (90010348 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
90010278:	4e34      	ldr	r6, [pc, #208]	; (9001034c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9001027a:	6813      	ldr	r3, [r2, #0]
9001027c:	3301      	adds	r3, #1
9001027e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
90010280:	6833      	ldr	r3, [r6, #0]
90010282:	2b00      	cmp	r3, #0
90010284:	d032      	beq.n	900102ec <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
90010286:	4c32      	ldr	r4, [pc, #200]	; (90010350 <prvAddNewTaskToReadyList+0xe4>)
90010288:	6823      	ldr	r3, [r4, #0]
9001028a:	b33b      	cbz	r3, 900102dc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9001028c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9001028e:	4f31      	ldr	r7, [pc, #196]	; (90010354 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
90010290:	4a31      	ldr	r2, [pc, #196]	; (90010358 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
90010292:	4932      	ldr	r1, [pc, #200]	; (9001035c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
90010294:	6813      	ldr	r3, [r2, #0]
90010296:	3301      	adds	r3, #1
90010298:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9001029a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
9001029c:	680b      	ldr	r3, [r1, #0]
9001029e:	4283      	cmp	r3, r0
900102a0:	d200      	bcs.n	900102a4 <prvAddNewTaskToReadyList+0x38>
900102a2:	6008      	str	r0, [r1, #0]
900102a4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900102a8:	1d29      	adds	r1, r5, #4
900102aa:	eb07 0080 	add.w	r0, r7, r0, lsl #2
900102ae:	f7fe fcfd 	bl	9000ecac <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
900102b2:	f7fe fdc1 	bl	9000ee38 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
900102b6:	6823      	ldr	r3, [r4, #0]
900102b8:	b173      	cbz	r3, 900102d8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
900102ba:	6832      	ldr	r2, [r6, #0]
900102bc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900102be:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900102c0:	429a      	cmp	r2, r3
900102c2:	d209      	bcs.n	900102d8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
900102c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900102c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900102cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
900102d0:	f3bf 8f4f 	dsb	sy
900102d4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
900102d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
900102dc:	6833      	ldr	r3, [r6, #0]
900102de:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
900102e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900102e2:	4f1c      	ldr	r7, [pc, #112]	; (90010354 <prvAddNewTaskToReadyList+0xe8>)
900102e4:	4283      	cmp	r3, r0
900102e6:	d8d3      	bhi.n	90010290 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
900102e8:	6035      	str	r5, [r6, #0]
900102ea:	e7d1      	b.n	90010290 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
900102ec:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
900102ee:	6813      	ldr	r3, [r2, #0]
900102f0:	2b01      	cmp	r3, #1
900102f2:	d003      	beq.n	900102fc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
900102f4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
900102f6:	4f17      	ldr	r7, [pc, #92]	; (90010354 <prvAddNewTaskToReadyList+0xe8>)
900102f8:	4c15      	ldr	r4, [pc, #84]	; (90010350 <prvAddNewTaskToReadyList+0xe4>)
900102fa:	e7c9      	b.n	90010290 <prvAddNewTaskToReadyList+0x24>
900102fc:	4f15      	ldr	r7, [pc, #84]	; (90010354 <prvAddNewTaskToReadyList+0xe8>)
900102fe:	463c      	mov	r4, r7
90010300:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90010304:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90010306:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90010308:	f7fe fcc0 	bl	9000ec8c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9001030c:	45a0      	cmp	r8, r4
9001030e:	d1f9      	bne.n	90010304 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
90010310:	f8df 9060 	ldr.w	r9, [pc, #96]	; 90010374 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
90010314:	f8df 8060 	ldr.w	r8, [pc, #96]	; 90010378 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
90010318:	4648      	mov	r0, r9
9001031a:	4c0d      	ldr	r4, [pc, #52]	; (90010350 <prvAddNewTaskToReadyList+0xe4>)
9001031c:	f7fe fcb6 	bl	9000ec8c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
90010320:	4640      	mov	r0, r8
90010322:	f7fe fcb3 	bl	9000ec8c <vListInitialise>
	vListInitialise( &xPendingReadyList );
90010326:	480e      	ldr	r0, [pc, #56]	; (90010360 <prvAddNewTaskToReadyList+0xf4>)
90010328:	f7fe fcb0 	bl	9000ec8c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9001032c:	480d      	ldr	r0, [pc, #52]	; (90010364 <prvAddNewTaskToReadyList+0xf8>)
9001032e:	f7fe fcad 	bl	9000ec8c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
90010332:	480d      	ldr	r0, [pc, #52]	; (90010368 <prvAddNewTaskToReadyList+0xfc>)
90010334:	f7fe fcaa 	bl	9000ec8c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
90010338:	4b0c      	ldr	r3, [pc, #48]	; (9001036c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9001033a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9001033c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
90010340:	4b0b      	ldr	r3, [pc, #44]	; (90010370 <prvAddNewTaskToReadyList+0x104>)
90010342:	f8c3 8000 	str.w	r8, [r3]
}
90010346:	e7a3      	b.n	90010290 <prvAddNewTaskToReadyList+0x24>
90010348:	240396d4 	.word	0x240396d4
9001034c:	24039268 	.word	0x24039268
90010350:	24039730 	.word	0x24039730
90010354:	24039274 	.word	0x24039274
90010358:	240396e0 	.word	0x240396e0
9001035c:	240396e4 	.word	0x240396e4
90010360:	2403971c 	.word	0x2403971c
90010364:	24039748 	.word	0x24039748
90010368:	24039734 	.word	0x24039734
9001036c:	2403926c 	.word	0x2403926c
90010370:	24039270 	.word	0x24039270
90010374:	240396e8 	.word	0x240396e8
90010378:	240396fc 	.word	0x240396fc

9001037c <prvIdleTask>:
{
9001037c:	b580      	push	{r7, lr}
9001037e:	4c22      	ldr	r4, [pc, #136]	; (90010408 <prvIdleTask+0x8c>)
				taskYIELD();
90010380:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
90010384:	4e21      	ldr	r6, [pc, #132]	; (9001040c <prvIdleTask+0x90>)
90010386:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
9001038a:	4d21      	ldr	r5, [pc, #132]	; (90010410 <prvIdleTask+0x94>)
9001038c:	4f21      	ldr	r7, [pc, #132]	; (90010414 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9001038e:	6823      	ldr	r3, [r4, #0]
90010390:	b353      	cbz	r3, 900103e8 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
90010392:	f7fe fd2f 	bl	9000edf4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010396:	68f3      	ldr	r3, [r6, #12]
90010398:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9001039c:	f10a 0004 	add.w	r0, sl, #4
900103a0:	f7fe fcac 	bl	9000ecfc <uxListRemove>
				--uxCurrentNumberOfTasks;
900103a4:	682b      	ldr	r3, [r5, #0]
900103a6:	3b01      	subs	r3, #1
900103a8:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
900103aa:	6823      	ldr	r3, [r4, #0]
900103ac:	3b01      	subs	r3, #1
900103ae:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
900103b0:	f7fe fd42 	bl	9000ee38 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
900103b4:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
900103b8:	b163      	cbz	r3, 900103d4 <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
900103ba:	2b01      	cmp	r3, #1
900103bc:	d020      	beq.n	90010400 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
900103be:	2b02      	cmp	r3, #2
900103c0:	d0e5      	beq.n	9001038e <prvIdleTask+0x12>
900103c2:	f04f 0350 	mov.w	r3, #80	; 0x50
900103c6:	f383 8811 	msr	BASEPRI, r3
900103ca:	f3bf 8f6f 	isb	sy
900103ce:	f3bf 8f4f 	dsb	sy
900103d2:	e7fe      	b.n	900103d2 <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
900103d4:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
900103d8:	f7fe fbf4 	bl	9000ebc4 <vPortFree>
				vPortFree( pxTCB );
900103dc:	4650      	mov	r0, sl
900103de:	f7fe fbf1 	bl	9000ebc4 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
900103e2:	6823      	ldr	r3, [r4, #0]
900103e4:	2b00      	cmp	r3, #0
900103e6:	d1d4      	bne.n	90010392 <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
900103e8:	683b      	ldr	r3, [r7, #0]
900103ea:	2b01      	cmp	r3, #1
900103ec:	d905      	bls.n	900103fa <prvIdleTask+0x7e>
				taskYIELD();
900103ee:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
900103f2:	f3bf 8f4f 	dsb	sy
900103f6:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
900103fa:	f7f2 facd 	bl	90002998 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
900103fe:	e7c6      	b.n	9001038e <prvIdleTask+0x12>
				vPortFree( pxTCB );
90010400:	4650      	mov	r0, sl
90010402:	f7fe fbdf 	bl	9000ebc4 <vPortFree>
90010406:	e7c2      	b.n	9001038e <prvIdleTask+0x12>
90010408:	240396d8 	.word	0x240396d8
9001040c:	24039748 	.word	0x24039748
90010410:	240396d4 	.word	0x240396d4
90010414:	24039274 	.word	0x24039274

90010418 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90010418:	4b4a      	ldr	r3, [pc, #296]	; (90010544 <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
9001041a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9001041e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
90010420:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90010422:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
90010424:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
90010426:	2e00      	cmp	r6, #0
90010428:	d040      	beq.n	900104ac <xTaskIncrementTick.part.0+0x94>
9001042a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 90010558 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
9001042e:	f8db 3000 	ldr.w	r3, [fp]
90010432:	429e      	cmp	r6, r3
90010434:	d347      	bcc.n	900104c6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010436:	4f44      	ldr	r7, [pc, #272]	; (90010548 <xTaskIncrementTick.part.0+0x130>)
90010438:	683b      	ldr	r3, [r7, #0]
9001043a:	681d      	ldr	r5, [r3, #0]
9001043c:	2d00      	cmp	r5, #0
9001043e:	d077      	beq.n	90010530 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
90010440:	2500      	movs	r5, #0
90010442:	f8df 9118 	ldr.w	r9, [pc, #280]	; 9001055c <xTaskIncrementTick.part.0+0x144>
90010446:	f8df a118 	ldr.w	sl, [pc, #280]	; 90010560 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
9001044a:	f8df 8118 	ldr.w	r8, [pc, #280]	; 90010564 <xTaskIncrementTick.part.0+0x14c>
9001044e:	e022      	b.n	90010496 <xTaskIncrementTick.part.0+0x7e>
90010450:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010452:	f7fe fc53 	bl	9000ecfc <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90010456:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010458:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9001045c:	9901      	ldr	r1, [sp, #4]
9001045e:	b113      	cbz	r3, 90010466 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010460:	f7fe fc4c 	bl	9000ecfc <uxListRemove>
90010464:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
90010466:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90010468:	f8d8 2000 	ldr.w	r2, [r8]
9001046c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90010470:	4293      	cmp	r3, r2
90010472:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90010476:	d901      	bls.n	9001047c <xTaskIncrementTick.part.0+0x64>
90010478:	f8c8 3000 	str.w	r3, [r8]
9001047c:	f7fe fc16 	bl	9000ecac <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90010480:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010484:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90010486:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90010488:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001048a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9001048c:	4291      	cmp	r1, r2
9001048e:	bf28      	it	cs
90010490:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010492:	2b00      	cmp	r3, #0
90010494:	d050      	beq.n	90010538 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010496:	683b      	ldr	r3, [r7, #0]
90010498:	68db      	ldr	r3, [r3, #12]
9001049a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9001049c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9001049e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
900104a0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900104a2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
900104a4:	d2d4      	bcs.n	90010450 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
900104a6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
900104aa:	e011      	b.n	900104d0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
900104ac:	4b26      	ldr	r3, [pc, #152]	; (90010548 <xTaskIncrementTick.part.0+0x130>)
900104ae:	681a      	ldr	r2, [r3, #0]
900104b0:	6812      	ldr	r2, [r2, #0]
900104b2:	b30a      	cbz	r2, 900104f8 <xTaskIncrementTick.part.0+0xe0>
900104b4:	f04f 0350 	mov.w	r3, #80	; 0x50
900104b8:	f383 8811 	msr	BASEPRI, r3
900104bc:	f3bf 8f6f 	isb	sy
900104c0:	f3bf 8f4f 	dsb	sy
900104c4:	e7fe      	b.n	900104c4 <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
900104c6:	2500      	movs	r5, #0
900104c8:	f8df 9090 	ldr.w	r9, [pc, #144]	; 9001055c <xTaskIncrementTick.part.0+0x144>
900104cc:	f8df a090 	ldr.w	sl, [pc, #144]	; 90010560 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
900104d0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
900104d4:	491d      	ldr	r1, [pc, #116]	; (9001054c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
900104d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900104d8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900104dc:	009b      	lsls	r3, r3, #2
900104de:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
900104e2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
900104e4:	2a02      	cmp	r2, #2
900104e6:	bf28      	it	cs
900104e8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
900104ea:	2b00      	cmp	r3, #0
}
900104ec:	bf0c      	ite	eq
900104ee:	4628      	moveq	r0, r5
900104f0:	2001      	movne	r0, #1
900104f2:	b003      	add	sp, #12
900104f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
900104f8:	4a15      	ldr	r2, [pc, #84]	; (90010550 <xTaskIncrementTick.part.0+0x138>)
900104fa:	6818      	ldr	r0, [r3, #0]
900104fc:	6811      	ldr	r1, [r2, #0]
900104fe:	6019      	str	r1, [r3, #0]
90010500:	4914      	ldr	r1, [pc, #80]	; (90010554 <xTaskIncrementTick.part.0+0x13c>)
90010502:	6010      	str	r0, [r2, #0]
90010504:	680a      	ldr	r2, [r1, #0]
90010506:	3201      	adds	r2, #1
90010508:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001050a:	681a      	ldr	r2, [r3, #0]
9001050c:	6812      	ldr	r2, [r2, #0]
9001050e:	b932      	cbnz	r2, 9001051e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
90010510:	f8df b044 	ldr.w	fp, [pc, #68]	; 90010558 <xTaskIncrementTick.part.0+0x140>
90010514:	f04f 33ff 	mov.w	r3, #4294967295
90010518:	f8cb 3000 	str.w	r3, [fp]
9001051c:	e787      	b.n	9001042e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001051e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010520:	f8df b034 	ldr.w	fp, [pc, #52]	; 90010558 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010524:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010526:	68db      	ldr	r3, [r3, #12]
90010528:	685b      	ldr	r3, [r3, #4]
9001052a:	f8cb 3000 	str.w	r3, [fp]
	}
}
9001052e:	e77e      	b.n	9001042e <xTaskIncrementTick.part.0+0x16>
90010530:	f8df 9028 	ldr.w	r9, [pc, #40]	; 9001055c <xTaskIncrementTick.part.0+0x144>
90010534:	f8df a028 	ldr.w	sl, [pc, #40]	; 90010560 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010538:	f04f 33ff 	mov.w	r3, #4294967295
9001053c:	f8cb 3000 	str.w	r3, [fp]
					break;
90010540:	e7c6      	b.n	900104d0 <xTaskIncrementTick.part.0+0xb8>
90010542:	bf00      	nop
90010544:	2403975c 	.word	0x2403975c
90010548:	2403926c 	.word	0x2403926c
9001054c:	24039760 	.word	0x24039760
90010550:	24039270 	.word	0x24039270
90010554:	24039714 	.word	0x24039714
90010558:	24039710 	.word	0x24039710
9001055c:	24039274 	.word	0x24039274
90010560:	24039268 	.word	0x24039268
90010564:	240396e4 	.word	0x240396e4

90010568 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
90010568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9001056c:	4d41      	ldr	r5, [pc, #260]	; (90010674 <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
9001056e:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
90010570:	f7fe fc40 	bl	9000edf4 <vPortEnterCritical>
		--uxSchedulerSuspended;
90010574:	682b      	ldr	r3, [r5, #0]
90010576:	3b01      	subs	r3, #1
90010578:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001057a:	682b      	ldr	r3, [r5, #0]
9001057c:	2b00      	cmp	r3, #0
9001057e:	d161      	bne.n	90010644 <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
90010580:	4b3d      	ldr	r3, [pc, #244]	; (90010678 <xTaskResumeAll.part.0+0x110>)
90010582:	681b      	ldr	r3, [r3, #0]
90010584:	2b00      	cmp	r3, #0
90010586:	d05d      	beq.n	90010644 <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90010588:	4e3c      	ldr	r6, [pc, #240]	; (9001067c <xTaskResumeAll.part.0+0x114>)
9001058a:	6833      	ldr	r3, [r6, #0]
9001058c:	2b00      	cmp	r3, #0
9001058e:	d06e      	beq.n	9001066e <xTaskResumeAll.part.0+0x106>
90010590:	4f3b      	ldr	r7, [pc, #236]	; (90010680 <xTaskResumeAll.part.0+0x118>)
90010592:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 90010690 <xTaskResumeAll.part.0+0x128>
90010596:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 90010694 <xTaskResumeAll.part.0+0x12c>
9001059a:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 90010698 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001059e:	68f3      	ldr	r3, [r6, #12]
900105a0:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900105a2:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900105a6:	f104 0018 	add.w	r0, r4, #24
900105aa:	f7fe fba7 	bl	9000ecfc <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900105ae:	4658      	mov	r0, fp
900105b0:	f7fe fba4 	bl	9000ecfc <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
900105b4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900105b6:	683a      	ldr	r2, [r7, #0]
900105b8:	4659      	mov	r1, fp
900105ba:	eb03 0083 	add.w	r0, r3, r3, lsl #2
900105be:	4293      	cmp	r3, r2
900105c0:	eb09 0080 	add.w	r0, r9, r0, lsl #2
900105c4:	d900      	bls.n	900105c8 <xTaskResumeAll.part.0+0x60>
900105c6:	603b      	str	r3, [r7, #0]
900105c8:	f7fe fb70 	bl	9000ecac <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900105cc:	f8d8 3000 	ldr.w	r3, [r8]
900105d0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900105d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900105d4:	429a      	cmp	r2, r3
900105d6:	d33d      	bcc.n	90010654 <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
900105d8:	2301      	movs	r3, #1
900105da:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900105de:	6833      	ldr	r3, [r6, #0]
900105e0:	2b00      	cmp	r3, #0
900105e2:	d1dc      	bne.n	9001059e <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900105e4:	4b27      	ldr	r3, [pc, #156]	; (90010684 <xTaskResumeAll.part.0+0x11c>)
900105e6:	681a      	ldr	r2, [r3, #0]
900105e8:	6812      	ldr	r2, [r2, #0]
900105ea:	2a00      	cmp	r2, #0
900105ec:	d03a      	beq.n	90010664 <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900105ee:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900105f0:	4b25      	ldr	r3, [pc, #148]	; (90010688 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900105f2:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900105f4:	68d2      	ldr	r2, [r2, #12]
900105f6:	6852      	ldr	r2, [r2, #4]
900105f8:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
900105fa:	4e24      	ldr	r6, [pc, #144]	; (9001068c <xTaskResumeAll.part.0+0x124>)
900105fc:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
900105fe:	b194      	cbz	r4, 90010626 <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
90010600:	2701      	movs	r7, #1
90010602:	e006      	b.n	90010612 <xTaskResumeAll.part.0+0xaa>
90010604:	f7ff ff08 	bl	90010418 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90010608:	b108      	cbz	r0, 9001060e <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
9001060a:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001060e:	3c01      	subs	r4, #1
90010610:	d008      	beq.n	90010624 <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010612:	682b      	ldr	r3, [r5, #0]
90010614:	2b00      	cmp	r3, #0
90010616:	d0f5      	beq.n	90010604 <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
90010618:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001061a:	3c01      	subs	r4, #1
		++xPendedTicks;
9001061c:	f103 0301 	add.w	r3, r3, #1
90010620:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90010622:	d1f6      	bne.n	90010612 <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
90010624:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
90010626:	f8da 3000 	ldr.w	r3, [sl]
9001062a:	b15b      	cbz	r3, 90010644 <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
9001062c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010630:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010634:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010638:	f3bf 8f4f 	dsb	sy
9001063c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
90010640:	2001      	movs	r0, #1
90010642:	e000      	b.n	90010646 <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
90010644:	2000      	movs	r0, #0
90010646:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90010648:	f7fe fbf6 	bl	9000ee38 <vPortExitCritical>
}
9001064c:	9801      	ldr	r0, [sp, #4]
9001064e:	b003      	add	sp, #12
90010650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90010654:	6833      	ldr	r3, [r6, #0]
90010656:	2b00      	cmp	r3, #0
90010658:	d1a1      	bne.n	9001059e <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001065a:	4b0a      	ldr	r3, [pc, #40]	; (90010684 <xTaskResumeAll.part.0+0x11c>)
9001065c:	681a      	ldr	r2, [r3, #0]
9001065e:	6812      	ldr	r2, [r2, #0]
90010660:	2a00      	cmp	r2, #0
90010662:	d1c4      	bne.n	900105ee <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
90010664:	4b08      	ldr	r3, [pc, #32]	; (90010688 <xTaskResumeAll.part.0+0x120>)
90010666:	f04f 32ff 	mov.w	r2, #4294967295
9001066a:	601a      	str	r2, [r3, #0]
9001066c:	e7c5      	b.n	900105fa <xTaskResumeAll.part.0+0x92>
9001066e:	f8df a028 	ldr.w	sl, [pc, #40]	; 90010698 <xTaskResumeAll.part.0+0x130>
90010672:	e7c2      	b.n	900105fa <xTaskResumeAll.part.0+0x92>
90010674:	240396dc 	.word	0x240396dc
90010678:	240396d4 	.word	0x240396d4
9001067c:	2403971c 	.word	0x2403971c
90010680:	240396e4 	.word	0x240396e4
90010684:	2403926c 	.word	0x2403926c
90010688:	24039710 	.word	0x24039710
9001068c:	24039718 	.word	0x24039718
90010690:	24039274 	.word	0x24039274
90010694:	24039268 	.word	0x24039268
90010698:	24039760 	.word	0x24039760

9001069c <xTaskCreateStatic>:
	{
9001069c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900106a0:	b083      	sub	sp, #12
900106a2:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
900106a4:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
900106a8:	b1bb      	cbz	r3, 900106da <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
900106aa:	b16c      	cbz	r4, 900106c8 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
900106ac:	2360      	movs	r3, #96	; 0x60
900106ae:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
900106b0:	9b01      	ldr	r3, [sp, #4]
900106b2:	2b60      	cmp	r3, #96	; 0x60
900106b4:	d01a      	beq.n	900106ec <xTaskCreateStatic+0x50>
900106b6:	f04f 0350 	mov.w	r3, #80	; 0x50
900106ba:	f383 8811 	msr	BASEPRI, r3
900106be:	f3bf 8f6f 	isb	sy
900106c2:	f3bf 8f4f 	dsb	sy
900106c6:	e7fe      	b.n	900106c6 <xTaskCreateStatic+0x2a>
900106c8:	f04f 0350 	mov.w	r3, #80	; 0x50
900106cc:	f383 8811 	msr	BASEPRI, r3
900106d0:	f3bf 8f6f 	isb	sy
900106d4:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
900106d8:	e7fe      	b.n	900106d8 <xTaskCreateStatic+0x3c>
900106da:	f04f 0350 	mov.w	r3, #80	; 0x50
900106de:	f383 8811 	msr	BASEPRI, r3
900106e2:	f3bf 8f6f 	isb	sy
900106e6:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
900106ea:	e7fe      	b.n	900106ea <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
900106ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900106ee:	0096      	lsls	r6, r2, #2
900106f0:	4607      	mov	r7, r0
900106f2:	460d      	mov	r5, r1
900106f4:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
900106f6:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
900106f8:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
900106fa:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900106fc:	4632      	mov	r2, r6
900106fe:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010700:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010704:	f017 ff4c 	bl	900285a0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90010708:	1f32      	subs	r2, r6, #4
9001070a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9001070c:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9001070e:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
90010712:	2d00      	cmp	r5, #0
90010714:	d069      	beq.n	900107ea <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010716:	782b      	ldrb	r3, [r5, #0]
90010718:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9001071c:	2b00      	cmp	r3, #0
9001071e:	d03b      	beq.n	90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010720:	786b      	ldrb	r3, [r5, #1]
90010722:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90010726:	2b00      	cmp	r3, #0
90010728:	d036      	beq.n	90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001072a:	78ab      	ldrb	r3, [r5, #2]
9001072c:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90010730:	b393      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010732:	78eb      	ldrb	r3, [r5, #3]
90010734:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90010738:	b373      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001073a:	792b      	ldrb	r3, [r5, #4]
9001073c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90010740:	b353      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010742:	796b      	ldrb	r3, [r5, #5]
90010744:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90010748:	b333      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001074a:	79ab      	ldrb	r3, [r5, #6]
9001074c:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90010750:	b313      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010752:	79eb      	ldrb	r3, [r5, #7]
90010754:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90010758:	b1f3      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001075a:	7a2b      	ldrb	r3, [r5, #8]
9001075c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90010760:	b1d3      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010762:	7a6b      	ldrb	r3, [r5, #9]
90010764:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90010768:	b1b3      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001076a:	7aab      	ldrb	r3, [r5, #10]
9001076c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90010770:	b193      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010772:	7aeb      	ldrb	r3, [r5, #11]
90010774:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90010778:	b173      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001077a:	7b2b      	ldrb	r3, [r5, #12]
9001077c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90010780:	b153      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010782:	7b6b      	ldrb	r3, [r5, #13]
90010784:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90010788:	b133      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001078a:	7bab      	ldrb	r3, [r5, #14]
9001078c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
90010790:	b113      	cbz	r3, 90010798 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010792:	7beb      	ldrb	r3, [r5, #15]
90010794:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90010798:	2300      	movs	r3, #0
9001079a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9001079e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
900107a0:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900107a2:	1d20      	adds	r0, r4, #4
900107a4:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
900107a6:	6526      	str	r6, [r4, #80]	; 0x50
900107a8:	bf28      	it	cs
900107aa:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
900107ac:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
900107ae:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900107b0:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900107b4:	f7fe fa76 	bl	9000eca4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
900107b8:	f104 0018 	add.w	r0, r4, #24
900107bc:	f7fe fa72 	bl	9000eca4 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900107c0:	4642      	mov	r2, r8
900107c2:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
900107c4:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900107c6:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900107c8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
900107ca:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
900107cc:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
900107ce:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
900107d0:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900107d4:	f7fe fae4 	bl	9000eda0 <pxPortInitialiseStack>
900107d8:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
900107da:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900107dc:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
900107de:	f7ff fd45 	bl	9001026c <prvAddNewTaskToReadyList>
	}
900107e2:	4620      	mov	r0, r4
900107e4:	b003      	add	sp, #12
900107e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
900107ea:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
900107ee:	e7d6      	b.n	9001079e <xTaskCreateStatic+0x102>

900107f0 <xTaskCreate>:
	{
900107f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
900107f4:	0096      	lsls	r6, r2, #2
	{
900107f6:	4680      	mov	r8, r0
900107f8:	460d      	mov	r5, r1
900107fa:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
900107fc:	4630      	mov	r0, r6
900107fe:	f7fe f923 	bl	9000ea48 <pvPortMalloc>
			if( pxStack != NULL )
90010802:	2800      	cmp	r0, #0
90010804:	f000 8083 	beq.w	9001090e <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
90010808:	4607      	mov	r7, r0
9001080a:	2060      	movs	r0, #96	; 0x60
9001080c:	f7fe f91c 	bl	9000ea48 <pvPortMalloc>
				if( pxNewTCB != NULL )
90010810:	4604      	mov	r4, r0
90010812:	2800      	cmp	r0, #0
90010814:	d07f      	beq.n	90010916 <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90010816:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
90010818:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001081a:	4632      	mov	r2, r6
9001081c:	4638      	mov	r0, r7
9001081e:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90010820:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010824:	f017 febc 	bl	900285a0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90010828:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
9001082c:	2d00      	cmp	r5, #0
9001082e:	d078      	beq.n	90010922 <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010830:	782b      	ldrb	r3, [r5, #0]
90010832:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90010836:	2b00      	cmp	r3, #0
90010838:	d03b      	beq.n	900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001083a:	786b      	ldrb	r3, [r5, #1]
9001083c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90010840:	2b00      	cmp	r3, #0
90010842:	d036      	beq.n	900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010844:	78ab      	ldrb	r3, [r5, #2]
90010846:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9001084a:	b393      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001084c:	78eb      	ldrb	r3, [r5, #3]
9001084e:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90010852:	b373      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010854:	792b      	ldrb	r3, [r5, #4]
90010856:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9001085a:	b353      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001085c:	796b      	ldrb	r3, [r5, #5]
9001085e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90010862:	b333      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010864:	79ab      	ldrb	r3, [r5, #6]
90010866:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9001086a:	b313      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001086c:	79eb      	ldrb	r3, [r5, #7]
9001086e:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90010872:	b1f3      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010874:	7a2b      	ldrb	r3, [r5, #8]
90010876:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9001087a:	b1d3      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001087c:	7a6b      	ldrb	r3, [r5, #9]
9001087e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90010882:	b1b3      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010884:	7aab      	ldrb	r3, [r5, #10]
90010886:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9001088a:	b193      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001088c:	7aeb      	ldrb	r3, [r5, #11]
9001088e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90010892:	b173      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010894:	7b2b      	ldrb	r3, [r5, #12]
90010896:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9001089a:	b153      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001089c:	7b6b      	ldrb	r3, [r5, #13]
9001089e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
900108a2:	b133      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900108a4:	7bab      	ldrb	r3, [r5, #14]
900108a6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
900108aa:	b113      	cbz	r3, 900108b2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900108ac:	7beb      	ldrb	r3, [r5, #15]
900108ae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
900108b2:	2300      	movs	r3, #0
900108b4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
900108b8:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
900108ba:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900108bc:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900108be:	3e04      	subs	r6, #4
900108c0:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
900108c2:	6527      	str	r7, [r4, #80]	; 0x50
900108c4:	bf28      	it	cs
900108c6:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
900108c8:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
900108ca:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900108cc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900108d0:	f7fe f9e8 	bl	9000eca4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
900108d4:	f104 0018 	add.w	r0, r4, #24
900108d8:	f7fe f9e4 	bl	9000eca4 <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900108dc:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
900108e0:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900108e2:	464a      	mov	r2, r9
900108e4:	4641      	mov	r1, r8
900108e6:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900108ea:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
900108ec:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
900108ee:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
900108f0:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
900108f2:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900108f6:	f7fe fa53 	bl	9000eda0 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
900108fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900108fc:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
900108fe:	b103      	cbz	r3, 90010902 <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90010900:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90010902:	4620      	mov	r0, r4
90010904:	f7ff fcb2 	bl	9001026c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
90010908:	2001      	movs	r0, #1
	}
9001090a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9001090e:	f04f 30ff 	mov.w	r0, #4294967295
	}
90010912:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
90010916:	4638      	mov	r0, r7
90010918:	f7fe f954 	bl	9000ebc4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9001091c:	f04f 30ff 	mov.w	r0, #4294967295
90010920:	e7f3      	b.n	9001090a <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90010922:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
90010926:	e7c7      	b.n	900108b8 <xTaskCreate+0xc8>

90010928 <vTaskDelay>:
	{
90010928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9001092a:	b950      	cbnz	r0, 90010942 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9001092c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010930:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010934:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010938:	f3bf 8f4f 	dsb	sy
9001093c:	f3bf 8f6f 	isb	sy
	}
90010940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90010942:	4d1e      	ldr	r5, [pc, #120]	; (900109bc <vTaskDelay+0x94>)
90010944:	682b      	ldr	r3, [r5, #0]
90010946:	b143      	cbz	r3, 9001095a <vTaskDelay+0x32>
90010948:	f04f 0350 	mov.w	r3, #80	; 0x50
9001094c:	f383 8811 	msr	BASEPRI, r3
90010950:	f3bf 8f6f 	isb	sy
90010954:	f3bf 8f4f 	dsb	sy
90010958:	e7fe      	b.n	90010958 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9001095a:	682b      	ldr	r3, [r5, #0]
9001095c:	4604      	mov	r4, r0
9001095e:	3301      	adds	r3, #1
90010960:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
90010962:	4b17      	ldr	r3, [pc, #92]	; (900109c0 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010964:	4e17      	ldr	r6, [pc, #92]	; (900109c4 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
90010966:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010968:	6830      	ldr	r0, [r6, #0]
9001096a:	3004      	adds	r0, #4
9001096c:	f7fe f9c6 	bl	9000ecfc <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
90010970:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90010972:	6833      	ldr	r3, [r6, #0]
90010974:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
90010976:	d315      	bcc.n	900109a4 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010978:	4b13      	ldr	r3, [pc, #76]	; (900109c8 <vTaskDelay+0xa0>)
9001097a:	6818      	ldr	r0, [r3, #0]
9001097c:	6831      	ldr	r1, [r6, #0]
9001097e:	3104      	adds	r1, #4
90010980:	f7fe f9a4 	bl	9000eccc <vListInsert>
	configASSERT( uxSchedulerSuspended );
90010984:	682b      	ldr	r3, [r5, #0]
90010986:	b943      	cbnz	r3, 9001099a <vTaskDelay+0x72>
90010988:	f04f 0350 	mov.w	r3, #80	; 0x50
9001098c:	f383 8811 	msr	BASEPRI, r3
90010990:	f3bf 8f6f 	isb	sy
90010994:	f3bf 8f4f 	dsb	sy
90010998:	e7fe      	b.n	90010998 <vTaskDelay+0x70>
9001099a:	f7ff fde5 	bl	90010568 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9001099e:	2800      	cmp	r0, #0
900109a0:	d0c4      	beq.n	9001092c <vTaskDelay+0x4>
	}
900109a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900109a4:	4b09      	ldr	r3, [pc, #36]	; (900109cc <vTaskDelay+0xa4>)
900109a6:	6818      	ldr	r0, [r3, #0]
900109a8:	6831      	ldr	r1, [r6, #0]
900109aa:	3104      	adds	r1, #4
900109ac:	f7fe f98e 	bl	9000eccc <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
900109b0:	4b07      	ldr	r3, [pc, #28]	; (900109d0 <vTaskDelay+0xa8>)
900109b2:	681a      	ldr	r2, [r3, #0]
900109b4:	4294      	cmp	r4, r2
900109b6:	d2e5      	bcs.n	90010984 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
900109b8:	601c      	str	r4, [r3, #0]
900109ba:	e7e3      	b.n	90010984 <vTaskDelay+0x5c>
900109bc:	240396dc 	.word	0x240396dc
900109c0:	2403975c 	.word	0x2403975c
900109c4:	24039268 	.word	0x24039268
900109c8:	24039270 	.word	0x24039270
900109cc:	2403926c 	.word	0x2403926c
900109d0:	24039710 	.word	0x24039710

900109d4 <vTaskStartScheduler>:
{
900109d4:	b570      	push	{r4, r5, r6, lr}
900109d6:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
900109d8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900109da:	4668      	mov	r0, sp
900109dc:	aa02      	add	r2, sp, #8
900109de:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
900109e0:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900109e4:	f7fe f812 	bl	9000ea0c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
900109e8:	9d00      	ldr	r5, [sp, #0]
900109ea:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
900109ee:	b1b8      	cbz	r0, 90010a20 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
900109f0:	b16d      	cbz	r5, 90010a0e <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
900109f2:	2260      	movs	r2, #96	; 0x60
900109f4:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
900109f6:	9a03      	ldr	r2, [sp, #12]
900109f8:	2a60      	cmp	r2, #96	; 0x60
900109fa:	d01a      	beq.n	90010a32 <vTaskStartScheduler+0x5e>
900109fc:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a00:	f383 8811 	msr	BASEPRI, r3
90010a04:	f3bf 8f6f 	isb	sy
90010a08:	f3bf 8f4f 	dsb	sy
90010a0c:	e7fe      	b.n	90010a0c <vTaskStartScheduler+0x38>
90010a0e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a12:	f383 8811 	msr	BASEPRI, r3
90010a16:	f3bf 8f6f 	isb	sy
90010a1a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90010a1e:	e7fe      	b.n	90010a1e <vTaskStartScheduler+0x4a>
90010a20:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a24:	f383 8811 	msr	BASEPRI, r3
90010a28:	f3bf 8f6f 	isb	sy
90010a2c:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90010a30:	e7fe      	b.n	90010a30 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010a32:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010a34:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010a36:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90010a38:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010a3a:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010a3c:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90010a40:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010a42:	f017 fdad 	bl	900285a0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90010a46:	1f33      	subs	r3, r6, #4
90010a48:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010a4a:	492a      	ldr	r1, [pc, #168]	; (90010af4 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90010a4c:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90010a4e:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010a50:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
90010a54:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90010a56:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90010a5a:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
90010a5e:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
90010a60:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90010a64:	f7fe f91e 	bl	9000eca4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90010a68:	f105 0018 	add.w	r0, r5, #24
90010a6c:	f7fe f91a 	bl	9000eca4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010a70:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010a72:	4622      	mov	r2, r4
90010a74:	4920      	ldr	r1, [pc, #128]	; (90010af8 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
90010a76:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010a78:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010a7a:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90010a7c:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90010a7e:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90010a80:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90010a82:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010a86:	f7fe f98b 	bl	9000eda0 <pxPortInitialiseStack>
90010a8a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
90010a8c:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010a8e:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90010a90:	f7ff fbec 	bl	9001026c <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
90010a94:	f000 fca4 	bl	900113e0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
90010a98:	2801      	cmp	r0, #1
90010a9a:	d00c      	beq.n	90010ab6 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90010a9c:	3001      	adds	r0, #1
90010a9e:	d001      	beq.n	90010aa4 <vTaskStartScheduler+0xd0>
}
90010aa0:	b004      	add	sp, #16
90010aa2:	bd70      	pop	{r4, r5, r6, pc}
90010aa4:	f04f 0350 	mov.w	r3, #80	; 0x50
90010aa8:	f383 8811 	msr	BASEPRI, r3
90010aac:	f3bf 8f6f 	isb	sy
90010ab0:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90010ab4:	e7fe      	b.n	90010ab4 <vTaskStartScheduler+0xe0>
90010ab6:	f04f 0350 	mov.w	r3, #80	; 0x50
90010aba:	f383 8811 	msr	BASEPRI, r3
90010abe:	f3bf 8f6f 	isb	sy
90010ac2:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
90010ac6:	4b0d      	ldr	r3, [pc, #52]	; (90010afc <vTaskStartScheduler+0x128>)
90010ac8:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
90010acc:	490c      	ldr	r1, [pc, #48]	; (90010b00 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
90010ace:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010ad0:	4b0c      	ldr	r3, [pc, #48]	; (90010b04 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
90010ad2:	4a0d      	ldr	r2, [pc, #52]	; (90010b08 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
90010ad4:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010ad6:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
90010ad8:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
90010ada:	b143      	cbz	r3, 90010aee <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
90010adc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010ade:	b10b      	cbz	r3, 90010ae4 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010ae0:	2000      	movs	r0, #0
90010ae2:	4798      	blx	r3
}
90010ae4:	b004      	add	sp, #16
90010ae6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
90010aea:	f7fe ba15 	b.w	9000ef18 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
90010aee:	6813      	ldr	r3, [r2, #0]
90010af0:	e7f4      	b.n	90010adc <vTaskStartScheduler+0x108>
90010af2:	bf00      	nop
90010af4:	454c4449 	.word	0x454c4449
90010af8:	9001037d 	.word	0x9001037d
90010afc:	24039710 	.word	0x24039710
90010b00:	24039730 	.word	0x24039730
90010b04:	2403975c 	.word	0x2403975c
90010b08:	24039268 	.word	0x24039268

90010b0c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90010b0c:	4a02      	ldr	r2, [pc, #8]	; (90010b18 <vTaskSuspendAll+0xc>)
90010b0e:	6813      	ldr	r3, [r2, #0]
90010b10:	3301      	adds	r3, #1
90010b12:	6013      	str	r3, [r2, #0]
}
90010b14:	4770      	bx	lr
90010b16:	bf00      	nop
90010b18:	240396dc 	.word	0x240396dc

90010b1c <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90010b1c:	4b06      	ldr	r3, [pc, #24]	; (90010b38 <xTaskResumeAll+0x1c>)
90010b1e:	681b      	ldr	r3, [r3, #0]
90010b20:	b943      	cbnz	r3, 90010b34 <xTaskResumeAll+0x18>
90010b22:	f04f 0350 	mov.w	r3, #80	; 0x50
90010b26:	f383 8811 	msr	BASEPRI, r3
90010b2a:	f3bf 8f6f 	isb	sy
90010b2e:	f3bf 8f4f 	dsb	sy
90010b32:	e7fe      	b.n	90010b32 <xTaskResumeAll+0x16>
90010b34:	f7ff bd18 	b.w	90010568 <xTaskResumeAll.part.0>
90010b38:	240396dc 	.word	0x240396dc

90010b3c <xTaskGetTickCount>:
		xTicks = xTickCount;
90010b3c:	4b01      	ldr	r3, [pc, #4]	; (90010b44 <xTaskGetTickCount+0x8>)
90010b3e:	6818      	ldr	r0, [r3, #0]
}
90010b40:	4770      	bx	lr
90010b42:	bf00      	nop
90010b44:	2403975c 	.word	0x2403975c

90010b48 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010b48:	4b05      	ldr	r3, [pc, #20]	; (90010b60 <xTaskIncrementTick+0x18>)
90010b4a:	681b      	ldr	r3, [r3, #0]
90010b4c:	b90b      	cbnz	r3, 90010b52 <xTaskIncrementTick+0xa>
90010b4e:	f7ff bc63 	b.w	90010418 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90010b52:	4a04      	ldr	r2, [pc, #16]	; (90010b64 <xTaskIncrementTick+0x1c>)
}
90010b54:	2000      	movs	r0, #0
		++xPendedTicks;
90010b56:	6813      	ldr	r3, [r2, #0]
90010b58:	3301      	adds	r3, #1
90010b5a:	6013      	str	r3, [r2, #0]
}
90010b5c:	4770      	bx	lr
90010b5e:	bf00      	nop
90010b60:	240396dc 	.word	0x240396dc
90010b64:	24039718 	.word	0x24039718

90010b68 <vTaskSetApplicationTaskTag>:
	{
90010b68:	b538      	push	{r3, r4, r5, lr}
90010b6a:	460d      	mov	r5, r1
		if( xTask == NULL )
90010b6c:	b138      	cbz	r0, 90010b7e <vTaskSetApplicationTaskTag+0x16>
90010b6e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
90010b70:	f7fe f940 	bl	9000edf4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90010b74:	6565      	str	r5, [r4, #84]	; 0x54
	}
90010b76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90010b7a:	f7fe b95d 	b.w	9000ee38 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
90010b7e:	4b04      	ldr	r3, [pc, #16]	; (90010b90 <vTaskSetApplicationTaskTag+0x28>)
90010b80:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90010b82:	f7fe f937 	bl	9000edf4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90010b86:	6565      	str	r5, [r4, #84]	; 0x54
	}
90010b88:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90010b8c:	f7fe b954 	b.w	9000ee38 <vPortExitCritical>
90010b90:	24039268 	.word	0x24039268

90010b94 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
90010b94:	4b27      	ldr	r3, [pc, #156]	; (90010c34 <vTaskSwitchContext+0xa0>)
90010b96:	681b      	ldr	r3, [r3, #0]
90010b98:	b11b      	cbz	r3, 90010ba2 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
90010b9a:	4b27      	ldr	r3, [pc, #156]	; (90010c38 <vTaskSwitchContext+0xa4>)
90010b9c:	2201      	movs	r2, #1
90010b9e:	601a      	str	r2, [r3, #0]
90010ba0:	4770      	bx	lr
{
90010ba2:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
90010ba4:	4a24      	ldr	r2, [pc, #144]	; (90010c38 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
90010ba6:	4c25      	ldr	r4, [pc, #148]	; (90010c3c <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
90010ba8:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
90010baa:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90010bac:	2b00      	cmp	r3, #0
90010bae:	d036      	beq.n	90010c1e <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
90010bb0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010bb2:	b10b      	cbz	r3, 90010bb8 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010bb4:	2001      	movs	r0, #1
90010bb6:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010bb8:	4d21      	ldr	r5, [pc, #132]	; (90010c40 <vTaskSwitchContext+0xac>)
90010bba:	4922      	ldr	r1, [pc, #136]	; (90010c44 <vTaskSwitchContext+0xb0>)
90010bbc:	682b      	ldr	r3, [r5, #0]
90010bbe:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010bc2:	0098      	lsls	r0, r3, #2
90010bc4:	0092      	lsls	r2, r2, #2
90010bc6:	588a      	ldr	r2, [r1, r2]
90010bc8:	b942      	cbnz	r2, 90010bdc <vTaskSwitchContext+0x48>
90010bca:	b1fb      	cbz	r3, 90010c0c <vTaskSwitchContext+0x78>
90010bcc:	3b01      	subs	r3, #1
90010bce:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010bd2:	0098      	lsls	r0, r3, #2
90010bd4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90010bd8:	2a00      	cmp	r2, #0
90010bda:	d0f6      	beq.n	90010bca <vTaskSwitchContext+0x36>
90010bdc:	4418      	add	r0, r3
90010bde:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90010be2:	f8dc 1004 	ldr.w	r1, [ip, #4]
90010be6:	4662      	mov	r2, ip
90010be8:	6849      	ldr	r1, [r1, #4]
90010bea:	3208      	adds	r2, #8
90010bec:	4291      	cmp	r1, r2
90010bee:	f8cc 1004 	str.w	r1, [ip, #4]
90010bf2:	d01b      	beq.n	90010c2c <vTaskSwitchContext+0x98>
90010bf4:	68ca      	ldr	r2, [r1, #12]
90010bf6:	6022      	str	r2, [r4, #0]
90010bf8:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
90010bfa:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90010bfc:	b1a3      	cbz	r3, 90010c28 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
90010bfe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010c00:	b11b      	cbz	r3, 90010c0a <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010c02:	2000      	movs	r0, #0
}
90010c04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
90010c08:	4718      	bx	r3
}
90010c0a:	bd70      	pop	{r4, r5, r6, pc}
90010c0c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010c10:	f383 8811 	msr	BASEPRI, r3
90010c14:	f3bf 8f6f 	isb	sy
90010c18:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010c1c:	e7fe      	b.n	90010c1c <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
90010c1e:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90010c20:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010c22:	2b00      	cmp	r3, #0
90010c24:	d1c6      	bne.n	90010bb4 <vTaskSwitchContext+0x20>
90010c26:	e7c7      	b.n	90010bb8 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90010c28:	6823      	ldr	r3, [r4, #0]
90010c2a:	e7e8      	b.n	90010bfe <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010c2c:	6849      	ldr	r1, [r1, #4]
90010c2e:	f8cc 1004 	str.w	r1, [ip, #4]
90010c32:	e7df      	b.n	90010bf4 <vTaskSwitchContext+0x60>
90010c34:	240396dc 	.word	0x240396dc
90010c38:	24039760 	.word	0x24039760
90010c3c:	24039268 	.word	0x24039268
90010c40:	240396e4 	.word	0x240396e4
90010c44:	24039274 	.word	0x24039274

90010c48 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90010c48:	b1f0      	cbz	r0, 90010c88 <vTaskPlaceOnEventList+0x40>
{
90010c4a:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90010c4c:	4d1a      	ldr	r5, [pc, #104]	; (90010cb8 <vTaskPlaceOnEventList+0x70>)
90010c4e:	460c      	mov	r4, r1
90010c50:	6829      	ldr	r1, [r5, #0]
90010c52:	3118      	adds	r1, #24
90010c54:	f7fe f83a 	bl	9000eccc <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90010c58:	4b18      	ldr	r3, [pc, #96]	; (90010cbc <vTaskPlaceOnEventList+0x74>)
90010c5a:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010c5c:	6828      	ldr	r0, [r5, #0]
90010c5e:	3004      	adds	r0, #4
90010c60:	f7fe f84c 	bl	9000ecfc <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90010c64:	1c63      	adds	r3, r4, #1
90010c66:	d020      	beq.n	90010caa <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90010c68:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90010c6a:	682b      	ldr	r3, [r5, #0]
90010c6c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90010c6e:	d214      	bcs.n	90010c9a <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010c70:	4b13      	ldr	r3, [pc, #76]	; (90010cc0 <vTaskPlaceOnEventList+0x78>)
90010c72:	6818      	ldr	r0, [r3, #0]
90010c74:	6829      	ldr	r1, [r5, #0]
90010c76:	3104      	adds	r1, #4
90010c78:	f7fe f828 	bl	9000eccc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90010c7c:	4b11      	ldr	r3, [pc, #68]	; (90010cc4 <vTaskPlaceOnEventList+0x7c>)
90010c7e:	681a      	ldr	r2, [r3, #0]
90010c80:	4294      	cmp	r4, r2
90010c82:	d200      	bcs.n	90010c86 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
90010c84:	601c      	str	r4, [r3, #0]
}
90010c86:	bd70      	pop	{r4, r5, r6, pc}
90010c88:	f04f 0350 	mov.w	r3, #80	; 0x50
90010c8c:	f383 8811 	msr	BASEPRI, r3
90010c90:	f3bf 8f6f 	isb	sy
90010c94:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
90010c98:	e7fe      	b.n	90010c98 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010c9a:	4b0b      	ldr	r3, [pc, #44]	; (90010cc8 <vTaskPlaceOnEventList+0x80>)
90010c9c:	6818      	ldr	r0, [r3, #0]
90010c9e:	6829      	ldr	r1, [r5, #0]
}
90010ca0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010ca4:	3104      	adds	r1, #4
90010ca6:	f7fe b811 	b.w	9000eccc <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010caa:	6829      	ldr	r1, [r5, #0]
90010cac:	4807      	ldr	r0, [pc, #28]	; (90010ccc <vTaskPlaceOnEventList+0x84>)
90010cae:	3104      	adds	r1, #4
}
90010cb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010cb4:	f7fd bffa 	b.w	9000ecac <vListInsertEnd>
90010cb8:	24039268 	.word	0x24039268
90010cbc:	2403975c 	.word	0x2403975c
90010cc0:	2403926c 	.word	0x2403926c
90010cc4:	24039710 	.word	0x24039710
90010cc8:	24039270 	.word	0x24039270
90010ccc:	24039734 	.word	0x24039734

90010cd0 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90010cd0:	b358      	cbz	r0, 90010d2a <vTaskPlaceOnEventListRestricted+0x5a>
	{
90010cd2:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90010cd4:	4e1d      	ldr	r6, [pc, #116]	; (90010d4c <vTaskPlaceOnEventListRestricted+0x7c>)
90010cd6:	460c      	mov	r4, r1
90010cd8:	4615      	mov	r5, r2
90010cda:	6831      	ldr	r1, [r6, #0]
90010cdc:	3118      	adds	r1, #24
90010cde:	f7fd ffe5 	bl	9000ecac <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
90010ce2:	b165      	cbz	r5, 90010cfe <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90010ce4:	4b1a      	ldr	r3, [pc, #104]	; (90010d50 <vTaskPlaceOnEventListRestricted+0x80>)
90010ce6:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010ce8:	6830      	ldr	r0, [r6, #0]
90010cea:	3004      	adds	r0, #4
90010cec:	f7fe f806 	bl	9000ecfc <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010cf0:	6831      	ldr	r1, [r6, #0]
90010cf2:	4818      	ldr	r0, [pc, #96]	; (90010d54 <vTaskPlaceOnEventListRestricted+0x84>)
90010cf4:	3104      	adds	r1, #4
	}
90010cf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010cfa:	f7fd bfd7 	b.w	9000ecac <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
90010cfe:	4b14      	ldr	r3, [pc, #80]	; (90010d50 <vTaskPlaceOnEventListRestricted+0x80>)
90010d00:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010d02:	6830      	ldr	r0, [r6, #0]
90010d04:	3004      	adds	r0, #4
90010d06:	f7fd fff9 	bl	9000ecfc <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
90010d0a:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90010d0c:	6833      	ldr	r3, [r6, #0]
90010d0e:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90010d10:	d214      	bcs.n	90010d3c <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010d12:	4b11      	ldr	r3, [pc, #68]	; (90010d58 <vTaskPlaceOnEventListRestricted+0x88>)
90010d14:	6818      	ldr	r0, [r3, #0]
90010d16:	6831      	ldr	r1, [r6, #0]
90010d18:	3104      	adds	r1, #4
90010d1a:	f7fd ffd7 	bl	9000eccc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90010d1e:	4b0f      	ldr	r3, [pc, #60]	; (90010d5c <vTaskPlaceOnEventListRestricted+0x8c>)
90010d20:	681a      	ldr	r2, [r3, #0]
90010d22:	4294      	cmp	r4, r2
90010d24:	d200      	bcs.n	90010d28 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
90010d26:	601c      	str	r4, [r3, #0]
	}
90010d28:	bd70      	pop	{r4, r5, r6, pc}
90010d2a:	f04f 0350 	mov.w	r3, #80	; 0x50
90010d2e:	f383 8811 	msr	BASEPRI, r3
90010d32:	f3bf 8f6f 	isb	sy
90010d36:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
90010d3a:	e7fe      	b.n	90010d3a <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010d3c:	4b08      	ldr	r3, [pc, #32]	; (90010d60 <vTaskPlaceOnEventListRestricted+0x90>)
90010d3e:	6818      	ldr	r0, [r3, #0]
90010d40:	6831      	ldr	r1, [r6, #0]
	}
90010d42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010d46:	3104      	adds	r1, #4
90010d48:	f7fd bfc0 	b.w	9000eccc <vListInsert>
90010d4c:	24039268 	.word	0x24039268
90010d50:	2403975c 	.word	0x2403975c
90010d54:	24039734 	.word	0x24039734
90010d58:	2403926c 	.word	0x2403926c
90010d5c:	24039710 	.word	0x24039710
90010d60:	24039270 	.word	0x24039270

90010d64 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010d64:	68c3      	ldr	r3, [r0, #12]
{
90010d66:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010d68:	68dc      	ldr	r4, [r3, #12]
{
90010d6a:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
90010d6c:	b35c      	cbz	r4, 90010dc6 <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
90010d6e:	f104 0518 	add.w	r5, r4, #24
90010d72:	4628      	mov	r0, r5
90010d74:	f7fd ffc2 	bl	9000ecfc <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010d78:	4b19      	ldr	r3, [pc, #100]	; (90010de0 <xTaskRemoveFromEventList+0x7c>)
90010d7a:	681b      	ldr	r3, [r3, #0]
90010d7c:	b17b      	cbz	r3, 90010d9e <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
90010d7e:	4629      	mov	r1, r5
90010d80:	4818      	ldr	r0, [pc, #96]	; (90010de4 <xTaskRemoveFromEventList+0x80>)
90010d82:	f7fd ff93 	bl	9000ecac <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
90010d86:	4b18      	ldr	r3, [pc, #96]	; (90010de8 <xTaskRemoveFromEventList+0x84>)
90010d88:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90010d8a:	681b      	ldr	r3, [r3, #0]
90010d8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010d8e:	429a      	cmp	r2, r3
90010d90:	d922      	bls.n	90010dd8 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
90010d92:	2301      	movs	r3, #1
90010d94:	4a15      	ldr	r2, [pc, #84]	; (90010dec <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
90010d96:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
90010d98:	6013      	str	r3, [r2, #0]
}
90010d9a:	b003      	add	sp, #12
90010d9c:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
90010d9e:	1d21      	adds	r1, r4, #4
90010da0:	4608      	mov	r0, r1
90010da2:	9101      	str	r1, [sp, #4]
90010da4:	f7fd ffaa 	bl	9000ecfc <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
90010da8:	4a11      	ldr	r2, [pc, #68]	; (90010df0 <xTaskRemoveFromEventList+0x8c>)
90010daa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90010dac:	6810      	ldr	r0, [r2, #0]
90010dae:	9901      	ldr	r1, [sp, #4]
90010db0:	4283      	cmp	r3, r0
90010db2:	d900      	bls.n	90010db6 <xTaskRemoveFromEventList+0x52>
90010db4:	6013      	str	r3, [r2, #0]
90010db6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90010dba:	480e      	ldr	r0, [pc, #56]	; (90010df4 <xTaskRemoveFromEventList+0x90>)
90010dbc:	eb00 0083 	add.w	r0, r0, r3, lsl #2
90010dc0:	f7fd ff74 	bl	9000ecac <vListInsertEnd>
90010dc4:	e7df      	b.n	90010d86 <xTaskRemoveFromEventList+0x22>
90010dc6:	f04f 0350 	mov.w	r3, #80	; 0x50
90010dca:	f383 8811 	msr	BASEPRI, r3
90010dce:	f3bf 8f6f 	isb	sy
90010dd2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90010dd6:	e7fe      	b.n	90010dd6 <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
90010dd8:	2000      	movs	r0, #0
}
90010dda:	b003      	add	sp, #12
90010ddc:	bd30      	pop	{r4, r5, pc}
90010dde:	bf00      	nop
90010de0:	240396dc 	.word	0x240396dc
90010de4:	2403971c 	.word	0x2403971c
90010de8:	24039268 	.word	0x24039268
90010dec:	24039760 	.word	0x24039760
90010df0:	240396e4 	.word	0x240396e4
90010df4:	24039274 	.word	0x24039274

90010df8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010df8:	4a03      	ldr	r2, [pc, #12]	; (90010e08 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
90010dfa:	4b04      	ldr	r3, [pc, #16]	; (90010e0c <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010dfc:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010dfe:	681b      	ldr	r3, [r3, #0]
90010e00:	e9c0 2300 	strd	r2, r3, [r0]
}
90010e04:	4770      	bx	lr
90010e06:	bf00      	nop
90010e08:	24039714 	.word	0x24039714
90010e0c:	2403975c 	.word	0x2403975c

90010e10 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
90010e10:	b328      	cbz	r0, 90010e5e <xTaskCheckForTimeOut+0x4e>
{
90010e12:	b5f0      	push	{r4, r5, r6, r7, lr}
90010e14:	460d      	mov	r5, r1
90010e16:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
90010e18:	b1c1      	cbz	r1, 90010e4c <xTaskCheckForTimeOut+0x3c>
90010e1a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
90010e1c:	f7fd ffea 	bl	9000edf4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90010e20:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90010e22:	4a1d      	ldr	r2, [pc, #116]	; (90010e98 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
90010e24:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90010e26:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90010e28:	d030      	beq.n	90010e8c <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90010e2a:	f8df c070 	ldr.w	ip, [pc, #112]	; 90010e9c <xTaskCheckForTimeOut+0x8c>
90010e2e:	6826      	ldr	r6, [r4, #0]
90010e30:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90010e34:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90010e36:	42be      	cmp	r6, r7
90010e38:	d01a      	beq.n	90010e70 <xTaskCheckForTimeOut+0x60>
90010e3a:	4288      	cmp	r0, r1
90010e3c:	d818      	bhi.n	90010e70 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
90010e3e:	2001      	movs	r0, #1
90010e40:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90010e42:	f7fd fff9 	bl	9000ee38 <vPortExitCritical>
}
90010e46:	9801      	ldr	r0, [sp, #4]
90010e48:	b003      	add	sp, #12
90010e4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010e4c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010e50:	f383 8811 	msr	BASEPRI, r3
90010e54:	f3bf 8f6f 	isb	sy
90010e58:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
90010e5c:	e7fe      	b.n	90010e5c <xTaskCheckForTimeOut+0x4c>
90010e5e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010e62:	f383 8811 	msr	BASEPRI, r3
90010e66:	f3bf 8f6f 	isb	sy
90010e6a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
90010e6e:	e7fe      	b.n	90010e6e <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90010e70:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90010e74:	4573      	cmp	r3, lr
90010e76:	d90b      	bls.n	90010e90 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
90010e78:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010e7a:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010e7e:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
90010e80:	4403      	add	r3, r0
			xReturn = pdFALSE;
90010e82:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
90010e84:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010e86:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
90010e8a:	e7d9      	b.n	90010e40 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
90010e8c:	2000      	movs	r0, #0
90010e8e:	e7d7      	b.n	90010e40 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
90010e90:	2300      	movs	r3, #0
			xReturn = pdTRUE;
90010e92:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
90010e94:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
90010e96:	e7d3      	b.n	90010e40 <xTaskCheckForTimeOut+0x30>
90010e98:	2403975c 	.word	0x2403975c
90010e9c:	24039714 	.word	0x24039714

90010ea0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90010ea0:	4b01      	ldr	r3, [pc, #4]	; (90010ea8 <vTaskMissedYield+0x8>)
90010ea2:	2201      	movs	r2, #1
90010ea4:	601a      	str	r2, [r3, #0]
}
90010ea6:	4770      	bx	lr
90010ea8:	24039760 	.word	0x24039760

90010eac <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
90010eac:	4b01      	ldr	r3, [pc, #4]	; (90010eb4 <xTaskGetCurrentTaskHandle+0x8>)
90010eae:	6818      	ldr	r0, [r3, #0]
	}
90010eb0:	4770      	bx	lr
90010eb2:	bf00      	nop
90010eb4:	24039268 	.word	0x24039268

90010eb8 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90010eb8:	4b05      	ldr	r3, [pc, #20]	; (90010ed0 <xTaskGetSchedulerState+0x18>)
90010eba:	681b      	ldr	r3, [r3, #0]
90010ebc:	b133      	cbz	r3, 90010ecc <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010ebe:	4b05      	ldr	r3, [pc, #20]	; (90010ed4 <xTaskGetSchedulerState+0x1c>)
90010ec0:	6818      	ldr	r0, [r3, #0]
90010ec2:	fab0 f080 	clz	r0, r0
90010ec6:	0940      	lsrs	r0, r0, #5
90010ec8:	0040      	lsls	r0, r0, #1
90010eca:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
90010ecc:	2001      	movs	r0, #1
	}
90010ece:	4770      	bx	lr
90010ed0:	24039730 	.word	0x24039730
90010ed4:	240396dc 	.word	0x240396dc

90010ed8 <xTaskPriorityInherit>:
	{
90010ed8:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
90010eda:	4604      	mov	r4, r0
	{
90010edc:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
90010ede:	b1c8      	cbz	r0, 90010f14 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90010ee0:	4d1d      	ldr	r5, [pc, #116]	; (90010f58 <xTaskPriorityInherit+0x80>)
90010ee2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90010ee4:	682a      	ldr	r2, [r5, #0]
90010ee6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90010ee8:	4293      	cmp	r3, r2
90010eea:	d215      	bcs.n	90010f18 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010eec:	6982      	ldr	r2, [r0, #24]
90010eee:	2a00      	cmp	r2, #0
90010ef0:	db04      	blt.n	90010efc <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010ef2:	682a      	ldr	r2, [r5, #0]
90010ef4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90010ef6:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
90010efa:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
90010efc:	4e17      	ldr	r6, [pc, #92]	; (90010f5c <xTaskPriorityInherit+0x84>)
90010efe:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90010f02:	6962      	ldr	r2, [r4, #20]
90010f04:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90010f08:	429a      	cmp	r2, r3
90010f0a:	d00e      	beq.n	90010f2a <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010f0c:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
90010f0e:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010f10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010f12:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
90010f14:	b002      	add	sp, #8
90010f16:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90010f18:	682b      	ldr	r3, [r5, #0]
90010f1a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
90010f1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010f1e:	4298      	cmp	r0, r3
90010f20:	bf2c      	ite	cs
90010f22:	2000      	movcs	r0, #0
90010f24:	2001      	movcc	r0, #1
	}
90010f26:	b002      	add	sp, #8
90010f28:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010f2a:	1d21      	adds	r1, r4, #4
90010f2c:	4608      	mov	r0, r1
90010f2e:	9101      	str	r1, [sp, #4]
90010f30:	f7fd fee4 	bl	9000ecfc <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010f34:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010f36:	4b0a      	ldr	r3, [pc, #40]	; (90010f60 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010f38:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010f3a:	681a      	ldr	r2, [r3, #0]
90010f3c:	9901      	ldr	r1, [sp, #4]
90010f3e:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010f40:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010f42:	d900      	bls.n	90010f46 <xTaskPriorityInherit+0x6e>
90010f44:	6018      	str	r0, [r3, #0]
90010f46:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010f4a:	eb06 0080 	add.w	r0, r6, r0, lsl #2
90010f4e:	f7fd fead 	bl	9000ecac <vListInsertEnd>
				xReturn = pdTRUE;
90010f52:	2001      	movs	r0, #1
90010f54:	e7de      	b.n	90010f14 <xTaskPriorityInherit+0x3c>
90010f56:	bf00      	nop
90010f58:	24039268 	.word	0x24039268
90010f5c:	24039274 	.word	0x24039274
90010f60:	240396e4 	.word	0x240396e4

90010f64 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90010f64:	b318      	cbz	r0, 90010fae <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
90010f66:	4b1f      	ldr	r3, [pc, #124]	; (90010fe4 <xTaskPriorityDisinherit+0x80>)
	{
90010f68:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
90010f6a:	681c      	ldr	r4, [r3, #0]
	{
90010f6c:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
90010f6e:	4284      	cmp	r4, r0
90010f70:	d008      	beq.n	90010f84 <xTaskPriorityDisinherit+0x20>
90010f72:	f04f 0350 	mov.w	r3, #80	; 0x50
90010f76:	f383 8811 	msr	BASEPRI, r3
90010f7a:	f3bf 8f6f 	isb	sy
90010f7e:	f3bf 8f4f 	dsb	sy
90010f82:	e7fe      	b.n	90010f82 <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
90010f84:	6d23      	ldr	r3, [r4, #80]	; 0x50
90010f86:	b14b      	cbz	r3, 90010f9c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90010f88:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
90010f8a:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90010f8c:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
90010f8e:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
90010f90:	4291      	cmp	r1, r2
90010f92:	d000      	beq.n	90010f96 <xTaskPriorityDisinherit+0x32>
90010f94:	b16b      	cbz	r3, 90010fb2 <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
90010f96:	2000      	movs	r0, #0
	}
90010f98:	b002      	add	sp, #8
90010f9a:	bd10      	pop	{r4, pc}
90010f9c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010fa0:	f383 8811 	msr	BASEPRI, r3
90010fa4:	f3bf 8f6f 	isb	sy
90010fa8:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90010fac:	e7fe      	b.n	90010fac <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
90010fae:	2000      	movs	r0, #0
	}
90010fb0:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010fb2:	1d21      	adds	r1, r4, #4
90010fb4:	4608      	mov	r0, r1
90010fb6:	9101      	str	r1, [sp, #4]
90010fb8:	f7fd fea0 	bl	9000ecfc <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90010fbc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
90010fbe:	4b0a      	ldr	r3, [pc, #40]	; (90010fe8 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010fc0:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
90010fc4:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90010fc6:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010fc8:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
90010fca:	681a      	ldr	r2, [r3, #0]
90010fcc:	4290      	cmp	r0, r2
90010fce:	d900      	bls.n	90010fd2 <xTaskPriorityDisinherit+0x6e>
90010fd0:	6018      	str	r0, [r3, #0]
90010fd2:	4b06      	ldr	r3, [pc, #24]	; (90010fec <xTaskPriorityDisinherit+0x88>)
90010fd4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010fd8:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90010fdc:	f7fd fe66 	bl	9000ecac <vListInsertEnd>
					xReturn = pdTRUE;
90010fe0:	2001      	movs	r0, #1
		return xReturn;
90010fe2:	e7d9      	b.n	90010f98 <xTaskPriorityDisinherit+0x34>
90010fe4:	24039268 	.word	0x24039268
90010fe8:	240396e4 	.word	0x240396e4
90010fec:	24039274 	.word	0x24039274

90010ff0 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90010ff0:	2800      	cmp	r0, #0
90010ff2:	d040      	beq.n	90011076 <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
90010ff4:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
90010ff6:	b530      	push	{r4, r5, lr}
90010ff8:	4604      	mov	r4, r0
90010ffa:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
90010ffc:	b153      	cbz	r3, 90011014 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90010ffe:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90011000:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90011002:	4281      	cmp	r1, r0
90011004:	bf38      	it	cc
90011006:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90011008:	2b01      	cmp	r3, #1
9001100a:	d101      	bne.n	90011010 <vTaskPriorityDisinheritAfterTimeout+0x20>
9001100c:	428a      	cmp	r2, r1
9001100e:	d10a      	bne.n	90011026 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
90011010:	b003      	add	sp, #12
90011012:	bd30      	pop	{r4, r5, pc}
90011014:	f04f 0350 	mov.w	r3, #80	; 0x50
90011018:	f383 8811 	msr	BASEPRI, r3
9001101c:	f3bf 8f6f 	isb	sy
90011020:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90011024:	e7fe      	b.n	90011024 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
90011026:	4b19      	ldr	r3, [pc, #100]	; (9001108c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90011028:	681b      	ldr	r3, [r3, #0]
9001102a:	42a3      	cmp	r3, r4
9001102c:	d024      	beq.n	90011078 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001102e:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90011030:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011032:	2b00      	cmp	r3, #0
90011034:	db02      	blt.n	9001103c <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011036:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
9001103a:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9001103c:	4d14      	ldr	r5, [pc, #80]	; (90011090 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9001103e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90011042:	6961      	ldr	r1, [r4, #20]
90011044:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90011048:	4299      	cmp	r1, r3
9001104a:	d1e1      	bne.n	90011010 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001104c:	1d21      	adds	r1, r4, #4
9001104e:	4608      	mov	r0, r1
90011050:	9101      	str	r1, [sp, #4]
90011052:	f7fd fe53 	bl	9000ecfc <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90011056:	4b0f      	ldr	r3, [pc, #60]	; (90011094 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
90011058:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9001105a:	681a      	ldr	r2, [r3, #0]
9001105c:	9901      	ldr	r1, [sp, #4]
9001105e:	4290      	cmp	r0, r2
90011060:	d900      	bls.n	90011064 <vTaskPriorityDisinheritAfterTimeout+0x74>
90011062:	6018      	str	r0, [r3, #0]
90011064:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011068:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9001106c:	b003      	add	sp, #12
9001106e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
90011072:	f7fd be1b 	b.w	9000ecac <vListInsertEnd>
90011076:	4770      	bx	lr
90011078:	f04f 0350 	mov.w	r3, #80	; 0x50
9001107c:	f383 8811 	msr	BASEPRI, r3
90011080:	f3bf 8f6f 	isb	sy
90011084:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90011088:	e7fe      	b.n	90011088 <vTaskPriorityDisinheritAfterTimeout+0x98>
9001108a:	bf00      	nop
9001108c:	24039268 	.word	0x24039268
90011090:	24039274 	.word	0x24039274
90011094:	240396e4 	.word	0x240396e4

90011098 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90011098:	4b04      	ldr	r3, [pc, #16]	; (900110ac <pvTaskIncrementMutexHeldCount+0x14>)
9001109a:	681a      	ldr	r2, [r3, #0]
9001109c:	b11a      	cbz	r2, 900110a6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9001109e:	6819      	ldr	r1, [r3, #0]
900110a0:	6d0a      	ldr	r2, [r1, #80]	; 0x50
900110a2:	3201      	adds	r2, #1
900110a4:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
900110a6:	6818      	ldr	r0, [r3, #0]
	}
900110a8:	4770      	bx	lr
900110aa:	bf00      	nop
900110ac:	24039268 	.word	0x24039268

900110b0 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
900110b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900110b4:	4e22      	ldr	r6, [pc, #136]	; (90011140 <prvSwitchTimerLists+0x90>)
900110b6:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
900110b8:	f8df 908c 	ldr.w	r9, [pc, #140]	; 90011148 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
900110bc:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
900110c0:	e00d      	b.n	900110de <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900110c2:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900110c4:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900110c6:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900110c8:	1d25      	adds	r5, r4, #4
900110ca:	4628      	mov	r0, r5
900110cc:	f7fd fe16 	bl	9000ecfc <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900110d0:	6a23      	ldr	r3, [r4, #32]
900110d2:	4620      	mov	r0, r4
900110d4:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900110d6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
900110da:	075b      	lsls	r3, r3, #29
900110dc:	d40a      	bmi.n	900110f4 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
900110de:	6833      	ldr	r3, [r6, #0]
900110e0:	681a      	ldr	r2, [r3, #0]
900110e2:	2a00      	cmp	r2, #0
900110e4:	d1ed      	bne.n	900110c2 <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
900110e6:	4a17      	ldr	r2, [pc, #92]	; (90011144 <prvSwitchTimerLists+0x94>)
900110e8:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
900110ea:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
900110ec:	6031      	str	r1, [r6, #0]
}
900110ee:	b005      	add	sp, #20
900110f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
900110f4:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900110f6:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
900110f8:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
900110fa:	429f      	cmp	r7, r3
900110fc:	d205      	bcs.n	9001110a <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900110fe:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90011100:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90011102:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011104:	f7fd fde2 	bl	9000eccc <vListInsert>
90011108:	e7e9      	b.n	900110de <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
9001110a:	f8d9 3000 	ldr.w	r3, [r9]
9001110e:	b16b      	cbz	r3, 9001112c <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90011110:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90011112:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90011116:	f7ff fecf 	bl	90010eb8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001111a:	2300      	movs	r3, #0
9001111c:	4669      	mov	r1, sp
9001111e:	f8d9 0000 	ldr.w	r0, [r9]
90011122:	461a      	mov	r2, r3
90011124:	f7fe f95e 	bl	9000f3e4 <xQueueGenericSend>
				configASSERT( xResult );
90011128:	2800      	cmp	r0, #0
9001112a:	d1d8      	bne.n	900110de <prvSwitchTimerLists+0x2e>
9001112c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011130:	f383 8811 	msr	BASEPRI, r3
90011134:	f3bf 8f6f 	isb	sy
90011138:	f3bf 8f4f 	dsb	sy
9001113c:	e7fe      	b.n	9001113c <prvSwitchTimerLists+0x8c>
9001113e:	bf00      	nop
90011140:	24039764 	.word	0x24039764
90011144:	24039768 	.word	0x24039768
90011148:	24039888 	.word	0x24039888

9001114c <prvTimerTask>:
{
9001114c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011150:	4e9f      	ldr	r6, [pc, #636]	; (900113d0 <prvTimerTask+0x284>)
90011152:	b089      	sub	sp, #36	; 0x24
90011154:	4d9f      	ldr	r5, [pc, #636]	; (900113d4 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90011156:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9001115a:	4c9f      	ldr	r4, [pc, #636]	; (900113d8 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9001115c:	6833      	ldr	r3, [r6, #0]
9001115e:	681f      	ldr	r7, [r3, #0]
90011160:	2f00      	cmp	r7, #0
90011162:	f000 80b2 	beq.w	900112ca <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90011166:	68db      	ldr	r3, [r3, #12]
90011168:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9001116a:	f7ff fccf 	bl	90010b0c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9001116e:	f7ff fce5 	bl	90010b3c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90011172:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90011174:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90011176:	4290      	cmp	r0, r2
90011178:	f0c0 80af 	bcc.w	900112da <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9001117c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9001117e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90011180:	f200 80d0 	bhi.w	90011324 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90011184:	f7ff fcca 	bl	90010b1c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011188:	6832      	ldr	r2, [r6, #0]
9001118a:	68d2      	ldr	r2, [r2, #12]
9001118c:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90011190:	f10b 0804 	add.w	r8, fp, #4
90011194:	4640      	mov	r0, r8
90011196:	f7fd fdb1 	bl	9000ecfc <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001119a:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
9001119e:	0741      	lsls	r1, r0, #29
900111a0:	f100 80d0 	bmi.w	90011344 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900111a4:	f020 0001 	bic.w	r0, r0, #1
900111a8:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900111ac:	f8db 3020 	ldr.w	r3, [fp, #32]
900111b0:	4658      	mov	r0, fp
900111b2:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
900111b4:	2200      	movs	r2, #0
900111b6:	4669      	mov	r1, sp
900111b8:	6820      	ldr	r0, [r4, #0]
900111ba:	f7fe fbff 	bl	9000f9bc <xQueueReceive>
900111be:	2800      	cmp	r0, #0
900111c0:	d0cc      	beq.n	9001115c <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
900111c2:	9b00      	ldr	r3, [sp, #0]
900111c4:	2b00      	cmp	r3, #0
900111c6:	db77      	blt.n	900112b8 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
900111c8:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
900111ca:	697b      	ldr	r3, [r7, #20]
900111cc:	b113      	cbz	r3, 900111d4 <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900111ce:	1d38      	adds	r0, r7, #4
900111d0:	f7fd fd94 	bl	9000ecfc <uxListRemove>
	xTimeNow = xTaskGetTickCount();
900111d4:	f7ff fcb2 	bl	90010b3c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900111d8:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900111da:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
900111dc:	4298      	cmp	r0, r3
900111de:	f0c0 8083 	bcc.w	900112e8 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
900111e2:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
900111e4:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
900111e8:	2b09      	cmp	r3, #9
900111ea:	d8e3      	bhi.n	900111b4 <prvTimerTask+0x68>
900111ec:	e8df f003 	tbb	[pc, r3]
900111f0:	54050505 	.word	0x54050505
900111f4:	05055b3e 	.word	0x05055b3e
900111f8:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900111fa:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
900111fe:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90011200:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90011204:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90011206:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9001120a:	9b01      	ldr	r3, [sp, #4]
9001120c:	1899      	adds	r1, r3, r2
9001120e:	bf2c      	ite	cs
90011210:	2001      	movcs	r0, #1
90011212:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90011214:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90011216:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90011218:	f200 8086 	bhi.w	90011328 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001121c:	eba8 0303 	sub.w	r3, r8, r3
90011220:	429a      	cmp	r2, r3
90011222:	f200 80c0 	bhi.w	900113a6 <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90011226:	6a3b      	ldr	r3, [r7, #32]
90011228:	4638      	mov	r0, r7
9001122a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001122c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90011230:	075b      	lsls	r3, r3, #29
90011232:	d5bf      	bpl.n	900111b4 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90011234:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90011236:	9901      	ldr	r1, [sp, #4]
90011238:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
9001123a:	b172      	cbz	r2, 9001125a <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9001123c:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9001123e:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90011242:	2300      	movs	r3, #0
90011244:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90011246:	f7ff fe37 	bl	90010eb8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001124a:	2300      	movs	r3, #0
9001124c:	a904      	add	r1, sp, #16
9001124e:	6820      	ldr	r0, [r4, #0]
90011250:	461a      	mov	r2, r3
90011252:	f7fe f8c7 	bl	9000f3e4 <xQueueGenericSend>
							configASSERT( xResult );
90011256:	2800      	cmp	r0, #0
90011258:	d1ac      	bne.n	900111b4 <prvTimerTask+0x68>
9001125a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001125e:	f383 8811 	msr	BASEPRI, r3
90011262:	f3bf 8f6f 	isb	sy
90011266:	f3bf 8f4f 	dsb	sy
9001126a:	e7fe      	b.n	9001126a <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001126c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90011270:	f043 0301 	orr.w	r3, r3, #1
90011274:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90011278:	9b01      	ldr	r3, [sp, #4]
9001127a:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9001127c:	2b00      	cmp	r3, #0
9001127e:	f000 809e 	beq.w	900113be <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90011282:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90011284:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90011286:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
90011288:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9001128a:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9001128c:	d856      	bhi.n	9001133c <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9001128e:	4b53      	ldr	r3, [pc, #332]	; (900113dc <prvTimerTask+0x290>)
90011290:	6818      	ldr	r0, [r3, #0]
90011292:	f7fd fd1b 	bl	9000eccc <vListInsert>
	return xProcessTimerNow;
90011296:	e78d      	b.n	900111b4 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90011298:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9001129c:	f023 0301 	bic.w	r3, r3, #1
900112a0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
900112a4:	e786      	b.n	900111b4 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
900112a6:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900112aa:	079a      	lsls	r2, r3, #30
900112ac:	d572      	bpl.n	90011394 <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900112ae:	f023 0301 	bic.w	r3, r3, #1
900112b2:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
900112b6:	e77d      	b.n	900111b4 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
900112b8:	9b01      	ldr	r3, [sp, #4]
900112ba:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
900112be:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
900112c0:	9b00      	ldr	r3, [sp, #0]
900112c2:	2b00      	cmp	r3, #0
900112c4:	f6ff af76 	blt.w	900111b4 <prvTimerTask+0x68>
900112c8:	e77e      	b.n	900111c8 <prvTimerTask+0x7c>
	vTaskSuspendAll();
900112ca:	f7ff fc1f 	bl	90010b0c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
900112ce:	f7ff fc35 	bl	90010b3c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900112d2:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900112d4:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
900112d6:	4282      	cmp	r2, r0
900112d8:	d909      	bls.n	900112ee <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
900112da:	f7ff fee9 	bl	900110b0 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
900112de:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
900112e2:	f7ff fc1b 	bl	90010b1c <xTaskResumeAll>
900112e6:	e765      	b.n	900111b4 <prvTimerTask+0x68>
		prvSwitchTimerLists();
900112e8:	f7ff fee2 	bl	900110b0 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
900112ec:	e779      	b.n	900111e2 <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
900112ee:	4b3b      	ldr	r3, [pc, #236]	; (900113dc <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
900112f0:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
900112f4:	681a      	ldr	r2, [r3, #0]
900112f6:	6812      	ldr	r2, [r2, #0]
900112f8:	fab2 f282 	clz	r2, r2
900112fc:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
900112fe:	eba7 010a 	sub.w	r1, r7, sl
90011302:	6820      	ldr	r0, [r4, #0]
90011304:	f7fe ff4e 	bl	900101a4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90011308:	f7ff fc08 	bl	90010b1c <xTaskResumeAll>
9001130c:	2800      	cmp	r0, #0
9001130e:	f47f af51 	bne.w	900111b4 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90011312:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
90011316:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
9001131a:	f3bf 8f4f 	dsb	sy
9001131e:	f3bf 8f6f 	isb	sy
90011322:	e747      	b.n	900111b4 <prvTimerTask+0x68>
90011324:	2200      	movs	r2, #0
90011326:	e7ea      	b.n	900112fe <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90011328:	4543      	cmp	r3, r8
9001132a:	d902      	bls.n	90011332 <prvTimerTask+0x1e6>
9001132c:	2800      	cmp	r0, #0
9001132e:	f43f af7a 	beq.w	90011226 <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011332:	1d39      	adds	r1, r7, #4
90011334:	6830      	ldr	r0, [r6, #0]
90011336:	f7fd fcc9 	bl	9000eccc <vListInsert>
	return xProcessTimerNow;
9001133a:	e73b      	b.n	900111b4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001133c:	6830      	ldr	r0, [r6, #0]
9001133e:	f7fd fcc5 	bl	9000eccc <vListInsert>
90011342:	e737      	b.n	900111b4 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90011344:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90011348:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9001134c:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
9001134e:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90011350:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90011354:	d322      	bcc.n	9001139c <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011356:	ebaa 0307 	sub.w	r3, sl, r7
9001135a:	429a      	cmp	r2, r3
9001135c:	d829      	bhi.n	900113b2 <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
9001135e:	6823      	ldr	r3, [r4, #0]
90011360:	b17b      	cbz	r3, 90011382 <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
90011362:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90011364:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90011366:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
9001136a:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9001136c:	f7ff fda4 	bl	90010eb8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90011370:	2300      	movs	r3, #0
90011372:	a904      	add	r1, sp, #16
90011374:	6820      	ldr	r0, [r4, #0]
90011376:	461a      	mov	r2, r3
90011378:	f7fe f834 	bl	9000f3e4 <xQueueGenericSend>
			configASSERT( xResult );
9001137c:	2800      	cmp	r0, #0
9001137e:	f47f af15 	bne.w	900111ac <prvTimerTask+0x60>
90011382:	f04f 0350 	mov.w	r3, #80	; 0x50
90011386:	f383 8811 	msr	BASEPRI, r3
9001138a:	f3bf 8f6f 	isb	sy
9001138e:	f3bf 8f4f 	dsb	sy
90011392:	e7fe      	b.n	90011392 <prvTimerTask+0x246>
							vPortFree( pxTimer );
90011394:	4638      	mov	r0, r7
90011396:	f7fd fc15 	bl	9000ebc4 <vPortFree>
9001139a:	e70b      	b.n	900111b4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001139c:	4641      	mov	r1, r8
9001139e:	6830      	ldr	r0, [r6, #0]
900113a0:	f7fd fc94 	bl	9000eccc <vListInsert>
	return xProcessTimerNow;
900113a4:	e702      	b.n	900111ac <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900113a6:	4b0d      	ldr	r3, [pc, #52]	; (900113dc <prvTimerTask+0x290>)
900113a8:	1d39      	adds	r1, r7, #4
900113aa:	6818      	ldr	r0, [r3, #0]
900113ac:	f7fd fc8e 	bl	9000eccc <vListInsert>
	return xProcessTimerNow;
900113b0:	e700      	b.n	900111b4 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900113b2:	4b0a      	ldr	r3, [pc, #40]	; (900113dc <prvTimerTask+0x290>)
900113b4:	4641      	mov	r1, r8
900113b6:	6818      	ldr	r0, [r3, #0]
900113b8:	f7fd fc88 	bl	9000eccc <vListInsert>
	return xProcessTimerNow;
900113bc:	e6f6      	b.n	900111ac <prvTimerTask+0x60>
900113be:	f04f 0350 	mov.w	r3, #80	; 0x50
900113c2:	f383 8811 	msr	BASEPRI, r3
900113c6:	f3bf 8f6f 	isb	sy
900113ca:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900113ce:	e7fe      	b.n	900113ce <prvTimerTask+0x282>
900113d0:	24039764 	.word	0x24039764
900113d4:	24039834 	.word	0x24039834
900113d8:	24039888 	.word	0x24039888
900113dc:	24039768 	.word	0x24039768

900113e0 <xTimerCreateTimerTask>:
{
900113e0:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
900113e2:	4c23      	ldr	r4, [pc, #140]	; (90011470 <xTimerCreateTimerTask+0x90>)
{
900113e4:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
900113e6:	f7fd fd05 	bl	9000edf4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
900113ea:	6825      	ldr	r5, [r4, #0]
900113ec:	b335      	cbz	r5, 9001143c <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
900113ee:	f7fd fd23 	bl	9000ee38 <vPortExitCritical>
	if( xTimerQueue != NULL )
900113f2:	6823      	ldr	r3, [r4, #0]
900113f4:	b1cb      	cbz	r3, 9001142a <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
900113f6:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
900113f8:	aa07      	add	r2, sp, #28
900113fa:	a906      	add	r1, sp, #24
900113fc:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
900113fe:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90011400:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90011404:	f7fd fb10 	bl	9000ea28 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90011408:	4623      	mov	r3, r4
9001140a:	9a07      	ldr	r2, [sp, #28]
9001140c:	9500      	str	r5, [sp, #0]
9001140e:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90011412:	e9cd 1001 	strd	r1, r0, [sp, #4]
90011416:	4917      	ldr	r1, [pc, #92]	; (90011474 <xTimerCreateTimerTask+0x94>)
90011418:	4817      	ldr	r0, [pc, #92]	; (90011478 <xTimerCreateTimerTask+0x98>)
9001141a:	f7ff f93f 	bl	9001069c <xTaskCreateStatic>
9001141e:	4b17      	ldr	r3, [pc, #92]	; (9001147c <xTimerCreateTimerTask+0x9c>)
90011420:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90011422:	b110      	cbz	r0, 9001142a <xTimerCreateTimerTask+0x4a>
}
90011424:	2001      	movs	r0, #1
90011426:	b009      	add	sp, #36	; 0x24
90011428:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001142a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001142e:	f383 8811 	msr	BASEPRI, r3
90011432:	f3bf 8f6f 	isb	sy
90011436:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9001143a:	e7fe      	b.n	9001143a <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9001143c:	4f10      	ldr	r7, [pc, #64]	; (90011480 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9001143e:	4e11      	ldr	r6, [pc, #68]	; (90011484 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90011440:	4638      	mov	r0, r7
90011442:	f7fd fc23 	bl	9000ec8c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
90011446:	4630      	mov	r0, r6
90011448:	f7fd fc20 	bl	9000ec8c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9001144c:	4a0e      	ldr	r2, [pc, #56]	; (90011488 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001144e:	9500      	str	r5, [sp, #0]
90011450:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90011452:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011454:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90011456:	4a0d      	ldr	r2, [pc, #52]	; (9001148c <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011458:	4b0d      	ldr	r3, [pc, #52]	; (90011490 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9001145a:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001145c:	4a0d      	ldr	r2, [pc, #52]	; (90011494 <xTimerCreateTimerTask+0xb4>)
9001145e:	f7fd fe6b 	bl	9000f138 <xQueueGenericCreateStatic>
90011462:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90011464:	2800      	cmp	r0, #0
90011466:	d0c2      	beq.n	900113ee <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90011468:	490b      	ldr	r1, [pc, #44]	; (90011498 <xTimerCreateTimerTask+0xb8>)
9001146a:	f7fe fe73 	bl	90010154 <vQueueAddToRegistry>
9001146e:	e7be      	b.n	900113ee <xTimerCreateTimerTask+0xe>
90011470:	24039888 	.word	0x24039888
90011474:	9002be6c 	.word	0x9002be6c
90011478:	9001114d 	.word	0x9001114d
9001147c:	2403988c 	.word	0x2403988c
90011480:	2403980c 	.word	0x2403980c
90011484:	24039820 	.word	0x24039820
90011488:	24039764 	.word	0x24039764
9001148c:	24039768 	.word	0x24039768
90011490:	24039838 	.word	0x24039838
90011494:	2403976c 	.word	0x2403976c
90011498:	9002be64 	.word	0x9002be64

9001149c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9001149c:	8880      	ldrh	r0, [r0, #4]
9001149e:	4770      	bx	lr

900114a0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
900114a0:	b570      	push	{r4, r5, r6, lr}
900114a2:	6803      	ldr	r3, [r0, #0]
900114a4:	460c      	mov	r4, r1
900114a6:	2100      	movs	r1, #0
900114a8:	4605      	mov	r5, r0
900114aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900114ac:	4798      	blx	r3
900114ae:	4606      	mov	r6, r0
900114b0:	682b      	ldr	r3, [r5, #0]
900114b2:	4628      	mov	r0, r5
900114b4:	1ba4      	subs	r4, r4, r6
900114b6:	6a1b      	ldr	r3, [r3, #32]
900114b8:	b2a4      	uxth	r4, r4
900114ba:	4798      	blx	r3
900114bc:	fbb4 f0f0 	udiv	r0, r4, r0
900114c0:	bd70      	pop	{r4, r5, r6, pc}

900114c2 <_ZN8touchgfx17AbstractPartition5clearEv>:
900114c2:	2300      	movs	r3, #0
900114c4:	8083      	strh	r3, [r0, #4]
900114c6:	4770      	bx	lr

900114c8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
900114c8:	b510      	push	{r4, lr}
900114ca:	6803      	ldr	r3, [r0, #0]
900114cc:	4604      	mov	r4, r0
900114ce:	8881      	ldrh	r1, [r0, #4]
900114d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900114d2:	4798      	blx	r3
900114d4:	88a3      	ldrh	r3, [r4, #4]
900114d6:	3301      	adds	r3, #1
900114d8:	80a3      	strh	r3, [r4, #4]
900114da:	bd10      	pop	{r4, pc}

900114dc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
900114dc:	6803      	ldr	r3, [r0, #0]
900114de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900114e0:	4718      	bx	r3

900114e2 <_ZN8touchgfx17AbstractPartitionD1Ev>:
900114e2:	4770      	bx	lr

900114e4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
900114e4:	4a02      	ldr	r2, [pc, #8]	; (900114f0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
900114e6:	6002      	str	r2, [r0, #0]
900114e8:	2200      	movs	r2, #0
900114ea:	8082      	strh	r2, [r0, #4]
900114ec:	4770      	bx	lr
900114ee:	bf00      	nop
900114f0:	9002be7c 	.word	0x9002be7c

900114f4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
900114f4:	6a83      	ldr	r3, [r0, #40]	; 0x28
900114f6:	2000      	movs	r0, #0
900114f8:	b12b      	cbz	r3, 90011506 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
900114fa:	b920      	cbnz	r0, 90011506 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
900114fc:	1a5a      	subs	r2, r3, r1
900114fe:	699b      	ldr	r3, [r3, #24]
90011500:	4250      	negs	r0, r2
90011502:	4150      	adcs	r0, r2
90011504:	e7f8      	b.n	900114f8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90011506:	4770      	bx	lr

90011508 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90011508:	2300      	movs	r3, #0
9001150a:	6148      	str	r0, [r1, #20]
9001150c:	618b      	str	r3, [r1, #24]
9001150e:	6a83      	ldr	r3, [r0, #40]	; 0x28
90011510:	b913      	cbnz	r3, 90011518 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90011512:	6281      	str	r1, [r0, #40]	; 0x28
90011514:	4770      	bx	lr
90011516:	4613      	mov	r3, r2
90011518:	699a      	ldr	r2, [r3, #24]
9001151a:	2a00      	cmp	r2, #0
9001151c:	d1fb      	bne.n	90011516 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9001151e:	6199      	str	r1, [r3, #24]
90011520:	4770      	bx	lr

90011522 <_ZN8touchgfx9Container9removeAllEv>:
90011522:	2200      	movs	r2, #0
90011524:	6a83      	ldr	r3, [r0, #40]	; 0x28
90011526:	b123      	cbz	r3, 90011532 <_ZN8touchgfx9Container9removeAllEv+0x10>
90011528:	6999      	ldr	r1, [r3, #24]
9001152a:	6281      	str	r1, [r0, #40]	; 0x28
9001152c:	e9c3 2205 	strd	r2, r2, [r3, #20]
90011530:	e7f8      	b.n	90011524 <_ZN8touchgfx9Container9removeAllEv+0x2>
90011532:	4770      	bx	lr

90011534 <_ZN8touchgfx9Container6unlinkEv>:
90011534:	2300      	movs	r3, #0
90011536:	6283      	str	r3, [r0, #40]	; 0x28
90011538:	4770      	bx	lr

9001153a <_ZNK8touchgfx9Container12getSolidRectEv>:
9001153a:	2200      	movs	r2, #0
9001153c:	8002      	strh	r2, [r0, #0]
9001153e:	8042      	strh	r2, [r0, #2]
90011540:	8082      	strh	r2, [r0, #4]
90011542:	80c2      	strh	r2, [r0, #6]
90011544:	4770      	bx	lr

90011546 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90011546:	b570      	push	{r4, r5, r6, lr}
90011548:	460d      	mov	r5, r1
9001154a:	4616      	mov	r6, r2
9001154c:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001154e:	b13c      	cbz	r4, 90011560 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90011550:	6823      	ldr	r3, [r4, #0]
90011552:	4620      	mov	r0, r4
90011554:	4632      	mov	r2, r6
90011556:	4629      	mov	r1, r5
90011558:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001155a:	4798      	blx	r3
9001155c:	69a4      	ldr	r4, [r4, #24]
9001155e:	e7f6      	b.n	9001154e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90011560:	bd70      	pop	{r4, r5, r6, pc}

90011562 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90011562:	b538      	push	{r3, r4, r5, lr}
90011564:	460d      	mov	r5, r1
90011566:	6a84      	ldr	r4, [r0, #40]	; 0x28
90011568:	b134      	cbz	r4, 90011578 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9001156a:	682b      	ldr	r3, [r5, #0]
9001156c:	4621      	mov	r1, r4
9001156e:	4628      	mov	r0, r5
90011570:	689b      	ldr	r3, [r3, #8]
90011572:	4798      	blx	r3
90011574:	69a4      	ldr	r4, [r4, #24]
90011576:	e7f7      	b.n	90011568 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
90011578:	bd38      	pop	{r3, r4, r5, pc}

9001157a <_ZN8touchgfx9ContainerD1Ev>:
9001157a:	4770      	bx	lr

9001157c <_ZN8touchgfx9ContainerD0Ev>:
9001157c:	b510      	push	{r4, lr}
9001157e:	4604      	mov	r4, r0
90011580:	212c      	movs	r1, #44	; 0x2c
90011582:	f016 fd57 	bl	90028034 <_ZdlPvj>
90011586:	4620      	mov	r0, r4
90011588:	bd10      	pop	{r4, pc}

9001158a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9001158a:	6a83      	ldr	r3, [r0, #40]	; 0x28
9001158c:	b19b      	cbz	r3, 900115b6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9001158e:	428b      	cmp	r3, r1
90011590:	d109      	bne.n	900115a6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90011592:	699a      	ldr	r2, [r3, #24]
90011594:	2100      	movs	r1, #0
90011596:	6159      	str	r1, [r3, #20]
90011598:	6282      	str	r2, [r0, #40]	; 0x28
9001159a:	b902      	cbnz	r2, 9001159e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
9001159c:	4770      	bx	lr
9001159e:	6199      	str	r1, [r3, #24]
900115a0:	4770      	bx	lr
900115a2:	4613      	mov	r3, r2
900115a4:	b13a      	cbz	r2, 900115b6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900115a6:	699a      	ldr	r2, [r3, #24]
900115a8:	428a      	cmp	r2, r1
900115aa:	d1fa      	bne.n	900115a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
900115ac:	698a      	ldr	r2, [r1, #24]
900115ae:	619a      	str	r2, [r3, #24]
900115b0:	2300      	movs	r3, #0
900115b2:	e9c1 3305 	strd	r3, r3, [r1, #20]
900115b6:	4770      	bx	lr

900115b8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
900115b8:	b410      	push	{r4}
900115ba:	6a83      	ldr	r3, [r0, #40]	; 0x28
900115bc:	4604      	mov	r4, r0
900115be:	b92b      	cbnz	r3, 900115cc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
900115c0:	6803      	ldr	r3, [r0, #0]
900115c2:	4611      	mov	r1, r2
900115c4:	f85d 4b04 	ldr.w	r4, [sp], #4
900115c8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900115ca:	4718      	bx	r3
900115cc:	b941      	cbnz	r1, 900115e0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
900115ce:	6193      	str	r3, [r2, #24]
900115d0:	6282      	str	r2, [r0, #40]	; 0x28
900115d2:	6154      	str	r4, [r2, #20]
900115d4:	f85d 4b04 	ldr.w	r4, [sp], #4
900115d8:	4770      	bx	lr
900115da:	4603      	mov	r3, r0
900115dc:	2800      	cmp	r0, #0
900115de:	d0f9      	beq.n	900115d4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
900115e0:	4299      	cmp	r1, r3
900115e2:	6998      	ldr	r0, [r3, #24]
900115e4:	d1f9      	bne.n	900115da <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
900115e6:	6190      	str	r0, [r2, #24]
900115e8:	618a      	str	r2, [r1, #24]
900115ea:	e7f2      	b.n	900115d2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

900115ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
900115ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900115f0:	461f      	mov	r7, r3
900115f2:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
900115f6:	460d      	mov	r5, r1
900115f8:	4616      	mov	r6, r2
900115fa:	b103      	cbz	r3, 900115fe <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
900115fc:	6038      	str	r0, [r7, #0]
900115fe:	6a84      	ldr	r4, [r0, #40]	; 0x28
90011600:	b314      	cbz	r4, 90011648 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90011602:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90011606:	b1eb      	cbz	r3, 90011644 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011608:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001160c:	428d      	cmp	r5, r1
9001160e:	db19      	blt.n	90011644 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011610:	b289      	uxth	r1, r1
90011612:	8923      	ldrh	r3, [r4, #8]
90011614:	440b      	add	r3, r1
90011616:	b21b      	sxth	r3, r3
90011618:	429d      	cmp	r5, r3
9001161a:	da13      	bge.n	90011644 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001161c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90011620:	4296      	cmp	r6, r2
90011622:	db0f      	blt.n	90011644 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011624:	b292      	uxth	r2, r2
90011626:	8963      	ldrh	r3, [r4, #10]
90011628:	4413      	add	r3, r2
9001162a:	b21b      	sxth	r3, r3
9001162c:	429e      	cmp	r6, r3
9001162e:	da09      	bge.n	90011644 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011630:	6823      	ldr	r3, [r4, #0]
90011632:	1ab2      	subs	r2, r6, r2
90011634:	1a69      	subs	r1, r5, r1
90011636:	4620      	mov	r0, r4
90011638:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
9001163c:	b212      	sxth	r2, r2
9001163e:	463b      	mov	r3, r7
90011640:	b209      	sxth	r1, r1
90011642:	47c0      	blx	r8
90011644:	69a4      	ldr	r4, [r4, #24]
90011646:	e7db      	b.n	90011600 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90011648:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001164c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
9001164c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011650:	4c6d      	ldr	r4, [pc, #436]	; (90011808 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90011652:	b0a1      	sub	sp, #132	; 0x84
90011654:	4606      	mov	r6, r0
90011656:	6824      	ldr	r4, [r4, #0]
90011658:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9001165a:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
9001165e:	2400      	movs	r4, #0
90011660:	9303      	str	r3, [sp, #12]
90011662:	802c      	strh	r4, [r5, #0]
90011664:	9d2b      	ldr	r5, [sp, #172]	; 0xac
90011666:	802c      	strh	r4, [r5, #0]
90011668:	601c      	str	r4, [r3, #0]
9001166a:	e9cd 1201 	strd	r1, r2, [sp, #4]
9001166e:	f7ff ffbd 	bl	900115ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90011672:	f1b9 0f03 	cmp.w	r9, #3
90011676:	f340 80c1 	ble.w	900117fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
9001167a:	4631      	mov	r1, r6
9001167c:	a80c      	add	r0, sp, #48	; 0x30
9001167e:	f006 fcd7 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011682:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
90011686:	9306      	str	r3, [sp, #24]
90011688:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001168c:	9307      	str	r3, [sp, #28]
9001168e:	9b03      	ldr	r3, [sp, #12]
90011690:	f8d3 a000 	ldr.w	sl, [r3]
90011694:	f1ba 0f00 	cmp.w	sl, #0
90011698:	f000 80b3 	beq.w	90011802 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
9001169c:	4651      	mov	r1, sl
9001169e:	a810      	add	r0, sp, #64	; 0x40
900116a0:	f006 fcc6 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900116a4:	2002      	movs	r0, #2
900116a6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
900116aa:	9b01      	ldr	r3, [sp, #4]
900116ac:	9a06      	ldr	r2, [sp, #24]
900116ae:	fb91 f1f0 	sdiv	r1, r1, r0
900116b2:	189d      	adds	r5, r3, r2
900116b4:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
900116b8:	9a07      	ldr	r2, [sp, #28]
900116ba:	4419      	add	r1, r3
900116bc:	9b02      	ldr	r3, [sp, #8]
900116be:	4413      	add	r3, r2
900116c0:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
900116c4:	1a6d      	subs	r5, r5, r1
900116c6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
900116ca:	fb92 f2f0 	sdiv	r2, r2, r0
900116ce:	440a      	add	r2, r1
900116d0:	1a9b      	subs	r3, r3, r2
900116d2:	435b      	muls	r3, r3
900116d4:	fb05 3505 	mla	r5, r5, r5, r3
900116d8:	4f4c      	ldr	r7, [pc, #304]	; (9001180c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
900116da:	ac10      	add	r4, sp, #64	; 0x40
900116dc:	f1b9 0f0c 	cmp.w	r9, #12
900116e0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900116e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900116e4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900116e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900116e8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900116ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900116ec:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
900116f0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
900116f4:	f04f 0303 	mov.w	r3, #3
900116f8:	bfd8      	it	le
900116fa:	f109 32ff 	addle.w	r2, r9, #4294967295
900116fe:	f04f 0400 	mov.w	r4, #0
90011702:	f8cd 9000 	str.w	r9, [sp]
90011706:	bfcc      	ite	gt
90011708:	4698      	movgt	r8, r3
9001170a:	fb92 f8f3 	sdivle	r8, r2, r3
9001170e:	1c63      	adds	r3, r4, #1
90011710:	aa10      	add	r2, sp, #64	; 0x40
90011712:	f004 0401 	and.w	r4, r4, #1
90011716:	f04f 0b00 	mov.w	fp, #0
9001171a:	9308      	str	r3, [sp, #32]
9001171c:	9b00      	ldr	r3, [sp, #0]
9001171e:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90011722:	fb93 f3f8 	sdiv	r3, r3, r8
90011726:	3404      	adds	r4, #4
90011728:	b29b      	uxth	r3, r3
9001172a:	9304      	str	r3, [sp, #16]
9001172c:	9a04      	ldr	r2, [sp, #16]
9001172e:	f854 3c04 	ldr.w	r3, [r4, #-4]
90011732:	fb13 f302 	smulbb	r3, r3, r2
90011736:	9a01      	ldr	r2, [sp, #4]
90011738:	b29b      	uxth	r3, r3
9001173a:	1899      	adds	r1, r3, r2
9001173c:	9305      	str	r3, [sp, #20]
9001173e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90011742:	b209      	sxth	r1, r1
90011744:	4299      	cmp	r1, r3
90011746:	db4d      	blt.n	900117e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011748:	8932      	ldrh	r2, [r6, #8]
9001174a:	4413      	add	r3, r2
9001174c:	b21b      	sxth	r3, r3
9001174e:	4299      	cmp	r1, r3
90011750:	da48      	bge.n	900117e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011752:	9b04      	ldr	r3, [sp, #16]
90011754:	6827      	ldr	r7, [r4, #0]
90011756:	fb17 f703 	smulbb	r7, r7, r3
9001175a:	9b02      	ldr	r3, [sp, #8]
9001175c:	b2bf      	uxth	r7, r7
9001175e:	18fa      	adds	r2, r7, r3
90011760:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90011764:	b212      	sxth	r2, r2
90011766:	429a      	cmp	r2, r3
90011768:	db3c      	blt.n	900117e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001176a:	8970      	ldrh	r0, [r6, #10]
9001176c:	4403      	add	r3, r0
9001176e:	b21b      	sxth	r3, r3
90011770:	429a      	cmp	r2, r3
90011772:	da37      	bge.n	900117e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011774:	2300      	movs	r3, #0
90011776:	4630      	mov	r0, r6
90011778:	930b      	str	r3, [sp, #44]	; 0x2c
9001177a:	ab0b      	add	r3, sp, #44	; 0x2c
9001177c:	f7ff ff36 	bl	900115ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90011780:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90011782:	b37a      	cbz	r2, 900117e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011784:	4552      	cmp	r2, sl
90011786:	d02d      	beq.n	900117e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011788:	4611      	mov	r1, r2
9001178a:	a80e      	add	r0, sp, #56	; 0x38
9001178c:	9209      	str	r2, [sp, #36]	; 0x24
9001178e:	f006 fc4f 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011792:	f04f 0e02 	mov.w	lr, #2
90011796:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
9001179a:	9a06      	ldr	r2, [sp, #24]
9001179c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
900117a0:	9b01      	ldr	r3, [sp, #4]
900117a2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
900117a6:	4413      	add	r3, r2
900117a8:	9a07      	ldr	r2, [sp, #28]
900117aa:	fb91 f1fe 	sdiv	r1, r1, lr
900117ae:	fb9c fcfe 	sdiv	ip, ip, lr
900117b2:	4401      	add	r1, r0
900117b4:	1a58      	subs	r0, r3, r1
900117b6:	9b02      	ldr	r3, [sp, #8]
900117b8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
900117bc:	4413      	add	r3, r2
900117be:	9a09      	ldr	r2, [sp, #36]	; 0x24
900117c0:	448c      	add	ip, r1
900117c2:	eba3 030c 	sub.w	r3, r3, ip
900117c6:	435b      	muls	r3, r3
900117c8:	fb00 3300 	mla	r3, r0, r0, r3
900117cc:	42ab      	cmp	r3, r5
900117ce:	d208      	bcs.n	900117e2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
900117d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
900117d2:	461d      	mov	r5, r3
900117d4:	9803      	ldr	r0, [sp, #12]
900117d6:	6001      	str	r1, [r0, #0]
900117d8:	992a      	ldr	r1, [sp, #168]	; 0xa8
900117da:	9805      	ldr	r0, [sp, #20]
900117dc:	8008      	strh	r0, [r1, #0]
900117de:	992b      	ldr	r1, [sp, #172]	; 0xac
900117e0:	800f      	strh	r7, [r1, #0]
900117e2:	4692      	mov	sl, r2
900117e4:	f10b 0b01 	add.w	fp, fp, #1
900117e8:	3408      	adds	r4, #8
900117ea:	f1bb 0f04 	cmp.w	fp, #4
900117ee:	d19d      	bne.n	9001172c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
900117f0:	9b00      	ldr	r3, [sp, #0]
900117f2:	9c08      	ldr	r4, [sp, #32]
900117f4:	444b      	add	r3, r9
900117f6:	4544      	cmp	r4, r8
900117f8:	9300      	str	r3, [sp, #0]
900117fa:	d188      	bne.n	9001170e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
900117fc:	b021      	add	sp, #132	; 0x84
900117fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011802:	f04f 35ff 	mov.w	r5, #4294967295
90011806:	e767      	b.n	900116d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90011808:	2403989c 	.word	0x2403989c
9001180c:	90029110 	.word	0x90029110

90011810 <_ZN8touchgfx4RectaNERKS0_>:
90011810:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011814:	f9b1 7000 	ldrsh.w	r7, [r1]
90011818:	888c      	ldrh	r4, [r1, #4]
9001181a:	f9b0 9000 	ldrsh.w	r9, [r0]
9001181e:	443c      	add	r4, r7
90011820:	b2a4      	uxth	r4, r4
90011822:	fa0f f884 	sxth.w	r8, r4
90011826:	45c1      	cmp	r9, r8
90011828:	da2f      	bge.n	9001188a <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001182a:	8882      	ldrh	r2, [r0, #4]
9001182c:	444a      	add	r2, r9
9001182e:	b292      	uxth	r2, r2
90011830:	fa0f fe82 	sxth.w	lr, r2
90011834:	4577      	cmp	r7, lr
90011836:	da28      	bge.n	9001188a <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011838:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9001183c:	88cb      	ldrh	r3, [r1, #6]
9001183e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90011842:	442b      	add	r3, r5
90011844:	b21b      	sxth	r3, r3
90011846:	429e      	cmp	r6, r3
90011848:	da1f      	bge.n	9001188a <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001184a:	88c3      	ldrh	r3, [r0, #6]
9001184c:	4433      	add	r3, r6
9001184e:	b29b      	uxth	r3, r3
90011850:	fa0f fc83 	sxth.w	ip, r3
90011854:	4565      	cmp	r5, ip
90011856:	da18      	bge.n	9001188a <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011858:	454f      	cmp	r7, r9
9001185a:	bfb8      	it	lt
9001185c:	464f      	movlt	r7, r9
9001185e:	42b5      	cmp	r5, r6
90011860:	bfb8      	it	lt
90011862:	4635      	movlt	r5, r6
90011864:	45f0      	cmp	r8, lr
90011866:	bfd8      	it	le
90011868:	4622      	movle	r2, r4
9001186a:	1bd2      	subs	r2, r2, r7
9001186c:	8082      	strh	r2, [r0, #4]
9001186e:	884a      	ldrh	r2, [r1, #2]
90011870:	88c9      	ldrh	r1, [r1, #6]
90011872:	8007      	strh	r7, [r0, #0]
90011874:	440a      	add	r2, r1
90011876:	8045      	strh	r5, [r0, #2]
90011878:	b292      	uxth	r2, r2
9001187a:	b211      	sxth	r1, r2
9001187c:	458c      	cmp	ip, r1
9001187e:	bfa8      	it	ge
90011880:	4613      	movge	r3, r2
90011882:	1b5b      	subs	r3, r3, r5
90011884:	80c3      	strh	r3, [r0, #6]
90011886:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001188a:	2300      	movs	r3, #0
9001188c:	8003      	strh	r3, [r0, #0]
9001188e:	8043      	strh	r3, [r0, #2]
90011890:	8083      	strh	r3, [r0, #4]
90011892:	80c3      	strh	r3, [r0, #6]
90011894:	e7f7      	b.n	90011886 <_ZN8touchgfx4RectaNERKS0_+0x76>

90011896 <_ZNK8touchgfx4Rect7isEmptyEv>:
90011896:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001189a:	2b00      	cmp	r3, #0
9001189c:	dd06      	ble.n	900118ac <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
9001189e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
900118a2:	2800      	cmp	r0, #0
900118a4:	bfcc      	ite	gt
900118a6:	2000      	movgt	r0, #0
900118a8:	2001      	movle	r0, #1
900118aa:	4770      	bx	lr
900118ac:	2001      	movs	r0, #1
900118ae:	4770      	bx	lr

900118b0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
900118b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900118b4:	2300      	movs	r3, #0
900118b6:	4604      	mov	r4, r0
900118b8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
900118ba:	8003      	strh	r3, [r0, #0]
900118bc:	8043      	strh	r3, [r0, #2]
900118be:	8083      	strh	r3, [r0, #4]
900118c0:	80c3      	strh	r3, [r0, #6]
900118c2:	2d00      	cmp	r5, #0
900118c4:	d040      	beq.n	90011948 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
900118c6:	1d28      	adds	r0, r5, #4
900118c8:	f7ff ffe5 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
900118cc:	b988      	cbnz	r0, 900118f2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900118ce:	4620      	mov	r0, r4
900118d0:	f7ff ffe1 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
900118d4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900118d8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900118dc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
900118e0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
900118e4:	b138      	cbz	r0, 900118f6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
900118e6:	8022      	strh	r2, [r4, #0]
900118e8:	8063      	strh	r3, [r4, #2]
900118ea:	f8a4 e004 	strh.w	lr, [r4, #4]
900118ee:	f8a4 c006 	strh.w	ip, [r4, #6]
900118f2:	69ad      	ldr	r5, [r5, #24]
900118f4:	e7e5      	b.n	900118c2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
900118f6:	f9b4 0000 	ldrsh.w	r0, [r4]
900118fa:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900118fe:	4290      	cmp	r0, r2
90011900:	4607      	mov	r7, r0
90011902:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90011906:	460e      	mov	r6, r1
90011908:	bfa8      	it	ge
9001190a:	4617      	movge	r7, r2
9001190c:	4299      	cmp	r1, r3
9001190e:	4472      	add	r2, lr
90011910:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90011914:	bfa8      	it	ge
90011916:	461e      	movge	r6, r3
90011918:	4440      	add	r0, r8
9001191a:	4471      	add	r1, lr
9001191c:	4463      	add	r3, ip
9001191e:	b200      	sxth	r0, r0
90011920:	8027      	strh	r7, [r4, #0]
90011922:	b212      	sxth	r2, r2
90011924:	8066      	strh	r6, [r4, #2]
90011926:	b209      	sxth	r1, r1
90011928:	b21b      	sxth	r3, r3
9001192a:	4290      	cmp	r0, r2
9001192c:	bfac      	ite	ge
9001192e:	ebc7 0200 	rsbge	r2, r7, r0
90011932:	ebc7 0202 	rsblt	r2, r7, r2
90011936:	4299      	cmp	r1, r3
90011938:	bfac      	ite	ge
9001193a:	ebc6 0301 	rsbge	r3, r6, r1
9001193e:	ebc6 0303 	rsblt	r3, r6, r3
90011942:	80a2      	strh	r2, [r4, #4]
90011944:	80e3      	strh	r3, [r4, #6]
90011946:	e7d4      	b.n	900118f2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90011948:	4620      	mov	r0, r4
9001194a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001194e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
9001194e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90011952:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90011956:	b383      	cbz	r3, 900119ba <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90011958:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001195a:	b374      	cbz	r4, 900119ba <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9001195c:	f9b1 5000 	ldrsh.w	r5, [r1]
90011960:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90011964:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90011968:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
9001196c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90011970:	b303      	cbz	r3, 900119b4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90011972:	4668      	mov	r0, sp
90011974:	1d21      	adds	r1, r4, #4
90011976:	f8ad 5000 	strh.w	r5, [sp]
9001197a:	f8ad 6002 	strh.w	r6, [sp, #2]
9001197e:	f8ad 7004 	strh.w	r7, [sp, #4]
90011982:	f8ad 8006 	strh.w	r8, [sp, #6]
90011986:	f7ff ff43 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
9001198a:	4668      	mov	r0, sp
9001198c:	f7ff ff83 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
90011990:	b980      	cbnz	r0, 900119b4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90011992:	f8bd 3000 	ldrh.w	r3, [sp]
90011996:	4669      	mov	r1, sp
90011998:	88a2      	ldrh	r2, [r4, #4]
9001199a:	4620      	mov	r0, r4
9001199c:	1a9b      	subs	r3, r3, r2
9001199e:	88e2      	ldrh	r2, [r4, #6]
900119a0:	f8ad 3000 	strh.w	r3, [sp]
900119a4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900119a8:	1a9b      	subs	r3, r3, r2
900119aa:	f8ad 3002 	strh.w	r3, [sp, #2]
900119ae:	6823      	ldr	r3, [r4, #0]
900119b0:	689b      	ldr	r3, [r3, #8]
900119b2:	4798      	blx	r3
900119b4:	69a4      	ldr	r4, [r4, #24]
900119b6:	2c00      	cmp	r4, #0
900119b8:	d1d8      	bne.n	9001196c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
900119ba:	b002      	add	sp, #8
900119bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900119c0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
900119c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
900119c2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
900119c6:	460d      	mov	r5, r1
900119c8:	4616      	mov	r6, r2
900119ca:	b323      	cbz	r3, 90011a16 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
900119cc:	6a84      	ldr	r4, [r0, #40]	; 0x28
900119ce:	b314      	cbz	r4, 90011a16 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
900119d0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
900119d4:	b1eb      	cbz	r3, 90011a12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900119d6:	6828      	ldr	r0, [r5, #0]
900119d8:	466b      	mov	r3, sp
900119da:	6869      	ldr	r1, [r5, #4]
900119dc:	c303      	stmia	r3!, {r0, r1}
900119de:	4668      	mov	r0, sp
900119e0:	1d21      	adds	r1, r4, #4
900119e2:	f7ff ff15 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
900119e6:	4668      	mov	r0, sp
900119e8:	f7ff ff55 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
900119ec:	b988      	cbnz	r0, 90011a12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900119ee:	f8bd 3000 	ldrh.w	r3, [sp]
900119f2:	4669      	mov	r1, sp
900119f4:	88a2      	ldrh	r2, [r4, #4]
900119f6:	4620      	mov	r0, r4
900119f8:	1a9b      	subs	r3, r3, r2
900119fa:	88e2      	ldrh	r2, [r4, #6]
900119fc:	f8ad 3000 	strh.w	r3, [sp]
90011a00:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011a04:	1a9b      	subs	r3, r3, r2
90011a06:	4632      	mov	r2, r6
90011a08:	f8ad 3002 	strh.w	r3, [sp, #2]
90011a0c:	6823      	ldr	r3, [r4, #0]
90011a0e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90011a10:	4798      	blx	r3
90011a12:	69a4      	ldr	r4, [r4, #24]
90011a14:	e7db      	b.n	900119ce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
90011a16:	b002      	add	sp, #8
90011a18:	bd70      	pop	{r4, r5, r6, pc}

90011a1a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90011a1a:	6803      	ldr	r3, [r0, #0]
90011a1c:	b513      	push	{r0, r1, r4, lr}
90011a1e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
90011a22:	2300      	movs	r3, #0
90011a24:	e9cd 3300 	strd	r3, r3, [sp]
90011a28:	466b      	mov	r3, sp
90011a2a:	47a0      	blx	r4
90011a2c:	b002      	add	sp, #8
90011a2e:	bd10      	pop	{r4, pc}

90011a30 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90011a30:	2301      	movs	r3, #1
90011a32:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90011a36:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90011a3a:	4770      	bx	lr

90011a3c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90011a3c:	2301      	movs	r3, #1
90011a3e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90011a42:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90011a46:	4770      	bx	lr

90011a48 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90011a48:	6843      	ldr	r3, [r0, #4]
90011a4a:	2201      	movs	r2, #1
90011a4c:	725a      	strb	r2, [r3, #9]
90011a4e:	6840      	ldr	r0, [r0, #4]
90011a50:	6803      	ldr	r3, [r0, #0]
90011a52:	691b      	ldr	r3, [r3, #16]
90011a54:	4718      	bx	r3

90011a56 <_ZN8touchgfx3HAL8flushDMAEv>:
90011a56:	6840      	ldr	r0, [r0, #4]
90011a58:	6803      	ldr	r3, [r0, #0]
90011a5a:	689b      	ldr	r3, [r3, #8]
90011a5c:	4718      	bx	r3

90011a5e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90011a5e:	b530      	push	{r4, r5, lr}
90011a60:	b08b      	sub	sp, #44	; 0x2c
90011a62:	6804      	ldr	r4, [r0, #0]
90011a64:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90011a68:	9509      	str	r5, [sp, #36]	; 0x24
90011a6a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
90011a6e:	9508      	str	r5, [sp, #32]
90011a70:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
90011a74:	9507      	str	r5, [sp, #28]
90011a76:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
90011a7a:	9506      	str	r5, [sp, #24]
90011a7c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
90011a80:	9505      	str	r5, [sp, #20]
90011a82:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
90011a86:	9504      	str	r5, [sp, #16]
90011a88:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
90011a8c:	9503      	str	r5, [sp, #12]
90011a8e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
90011a92:	9502      	str	r5, [sp, #8]
90011a94:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
90011a98:	e9cd 3500 	strd	r3, r5, [sp]
90011a9c:	4613      	mov	r3, r2
90011a9e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
90011aa0:	2200      	movs	r2, #0
90011aa2:	47a0      	blx	r4
90011aa4:	b00b      	add	sp, #44	; 0x2c
90011aa6:	bd30      	pop	{r4, r5, pc}

90011aa8 <_ZN8touchgfx3HAL10beginFrameEv>:
90011aa8:	4b04      	ldr	r3, [pc, #16]	; (90011abc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90011aaa:	781b      	ldrb	r3, [r3, #0]
90011aac:	b123      	cbz	r3, 90011ab8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90011aae:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
90011ab2:	f080 0001 	eor.w	r0, r0, #1
90011ab6:	4770      	bx	lr
90011ab8:	2001      	movs	r0, #1
90011aba:	4770      	bx	lr
90011abc:	2403989a 	.word	0x2403989a

90011ac0 <_ZN8touchgfx3HAL8endFrameEv>:
90011ac0:	b510      	push	{r4, lr}
90011ac2:	4604      	mov	r4, r0
90011ac4:	6840      	ldr	r0, [r0, #4]
90011ac6:	6803      	ldr	r3, [r0, #0]
90011ac8:	689b      	ldr	r3, [r3, #8]
90011aca:	4798      	blx	r3
90011acc:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
90011ad0:	b113      	cbz	r3, 90011ad8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
90011ad2:	2301      	movs	r3, #1
90011ad4:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90011ad8:	bd10      	pop	{r4, pc}

90011ada <_ZN8touchgfx3HAL10initializeEv>:
90011ada:	b510      	push	{r4, lr}
90011adc:	4604      	mov	r4, r0
90011ade:	f7ef fea9 	bl	90001834 <_ZN8touchgfx10OSWrappers10initializeEv>
90011ae2:	f7ee fd0d 	bl	90000500 <_ZN8touchgfx4GPIO4initEv>
90011ae6:	6860      	ldr	r0, [r4, #4]
90011ae8:	6803      	ldr	r3, [r0, #0]
90011aea:	68db      	ldr	r3, [r3, #12]
90011aec:	4798      	blx	r3
90011aee:	68e0      	ldr	r0, [r4, #12]
90011af0:	6803      	ldr	r3, [r0, #0]
90011af2:	689b      	ldr	r3, [r3, #8]
90011af4:	4798      	blx	r3
90011af6:	6823      	ldr	r3, [r4, #0]
90011af8:	4620      	mov	r0, r4
90011afa:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90011afc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011b00:	4718      	bx	r3
	...

90011b04 <_ZN8touchgfx3HAL4tickEv>:
90011b04:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90011b06:	6803      	ldr	r3, [r0, #0]
90011b08:	4604      	mov	r4, r0
90011b0a:	4d5b      	ldr	r5, [pc, #364]	; (90011c78 <_ZN8touchgfx3HAL4tickEv+0x174>)
90011b0c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90011b10:	4798      	blx	r3
90011b12:	2800      	cmp	r0, #0
90011b14:	f000 8095 	beq.w	90011c42 <_ZN8touchgfx3HAL4tickEv+0x13e>
90011b18:	2001      	movs	r0, #1
90011b1a:	2600      	movs	r6, #0
90011b1c:	f7ee fd1a 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90011b20:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
90011b24:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
90011b28:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90011b2c:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
90011b30:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
90011b34:	b133      	cbz	r3, 90011b44 <_ZN8touchgfx3HAL4tickEv+0x40>
90011b36:	6823      	ldr	r3, [r4, #0]
90011b38:	4620      	mov	r0, r4
90011b3a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
90011b3e:	4798      	blx	r3
90011b40:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
90011b44:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
90011b48:	2601      	movs	r6, #1
90011b4a:	6862      	ldr	r2, [r4, #4]
90011b4c:	f083 0301 	eor.w	r3, r3, #1
90011b50:	702e      	strb	r6, [r5, #0]
90011b52:	7253      	strb	r3, [r2, #9]
90011b54:	f005 f930 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
90011b58:	6803      	ldr	r3, [r0, #0]
90011b5a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90011b5c:	4798      	blx	r3
90011b5e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90011b62:	b90b      	cbnz	r3, 90011b68 <_ZN8touchgfx3HAL4tickEv+0x64>
90011b64:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
90011b68:	f005 f926 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
90011b6c:	6803      	ldr	r3, [r0, #0]
90011b6e:	695b      	ldr	r3, [r3, #20]
90011b70:	4798      	blx	r3
90011b72:	6de0      	ldr	r0, [r4, #92]	; 0x5c
90011b74:	6803      	ldr	r3, [r0, #0]
90011b76:	691b      	ldr	r3, [r3, #16]
90011b78:	4798      	blx	r3
90011b7a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90011b7e:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
90011b82:	3b01      	subs	r3, #1
90011b84:	b2db      	uxtb	r3, r3
90011b86:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90011b8a:	b10a      	cbz	r2, 90011b90 <_ZN8touchgfx3HAL4tickEv+0x8c>
90011b8c:	2b00      	cmp	r3, #0
90011b8e:	d1eb      	bne.n	90011b68 <_ZN8touchgfx3HAL4tickEv+0x64>
90011b90:	4a3a      	ldr	r2, [pc, #232]	; (90011c7c <_ZN8touchgfx3HAL4tickEv+0x178>)
90011b92:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
90011b96:	7813      	ldrb	r3, [r2, #0]
90011b98:	3301      	adds	r3, #1
90011b9a:	b25b      	sxtb	r3, r3
90011b9c:	4299      	cmp	r1, r3
90011b9e:	7013      	strb	r3, [r2, #0]
90011ba0:	dc10      	bgt.n	90011bc4 <_ZN8touchgfx3HAL4tickEv+0xc0>
90011ba2:	2300      	movs	r3, #0
90011ba4:	68e0      	ldr	r0, [r4, #12]
90011ba6:	a902      	add	r1, sp, #8
90011ba8:	7013      	strb	r3, [r2, #0]
90011baa:	aa03      	add	r2, sp, #12
90011bac:	6803      	ldr	r3, [r0, #0]
90011bae:	68db      	ldr	r3, [r3, #12]
90011bb0:	4798      	blx	r3
90011bb2:	6823      	ldr	r3, [r4, #0]
90011bb4:	2800      	cmp	r0, #0
90011bb6:	d050      	beq.n	90011c5a <_ZN8touchgfx3HAL4tickEv+0x156>
90011bb8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
90011bbc:	4620      	mov	r0, r4
90011bbe:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90011bc2:	4798      	blx	r3
90011bc4:	2300      	movs	r3, #0
90011bc6:	6960      	ldr	r0, [r4, #20]
90011bc8:	f88d 3007 	strb.w	r3, [sp, #7]
90011bcc:	b158      	cbz	r0, 90011be6 <_ZN8touchgfx3HAL4tickEv+0xe2>
90011bce:	6803      	ldr	r3, [r0, #0]
90011bd0:	f10d 0107 	add.w	r1, sp, #7
90011bd4:	68db      	ldr	r3, [r3, #12]
90011bd6:	4798      	blx	r3
90011bd8:	b128      	cbz	r0, 90011be6 <_ZN8touchgfx3HAL4tickEv+0xe2>
90011bda:	6de0      	ldr	r0, [r4, #92]	; 0x5c
90011bdc:	f89d 1007 	ldrb.w	r1, [sp, #7]
90011be0:	6803      	ldr	r3, [r0, #0]
90011be2:	68db      	ldr	r3, [r3, #12]
90011be4:	4798      	blx	r3
90011be6:	f104 001c 	add.w	r0, r4, #28
90011bea:	f015 fe27 	bl	9002783c <_ZN8touchgfx8Gestures4tickEv>
90011bee:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
90011bf2:	b30b      	cbz	r3, 90011c38 <_ZN8touchgfx3HAL4tickEv+0x134>
90011bf4:	6920      	ldr	r0, [r4, #16]
90011bf6:	6803      	ldr	r3, [r0, #0]
90011bf8:	691b      	ldr	r3, [r3, #16]
90011bfa:	4798      	blx	r3
90011bfc:	6f63      	ldr	r3, [r4, #116]	; 0x74
90011bfe:	4606      	mov	r6, r0
90011c00:	b903      	cbnz	r3, 90011c04 <_ZN8touchgfx3HAL4tickEv+0x100>
90011c02:	6760      	str	r0, [r4, #116]	; 0x74
90011c04:	6f63      	ldr	r3, [r4, #116]	; 0x74
90011c06:	4a1e      	ldr	r2, [pc, #120]	; (90011c80 <_ZN8touchgfx3HAL4tickEv+0x17c>)
90011c08:	1af3      	subs	r3, r6, r3
90011c0a:	4293      	cmp	r3, r2
90011c0c:	d914      	bls.n	90011c38 <_ZN8touchgfx3HAL4tickEv+0x134>
90011c0e:	6920      	ldr	r0, [r4, #16]
90011c10:	6803      	ldr	r3, [r0, #0]
90011c12:	699b      	ldr	r3, [r3, #24]
90011c14:	4798      	blx	r3
90011c16:	6f63      	ldr	r3, [r4, #116]	; 0x74
90011c18:	2264      	movs	r2, #100	; 0x64
90011c1a:	1af3      	subs	r3, r6, r3
90011c1c:	fbb3 f3f2 	udiv	r3, r3, r2
90011c20:	fbb0 f0f3 	udiv	r0, r0, r3
90011c24:	2800      	cmp	r0, #0
90011c26:	dc1d      	bgt.n	90011c64 <_ZN8touchgfx3HAL4tickEv+0x160>
90011c28:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
90011c2c:	6920      	ldr	r0, [r4, #16]
90011c2e:	2100      	movs	r1, #0
90011c30:	6803      	ldr	r3, [r0, #0]
90011c32:	69db      	ldr	r3, [r3, #28]
90011c34:	4798      	blx	r3
90011c36:	6766      	str	r6, [r4, #116]	; 0x74
90011c38:	f005 f8be 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
90011c3c:	6803      	ldr	r3, [r0, #0]
90011c3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011c40:	4798      	blx	r3
90011c42:	6823      	ldr	r3, [r4, #0]
90011c44:	4620      	mov	r0, r4
90011c46:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
90011c4a:	4798      	blx	r3
90011c4c:	2001      	movs	r0, #1
90011c4e:	f7ee fcb5 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90011c52:	2300      	movs	r3, #0
90011c54:	702b      	strb	r3, [r5, #0]
90011c56:	b004      	add	sp, #16
90011c58:	bd70      	pop	{r4, r5, r6, pc}
90011c5a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
90011c5e:	4620      	mov	r0, r4
90011c60:	4798      	blx	r3
90011c62:	e7af      	b.n	90011bc4 <_ZN8touchgfx3HAL4tickEv+0xc0>
90011c64:	2863      	cmp	r0, #99	; 0x63
90011c66:	bfcb      	itete	gt
90011c68:	2300      	movgt	r3, #0
90011c6a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
90011c6e:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
90011c72:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
90011c76:	e7d9      	b.n	90011c2c <_ZN8touchgfx3HAL4tickEv+0x128>
90011c78:	240398a0 	.word	0x240398a0
90011c7c:	240398a1 	.word	0x240398a1
90011c80:	05f5e100 	.word	0x05f5e100

90011c84 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90011c84:	b510      	push	{r4, lr}
90011c86:	4604      	mov	r4, r0
90011c88:	f7ef fe06 	bl	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90011c8c:	2200      	movs	r2, #0
90011c8e:	6863      	ldr	r3, [r4, #4]
90011c90:	729a      	strb	r2, [r3, #10]
90011c92:	bd10      	pop	{r4, pc}

90011c94 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90011c94:	65c1      	str	r1, [r0, #92]	; 0x5c
90011c96:	301c      	adds	r0, #28
90011c98:	f015 bdce 	b.w	90027838 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90011c9c <_ZN8touchgfx3HAL5touchEll>:
90011c9c:	b530      	push	{r4, r5, lr}
90011c9e:	b087      	sub	sp, #28
90011ca0:	4604      	mov	r4, r0
90011ca2:	a804      	add	r0, sp, #16
90011ca4:	e9cd 1204 	strd	r1, r2, [sp, #16]
90011ca8:	f004 fe50 	bl	9001694c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90011cac:	9b04      	ldr	r3, [sp, #16]
90011cae:	a906      	add	r1, sp, #24
90011cb0:	a803      	add	r0, sp, #12
90011cb2:	f8ad 300c 	strh.w	r3, [sp, #12]
90011cb6:	9b05      	ldr	r3, [sp, #20]
90011cb8:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90011cbc:	f004 fe98 	bl	900169f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90011cc0:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
90011cc4:	f104 001c 	add.w	r0, r4, #28
90011cc8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90011ccc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90011cd0:	b189      	cbz	r1, 90011cf6 <_ZN8touchgfx3HAL5touchEll+0x5a>
90011cd2:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
90011cd6:	9300      	str	r3, [sp, #0]
90011cd8:	4613      	mov	r3, r2
90011cda:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
90011cde:	462a      	mov	r2, r5
90011ce0:	f015 fdba 	bl	90027858 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90011ce4:	b128      	cbz	r0, 90011cf2 <_ZN8touchgfx3HAL5touchEll+0x56>
90011ce6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90011cea:	6623      	str	r3, [r4, #96]	; 0x60
90011cec:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90011cf0:	6663      	str	r3, [r4, #100]	; 0x64
90011cf2:	b007      	add	sp, #28
90011cf4:	bd30      	pop	{r4, r5, pc}
90011cf6:	f015 fdef 	bl	900278d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90011cfa:	2301      	movs	r3, #1
90011cfc:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90011d00:	e7f1      	b.n	90011ce6 <_ZN8touchgfx3HAL5touchEll+0x4a>

90011d02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90011d02:	b510      	push	{r4, lr}
90011d04:	2b00      	cmp	r3, #0
90011d06:	d046      	beq.n	90011d96 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011d08:	ea81 0002 	eor.w	r0, r1, r2
90011d0c:	07c4      	lsls	r4, r0, #31
90011d0e:	d508      	bpl.n	90011d22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90011d10:	440b      	add	r3, r1
90011d12:	3a01      	subs	r2, #1
90011d14:	428b      	cmp	r3, r1
90011d16:	d93e      	bls.n	90011d96 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011d18:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90011d1c:	f801 0b01 	strb.w	r0, [r1], #1
90011d20:	e7f8      	b.n	90011d14 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90011d22:	07d0      	lsls	r0, r2, #31
90011d24:	bf42      	ittt	mi
90011d26:	f812 0b01 	ldrbmi.w	r0, [r2], #1
90011d2a:	f103 33ff 	addmi.w	r3, r3, #4294967295
90011d2e:	f801 0b01 	strbmi.w	r0, [r1], #1
90011d32:	2b01      	cmp	r3, #1
90011d34:	d911      	bls.n	90011d5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90011d36:	ea81 0402 	eor.w	r4, r1, r2
90011d3a:	4610      	mov	r0, r2
90011d3c:	07a4      	lsls	r4, r4, #30
90011d3e:	d022      	beq.n	90011d86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90011d40:	f023 0401 	bic.w	r4, r3, #1
90011d44:	440c      	add	r4, r1
90011d46:	428c      	cmp	r4, r1
90011d48:	4602      	mov	r2, r0
90011d4a:	d904      	bls.n	90011d56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90011d4c:	8812      	ldrh	r2, [r2, #0]
90011d4e:	3002      	adds	r0, #2
90011d50:	f821 2b02 	strh.w	r2, [r1], #2
90011d54:	e7f7      	b.n	90011d46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90011d56:	f003 0301 	and.w	r3, r3, #1
90011d5a:	f023 0003 	bic.w	r0, r3, #3
90011d5e:	4408      	add	r0, r1
90011d60:	4288      	cmp	r0, r1
90011d62:	4614      	mov	r4, r2
90011d64:	d904      	bls.n	90011d70 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90011d66:	6824      	ldr	r4, [r4, #0]
90011d68:	3204      	adds	r2, #4
90011d6a:	f841 4b04 	str.w	r4, [r1], #4
90011d6e:	e7f7      	b.n	90011d60 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90011d70:	f003 0303 	and.w	r3, r3, #3
90011d74:	3a01      	subs	r2, #1
90011d76:	440b      	add	r3, r1
90011d78:	428b      	cmp	r3, r1
90011d7a:	d90c      	bls.n	90011d96 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011d7c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90011d80:	f801 0b01 	strb.w	r0, [r1], #1
90011d84:	e7f8      	b.n	90011d78 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90011d86:	0790      	lsls	r0, r2, #30
90011d88:	d0e7      	beq.n	90011d5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90011d8a:	f832 0b02 	ldrh.w	r0, [r2], #2
90011d8e:	3b02      	subs	r3, #2
90011d90:	f821 0b02 	strh.w	r0, [r1], #2
90011d94:	e7e1      	b.n	90011d5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90011d96:	2001      	movs	r0, #1
90011d98:	bd10      	pop	{r4, pc}

90011d9a <_ZN8touchgfx3HAL7noTouchEv>:
90011d9a:	b510      	push	{r4, lr}
90011d9c:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
90011da0:	4604      	mov	r4, r0
90011da2:	b153      	cbz	r3, 90011dba <_ZN8touchgfx3HAL7noTouchEv+0x20>
90011da4:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
90011da8:	2101      	movs	r1, #1
90011daa:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
90011dae:	301c      	adds	r0, #28
90011db0:	f015 fd92 	bl	900278d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90011db4:	2300      	movs	r3, #0
90011db6:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90011dba:	bd10      	pop	{r4, pc}

90011dbc <_ZN8touchgfx8Drawable5setXYEss>:
90011dbc:	b570      	push	{r4, r5, r6, lr}
90011dbe:	6803      	ldr	r3, [r0, #0]
90011dc0:	4604      	mov	r4, r0
90011dc2:	4615      	mov	r5, r2
90011dc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011dc6:	4798      	blx	r3
90011dc8:	6823      	ldr	r3, [r4, #0]
90011dca:	4629      	mov	r1, r5
90011dcc:	4620      	mov	r0, r4
90011dce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90011dd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011dd4:	4718      	bx	r3
	...

90011dd8 <_ZN8touchgfx3HAL3lcdEv>:
90011dd8:	4b04      	ldr	r3, [pc, #16]	; (90011dec <_ZN8touchgfx3HAL3lcdEv+0x14>)
90011dda:	681b      	ldr	r3, [r3, #0]
90011ddc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90011de0:	b10a      	cbz	r2, 90011de6 <_ZN8touchgfx3HAL3lcdEv+0xe>
90011de2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90011de4:	b900      	cbnz	r0, 90011de8 <_ZN8touchgfx3HAL3lcdEv+0x10>
90011de6:	6898      	ldr	r0, [r3, #8]
90011de8:	4770      	bx	lr
90011dea:	bf00      	nop
90011dec:	2403989c 	.word	0x2403989c

90011df0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90011df0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011df4:	b085      	sub	sp, #20
90011df6:	4604      	mov	r4, r0
90011df8:	2000      	movs	r0, #0
90011dfa:	4699      	mov	r9, r3
90011dfc:	ad04      	add	r5, sp, #16
90011dfe:	460f      	mov	r7, r1
90011e00:	4690      	mov	r8, r2
90011e02:	f845 0d04 	str.w	r0, [r5, #-4]!
90011e06:	69a0      	ldr	r0, [r4, #24]
90011e08:	6806      	ldr	r6, [r0, #0]
90011e0a:	9501      	str	r5, [sp, #4]
90011e0c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
90011e10:	9500      	str	r5, [sp, #0]
90011e12:	6835      	ldr	r5, [r6, #0]
90011e14:	47a8      	blx	r5
90011e16:	4d10      	ldr	r5, [pc, #64]	; (90011e58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90011e18:	4606      	mov	r6, r0
90011e1a:	f8a5 9000 	strh.w	r9, [r5]
90011e1e:	f7ff ffdb 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
90011e22:	6803      	ldr	r3, [r0, #0]
90011e24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011e26:	4798      	blx	r3
90011e28:	b128      	cbz	r0, 90011e36 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
90011e2a:	2801      	cmp	r0, #1
90011e2c:	d00b      	beq.n	90011e46 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90011e2e:	4630      	mov	r0, r6
90011e30:	b005      	add	sp, #20
90011e32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011e36:	882b      	ldrh	r3, [r5, #0]
90011e38:	fb08 7203 	mla	r2, r8, r3, r7
90011e3c:	9b03      	ldr	r3, [sp, #12]
90011e3e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90011e42:	63e3      	str	r3, [r4, #60]	; 0x3c
90011e44:	e7f3      	b.n	90011e2e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011e46:	882a      	ldrh	r2, [r5, #0]
90011e48:	9b03      	ldr	r3, [sp, #12]
90011e4a:	fb08 7202 	mla	r2, r8, r2, r7
90011e4e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90011e52:	1a9a      	subs	r2, r3, r2
90011e54:	63e2      	str	r2, [r4, #60]	; 0x3c
90011e56:	e7ea      	b.n	90011e2e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011e58:	24039896 	.word	0x24039896

90011e5c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90011e5c:	b5f0      	push	{r4, r5, r6, r7, lr}
90011e5e:	b08b      	sub	sp, #44	; 0x2c
90011e60:	4617      	mov	r7, r2
90011e62:	4604      	mov	r4, r0
90011e64:	460e      	mov	r6, r1
90011e66:	461d      	mov	r5, r3
90011e68:	f7ff ffb6 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
90011e6c:	6803      	ldr	r3, [r0, #0]
90011e6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011e70:	4798      	blx	r3
90011e72:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90011e76:	9007      	str	r0, [sp, #28]
90011e78:	4631      	mov	r1, r6
90011e7a:	6822      	ldr	r2, [r4, #0]
90011e7c:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011e80:	4b0c      	ldr	r3, [pc, #48]	; (90011eb4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90011e82:	4620      	mov	r0, r4
90011e84:	881b      	ldrh	r3, [r3, #0]
90011e86:	9306      	str	r3, [sp, #24]
90011e88:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90011e8c:	9305      	str	r3, [sp, #20]
90011e8e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
90011e92:	9304      	str	r3, [sp, #16]
90011e94:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011e98:	9303      	str	r3, [sp, #12]
90011e9a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90011e9e:	9302      	str	r3, [sp, #8]
90011ea0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90011ea4:	e9cd 5300 	strd	r5, r3, [sp]
90011ea8:	463b      	mov	r3, r7
90011eaa:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
90011eac:	2200      	movs	r2, #0
90011eae:	47a8      	blx	r5
90011eb0:	b00b      	add	sp, #44	; 0x2c
90011eb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011eb4:	24039896 	.word	0x24039896

90011eb8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90011eb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011ebc:	4698      	mov	r8, r3
90011ebe:	6803      	ldr	r3, [r0, #0]
90011ec0:	b08b      	sub	sp, #44	; 0x2c
90011ec2:	4617      	mov	r7, r2
90011ec4:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
90011ec6:	460e      	mov	r6, r1
90011ec8:	4b13      	ldr	r3, [pc, #76]	; (90011f18 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90011eca:	4604      	mov	r4, r0
90011ecc:	f8b3 9000 	ldrh.w	r9, [r3]
90011ed0:	f7ff ff82 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
90011ed4:	6803      	ldr	r3, [r0, #0]
90011ed6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011ed8:	4798      	blx	r3
90011eda:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90011ede:	2200      	movs	r2, #0
90011ee0:	4631      	mov	r1, r6
90011ee2:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011ee6:	2302      	movs	r3, #2
90011ee8:	4620      	mov	r0, r4
90011eea:	e9cd 9306 	strd	r9, r3, [sp, #24]
90011eee:	2301      	movs	r3, #1
90011ef0:	9305      	str	r3, [sp, #20]
90011ef2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90011ef6:	9304      	str	r3, [sp, #16]
90011ef8:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90011efc:	9303      	str	r3, [sp, #12]
90011efe:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90011f02:	9302      	str	r3, [sp, #8]
90011f04:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011f08:	e9cd 8300 	strd	r8, r3, [sp]
90011f0c:	463b      	mov	r3, r7
90011f0e:	47a8      	blx	r5
90011f10:	b00b      	add	sp, #44	; 0x2c
90011f12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011f16:	bf00      	nop
90011f18:	24039896 	.word	0x24039896

90011f1c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90011f1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011f20:	4698      	mov	r8, r3
90011f22:	6803      	ldr	r3, [r0, #0]
90011f24:	b087      	sub	sp, #28
90011f26:	460e      	mov	r6, r1
90011f28:	6d9d      	ldr	r5, [r3, #88]	; 0x58
90011f2a:	4617      	mov	r7, r2
90011f2c:	4b0f      	ldr	r3, [pc, #60]	; (90011f6c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90011f2e:	4604      	mov	r4, r0
90011f30:	f8b3 9000 	ldrh.w	r9, [r3]
90011f34:	f7ff ff50 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
90011f38:	6803      	ldr	r3, [r0, #0]
90011f3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011f3c:	4798      	blx	r3
90011f3e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
90011f42:	463a      	mov	r2, r7
90011f44:	4631      	mov	r1, r6
90011f46:	f8cd 900c 	str.w	r9, [sp, #12]
90011f4a:	e9cd 0304 	strd	r0, r3, [sp, #16]
90011f4e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90011f52:	4620      	mov	r0, r4
90011f54:	9302      	str	r3, [sp, #8]
90011f56:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
90011f5a:	9301      	str	r3, [sp, #4]
90011f5c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90011f60:	9300      	str	r3, [sp, #0]
90011f62:	4643      	mov	r3, r8
90011f64:	47a8      	blx	r5
90011f66:	b007      	add	sp, #28
90011f68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011f6c:	24039896 	.word	0x24039896

90011f70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90011f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011f74:	4604      	mov	r4, r0
90011f76:	b08f      	sub	sp, #60	; 0x3c
90011f78:	4610      	mov	r0, r2
90011f7a:	460d      	mov	r5, r1
90011f7c:	4691      	mov	r9, r2
90011f7e:	461e      	mov	r6, r3
90011f80:	f008 f830 	bl	90019fe4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011f84:	2800      	cmp	r0, #0
90011f86:	f000 809d 	beq.w	900120c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90011f8a:	6823      	ldr	r3, [r4, #0]
90011f8c:	4620      	mov	r0, r4
90011f8e:	f8df b198 	ldr.w	fp, [pc, #408]	; 90012128 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90011f92:	f10d 0838 	add.w	r8, sp, #56	; 0x38
90011f96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011f98:	4798      	blx	r3
90011f9a:	6823      	ldr	r3, [r4, #0]
90011f9c:	4620      	mov	r0, r4
90011f9e:	f8df a18c 	ldr.w	sl, [pc, #396]	; 9001212c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90011fa2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011fa4:	4798      	blx	r3
90011fa6:	f8bb 3000 	ldrh.w	r3, [fp]
90011faa:	4f5c      	ldr	r7, [pc, #368]	; (9001211c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90011fac:	9301      	str	r3, [sp, #4]
90011fae:	f8ba 3000 	ldrh.w	r3, [sl]
90011fb2:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90011fb6:	4640      	mov	r0, r8
90011fb8:	9302      	str	r3, [sp, #8]
90011fba:	883b      	ldrh	r3, [r7, #0]
90011fbc:	9303      	str	r3, [sp, #12]
90011fbe:	4b58      	ldr	r3, [pc, #352]	; (90012120 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011fc0:	881a      	ldrh	r2, [r3, #0]
90011fc2:	9305      	str	r3, [sp, #20]
90011fc4:	9204      	str	r2, [sp, #16]
90011fc6:	f008 f8a1 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
90011fca:	8038      	strh	r0, [r7, #0]
90011fcc:	4640      	mov	r0, r8
90011fce:	f008 f8d1 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011fd2:	9b05      	ldr	r3, [sp, #20]
90011fd4:	b280      	uxth	r0, r0
90011fd6:	8018      	strh	r0, [r3, #0]
90011fd8:	4b52      	ldr	r3, [pc, #328]	; (90012124 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90011fda:	781b      	ldrb	r3, [r3, #0]
90011fdc:	2b00      	cmp	r3, #0
90011fde:	d174      	bne.n	900120ca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90011fe0:	883b      	ldrh	r3, [r7, #0]
90011fe2:	f8aa 0000 	strh.w	r0, [sl]
90011fe6:	f8ab 3000 	strh.w	r3, [fp]
90011fea:	4648      	mov	r0, r9
90011fec:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
90011ff0:	f007 fff8 	bl	90019fe4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011ff4:	2200      	movs	r2, #0
90011ff6:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
90011ffa:	4611      	mov	r1, r2
90011ffc:	4628      	mov	r0, r5
90011ffe:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90012002:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90012006:	f7ff fed9 	bl	90011dbc <_ZN8touchgfx8Drawable5setXYEss>
9001200a:	2301      	movs	r3, #1
9001200c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
90012010:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
90012014:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90012018:	2b00      	cmp	r3, #0
9001201a:	dd5c      	ble.n	900120d6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
9001201c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90012020:	2b00      	cmp	r3, #0
90012022:	dd58      	ble.n	900120d6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90012024:	462a      	mov	r2, r5
90012026:	ab0a      	add	r3, sp, #40	; 0x28
90012028:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001202c:	6851      	ldr	r1, [r2, #4]
9001202e:	c303      	stmia	r3!, {r0, r1}
90012030:	4631      	mov	r1, r6
90012032:	a80a      	add	r0, sp, #40	; 0x28
90012034:	f7ff fbec 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
90012038:	4b38      	ldr	r3, [pc, #224]	; (9001211c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001203a:	2100      	movs	r1, #0
9001203c:	f9b3 2000 	ldrsh.w	r2, [r3]
90012040:	4b37      	ldr	r3, [pc, #220]	; (90012120 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90012042:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90012046:	aa0a      	add	r2, sp, #40	; 0x28
90012048:	f9b3 3000 	ldrsh.w	r3, [r3]
9001204c:	910c      	str	r1, [sp, #48]	; 0x30
9001204e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90012052:	ab08      	add	r3, sp, #32
90012054:	e892 0003 	ldmia.w	r2, {r0, r1}
90012058:	e883 0003 	stmia.w	r3, {r0, r1}
9001205c:	4618      	mov	r0, r3
9001205e:	a90c      	add	r1, sp, #48	; 0x30
90012060:	f7ff fbd6 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
90012064:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90012066:	2b00      	cmp	r3, #0
90012068:	d13c      	bne.n	900120e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
9001206a:	2000      	movs	r0, #0
9001206c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
90012070:	2600      	movs	r6, #0
90012072:	696b      	ldr	r3, [r5, #20]
90012074:	a908      	add	r1, sp, #32
90012076:	682a      	ldr	r2, [r5, #0]
90012078:	4628      	mov	r0, r5
9001207a:	9305      	str	r3, [sp, #20]
9001207c:	616e      	str	r6, [r5, #20]
9001207e:	6892      	ldr	r2, [r2, #8]
90012080:	4790      	blx	r2
90012082:	9b05      	ldr	r3, [sp, #20]
90012084:	4652      	mov	r2, sl
90012086:	4649      	mov	r1, r9
90012088:	616b      	str	r3, [r5, #20]
9001208a:	4628      	mov	r0, r5
9001208c:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
90012090:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
90012094:	f7ff fe92 	bl	90011dbc <_ZN8touchgfx8Drawable5setXYEss>
90012098:	9a01      	ldr	r2, [sp, #4]
9001209a:	4b23      	ldr	r3, [pc, #140]	; (90012128 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
9001209c:	4620      	mov	r0, r4
9001209e:	801a      	strh	r2, [r3, #0]
900120a0:	9a02      	ldr	r2, [sp, #8]
900120a2:	4b22      	ldr	r3, [pc, #136]	; (9001212c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
900120a4:	801a      	strh	r2, [r3, #0]
900120a6:	9a03      	ldr	r2, [sp, #12]
900120a8:	4b1c      	ldr	r3, [pc, #112]	; (9001211c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900120aa:	801a      	strh	r2, [r3, #0]
900120ac:	4b1c      	ldr	r3, [pc, #112]	; (90012120 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900120ae:	9a04      	ldr	r2, [sp, #16]
900120b0:	801a      	strh	r2, [r3, #0]
900120b2:	6823      	ldr	r3, [r4, #0]
900120b4:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
900120b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900120ba:	4798      	blx	r3
900120bc:	6823      	ldr	r3, [r4, #0]
900120be:	4620      	mov	r0, r4
900120c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900120c2:	4798      	blx	r3
900120c4:	b00f      	add	sp, #60	; 0x3c
900120c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900120ca:	883b      	ldrh	r3, [r7, #0]
900120cc:	f8ab 0000 	strh.w	r0, [fp]
900120d0:	f8aa 3000 	strh.w	r3, [sl]
900120d4:	e789      	b.n	90011fea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
900120d6:	462a      	mov	r2, r5
900120d8:	ab0a      	add	r3, sp, #40	; 0x28
900120da:	f852 0f04 	ldr.w	r0, [r2, #4]!
900120de:	6851      	ldr	r1, [r2, #4]
900120e0:	c303      	stmia	r3!, {r0, r1}
900120e2:	e7a9      	b.n	90012038 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
900120e4:	a807      	add	r0, sp, #28
900120e6:	f008 f981 	bl	9001a3ec <_ZNK8touchgfx6Bitmap9getFormatEv>
900120ea:	4606      	mov	r6, r0
900120ec:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
900120ee:	6803      	ldr	r3, [r0, #0]
900120f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900120f2:	4798      	blx	r3
900120f4:	4286      	cmp	r6, r0
900120f6:	d1b8      	bne.n	9001206a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
900120f8:	f7ff fe6e 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
900120fc:	6803      	ldr	r3, [r0, #0]
900120fe:	4606      	mov	r6, r0
90012100:	a807      	add	r0, sp, #28
90012102:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90012104:	9305      	str	r3, [sp, #20]
90012106:	f008 f971 	bl	9001a3ec <_ZNK8touchgfx6Bitmap9getFormatEv>
9001210a:	9b05      	ldr	r3, [sp, #20]
9001210c:	4601      	mov	r1, r0
9001210e:	4630      	mov	r0, r6
90012110:	4798      	blx	r3
90012112:	f080 0001 	eor.w	r0, r0, #1
90012116:	b2c0      	uxtb	r0, r0
90012118:	e7a8      	b.n	9001206c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
9001211a:	bf00      	nop
9001211c:	24039890 	.word	0x24039890
90012120:	24039892 	.word	0x24039892
90012124:	24039894 	.word	0x24039894
90012128:	24039896 	.word	0x24039896
9001212c:	24039898 	.word	0x24039898

90012130 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90012130:	4b07      	ldr	r3, [pc, #28]	; (90012150 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90012132:	b510      	push	{r4, lr}
90012134:	781b      	ldrb	r3, [r3, #0]
90012136:	4604      	mov	r4, r0
90012138:	b13b      	cbz	r3, 9001214a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001213a:	6803      	ldr	r3, [r0, #0]
9001213c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001213e:	4798      	blx	r3
90012140:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90012142:	4283      	cmp	r3, r0
90012144:	d101      	bne.n	9001214a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90012146:	6c20      	ldr	r0, [r4, #64]	; 0x40
90012148:	bd10      	pop	{r4, pc}
9001214a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9001214c:	e7fc      	b.n	90012148 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
9001214e:	bf00      	nop
90012150:	2403989a 	.word	0x2403989a

90012154 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90012154:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012158:	461d      	mov	r5, r3
9001215a:	b08a      	sub	sp, #40	; 0x28
9001215c:	f44f 6380 	mov.w	r3, #1024	; 0x400
90012160:	4690      	mov	r8, r2
90012162:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
90012166:	2400      	movs	r4, #0
90012168:	4607      	mov	r7, r0
9001216a:	fb06 8505 	mla	r5, r6, r5, r8
9001216e:	9404      	str	r4, [sp, #16]
90012170:	f88d 4020 	strb.w	r4, [sp, #32]
90012174:	e9cd 3101 	strd	r3, r1, [sp, #4]
90012178:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001217c:	f8ad 3018 	strh.w	r3, [sp, #24]
90012180:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90012184:	f8ad 301a 	strh.w	r3, [sp, #26]
90012188:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9001218c:	f8ad 301c 	strh.w	r3, [sp, #28]
90012190:	f7ff ffce 	bl	90012130 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012194:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90012198:	6878      	ldr	r0, [r7, #4]
9001219a:	f8ad 601e 	strh.w	r6, [sp, #30]
9001219e:	a901      	add	r1, sp, #4
900121a0:	9505      	str	r5, [sp, #20]
900121a2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900121a6:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
900121aa:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
900121ae:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
900121b2:	6803      	ldr	r3, [r0, #0]
900121b4:	685b      	ldr	r3, [r3, #4]
900121b6:	4798      	blx	r3
900121b8:	b00a      	add	sp, #40	; 0x28
900121ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900121be <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
900121be:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900121c2:	b08b      	sub	sp, #44	; 0x2c
900121c4:	2400      	movs	r4, #0
900121c6:	4691      	mov	r9, r2
900121c8:	461d      	mov	r5, r3
900121ca:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
900121ce:	f44f 6300 	mov.w	r3, #2048	; 0x800
900121d2:	4688      	mov	r8, r1
900121d4:	4607      	mov	r7, r0
900121d6:	9404      	str	r4, [sp, #16]
900121d8:	fb06 9505 	mla	r5, r6, r5, r9
900121dc:	e9cd 3401 	strd	r3, r4, [sp, #4]
900121e0:	f7ff ffa6 	bl	90012130 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900121e4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900121e8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900121ec:	6878      	ldr	r0, [r7, #4]
900121ee:	f8ad 3018 	strh.w	r3, [sp, #24]
900121f2:	a901      	add	r1, sp, #4
900121f4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900121f8:	9505      	str	r5, [sp, #20]
900121fa:	f8ad 301a 	strh.w	r3, [sp, #26]
900121fe:	f8ad 401c 	strh.w	r4, [sp, #28]
90012202:	f8ad 601e 	strh.w	r6, [sp, #30]
90012206:	f8cd 8010 	str.w	r8, [sp, #16]
9001220a:	f8ad 4020 	strh.w	r4, [sp, #32]
9001220e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90012212:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90012216:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
9001221a:	6803      	ldr	r3, [r0, #0]
9001221c:	685b      	ldr	r3, [r3, #4]
9001221e:	4798      	blx	r3
90012220:	b00b      	add	sp, #44	; 0x2c
90012222:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90012228 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90012228:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001222c:	b08a      	sub	sp, #40	; 0x28
9001222e:	4698      	mov	r8, r3
90012230:	2300      	movs	r3, #0
90012232:	4606      	mov	r6, r0
90012234:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
90012238:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
9001223c:	2d0b      	cmp	r5, #11
9001223e:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
90012242:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
90012246:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
9001224a:	9304      	str	r3, [sp, #16]
9001224c:	d137      	bne.n	900122be <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
9001224e:	2380      	movs	r3, #128	; 0x80
90012250:	f88d 0020 	strb.w	r0, [sp, #32]
90012254:	4630      	mov	r0, r6
90012256:	9203      	str	r2, [sp, #12]
90012258:	e9cd 3101 	strd	r3, r1, [sp, #4]
9001225c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90012260:	f8ad 3018 	strh.w	r3, [sp, #24]
90012264:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90012268:	f8ad 301a 	strh.w	r3, [sp, #26]
9001226c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90012270:	f8ad 301c 	strh.w	r3, [sp, #28]
90012274:	f7ff ff5c 	bl	90012130 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012278:	2c0b      	cmp	r4, #11
9001227a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
9001227e:	f8ad 701e 	strh.w	r7, [sp, #30]
90012282:	bf94      	ite	ls
90012284:	4b19      	ldrls	r3, [pc, #100]	; (900122ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90012286:	2100      	movhi	r1, #0
90012288:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
9001228c:	bf98      	it	ls
9001228e:	5d19      	ldrbls	r1, [r3, r4]
90012290:	fb02 8307 	mla	r3, r2, r7, r8
90012294:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90012298:	10c9      	asrs	r1, r1, #3
9001229a:	fb01 0003 	mla	r0, r1, r3, r0
9001229e:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
900122a2:	a901      	add	r1, sp, #4
900122a4:	9005      	str	r0, [sp, #20]
900122a6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
900122aa:	2300      	movs	r3, #0
900122ac:	6870      	ldr	r0, [r6, #4]
900122ae:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
900122b2:	6803      	ldr	r3, [r0, #0]
900122b4:	685b      	ldr	r3, [r3, #4]
900122b6:	4798      	blx	r3
900122b8:	b00a      	add	sp, #40	; 0x28
900122ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900122be:	2d02      	cmp	r5, #2
900122c0:	d109      	bne.n	900122d6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
900122c2:	28ff      	cmp	r0, #255	; 0xff
900122c4:	d105      	bne.n	900122d2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
900122c6:	f1bc 0f00 	cmp.w	ip, #0
900122ca:	bf14      	ite	ne
900122cc:	2340      	movne	r3, #64	; 0x40
900122ce:	2320      	moveq	r3, #32
900122d0:	e7be      	b.n	90012250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900122d2:	2340      	movs	r3, #64	; 0x40
900122d4:	e7bc      	b.n	90012250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900122d6:	28ff      	cmp	r0, #255	; 0xff
900122d8:	d105      	bne.n	900122e6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
900122da:	f1bc 0f00 	cmp.w	ip, #0
900122de:	bf14      	ite	ne
900122e0:	2304      	movne	r3, #4
900122e2:	2301      	moveq	r3, #1
900122e4:	e7b4      	b.n	90012250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900122e6:	2304      	movs	r3, #4
900122e8:	e7b2      	b.n	90012250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900122ea:	bf00      	nop
900122ec:	9002bf38 	.word	0x9002bf38

900122f0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
900122f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900122f4:	b08b      	sub	sp, #44	; 0x2c
900122f6:	461d      	mov	r5, r3
900122f8:	2400      	movs	r4, #0
900122fa:	4688      	mov	r8, r1
900122fc:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90012300:	4693      	mov	fp, r2
90012302:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
90012306:	4607      	mov	r7, r0
90012308:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001230c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90012310:	9404      	str	r4, [sp, #16]
90012312:	bf14      	ite	ne
90012314:	2308      	movne	r3, #8
90012316:	2302      	moveq	r3, #2
90012318:	fb05 b50a 	mla	r5, r5, sl, fp
9001231c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90012320:	f7ff ff06 	bl	90012130 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012324:	2e0b      	cmp	r6, #11
90012326:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001232a:	a901      	add	r1, sp, #4
9001232c:	bf98      	it	ls
9001232e:	4b13      	ldrls	r3, [pc, #76]	; (9001237c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90012330:	f8ad a01e 	strh.w	sl, [sp, #30]
90012334:	bf98      	it	ls
90012336:	5d9c      	ldrbls	r4, [r3, r6]
90012338:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
9001233c:	10e4      	asrs	r4, r4, #3
9001233e:	f8cd 8010 	str.w	r8, [sp, #16]
90012342:	f8ad 3018 	strh.w	r3, [sp, #24]
90012346:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001234a:	fb04 0405 	mla	r4, r4, r5, r0
9001234e:	6878      	ldr	r0, [r7, #4]
90012350:	f8ad 301a 	strh.w	r3, [sp, #26]
90012354:	2300      	movs	r3, #0
90012356:	9405      	str	r4, [sp, #20]
90012358:	f8ad 301c 	strh.w	r3, [sp, #28]
9001235c:	f88d 9020 	strb.w	r9, [sp, #32]
90012360:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
90012364:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90012368:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
9001236c:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
90012370:	6803      	ldr	r3, [r0, #0]
90012372:	685b      	ldr	r3, [r3, #4]
90012374:	4798      	blx	r3
90012376:	b00b      	add	sp, #44	; 0x2c
90012378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001237c:	9002bf38 	.word	0x9002bf38

90012380 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90012380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012384:	461e      	mov	r6, r3
90012386:	4b0a      	ldr	r3, [pc, #40]	; (900123b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90012388:	460f      	mov	r7, r1
9001238a:	4690      	mov	r8, r2
9001238c:	881d      	ldrh	r5, [r3, #0]
9001238e:	f7ff fd23 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
90012392:	6803      	ldr	r3, [r0, #0]
90012394:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012396:	4798      	blx	r3
90012398:	280b      	cmp	r0, #11
9001239a:	bf96      	itet	ls
9001239c:	4b05      	ldrls	r3, [pc, #20]	; (900123b4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
9001239e:	2400      	movhi	r4, #0
900123a0:	5c1c      	ldrbls	r4, [r3, r0]
900123a2:	fb08 7005 	mla	r0, r8, r5, r7
900123a6:	10e4      	asrs	r4, r4, #3
900123a8:	fb04 6000 	mla	r0, r4, r0, r6
900123ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900123b0:	24039896 	.word	0x24039896
900123b4:	9002bf38 	.word	0x9002bf38

900123b8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
900123b8:	b5f0      	push	{r4, r5, r6, r7, lr}
900123ba:	b08b      	sub	sp, #44	; 0x2c
900123bc:	461f      	mov	r7, r3
900123be:	4604      	mov	r4, r0
900123c0:	4616      	mov	r6, r2
900123c2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
900123c6:	2500      	movs	r5, #0
900123c8:	e9cd 3101 	strd	r3, r1, [sp, #4]
900123cc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900123d0:	9504      	str	r5, [sp, #16]
900123d2:	f8ad 3018 	strh.w	r3, [sp, #24]
900123d6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900123da:	f8ad 301a 	strh.w	r3, [sp, #26]
900123de:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900123e2:	f8ad 301c 	strh.w	r3, [sp, #28]
900123e6:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900123ea:	f88d 3020 	strb.w	r3, [sp, #32]
900123ee:	f7ff fe9f 	bl	90012130 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900123f2:	463a      	mov	r2, r7
900123f4:	4631      	mov	r1, r6
900123f6:	4603      	mov	r3, r0
900123f8:	4620      	mov	r0, r4
900123fa:	f7ff ffc1 	bl	90012380 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900123fe:	4b0e      	ldr	r3, [pc, #56]	; (90012438 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90012400:	9005      	str	r0, [sp, #20]
90012402:	881b      	ldrh	r3, [r3, #0]
90012404:	f8ad 301e 	strh.w	r3, [sp, #30]
90012408:	f7ff fce6 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
9001240c:	6803      	ldr	r3, [r0, #0]
9001240e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012410:	4798      	blx	r3
90012412:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90012414:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
90012418:	a901      	add	r1, sp, #4
9001241a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
9001241e:	9304      	str	r3, [sp, #16]
90012420:	6860      	ldr	r0, [r4, #4]
90012422:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90012426:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
9001242a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
9001242e:	6803      	ldr	r3, [r0, #0]
90012430:	685b      	ldr	r3, [r3, #4]
90012432:	4798      	blx	r3
90012434:	b00b      	add	sp, #44	; 0x2c
90012436:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012438:	24039896 	.word	0x24039896

9001243c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
9001243c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001243e:	b08d      	sub	sp, #52	; 0x34
90012440:	2501      	movs	r5, #1
90012442:	4604      	mov	r4, r0
90012444:	466b      	mov	r3, sp
90012446:	9503      	str	r5, [sp, #12]
90012448:	e883 0006 	stmia.w	r3, {r1, r2}
9001244c:	2300      	movs	r3, #0
9001244e:	f8bd 6000 	ldrh.w	r6, [sp]
90012452:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90012456:	9306      	str	r3, [sp, #24]
90012458:	6803      	ldr	r3, [r0, #0]
9001245a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001245c:	4798      	blx	r3
9001245e:	463a      	mov	r2, r7
90012460:	4631      	mov	r1, r6
90012462:	4603      	mov	r3, r0
90012464:	4620      	mov	r0, r4
90012466:	f7ff ff8b 	bl	90012380 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001246a:	6c63      	ldr	r3, [r4, #68]	; 0x44
9001246c:	9004      	str	r0, [sp, #16]
9001246e:	9307      	str	r3, [sp, #28]
90012470:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90012474:	f8ad 3020 	strh.w	r3, [sp, #32]
90012478:	f8bd 3006 	ldrh.w	r3, [sp, #6]
9001247c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90012480:	4b0e      	ldr	r3, [pc, #56]	; (900124bc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90012482:	881b      	ldrh	r3, [r3, #0]
90012484:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90012488:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
9001248c:	f7ff fca4 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
90012490:	6803      	ldr	r3, [r0, #0]
90012492:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012494:	4798      	blx	r3
90012496:	23ff      	movs	r3, #255	; 0xff
90012498:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
9001249c:	a903      	add	r1, sp, #12
9001249e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
900124a2:	6860      	ldr	r0, [r4, #4]
900124a4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
900124a8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
900124ac:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
900124b0:	6803      	ldr	r3, [r0, #0]
900124b2:	685b      	ldr	r3, [r3, #4]
900124b4:	4798      	blx	r3
900124b6:	6c60      	ldr	r0, [r4, #68]	; 0x44
900124b8:	b00d      	add	sp, #52	; 0x34
900124ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
900124bc:	24039896 	.word	0x24039896

900124c0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
900124c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900124c4:	b08c      	sub	sp, #48	; 0x30
900124c6:	461e      	mov	r6, r3
900124c8:	2300      	movs	r3, #0
900124ca:	4604      	mov	r4, r0
900124cc:	466d      	mov	r5, sp
900124ce:	9306      	str	r3, [sp, #24]
900124d0:	6803      	ldr	r3, [r0, #0]
900124d2:	e885 0006 	stmia.w	r5, {r1, r2}
900124d6:	2501      	movs	r5, #1
900124d8:	f8bd 7000 	ldrh.w	r7, [sp]
900124dc:	f8bd 8002 	ldrh.w	r8, [sp, #2]
900124e0:	9503      	str	r5, [sp, #12]
900124e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900124e4:	4798      	blx	r3
900124e6:	4642      	mov	r2, r8
900124e8:	4639      	mov	r1, r7
900124ea:	4603      	mov	r3, r0
900124ec:	4620      	mov	r0, r4
900124ee:	f7ff ff47 	bl	90012380 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900124f2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900124f6:	9004      	str	r0, [sp, #16]
900124f8:	f8ad 3020 	strh.w	r3, [sp, #32]
900124fc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90012500:	9607      	str	r6, [sp, #28]
90012502:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90012506:	4b10      	ldr	r3, [pc, #64]	; (90012548 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90012508:	881b      	ldrh	r3, [r3, #0]
9001250a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
9001250e:	9b12      	ldr	r3, [sp, #72]	; 0x48
90012510:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90012514:	f7ff fc60 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
90012518:	6803      	ldr	r3, [r0, #0]
9001251a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001251c:	4798      	blx	r3
9001251e:	23ff      	movs	r3, #255	; 0xff
90012520:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90012524:	a903      	add	r1, sp, #12
90012526:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
9001252a:	6860      	ldr	r0, [r4, #4]
9001252c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90012530:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90012534:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90012538:	6803      	ldr	r3, [r0, #0]
9001253a:	685b      	ldr	r3, [r3, #4]
9001253c:	4798      	blx	r3
9001253e:	4630      	mov	r0, r6
90012540:	b00c      	add	sp, #48	; 0x30
90012542:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012546:	bf00      	nop
90012548:	24039896 	.word	0x24039896

9001254c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
9001254c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001254e:	b085      	sub	sp, #20
90012550:	4605      	mov	r5, r0
90012552:	ac02      	add	r4, sp, #8
90012554:	e884 0006 	stmia.w	r4, {r1, r2}
90012558:	f8bd 6008 	ldrh.w	r6, [sp, #8]
9001255c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90012560:	f7ff fde6 	bl	90012130 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012564:	4631      	mov	r1, r6
90012566:	4603      	mov	r3, r0
90012568:	463a      	mov	r2, r7
9001256a:	4628      	mov	r0, r5
9001256c:	f7ff ff08 	bl	90012380 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012570:	4a05      	ldr	r2, [pc, #20]	; (90012588 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90012572:	682b      	ldr	r3, [r5, #0]
90012574:	8812      	ldrh	r2, [r2, #0]
90012576:	9200      	str	r2, [sp, #0]
90012578:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001257a:	4603      	mov	r3, r0
9001257c:	4628      	mov	r0, r5
9001257e:	e894 0006 	ldmia.w	r4, {r1, r2}
90012582:	47b0      	blx	r6
90012584:	b005      	add	sp, #20
90012586:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012588:	24039896 	.word	0x24039896

9001258c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
9001258c:	b570      	push	{r4, r5, r6, lr}
9001258e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
90012592:	4604      	mov	r4, r0
90012594:	b19b      	cbz	r3, 900125be <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90012596:	2002      	movs	r0, #2
90012598:	f7ee f844 	bl	90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
9001259c:	2300      	movs	r3, #0
9001259e:	4620      	mov	r0, r4
900125a0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
900125a4:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
900125a8:	6823      	ldr	r3, [r4, #0]
900125aa:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
900125ae:	f7ff fdbf 	bl	90012130 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900125b2:	4601      	mov	r1, r0
900125b4:	4620      	mov	r0, r4
900125b6:	462b      	mov	r3, r5
900125b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900125bc:	4718      	bx	r3
900125be:	bd70      	pop	{r4, r5, r6, pc}

900125c0 <_ZN8touchgfx3HAL12setMCUActiveEb>:
900125c0:	b570      	push	{r4, r5, r6, lr}
900125c2:	4605      	mov	r5, r0
900125c4:	460c      	mov	r4, r1
900125c6:	2003      	movs	r0, #3
900125c8:	b149      	cbz	r1, 900125de <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
900125ca:	f7ed ffc3 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900125ce:	6928      	ldr	r0, [r5, #16]
900125d0:	b168      	cbz	r0, 900125ee <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900125d2:	6803      	ldr	r3, [r0, #0]
900125d4:	2101      	movs	r1, #1
900125d6:	695b      	ldr	r3, [r3, #20]
900125d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900125dc:	4718      	bx	r3
900125de:	f7ed ffed 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900125e2:	6928      	ldr	r0, [r5, #16]
900125e4:	b118      	cbz	r0, 900125ee <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900125e6:	6803      	ldr	r3, [r0, #0]
900125e8:	4621      	mov	r1, r4
900125ea:	695b      	ldr	r3, [r3, #20]
900125ec:	e7f4      	b.n	900125d8 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
900125ee:	bd70      	pop	{r4, r5, r6, pc}

900125f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
900125f0:	b538      	push	{r3, r4, r5, lr}
900125f2:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
900125f6:	4604      	mov	r4, r0
900125f8:	460d      	mov	r5, r1
900125fa:	428b      	cmp	r3, r1
900125fc:	d006      	beq.n	9001260c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
900125fe:	6803      	ldr	r3, [r0, #0]
90012600:	b929      	cbnz	r1, 9001260e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90012602:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90012606:	4798      	blx	r3
90012608:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
9001260c:	bd38      	pop	{r3, r4, r5, pc}
9001260e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90012612:	e7f8      	b.n	90012606 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90012614 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90012614:	4b0d      	ldr	r3, [pc, #52]	; (9001264c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90012616:	b510      	push	{r4, lr}
90012618:	781b      	ldrb	r3, [r3, #0]
9001261a:	4604      	mov	r4, r0
9001261c:	b95b      	cbnz	r3, 90012636 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9001261e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90012622:	2b02      	cmp	r3, #2
90012624:	d007      	beq.n	90012636 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90012626:	6840      	ldr	r0, [r0, #4]
90012628:	f000 f91a 	bl	90012860 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
9001262c:	b118      	cbz	r0, 90012636 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9001262e:	6862      	ldr	r2, [r4, #4]
90012630:	7a53      	ldrb	r3, [r2, #9]
90012632:	2b00      	cmp	r3, #0
90012634:	d0fc      	beq.n	90012630 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90012636:	f7ef f927 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001263a:	4620      	mov	r0, r4
9001263c:	2100      	movs	r1, #0
9001263e:	f7ff ffd7 	bl	900125f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90012642:	4620      	mov	r0, r4
90012644:	f7ff fd74 	bl	90012130 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012648:	bd10      	pop	{r4, pc}
9001264a:	bf00      	nop
9001264c:	2403989a 	.word	0x2403989a

90012650 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90012650:	b570      	push	{r4, r5, r6, lr}
90012652:	4604      	mov	r4, r0
90012654:	6803      	ldr	r3, [r0, #0]
90012656:	b919      	cbnz	r1, 90012660 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90012658:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001265a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001265e:	4718      	bx	r3
90012660:	2200      	movs	r2, #0
90012662:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
90012666:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
9001266a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001266c:	4798      	blx	r3
9001266e:	6863      	ldr	r3, [r4, #4]
90012670:	2101      	movs	r1, #1
90012672:	4605      	mov	r5, r0
90012674:	4620      	mov	r0, r4
90012676:	7299      	strb	r1, [r3, #10]
90012678:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
9001267c:	f7ff ffb8 	bl	900125f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90012680:	4628      	mov	r0, r5
90012682:	bd70      	pop	{r4, r5, r6, pc}

90012684 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90012684:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90012688:	1a13      	subs	r3, r2, r0
9001268a:	4258      	negs	r0, r3
9001268c:	4158      	adcs	r0, r3
9001268e:	4770      	bx	lr

90012690 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90012690:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90012694:	1a9b      	subs	r3, r3, r2
90012696:	2b00      	cmp	r3, #0
90012698:	bfdc      	itt	le
9001269a:	6882      	ldrle	r2, [r0, #8]
9001269c:	189b      	addle	r3, r3, r2
9001269e:	2b01      	cmp	r3, #1
900126a0:	bfcc      	ite	gt
900126a2:	2000      	movgt	r0, #0
900126a4:	2001      	movle	r0, #1
900126a6:	4770      	bx	lr

900126a8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
900126a8:	6902      	ldr	r2, [r0, #16]
900126aa:	6843      	ldr	r3, [r0, #4]
900126ac:	2024      	movs	r0, #36	; 0x24
900126ae:	fb00 3002 	mla	r0, r0, r2, r3
900126b2:	4770      	bx	lr

900126b4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
900126b4:	6803      	ldr	r3, [r0, #0]
900126b6:	691b      	ldr	r3, [r3, #16]
900126b8:	4718      	bx	r3

900126ba <_ZN8touchgfx13DMA_Interface7executeEv>:
900126ba:	2301      	movs	r3, #1
900126bc:	b570      	push	{r4, r5, r6, lr}
900126be:	7203      	strb	r3, [r0, #8]
900126c0:	4604      	mov	r4, r0
900126c2:	6840      	ldr	r0, [r0, #4]
900126c4:	6803      	ldr	r3, [r0, #0]
900126c6:	699b      	ldr	r3, [r3, #24]
900126c8:	4798      	blx	r3
900126ca:	6803      	ldr	r3, [r0, #0]
900126cc:	4605      	mov	r5, r0
900126ce:	2b40      	cmp	r3, #64	; 0x40
900126d0:	d00c      	beq.n	900126ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900126d2:	d810      	bhi.n	900126f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
900126d4:	2b04      	cmp	r3, #4
900126d6:	d01d      	beq.n	90012714 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
900126d8:	d804      	bhi.n	900126e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
900126da:	2b01      	cmp	r3, #1
900126dc:	d006      	beq.n	900126ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900126de:	2b02      	cmp	r3, #2
900126e0:	d02c      	beq.n	9001273c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
900126e2:	bd70      	pop	{r4, r5, r6, pc}
900126e4:	2b08      	cmp	r3, #8
900126e6:	d01d      	beq.n	90012724 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
900126e8:	2b20      	cmp	r3, #32
900126ea:	d1fa      	bne.n	900126e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
900126ec:	6823      	ldr	r3, [r4, #0]
900126ee:	4620      	mov	r0, r4
900126f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900126f2:	4798      	blx	r3
900126f4:	e013      	b.n	9001271e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
900126f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
900126fa:	d0f7      	beq.n	900126ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900126fc:	d804      	bhi.n	90012708 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
900126fe:	2b80      	cmp	r3, #128	; 0x80
90012700:	d0f4      	beq.n	900126ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90012702:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90012706:	e7f0      	b.n	900126ea <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90012708:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001270c:	d0ee      	beq.n	900126ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001270e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90012712:	e7e5      	b.n	900126e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90012714:	6823      	ldr	r3, [r4, #0]
90012716:	7f01      	ldrb	r1, [r0, #28]
90012718:	4620      	mov	r0, r4
9001271a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001271c:	4798      	blx	r3
9001271e:	6823      	ldr	r3, [r4, #0]
90012720:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90012722:	e006      	b.n	90012732 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90012724:	6823      	ldr	r3, [r4, #0]
90012726:	7f01      	ldrb	r1, [r0, #28]
90012728:	4620      	mov	r0, r4
9001272a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001272c:	4798      	blx	r3
9001272e:	6823      	ldr	r3, [r4, #0]
90012730:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90012732:	4629      	mov	r1, r5
90012734:	4620      	mov	r0, r4
90012736:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001273a:	4718      	bx	r3
9001273c:	6823      	ldr	r3, [r4, #0]
9001273e:	4620      	mov	r0, r4
90012740:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90012742:	4798      	blx	r3
90012744:	e7f3      	b.n	9001272e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90012746 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90012746:	4770      	bx	lr

90012748 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90012748:	4770      	bx	lr

9001274a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
9001274a:	4770      	bx	lr

9001274c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
9001274c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90012750:	b510      	push	{r4, lr}
90012752:	1ad2      	subs	r2, r2, r3
90012754:	2a00      	cmp	r2, #0
90012756:	bfdc      	itt	le
90012758:	6884      	ldrle	r4, [r0, #8]
9001275a:	1912      	addle	r2, r2, r4
9001275c:	2a01      	cmp	r2, #1
9001275e:	dd16      	ble.n	9001278e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90012760:	6842      	ldr	r2, [r0, #4]
90012762:	2424      	movs	r4, #36	; 0x24
90012764:	fb04 2303 	mla	r3, r4, r3, r2
90012768:	f101 0220 	add.w	r2, r1, #32
9001276c:	f851 4b04 	ldr.w	r4, [r1], #4
90012770:	4291      	cmp	r1, r2
90012772:	f843 4b04 	str.w	r4, [r3], #4
90012776:	d1f9      	bne.n	9001276c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90012778:	780a      	ldrb	r2, [r1, #0]
9001277a:	701a      	strb	r2, [r3, #0]
9001277c:	68c3      	ldr	r3, [r0, #12]
9001277e:	6882      	ldr	r2, [r0, #8]
90012780:	f3bf 8f5b 	dmb	ish
90012784:	3301      	adds	r3, #1
90012786:	429a      	cmp	r2, r3
90012788:	bfd8      	it	le
9001278a:	1a9b      	suble	r3, r3, r2
9001278c:	60c3      	str	r3, [r0, #12]
9001278e:	bd10      	pop	{r4, pc}

90012790 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90012790:	6903      	ldr	r3, [r0, #16]
90012792:	6882      	ldr	r2, [r0, #8]
90012794:	f3bf 8f5b 	dmb	ish
90012798:	3301      	adds	r3, #1
9001279a:	429a      	cmp	r2, r3
9001279c:	bfd8      	it	le
9001279e:	1a9b      	suble	r3, r3, r2
900127a0:	6103      	str	r3, [r0, #16]
900127a2:	4770      	bx	lr

900127a4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
900127a4:	b570      	push	{r4, r5, r6, lr}
900127a6:	4604      	mov	r4, r0
900127a8:	460e      	mov	r6, r1
900127aa:	6860      	ldr	r0, [r4, #4]
900127ac:	6803      	ldr	r3, [r0, #0]
900127ae:	685b      	ldr	r3, [r3, #4]
900127b0:	4798      	blx	r3
900127b2:	2800      	cmp	r0, #0
900127b4:	d1f9      	bne.n	900127aa <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
900127b6:	4d0d      	ldr	r5, [pc, #52]	; (900127ec <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
900127b8:	6828      	ldr	r0, [r5, #0]
900127ba:	6803      	ldr	r3, [r0, #0]
900127bc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
900127be:	4798      	blx	r3
900127c0:	f7ef f870 	bl	900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
900127c4:	6828      	ldr	r0, [r5, #0]
900127c6:	2101      	movs	r1, #1
900127c8:	f7ff ff12 	bl	900125f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900127cc:	6860      	ldr	r0, [r4, #4]
900127ce:	4631      	mov	r1, r6
900127d0:	6803      	ldr	r3, [r0, #0]
900127d2:	689b      	ldr	r3, [r3, #8]
900127d4:	4798      	blx	r3
900127d6:	6823      	ldr	r3, [r4, #0]
900127d8:	4620      	mov	r0, r4
900127da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900127dc:	4798      	blx	r3
900127de:	6828      	ldr	r0, [r5, #0]
900127e0:	6803      	ldr	r3, [r0, #0]
900127e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900127e6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
900127e8:	4718      	bx	r3
900127ea:	bf00      	nop
900127ec:	2403989c 	.word	0x2403989c

900127f0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
900127f0:	b508      	push	{r3, lr}
900127f2:	f7ef f849 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900127f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900127fa:	f7ef b84d 	b.w	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

900127fe <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
900127fe:	b510      	push	{r4, lr}
90012800:	4604      	mov	r4, r0
90012802:	2114      	movs	r1, #20
90012804:	f015 fc16 	bl	90028034 <_ZdlPvj>
90012808:	4620      	mov	r0, r4
9001280a:	bd10      	pop	{r4, pc}

9001280c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
9001280c:	b570      	push	{r4, r5, r6, lr}
9001280e:	4604      	mov	r4, r0
90012810:	6840      	ldr	r0, [r0, #4]
90012812:	6803      	ldr	r3, [r0, #0]
90012814:	681b      	ldr	r3, [r3, #0]
90012816:	4798      	blx	r3
90012818:	4605      	mov	r5, r0
9001281a:	b930      	cbnz	r0, 9001282a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
9001281c:	7a23      	ldrb	r3, [r4, #8]
9001281e:	b123      	cbz	r3, 9001282a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90012820:	6860      	ldr	r0, [r4, #4]
90012822:	6803      	ldr	r3, [r0, #0]
90012824:	695b      	ldr	r3, [r3, #20]
90012826:	4798      	blx	r3
90012828:	7225      	strb	r5, [r4, #8]
9001282a:	6860      	ldr	r0, [r4, #4]
9001282c:	6803      	ldr	r3, [r0, #0]
9001282e:	681b      	ldr	r3, [r3, #0]
90012830:	4798      	blx	r3
90012832:	b928      	cbnz	r0, 90012840 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90012834:	6823      	ldr	r3, [r4, #0]
90012836:	4620      	mov	r0, r4
90012838:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9001283a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001283e:	4718      	bx	r3
90012840:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012844:	f7ef b836 	b.w	900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90012848 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90012848:	b510      	push	{r4, lr}
9001284a:	6082      	str	r2, [r0, #8]
9001284c:	2200      	movs	r2, #0
9001284e:	4c03      	ldr	r4, [pc, #12]	; (9001285c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90012850:	e9c0 2203 	strd	r2, r2, [r0, #12]
90012854:	e9c0 4100 	strd	r4, r1, [r0]
90012858:	bd10      	pop	{r4, pc}
9001285a:	bf00      	nop
9001285c:	9002bf4c 	.word	0x9002bf4c

90012860 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90012860:	6840      	ldr	r0, [r0, #4]
90012862:	6803      	ldr	r3, [r0, #0]
90012864:	681b      	ldr	r3, [r3, #0]
90012866:	4718      	bx	r3

90012868 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90012868:	094a      	lsrs	r2, r1, #5
9001286a:	4b06      	ldr	r3, [pc, #24]	; (90012884 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
9001286c:	60c1      	str	r1, [r0, #12]
9001286e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90012872:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90012876:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001287a:	4313      	orrs	r3, r2
9001287c:	4319      	orrs	r1, r3
9001287e:	8201      	strh	r1, [r0, #16]
90012880:	4770      	bx	lr
90012882:	bf00      	nop
90012884:	fffff800 	.word	0xfffff800

90012888 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90012888:	f1a0 0008 	sub.w	r0, r0, #8
9001288c:	e7ec      	b.n	90012868 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
9001288e:	bf00      	nop

90012890 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90012890:	b508      	push	{r3, lr}
90012892:	4b05      	ldr	r3, [pc, #20]	; (900128a8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90012894:	6818      	ldr	r0, [r3, #0]
90012896:	6803      	ldr	r3, [r0, #0]
90012898:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
9001289c:	4798      	blx	r3
9001289e:	1e43      	subs	r3, r0, #1
900128a0:	4258      	negs	r0, r3
900128a2:	4158      	adcs	r0, r3
900128a4:	bd08      	pop	{r3, pc}
900128a6:	bf00      	nop
900128a8:	2403989c 	.word	0x2403989c

900128ac <_ZN8touchgfx13PainterRGB565D1Ev>:
900128ac:	4770      	bx	lr

900128ae <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
900128ae:	3808      	subs	r0, #8
900128b0:	4770      	bx	lr

900128b2 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
900128b2:	b430      	push	{r4, r5}
900128b4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900128b8:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
900128bc:	8a02      	ldrh	r2, [r0, #16]
900128be:	f89d 3010 	ldrb.w	r3, [sp, #16]
900128c2:	4629      	mov	r1, r5
900128c4:	9202      	str	r2, [sp, #8]
900128c6:	68c2      	ldr	r2, [r0, #12]
900128c8:	4620      	mov	r0, r4
900128ca:	bc30      	pop	{r4, r5}
900128cc:	f7ef bac8 	b.w	90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

900128d0 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
900128d0:	f7ef babc 	b.w	90001e4c <_ZN8touchgfx5paint8tearDownEv>

900128d4 <_ZN8touchgfx13PainterRGB565D0Ev>:
900128d4:	b510      	push	{r4, lr}
900128d6:	4604      	mov	r4, r0
900128d8:	2114      	movs	r1, #20
900128da:	f015 fbab 	bl	90028034 <_ZdlPvj>
900128de:	4620      	mov	r0, r4
900128e0:	bd10      	pop	{r4, pc}

900128e2 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
900128e2:	f1a0 0008 	sub.w	r0, r0, #8
900128e6:	e7f5      	b.n	900128d4 <_ZN8touchgfx13PainterRGB565D0Ev>

900128e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
900128e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900128ea:	6803      	ldr	r3, [r0, #0]
900128ec:	460d      	mov	r5, r1
900128ee:	4604      	mov	r4, r0
900128f0:	4601      	mov	r1, r0
900128f2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
900128f4:	a802      	add	r0, sp, #8
900128f6:	4798      	blx	r3
900128f8:	6828      	ldr	r0, [r5, #0]
900128fa:	6869      	ldr	r1, [r5, #4]
900128fc:	466b      	mov	r3, sp
900128fe:	c303      	stmia	r3!, {r0, r1}
90012900:	4668      	mov	r0, sp
90012902:	4619      	mov	r1, r3
90012904:	f7fe ff84 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
90012908:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9001290a:	b188      	cbz	r0, 90012930 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001290c:	6803      	ldr	r3, [r0, #0]
9001290e:	1d21      	adds	r1, r4, #4
90012910:	68db      	ldr	r3, [r3, #12]
90012912:	4798      	blx	r3
90012914:	b160      	cbz	r0, 90012930 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012916:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001291a:	2b00      	cmp	r3, #0
9001291c:	dd08      	ble.n	90012930 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001291e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90012922:	2d00      	cmp	r5, #0
90012924:	dd04      	ble.n	90012930 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012926:	4a2b      	ldr	r2, [pc, #172]	; (900129d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90012928:	7812      	ldrb	r2, [r2, #0]
9001292a:	b11a      	cbz	r2, 90012934 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
9001292c:	2a01      	cmp	r2, #1
9001292e:	d029      	beq.n	90012984 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90012930:	b004      	add	sp, #16
90012932:	bd70      	pop	{r4, r5, r6, pc}
90012934:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012938:	441d      	add	r5, r3
9001293a:	b2ad      	uxth	r5, r5
9001293c:	b22e      	sxth	r6, r5
9001293e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90012942:	42b3      	cmp	r3, r6
90012944:	daf4      	bge.n	90012930 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012946:	6823      	ldr	r3, [r4, #0]
90012948:	4669      	mov	r1, sp
9001294a:	4620      	mov	r0, r4
9001294c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
9001294e:	4798      	blx	r3
90012950:	b940      	cbnz	r0, 90012964 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012952:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90012956:	2b01      	cmp	r3, #1
90012958:	d004      	beq.n	90012964 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001295a:	3301      	adds	r3, #1
9001295c:	105b      	asrs	r3, r3, #1
9001295e:	f8ad 3006 	strh.w	r3, [sp, #6]
90012962:	e7f0      	b.n	90012946 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90012964:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90012968:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001296c:	4413      	add	r3, r2
9001296e:	b29b      	uxth	r3, r3
90012970:	441a      	add	r2, r3
90012972:	f8ad 3002 	strh.w	r3, [sp, #2]
90012976:	b212      	sxth	r2, r2
90012978:	4296      	cmp	r6, r2
9001297a:	dae0      	bge.n	9001293e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
9001297c:	1aeb      	subs	r3, r5, r3
9001297e:	f8ad 3006 	strh.w	r3, [sp, #6]
90012982:	e7dc      	b.n	9001293e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90012984:	f8bd 5000 	ldrh.w	r5, [sp]
90012988:	441d      	add	r5, r3
9001298a:	b2ad      	uxth	r5, r5
9001298c:	b22e      	sxth	r6, r5
9001298e:	f9bd 3000 	ldrsh.w	r3, [sp]
90012992:	42b3      	cmp	r3, r6
90012994:	dacc      	bge.n	90012930 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012996:	6823      	ldr	r3, [r4, #0]
90012998:	4669      	mov	r1, sp
9001299a:	4620      	mov	r0, r4
9001299c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
9001299e:	4798      	blx	r3
900129a0:	b940      	cbnz	r0, 900129b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900129a2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900129a6:	2b01      	cmp	r3, #1
900129a8:	d004      	beq.n	900129b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900129aa:	3301      	adds	r3, #1
900129ac:	105b      	asrs	r3, r3, #1
900129ae:	f8ad 3004 	strh.w	r3, [sp, #4]
900129b2:	e7f0      	b.n	90012996 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
900129b4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
900129b8:	f8bd 3000 	ldrh.w	r3, [sp]
900129bc:	4413      	add	r3, r2
900129be:	b29b      	uxth	r3, r3
900129c0:	441a      	add	r2, r3
900129c2:	f8ad 3000 	strh.w	r3, [sp]
900129c6:	b212      	sxth	r2, r2
900129c8:	4296      	cmp	r6, r2
900129ca:	dae0      	bge.n	9001298e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900129cc:	1aeb      	subs	r3, r5, r3
900129ce:	f8ad 3004 	strh.w	r3, [sp, #4]
900129d2:	e7dc      	b.n	9001298e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900129d4:	24039894 	.word	0x24039894

900129d8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
900129d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900129da:	6803      	ldr	r3, [r0, #0]
900129dc:	4604      	mov	r4, r0
900129de:	4601      	mov	r1, r0
900129e0:	4668      	mov	r0, sp
900129e2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
900129e4:	4798      	blx	r3
900129e6:	2100      	movs	r1, #0
900129e8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900129ec:	4668      	mov	r0, sp
900129ee:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900129f2:	9102      	str	r1, [sp, #8]
900129f4:	a902      	add	r1, sp, #8
900129f6:	f8ad 200c 	strh.w	r2, [sp, #12]
900129fa:	f8ad 300e 	strh.w	r3, [sp, #14]
900129fe:	f7fe ff07 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
90012a02:	6823      	ldr	r3, [r4, #0]
90012a04:	4669      	mov	r1, sp
90012a06:	4620      	mov	r0, r4
90012a08:	691b      	ldr	r3, [r3, #16]
90012a0a:	4798      	blx	r3
90012a0c:	b004      	add	sp, #16
90012a0e:	bd10      	pop	{r4, pc}

90012a10 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90012a10:	2101      	movs	r1, #1
90012a12:	2200      	movs	r2, #0
90012a14:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90012a18:	490a      	ldr	r1, [pc, #40]	; (90012a44 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90012a1a:	8082      	strh	r2, [r0, #4]
90012a1c:	6001      	str	r1, [r0, #0]
90012a1e:	21ff      	movs	r1, #255	; 0xff
90012a20:	80c2      	strh	r2, [r0, #6]
90012a22:	8102      	strh	r2, [r0, #8]
90012a24:	8142      	strh	r2, [r0, #10]
90012a26:	8182      	strh	r2, [r0, #12]
90012a28:	81c2      	strh	r2, [r0, #14]
90012a2a:	8202      	strh	r2, [r0, #16]
90012a2c:	8242      	strh	r2, [r0, #18]
90012a2e:	61c2      	str	r2, [r0, #28]
90012a30:	8402      	strh	r2, [r0, #32]
90012a32:	8442      	strh	r2, [r0, #34]	; 0x22
90012a34:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90012a38:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
90012a3c:	6282      	str	r2, [r0, #40]	; 0x28
90012a3e:	e9c0 2205 	strd	r2, r2, [r0, #20]
90012a42:	4770      	bx	lr
90012a44:	9002bfa8 	.word	0x9002bfa8

90012a48 <_ZNK8touchgfx4Line14getMinimalRectEv>:
90012a48:	f101 0364 	add.w	r3, r1, #100	; 0x64
90012a4c:	4602      	mov	r2, r0
90012a4e:	cb03      	ldmia	r3!, {r0, r1}
90012a50:	6010      	str	r0, [r2, #0]
90012a52:	4610      	mov	r0, r2
90012a54:	6051      	str	r1, [r2, #4]
90012a56:	4770      	bx	lr

90012a58 <_ZN8touchgfx4LineD1Ev>:
90012a58:	4770      	bx	lr

90012a5a <_ZN8touchgfx4LineD0Ev>:
90012a5a:	b510      	push	{r4, lr}
90012a5c:	4604      	mov	r4, r0
90012a5e:	2170      	movs	r1, #112	; 0x70
90012a60:	f015 fae8 	bl	90028034 <_ZdlPvj>
90012a64:	4620      	mov	r0, r4
90012a66:	bd10      	pop	{r4, pc}

90012a68 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90012a68:	b507      	push	{r0, r1, r2, lr}
90012a6a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
90012a6e:	ab01      	add	r3, sp, #4
90012a70:	6809      	ldr	r1, [r1, #0]
90012a72:	6800      	ldr	r0, [r0, #0]
90012a74:	f005 fc0e 	bl	90018294 <_ZN8touchgfx6muldivElllRl>
90012a78:	b003      	add	sp, #12
90012a7a:	f85d fb04 	ldr.w	pc, [sp], #4

90012a7e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
90012a7e:	6800      	ldr	r0, [r0, #0]
90012a80:	2800      	cmp	r0, #0
90012a82:	bfb9      	ittee	lt
90012a84:	2320      	movlt	r3, #32
90012a86:	fb90 f0f3 	sdivlt	r0, r0, r3
90012a8a:	301f      	addge	r0, #31
90012a8c:	1140      	asrge	r0, r0, #5
90012a8e:	4770      	bx	lr

90012a90 <_ZNK8touchgfx4Line17invalidateContentEv>:
90012a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012a94:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
90012a98:	b089      	sub	sp, #36	; 0x24
90012a9a:	4604      	mov	r4, r0
90012a9c:	b353      	cbz	r3, 90012af4 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
90012a9e:	6803      	ldr	r3, [r0, #0]
90012aa0:	4601      	mov	r1, r0
90012aa2:	a802      	add	r0, sp, #8
90012aa4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90012aa6:	4798      	blx	r3
90012aa8:	2220      	movs	r2, #32
90012aaa:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
90012aae:	6b61      	ldr	r1, [r4, #52]	; 0x34
90012ab0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90012ab2:	f8d4 b000 	ldr.w	fp, [r4]
90012ab6:	fb9a f0f2 	sdiv	r0, sl, r2
90012aba:	fb91 f5f2 	sdiv	r5, r1, r2
90012abe:	fb93 f6f2 	sdiv	r6, r3, r2
90012ac2:	1b40      	subs	r0, r0, r5
90012ac4:	0076      	lsls	r6, r6, #1
90012ac6:	2800      	cmp	r0, #0
90012ac8:	bfb8      	it	lt
90012aca:	4240      	neglt	r0, r0
90012acc:	4286      	cmp	r6, r0
90012ace:	dc0c      	bgt.n	90012aea <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
90012ad0:	6b25      	ldr	r5, [r4, #48]	; 0x30
90012ad2:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90012ad6:	fb95 f0f2 	sdiv	r0, r5, r2
90012ada:	fb98 f7f2 	sdiv	r7, r8, r2
90012ade:	1bc0      	subs	r0, r0, r7
90012ae0:	2800      	cmp	r0, #0
90012ae2:	bfb8      	it	lt
90012ae4:	4240      	neglt	r0, r0
90012ae6:	4286      	cmp	r6, r0
90012ae8:	dd07      	ble.n	90012afa <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
90012aea:	f8db 3010 	ldr.w	r3, [fp, #16]
90012aee:	a902      	add	r1, sp, #8
90012af0:	4620      	mov	r0, r4
90012af2:	4798      	blx	r3
90012af4:	b009      	add	sp, #36	; 0x24
90012af6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012afa:	eb01 060a 	add.w	r6, r1, sl
90012afe:	2002      	movs	r0, #2
90012b00:	eb08 0705 	add.w	r7, r8, r5
90012b04:	3301      	adds	r3, #1
90012b06:	f10d 0920 	add.w	r9, sp, #32
90012b0a:	9101      	str	r1, [sp, #4]
90012b0c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
90012b10:	fb96 f6f0 	sdiv	r6, r6, r0
90012b14:	fb97 f7f0 	sdiv	r7, r7, r0
90012b18:	4103      	asrs	r3, r0
90012b1a:	b236      	sxth	r6, r6
90012b1c:	b23f      	sxth	r7, r7
90012b1e:	f849 3d08 	str.w	r3, [r9, #-8]!
90012b22:	4648      	mov	r0, r9
90012b24:	fb96 f6f2 	sdiv	r6, r6, r2
90012b28:	fb97 f7f2 	sdiv	r7, r7, r2
90012b2c:	f7ff ffa7 	bl	90012a7e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90012b30:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012b34:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
90012b38:	fa1f fe87 	uxth.w	lr, r7
90012b3c:	9901      	ldr	r1, [sp, #4]
90012b3e:	fa1f fc86 	uxth.w	ip, r6
90012b42:	4293      	cmp	r3, r2
90012b44:	b280      	uxth	r0, r0
90012b46:	eba1 0a0a 	sub.w	sl, r1, sl
90012b4a:	da54      	bge.n	90012bf6 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
90012b4c:	ebac 0100 	sub.w	r1, ip, r0
90012b50:	f1ba 0f00 	cmp.w	sl, #0
90012b54:	4460      	add	r0, ip
90012b56:	f9bd a008 	ldrsh.w	sl, [sp, #8]
90012b5a:	b289      	uxth	r1, r1
90012b5c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
90012b60:	b280      	uxth	r0, r0
90012b62:	b20e      	sxth	r6, r1
90012b64:	da29      	bge.n	90012bba <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
90012b66:	eba8 0505 	sub.w	r5, r8, r5
90012b6a:	2d00      	cmp	r5, #0
90012b6c:	da2a      	bge.n	90012bc4 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
90012b6e:	fa1f f88a 	uxth.w	r8, sl
90012b72:	f8ad a010 	strh.w	sl, [sp, #16]
90012b76:	fa1f f58c 	uxth.w	r5, ip
90012b7a:	f8ad c012 	strh.w	ip, [sp, #18]
90012b7e:	eba0 0008 	sub.w	r0, r0, r8
90012b82:	4443      	add	r3, r8
90012b84:	f8ad 6018 	strh.w	r6, [sp, #24]
90012b88:	f8ad 0014 	strh.w	r0, [sp, #20]
90012b8c:	1a59      	subs	r1, r3, r1
90012b8e:	ebae 0005 	sub.w	r0, lr, r5
90012b92:	f8ad 701a 	strh.w	r7, [sp, #26]
90012b96:	f8ad 101c 	strh.w	r1, [sp, #28]
90012b9a:	f8ad 0016 	strh.w	r0, [sp, #22]
90012b9e:	442a      	add	r2, r5
90012ba0:	eba2 0e0e 	sub.w	lr, r2, lr
90012ba4:	f8ad e01e 	strh.w	lr, [sp, #30]
90012ba8:	f8db 3010 	ldr.w	r3, [fp, #16]
90012bac:	a904      	add	r1, sp, #16
90012bae:	4620      	mov	r0, r4
90012bb0:	4798      	blx	r3
90012bb2:	6823      	ldr	r3, [r4, #0]
90012bb4:	4649      	mov	r1, r9
90012bb6:	691b      	ldr	r3, [r3, #16]
90012bb8:	e79a      	b.n	90012af0 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
90012bba:	d003      	beq.n	90012bc4 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
90012bbc:	eba8 0505 	sub.w	r5, r8, r5
90012bc0:	2d00      	cmp	r5, #0
90012bc2:	dcd4      	bgt.n	90012b6e <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
90012bc4:	fa1f f88a 	uxth.w	r8, sl
90012bc8:	f8ad 6010 	strh.w	r6, [sp, #16]
90012bcc:	fa1f f58c 	uxth.w	r5, ip
90012bd0:	f8ad c012 	strh.w	ip, [sp, #18]
90012bd4:	4443      	add	r3, r8
90012bd6:	eba0 0008 	sub.w	r0, r0, r8
90012bda:	f8ad a018 	strh.w	sl, [sp, #24]
90012bde:	1a59      	subs	r1, r3, r1
90012be0:	ebae 0305 	sub.w	r3, lr, r5
90012be4:	f8ad 701a 	strh.w	r7, [sp, #26]
90012be8:	f8ad 1014 	strh.w	r1, [sp, #20]
90012bec:	f8ad 3016 	strh.w	r3, [sp, #22]
90012bf0:	f8ad 001c 	strh.w	r0, [sp, #28]
90012bf4:	e7d3      	b.n	90012b9e <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
90012bf6:	ebae 0100 	sub.w	r1, lr, r0
90012bfa:	f1ba 0f00 	cmp.w	sl, #0
90012bfe:	4470      	add	r0, lr
90012c00:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
90012c04:	b289      	uxth	r1, r1
90012c06:	f9bd e008 	ldrsh.w	lr, [sp, #8]
90012c0a:	b280      	uxth	r0, r0
90012c0c:	b20f      	sxth	r7, r1
90012c0e:	da20      	bge.n	90012c52 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
90012c10:	eba8 0505 	sub.w	r5, r8, r5
90012c14:	2d00      	cmp	r5, #0
90012c16:	da21      	bge.n	90012c5c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90012c18:	fa1f f88e 	uxth.w	r8, lr
90012c1c:	f8ad e010 	strh.w	lr, [sp, #16]
90012c20:	fa1f f58a 	uxth.w	r5, sl
90012c24:	f8ad a012 	strh.w	sl, [sp, #18]
90012c28:	4443      	add	r3, r8
90012c2a:	ebac 0e08 	sub.w	lr, ip, r8
90012c2e:	442a      	add	r2, r5
90012c30:	1b40      	subs	r0, r0, r5
90012c32:	eba3 0c0c 	sub.w	ip, r3, ip
90012c36:	f8ad e014 	strh.w	lr, [sp, #20]
90012c3a:	1a51      	subs	r1, r2, r1
90012c3c:	f8ad 0016 	strh.w	r0, [sp, #22]
90012c40:	f8ad 6018 	strh.w	r6, [sp, #24]
90012c44:	f8ad 701a 	strh.w	r7, [sp, #26]
90012c48:	f8ad c01c 	strh.w	ip, [sp, #28]
90012c4c:	f8ad 101e 	strh.w	r1, [sp, #30]
90012c50:	e7aa      	b.n	90012ba8 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
90012c52:	d003      	beq.n	90012c5c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90012c54:	eba8 0505 	sub.w	r5, r8, r5
90012c58:	2d00      	cmp	r5, #0
90012c5a:	dcdd      	bgt.n	90012c18 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
90012c5c:	fa1f f58e 	uxth.w	r5, lr
90012c60:	f8ad 7012 	strh.w	r7, [sp, #18]
90012c64:	fa1f f88a 	uxth.w	r8, sl
90012c68:	f8ad e010 	strh.w	lr, [sp, #16]
90012c6c:	442b      	add	r3, r5
90012c6e:	ebac 0705 	sub.w	r7, ip, r5
90012c72:	4442      	add	r2, r8
90012c74:	eba0 0008 	sub.w	r0, r0, r8
90012c78:	eba3 0c0c 	sub.w	ip, r3, ip
90012c7c:	f8ad 7014 	strh.w	r7, [sp, #20]
90012c80:	1a51      	subs	r1, r2, r1
90012c82:	f8ad 6018 	strh.w	r6, [sp, #24]
90012c86:	f8ad a01a 	strh.w	sl, [sp, #26]
90012c8a:	f8ad 1016 	strh.w	r1, [sp, #22]
90012c8e:	f8ad c01c 	strh.w	ip, [sp, #28]
90012c92:	f8ad 001e 	strh.w	r0, [sp, #30]
90012c96:	e787      	b.n	90012ba8 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

90012c98 <_ZN8touchgfx7CWRUtil4sineEi>:
90012c98:	f44f 73b4 	mov.w	r3, #360	; 0x168
90012c9c:	fb90 f2f3 	sdiv	r2, r0, r3
90012ca0:	fb02 0013 	mls	r0, r2, r3, r0
90012ca4:	2800      	cmp	r0, #0
90012ca6:	bfb8      	it	lt
90012ca8:	18c0      	addlt	r0, r0, r3
90012caa:	4b0a      	ldr	r3, [pc, #40]	; (90012cd4 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
90012cac:	285a      	cmp	r0, #90	; 0x5a
90012cae:	dc02      	bgt.n	90012cb6 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90012cb0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90012cb4:	4770      	bx	lr
90012cb6:	28b4      	cmp	r0, #180	; 0xb4
90012cb8:	dc02      	bgt.n	90012cc0 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
90012cba:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
90012cbe:	e7f7      	b.n	90012cb0 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90012cc0:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
90012cc4:	bfd4      	ite	le
90012cc6:	38b4      	suble	r0, #180	; 0xb4
90012cc8:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
90012ccc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90012cd0:	4240      	negs	r0, r0
90012cd2:	4770      	bx	lr
90012cd4:	9002c074 	.word	0x9002c074

90012cd8 <_ZN8touchgfx7CWRUtil5isqrtEm>:
90012cd8:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
90012cdc:	f04f 0300 	mov.w	r3, #0
90012ce0:	bf2c      	ite	cs
90012ce2:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
90012ce6:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
90012cea:	1899      	adds	r1, r3, r2
90012cec:	4288      	cmp	r0, r1
90012cee:	bf24      	itt	cs
90012cf0:	1853      	addcs	r3, r2, r1
90012cf2:	1a40      	subcs	r0, r0, r1
90012cf4:	0892      	lsrs	r2, r2, #2
90012cf6:	ea4f 0353 	mov.w	r3, r3, lsr #1
90012cfa:	d1f6      	bne.n	90012cea <_ZN8touchgfx7CWRUtil5isqrtEm+0x12>
90012cfc:	4618      	mov	r0, r3
90012cfe:	4770      	bx	lr

90012d00 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
90012d00:	b510      	push	{r4, lr}
90012d02:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
90012d06:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
90012d0a:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
90012d0e:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
90012d12:	139b      	asrs	r3, r3, #14
90012d14:	13a4      	asrs	r4, r4, #14
90012d16:	429c      	cmp	r4, r3
90012d18:	bfb8      	it	lt
90012d1a:	461c      	movlt	r4, r3
90012d1c:	2c01      	cmp	r4, #1
90012d1e:	dd07      	ble.n	90012d30 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
90012d20:	fb91 f1f4 	sdiv	r1, r1, r4
90012d24:	fb90 f0f4 	sdiv	r0, r0, r4
90012d28:	f7ff ffea 	bl	90012d00 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
90012d2c:	4360      	muls	r0, r4
90012d2e:	bd10      	pop	{r4, pc}
90012d30:	4340      	muls	r0, r0
90012d32:	fb01 0001 	mla	r0, r1, r1, r0
90012d36:	f7ff ffcf 	bl	90012cd8 <_ZN8touchgfx7CWRUtil5isqrtEm>
90012d3a:	e7f8      	b.n	90012d2e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

90012d3c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
90012d3c:	2800      	cmp	r0, #0
90012d3e:	b508      	push	{r3, lr}
90012d40:	da05      	bge.n	90012d4e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
90012d42:	4240      	negs	r0, r0
90012d44:	f7ff fffa 	bl	90012d3c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90012d48:	4240      	negs	r0, r0
90012d4a:	b240      	sxtb	r0, r0
90012d4c:	bd08      	pop	{r3, pc}
90012d4e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
90012d52:	dc11      	bgt.n	90012d78 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
90012d54:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
90012d58:	dd09      	ble.n	90012d6e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
90012d5a:	4340      	muls	r0, r0
90012d5c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
90012d60:	f7ff ffba 	bl	90012cd8 <_ZN8touchgfx7CWRUtil5isqrtEm>
90012d64:	f7ff ffea 	bl	90012d3c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90012d68:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
90012d6c:	e7ed      	b.n	90012d4a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
90012d6e:	3003      	adds	r0, #3
90012d70:	4b02      	ldr	r3, [pc, #8]	; (90012d7c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
90012d72:	10c0      	asrs	r0, r0, #3
90012d74:	5618      	ldrsb	r0, [r3, r0]
90012d76:	e7e9      	b.n	90012d4c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
90012d78:	2000      	movs	r0, #0
90012d7a:	e7e7      	b.n	90012d4c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
90012d7c:	9002c018 	.word	0x9002c018

90012d80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
90012d80:	4281      	cmp	r1, r0
90012d82:	b537      	push	{r0, r1, r2, r4, r5, lr}
90012d84:	460c      	mov	r4, r1
90012d86:	4615      	mov	r5, r2
90012d88:	dd07      	ble.n	90012d9a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
90012d8a:	4601      	mov	r1, r0
90012d8c:	4620      	mov	r0, r4
90012d8e:	f7ff fff7 	bl	90012d80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012d92:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
90012d96:	b003      	add	sp, #12
90012d98:	bd30      	pop	{r4, r5, pc}
90012d9a:	f7ff ffb1 	bl	90012d00 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
90012d9e:	6028      	str	r0, [r5, #0]
90012da0:	2800      	cmp	r0, #0
90012da2:	d0f8      	beq.n	90012d96 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
90012da4:	4602      	mov	r2, r0
90012da6:	ab01      	add	r3, sp, #4
90012da8:	f44f 6180 	mov.w	r1, #1024	; 0x400
90012dac:	4620      	mov	r0, r4
90012dae:	f005 fa71 	bl	90018294 <_ZN8touchgfx6muldivElllRl>
90012db2:	f7ff ffc3 	bl	90012d3c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90012db6:	e7ee      	b.n	90012d96 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

90012db8 <_ZN8touchgfx4LineC1Ev>:
90012db8:	b510      	push	{r4, lr}
90012dba:	4604      	mov	r4, r0
90012dbc:	f7ff fe28 	bl	90012a10 <_ZN8touchgfx12CanvasWidgetC1Ev>
90012dc0:	4b0c      	ldr	r3, [pc, #48]	; (90012df4 <_ZN8touchgfx4LineC1Ev+0x3c>)
90012dc2:	2220      	movs	r2, #32
90012dc4:	4620      	mov	r0, r4
90012dc6:	6023      	str	r3, [r4, #0]
90012dc8:	2300      	movs	r3, #0
90012dca:	63e2      	str	r2, [r4, #60]	; 0x3c
90012dcc:	2212      	movs	r2, #18
90012dce:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90012dd2:	66e2      	str	r2, [r4, #108]	; 0x6c
90012dd4:	60a3      	str	r3, [r4, #8]
90012dd6:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
90012dda:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
90012dde:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90012de2:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
90012de6:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
90012dea:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
90012dee:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
90012df2:	bd10      	pop	{r4, pc}
90012df4:	9002c134 	.word	0x9002c134

90012df8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
90012df8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90012dfc:	6b47      	ldr	r7, [r0, #52]	; 0x34
90012dfe:	4604      	mov	r4, r0
90012e00:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012e02:	6b85      	ldr	r5, [r0, #56]	; 0x38
90012e04:	6b02      	ldr	r2, [r0, #48]	; 0x30
90012e06:	1aff      	subs	r7, r7, r3
90012e08:	eba5 0502 	sub.w	r5, r5, r2
90012e0c:	d142      	bne.n	90012e94 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
90012e0e:	b955      	cbnz	r5, 90012e26 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
90012e10:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
90012e14:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
90012e18:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
90012e1c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
90012e20:	b002      	add	sp, #8
90012e22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90012e26:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
90012e2a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
90012e2e:	4629      	mov	r1, r5
90012e30:	2502      	movs	r5, #2
90012e32:	4642      	mov	r2, r8
90012e34:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90012e36:	f005 fa4c 	bl	900182d2 <_ZN8touchgfx6muldivElll>
90012e3a:	4642      	mov	r2, r8
90012e3c:	4639      	mov	r1, r7
90012e3e:	fb90 f6f5 	sdiv	r6, r0, r5
90012e42:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90012e44:	f005 fa45 	bl	900182d2 <_ZN8touchgfx6muldivElll>
90012e48:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
90012e4c:	fb90 f5f5 	sdiv	r5, r0, r5
90012e50:	f1b9 0f00 	cmp.w	r9, #0
90012e54:	d067      	beq.n	90012f26 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
90012e56:	f1b9 0f02 	cmp.w	r9, #2
90012e5a:	d878      	bhi.n	90012f4e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
90012e5c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012e5e:	6b60      	ldr	r0, [r4, #52]	; 0x34
90012e60:	1b93      	subs	r3, r2, r6
90012e62:	4432      	add	r2, r6
90012e64:	1b5b      	subs	r3, r3, r5
90012e66:	1b52      	subs	r2, r2, r5
90012e68:	6463      	str	r3, [r4, #68]	; 0x44
90012e6a:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012e6c:	6522      	str	r2, [r4, #80]	; 0x50
90012e6e:	18e9      	adds	r1, r5, r3
90012e70:	1b5b      	subs	r3, r3, r5
90012e72:	1b89      	subs	r1, r1, r6
90012e74:	1b9b      	subs	r3, r3, r6
90012e76:	6561      	str	r1, [r4, #84]	; 0x54
90012e78:	1b81      	subs	r1, r0, r6
90012e7a:	4430      	add	r0, r6
90012e7c:	4429      	add	r1, r5
90012e7e:	4428      	add	r0, r5
90012e80:	64a1      	str	r1, [r4, #72]	; 0x48
90012e82:	6ba1      	ldr	r1, [r4, #56]	; 0x38
90012e84:	64e0      	str	r0, [r4, #76]	; 0x4c
90012e86:	186f      	adds	r7, r5, r1
90012e88:	1b49      	subs	r1, r1, r5
90012e8a:	4437      	add	r7, r6
90012e8c:	4431      	add	r1, r6
90012e8e:	65a7      	str	r7, [r4, #88]	; 0x58
90012e90:	65e1      	str	r1, [r4, #92]	; 0x5c
90012e92:	e05b      	b.n	90012f4c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
90012e94:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
90012e98:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
90012e9c:	2d00      	cmp	r5, #0
90012e9e:	d0c6      	beq.n	90012e2e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90012ea0:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
90012ea4:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
90012ea8:	fb93 f2f8 	sdiv	r2, r3, r8
90012eac:	fb08 3312 	mls	r3, r8, r2, r3
90012eb0:	b353      	cbz	r3, 90012f08 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
90012eb2:	fb98 f2f3 	sdiv	r2, r8, r3
90012eb6:	fb03 8812 	mls	r8, r3, r2, r8
90012eba:	f1b8 0f00 	cmp.w	r8, #0
90012ebe:	d1f3      	bne.n	90012ea8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
90012ec0:	2b01      	cmp	r3, #1
90012ec2:	f24b 5104 	movw	r1, #46340	; 0xb504
90012ec6:	bf1c      	itt	ne
90012ec8:	fb97 f7f3 	sdivne	r7, r7, r3
90012ecc:	fb95 f5f3 	sdivne	r5, r5, r3
90012ed0:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
90012ed4:	4608      	mov	r0, r1
90012ed6:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
90012eda:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
90012ede:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
90012ee2:	428b      	cmp	r3, r1
90012ee4:	dd01      	ble.n	90012eea <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
90012ee6:	428a      	cmp	r2, r1
90012ee8:	dc10      	bgt.n	90012f0c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
90012eea:	fb90 f3f3 	sdiv	r3, r0, r3
90012eee:	fb90 f2f2 	sdiv	r2, r0, r2
90012ef2:	4293      	cmp	r3, r2
90012ef4:	bfa8      	it	ge
90012ef6:	4613      	movge	r3, r2
90012ef8:	435f      	muls	r7, r3
90012efa:	435d      	muls	r5, r3
90012efc:	4629      	mov	r1, r5
90012efe:	4638      	mov	r0, r7
90012f00:	f7ff fefe 	bl	90012d00 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
90012f04:	4680      	mov	r8, r0
90012f06:	e792      	b.n	90012e2e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90012f08:	4643      	mov	r3, r8
90012f0a:	e7d9      	b.n	90012ec0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
90012f0c:	fb93 f3f1 	sdiv	r3, r3, r1
90012f10:	fb92 f2f1 	sdiv	r2, r2, r1
90012f14:	4293      	cmp	r3, r2
90012f16:	bfcc      	ite	gt
90012f18:	3301      	addgt	r3, #1
90012f1a:	1c53      	addle	r3, r2, #1
90012f1c:	fb97 f7f3 	sdiv	r7, r7, r3
90012f20:	fb95 f5f3 	sdiv	r5, r5, r3
90012f24:	e7ea      	b.n	90012efc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
90012f26:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012f28:	6b60      	ldr	r0, [r4, #52]	; 0x34
90012f2a:	1b93      	subs	r3, r2, r6
90012f2c:	4432      	add	r2, r6
90012f2e:	6463      	str	r3, [r4, #68]	; 0x44
90012f30:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012f32:	6522      	str	r2, [r4, #80]	; 0x50
90012f34:	18e9      	adds	r1, r5, r3
90012f36:	1b5b      	subs	r3, r3, r5
90012f38:	6561      	str	r1, [r4, #84]	; 0x54
90012f3a:	1b81      	subs	r1, r0, r6
90012f3c:	4430      	add	r0, r6
90012f3e:	64a1      	str	r1, [r4, #72]	; 0x48
90012f40:	6ba1      	ldr	r1, [r4, #56]	; 0x38
90012f42:	64e0      	str	r0, [r4, #76]	; 0x4c
90012f44:	186f      	adds	r7, r5, r1
90012f46:	1b49      	subs	r1, r1, r5
90012f48:	65a7      	str	r7, [r4, #88]	; 0x58
90012f4a:	65e1      	str	r1, [r4, #92]	; 0x5c
90012f4c:	6623      	str	r3, [r4, #96]	; 0x60
90012f4e:	6c62      	ldr	r2, [r4, #68]	; 0x44
90012f50:	f104 0148 	add.w	r1, r4, #72	; 0x48
90012f54:	6d63      	ldr	r3, [r4, #84]	; 0x54
90012f56:	f104 0c54 	add.w	ip, r4, #84	; 0x54
90012f5a:	9200      	str	r2, [sp, #0]
90012f5c:	9301      	str	r3, [sp, #4]
90012f5e:	680f      	ldr	r7, [r1, #0]
90012f60:	3104      	adds	r1, #4
90012f62:	9800      	ldr	r0, [sp, #0]
90012f64:	42ba      	cmp	r2, r7
90012f66:	bfa8      	it	ge
90012f68:	463a      	movge	r2, r7
90012f6a:	4287      	cmp	r7, r0
90012f6c:	9801      	ldr	r0, [sp, #4]
90012f6e:	bfc8      	it	gt
90012f70:	9700      	strgt	r7, [sp, #0]
90012f72:	68cf      	ldr	r7, [r1, #12]
90012f74:	42bb      	cmp	r3, r7
90012f76:	bfa8      	it	ge
90012f78:	463b      	movge	r3, r7
90012f7a:	4287      	cmp	r7, r0
90012f7c:	bfc8      	it	gt
90012f7e:	9701      	strgt	r7, [sp, #4]
90012f80:	458c      	cmp	ip, r1
90012f82:	d1ec      	bne.n	90012f5e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
90012f84:	2720      	movs	r7, #32
90012f86:	4668      	mov	r0, sp
90012f88:	fb92 f8f7 	sdiv	r8, r2, r7
90012f8c:	fb93 f7f7 	sdiv	r7, r3, r7
90012f90:	f7ff fd75 	bl	90012a7e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90012f94:	4682      	mov	sl, r0
90012f96:	a801      	add	r0, sp, #4
90012f98:	f7ff fd71 	bl	90012a7e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90012f9c:	ebaa 0208 	sub.w	r2, sl, r8
90012fa0:	1bc0      	subs	r0, r0, r7
90012fa2:	f1b9 0f01 	cmp.w	r9, #1
90012fa6:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
90012faa:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
90012fae:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
90012fb2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
90012fb6:	f47f af33 	bne.w	90012e20 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
90012fba:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
90012fbc:	6b61      	ldr	r1, [r4, #52]	; 0x34
90012fbe:	1b83      	subs	r3, r0, r6
90012fc0:	6463      	str	r3, [r4, #68]	; 0x44
90012fc2:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012fc4:	18ea      	adds	r2, r5, r3
90012fc6:	6562      	str	r2, [r4, #84]	; 0x54
90012fc8:	1b8a      	subs	r2, r1, r6
90012fca:	4431      	add	r1, r6
90012fcc:	4406      	add	r6, r0
90012fce:	64a2      	str	r2, [r4, #72]	; 0x48
90012fd0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90012fd2:	64e1      	str	r1, [r4, #76]	; 0x4c
90012fd4:	18af      	adds	r7, r5, r2
90012fd6:	1b52      	subs	r2, r2, r5
90012fd8:	1b5d      	subs	r5, r3, r5
90012fda:	6526      	str	r6, [r4, #80]	; 0x50
90012fdc:	65a7      	str	r7, [r4, #88]	; 0x58
90012fde:	65e2      	str	r2, [r4, #92]	; 0x5c
90012fe0:	6625      	str	r5, [r4, #96]	; 0x60
90012fe2:	e71d      	b.n	90012e20 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

90012fe4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
90012fe4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012fe6:	428b      	cmp	r3, r1
90012fe8:	d102      	bne.n	90012ff0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
90012fea:	6b03      	ldr	r3, [r0, #48]	; 0x30
90012fec:	4293      	cmp	r3, r2
90012fee:	d003      	beq.n	90012ff8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
90012ff0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
90012ff4:	f7ff bf00 	b.w	90012df8 <_ZN8touchgfx4Line17updateCachedShapeEv>
90012ff8:	4770      	bx	lr

90012ffa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
90012ffa:	6b43      	ldr	r3, [r0, #52]	; 0x34
90012ffc:	428b      	cmp	r3, r1
90012ffe:	d102      	bne.n	90013006 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
90013000:	6b83      	ldr	r3, [r0, #56]	; 0x38
90013002:	4293      	cmp	r3, r2
90013004:	d003      	beq.n	9001300e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
90013006:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
9001300a:	f7ff bef5 	b.w	90012df8 <_ZN8touchgfx4Line17updateCachedShapeEv>
9001300e:	4770      	bx	lr

90013010 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
90013010:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
90013014:	f7ff bef0 	b.w	90012df8 <_ZN8touchgfx4Line17updateCachedShapeEv>

90013018 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
90013018:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001301c:	b0a0      	sub	sp, #128	; 0x80
9001301e:	4604      	mov	r4, r0
90013020:	460a      	mov	r2, r1
90013022:	4601      	mov	r1, r0
90013024:	a804      	add	r0, sp, #16
90013026:	f014 fda5 	bl	90027b74 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
9001302a:	2300      	movs	r3, #0
9001302c:	9301      	str	r3, [sp, #4]
9001302e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
90013032:	2b01      	cmp	r3, #1
90013034:	d17c      	bne.n	90013130 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
90013036:	6c60      	ldr	r0, [r4, #68]	; 0x44
90013038:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001303a:	6d61      	ldr	r1, [r4, #84]	; 0x54
9001303c:	6b22      	ldr	r2, [r4, #48]	; 0x30
9001303e:	1ac0      	subs	r0, r0, r3
90013040:	eba1 0102 	sub.w	r1, r1, r2
90013044:	d437      	bmi.n	900130b6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
90013046:	2900      	cmp	r1, #0
90013048:	aa01      	add	r2, sp, #4
9001304a:	db2e      	blt.n	900130aa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
9001304c:	f7ff fe98 	bl	90012d80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90013050:	f100 065a 	add.w	r6, r0, #90	; 0x5a
90013054:	6d62      	ldr	r2, [r4, #84]	; 0x54
90013056:	a804      	add	r0, sp, #16
90013058:	6c61      	ldr	r1, [r4, #68]	; 0x44
9001305a:	f014 ff0b 	bl	90027e74 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001305e:	6da2      	ldr	r2, [r4, #88]	; 0x58
90013060:	6ca1      	ldr	r1, [r4, #72]	; 0x48
90013062:	a804      	add	r0, sp, #16
90013064:	f014 ff53 	bl	90027f0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013068:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9001306a:	2db3      	cmp	r5, #179	; 0xb3
9001306c:	dc33      	bgt.n	900130d6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
9001306e:	eba6 0805 	sub.w	r8, r6, r5
90013072:	4640      	mov	r0, r8
90013074:	f7ff fe10 	bl	90012c98 <_ZN8touchgfx7CWRUtil4sineEi>
90013078:	a902      	add	r1, sp, #8
9001307a:	9002      	str	r0, [sp, #8]
9001307c:	a801      	add	r0, sp, #4
9001307e:	f7ff fcf3 	bl	90012a68 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013082:	6b61      	ldr	r1, [r4, #52]	; 0x34
90013084:	1847      	adds	r7, r0, r1
90013086:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
9001308a:	f7ff fe05 	bl	90012c98 <_ZN8touchgfx7CWRUtil4sineEi>
9001308e:	a903      	add	r1, sp, #12
90013090:	9003      	str	r0, [sp, #12]
90013092:	a801      	add	r0, sp, #4
90013094:	f7ff fce8 	bl	90012a68 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013098:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9001309a:	4639      	mov	r1, r7
9001309c:	1a12      	subs	r2, r2, r0
9001309e:	a804      	add	r0, sp, #16
900130a0:	f014 ff35 	bl	90027f0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900130a4:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
900130a6:	441d      	add	r5, r3
900130a8:	e7df      	b.n	9001306a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
900130aa:	4249      	negs	r1, r1
900130ac:	f7ff fe68 	bl	90012d80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900130b0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
900130b4:	e7ce      	b.n	90013054 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
900130b6:	2900      	cmp	r1, #0
900130b8:	f1c0 0000 	rsb	r0, r0, #0
900130bc:	aa01      	add	r2, sp, #4
900130be:	db04      	blt.n	900130ca <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
900130c0:	f7ff fe5e 	bl	90012d80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900130c4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
900130c8:	e7c4      	b.n	90013054 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
900130ca:	4249      	negs	r1, r1
900130cc:	f7ff fe58 	bl	90012d80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900130d0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
900130d4:	e7be      	b.n	90013054 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
900130d6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
900130d8:	a804      	add	r0, sp, #16
900130da:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
900130dc:	f014 ff17 	bl	90027f0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900130e0:	6e22      	ldr	r2, [r4, #96]	; 0x60
900130e2:	6d21      	ldr	r1, [r4, #80]	; 0x50
900130e4:	a804      	add	r0, sp, #16
900130e6:	f014 ff12 	bl	90027f0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900130ea:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
900130ec:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
900130f0:	2d00      	cmp	r5, #0
900130f2:	dd31      	ble.n	90013158 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
900130f4:	eb05 0806 	add.w	r8, r5, r6
900130f8:	4640      	mov	r0, r8
900130fa:	f7ff fdcd 	bl	90012c98 <_ZN8touchgfx7CWRUtil4sineEi>
900130fe:	a902      	add	r1, sp, #8
90013100:	9002      	str	r0, [sp, #8]
90013102:	a801      	add	r0, sp, #4
90013104:	f7ff fcb0 	bl	90012a68 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013108:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9001310a:	1847      	adds	r7, r0, r1
9001310c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
90013110:	f7ff fdc2 	bl	90012c98 <_ZN8touchgfx7CWRUtil4sineEi>
90013114:	a903      	add	r1, sp, #12
90013116:	9003      	str	r0, [sp, #12]
90013118:	a801      	add	r0, sp, #4
9001311a:	f7ff fca5 	bl	90012a68 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001311e:	6b22      	ldr	r2, [r4, #48]	; 0x30
90013120:	4639      	mov	r1, r7
90013122:	1a12      	subs	r2, r2, r0
90013124:	a804      	add	r0, sp, #16
90013126:	f014 fef2 	bl	90027f0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001312a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
9001312c:	1aed      	subs	r5, r5, r3
9001312e:	e7df      	b.n	900130f0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
90013130:	6d62      	ldr	r2, [r4, #84]	; 0x54
90013132:	a804      	add	r0, sp, #16
90013134:	6c61      	ldr	r1, [r4, #68]	; 0x44
90013136:	f014 fe9d 	bl	90027e74 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001313a:	6da2      	ldr	r2, [r4, #88]	; 0x58
9001313c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9001313e:	a804      	add	r0, sp, #16
90013140:	f014 fee5 	bl	90027f0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013144:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90013146:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
90013148:	a804      	add	r0, sp, #16
9001314a:	f014 fee0 	bl	90027f0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001314e:	6e22      	ldr	r2, [r4, #96]	; 0x60
90013150:	6d21      	ldr	r1, [r4, #80]	; 0x50
90013152:	a804      	add	r0, sp, #16
90013154:	f014 fedb 	bl	90027f0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013158:	21ff      	movs	r1, #255	; 0xff
9001315a:	a804      	add	r0, sp, #16
9001315c:	f014 fdc6 	bl	90027cec <_ZN8touchgfx6Canvas6renderEh>
90013160:	4b04      	ldr	r3, [pc, #16]	; (90013174 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
90013162:	4604      	mov	r4, r0
90013164:	a80c      	add	r0, sp, #48	; 0x30
90013166:	9304      	str	r3, [sp, #16]
90013168:	f001 fa9c 	bl	900146a4 <_ZN8touchgfx7OutlineD1Ev>
9001316c:	4620      	mov	r0, r4
9001316e:	b020      	add	sp, #128	; 0x80
90013170:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013174:	9002c958 	.word	0x9002c958

90013178 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
90013178:	b508      	push	{r3, lr}
9001317a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
9001317e:	b10b      	cbz	r3, 90013184 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
90013180:	f7ef f87a 	bl	90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90013184:	bd08      	pop	{r3, pc}

90013186 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
90013186:	6803      	ldr	r3, [r0, #0]
90013188:	f64f 71fe 	movw	r1, #65534	; 0xfffe
9001318c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
9001318e:	4718      	bx	r3

90013190 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
90013190:	4770      	bx	lr

90013192 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
90013192:	b510      	push	{r4, lr}
90013194:	4604      	mov	r4, r0
90013196:	212c      	movs	r1, #44	; 0x2c
90013198:	f014 ff4c 	bl	90028034 <_ZdlPvj>
9001319c:	4620      	mov	r0, r4
9001319e:	bd10      	pop	{r4, pc}

900131a0 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
900131a0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900131a4:	2bff      	cmp	r3, #255	; 0xff
900131a6:	b510      	push	{r4, lr}
900131a8:	d104      	bne.n	900131b4 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
900131aa:	8cca      	ldrh	r2, [r1, #38]	; 0x26
900131ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
900131b0:	429a      	cmp	r2, r3
900131b2:	d105      	bne.n	900131c0 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
900131b4:	2300      	movs	r3, #0
900131b6:	8003      	strh	r3, [r0, #0]
900131b8:	8043      	strh	r3, [r0, #2]
900131ba:	8083      	strh	r3, [r0, #4]
900131bc:	80c3      	strh	r3, [r0, #6]
900131be:	bd10      	pop	{r4, pc}
900131c0:	2300      	movs	r3, #0
900131c2:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
900131c6:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
900131ca:	8003      	strh	r3, [r0, #0]
900131cc:	8043      	strh	r3, [r0, #2]
900131ce:	8084      	strh	r4, [r0, #4]
900131d0:	80c2      	strh	r2, [r0, #6]
900131d2:	e7f4      	b.n	900131be <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

900131d4 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
900131d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900131d8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900131dc:	b087      	sub	sp, #28
900131de:	4604      	mov	r4, r0
900131e0:	4689      	mov	r9, r1
900131e2:	b363      	cbz	r3, 9001323e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
900131e4:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
900131e6:	f64f 73ff 	movw	r3, #65535	; 0xffff
900131ea:	429a      	cmp	r2, r3
900131ec:	d027      	beq.n	9001323e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
900131ee:	ad06      	add	r5, sp, #24
900131f0:	2700      	movs	r7, #0
900131f2:	f825 2d0c 	strh.w	r2, [r5, #-12]!
900131f6:	4628      	mov	r0, r5
900131f8:	f006 ff88 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
900131fc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013200:	a904      	add	r1, sp, #16
90013202:	f8ad 0014 	strh.w	r0, [sp, #20]
90013206:	f8ad 3016 	strh.w	r3, [sp, #22]
9001320a:	4620      	mov	r0, r4
9001320c:	6823      	ldr	r3, [r4, #0]
9001320e:	9704      	str	r7, [sp, #16]
90013210:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013212:	4798      	blx	r3
90013214:	f7fe fde0 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
90013218:	6803      	ldr	r3, [r0, #0]
9001321a:	4606      	mov	r6, r0
9001321c:	4628      	mov	r0, r5
9001321e:	f8d3 800c 	ldr.w	r8, [r3, #12]
90013222:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
90013224:	f8ad 300c 	strh.w	r3, [sp, #12]
90013228:	f007 f85c 	bl	9001a2e4 <_ZNK8touchgfx6Bitmap7getDataEv>
9001322c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90013230:	4601      	mov	r1, r0
90013232:	9701      	str	r7, [sp, #4]
90013234:	aa04      	add	r2, sp, #16
90013236:	9300      	str	r3, [sp, #0]
90013238:	4630      	mov	r0, r6
9001323a:	464b      	mov	r3, r9
9001323c:	47c0      	blx	r8
9001323e:	b007      	add	sp, #28
90013240:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

90013244 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
90013244:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90013246:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001324a:	460d      	mov	r5, r1
9001324c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90013250:	2100      	movs	r1, #0
90013252:	f8ad 3006 	strh.w	r3, [sp, #6]
90013256:	4604      	mov	r4, r0
90013258:	6803      	ldr	r3, [r0, #0]
9001325a:	f8ad 2004 	strh.w	r2, [sp, #4]
9001325e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90013260:	9100      	str	r1, [sp, #0]
90013262:	4669      	mov	r1, sp
90013264:	4798      	blx	r3
90013266:	4621      	mov	r1, r4
90013268:	a802      	add	r0, sp, #8
9001326a:	f004 fee1 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001326e:	f7fe fdb3 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
90013272:	6803      	ldr	r3, [r0, #0]
90013274:	aa02      	add	r2, sp, #8
90013276:	4669      	mov	r1, sp
90013278:	695e      	ldr	r6, [r3, #20]
9001327a:	462b      	mov	r3, r5
9001327c:	47b0      	blx	r6
9001327e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90013282:	2800      	cmp	r0, #0
90013284:	bf08      	it	eq
90013286:	461d      	moveq	r5, r3
90013288:	84e5      	strh	r5, [r4, #38]	; 0x26
9001328a:	b004      	add	sp, #16
9001328c:	bd70      	pop	{r4, r5, r6, pc}
	...

90013290 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
90013290:	2200      	movs	r2, #0
90013292:	8082      	strh	r2, [r0, #4]
90013294:	80c2      	strh	r2, [r0, #6]
90013296:	8102      	strh	r2, [r0, #8]
90013298:	8142      	strh	r2, [r0, #10]
9001329a:	8182      	strh	r2, [r0, #12]
9001329c:	81c2      	strh	r2, [r0, #14]
9001329e:	8202      	strh	r2, [r0, #16]
900132a0:	8242      	strh	r2, [r0, #18]
900132a2:	61c2      	str	r2, [r0, #28]
900132a4:	8402      	strh	r2, [r0, #32]
900132a6:	8442      	strh	r2, [r0, #34]	; 0x22
900132a8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
900132ac:	e9c0 2205 	strd	r2, r2, [r0, #20]
900132b0:	2201      	movs	r2, #1
900132b2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
900132b6:	4a04      	ldr	r2, [pc, #16]	; (900132c8 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
900132b8:	6002      	str	r2, [r0, #0]
900132ba:	f64f 72ff 	movw	r2, #65535	; 0xffff
900132be:	84c2      	strh	r2, [r0, #38]	; 0x26
900132c0:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
900132c4:	4770      	bx	lr
900132c6:	bf00      	nop
900132c8:	9002c1ac 	.word	0x9002c1ac

900132cc <_ZNK8touchgfx5Image17invalidateContentEv>:
900132cc:	b508      	push	{r3, lr}
900132ce:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900132d2:	b10b      	cbz	r3, 900132d8 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
900132d4:	f7ee ffd0 	bl	90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900132d8:	bd08      	pop	{r3, pc}

900132da <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
900132da:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
900132de:	4770      	bx	lr

900132e0 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
900132e0:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
900132e4:	4770      	bx	lr

900132e6 <_ZN8touchgfx13ScalableImageD1Ev>:
900132e6:	4770      	bx	lr

900132e8 <_ZN8touchgfx13ScalableImageD0Ev>:
900132e8:	b510      	push	{r4, lr}
900132ea:	4604      	mov	r4, r0
900132ec:	212c      	movs	r1, #44	; 0x2c
900132ee:	f014 fea1 	bl	90028034 <_ZdlPvj>
900132f2:	4620      	mov	r0, r4
900132f4:	bd10      	pop	{r4, pc}

900132f6 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
900132f6:	b5f0      	push	{r4, r5, r6, r7, lr}
900132f8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900132fc:	b085      	sub	sp, #20
900132fe:	4604      	mov	r4, r0
90013300:	460d      	mov	r5, r1
90013302:	2bff      	cmp	r3, #255	; 0xff
90013304:	d128      	bne.n	90013358 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90013306:	f101 0626 	add.w	r6, r1, #38	; 0x26
9001330a:	4668      	mov	r0, sp
9001330c:	4631      	mov	r1, r6
9001330e:	f006 ff65 	bl	9001a1dc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90013312:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
90013316:	4630      	mov	r0, r6
90013318:	f006 fef8 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001331c:	4287      	cmp	r7, r0
9001331e:	d11b      	bne.n	90013358 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90013320:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
90013324:	4630      	mov	r0, r6
90013326:	f006 ff25 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001332a:	4287      	cmp	r7, r0
9001332c:	d114      	bne.n	90013358 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001332e:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
90013332:	2100      	movs	r1, #0
90013334:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
90013338:	f8ad 300e 	strh.w	r3, [sp, #14]
9001333c:	466b      	mov	r3, sp
9001333e:	9102      	str	r1, [sp, #8]
90013340:	f8ad 200c 	strh.w	r2, [sp, #12]
90013344:	cb03      	ldmia	r3!, {r0, r1}
90013346:	6020      	str	r0, [r4, #0]
90013348:	4620      	mov	r0, r4
9001334a:	6061      	str	r1, [r4, #4]
9001334c:	4619      	mov	r1, r3
9001334e:	f7fe fa5f 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
90013352:	4620      	mov	r0, r4
90013354:	b005      	add	sp, #20
90013356:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013358:	2300      	movs	r3, #0
9001335a:	8023      	strh	r3, [r4, #0]
9001335c:	8063      	strh	r3, [r4, #2]
9001335e:	80a3      	strh	r3, [r4, #4]
90013360:	80e3      	strh	r3, [r4, #6]
90013362:	e7f6      	b.n	90013352 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

90013364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
90013364:	b538      	push	{r3, r4, r5, lr}
90013366:	2300      	movs	r3, #0
90013368:	2501      	movs	r5, #1
9001336a:	4604      	mov	r4, r0
9001336c:	8083      	strh	r3, [r0, #4]
9001336e:	80c3      	strh	r3, [r0, #6]
90013370:	8103      	strh	r3, [r0, #8]
90013372:	8143      	strh	r3, [r0, #10]
90013374:	8183      	strh	r3, [r0, #12]
90013376:	81c3      	strh	r3, [r0, #14]
90013378:	8203      	strh	r3, [r0, #16]
9001337a:	8243      	strh	r3, [r0, #18]
9001337c:	61c3      	str	r3, [r0, #28]
9001337e:	8403      	strh	r3, [r0, #32]
90013380:	8443      	strh	r3, [r0, #34]	; 0x22
90013382:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
90013386:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
9001338a:	e9c0 3305 	strd	r3, r3, [r0, #20]
9001338e:	4b07      	ldr	r3, [pc, #28]	; (900133ac <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
90013390:	6003      	str	r3, [r0, #0]
90013392:	880b      	ldrh	r3, [r1, #0]
90013394:	84c3      	strh	r3, [r0, #38]	; 0x26
90013396:	23ff      	movs	r3, #255	; 0xff
90013398:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
9001339c:	f001 f81d 	bl	900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900133a0:	4b03      	ldr	r3, [pc, #12]	; (900133b0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
900133a2:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
900133a6:	4620      	mov	r0, r4
900133a8:	6023      	str	r3, [r4, #0]
900133aa:	bd38      	pop	{r3, r4, r5, pc}
900133ac:	9002c468 	.word	0x9002c468
900133b0:	9002c21c 	.word	0x9002c21c

900133b4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
900133b4:	4603      	mov	r3, r0
900133b6:	3026      	adds	r0, #38	; 0x26
900133b8:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
900133bc:	b90b      	cbnz	r3, 900133c2 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
900133be:	f004 bedb 	b.w	90018178 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
900133c2:	f004 bee9 	b.w	90018198 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

900133c8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
900133c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900133cc:	4604      	mov	r4, r0
900133ce:	b0b3      	sub	sp, #204	; 0xcc
900133d0:	469b      	mov	fp, r3
900133d2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
900133d6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900133da:	2500      	movs	r5, #0
900133dc:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
900133e0:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
900133e4:	ab11      	add	r3, sp, #68	; 0x44
900133e6:	9206      	str	r2, [sp, #24]
900133e8:	4618      	mov	r0, r3
900133ea:	9511      	str	r5, [sp, #68]	; 0x44
900133ec:	9307      	str	r3, [sp, #28]
900133ee:	ad13      	add	r5, sp, #76	; 0x4c
900133f0:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
900133f4:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
900133f8:	f7fe fa0a 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
900133fc:	9b07      	ldr	r3, [sp, #28]
900133fe:	e893 0003 	ldmia.w	r3, {r0, r1}
90013402:	e885 0003 	stmia.w	r5, {r0, r1}
90013406:	6821      	ldr	r1, [r4, #0]
90013408:	4620      	mov	r0, r4
9001340a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
9001340c:	4629      	mov	r1, r5
9001340e:	47b0      	blx	r6
90013410:	4621      	mov	r1, r4
90013412:	a815      	add	r0, sp, #84	; 0x54
90013414:	1d26      	adds	r6, r4, #4
90013416:	f004 fe0b 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001341a:	a815      	add	r0, sp, #84	; 0x54
9001341c:	f003 fb16 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90013420:	9b07      	ldr	r3, [sp, #28]
90013422:	4631      	mov	r1, r6
90013424:	4618      	mov	r0, r3
90013426:	f003 fb55 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001342a:	4628      	mov	r0, r5
9001342c:	f104 0526 	add.w	r5, r4, #38	; 0x26
90013430:	f003 fb0c 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90013434:	4628      	mov	r0, r5
90013436:	f006 ff55 	bl	9001a2e4 <_ZNK8touchgfx6Bitmap7getDataEv>
9001343a:	9007      	str	r0, [sp, #28]
9001343c:	2800      	cmp	r0, #0
9001343e:	f000 80ce 	beq.w	900135de <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
90013442:	f8db 200c 	ldr.w	r2, [fp, #12]
90013446:	a809      	add	r0, sp, #36	; 0x24
90013448:	f8db 1000 	ldr.w	r1, [fp]
9001344c:	920c      	str	r2, [sp, #48]	; 0x30
9001344e:	f8da 2000 	ldr.w	r2, [sl]
90013452:	9109      	str	r1, [sp, #36]	; 0x24
90013454:	920d      	str	r2, [sp, #52]	; 0x34
90013456:	f8da 2004 	ldr.w	r2, [sl, #4]
9001345a:	f8db 1004 	ldr.w	r1, [fp, #4]
9001345e:	920e      	str	r2, [sp, #56]	; 0x38
90013460:	f8da 2008 	ldr.w	r2, [sl, #8]
90013464:	910a      	str	r1, [sp, #40]	; 0x28
90013466:	920f      	str	r2, [sp, #60]	; 0x3c
90013468:	f8db 1008 	ldr.w	r1, [fp, #8]
9001346c:	f8da 200c 	ldr.w	r2, [sl, #12]
90013470:	910b      	str	r1, [sp, #44]	; 0x2c
90013472:	a90d      	add	r1, sp, #52	; 0x34
90013474:	9210      	str	r2, [sp, #64]	; 0x40
90013476:	4632      	mov	r2, r6
90013478:	f003 fb10 	bl	90016a9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9001347c:	4632      	mov	r2, r6
9001347e:	a90e      	add	r1, sp, #56	; 0x38
90013480:	a80a      	add	r0, sp, #40	; 0x28
90013482:	f003 fb0b 	bl	90016a9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90013486:	4632      	mov	r2, r6
90013488:	a90f      	add	r1, sp, #60	; 0x3c
9001348a:	a80b      	add	r0, sp, #44	; 0x2c
9001348c:	f003 fb06 	bl	90016a9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90013490:	4632      	mov	r2, r6
90013492:	a910      	add	r1, sp, #64	; 0x40
90013494:	a80c      	add	r0, sp, #48	; 0x30
90013496:	f003 fb01 	bl	90016a9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9001349a:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
9001349e:	ed97 3a00 	vldr	s6, [r7]
900134a2:	eef0 6a67 	vmov.f32	s13, s15
900134a6:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
900134aa:	edd7 4a01 	vldr	s9, [r7, #4]
900134ae:	eeb0 7a67 	vmov.f32	s14, s15
900134b2:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
900134b6:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
900134ba:	ed99 2a00 	vldr	s4, [r9]
900134be:	eeb0 6a67 	vmov.f32	s12, s15
900134c2:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
900134c6:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
900134ca:	edd8 2a00 	vldr	s5, [r8]
900134ce:	edd9 3a01 	vldr	s7, [r9, #4]
900134d2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900134d6:	ed98 4a01 	vldr	s8, [r8, #4]
900134da:	ed99 5a02 	vldr	s10, [r9, #8]
900134de:	edd8 5a02 	vldr	s11, [r8, #8]
900134e2:	ee16 6a10 	vmov	r6, s12
900134e6:	eeb0 6a67 	vmov.f32	s12, s15
900134ea:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
900134ee:	f8d9 e00c 	ldr.w	lr, [r9, #12]
900134f2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900134f6:	f8d8 c00c 	ldr.w	ip, [r8, #12]
900134fa:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
900134fe:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
90013502:	ee16 0a10 	vmov	r0, s12
90013506:	eeb0 6a67 	vmov.f32	s12, s15
9001350a:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9001350e:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
90013512:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013516:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
9001351a:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
9001351e:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
90013522:	ee16 1a10 	vmov	r1, s12
90013526:	eeb0 6a67 	vmov.f32	s12, s15
9001352a:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
9001352e:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
90013532:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013536:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
9001353a:	f8d7 a008 	ldr.w	sl, [r7, #8]
9001353e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90013542:	68ff      	ldr	r7, [r7, #12]
90013544:	ee16 2a10 	vmov	r2, s12
90013548:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
9001354c:	9624      	str	r6, [sp, #144]	; 0x90
9001354e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013552:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
90013556:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
9001355a:	4628      	mov	r0, r5
9001355c:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
90013560:	9b06      	ldr	r3, [sp, #24]
90013562:	922d      	str	r2, [sp, #180]	; 0xb4
90013564:	4a1f      	ldr	r2, [pc, #124]	; (900135e4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90013566:	9317      	str	r3, [sp, #92]	; 0x5c
90013568:	8812      	ldrh	r2, [r2, #0]
9001356a:	9b07      	ldr	r3, [sp, #28]
9001356c:	9218      	str	r2, [sp, #96]	; 0x60
9001356e:	9319      	str	r3, [sp, #100]	; 0x64
90013570:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
90013574:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
90013578:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
9001357c:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
90013580:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
90013584:	9731      	str	r7, [sp, #196]	; 0xc4
90013586:	f006 fedd 	bl	9001a344 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001358a:	901a      	str	r0, [sp, #104]	; 0x68
9001358c:	4628      	mov	r0, r5
9001358e:	f006 fdbd 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
90013592:	901b      	str	r0, [sp, #108]	; 0x6c
90013594:	4628      	mov	r0, r5
90013596:	f006 fded 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001359a:	901c      	str	r0, [sp, #112]	; 0x70
9001359c:	4628      	mov	r0, r5
9001359e:	f006 fdb5 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
900135a2:	4b11      	ldr	r3, [pc, #68]	; (900135e8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
900135a4:	901d      	str	r0, [sp, #116]	; 0x74
900135a6:	681b      	ldr	r3, [r3, #0]
900135a8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900135ac:	b10a      	cbz	r2, 900135b2 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
900135ae:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
900135b0:	b905      	cbnz	r5, 900135b4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
900135b2:	689d      	ldr	r5, [r3, #8]
900135b4:	682b      	ldr	r3, [r5, #0]
900135b6:	4620      	mov	r0, r4
900135b8:	6c1e      	ldr	r6, [r3, #64]	; 0x40
900135ba:	f7ff fefb 	bl	900133b4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
900135be:	f64f 73ff 	movw	r3, #65535	; 0xffff
900135c2:	aa1e      	add	r2, sp, #120	; 0x78
900135c4:	a917      	add	r1, sp, #92	; 0x5c
900135c6:	9304      	str	r3, [sp, #16]
900135c8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
900135cc:	e9cd 0302 	strd	r0, r3, [sp, #8]
900135d0:	ab13      	add	r3, sp, #76	; 0x4c
900135d2:	4628      	mov	r0, r5
900135d4:	9301      	str	r3, [sp, #4]
900135d6:	ab15      	add	r3, sp, #84	; 0x54
900135d8:	9300      	str	r3, [sp, #0]
900135da:	ab19      	add	r3, sp, #100	; 0x64
900135dc:	47b0      	blx	r6
900135de:	b033      	add	sp, #204	; 0xcc
900135e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900135e4:	24039896 	.word	0x24039896
900135e8:	2403989c 	.word	0x2403989c

900135ec <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
900135ec:	b570      	push	{r4, r5, r6, lr}
900135ee:	ed2d 8b04 	vpush	{d8-d9}
900135f2:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900135f6:	b098      	sub	sp, #96	; 0x60
900135f8:	4604      	mov	r4, r0
900135fa:	460e      	mov	r6, r1
900135fc:	2b00      	cmp	r3, #0
900135fe:	d065      	beq.n	900136cc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90013600:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013604:	f100 0526 	add.w	r5, r0, #38	; 0x26
90013608:	ed9f 8a37 	vldr	s16, [pc, #220]	; 900136e8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
9001360c:	ee09 3a10 	vmov	s18, r3
90013610:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013614:	4628      	mov	r0, r5
90013616:	ee08 3a90 	vmov	s17, r3
9001361a:	4b34      	ldr	r3, [pc, #208]	; (900136ec <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
9001361c:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90013620:	930c      	str	r3, [sp, #48]	; 0x30
90013622:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90013626:	930d      	str	r3, [sp, #52]	; 0x34
90013628:	930e      	str	r3, [sp, #56]	; 0x38
9001362a:	ee39 9a08 	vadd.f32	s18, s18, s16
9001362e:	930f      	str	r3, [sp, #60]	; 0x3c
90013630:	f006 fd6c 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
90013634:	ee07 0a90 	vmov	s15, r0
90013638:	4628      	mov	r0, r5
9001363a:	ee78 8a88 	vadd.f32	s17, s17, s16
9001363e:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90013642:	f006 fd97 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013646:	4b2a      	ldr	r3, [pc, #168]	; (900136f0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90013648:	ee07 0a90 	vmov	s15, r0
9001364c:	781b      	ldrb	r3, [r3, #0]
9001364e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90013652:	eef0 7a48 	vmov.f32	s15, s16
90013656:	2b01      	cmp	r3, #1
90013658:	d13c      	bne.n	900136d4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
9001365a:	eef0 6a69 	vmov.f32	s13, s19
9001365e:	ee19 3a90 	vmov	r3, s19
90013662:	eeb0 6a47 	vmov.f32	s12, s14
90013666:	eef0 5a47 	vmov.f32	s11, s14
9001366a:	eef0 9a48 	vmov.f32	s19, s16
9001366e:	eeb0 7a48 	vmov.f32	s14, s16
90013672:	9314      	str	r3, [sp, #80]	; 0x50
90013674:	ab14      	add	r3, sp, #80	; 0x50
90013676:	2200      	movs	r2, #0
90013678:	4631      	mov	r1, r6
9001367a:	9303      	str	r3, [sp, #12]
9001367c:	ab10      	add	r3, sp, #64	; 0x40
9001367e:	4620      	mov	r0, r4
90013680:	edcd 7a04 	vstr	s15, [sp, #16]
90013684:	9302      	str	r3, [sp, #8]
90013686:	ab0c      	add	r3, sp, #48	; 0x30
90013688:	ed8d 9a05 	vstr	s18, [sp, #20]
9001368c:	9301      	str	r3, [sp, #4]
9001368e:	ab08      	add	r3, sp, #32
90013690:	ed8d 9a06 	vstr	s18, [sp, #24]
90013694:	9300      	str	r3, [sp, #0]
90013696:	ab04      	add	r3, sp, #16
90013698:	edcd 7a07 	vstr	s15, [sp, #28]
9001369c:	edcd 7a08 	vstr	s15, [sp, #32]
900136a0:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
900136a4:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
900136a8:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
900136ac:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
900136b0:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
900136b4:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
900136b8:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
900136bc:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
900136c0:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
900136c4:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
900136c8:	f7ff fe7e 	bl	900133c8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
900136cc:	b018      	add	sp, #96	; 0x60
900136ce:	ecbd 8b04 	vpop	{d8-d9}
900136d2:	bd70      	pop	{r4, r5, r6, pc}
900136d4:	eef0 6a47 	vmov.f32	s13, s14
900136d8:	ee18 3a10 	vmov	r3, s16
900136dc:	eef0 5a69 	vmov.f32	s11, s19
900136e0:	eeb0 6a48 	vmov.f32	s12, s16
900136e4:	e7c5      	b.n	90013672 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
900136e6:	bf00      	nop
900136e8:	00000000 	.word	0x00000000
900136ec:	42c80000 	.word	0x42c80000
900136f0:	24039894 	.word	0x24039894

900136f4 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
900136f4:	2000      	movs	r0, #0
900136f6:	4770      	bx	lr

900136f8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
900136f8:	4b07      	ldr	r3, [pc, #28]	; (90013718 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
900136fa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900136fc:	881b      	ldrh	r3, [r3, #0]
900136fe:	4293      	cmp	r3, r2
90013700:	bf81      	itttt	hi
90013702:	4b06      	ldrhi	r3, [pc, #24]	; (9001371c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90013704:	681b      	ldrhi	r3, [r3, #0]
90013706:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
9001370a:	7858      	ldrbhi	r0, [r3, #1]
9001370c:	bf8c      	ite	hi
9001370e:	f000 0003 	andhi.w	r0, r0, #3
90013712:	2000      	movls	r0, #0
90013714:	4770      	bx	lr
90013716:	bf00      	nop
90013718:	240398f8 	.word	0x240398f8
9001371c:	240398f4 	.word	0x240398f4

90013720 <_ZN8touchgfx8TextAreaD1Ev>:
90013720:	4770      	bx	lr
	...

90013724 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90013724:	4b11      	ldr	r3, [pc, #68]	; (9001376c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90013726:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001372a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
9001372c:	4604      	mov	r4, r0
9001372e:	881b      	ldrh	r3, [r3, #0]
90013730:	428b      	cmp	r3, r1
90013732:	d918      	bls.n	90013766 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90013734:	6803      	ldr	r3, [r0, #0]
90013736:	6f9d      	ldr	r5, [r3, #120]	; 0x78
90013738:	4b0d      	ldr	r3, [pc, #52]	; (90013770 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
9001373a:	6818      	ldr	r0, [r3, #0]
9001373c:	f7f0 fe56 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
90013740:	6823      	ldr	r3, [r4, #0]
90013742:	4606      	mov	r6, r0
90013744:	4620      	mov	r0, r4
90013746:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013748:	4798      	blx	r3
9001374a:	6823      	ldr	r3, [r4, #0]
9001374c:	4607      	mov	r7, r0
9001374e:	4620      	mov	r0, r4
90013750:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90013754:	4798      	blx	r3
90013756:	463a      	mov	r2, r7
90013758:	4603      	mov	r3, r0
9001375a:	4631      	mov	r1, r6
9001375c:	4620      	mov	r0, r4
9001375e:	46ac      	mov	ip, r5
90013760:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90013764:	4760      	bx	ip
90013766:	2000      	movs	r0, #0
90013768:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001376c:	240398f8 	.word	0x240398f8
90013770:	24039900 	.word	0x24039900

90013774 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90013774:	4b18      	ldr	r3, [pc, #96]	; (900137d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90013776:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
9001377a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
9001377c:	4604      	mov	r4, r0
9001377e:	881b      	ldrh	r3, [r3, #0]
90013780:	428b      	cmp	r3, r1
90013782:	d926      	bls.n	900137d2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90013784:	4b15      	ldr	r3, [pc, #84]	; (900137dc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90013786:	681b      	ldr	r3, [r3, #0]
90013788:	eb03 0241 	add.w	r2, r3, r1, lsl #1
9001378c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90013790:	4b13      	ldr	r3, [pc, #76]	; (900137e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90013792:	7855      	ldrb	r5, [r2, #1]
90013794:	681b      	ldr	r3, [r3, #0]
90013796:	f3c5 0581 	ubfx	r5, r5, #2, #2
9001379a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
9001379e:	6833      	ldr	r3, [r6, #0]
900137a0:	69df      	ldr	r7, [r3, #28]
900137a2:	4b10      	ldr	r3, [pc, #64]	; (900137e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
900137a4:	6818      	ldr	r0, [r3, #0]
900137a6:	f7f0 fe21 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
900137aa:	6823      	ldr	r3, [r4, #0]
900137ac:	4680      	mov	r8, r0
900137ae:	4620      	mov	r0, r4
900137b0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
900137b2:	4798      	blx	r3
900137b4:	6823      	ldr	r3, [r4, #0]
900137b6:	4681      	mov	r9, r0
900137b8:	4620      	mov	r0, r4
900137ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900137be:	4798      	blx	r3
900137c0:	464b      	mov	r3, r9
900137c2:	9000      	str	r0, [sp, #0]
900137c4:	4642      	mov	r2, r8
900137c6:	4629      	mov	r1, r5
900137c8:	4630      	mov	r0, r6
900137ca:	47b8      	blx	r7
900137cc:	b003      	add	sp, #12
900137ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900137d2:	2000      	movs	r0, #0
900137d4:	e7fa      	b.n	900137cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
900137d6:	bf00      	nop
900137d8:	240398f8 	.word	0x240398f8
900137dc:	240398f4 	.word	0x240398f4
900137e0:	240398fc 	.word	0x240398fc
900137e4:	24039900 	.word	0x24039900

900137e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
900137e8:	b40e      	push	{r1, r2, r3}
900137ea:	4b30      	ldr	r3, [pc, #192]	; (900138ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
900137ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900137f0:	881a      	ldrh	r2, [r3, #0]
900137f2:	b09d      	sub	sp, #116	; 0x74
900137f4:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
900137f6:	4604      	mov	r4, r0
900137f8:	429a      	cmp	r2, r3
900137fa:	d954      	bls.n	900138a6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
900137fc:	aa26      	add	r2, sp, #152	; 0x98
900137fe:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 900138b0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90013802:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 900138b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90013806:	9202      	str	r2, [sp, #8]
90013808:	f8d9 2000 	ldr.w	r2, [r9]
9001380c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90013810:	f8d8 3000 	ldr.w	r3, [r8]
90013814:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90013818:	682b      	ldr	r3, [r5, #0]
9001381a:	4628      	mov	r0, r5
9001381c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001381e:	4798      	blx	r3
90013820:	4606      	mov	r6, r0
90013822:	b207      	sxth	r7, r0
90013824:	a803      	add	r0, sp, #12
90013826:	f005 f8e4 	bl	900189f2 <_ZN8touchgfx12TextProviderC1Ev>
9001382a:	682b      	ldr	r3, [r5, #0]
9001382c:	4628      	mov	r0, r5
9001382e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90013830:	4798      	blx	r3
90013832:	682b      	ldr	r3, [r5, #0]
90013834:	4682      	mov	sl, r0
90013836:	4628      	mov	r0, r5
90013838:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001383a:	4798      	blx	r3
9001383c:	4653      	mov	r3, sl
9001383e:	9000      	str	r0, [sp, #0]
90013840:	a803      	add	r0, sp, #12
90013842:	9a02      	ldr	r2, [sp, #8]
90013844:	9925      	ldr	r1, [sp, #148]	; 0x94
90013846:	f005 f92f 	bl	90018aa8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001384a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
9001384c:	f8d9 3000 	ldr.w	r3, [r9]
90013850:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90013854:	8925      	ldrh	r5, [r4, #8]
90013856:	eb03 0142 	add.w	r1, r3, r2, lsl #1
9001385a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
9001385e:	eba5 050c 	sub.w	r5, r5, ip
90013862:	784a      	ldrb	r2, [r1, #1]
90013864:	f8d8 3000 	ldr.w	r3, [r8]
90013868:	b22d      	sxth	r5, r5
9001386a:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
9001386e:	f3c2 0281 	ubfx	r2, r2, #2, #2
90013872:	9500      	str	r5, [sp, #0]
90013874:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90013878:	a803      	add	r0, sp, #12
9001387a:	f002 fded 	bl	90016458 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
9001387e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
90013882:	b203      	sxth	r3, r0
90013884:	18b9      	adds	r1, r7, r2
90013886:	2900      	cmp	r1, #0
90013888:	dd0b      	ble.n	900138a2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
9001388a:	3b01      	subs	r3, #1
9001388c:	fb13 f302 	smulbb	r3, r3, r2
90013890:	fb16 3300 	smlabb	r3, r6, r0, r3
90013894:	b21f      	sxth	r7, r3
90013896:	4638      	mov	r0, r7
90013898:	b01d      	add	sp, #116	; 0x74
9001389a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001389e:	b003      	add	sp, #12
900138a0:	4770      	bx	lr
900138a2:	2b00      	cmp	r3, #0
900138a4:	dcf7      	bgt.n	90013896 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900138a6:	2700      	movs	r7, #0
900138a8:	e7f5      	b.n	90013896 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900138aa:	bf00      	nop
900138ac:	240398f8 	.word	0x240398f8
900138b0:	240398f4 	.word	0x240398f4
900138b4:	240398fc 	.word	0x240398fc

900138b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
900138b8:	4bbd      	ldr	r3, [pc, #756]	; (90013bb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
900138ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900138be:	460c      	mov	r4, r1
900138c0:	881b      	ldrh	r3, [r3, #0]
900138c2:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
900138c4:	b0a9      	sub	sp, #164	; 0xa4
900138c6:	4680      	mov	r8, r0
900138c8:	428b      	cmp	r3, r1
900138ca:	d809      	bhi.n	900138e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
900138cc:	2300      	movs	r3, #0
900138ce:	f04f 32ff 	mov.w	r2, #4294967295
900138d2:	6083      	str	r3, [r0, #8]
900138d4:	e9c0 3200 	strd	r3, r2, [r0]
900138d8:	4640      	mov	r0, r8
900138da:	b029      	add	sp, #164	; 0xa4
900138dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900138e0:	4eb4      	ldr	r6, [pc, #720]	; (90013bb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
900138e2:	6833      	ldr	r3, [r6, #0]
900138e4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
900138e8:	4bb3      	ldr	r3, [pc, #716]	; (90013bb8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
900138ea:	681b      	ldr	r3, [r3, #0]
900138ec:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900138f0:	4bb2      	ldr	r3, [pc, #712]	; (90013bbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
900138f2:	6818      	ldr	r0, [r3, #0]
900138f4:	f7f0 fd7a 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
900138f8:	682b      	ldr	r3, [r5, #0]
900138fa:	4681      	mov	r9, r0
900138fc:	4628      	mov	r0, r5
900138fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013900:	4798      	blx	r3
90013902:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
90013904:	b203      	sxth	r3, r0
90013906:	4682      	mov	sl, r0
90013908:	4407      	add	r7, r0
9001390a:	a80f      	add	r0, sp, #60	; 0x3c
9001390c:	9304      	str	r3, [sp, #16]
9001390e:	b2bb      	uxth	r3, r7
90013910:	9303      	str	r3, [sp, #12]
90013912:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90013916:	2b00      	cmp	r3, #0
90013918:	f040 80a5 	bne.w	90013a66 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
9001391c:	f005 f869 	bl	900189f2 <_ZN8touchgfx12TextProviderC1Ev>
90013920:	682b      	ldr	r3, [r5, #0]
90013922:	4628      	mov	r0, r5
90013924:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90013926:	4798      	blx	r3
90013928:	682b      	ldr	r3, [r5, #0]
9001392a:	4606      	mov	r6, r0
9001392c:	4628      	mov	r0, r5
9001392e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90013930:	4798      	blx	r3
90013932:	6823      	ldr	r3, [r4, #0]
90013934:	4607      	mov	r7, r0
90013936:	4620      	mov	r0, r4
90013938:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001393a:	4798      	blx	r3
9001393c:	6823      	ldr	r3, [r4, #0]
9001393e:	4683      	mov	fp, r0
90013940:	4620      	mov	r0, r4
90013942:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90013946:	4798      	blx	r3
90013948:	463b      	mov	r3, r7
9001394a:	4649      	mov	r1, r9
9001394c:	4632      	mov	r2, r6
9001394e:	2600      	movs	r6, #0
90013950:	e9cd b000 	strd	fp, r0, [sp]
90013954:	a80f      	add	r0, sp, #60	; 0x3c
90013956:	4637      	mov	r7, r6
90013958:	f005 f8bb 	bl	90018ad2 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
9001395c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90013960:	f8df b250 	ldr.w	fp, [pc, #592]	; 90013bb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90013964:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90013968:	bf0c      	ite	eq
9001396a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
9001396e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90013972:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90013974:	4629      	mov	r1, r5
90013976:	f8db 3000 	ldr.w	r3, [fp]
9001397a:	a80f      	add	r0, sp, #60	; 0x3c
9001397c:	3701      	adds	r7, #1
9001397e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90013982:	f647 72ff 	movw	r2, #32767	; 0x7fff
90013986:	b2bf      	uxth	r7, r7
90013988:	785b      	ldrb	r3, [r3, #1]
9001398a:	f3c3 0381 	ubfx	r3, r3, #2, #2
9001398e:	f002 fa7e 	bl	90015e8e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90013992:	9b03      	ldr	r3, [sp, #12]
90013994:	4286      	cmp	r6, r0
90013996:	eba9 0903 	sub.w	r9, r9, r3
9001399a:	bfb8      	it	lt
9001399c:	4606      	movlt	r6, r0
9001399e:	a80f      	add	r0, sp, #60	; 0x3c
900139a0:	fa0f f989 	sxth.w	r9, r9
900139a4:	b236      	sxth	r6, r6
900139a6:	f005 f84b 	bl	90018a40 <_ZN8touchgfx12TextProvider11endOfStringEv>
900139aa:	b918      	cbnz	r0, 900139b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
900139ac:	7a2b      	ldrb	r3, [r5, #8]
900139ae:	444b      	add	r3, r9
900139b0:	2b00      	cmp	r3, #0
900139b2:	dcde      	bgt.n	90013972 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
900139b4:	9b03      	ldr	r3, [sp, #12]
900139b6:	4620      	mov	r0, r4
900139b8:	9a04      	ldr	r2, [sp, #16]
900139ba:	fb13 f707 	smulbb	r7, r3, r7
900139be:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900139c0:	f895 9009 	ldrb.w	r9, [r5, #9]
900139c4:	1aff      	subs	r7, r7, r3
900139c6:	b2bf      	uxth	r7, r7
900139c8:	b23b      	sxth	r3, r7
900139ca:	429a      	cmp	r2, r3
900139cc:	bfa8      	it	ge
900139ce:	4657      	movge	r7, sl
900139d0:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
900139d4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
900139d8:	6823      	ldr	r3, [r4, #0]
900139da:	444f      	add	r7, r9
900139dc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
900139de:	bf08      	it	eq
900139e0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
900139e4:	fa1f f987 	uxth.w	r9, r7
900139e8:	bf18      	it	ne
900139ea:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
900139ee:	4798      	blx	r3
900139f0:	2801      	cmp	r0, #1
900139f2:	fa0f f789 	sxth.w	r7, r9
900139f6:	b2b3      	uxth	r3, r6
900139f8:	f000 80e2 	beq.w	90013bc0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
900139fc:	2802      	cmp	r0, #2
900139fe:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
90013a02:	f000 80e3 	beq.w	90013bcc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90013a06:	7aea      	ldrb	r2, [r5, #11]
90013a08:	b236      	sxth	r6, r6
90013a0a:	7b2d      	ldrb	r5, [r5, #12]
90013a0c:	1ab6      	subs	r6, r6, r2
90013a0e:	442a      	add	r2, r5
90013a10:	fa1f fa86 	uxth.w	sl, r6
90013a14:	4413      	add	r3, r2
90013a16:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90013a1a:	fa0f fb8a 	sxth.w	fp, sl
90013a1e:	b29b      	uxth	r3, r3
90013a20:	2a02      	cmp	r2, #2
90013a22:	b21e      	sxth	r6, r3
90013a24:	f000 80d6 	beq.w	90013bd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90013a28:	2a03      	cmp	r2, #3
90013a2a:	f000 80de 	beq.w	90013bea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90013a2e:	2a01      	cmp	r2, #1
90013a30:	f040 80e6 	bne.w	90013c00 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90013a34:	8925      	ldrh	r5, [r4, #8]
90013a36:	4633      	mov	r3, r6
90013a38:	463e      	mov	r6, r7
90013a3a:	eba5 0909 	sub.w	r9, r5, r9
90013a3e:	461f      	mov	r7, r3
90013a40:	465d      	mov	r5, fp
90013a42:	fa0f fb89 	sxth.w	fp, r9
90013a46:	4b5d      	ldr	r3, [pc, #372]	; (90013bbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90013a48:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90013a4a:	6818      	ldr	r0, [r3, #0]
90013a4c:	f7f0 fcce 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
90013a50:	f8a8 b000 	strh.w	fp, [r8]
90013a54:	f8a8 5002 	strh.w	r5, [r8, #2]
90013a58:	f8a8 6004 	strh.w	r6, [r8, #4]
90013a5c:	f8a8 7006 	strh.w	r7, [r8, #6]
90013a60:	f8c8 0008 	str.w	r0, [r8, #8]
90013a64:	e738      	b.n	900138d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90013a66:	f004 ffc4 	bl	900189f2 <_ZN8touchgfx12TextProviderC1Ev>
90013a6a:	682b      	ldr	r3, [r5, #0]
90013a6c:	4628      	mov	r0, r5
90013a6e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90013a70:	4798      	blx	r3
90013a72:	682b      	ldr	r3, [r5, #0]
90013a74:	4607      	mov	r7, r0
90013a76:	4628      	mov	r0, r5
90013a78:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90013a7a:	4798      	blx	r3
90013a7c:	6823      	ldr	r3, [r4, #0]
90013a7e:	4683      	mov	fp, r0
90013a80:	4620      	mov	r0, r4
90013a82:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013a84:	4798      	blx	r3
90013a86:	6822      	ldr	r2, [r4, #0]
90013a88:	9005      	str	r0, [sp, #20]
90013a8a:	4620      	mov	r0, r4
90013a8c:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
90013a90:	4790      	blx	r2
90013a92:	9b05      	ldr	r3, [sp, #20]
90013a94:	463a      	mov	r2, r7
90013a96:	4649      	mov	r1, r9
90013a98:	9001      	str	r0, [sp, #4]
90013a9a:	a80f      	add	r0, sp, #60	; 0x3c
90013a9c:	9300      	str	r3, [sp, #0]
90013a9e:	465b      	mov	r3, fp
90013aa0:	f005 f817 	bl	90018ad2 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90013aa4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90013aa8:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90013aac:	af0f      	add	r7, sp, #60	; 0x3c
90013aae:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90013ab2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013ab6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90013ab8:	bf0a      	itet	eq
90013aba:	464a      	moveq	r2, r9
90013abc:	461a      	movne	r2, r3
90013abe:	4699      	moveq	r9, r3
90013ac0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
90013ac4:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
90013ac8:	1ad2      	subs	r2, r2, r3
90013aca:	6833      	ldr	r3, [r6, #0]
90013acc:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
90013ad0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90013ad4:	7859      	ldrb	r1, [r3, #1]
90013ad6:	2300      	movs	r3, #0
90013ad8:	9707      	str	r7, [sp, #28]
90013ada:	f3c1 0181 	ubfx	r1, r1, #2, #2
90013ade:	f8ad 3018 	strh.w	r3, [sp, #24]
90013ae2:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90013ae6:	f88d 1020 	strb.w	r1, [sp, #32]
90013aea:	9509      	str	r5, [sp, #36]	; 0x24
90013aec:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90013af0:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
90013af4:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90013af8:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90013afc:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90013b00:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90013b04:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90013b08:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90013b0c:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90013b10:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
90013b14:	b350      	cbz	r0, 90013b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013b16:	682b      	ldr	r3, [r5, #0]
90013b18:	4628      	mov	r0, r5
90013b1a:	695b      	ldr	r3, [r3, #20]
90013b1c:	4798      	blx	r3
90013b1e:	4607      	mov	r7, r0
90013b20:	b320      	cbz	r0, 90013b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013b22:	9809      	ldr	r0, [sp, #36]	; 0x24
90013b24:	4639      	mov	r1, r7
90013b26:	6803      	ldr	r3, [r0, #0]
90013b28:	68db      	ldr	r3, [r3, #12]
90013b2a:	4798      	blx	r3
90013b2c:	4606      	mov	r6, r0
90013b2e:	b1e8      	cbz	r0, 90013b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013b30:	7b43      	ldrb	r3, [r0, #13]
90013b32:	7a82      	ldrb	r2, [r0, #10]
90013b34:	005b      	lsls	r3, r3, #1
90013b36:	f403 7380 	and.w	r3, r3, #256	; 0x100
90013b3a:	4313      	orrs	r3, r2
90013b3c:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90013b40:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
90013b44:	2b06      	cmp	r3, #6
90013b46:	d111      	bne.n	90013b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013b48:	9809      	ldr	r0, [sp, #36]	; 0x24
90013b4a:	4632      	mov	r2, r6
90013b4c:	4639      	mov	r1, r7
90013b4e:	6803      	ldr	r3, [r0, #0]
90013b50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90013b52:	4798      	blx	r3
90013b54:	7b73      	ldrb	r3, [r6, #13]
90013b56:	005b      	lsls	r3, r3, #1
90013b58:	f403 7280 	and.w	r2, r3, #256	; 0x100
90013b5c:	7ab3      	ldrb	r3, [r6, #10]
90013b5e:	4313      	orrs	r3, r2
90013b60:	4418      	add	r0, r3
90013b62:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90013b66:	4418      	add	r0, r3
90013b68:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90013b6c:	2600      	movs	r6, #0
90013b6e:	4637      	mov	r7, r6
90013b70:	a806      	add	r0, sp, #24
90013b72:	3701      	adds	r7, #1
90013b74:	f002 fb6d 	bl	90016252 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90013b78:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
90013b7c:	9b03      	ldr	r3, [sp, #12]
90013b7e:	b2bf      	uxth	r7, r7
90013b80:	4286      	cmp	r6, r0
90013b82:	eba9 0903 	sub.w	r9, r9, r3
90013b86:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90013b8a:	bfb8      	it	lt
90013b8c:	4606      	movlt	r6, r0
90013b8e:	fa0f f989 	sxth.w	r9, r9
90013b92:	b236      	sxth	r6, r6
90013b94:	2b00      	cmp	r3, #0
90013b96:	f43f af0d 	beq.w	900139b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013b9a:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
90013b9e:	2b00      	cmp	r3, #0
90013ba0:	f47f af08 	bne.w	900139b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013ba4:	7a2b      	ldrb	r3, [r5, #8]
90013ba6:	444b      	add	r3, r9
90013ba8:	2b00      	cmp	r3, #0
90013baa:	dce1      	bgt.n	90013b70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90013bac:	e702      	b.n	900139b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013bae:	bf00      	nop
90013bb0:	240398f8 	.word	0x240398f8
90013bb4:	240398f4 	.word	0x240398f4
90013bb8:	240398fc 	.word	0x240398fc
90013bbc:	24039900 	.word	0x24039900
90013bc0:	ebaa 0606 	sub.w	r6, sl, r6
90013bc4:	2002      	movs	r0, #2
90013bc6:	fb96 f6f0 	sdiv	r6, r6, r0
90013bca:	e71c      	b.n	90013a06 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90013bcc:	441e      	add	r6, r3
90013bce:	ebaa 0606 	sub.w	r6, sl, r6
90013bd2:	e718      	b.n	90013a06 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90013bd4:	8925      	ldrh	r5, [r4, #8]
90013bd6:	1aed      	subs	r5, r5, r3
90013bd8:	eba5 050a 	sub.w	r5, r5, sl
90013bdc:	fa0f fb85 	sxth.w	fp, r5
90013be0:	8965      	ldrh	r5, [r4, #10]
90013be2:	eba5 0509 	sub.w	r5, r5, r9
90013be6:	b22d      	sxth	r5, r5
90013be8:	e72d      	b.n	90013a46 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90013bea:	8965      	ldrh	r5, [r4, #10]
90013bec:	f04f 0b00 	mov.w	fp, #0
90013bf0:	1aed      	subs	r5, r5, r3
90013bf2:	4633      	mov	r3, r6
90013bf4:	463e      	mov	r6, r7
90013bf6:	eba5 050a 	sub.w	r5, r5, sl
90013bfa:	461f      	mov	r7, r3
90013bfc:	b22d      	sxth	r5, r5
90013bfe:	e722      	b.n	90013a46 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90013c00:	2500      	movs	r5, #0
90013c02:	e720      	b.n	90013a46 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90013c04 <_ZN8touchgfx8TextAreaD0Ev>:
90013c04:	b510      	push	{r4, lr}
90013c06:	4604      	mov	r4, r0
90013c08:	2148      	movs	r1, #72	; 0x48
90013c0a:	f014 fa13 	bl	90028034 <_ZdlPvj>
90013c0e:	4620      	mov	r0, r4
90013c10:	bd10      	pop	{r4, pc}
	...

90013c14 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90013c14:	b513      	push	{r0, r1, r4, lr}
90013c16:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
90013c1a:	4604      	mov	r4, r0
90013c1c:	b1fb      	cbz	r3, 90013c5e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013c1e:	4b16      	ldr	r3, [pc, #88]	; (90013c78 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90013c20:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90013c22:	881b      	ldrh	r3, [r3, #0]
90013c24:	428b      	cmp	r3, r1
90013c26:	d91a      	bls.n	90013c5e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013c28:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013c2c:	2b00      	cmp	r3, #0
90013c2e:	dd16      	ble.n	90013c5e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013c30:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013c34:	2b00      	cmp	r3, #0
90013c36:	dd12      	ble.n	90013c5e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013c38:	4b10      	ldr	r3, [pc, #64]	; (90013c7c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90013c3a:	6818      	ldr	r0, [r3, #0]
90013c3c:	f7f0 fbd6 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
90013c40:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90013c44:	6822      	ldr	r2, [r4, #0]
90013c46:	2b00      	cmp	r3, #0
90013c48:	db06      	blt.n	90013c58 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90013c4a:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90013c4e:	2b00      	cmp	r3, #0
90013c50:	db02      	blt.n	90013c58 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90013c52:	6c63      	ldr	r3, [r4, #68]	; 0x44
90013c54:	4298      	cmp	r0, r3
90013c56:	d004      	beq.n	90013c62 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90013c58:	6953      	ldr	r3, [r2, #20]
90013c5a:	4620      	mov	r0, r4
90013c5c:	4798      	blx	r3
90013c5e:	b002      	add	sp, #8
90013c60:	bd10      	pop	{r4, pc}
90013c62:	f104 013c 	add.w	r1, r4, #60	; 0x3c
90013c66:	466b      	mov	r3, sp
90013c68:	6912      	ldr	r2, [r2, #16]
90013c6a:	c903      	ldmia	r1, {r0, r1}
90013c6c:	e883 0003 	stmia.w	r3, {r0, r1}
90013c70:	4619      	mov	r1, r3
90013c72:	4620      	mov	r0, r4
90013c74:	4790      	blx	r2
90013c76:	e7f2      	b.n	90013c5e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013c78:	240398f8 	.word	0x240398f8
90013c7c:	24039900 	.word	0x24039900

90013c80 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90013c80:	4b45      	ldr	r3, [pc, #276]	; (90013d98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90013c82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013c86:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90013c88:	b08e      	sub	sp, #56	; 0x38
90013c8a:	881b      	ldrh	r3, [r3, #0]
90013c8c:	4604      	mov	r4, r0
90013c8e:	4293      	cmp	r3, r2
90013c90:	d97e      	bls.n	90013d90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013c92:	6808      	ldr	r0, [r1, #0]
90013c94:	ab05      	add	r3, sp, #20
90013c96:	6849      	ldr	r1, [r1, #4]
90013c98:	4d40      	ldr	r5, [pc, #256]	; (90013d9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90013c9a:	c303      	stmia	r3!, {r0, r1}
90013c9c:	4611      	mov	r1, r2
90013c9e:	6828      	ldr	r0, [r5, #0]
90013ca0:	f7f0 fba4 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
90013ca4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90013ca8:	2b00      	cmp	r3, #0
90013caa:	db11      	blt.n	90013cd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013cac:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90013cb0:	2b00      	cmp	r3, #0
90013cb2:	db0d      	blt.n	90013cd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013cb4:	6c63      	ldr	r3, [r4, #68]	; 0x44
90013cb6:	4298      	cmp	r0, r3
90013cb8:	d10a      	bne.n	90013cd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013cba:	f104 023c 	add.w	r2, r4, #60	; 0x3c
90013cbe:	ab09      	add	r3, sp, #36	; 0x24
90013cc0:	e892 0003 	ldmia.w	r2, {r0, r1}
90013cc4:	e883 0003 	stmia.w	r3, {r0, r1}
90013cc8:	4619      	mov	r1, r3
90013cca:	a805      	add	r0, sp, #20
90013ccc:	f7fd fda0 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
90013cd0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013cd4:	2b00      	cmp	r3, #0
90013cd6:	dd5b      	ble.n	90013d90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013cd8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90013cdc:	2b00      	cmp	r3, #0
90013cde:	dd57      	ble.n	90013d90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013ce0:	4f2f      	ldr	r7, [pc, #188]	; (90013da0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90013ce2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90013ce4:	683b      	ldr	r3, [r7, #0]
90013ce6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90013cea:	4b2e      	ldr	r3, [pc, #184]	; (90013da4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90013cec:	681b      	ldr	r3, [r3, #0]
90013cee:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90013cf2:	2e00      	cmp	r6, #0
90013cf4:	d04c      	beq.n	90013d90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013cf6:	6823      	ldr	r3, [r4, #0]
90013cf8:	4620      	mov	r0, r4
90013cfa:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
90013cfe:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90013d00:	4798      	blx	r3
90013d02:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90013d04:	683b      	ldr	r3, [r7, #0]
90013d06:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
90013d0a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90013d0e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
90013d12:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
90013d16:	785b      	ldrb	r3, [r3, #1]
90013d18:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
90013d1c:	f3c3 0381 	ubfx	r3, r3, #2, #2
90013d20:	6b21      	ldr	r1, [r4, #48]	; 0x30
90013d22:	9609      	str	r6, [sp, #36]	; 0x24
90013d24:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90013d28:	4b1f      	ldr	r3, [pc, #124]	; (90013da8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90013d2a:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
90013d2e:	681b      	ldr	r3, [r3, #0]
90013d30:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
90013d34:	910b      	str	r1, [sp, #44]	; 0x2c
90013d36:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
90013d3a:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
90013d3e:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
90013d42:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
90013d46:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013d4a:	b10a      	cbz	r2, 90013d50 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
90013d4c:	6cde      	ldr	r6, [r3, #76]	; 0x4c
90013d4e:	b906      	cbnz	r6, 90013d52 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90013d50:	689e      	ldr	r6, [r3, #8]
90013d52:	af07      	add	r7, sp, #28
90013d54:	4621      	mov	r1, r4
90013d56:	4638      	mov	r0, r7
90013d58:	f004 f96a 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013d5c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90013d5e:	6828      	ldr	r0, [r5, #0]
90013d60:	f7f0 fb44 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
90013d64:	6823      	ldr	r3, [r4, #0]
90013d66:	4605      	mov	r5, r0
90013d68:	4620      	mov	r0, r4
90013d6a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013d6c:	4798      	blx	r3
90013d6e:	6823      	ldr	r3, [r4, #0]
90013d70:	4680      	mov	r8, r0
90013d72:	4620      	mov	r0, r4
90013d74:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90013d78:	4798      	blx	r3
90013d7a:	ab09      	add	r3, sp, #36	; 0x24
90013d7c:	9501      	str	r5, [sp, #4]
90013d7e:	9300      	str	r3, [sp, #0]
90013d80:	ab05      	add	r3, sp, #20
90013d82:	e9cd 8002 	strd	r8, r0, [sp, #8]
90013d86:	4630      	mov	r0, r6
90013d88:	e897 0006 	ldmia.w	r7, {r1, r2}
90013d8c:	f7f0 fade 	bl	9000434c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90013d90:	b00e      	add	sp, #56	; 0x38
90013d92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013d96:	bf00      	nop
90013d98:	240398f8 	.word	0x240398f8
90013d9c:	24039900 	.word	0x24039900
90013da0:	240398f4 	.word	0x240398f4
90013da4:	240398fc 	.word	0x240398fc
90013da8:	2403989c 	.word	0x2403989c

90013dac <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90013dac:	b570      	push	{r4, r5, r6, lr}
90013dae:	6803      	ldr	r3, [r0, #0]
90013db0:	4604      	mov	r4, r0
90013db2:	4615      	mov	r5, r2
90013db4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013db6:	4798      	blx	r3
90013db8:	6823      	ldr	r3, [r4, #0]
90013dba:	4629      	mov	r1, r5
90013dbc:	4620      	mov	r0, r4
90013dbe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90013dc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013dc4:	4718      	bx	r3
	...

90013dc8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90013dc8:	b538      	push	{r3, r4, r5, lr}
90013dca:	4b0e      	ldr	r3, [pc, #56]	; (90013e04 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90013dcc:	4604      	mov	r4, r0
90013dce:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90013dd0:	881b      	ldrh	r3, [r3, #0]
90013dd2:	429a      	cmp	r2, r3
90013dd4:	d214      	bcs.n	90013e00 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90013dd6:	6803      	ldr	r3, [r0, #0]
90013dd8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90013dda:	4798      	blx	r3
90013ddc:	6823      	ldr	r3, [r4, #0]
90013dde:	4605      	mov	r5, r0
90013de0:	4620      	mov	r0, r4
90013de2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90013de4:	4798      	blx	r3
90013de6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90013dea:	b22d      	sxth	r5, r5
90013dec:	4601      	mov	r1, r0
90013dee:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90013df2:	bf06      	itte	eq
90013df4:	4602      	moveq	r2, r0
90013df6:	4629      	moveq	r1, r5
90013df8:	462a      	movne	r2, r5
90013dfa:	4620      	mov	r0, r4
90013dfc:	f7ff ffd6 	bl	90013dac <_ZN8touchgfx8Drawable14setWidthHeightEss>
90013e00:	bd38      	pop	{r3, r4, r5, pc}
90013e02:	bf00      	nop
90013e04:	240398f8 	.word	0x240398f8

90013e08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90013e08:	b530      	push	{r4, r5, lr}
90013e0a:	888b      	ldrh	r3, [r1, #4]
90013e0c:	b085      	sub	sp, #20
90013e0e:	4604      	mov	r4, r0
90013e10:	8583      	strh	r3, [r0, #44]	; 0x2c
90013e12:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013e16:	b923      	cbnz	r3, 90013e22 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90013e18:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013e1c:	b90b      	cbnz	r3, 90013e22 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90013e1e:	f7ff ffd3 	bl	90013dc8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90013e22:	6823      	ldr	r3, [r4, #0]
90013e24:	466d      	mov	r5, sp
90013e26:	4621      	mov	r1, r4
90013e28:	343c      	adds	r4, #60	; 0x3c
90013e2a:	4628      	mov	r0, r5
90013e2c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90013e30:	4798      	blx	r3
90013e32:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90013e36:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90013e3a:	b005      	add	sp, #20
90013e3c:	bd30      	pop	{r4, r5, pc}

90013e3e <_ZNK8touchgfx3Box12getSolidRectEv>:
90013e3e:	2300      	movs	r3, #0
90013e40:	8083      	strh	r3, [r0, #4]
90013e42:	80c3      	strh	r3, [r0, #6]
90013e44:	8003      	strh	r3, [r0, #0]
90013e46:	8043      	strh	r3, [r0, #2]
90013e48:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
90013e4c:	2bff      	cmp	r3, #255	; 0xff
90013e4e:	bf01      	itttt	eq
90013e50:	890b      	ldrheq	r3, [r1, #8]
90013e52:	8083      	strheq	r3, [r0, #4]
90013e54:	894b      	ldrheq	r3, [r1, #10]
90013e56:	80c3      	strheq	r3, [r0, #6]
90013e58:	4770      	bx	lr
	...

90013e5c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90013e5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
90013e5e:	4604      	mov	r4, r0
90013e60:	466b      	mov	r3, sp
90013e62:	6808      	ldr	r0, [r1, #0]
90013e64:	6849      	ldr	r1, [r1, #4]
90013e66:	c303      	stmia	r3!, {r0, r1}
90013e68:	6823      	ldr	r3, [r4, #0]
90013e6a:	4669      	mov	r1, sp
90013e6c:	4620      	mov	r0, r4
90013e6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013e70:	4798      	blx	r3
90013e72:	4b08      	ldr	r3, [pc, #32]	; (90013e94 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90013e74:	681b      	ldr	r3, [r3, #0]
90013e76:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013e7a:	b10a      	cbz	r2, 90013e80 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90013e7c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90013e7e:	b900      	cbnz	r0, 90013e82 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90013e80:	6898      	ldr	r0, [r3, #8]
90013e82:	6803      	ldr	r3, [r0, #0]
90013e84:	4669      	mov	r1, sp
90013e86:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90013e88:	6a1d      	ldr	r5, [r3, #32]
90013e8a:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90013e8e:	47a8      	blx	r5
90013e90:	b003      	add	sp, #12
90013e92:	bd30      	pop	{r4, r5, pc}
90013e94:	2403989c 	.word	0x2403989c

90013e98 <_ZN8touchgfx3BoxD1Ev>:
90013e98:	4770      	bx	lr

90013e9a <_ZN8touchgfx3BoxD0Ev>:
90013e9a:	b510      	push	{r4, lr}
90013e9c:	4604      	mov	r4, r0
90013e9e:	212c      	movs	r1, #44	; 0x2c
90013ea0:	f014 f8c8 	bl	90028034 <_ZdlPvj>
90013ea4:	4620      	mov	r0, r4
90013ea6:	bd10      	pop	{r4, pc}

90013ea8 <_ZNK8touchgfx3Box17invalidateContentEv>:
90013ea8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
90013eac:	b12a      	cbz	r2, 90013eba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90013eae:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90013eb2:	b112      	cbz	r2, 90013eba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90013eb4:	6803      	ldr	r3, [r0, #0]
90013eb6:	695b      	ldr	r3, [r3, #20]
90013eb8:	4718      	bx	r3
90013eba:	4770      	bx	lr

90013ebc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90013ebc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
90013ec0:	4770      	bx	lr

90013ec2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90013ec2:	b570      	push	{r4, r5, r6, lr}
90013ec4:	880b      	ldrh	r3, [r1, #0]
90013ec6:	4605      	mov	r5, r0
90013ec8:	4604      	mov	r4, r0
90013eca:	85c3      	strh	r3, [r0, #46]	; 0x2e
90013ecc:	8813      	ldrh	r3, [r2, #0]
90013ece:	f825 3f30 	strh.w	r3, [r5, #48]!
90013ed2:	4628      	mov	r0, r5
90013ed4:	f006 f91a 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
90013ed8:	4606      	mov	r6, r0
90013eda:	4628      	mov	r0, r5
90013edc:	f006 f94a 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013ee0:	6823      	ldr	r3, [r4, #0]
90013ee2:	4605      	mov	r5, r0
90013ee4:	4631      	mov	r1, r6
90013ee6:	4620      	mov	r0, r4
90013ee8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013eea:	4798      	blx	r3
90013eec:	6823      	ldr	r3, [r4, #0]
90013eee:	4629      	mov	r1, r5
90013ef0:	4620      	mov	r0, r4
90013ef2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90013ef4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013ef8:	4718      	bx	r3

90013efa <_ZN8touchgfx14AbstractButton13executeActionEv>:
90013efa:	b510      	push	{r4, lr}
90013efc:	4604      	mov	r4, r0
90013efe:	6a80      	ldr	r0, [r0, #40]	; 0x28
90013f00:	b150      	cbz	r0, 90013f18 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90013f02:	6803      	ldr	r3, [r0, #0]
90013f04:	68db      	ldr	r3, [r3, #12]
90013f06:	4798      	blx	r3
90013f08:	b130      	cbz	r0, 90013f18 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90013f0a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90013f0c:	4621      	mov	r1, r4
90013f0e:	6803      	ldr	r3, [r0, #0]
90013f10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013f14:	689b      	ldr	r3, [r3, #8]
90013f16:	4718      	bx	r3
90013f18:	bd10      	pop	{r4, pc}

90013f1a <_ZNK8touchgfx6Button12getSolidRectEv>:
90013f1a:	b510      	push	{r4, lr}
90013f1c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
90013f20:	4604      	mov	r4, r0
90013f22:	2bff      	cmp	r3, #255	; 0xff
90013f24:	d006      	beq.n	90013f34 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90013f26:	2300      	movs	r3, #0
90013f28:	8003      	strh	r3, [r0, #0]
90013f2a:	8043      	strh	r3, [r0, #2]
90013f2c:	8083      	strh	r3, [r0, #4]
90013f2e:	80c3      	strh	r3, [r0, #6]
90013f30:	4620      	mov	r0, r4
90013f32:	bd10      	pop	{r4, pc}
90013f34:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
90013f38:	b11b      	cbz	r3, 90013f42 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
90013f3a:	3130      	adds	r1, #48	; 0x30
90013f3c:	f006 f94e 	bl	9001a1dc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90013f40:	e7f6      	b.n	90013f30 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90013f42:	312e      	adds	r1, #46	; 0x2e
90013f44:	e7fa      	b.n	90013f3c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90013f48 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90013f48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013f4c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90013f50:	b08a      	sub	sp, #40	; 0x28
90013f52:	4604      	mov	r4, r0
90013f54:	4688      	mov	r8, r1
90013f56:	2b00      	cmp	r3, #0
90013f58:	d066      	beq.n	90014028 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
90013f5a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90013f5c:	a805      	add	r0, sp, #20
90013f5e:	f8ad 3014 	strh.w	r3, [sp, #20]
90013f62:	f006 f8d3 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
90013f66:	4607      	mov	r7, r0
90013f68:	a805      	add	r0, sp, #20
90013f6a:	f006 f903 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013f6e:	f9b8 6000 	ldrsh.w	r6, [r8]
90013f72:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90013f76:	2300      	movs	r3, #0
90013f78:	4432      	add	r2, r6
90013f7a:	9306      	str	r3, [sp, #24]
90013f7c:	b292      	uxth	r2, r2
90013f7e:	fa0f fc82 	sxth.w	ip, r2
90013f82:	459c      	cmp	ip, r3
90013f84:	dd52      	ble.n	9001402c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013f86:	42b7      	cmp	r7, r6
90013f88:	dd50      	ble.n	9001402c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013f8a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90013f8e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90013f92:	442b      	add	r3, r5
90013f94:	b29b      	uxth	r3, r3
90013f96:	b219      	sxth	r1, r3
90013f98:	2900      	cmp	r1, #0
90013f9a:	dd47      	ble.n	9001402c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013f9c:	42a8      	cmp	r0, r5
90013f9e:	dd45      	ble.n	9001402c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013fa0:	4567      	cmp	r7, ip
90013fa2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90013fa6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90013faa:	bfb8      	it	lt
90013fac:	b2ba      	uxthlt	r2, r7
90013fae:	4288      	cmp	r0, r1
90013fb0:	f8ad 6018 	strh.w	r6, [sp, #24]
90013fb4:	bfb8      	it	lt
90013fb6:	b283      	uxthlt	r3, r0
90013fb8:	1b92      	subs	r2, r2, r6
90013fba:	f8ad 501a 	strh.w	r5, [sp, #26]
90013fbe:	1b5b      	subs	r3, r3, r5
90013fc0:	f8ad 201c 	strh.w	r2, [sp, #28]
90013fc4:	f8ad 301e 	strh.w	r3, [sp, #30]
90013fc8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90013fcc:	f64f 73ff 	movw	r3, #65535	; 0xffff
90013fd0:	429a      	cmp	r2, r3
90013fd2:	d026      	beq.n	90014022 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90013fd4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90013fd8:	2b00      	cmp	r3, #0
90013fda:	dd22      	ble.n	90014022 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90013fdc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90013fe0:	2b00      	cmp	r3, #0
90013fe2:	dd1e      	ble.n	90014022 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90013fe4:	2300      	movs	r3, #0
90013fe6:	a908      	add	r1, sp, #32
90013fe8:	4620      	mov	r0, r4
90013fea:	e9cd 3308 	strd	r3, r3, [sp, #32]
90013fee:	6823      	ldr	r3, [r4, #0]
90013ff0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013ff2:	4798      	blx	r3
90013ff4:	4b0f      	ldr	r3, [pc, #60]	; (90014034 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90013ff6:	681b      	ldr	r3, [r3, #0]
90013ff8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013ffc:	b10a      	cbz	r2, 90014002 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90013ffe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90014000:	b900      	cbnz	r0, 90014004 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90014002:	6898      	ldr	r0, [r3, #8]
90014004:	2501      	movs	r5, #1
90014006:	6801      	ldr	r1, [r0, #0]
90014008:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001400c:	9502      	str	r5, [sp, #8]
9001400e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90014012:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90014016:	9401      	str	r4, [sp, #4]
90014018:	ac06      	add	r4, sp, #24
9001401a:	9400      	str	r4, [sp, #0]
9001401c:	688c      	ldr	r4, [r1, #8]
9001401e:	a905      	add	r1, sp, #20
90014020:	47a0      	blx	r4
90014022:	b00a      	add	sp, #40	; 0x28
90014024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014028:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
9001402a:	e797      	b.n	90013f5c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
9001402c:	2300      	movs	r3, #0
9001402e:	9307      	str	r3, [sp, #28]
90014030:	e7ca      	b.n	90013fc8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90014032:	bf00      	nop
90014034:	2403989c 	.word	0x2403989c

90014038 <_ZNK8touchgfx6Button17invalidateContentEv>:
90014038:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
9001403c:	b12a      	cbz	r2, 9001404a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
9001403e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90014042:	b112      	cbz	r2, 9001404a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90014044:	6803      	ldr	r3, [r0, #0]
90014046:	695b      	ldr	r3, [r3, #20]
90014048:	4718      	bx	r3
9001404a:	4770      	bx	lr

9001404c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
9001404c:	4b30      	ldr	r3, [pc, #192]	; (90014110 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
9001404e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014052:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90014054:	b08d      	sub	sp, #52	; 0x34
90014056:	881b      	ldrh	r3, [r3, #0]
90014058:	4604      	mov	r4, r0
9001405a:	460f      	mov	r7, r1
9001405c:	4293      	cmp	r3, r2
9001405e:	d954      	bls.n	9001410a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90014060:	4b2c      	ldr	r3, [pc, #176]	; (90014114 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90014062:	6819      	ldr	r1, [r3, #0]
90014064:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90014068:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
9001406c:	4a2a      	ldr	r2, [pc, #168]	; (90014118 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
9001406e:	6812      	ldr	r2, [r2, #0]
90014070:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90014074:	2900      	cmp	r1, #0
90014076:	d048      	beq.n	9001410a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90014078:	785a      	ldrb	r2, [r3, #1]
9001407a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
9001407e:	f3c2 0801 	ubfx	r8, r2, #0, #2
90014082:	f3c2 0281 	ubfx	r2, r2, #2, #2
90014086:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
9001408a:	4b24      	ldr	r3, [pc, #144]	; (9001411c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
9001408c:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
90014090:	681a      	ldr	r2, [r3, #0]
90014092:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
90014096:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
9001409a:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
9001409e:	6b26      	ldr	r6, [r4, #48]	; 0x30
900140a0:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
900140a4:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
900140a8:	9107      	str	r1, [sp, #28]
900140aa:	f88d 8020 	strb.w	r8, [sp, #32]
900140ae:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
900140b2:	9609      	str	r6, [sp, #36]	; 0x24
900140b4:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
900140b8:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
900140bc:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
900140c0:	b10b      	cbz	r3, 900140c6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
900140c2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
900140c4:	b905      	cbnz	r5, 900140c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
900140c6:	6895      	ldr	r5, [r2, #8]
900140c8:	ae05      	add	r6, sp, #20
900140ca:	4621      	mov	r1, r4
900140cc:	4630      	mov	r0, r6
900140ce:	f003 ffaf 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900140d2:	4b13      	ldr	r3, [pc, #76]	; (90014120 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
900140d4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
900140d6:	6818      	ldr	r0, [r3, #0]
900140d8:	f7f0 f988 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
900140dc:	6823      	ldr	r3, [r4, #0]
900140de:	4680      	mov	r8, r0
900140e0:	4620      	mov	r0, r4
900140e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
900140e4:	4798      	blx	r3
900140e6:	6823      	ldr	r3, [r4, #0]
900140e8:	4681      	mov	r9, r0
900140ea:	4620      	mov	r0, r4
900140ec:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900140f0:	4798      	blx	r3
900140f2:	ab07      	add	r3, sp, #28
900140f4:	f8cd 8004 	str.w	r8, [sp, #4]
900140f8:	9300      	str	r3, [sp, #0]
900140fa:	463b      	mov	r3, r7
900140fc:	e9cd 9002 	strd	r9, r0, [sp, #8]
90014100:	4628      	mov	r0, r5
90014102:	e896 0006 	ldmia.w	r6, {r1, r2}
90014106:	f7f0 f921 	bl	9000434c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001410a:	b00d      	add	sp, #52	; 0x34
9001410c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014110:	240398f8 	.word	0x240398f8
90014114:	240398f4 	.word	0x240398f4
90014118:	240398fc 	.word	0x240398fc
9001411c:	2403989c 	.word	0x2403989c
90014120:	24039900 	.word	0x24039900

90014124 <_ZN8touchgfx13BoxWithBorderD1Ev>:
90014124:	4770      	bx	lr

90014126 <_ZN8touchgfx13BoxWithBorderD0Ev>:
90014126:	b510      	push	{r4, lr}
90014128:	4604      	mov	r4, r0
9001412a:	2134      	movs	r1, #52	; 0x34
9001412c:	f013 ff82 	bl	90028034 <_ZdlPvj>
90014130:	4620      	mov	r0, r4
90014132:	bd10      	pop	{r4, pc}

90014134 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
90014134:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014138:	8e03      	ldrh	r3, [r0, #48]	; 0x30
9001413a:	4604      	mov	r4, r0
9001413c:	460e      	mov	r6, r1
9001413e:	b08e      	sub	sp, #56	; 0x38
90014140:	b218      	sxth	r0, r3
90014142:	8921      	ldrh	r1, [r4, #8]
90014144:	005b      	lsls	r3, r3, #1
90014146:	8962      	ldrh	r2, [r4, #10]
90014148:	f8ad 0000 	strh.w	r0, [sp]
9001414c:	b29b      	uxth	r3, r3
9001414e:	f8ad 0002 	strh.w	r0, [sp, #2]
90014152:	1ac9      	subs	r1, r1, r3
90014154:	1ad3      	subs	r3, r2, r3
90014156:	b209      	sxth	r1, r1
90014158:	b21b      	sxth	r3, r3
9001415a:	2900      	cmp	r1, #0
9001415c:	f8ad 1004 	strh.w	r1, [sp, #4]
90014160:	f8ad 3006 	strh.w	r3, [sp, #6]
90014164:	dd5e      	ble.n	90014224 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90014166:	2b00      	cmp	r3, #0
90014168:	dd5c      	ble.n	90014224 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
9001416a:	6830      	ldr	r0, [r6, #0]
9001416c:	ab02      	add	r3, sp, #8
9001416e:	6871      	ldr	r1, [r6, #4]
90014170:	c303      	stmia	r3!, {r0, r1}
90014172:	4669      	mov	r1, sp
90014174:	a802      	add	r0, sp, #8
90014176:	f7fd fb4b 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
9001417a:	4620      	mov	r0, r4
9001417c:	a902      	add	r1, sp, #8
9001417e:	f7ff fe6d 	bl	90013e5c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
90014182:	8e20      	ldrh	r0, [r4, #48]	; 0x30
90014184:	2800      	cmp	r0, #0
90014186:	d05f      	beq.n	90014248 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90014188:	8963      	ldrh	r3, [r4, #10]
9001418a:	b202      	sxth	r2, r0
9001418c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90014190:	2500      	movs	r5, #0
90014192:	1a1f      	subs	r7, r3, r0
90014194:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
90014198:	f8ad 101c 	strh.w	r1, [sp, #28]
9001419c:	b21b      	sxth	r3, r3
9001419e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
900141a2:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
900141a6:	af04      	add	r7, sp, #16
900141a8:	1a09      	subs	r1, r1, r0
900141aa:	9506      	str	r5, [sp, #24]
900141ac:	f8ad 201e 	strh.w	r2, [sp, #30]
900141b0:	f8ad 5020 	strh.w	r5, [sp, #32]
900141b4:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
900141b8:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
900141bc:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
900141c0:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
900141c4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900141c8:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
900141cc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
900141d0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
900141d4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900141d8:	ab06      	add	r3, sp, #24
900141da:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900141de:	e893 0003 	ldmia.w	r3, {r0, r1}
900141e2:	e887 0003 	stmia.w	r7, {r0, r1}
900141e6:	4631      	mov	r1, r6
900141e8:	4638      	mov	r0, r7
900141ea:	f7fd fb11 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
900141ee:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
900141f2:	2b00      	cmp	r3, #0
900141f4:	dd12      	ble.n	9001421c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
900141f6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900141fa:	2b00      	cmp	r3, #0
900141fc:	dd0e      	ble.n	9001421c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
900141fe:	6823      	ldr	r3, [r4, #0]
90014200:	4639      	mov	r1, r7
90014202:	4620      	mov	r0, r4
90014204:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014206:	4798      	blx	r3
90014208:	f7fd fde6 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
9001420c:	6803      	ldr	r3, [r0, #0]
9001420e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90014210:	4639      	mov	r1, r7
90014212:	f8d3 8020 	ldr.w	r8, [r3, #32]
90014216:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
9001421a:	47c0      	blx	r8
9001421c:	3501      	adds	r5, #1
9001421e:	2d04      	cmp	r5, #4
90014220:	d1da      	bne.n	900141d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
90014222:	e011      	b.n	90014248 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90014224:	6830      	ldr	r0, [r6, #0]
90014226:	ab06      	add	r3, sp, #24
90014228:	6871      	ldr	r1, [r6, #4]
9001422a:	c303      	stmia	r3!, {r0, r1}
9001422c:	6823      	ldr	r3, [r4, #0]
9001422e:	a906      	add	r1, sp, #24
90014230:	4620      	mov	r0, r4
90014232:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014234:	4798      	blx	r3
90014236:	f7fd fdcf 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
9001423a:	6803      	ldr	r3, [r0, #0]
9001423c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001423e:	a906      	add	r1, sp, #24
90014240:	6a1d      	ldr	r5, [r3, #32]
90014242:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90014246:	47a8      	blx	r5
90014248:	b00e      	add	sp, #56	; 0x38
9001424a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001424e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
9001424e:	4770      	bx	lr

90014250 <_ZN8touchgfx14ButtonWithIconD1Ev>:
90014250:	4770      	bx	lr

90014252 <_ZN8touchgfx14ButtonWithIconD0Ev>:
90014252:	b510      	push	{r4, lr}
90014254:	4604      	mov	r4, r0
90014256:	213c      	movs	r1, #60	; 0x3c
90014258:	f013 feec 	bl	90028034 <_ZdlPvj>
9001425c:	4620      	mov	r0, r4
9001425e:	bd10      	pop	{r4, pc}

90014260 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
90014260:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014264:	461c      	mov	r4, r3
90014266:	4606      	mov	r6, r0
90014268:	9f06      	ldr	r7, [sp, #24]
9001426a:	f7ff fe2a 	bl	90013ec2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
9001426e:	8823      	ldrh	r3, [r4, #0]
90014270:	f04f 0802 	mov.w	r8, #2
90014274:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
90014278:	4638      	mov	r0, r7
9001427a:	86b3      	strh	r3, [r6, #52]	; 0x34
9001427c:	883b      	ldrh	r3, [r7, #0]
9001427e:	fb95 f5f8 	sdiv	r5, r5, r8
90014282:	86f3      	strh	r3, [r6, #54]	; 0x36
90014284:	b2ad      	uxth	r5, r5
90014286:	f005 ff41 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001428a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
9001428e:	fb90 f0f8 	sdiv	r0, r0, r8
90014292:	1a2d      	subs	r5, r5, r0
90014294:	4638      	mov	r0, r7
90014296:	fb94 f4f8 	sdiv	r4, r4, r8
9001429a:	8735      	strh	r5, [r6, #56]	; 0x38
9001429c:	b2a4      	uxth	r4, r4
9001429e:	f005 ff69 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
900142a2:	fb90 f0f8 	sdiv	r0, r0, r8
900142a6:	1a24      	subs	r4, r4, r0
900142a8:	8774      	strh	r4, [r6, #58]	; 0x3a
900142aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

900142b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
900142b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900142b4:	4604      	mov	r4, r0
900142b6:	b08c      	sub	sp, #48	; 0x30
900142b8:	460d      	mov	r5, r1
900142ba:	f7ff fe45 	bl	90013f48 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
900142be:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
900142c2:	2b00      	cmp	r3, #0
900142c4:	d05d      	beq.n	90014382 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
900142c6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
900142c8:	a805      	add	r0, sp, #20
900142ca:	f8ad 3014 	strh.w	r3, [sp, #20]
900142ce:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
900142d2:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
900142d6:	f005 ff19 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
900142da:	4606      	mov	r6, r0
900142dc:	a805      	add	r0, sp, #20
900142de:	f005 ff49 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
900142e2:	6869      	ldr	r1, [r5, #4]
900142e4:	f8ad 001e 	strh.w	r0, [sp, #30]
900142e8:	ab08      	add	r3, sp, #32
900142ea:	6828      	ldr	r0, [r5, #0]
900142ec:	ad08      	add	r5, sp, #32
900142ee:	f8ad 8018 	strh.w	r8, [sp, #24]
900142f2:	f8ad 701a 	strh.w	r7, [sp, #26]
900142f6:	f8ad 601c 	strh.w	r6, [sp, #28]
900142fa:	c303      	stmia	r3!, {r0, r1}
900142fc:	a906      	add	r1, sp, #24
900142fe:	4628      	mov	r0, r5
90014300:	f7fd fa86 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
90014304:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90014308:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001430c:	429a      	cmp	r2, r3
9001430e:	d035      	beq.n	9001437c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90014310:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90014314:	2b00      	cmp	r3, #0
90014316:	dd31      	ble.n	9001437c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90014318:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
9001431c:	2b00      	cmp	r3, #0
9001431e:	dd2d      	ble.n	9001437c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90014320:	2300      	movs	r3, #0
90014322:	a90a      	add	r1, sp, #40	; 0x28
90014324:	4620      	mov	r0, r4
90014326:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
9001432a:	6823      	ldr	r3, [r4, #0]
9001432c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001432e:	4798      	blx	r3
90014330:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90014334:	8f22      	ldrh	r2, [r4, #56]	; 0x38
90014336:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
9001433a:	1a9b      	subs	r3, r3, r2
9001433c:	f8ad 3020 	strh.w	r3, [sp, #32]
90014340:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
90014342:	1ac9      	subs	r1, r1, r3
90014344:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
90014348:	490f      	ldr	r1, [pc, #60]	; (90014388 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
9001434a:	6809      	ldr	r1, [r1, #0]
9001434c:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
90014350:	b108      	cbz	r0, 90014356 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
90014352:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90014354:	b900      	cbnz	r0, 90014358 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
90014356:	6888      	ldr	r0, [r1, #8]
90014358:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
9001435c:	2601      	movs	r6, #1
9001435e:	440b      	add	r3, r1
90014360:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
90014364:	440a      	add	r2, r1
90014366:	6801      	ldr	r1, [r0, #0]
90014368:	9602      	str	r6, [sp, #8]
9001436a:	b21b      	sxth	r3, r3
9001436c:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90014370:	b212      	sxth	r2, r2
90014372:	e9cd 5400 	strd	r5, r4, [sp]
90014376:	688c      	ldr	r4, [r1, #8]
90014378:	a905      	add	r1, sp, #20
9001437a:	47a0      	blx	r4
9001437c:	b00c      	add	sp, #48	; 0x30
9001437e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014382:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90014384:	e7a0      	b.n	900142c8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
90014386:	bf00      	nop
90014388:	2403989c 	.word	0x2403989c

9001438c <_ZN8touchgfx14ButtonWithIconC1Ev>:
9001438c:	2101      	movs	r1, #1
9001438e:	2200      	movs	r2, #0
90014390:	b510      	push	{r4, lr}
90014392:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90014396:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
9001439a:	f64f 71ff 	movw	r1, #65535	; 0xffff
9001439e:	4c0d      	ldr	r4, [pc, #52]	; (900143d4 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
900143a0:	8082      	strh	r2, [r0, #4]
900143a2:	80c2      	strh	r2, [r0, #6]
900143a4:	8102      	strh	r2, [r0, #8]
900143a6:	8142      	strh	r2, [r0, #10]
900143a8:	8182      	strh	r2, [r0, #12]
900143aa:	81c2      	strh	r2, [r0, #14]
900143ac:	8202      	strh	r2, [r0, #16]
900143ae:	8242      	strh	r2, [r0, #18]
900143b0:	61c2      	str	r2, [r0, #28]
900143b2:	8402      	strh	r2, [r0, #32]
900143b4:	8442      	strh	r2, [r0, #34]	; 0x22
900143b6:	6282      	str	r2, [r0, #40]	; 0x28
900143b8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
900143bc:	85c1      	strh	r1, [r0, #46]	; 0x2e
900143be:	8601      	strh	r1, [r0, #48]	; 0x30
900143c0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
900143c4:	6004      	str	r4, [r0, #0]
900143c6:	8681      	strh	r1, [r0, #52]	; 0x34
900143c8:	86c1      	strh	r1, [r0, #54]	; 0x36
900143ca:	8702      	strh	r2, [r0, #56]	; 0x38
900143cc:	8742      	strh	r2, [r0, #58]	; 0x3a
900143ce:	e9c0 2205 	strd	r2, r2, [r0, #20]
900143d2:	bd10      	pop	{r4, pc}
900143d4:	9002c3f0 	.word	0x9002c3f0

900143d8 <_ZN8touchgfx5ImageD1Ev>:
900143d8:	4770      	bx	lr

900143da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
900143da:	b570      	push	{r4, r5, r6, lr}
900143dc:	880b      	ldrh	r3, [r1, #0]
900143de:	460d      	mov	r5, r1
900143e0:	4604      	mov	r4, r0
900143e2:	84c3      	strh	r3, [r0, #38]	; 0x26
900143e4:	4608      	mov	r0, r1
900143e6:	f005 fe91 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
900143ea:	4606      	mov	r6, r0
900143ec:	4628      	mov	r0, r5
900143ee:	f005 fec1 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
900143f2:	6823      	ldr	r3, [r4, #0]
900143f4:	4605      	mov	r5, r0
900143f6:	4631      	mov	r1, r6
900143f8:	4620      	mov	r0, r4
900143fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900143fc:	4798      	blx	r3
900143fe:	6823      	ldr	r3, [r4, #0]
90014400:	4629      	mov	r1, r5
90014402:	4620      	mov	r0, r4
90014404:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90014406:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001440a:	4718      	bx	r3

9001440c <_ZN8touchgfx5ImageD0Ev>:
9001440c:	b510      	push	{r4, lr}
9001440e:	4604      	mov	r4, r0
90014410:	212c      	movs	r1, #44	; 0x2c
90014412:	f013 fe0f 	bl	90028034 <_ZdlPvj>
90014416:	4620      	mov	r0, r4
90014418:	bd10      	pop	{r4, pc}

9001441a <_ZNK8touchgfx5Image12getSolidRectEv>:
9001441a:	b510      	push	{r4, lr}
9001441c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90014420:	4604      	mov	r4, r0
90014422:	2bff      	cmp	r3, #255	; 0xff
90014424:	d006      	beq.n	90014434 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90014426:	2300      	movs	r3, #0
90014428:	8003      	strh	r3, [r0, #0]
9001442a:	8043      	strh	r3, [r0, #2]
9001442c:	8083      	strh	r3, [r0, #4]
9001442e:	80c3      	strh	r3, [r0, #6]
90014430:	4620      	mov	r0, r4
90014432:	bd10      	pop	{r4, pc}
90014434:	3126      	adds	r1, #38	; 0x26
90014436:	f005 fed1 	bl	9001a1dc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001443a:	e7f9      	b.n	90014430 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

9001443c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
9001443c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014440:	4604      	mov	r4, r0
90014442:	b088      	sub	sp, #32
90014444:	2500      	movs	r5, #0
90014446:	460f      	mov	r7, r1
90014448:	f854 3b26 	ldr.w	r3, [r4], #38
9001444c:	a904      	add	r1, sp, #16
9001444e:	4606      	mov	r6, r0
90014450:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014452:	e9cd 5504 	strd	r5, r5, [sp, #16]
90014456:	4798      	blx	r3
90014458:	4620      	mov	r0, r4
9001445a:	f005 fe57 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001445e:	4680      	mov	r8, r0
90014460:	4620      	mov	r0, r4
90014462:	f005 fe87 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014466:	9506      	str	r5, [sp, #24]
90014468:	ad06      	add	r5, sp, #24
9001446a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001446e:	4639      	mov	r1, r7
90014470:	f8ad 801c 	strh.w	r8, [sp, #28]
90014474:	4628      	mov	r0, r5
90014476:	f7fd f9cb 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
9001447a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001447e:	2b00      	cmp	r3, #0
90014480:	dd19      	ble.n	900144b6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90014482:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90014486:	2b00      	cmp	r3, #0
90014488:	dd15      	ble.n	900144b6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001448a:	4b0c      	ldr	r3, [pc, #48]	; (900144bc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
9001448c:	681b      	ldr	r3, [r3, #0]
9001448e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90014492:	b10a      	cbz	r2, 90014498 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90014494:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90014496:	b900      	cbnz	r0, 9001449a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90014498:	6898      	ldr	r0, [r3, #8]
9001449a:	2701      	movs	r7, #1
9001449c:	6801      	ldr	r1, [r0, #0]
9001449e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900144a2:	9702      	str	r7, [sp, #8]
900144a4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
900144a8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900144ac:	e9cd 5600 	strd	r5, r6, [sp]
900144b0:	688d      	ldr	r5, [r1, #8]
900144b2:	4621      	mov	r1, r4
900144b4:	47a8      	blx	r5
900144b6:	b008      	add	sp, #32
900144b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900144bc:	2403989c 	.word	0x2403989c

900144c0 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
900144c0:	4770      	bx	lr

900144c2 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
900144c2:	b510      	push	{r4, lr}
900144c4:	4604      	mov	r4, r0
900144c6:	2148      	movs	r1, #72	; 0x48
900144c8:	f013 fdb4 	bl	90028034 <_ZdlPvj>
900144cc:	4620      	mov	r0, r4
900144ce:	bd10      	pop	{r4, pc}

900144d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
900144d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900144d4:	b08d      	sub	sp, #52	; 0x34
900144d6:	4604      	mov	r4, r0
900144d8:	460f      	mov	r7, r1
900144da:	f7ff fd35 	bl	90013f48 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
900144de:	4a55      	ldr	r2, [pc, #340]	; (90014634 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
900144e0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900144e2:	8812      	ldrh	r2, [r2, #0]
900144e4:	429a      	cmp	r2, r3
900144e6:	f240 8082 	bls.w	900145ee <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
900144ea:	4d53      	ldr	r5, [pc, #332]	; (90014638 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
900144ec:	682a      	ldr	r2, [r5, #0]
900144ee:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900144f2:	4b52      	ldr	r3, [pc, #328]	; (9001463c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
900144f4:	681b      	ldr	r3, [r3, #0]
900144f6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900144fa:	2200      	movs	r2, #0
900144fc:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
90014500:	e9cd 2203 	strd	r2, r2, [sp, #12]
90014504:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
90014508:	2a03      	cmp	r2, #3
9001450a:	d811      	bhi.n	90014530 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
9001450c:	e8df f002 	tbb	[pc, r2]
90014510:	89727902 	.word	0x89727902
90014514:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90014518:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001451c:	1ad2      	subs	r2, r2, r3
9001451e:	2002      	movs	r0, #2
90014520:	f8ad 1010 	strh.w	r1, [sp, #16]
90014524:	f8ad 3012 	strh.w	r3, [sp, #18]
90014528:	fb92 f2f0 	sdiv	r2, r2, r0
9001452c:	f8ad 200e 	strh.w	r2, [sp, #14]
90014530:	f10d 080c 	add.w	r8, sp, #12
90014534:	f10d 0914 	add.w	r9, sp, #20
90014538:	e898 0003 	ldmia.w	r8, {r0, r1}
9001453c:	e889 0003 	stmia.w	r9, {r0, r1}
90014540:	4639      	mov	r1, r7
90014542:	4648      	mov	r0, r9
90014544:	f7fd f964 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
90014548:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001454c:	2b00      	cmp	r3, #0
9001454e:	dd4e      	ble.n	900145ee <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90014550:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90014554:	2b00      	cmp	r3, #0
90014556:	dd4a      	ble.n	900145ee <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90014558:	f8bd 3014 	ldrh.w	r3, [sp, #20]
9001455c:	4641      	mov	r1, r8
9001455e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90014562:	4620      	mov	r0, r4
90014564:	1a9b      	subs	r3, r3, r2
90014566:	f8bd 200e 	ldrh.w	r2, [sp, #14]
9001456a:	f8ad 3014 	strh.w	r3, [sp, #20]
9001456e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90014572:	1a9b      	subs	r3, r3, r2
90014574:	f8ad 3016 	strh.w	r3, [sp, #22]
90014578:	6823      	ldr	r3, [r4, #0]
9001457a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001457c:	4798      	blx	r3
9001457e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
90014582:	2b00      	cmp	r3, #0
90014584:	d053      	beq.n	9001462e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90014586:	6c22      	ldr	r2, [r4, #64]	; 0x40
90014588:	8f21      	ldrh	r1, [r4, #56]	; 0x38
9001458a:	682b      	ldr	r3, [r5, #0]
9001458c:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
90014590:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90014594:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
90014598:	785b      	ldrb	r3, [r3, #1]
9001459a:	9209      	str	r2, [sp, #36]	; 0x24
9001459c:	f3c3 0501 	ubfx	r5, r3, #0, #2
900145a0:	f3c3 0381 	ubfx	r3, r3, #2, #2
900145a4:	9607      	str	r6, [sp, #28]
900145a6:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
900145aa:	2300      	movs	r3, #0
900145ac:	f88d 5020 	strb.w	r5, [sp, #32]
900145b0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
900145b4:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
900145b8:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
900145bc:	4b20      	ldr	r3, [pc, #128]	; (90014640 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
900145be:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900145c2:	681b      	ldr	r3, [r3, #0]
900145c4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
900145c8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900145cc:	b10a      	cbz	r2, 900145d2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
900145ce:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
900145d0:	b904      	cbnz	r4, 900145d4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
900145d2:	689c      	ldr	r4, [r3, #8]
900145d4:	4b1b      	ldr	r3, [pc, #108]	; (90014644 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
900145d6:	6818      	ldr	r0, [r3, #0]
900145d8:	f7ef ff08 	bl	900043ec <_ZNK8touchgfx5Texts7getTextEt>
900145dc:	ab07      	add	r3, sp, #28
900145de:	9001      	str	r0, [sp, #4]
900145e0:	4620      	mov	r0, r4
900145e2:	9300      	str	r3, [sp, #0]
900145e4:	464b      	mov	r3, r9
900145e6:	e898 0006 	ldmia.w	r8, {r1, r2}
900145ea:	f7ef feaf 	bl	9000434c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900145ee:	b00d      	add	sp, #52	; 0x34
900145f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900145f4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
900145f8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900145fc:	1ad2      	subs	r2, r2, r3
900145fe:	3201      	adds	r2, #1
90014600:	e78d      	b.n	9001451e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90014602:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90014606:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001460a:	1ad2      	subs	r2, r2, r3
9001460c:	3201      	adds	r2, #1
9001460e:	2002      	movs	r0, #2
90014610:	f8ad 3010 	strh.w	r3, [sp, #16]
90014614:	f8ad 1012 	strh.w	r1, [sp, #18]
90014618:	fb92 f2f0 	sdiv	r2, r2, r0
9001461c:	f8ad 200c 	strh.w	r2, [sp, #12]
90014620:	e786      	b.n	90014530 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90014622:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90014626:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001462a:	1ad2      	subs	r2, r2, r3
9001462c:	e7ef      	b.n	9001460e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
9001462e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90014630:	e7aa      	b.n	90014588 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90014632:	bf00      	nop
90014634:	240398f8 	.word	0x240398f8
90014638:	240398f4 	.word	0x240398f4
9001463c:	240398fc 	.word	0x240398fc
90014640:	2403989c 	.word	0x2403989c
90014644:	24039900 	.word	0x24039900

90014648 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90014648:	2101      	movs	r1, #1
9001464a:	2200      	movs	r2, #0
9001464c:	b510      	push	{r4, lr}
9001464e:	4c13      	ldr	r4, [pc, #76]	; (9001469c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90014650:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90014654:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90014658:	f64f 71ff 	movw	r1, #65535	; 0xffff
9001465c:	6004      	str	r4, [r0, #0]
9001465e:	4c10      	ldr	r4, [pc, #64]	; (900146a0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90014660:	8082      	strh	r2, [r0, #4]
90014662:	80c2      	strh	r2, [r0, #6]
90014664:	8102      	strh	r2, [r0, #8]
90014666:	8142      	strh	r2, [r0, #10]
90014668:	8182      	strh	r2, [r0, #12]
9001466a:	81c2      	strh	r2, [r0, #14]
9001466c:	8202      	strh	r2, [r0, #16]
9001466e:	8242      	strh	r2, [r0, #18]
90014670:	61c2      	str	r2, [r0, #28]
90014672:	8402      	strh	r2, [r0, #32]
90014674:	8442      	strh	r2, [r0, #34]	; 0x22
90014676:	6282      	str	r2, [r0, #40]	; 0x28
90014678:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
9001467c:	85c1      	strh	r1, [r0, #46]	; 0x2e
9001467e:	8601      	strh	r1, [r0, #48]	; 0x30
90014680:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90014684:	6344      	str	r4, [r0, #52]	; 0x34
90014686:	8701      	strh	r1, [r0, #56]	; 0x38
90014688:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
9001468c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
90014690:	e9c0 2205 	strd	r2, r2, [r0, #20]
90014694:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
90014698:	bd10      	pop	{r4, pc}
9001469a:	bf00      	nop
9001469c:	9002c4d4 	.word	0x9002c4d4
900146a0:	9002ac2c 	.word	0x9002ac2c

900146a4 <_ZN8touchgfx7OutlineD1Ev>:
900146a4:	4770      	bx	lr

900146a6 <_ZN8touchgfx7OutlineD0Ev>:
900146a6:	b510      	push	{r4, lr}
900146a8:	4604      	mov	r4, r0
900146aa:	2130      	movs	r1, #48	; 0x30
900146ac:	f013 fcc2 	bl	90028034 <_ZdlPvj>
900146b0:	4620      	mov	r0, r4
900146b2:	bd10      	pop	{r4, pc}

900146b4 <_ZN8touchgfx7Outline5resetEv>:
900146b4:	b510      	push	{r4, lr}
900146b6:	4604      	mov	r4, r0
900146b8:	f000 fe86 	bl	900153c8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
900146bc:	60e0      	str	r0, [r4, #12]
900146be:	f000 fe89 	bl	900153d4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
900146c2:	68e3      	ldr	r3, [r4, #12]
900146c4:	08c0      	lsrs	r0, r0, #3
900146c6:	2200      	movs	r2, #0
900146c8:	f647 71ff 	movw	r1, #32767	; 0x7fff
900146cc:	6123      	str	r3, [r4, #16]
900146ce:	3801      	subs	r0, #1
900146d0:	60a2      	str	r2, [r4, #8]
900146d2:	6060      	str	r0, [r4, #4]
900146d4:	8019      	strh	r1, [r3, #0]
900146d6:	8059      	strh	r1, [r3, #2]
900146d8:	809a      	strh	r2, [r3, #4]
900146da:	80da      	strh	r2, [r3, #6]
900146dc:	6a63      	ldr	r3, [r4, #36]	; 0x24
900146de:	f023 0301 	bic.w	r3, r3, #1
900146e2:	f043 0302 	orr.w	r3, r3, #2
900146e6:	6263      	str	r3, [r4, #36]	; 0x24
900146e8:	bd10      	pop	{r4, pc}
	...

900146ec <_ZN8touchgfx7OutlineC1Ev>:
900146ec:	4b0a      	ldr	r3, [pc, #40]	; (90014718 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
900146ee:	b510      	push	{r4, lr}
900146f0:	6003      	str	r3, [r0, #0]
900146f2:	2300      	movs	r3, #0
900146f4:	4604      	mov	r4, r0
900146f6:	6243      	str	r3, [r0, #36]	; 0x24
900146f8:	e9c0 3301 	strd	r3, r3, [r0, #4]
900146fc:	e9c0 3303 	strd	r3, r3, [r0, #12]
90014700:	e9c0 3305 	strd	r3, r3, [r0, #20]
90014704:	e9c0 3307 	strd	r3, r3, [r0, #28]
90014708:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
9001470c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
90014710:	f7ff ffd0 	bl	900146b4 <_ZN8touchgfx7Outline5resetEv>
90014714:	4620      	mov	r0, r4
90014716:	bd10      	pop	{r4, pc}
90014718:	9002c548 	.word	0x9002c548

9001471c <_ZN8touchgfx7Outline10renderLineEiiii>:
9001471c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014720:	b093      	sub	sp, #76	; 0x4c
90014722:	1156      	asrs	r6, r2, #5
90014724:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90014726:	9305      	str	r3, [sp, #20]
90014728:	1153      	asrs	r3, r2, #5
9001472a:	f004 051f 	and.w	r5, r4, #31
9001472e:	9303      	str	r3, [sp, #12]
90014730:	1163      	asrs	r3, r4, #5
90014732:	9504      	str	r5, [sp, #16]
90014734:	1165      	asrs	r5, r4, #5
90014736:	9306      	str	r3, [sp, #24]
90014738:	f002 031f 	and.w	r3, r2, #31
9001473c:	42ae      	cmp	r6, r5
9001473e:	f040 80f4 	bne.w	9001492a <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90014742:	9c04      	ldr	r4, [sp, #16]
90014744:	9a05      	ldr	r2, [sp, #20]
90014746:	42a3      	cmp	r3, r4
90014748:	ea4f 1e62 	mov.w	lr, r2, asr #5
9001474c:	6902      	ldr	r2, [r0, #16]
9001474e:	d125      	bne.n	9001479c <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90014750:	f9b2 3000 	ldrsh.w	r3, [r2]
90014754:	459e      	cmp	lr, r3
90014756:	d103      	bne.n	90014760 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90014758:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
9001475c:	429e      	cmp	r6, r3
9001475e:	d035      	beq.n	900147cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014760:	88d1      	ldrh	r1, [r2, #6]
90014762:	8893      	ldrh	r3, [r2, #4]
90014764:	430b      	orrs	r3, r1
90014766:	d010      	beq.n	9001478a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014768:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
9001476c:	2b00      	cmp	r3, #0
9001476e:	db0c      	blt.n	9001478a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014770:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90014772:	428b      	cmp	r3, r1
90014774:	da09      	bge.n	9001478a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014776:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
9001477a:	428b      	cmp	r3, r1
9001477c:	f103 0301 	add.w	r3, r3, #1
90014780:	bf38      	it	cc
90014782:	3208      	addcc	r2, #8
90014784:	6083      	str	r3, [r0, #8]
90014786:	bf38      	it	cc
90014788:	6102      	strcc	r2, [r0, #16]
9001478a:	6903      	ldr	r3, [r0, #16]
9001478c:	9a03      	ldr	r2, [sp, #12]
9001478e:	f8a3 e000 	strh.w	lr, [r3]
90014792:	805a      	strh	r2, [r3, #2]
90014794:	2200      	movs	r2, #0
90014796:	809a      	strh	r2, [r3, #4]
90014798:	80da      	strh	r2, [r3, #6]
9001479a:	e017      	b.n	900147cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001479c:	9c05      	ldr	r4, [sp, #20]
9001479e:	114e      	asrs	r6, r1, #5
900147a0:	f001 0c1f 	and.w	ip, r1, #31
900147a4:	f8b2 8004 	ldrh.w	r8, [r2, #4]
900147a8:	f004 041f 	and.w	r4, r4, #31
900147ac:	4576      	cmp	r6, lr
900147ae:	f8b2 a006 	ldrh.w	sl, [r2, #6]
900147b2:	9402      	str	r4, [sp, #8]
900147b4:	9c04      	ldr	r4, [sp, #16]
900147b6:	eba4 0403 	sub.w	r4, r4, r3
900147ba:	d10a      	bne.n	900147d2 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
900147bc:	9b02      	ldr	r3, [sp, #8]
900147be:	44a0      	add	r8, r4
900147c0:	449c      	add	ip, r3
900147c2:	f8a2 8004 	strh.w	r8, [r2, #4]
900147c6:	fb04 a40c 	mla	r4, r4, ip, sl
900147ca:	80d4      	strh	r4, [r2, #6]
900147cc:	b013      	add	sp, #76	; 0x4c
900147ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900147d2:	9d05      	ldr	r5, [sp, #20]
900147d4:	1a69      	subs	r1, r5, r1
900147d6:	bf51      	iteee	pl
900147d8:	f1cc 0520 	rsbpl	r5, ip, #32
900147dc:	fb04 f40c 	mulmi.w	r4, r4, ip
900147e0:	4249      	negmi	r1, r1
900147e2:	2500      	movmi	r5, #0
900147e4:	bf5d      	ittte	pl
900147e6:	436c      	mulpl	r4, r5
900147e8:	2520      	movpl	r5, #32
900147ea:	f04f 0901 	movpl.w	r9, #1
900147ee:	f04f 39ff 	movmi.w	r9, #4294967295
900147f2:	9501      	str	r5, [sp, #4]
900147f4:	9f01      	ldr	r7, [sp, #4]
900147f6:	444e      	add	r6, r9
900147f8:	fb94 f5f1 	sdiv	r5, r4, r1
900147fc:	fb01 4415 	mls	r4, r1, r5, r4
90014800:	44bc      	add	ip, r7
90014802:	2c00      	cmp	r4, #0
90014804:	bfbc      	itt	lt
90014806:	f105 35ff 	addlt.w	r5, r5, #4294967295
9001480a:	1864      	addlt	r4, r4, r1
9001480c:	44a8      	add	r8, r5
9001480e:	fb05 ac0c 	mla	ip, r5, ip, sl
90014812:	f8a2 8004 	strh.w	r8, [r2, #4]
90014816:	f8a2 c006 	strh.w	ip, [r2, #6]
9001481a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001481e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90014822:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90014826:	ea58 0202 	orrs.w	r2, r8, r2
9001482a:	d011      	beq.n	90014850 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
9001482c:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90014830:	f1b8 0f00 	cmp.w	r8, #0
90014834:	db0c      	blt.n	90014850 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014836:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90014838:	4590      	cmp	r8, r2
9001483a:	da09      	bge.n	90014850 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
9001483c:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90014840:	4590      	cmp	r8, r2
90014842:	bf3c      	itt	cc
90014844:	f10c 0208 	addcc.w	r2, ip, #8
90014848:	6102      	strcc	r2, [r0, #16]
9001484a:	f108 0201 	add.w	r2, r8, #1
9001484e:	6082      	str	r2, [r0, #8]
90014850:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014854:	2700      	movs	r7, #0
90014856:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001485a:	45b6      	cmp	lr, r6
9001485c:	f8ac 6000 	strh.w	r6, [ip]
90014860:	442b      	add	r3, r5
90014862:	f8ac 2002 	strh.w	r2, [ip, #2]
90014866:	f8ac 7004 	strh.w	r7, [ip, #4]
9001486a:	f8ac 7006 	strh.w	r7, [ip, #6]
9001486e:	d04b      	beq.n	90014908 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90014870:	9f04      	ldr	r7, [sp, #16]
90014872:	1a64      	subs	r4, r4, r1
90014874:	f04f 0a00 	mov.w	sl, #0
90014878:	1aff      	subs	r7, r7, r3
9001487a:	443d      	add	r5, r7
9001487c:	016d      	lsls	r5, r5, #5
9001487e:	fb95 f8f1 	sdiv	r8, r5, r1
90014882:	fb01 5518 	mls	r5, r1, r8, r5
90014886:	2d00      	cmp	r5, #0
90014888:	bfbc      	itt	lt
9001488a:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001488e:	186d      	addlt	r5, r5, r1
90014890:	f108 0701 	add.w	r7, r8, #1
90014894:	9703      	str	r7, [sp, #12]
90014896:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001489a:	1964      	adds	r4, r4, r5
9001489c:	444e      	add	r6, r9
9001489e:	bf54      	ite	pl
900148a0:	9f03      	ldrpl	r7, [sp, #12]
900148a2:	4647      	movmi	r7, r8
900148a4:	f8bc b004 	ldrh.w	fp, [ip, #4]
900148a8:	bf58      	it	pl
900148aa:	1a64      	subpl	r4, r4, r1
900148ac:	443b      	add	r3, r7
900148ae:	44bb      	add	fp, r7
900148b0:	f8ac b004 	strh.w	fp, [ip, #4]
900148b4:	f8bc b006 	ldrh.w	fp, [ip, #6]
900148b8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900148bc:	f8ac b006 	strh.w	fp, [ip, #6]
900148c0:	f8d0 c010 	ldr.w	ip, [r0, #16]
900148c4:	f8bc b006 	ldrh.w	fp, [ip, #6]
900148c8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900148cc:	ea5b 0707 	orrs.w	r7, fp, r7
900148d0:	d011      	beq.n	900148f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900148d2:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900148d6:	f1bb 0f00 	cmp.w	fp, #0
900148da:	db0c      	blt.n	900148f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900148dc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900148de:	45bb      	cmp	fp, r7
900148e0:	da09      	bge.n	900148f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900148e2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900148e6:	45bb      	cmp	fp, r7
900148e8:	bf3c      	itt	cc
900148ea:	f10c 0708 	addcc.w	r7, ip, #8
900148ee:	6107      	strcc	r7, [r0, #16]
900148f0:	f10b 0701 	add.w	r7, fp, #1
900148f4:	6087      	str	r7, [r0, #8]
900148f6:	6907      	ldr	r7, [r0, #16]
900148f8:	45b6      	cmp	lr, r6
900148fa:	803e      	strh	r6, [r7, #0]
900148fc:	807a      	strh	r2, [r7, #2]
900148fe:	f8a7 a004 	strh.w	sl, [r7, #4]
90014902:	f8a7 a006 	strh.w	sl, [r7, #6]
90014906:	d1c6      	bne.n	90014896 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90014908:	9a04      	ldr	r2, [sp, #16]
9001490a:	1ad3      	subs	r3, r2, r3
9001490c:	6902      	ldr	r2, [r0, #16]
9001490e:	8891      	ldrh	r1, [r2, #4]
90014910:	88d6      	ldrh	r6, [r2, #6]
90014912:	4419      	add	r1, r3
90014914:	8091      	strh	r1, [r2, #4]
90014916:	9902      	ldr	r1, [sp, #8]
90014918:	f101 0c20 	add.w	ip, r1, #32
9001491c:	9901      	ldr	r1, [sp, #4]
9001491e:	ebac 0c01 	sub.w	ip, ip, r1
90014922:	fb03 630c 	mla	r3, r3, ip, r6
90014926:	80d3      	strh	r3, [r2, #6]
90014928:	e750      	b.n	900147cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001492a:	9d05      	ldr	r5, [sp, #20]
9001492c:	1aa2      	subs	r2, r4, r2
9001492e:	eba5 0501 	sub.w	r5, r5, r1
90014932:	9202      	str	r2, [sp, #8]
90014934:	9508      	str	r5, [sp, #32]
90014936:	f140 8128 	bpl.w	90014b8a <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
9001493a:	9a03      	ldr	r2, [sp, #12]
9001493c:	2a00      	cmp	r2, #0
9001493e:	f6ff af45 	blt.w	900147cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014942:	9a02      	ldr	r2, [sp, #8]
90014944:	f04f 34ff 	mov.w	r4, #4294967295
90014948:	4252      	negs	r2, r2
9001494a:	940b      	str	r4, [sp, #44]	; 0x2c
9001494c:	2400      	movs	r4, #0
9001494e:	9202      	str	r2, [sp, #8]
90014950:	9a06      	ldr	r2, [sp, #24]
90014952:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90014956:	9206      	str	r2, [sp, #24]
90014958:	462a      	mov	r2, r5
9001495a:	435a      	muls	r2, r3
9001495c:	9401      	str	r4, [sp, #4]
9001495e:	9c02      	ldr	r4, [sp, #8]
90014960:	9d02      	ldr	r5, [sp, #8]
90014962:	fb92 f4f4 	sdiv	r4, r2, r4
90014966:	fb05 2214 	mls	r2, r5, r4, r2
9001496a:	2a00      	cmp	r2, #0
9001496c:	9207      	str	r2, [sp, #28]
9001496e:	bfbc      	itt	lt
90014970:	1952      	addlt	r2, r2, r5
90014972:	f104 34ff 	addlt.w	r4, r4, #4294967295
90014976:	6905      	ldr	r5, [r0, #16]
90014978:	bfb8      	it	lt
9001497a:	9207      	strlt	r2, [sp, #28]
9001497c:	eb04 0901 	add.w	r9, r4, r1
90014980:	9a01      	ldr	r2, [sp, #4]
90014982:	ea4f 1669 	mov.w	r6, r9, asr #5
90014986:	429a      	cmp	r2, r3
90014988:	f040 8111 	bne.w	90014bae <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
9001498c:	f9b5 3000 	ldrsh.w	r3, [r5]
90014990:	429e      	cmp	r6, r3
90014992:	d104      	bne.n	9001499e <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90014994:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90014998:	9a03      	ldr	r2, [sp, #12]
9001499a:	429a      	cmp	r2, r3
9001499c:	d01b      	beq.n	900149d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
9001499e:	88ea      	ldrh	r2, [r5, #6]
900149a0:	88ab      	ldrh	r3, [r5, #4]
900149a2:	4313      	orrs	r3, r2
900149a4:	d010      	beq.n	900149c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900149a6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900149aa:	2a00      	cmp	r2, #0
900149ac:	db0c      	blt.n	900149c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900149ae:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900149b0:	429a      	cmp	r2, r3
900149b2:	da09      	bge.n	900149c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900149b4:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
900149b8:	429a      	cmp	r2, r3
900149ba:	f102 0201 	add.w	r2, r2, #1
900149be:	bf38      	it	cc
900149c0:	3508      	addcc	r5, #8
900149c2:	6082      	str	r2, [r0, #8]
900149c4:	bf38      	it	cc
900149c6:	6105      	strcc	r5, [r0, #16]
900149c8:	6903      	ldr	r3, [r0, #16]
900149ca:	9a03      	ldr	r2, [sp, #12]
900149cc:	801e      	strh	r6, [r3, #0]
900149ce:	805a      	strh	r2, [r3, #2]
900149d0:	2200      	movs	r2, #0
900149d2:	809a      	strh	r2, [r3, #4]
900149d4:	80da      	strh	r2, [r3, #6]
900149d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900149d8:	9a03      	ldr	r2, [sp, #12]
900149da:	6901      	ldr	r1, [r0, #16]
900149dc:	441a      	add	r2, r3
900149de:	f9b1 3000 	ldrsh.w	r3, [r1]
900149e2:	42b3      	cmp	r3, r6
900149e4:	d103      	bne.n	900149ee <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
900149e6:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900149ea:	429a      	cmp	r2, r3
900149ec:	d01a      	beq.n	90014a24 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
900149ee:	88cc      	ldrh	r4, [r1, #6]
900149f0:	888b      	ldrh	r3, [r1, #4]
900149f2:	4323      	orrs	r3, r4
900149f4:	d010      	beq.n	90014a18 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900149f6:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900149fa:	2c00      	cmp	r4, #0
900149fc:	db0c      	blt.n	90014a18 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900149fe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90014a00:	429c      	cmp	r4, r3
90014a02:	da09      	bge.n	90014a18 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014a04:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014a08:	429c      	cmp	r4, r3
90014a0a:	f104 0401 	add.w	r4, r4, #1
90014a0e:	bf38      	it	cc
90014a10:	3108      	addcc	r1, #8
90014a12:	6084      	str	r4, [r0, #8]
90014a14:	bf38      	it	cc
90014a16:	6101      	strcc	r1, [r0, #16]
90014a18:	6903      	ldr	r3, [r0, #16]
90014a1a:	2100      	movs	r1, #0
90014a1c:	801e      	strh	r6, [r3, #0]
90014a1e:	805a      	strh	r2, [r3, #2]
90014a20:	8099      	strh	r1, [r3, #4]
90014a22:	80d9      	strh	r1, [r3, #6]
90014a24:	9b06      	ldr	r3, [sp, #24]
90014a26:	4293      	cmp	r3, r2
90014a28:	f000 8082 	beq.w	90014b30 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90014a2c:	9b08      	ldr	r3, [sp, #32]
90014a2e:	9902      	ldr	r1, [sp, #8]
90014a30:	015b      	lsls	r3, r3, #5
90014a32:	9c02      	ldr	r4, [sp, #8]
90014a34:	fb93 f1f1 	sdiv	r1, r3, r1
90014a38:	fb04 3311 	mls	r3, r4, r1, r3
90014a3c:	9103      	str	r1, [sp, #12]
90014a3e:	2b00      	cmp	r3, #0
90014a40:	9308      	str	r3, [sp, #32]
90014a42:	da04      	bge.n	90014a4e <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90014a44:	1e4b      	subs	r3, r1, #1
90014a46:	9303      	str	r3, [sp, #12]
90014a48:	9b08      	ldr	r3, [sp, #32]
90014a4a:	4423      	add	r3, r4
90014a4c:	9308      	str	r3, [sp, #32]
90014a4e:	9b07      	ldr	r3, [sp, #28]
90014a50:	464f      	mov	r7, r9
90014a52:	9902      	ldr	r1, [sp, #8]
90014a54:	2600      	movs	r6, #0
90014a56:	1a5b      	subs	r3, r3, r1
90014a58:	9307      	str	r3, [sp, #28]
90014a5a:	9b01      	ldr	r3, [sp, #4]
90014a5c:	f1c3 0320 	rsb	r3, r3, #32
90014a60:	930e      	str	r3, [sp, #56]	; 0x38
90014a62:	990e      	ldr	r1, [sp, #56]	; 0x38
90014a64:	9b01      	ldr	r3, [sp, #4]
90014a66:	1a5b      	subs	r3, r3, r1
90014a68:	930a      	str	r3, [sp, #40]	; 0x28
90014a6a:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90014a6e:	185b      	adds	r3, r3, r1
90014a70:	bf58      	it	pl
90014a72:	9902      	ldrpl	r1, [sp, #8]
90014a74:	9307      	str	r3, [sp, #28]
90014a76:	bf57      	itett	pl
90014a78:	1a5b      	subpl	r3, r3, r1
90014a7a:	9903      	ldrmi	r1, [sp, #12]
90014a7c:	9307      	strpl	r3, [sp, #28]
90014a7e:	9b03      	ldrpl	r3, [sp, #12]
90014a80:	bf58      	it	pl
90014a82:	1c59      	addpl	r1, r3, #1
90014a84:	2a00      	cmp	r2, #0
90014a86:	4489      	add	r9, r1
90014a88:	ea4f 1a69 	mov.w	sl, r9, asr #5
90014a8c:	db2e      	blt.n	90014aec <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014a8e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90014a90:	4293      	cmp	r3, r2
90014a92:	dd2b      	ble.n	90014aec <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014a94:	9c01      	ldr	r4, [sp, #4]
90014a96:	6905      	ldr	r5, [r0, #16]
90014a98:	46a0      	mov	r8, r4
90014a9a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90014a9c:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90014aa0:	45a0      	cmp	r8, r4
90014aa2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90014aa6:	f040 814c 	bne.w	90014d42 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90014aaa:	f9b5 1000 	ldrsh.w	r1, [r5]
90014aae:	4551      	cmp	r1, sl
90014ab0:	d103      	bne.n	90014aba <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90014ab2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90014ab6:	4291      	cmp	r1, r2
90014ab8:	d018      	beq.n	90014aec <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014aba:	ea5c 010e 	orrs.w	r1, ip, lr
90014abe:	d00f      	beq.n	90014ae0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014ac0:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90014ac4:	2900      	cmp	r1, #0
90014ac6:	db0b      	blt.n	90014ae0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014ac8:	428b      	cmp	r3, r1
90014aca:	dd09      	ble.n	90014ae0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014acc:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90014ad0:	4299      	cmp	r1, r3
90014ad2:	f101 0101 	add.w	r1, r1, #1
90014ad6:	bf38      	it	cc
90014ad8:	3508      	addcc	r5, #8
90014ada:	6081      	str	r1, [r0, #8]
90014adc:	bf38      	it	cc
90014ade:	6105      	strcc	r5, [r0, #16]
90014ae0:	6903      	ldr	r3, [r0, #16]
90014ae2:	f8a3 a000 	strh.w	sl, [r3]
90014ae6:	805a      	strh	r2, [r3, #2]
90014ae8:	809e      	strh	r6, [r3, #4]
90014aea:	80de      	strh	r6, [r3, #6]
90014aec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90014aee:	6901      	ldr	r1, [r0, #16]
90014af0:	441a      	add	r2, r3
90014af2:	88cc      	ldrh	r4, [r1, #6]
90014af4:	888b      	ldrh	r3, [r1, #4]
90014af6:	4323      	orrs	r3, r4
90014af8:	d010      	beq.n	90014b1c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014afa:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90014afe:	2c00      	cmp	r4, #0
90014b00:	db0c      	blt.n	90014b1c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014b02:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90014b04:	429c      	cmp	r4, r3
90014b06:	da09      	bge.n	90014b1c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014b08:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014b0c:	429c      	cmp	r4, r3
90014b0e:	f104 0401 	add.w	r4, r4, #1
90014b12:	bf38      	it	cc
90014b14:	3108      	addcc	r1, #8
90014b16:	6084      	str	r4, [r0, #8]
90014b18:	bf38      	it	cc
90014b1a:	6101      	strcc	r1, [r0, #16]
90014b1c:	6903      	ldr	r3, [r0, #16]
90014b1e:	464f      	mov	r7, r9
90014b20:	f8a3 a000 	strh.w	sl, [r3]
90014b24:	805a      	strh	r2, [r3, #2]
90014b26:	809e      	strh	r6, [r3, #4]
90014b28:	80de      	strh	r6, [r3, #6]
90014b2a:	9b06      	ldr	r3, [sp, #24]
90014b2c:	4293      	cmp	r3, r2
90014b2e:	d19c      	bne.n	90014a6a <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90014b30:	9b01      	ldr	r3, [sp, #4]
90014b32:	6907      	ldr	r7, [r0, #16]
90014b34:	f1c3 0620 	rsb	r6, r3, #32
90014b38:	9b05      	ldr	r3, [sp, #20]
90014b3a:	ea4f 1e63 	mov.w	lr, r3, asr #5
90014b3e:	9b04      	ldr	r3, [sp, #16]
90014b40:	429e      	cmp	r6, r3
90014b42:	f040 81c7 	bne.w	90014ed4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90014b46:	f9b7 3000 	ldrsh.w	r3, [r7]
90014b4a:	459e      	cmp	lr, r3
90014b4c:	d104      	bne.n	90014b58 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90014b4e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90014b52:	429a      	cmp	r2, r3
90014b54:	f43f ae3a 	beq.w	900147cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014b58:	88f9      	ldrh	r1, [r7, #6]
90014b5a:	88bb      	ldrh	r3, [r7, #4]
90014b5c:	430b      	orrs	r3, r1
90014b5e:	d010      	beq.n	90014b82 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014b60:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90014b64:	2b00      	cmp	r3, #0
90014b66:	db0c      	blt.n	90014b82 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014b68:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90014b6a:	428b      	cmp	r3, r1
90014b6c:	da09      	bge.n	90014b82 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014b6e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90014b72:	428b      	cmp	r3, r1
90014b74:	f103 0301 	add.w	r3, r3, #1
90014b78:	bf38      	it	cc
90014b7a:	3708      	addcc	r7, #8
90014b7c:	6083      	str	r3, [r0, #8]
90014b7e:	bf38      	it	cc
90014b80:	6107      	strcc	r7, [r0, #16]
90014b82:	6903      	ldr	r3, [r0, #16]
90014b84:	f8a3 e000 	strh.w	lr, [r3]
90014b88:	e603      	b.n	90014792 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90014b8a:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90014b8c:	9c03      	ldr	r4, [sp, #12]
90014b8e:	42a2      	cmp	r2, r4
90014b90:	f6ff ae1c 	blt.w	900147cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014b94:	9c06      	ldr	r4, [sp, #24]
90014b96:	42a2      	cmp	r2, r4
90014b98:	9c08      	ldr	r4, [sp, #32]
90014b9a:	bfbc      	itt	lt
90014b9c:	3201      	addlt	r2, #1
90014b9e:	9206      	strlt	r2, [sp, #24]
90014ba0:	f1c3 0220 	rsb	r2, r3, #32
90014ba4:	4362      	muls	r2, r4
90014ba6:	2401      	movs	r4, #1
90014ba8:	940b      	str	r4, [sp, #44]	; 0x2c
90014baa:	2420      	movs	r4, #32
90014bac:	e6d6      	b.n	9001495c <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90014bae:	ea4f 1861 	mov.w	r8, r1, asr #5
90014bb2:	f009 021f 	and.w	r2, r9, #31
90014bb6:	f001 011f 	and.w	r1, r1, #31
90014bba:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90014bbe:	920c      	str	r2, [sp, #48]	; 0x30
90014bc0:	45b0      	cmp	r8, r6
90014bc2:	9a01      	ldr	r2, [sp, #4]
90014bc4:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90014bc8:	eba2 0203 	sub.w	r2, r2, r3
90014bcc:	d108      	bne.n	90014be0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90014bce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90014bd0:	4496      	add	lr, r2
90014bd2:	4419      	add	r1, r3
90014bd4:	f8a5 e004 	strh.w	lr, [r5, #4]
90014bd8:	fb02 a101 	mla	r1, r2, r1, sl
90014bdc:	80e9      	strh	r1, [r5, #6]
90014bde:	e6fa      	b.n	900149d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014be0:	2c00      	cmp	r4, #0
90014be2:	f2c0 80a7 	blt.w	90014d34 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90014be6:	2701      	movs	r7, #1
90014be8:	f1c1 0c20 	rsb	ip, r1, #32
90014bec:	970a      	str	r7, [sp, #40]	; 0x28
90014bee:	2720      	movs	r7, #32
90014bf0:	fb02 f20c 	mul.w	r2, r2, ip
90014bf4:	9709      	str	r7, [sp, #36]	; 0x24
90014bf6:	9f09      	ldr	r7, [sp, #36]	; 0x24
90014bf8:	fb92 fcf4 	sdiv	ip, r2, r4
90014bfc:	fb04 221c 	mls	r2, r4, ip, r2
90014c00:	4439      	add	r1, r7
90014c02:	2a00      	cmp	r2, #0
90014c04:	bfbc      	itt	lt
90014c06:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90014c0a:	1912      	addlt	r2, r2, r4
90014c0c:	fb0c a101 	mla	r1, ip, r1, sl
90014c10:	44e6      	add	lr, ip
90014c12:	80e9      	strh	r1, [r5, #6]
90014c14:	990a      	ldr	r1, [sp, #40]	; 0x28
90014c16:	f8a5 e004 	strh.w	lr, [r5, #4]
90014c1a:	eb08 0501 	add.w	r5, r8, r1
90014c1e:	6901      	ldr	r1, [r0, #16]
90014c20:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90014c24:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90014c28:	ea58 070e 	orrs.w	r7, r8, lr
90014c2c:	d010      	beq.n	90014c50 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014c2e:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90014c32:	f1be 0f00 	cmp.w	lr, #0
90014c36:	db0b      	blt.n	90014c50 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014c38:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014c3a:	45be      	cmp	lr, r7
90014c3c:	da08      	bge.n	90014c50 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014c3e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90014c42:	45be      	cmp	lr, r7
90014c44:	bf3c      	itt	cc
90014c46:	3108      	addcc	r1, #8
90014c48:	6101      	strcc	r1, [r0, #16]
90014c4a:	f10e 0101 	add.w	r1, lr, #1
90014c4e:	6081      	str	r1, [r0, #8]
90014c50:	6901      	ldr	r1, [r0, #16]
90014c52:	f04f 0e00 	mov.w	lr, #0
90014c56:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90014c5a:	42ae      	cmp	r6, r5
90014c5c:	800d      	strh	r5, [r1, #0]
90014c5e:	4463      	add	r3, ip
90014c60:	f8a1 8002 	strh.w	r8, [r1, #2]
90014c64:	f8a1 e004 	strh.w	lr, [r1, #4]
90014c68:	f8a1 e006 	strh.w	lr, [r1, #6]
90014c6c:	d053      	beq.n	90014d16 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90014c6e:	9901      	ldr	r1, [sp, #4]
90014c70:	1b12      	subs	r2, r2, r4
90014c72:	1ac9      	subs	r1, r1, r3
90014c74:	4461      	add	r1, ip
90014c76:	0149      	lsls	r1, r1, #5
90014c78:	fb91 fef4 	sdiv	lr, r1, r4
90014c7c:	fb04 111e 	mls	r1, r4, lr, r1
90014c80:	2900      	cmp	r1, #0
90014c82:	bfbc      	itt	lt
90014c84:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90014c88:	1909      	addlt	r1, r1, r4
90014c8a:	f10e 0701 	add.w	r7, lr, #1
90014c8e:	970d      	str	r7, [sp, #52]	; 0x34
90014c90:	f8d0 a010 	ldr.w	sl, [r0, #16]
90014c94:	1852      	adds	r2, r2, r1
90014c96:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90014c98:	bf54      	ite	pl
90014c9a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
90014c9e:	46f4      	movmi	ip, lr
90014ca0:	f8ba b004 	ldrh.w	fp, [sl, #4]
90014ca4:	bf58      	it	pl
90014ca6:	1b12      	subpl	r2, r2, r4
90014ca8:	4463      	add	r3, ip
90014caa:	443d      	add	r5, r7
90014cac:	44e3      	add	fp, ip
90014cae:	f8aa b004 	strh.w	fp, [sl, #4]
90014cb2:	f8ba b006 	ldrh.w	fp, [sl, #6]
90014cb6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90014cba:	f8aa b006 	strh.w	fp, [sl, #6]
90014cbe:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014cc2:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014cc6:	f8bc a004 	ldrh.w	sl, [ip, #4]
90014cca:	ea5b 070a 	orrs.w	r7, fp, sl
90014cce:	d014      	beq.n	90014cfa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90014cd0:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90014cd4:	f1ba 0f00 	cmp.w	sl, #0
90014cd8:	db0f      	blt.n	90014cfa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90014cda:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014cdc:	45ba      	cmp	sl, r7
90014cde:	da0c      	bge.n	90014cfa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90014ce0:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90014ce4:	45ba      	cmp	sl, r7
90014ce6:	f10a 0a01 	add.w	sl, sl, #1
90014cea:	bf38      	it	cc
90014cec:	f10c 0c08 	addcc.w	ip, ip, #8
90014cf0:	f8c0 a008 	str.w	sl, [r0, #8]
90014cf4:	bf38      	it	cc
90014cf6:	f8c0 c010 	strcc.w	ip, [r0, #16]
90014cfa:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014cfe:	f04f 0700 	mov.w	r7, #0
90014d02:	42ae      	cmp	r6, r5
90014d04:	f8ac 5000 	strh.w	r5, [ip]
90014d08:	f8ac 8002 	strh.w	r8, [ip, #2]
90014d0c:	f8ac 7004 	strh.w	r7, [ip, #4]
90014d10:	f8ac 7006 	strh.w	r7, [ip, #6]
90014d14:	d1bc      	bne.n	90014c90 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90014d16:	6904      	ldr	r4, [r0, #16]
90014d18:	9a01      	ldr	r2, [sp, #4]
90014d1a:	990c      	ldr	r1, [sp, #48]	; 0x30
90014d1c:	1ad3      	subs	r3, r2, r3
90014d1e:	88a2      	ldrh	r2, [r4, #4]
90014d20:	3120      	adds	r1, #32
90014d22:	441a      	add	r2, r3
90014d24:	80a2      	strh	r2, [r4, #4]
90014d26:	9a09      	ldr	r2, [sp, #36]	; 0x24
90014d28:	1a89      	subs	r1, r1, r2
90014d2a:	88e2      	ldrh	r2, [r4, #6]
90014d2c:	fb03 2301 	mla	r3, r3, r1, r2
90014d30:	80e3      	strh	r3, [r4, #6]
90014d32:	e650      	b.n	900149d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014d34:	f04f 37ff 	mov.w	r7, #4294967295
90014d38:	434a      	muls	r2, r1
90014d3a:	4264      	negs	r4, r4
90014d3c:	970a      	str	r7, [sp, #40]	; 0x28
90014d3e:	2700      	movs	r7, #0
90014d40:	e758      	b.n	90014bf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90014d42:	ea4f 1867 	mov.w	r8, r7, asr #5
90014d46:	f009 031f 	and.w	r3, r9, #31
90014d4a:	f007 071f 	and.w	r7, r7, #31
90014d4e:	fa1f fc8c 	uxth.w	ip, ip
90014d52:	45d0      	cmp	r8, sl
90014d54:	930f      	str	r3, [sp, #60]	; 0x3c
90014d56:	fa1f fe8e 	uxth.w	lr, lr
90014d5a:	d10a      	bne.n	90014d72 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90014d5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90014d5e:	449c      	add	ip, r3
90014d60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90014d62:	441f      	add	r7, r3
90014d64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90014d66:	f8a5 c004 	strh.w	ip, [r5, #4]
90014d6a:	fb03 e707 	mla	r7, r3, r7, lr
90014d6e:	80ef      	strh	r7, [r5, #6]
90014d70:	e6bc      	b.n	90014aec <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014d72:	2900      	cmp	r1, #0
90014d74:	f2c0 80a6 	blt.w	90014ec4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90014d78:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90014d7a:	f1c7 0320 	rsb	r3, r7, #32
90014d7e:	4363      	muls	r3, r4
90014d80:	2401      	movs	r4, #1
90014d82:	940d      	str	r4, [sp, #52]	; 0x34
90014d84:	2420      	movs	r4, #32
90014d86:	940c      	str	r4, [sp, #48]	; 0x30
90014d88:	fb93 f4f1 	sdiv	r4, r3, r1
90014d8c:	fb01 3b14 	mls	fp, r1, r4, r3
90014d90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90014d92:	f1bb 0f00 	cmp.w	fp, #0
90014d96:	441f      	add	r7, r3
90014d98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014d9a:	bfbc      	itt	lt
90014d9c:	f104 34ff 	addlt.w	r4, r4, #4294967295
90014da0:	448b      	addlt	fp, r1
90014da2:	fb04 e707 	mla	r7, r4, r7, lr
90014da6:	44a4      	add	ip, r4
90014da8:	80ef      	strh	r7, [r5, #6]
90014daa:	f8a5 c004 	strh.w	ip, [r5, #4]
90014dae:	eb08 0503 	add.w	r5, r8, r3
90014db2:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014db6:	f8bc e006 	ldrh.w	lr, [ip, #6]
90014dba:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90014dbe:	ea5e 0307 	orrs.w	r3, lr, r7
90014dc2:	d011      	beq.n	90014de8 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90014dc4:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90014dc8:	f1be 0f00 	cmp.w	lr, #0
90014dcc:	db0c      	blt.n	90014de8 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90014dce:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014dd0:	45be      	cmp	lr, r7
90014dd2:	da09      	bge.n	90014de8 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90014dd4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90014dd8:	45be      	cmp	lr, r7
90014dda:	bf3c      	itt	cc
90014ddc:	f10c 0708 	addcc.w	r7, ip, #8
90014de0:	6107      	strcc	r7, [r0, #16]
90014de2:	f10e 0701 	add.w	r7, lr, #1
90014de6:	6087      	str	r7, [r0, #8]
90014de8:	6907      	ldr	r7, [r0, #16]
90014dea:	b213      	sxth	r3, r2
90014dec:	4555      	cmp	r5, sl
90014dee:	9310      	str	r3, [sp, #64]	; 0x40
90014df0:	807b      	strh	r3, [r7, #2]
90014df2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90014df4:	803d      	strh	r5, [r7, #0]
90014df6:	80be      	strh	r6, [r7, #4]
90014df8:	eb04 0c03 	add.w	ip, r4, r3
90014dfc:	80fe      	strh	r6, [r7, #6]
90014dfe:	d050      	beq.n	90014ea2 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90014e00:	9b01      	ldr	r3, [sp, #4]
90014e02:	eba3 070c 	sub.w	r7, r3, ip
90014e06:	ebab 0301 	sub.w	r3, fp, r1
90014e0a:	443c      	add	r4, r7
90014e0c:	9309      	str	r3, [sp, #36]	; 0x24
90014e0e:	0164      	lsls	r4, r4, #5
90014e10:	fb94 f8f1 	sdiv	r8, r4, r1
90014e14:	fb01 4418 	mls	r4, r1, r8, r4
90014e18:	2c00      	cmp	r4, #0
90014e1a:	bfbc      	itt	lt
90014e1c:	f108 38ff 	addlt.w	r8, r8, #4294967295
90014e20:	1864      	addlt	r4, r4, r1
90014e22:	f108 0701 	add.w	r7, r8, #1
90014e26:	9711      	str	r7, [sp, #68]	; 0x44
90014e28:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014e2a:	f8d0 e010 	ldr.w	lr, [r0, #16]
90014e2e:	191b      	adds	r3, r3, r4
90014e30:	f8be b004 	ldrh.w	fp, [lr, #4]
90014e34:	bf54      	ite	pl
90014e36:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
90014e38:	4647      	movmi	r7, r8
90014e3a:	9309      	str	r3, [sp, #36]	; 0x24
90014e3c:	bf58      	it	pl
90014e3e:	1a5b      	subpl	r3, r3, r1
90014e40:	44bb      	add	fp, r7
90014e42:	44bc      	add	ip, r7
90014e44:	bf58      	it	pl
90014e46:	9309      	strpl	r3, [sp, #36]	; 0x24
90014e48:	f8ae b004 	strh.w	fp, [lr, #4]
90014e4c:	f8be b006 	ldrh.w	fp, [lr, #6]
90014e50:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014e54:	9f0d      	ldr	r7, [sp, #52]	; 0x34
90014e56:	f8ae b006 	strh.w	fp, [lr, #6]
90014e5a:	443d      	add	r5, r7
90014e5c:	f8d0 e010 	ldr.w	lr, [r0, #16]
90014e60:	f8be b006 	ldrh.w	fp, [lr, #6]
90014e64:	f8be 7004 	ldrh.w	r7, [lr, #4]
90014e68:	ea5b 0307 	orrs.w	r3, fp, r7
90014e6c:	d011      	beq.n	90014e92 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90014e6e:	f9be b002 	ldrsh.w	fp, [lr, #2]
90014e72:	f1bb 0f00 	cmp.w	fp, #0
90014e76:	db0c      	blt.n	90014e92 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90014e78:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014e7a:	45bb      	cmp	fp, r7
90014e7c:	da09      	bge.n	90014e92 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90014e7e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014e82:	45bb      	cmp	fp, r7
90014e84:	bf3c      	itt	cc
90014e86:	f10e 0708 	addcc.w	r7, lr, #8
90014e8a:	6107      	strcc	r7, [r0, #16]
90014e8c:	f10b 0701 	add.w	r7, fp, #1
90014e90:	6087      	str	r7, [r0, #8]
90014e92:	6907      	ldr	r7, [r0, #16]
90014e94:	4555      	cmp	r5, sl
90014e96:	9b10      	ldr	r3, [sp, #64]	; 0x40
90014e98:	803d      	strh	r5, [r7, #0]
90014e9a:	807b      	strh	r3, [r7, #2]
90014e9c:	80be      	strh	r6, [r7, #4]
90014e9e:	80fe      	strh	r6, [r7, #6]
90014ea0:	d1c2      	bne.n	90014e28 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90014ea2:	9b01      	ldr	r3, [sp, #4]
90014ea4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90014ea6:	eba3 0c0c 	sub.w	ip, r3, ip
90014eaa:	6903      	ldr	r3, [r0, #16]
90014eac:	3720      	adds	r7, #32
90014eae:	8899      	ldrh	r1, [r3, #4]
90014eb0:	4461      	add	r1, ip
90014eb2:	8099      	strh	r1, [r3, #4]
90014eb4:	990c      	ldr	r1, [sp, #48]	; 0x30
90014eb6:	1a7f      	subs	r7, r7, r1
90014eb8:	88d9      	ldrh	r1, [r3, #6]
90014eba:	fb0c 1c07 	mla	ip, ip, r7, r1
90014ebe:	f8a3 c006 	strh.w	ip, [r3, #6]
90014ec2:	e613      	b.n	90014aec <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014ec4:	f04f 34ff 	mov.w	r4, #4294967295
90014ec8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90014eca:	4249      	negs	r1, r1
90014ecc:	940d      	str	r4, [sp, #52]	; 0x34
90014ece:	2400      	movs	r4, #0
90014ed0:	437b      	muls	r3, r7
90014ed2:	e758      	b.n	90014d86 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90014ed4:	9905      	ldr	r1, [sp, #20]
90014ed6:	ea4f 1b69 	mov.w	fp, r9, asr #5
90014eda:	f009 0c1f 	and.w	ip, r9, #31
90014ede:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90014ee2:	f001 011f 	and.w	r1, r1, #31
90014ee6:	45f3      	cmp	fp, lr
90014ee8:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90014eec:	9102      	str	r1, [sp, #8]
90014eee:	9904      	ldr	r1, [sp, #16]
90014ef0:	eba1 0406 	sub.w	r4, r1, r6
90014ef4:	d108      	bne.n	90014f08 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90014ef6:	9b02      	ldr	r3, [sp, #8]
90014ef8:	44a0      	add	r8, r4
90014efa:	449c      	add	ip, r3
90014efc:	f8a7 8004 	strh.w	r8, [r7, #4]
90014f00:	fb04 a40c 	mla	r4, r4, ip, sl
90014f04:	80fc      	strh	r4, [r7, #6]
90014f06:	e461      	b.n	900147cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014f08:	9905      	ldr	r1, [sp, #20]
90014f0a:	ebb1 0109 	subs.w	r1, r1, r9
90014f0e:	bf51      	iteee	pl
90014f10:	f1cc 0520 	rsbpl	r5, ip, #32
90014f14:	fb04 f40c 	mulmi.w	r4, r4, ip
90014f18:	4249      	negmi	r1, r1
90014f1a:	2500      	movmi	r5, #0
90014f1c:	bf5d      	ittte	pl
90014f1e:	436c      	mulpl	r4, r5
90014f20:	2520      	movpl	r5, #32
90014f22:	f04f 0901 	movpl.w	r9, #1
90014f26:	f04f 39ff 	movmi.w	r9, #4294967295
90014f2a:	9501      	str	r5, [sp, #4]
90014f2c:	9b01      	ldr	r3, [sp, #4]
90014f2e:	fb94 f5f1 	sdiv	r5, r4, r1
90014f32:	fb01 4415 	mls	r4, r1, r5, r4
90014f36:	449c      	add	ip, r3
90014f38:	eb0b 0309 	add.w	r3, fp, r9
90014f3c:	2c00      	cmp	r4, #0
90014f3e:	bfbc      	itt	lt
90014f40:	f105 35ff 	addlt.w	r5, r5, #4294967295
90014f44:	1864      	addlt	r4, r4, r1
90014f46:	44a8      	add	r8, r5
90014f48:	fb05 ac0c 	mla	ip, r5, ip, sl
90014f4c:	f8a7 8004 	strh.w	r8, [r7, #4]
90014f50:	f8a7 c006 	strh.w	ip, [r7, #6]
90014f54:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014f58:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90014f5c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90014f60:	ea58 0707 	orrs.w	r7, r8, r7
90014f64:	d011      	beq.n	90014f8a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014f66:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90014f6a:	f1b8 0f00 	cmp.w	r8, #0
90014f6e:	db0c      	blt.n	90014f8a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014f70:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014f72:	45b8      	cmp	r8, r7
90014f74:	da09      	bge.n	90014f8a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014f76:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90014f7a:	45b8      	cmp	r8, r7
90014f7c:	bf3c      	itt	cc
90014f7e:	f10c 0708 	addcc.w	r7, ip, #8
90014f82:	6107      	strcc	r7, [r0, #16]
90014f84:	f108 0701 	add.w	r7, r8, #1
90014f88:	6087      	str	r7, [r0, #8]
90014f8a:	6907      	ldr	r7, [r0, #16]
90014f8c:	f04f 0c00 	mov.w	ip, #0
90014f90:	b212      	sxth	r2, r2
90014f92:	459e      	cmp	lr, r3
90014f94:	803b      	strh	r3, [r7, #0]
90014f96:	442e      	add	r6, r5
90014f98:	807a      	strh	r2, [r7, #2]
90014f9a:	f8a7 c004 	strh.w	ip, [r7, #4]
90014f9e:	f8a7 c006 	strh.w	ip, [r7, #6]
90014fa2:	d04b      	beq.n	9001503c <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90014fa4:	9f04      	ldr	r7, [sp, #16]
90014fa6:	1a64      	subs	r4, r4, r1
90014fa8:	f04f 0a00 	mov.w	sl, #0
90014fac:	1bbf      	subs	r7, r7, r6
90014fae:	443d      	add	r5, r7
90014fb0:	016d      	lsls	r5, r5, #5
90014fb2:	fb95 f8f1 	sdiv	r8, r5, r1
90014fb6:	fb01 5518 	mls	r5, r1, r8, r5
90014fba:	4565      	cmp	r5, ip
90014fbc:	bfbc      	itt	lt
90014fbe:	f108 38ff 	addlt.w	r8, r8, #4294967295
90014fc2:	186d      	addlt	r5, r5, r1
90014fc4:	f108 0701 	add.w	r7, r8, #1
90014fc8:	9703      	str	r7, [sp, #12]
90014fca:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014fce:	1964      	adds	r4, r4, r5
90014fd0:	444b      	add	r3, r9
90014fd2:	bf54      	ite	pl
90014fd4:	9f03      	ldrpl	r7, [sp, #12]
90014fd6:	4647      	movmi	r7, r8
90014fd8:	f8bc b004 	ldrh.w	fp, [ip, #4]
90014fdc:	bf58      	it	pl
90014fde:	1a64      	subpl	r4, r4, r1
90014fe0:	443e      	add	r6, r7
90014fe2:	44bb      	add	fp, r7
90014fe4:	f8ac b004 	strh.w	fp, [ip, #4]
90014fe8:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014fec:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014ff0:	f8ac b006 	strh.w	fp, [ip, #6]
90014ff4:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014ff8:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014ffc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90015000:	ea5b 0707 	orrs.w	r7, fp, r7
90015004:	d011      	beq.n	9001502a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90015006:	f9bc b002 	ldrsh.w	fp, [ip, #2]
9001500a:	f1bb 0f00 	cmp.w	fp, #0
9001500e:	db0c      	blt.n	9001502a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90015010:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90015012:	45bb      	cmp	fp, r7
90015014:	da09      	bge.n	9001502a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90015016:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001501a:	45bb      	cmp	fp, r7
9001501c:	bf3c      	itt	cc
9001501e:	f10c 0708 	addcc.w	r7, ip, #8
90015022:	6107      	strcc	r7, [r0, #16]
90015024:	f10b 0701 	add.w	r7, fp, #1
90015028:	6087      	str	r7, [r0, #8]
9001502a:	6907      	ldr	r7, [r0, #16]
9001502c:	459e      	cmp	lr, r3
9001502e:	803b      	strh	r3, [r7, #0]
90015030:	807a      	strh	r2, [r7, #2]
90015032:	f8a7 a004 	strh.w	sl, [r7, #4]
90015036:	f8a7 a006 	strh.w	sl, [r7, #6]
9001503a:	d1c6      	bne.n	90014fca <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
9001503c:	9b04      	ldr	r3, [sp, #16]
9001503e:	1b9e      	subs	r6, r3, r6
90015040:	6903      	ldr	r3, [r0, #16]
90015042:	889a      	ldrh	r2, [r3, #4]
90015044:	4432      	add	r2, r6
90015046:	809a      	strh	r2, [r3, #4]
90015048:	9a02      	ldr	r2, [sp, #8]
9001504a:	f102 0c20 	add.w	ip, r2, #32
9001504e:	9a01      	ldr	r2, [sp, #4]
90015050:	ebac 0c02 	sub.w	ip, ip, r2
90015054:	88da      	ldrh	r2, [r3, #6]
90015056:	fb06 260c 	mla	r6, r6, ip, r2
9001505a:	80de      	strh	r6, [r3, #6]
9001505c:	f7ff bbb6 	b.w	900147cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90015060 <_ZN8touchgfx7Outline6lineToEii>:
90015060:	6a43      	ldr	r3, [r0, #36]	; 0x24
90015062:	079b      	lsls	r3, r3, #30
90015064:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90015066:	460e      	mov	r6, r1
90015068:	4615      	mov	r5, r2
9001506a:	d511      	bpl.n	90015090 <_ZN8touchgfx7Outline6lineToEii+0x30>
9001506c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90015070:	ea86 0701 	eor.w	r7, r6, r1
90015074:	ea85 0302 	eor.w	r3, r5, r2
90015078:	433b      	orrs	r3, r7
9001507a:	d009      	beq.n	90015090 <_ZN8touchgfx7Outline6lineToEii+0x30>
9001507c:	4633      	mov	r3, r6
9001507e:	9500      	str	r5, [sp, #0]
90015080:	f7ff fb4c 	bl	9001471c <_ZN8touchgfx7Outline10renderLineEiiii>
90015084:	6a43      	ldr	r3, [r0, #36]	; 0x24
90015086:	f043 0301 	orr.w	r3, r3, #1
9001508a:	e9c0 6505 	strd	r6, r5, [r0, #20]
9001508e:	6243      	str	r3, [r0, #36]	; 0x24
90015090:	b003      	add	sp, #12
90015092:	bdf0      	pop	{r4, r5, r6, r7, pc}

90015094 <_ZN8touchgfx7Outline6moveToEii>:
90015094:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90015096:	6a43      	ldr	r3, [r0, #36]	; 0x24
90015098:	4615      	mov	r5, r2
9001509a:	4604      	mov	r4, r0
9001509c:	460e      	mov	r6, r1
9001509e:	079a      	lsls	r2, r3, #30
900150a0:	d401      	bmi.n	900150a6 <_ZN8touchgfx7Outline6moveToEii+0x12>
900150a2:	f7ff fb07 	bl	900146b4 <_ZN8touchgfx7Outline5resetEv>
900150a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
900150a8:	07db      	lsls	r3, r3, #31
900150aa:	d504      	bpl.n	900150b6 <_ZN8touchgfx7Outline6moveToEii+0x22>
900150ac:	4620      	mov	r0, r4
900150ae:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
900150b2:	f7ff ffd5 	bl	90015060 <_ZN8touchgfx7Outline6lineToEii>
900150b6:	6923      	ldr	r3, [r4, #16]
900150b8:	1170      	asrs	r0, r6, #5
900150ba:	1169      	asrs	r1, r5, #5
900150bc:	f9b3 2000 	ldrsh.w	r2, [r3]
900150c0:	4290      	cmp	r0, r2
900150c2:	d103      	bne.n	900150cc <_ZN8touchgfx7Outline6moveToEii+0x38>
900150c4:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900150c8:	4291      	cmp	r1, r2
900150ca:	d01a      	beq.n	90015102 <_ZN8touchgfx7Outline6moveToEii+0x6e>
900150cc:	88df      	ldrh	r7, [r3, #6]
900150ce:	889a      	ldrh	r2, [r3, #4]
900150d0:	433a      	orrs	r2, r7
900150d2:	d010      	beq.n	900150f6 <_ZN8touchgfx7Outline6moveToEii+0x62>
900150d4:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900150d8:	2a00      	cmp	r2, #0
900150da:	db0c      	blt.n	900150f6 <_ZN8touchgfx7Outline6moveToEii+0x62>
900150dc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
900150de:	42ba      	cmp	r2, r7
900150e0:	da09      	bge.n	900150f6 <_ZN8touchgfx7Outline6moveToEii+0x62>
900150e2:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
900150e6:	42ba      	cmp	r2, r7
900150e8:	f102 0201 	add.w	r2, r2, #1
900150ec:	bf38      	it	cc
900150ee:	3308      	addcc	r3, #8
900150f0:	60a2      	str	r2, [r4, #8]
900150f2:	bf38      	it	cc
900150f4:	6123      	strcc	r3, [r4, #16]
900150f6:	6923      	ldr	r3, [r4, #16]
900150f8:	2200      	movs	r2, #0
900150fa:	8018      	strh	r0, [r3, #0]
900150fc:	8059      	strh	r1, [r3, #2]
900150fe:	809a      	strh	r2, [r3, #4]
90015100:	80da      	strh	r2, [r3, #6]
90015102:	6166      	str	r6, [r4, #20]
90015104:	6225      	str	r5, [r4, #32]
90015106:	e9c4 5606 	strd	r5, r6, [r4, #24]
9001510a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9001510c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
9001510c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90015110:	b0d0      	sub	sp, #320	; 0x140
90015112:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90015116:	466c      	mov	r4, sp
90015118:	4627      	mov	r7, r4
9001511a:	1a0d      	subs	r5, r1, r0
9001511c:	f100 0308 	add.w	r3, r0, #8
90015120:	2d48      	cmp	r5, #72	; 0x48
90015122:	f340 80d5 	ble.w	900152d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90015126:	112d      	asrs	r5, r5, #4
90015128:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001512c:	f9b0 9000 	ldrsh.w	r9, [r0]
90015130:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90015134:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90015138:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
9001513c:	6816      	ldr	r6, [r2, #0]
9001513e:	6006      	str	r6, [r0, #0]
90015140:	6856      	ldr	r6, [r2, #4]
90015142:	6046      	str	r6, [r0, #4]
90015144:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90015148:	f8a2 8002 	strh.w	r8, [r2, #2]
9001514c:	f8a2 e004 	strh.w	lr, [r2, #4]
90015150:	f8a2 c006 	strh.w	ip, [r2, #6]
90015154:	f1a1 0208 	sub.w	r2, r1, #8
90015158:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
9001515c:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90015160:	4565      	cmp	r5, ip
90015162:	db06      	blt.n	90015172 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90015164:	d119      	bne.n	9001519a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90015166:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
9001516a:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
9001516e:	42ae      	cmp	r6, r5
90015170:	dd13      	ble.n	9001519a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90015172:	460e      	mov	r6, r1
90015174:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90015178:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
9001517c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90015180:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90015184:	601d      	str	r5, [r3, #0]
90015186:	6875      	ldr	r5, [r6, #4]
90015188:	605d      	str	r5, [r3, #4]
9001518a:	f821 9c08 	strh.w	r9, [r1, #-8]
9001518e:	f821 cc06 	strh.w	ip, [r1, #-6]
90015192:	f821 8c04 	strh.w	r8, [r1, #-4]
90015196:	f821 ec02 	strh.w	lr, [r1, #-2]
9001519a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9001519e:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
900151a2:	42ae      	cmp	r6, r5
900151a4:	db06      	blt.n	900151b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
900151a6:	d116      	bne.n	900151d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900151a8:	f9b0 c000 	ldrsh.w	ip, [r0]
900151ac:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
900151b0:	45ac      	cmp	ip, r5
900151b2:	da10      	bge.n	900151d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900151b4:	681d      	ldr	r5, [r3, #0]
900151b6:	f9b0 8000 	ldrsh.w	r8, [r0]
900151ba:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900151be:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900151c2:	6005      	str	r5, [r0, #0]
900151c4:	685d      	ldr	r5, [r3, #4]
900151c6:	f8a0 8008 	strh.w	r8, [r0, #8]
900151ca:	6045      	str	r5, [r0, #4]
900151cc:	8146      	strh	r6, [r0, #10]
900151ce:	f8a0 e00c 	strh.w	lr, [r0, #12]
900151d2:	f8a0 c00e 	strh.w	ip, [r0, #14]
900151d6:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900151da:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900151de:	4565      	cmp	r5, ip
900151e0:	db06      	blt.n	900151f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
900151e2:	d119      	bne.n	90015218 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900151e4:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
900151e8:	f9b0 5000 	ldrsh.w	r5, [r0]
900151ec:	42ae      	cmp	r6, r5
900151ee:	da13      	bge.n	90015218 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900151f0:	460e      	mov	r6, r1
900151f2:	f9b0 9000 	ldrsh.w	r9, [r0]
900151f6:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
900151fa:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900151fe:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90015202:	6005      	str	r5, [r0, #0]
90015204:	6875      	ldr	r5, [r6, #4]
90015206:	6045      	str	r5, [r0, #4]
90015208:	f821 9c08 	strh.w	r9, [r1, #-8]
9001520c:	f821 cc06 	strh.w	ip, [r1, #-6]
90015210:	f821 8c04 	strh.w	r8, [r1, #-4]
90015214:	f821 ec02 	strh.w	lr, [r1, #-2]
90015218:	3308      	adds	r3, #8
9001521a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001521e:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90015222:	45e6      	cmp	lr, ip
90015224:	dbf8      	blt.n	90015218 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015226:	d105      	bne.n	90015234 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90015228:	f9b3 6000 	ldrsh.w	r6, [r3]
9001522c:	f9b0 5000 	ldrsh.w	r5, [r0]
90015230:	42ae      	cmp	r6, r5
90015232:	dbf1      	blt.n	90015218 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015234:	4615      	mov	r5, r2
90015236:	3a08      	subs	r2, #8
90015238:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
9001523c:	45b4      	cmp	ip, r6
9001523e:	dbf9      	blt.n	90015234 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90015240:	d105      	bne.n	9001524e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
90015242:	f9b0 8000 	ldrsh.w	r8, [r0]
90015246:	f9b2 6000 	ldrsh.w	r6, [r2]
9001524a:	45b0      	cmp	r8, r6
9001524c:	dbf2      	blt.n	90015234 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001524e:	4293      	cmp	r3, r2
90015250:	f1a5 0608 	sub.w	r6, r5, #8
90015254:	d816      	bhi.n	90015284 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90015256:	f8d6 c000 	ldr.w	ip, [r6]
9001525a:	f9b3 a000 	ldrsh.w	sl, [r3]
9001525e:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90015262:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90015266:	f8c3 c000 	str.w	ip, [r3]
9001526a:	f8d6 c004 	ldr.w	ip, [r6, #4]
9001526e:	f8c3 c004 	str.w	ip, [r3, #4]
90015272:	f825 ac08 	strh.w	sl, [r5, #-8]
90015276:	f825 ec06 	strh.w	lr, [r5, #-6]
9001527a:	f825 9c04 	strh.w	r9, [r5, #-4]
9001527e:	f825 8c02 	strh.w	r8, [r5, #-2]
90015282:	e7c9      	b.n	90015218 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015284:	f8d6 e000 	ldr.w	lr, [r6]
90015288:	f9b0 a000 	ldrsh.w	sl, [r0]
9001528c:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90015290:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90015294:	f8c0 e000 	str.w	lr, [r0]
90015298:	f8d6 e004 	ldr.w	lr, [r6, #4]
9001529c:	1a16      	subs	r6, r2, r0
9001529e:	f8c0 e004 	str.w	lr, [r0, #4]
900152a2:	f825 ac08 	strh.w	sl, [r5, #-8]
900152a6:	f825 cc06 	strh.w	ip, [r5, #-6]
900152aa:	f825 9c04 	strh.w	r9, [r5, #-4]
900152ae:	f825 8c02 	strh.w	r8, [r5, #-2]
900152b2:	1acd      	subs	r5, r1, r3
900152b4:	10ed      	asrs	r5, r5, #3
900152b6:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
900152ba:	bfb5      	itete	lt
900152bc:	e9c4 0200 	strdlt	r0, r2, [r4]
900152c0:	e9c4 3100 	strdge	r3, r1, [r4]
900152c4:	460a      	movlt	r2, r1
900152c6:	4603      	movge	r3, r0
900152c8:	3408      	adds	r4, #8
900152ca:	4618      	mov	r0, r3
900152cc:	4611      	mov	r1, r2
900152ce:	e724      	b.n	9001511a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900152d0:	4299      	cmp	r1, r3
900152d2:	d927      	bls.n	90015324 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
900152d4:	f1a3 0210 	sub.w	r2, r3, #16
900152d8:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
900152dc:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
900152e0:	45ac      	cmp	ip, r5
900152e2:	db06      	blt.n	900152f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
900152e4:	d11c      	bne.n	90015320 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900152e6:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
900152ea:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
900152ee:	42ae      	cmp	r6, r5
900152f0:	da16      	bge.n	90015320 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900152f2:	4615      	mov	r5, r2
900152f4:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900152f8:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900152fc:	3a08      	subs	r2, #8
900152fe:	f855 6f08 	ldr.w	r6, [r5, #8]!
90015302:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90015306:	6196      	str	r6, [r2, #24]
90015308:	42a8      	cmp	r0, r5
9001530a:	686e      	ldr	r6, [r5, #4]
9001530c:	f8a2 9010 	strh.w	r9, [r2, #16]
90015310:	61d6      	str	r6, [r2, #28]
90015312:	f8a2 c012 	strh.w	ip, [r2, #18]
90015316:	f8a2 8014 	strh.w	r8, [r2, #20]
9001531a:	f8a2 e016 	strh.w	lr, [r2, #22]
9001531e:	d1db      	bne.n	900152d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90015320:	3308      	adds	r3, #8
90015322:	e7d5      	b.n	900152d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90015324:	42bc      	cmp	r4, r7
90015326:	d903      	bls.n	90015330 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90015328:	e954 0102 	ldrd	r0, r1, [r4, #-8]
9001532c:	3c08      	subs	r4, #8
9001532e:	e6f4      	b.n	9001511a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90015330:	b050      	add	sp, #320	; 0x140
90015332:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90015336 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90015336:	b510      	push	{r4, lr}
90015338:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001533a:	4604      	mov	r4, r0
9001533c:	07da      	lsls	r2, r3, #31
9001533e:	d507      	bpl.n	90015350 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90015340:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90015344:	f7ff fe8c 	bl	90015060 <_ZN8touchgfx7Outline6lineToEii>
90015348:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001534a:	f023 0301 	bic.w	r3, r3, #1
9001534e:	6243      	str	r3, [r0, #36]	; 0x24
90015350:	6a63      	ldr	r3, [r4, #36]	; 0x24
90015352:	079b      	lsls	r3, r3, #30
90015354:	d521      	bpl.n	9001539a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90015356:	6923      	ldr	r3, [r4, #16]
90015358:	88d9      	ldrh	r1, [r3, #6]
9001535a:	889a      	ldrh	r2, [r3, #4]
9001535c:	430a      	orrs	r2, r1
9001535e:	d010      	beq.n	90015382 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90015360:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90015364:	2a00      	cmp	r2, #0
90015366:	db0c      	blt.n	90015382 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90015368:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9001536a:	428a      	cmp	r2, r1
9001536c:	da09      	bge.n	90015382 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001536e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90015372:	4291      	cmp	r1, r2
90015374:	f102 0201 	add.w	r2, r2, #1
90015378:	bf88      	it	hi
9001537a:	3308      	addhi	r3, #8
9001537c:	60a2      	str	r2, [r4, #8]
9001537e:	bf88      	it	hi
90015380:	6123      	strhi	r3, [r4, #16]
90015382:	68a1      	ldr	r1, [r4, #8]
90015384:	b129      	cbz	r1, 90015392 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90015386:	6863      	ldr	r3, [r4, #4]
90015388:	4299      	cmp	r1, r3
9001538a:	d802      	bhi.n	90015392 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
9001538c:	68e0      	ldr	r0, [r4, #12]
9001538e:	f7ff febd 	bl	9001510c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90015392:	6a63      	ldr	r3, [r4, #36]	; 0x24
90015394:	f023 0302 	bic.w	r3, r3, #2
90015398:	6263      	str	r3, [r4, #36]	; 0x24
9001539a:	68e0      	ldr	r0, [r4, #12]
9001539c:	bd10      	pop	{r4, pc}
	...

900153a0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
900153a0:	4b02      	ldr	r3, [pc, #8]	; (900153ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
900153a2:	6018      	str	r0, [r3, #0]
900153a4:	4b02      	ldr	r3, [pc, #8]	; (900153b0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
900153a6:	6019      	str	r1, [r3, #0]
900153a8:	4770      	bx	lr
900153aa:	bf00      	nop
900153ac:	240398a4 	.word	0x240398a4
900153b0:	240398a8 	.word	0x240398a8

900153b4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
900153b4:	2300      	movs	r3, #0
900153b6:	4a02      	ldr	r2, [pc, #8]	; (900153c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
900153b8:	6013      	str	r3, [r2, #0]
900153ba:	4a02      	ldr	r2, [pc, #8]	; (900153c4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
900153bc:	6013      	str	r3, [r2, #0]
900153be:	4770      	bx	lr
900153c0:	240398a4 	.word	0x240398a4
900153c4:	240398a8 	.word	0x240398a8

900153c8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
900153c8:	4b01      	ldr	r3, [pc, #4]	; (900153d0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
900153ca:	6818      	ldr	r0, [r3, #0]
900153cc:	4770      	bx	lr
900153ce:	bf00      	nop
900153d0:	240398a4 	.word	0x240398a4

900153d4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
900153d4:	4b01      	ldr	r3, [pc, #4]	; (900153dc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
900153d6:	6818      	ldr	r0, [r3, #0]
900153d8:	4770      	bx	lr
900153da:	bf00      	nop
900153dc:	240398a8 	.word	0x240398a8

900153e0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
900153e0:	b510      	push	{r4, lr}
900153e2:	6803      	ldr	r3, [r0, #0]
900153e4:	460c      	mov	r4, r1
900153e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900153e8:	4798      	blx	r3
900153ea:	1b03      	subs	r3, r0, r4
900153ec:	4258      	negs	r0, r3
900153ee:	4158      	adcs	r0, r3
900153f0:	bd10      	pop	{r4, pc}
	...

900153f4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
900153f4:	4b01      	ldr	r3, [pc, #4]	; (900153fc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
900153f6:	6019      	str	r1, [r3, #0]
900153f8:	4770      	bx	lr
900153fa:	bf00      	nop
900153fc:	240398ac 	.word	0x240398ac

90015400 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90015400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015404:	4696      	mov	lr, r2
90015406:	b097      	sub	sp, #92	; 0x5c
90015408:	4605      	mov	r5, r0
9001540a:	4614      	mov	r4, r2
9001540c:	460e      	mov	r6, r1
9001540e:	461f      	mov	r7, r3
90015410:	f10d 0c1c 	add.w	ip, sp, #28
90015414:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
90015418:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
9001541c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
90015420:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015424:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015428:	f8de 3000 	ldr.w	r3, [lr]
9001542c:	f104 0e14 	add.w	lr, r4, #20
90015430:	f8cc 3000 	str.w	r3, [ip]
90015434:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90015438:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001543c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015440:	f8de 3000 	ldr.w	r3, [lr]
90015444:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90015448:	f8cc 3000 	str.w	r3, [ip]
9001544c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90015450:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015454:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015458:	f8de 3000 	ldr.w	r3, [lr]
9001545c:	4631      	mov	r1, r6
9001545e:	9a21      	ldr	r2, [sp, #132]	; 0x84
90015460:	4628      	mov	r0, r5
90015462:	f8cc 3000 	str.w	r3, [ip]
90015466:	682b      	ldr	r3, [r5, #0]
90015468:	9201      	str	r2, [sp, #4]
9001546a:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001546c:	f8cd 8008 	str.w	r8, [sp, #8]
90015470:	9200      	str	r2, [sp, #0]
90015472:	aa07      	add	r2, sp, #28
90015474:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90015478:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
9001547c:	463b      	mov	r3, r7
9001547e:	47d8      	blx	fp
90015480:	46a6      	mov	lr, r4
90015482:	f10d 0c1c 	add.w	ip, sp, #28
90015486:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001548a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001548e:	f8de 3000 	ldr.w	r3, [lr]
90015492:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90015496:	343c      	adds	r4, #60	; 0x3c
90015498:	f8cc 3000 	str.w	r3, [ip]
9001549c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
900154a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900154a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900154a8:	f8de 3000 	ldr.w	r3, [lr]
900154ac:	f8cc 3000 	str.w	r3, [ip]
900154b0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
900154b4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
900154b6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900154ba:	6823      	ldr	r3, [r4, #0]
900154bc:	4631      	mov	r1, r6
900154be:	4628      	mov	r0, r5
900154c0:	f8cc 3000 	str.w	r3, [ip]
900154c4:	682b      	ldr	r3, [r5, #0]
900154c6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900154ca:	9a21      	ldr	r2, [sp, #132]	; 0x84
900154cc:	f8cd 8008 	str.w	r8, [sp, #8]
900154d0:	9201      	str	r2, [sp, #4]
900154d2:	9a20      	ldr	r2, [sp, #128]	; 0x80
900154d4:	9200      	str	r2, [sp, #0]
900154d6:	aa07      	add	r2, sp, #28
900154d8:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
900154da:	463b      	mov	r3, r7
900154dc:	47a0      	blx	r4
900154de:	b017      	add	sp, #92	; 0x5c
900154e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900154e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
900154e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900154e8:	b08d      	sub	sp, #52	; 0x34
900154ea:	4688      	mov	r8, r1
900154ec:	f8d3 c000 	ldr.w	ip, [r3]
900154f0:	9916      	ldr	r1, [sp, #88]	; 0x58
900154f2:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
900154f6:	680f      	ldr	r7, [r1, #0]
900154f8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
900154fc:	eba7 070c 	sub.w	r7, r7, ip
90015500:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
90015504:	edd3 6a07 	vldr	s13, [r3, #28]
90015508:	42bc      	cmp	r4, r7
9001550a:	9918      	ldr	r1, [sp, #96]	; 0x60
9001550c:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
90015510:	bfa8      	it	ge
90015512:	463c      	movge	r4, r7
90015514:	f9b1 9000 	ldrsh.w	r9, [r1]
90015518:	f9ba 1000 	ldrsh.w	r1, [sl]
9001551c:	ee07 4a90 	vmov	s15, r4
90015520:	eb09 0e0c 	add.w	lr, r9, ip
90015524:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
90015528:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
9001552c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
90015530:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
90015534:	4571      	cmp	r1, lr
90015536:	ee25 4a04 	vmul.f32	s8, s10, s8
9001553a:	ee65 4a24 	vmul.f32	s9, s10, s9
9001553e:	ee25 5a27 	vmul.f32	s10, s10, s15
90015542:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
90015546:	ee71 0aa4 	vadd.f32	s1, s3, s9
9001554a:	ee32 1a05 	vadd.f32	s2, s4, s10
9001554e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90015552:	ee36 0a84 	vadd.f32	s0, s13, s8
90015556:	ee61 1a87 	vmul.f32	s3, s3, s14
9001555a:	ee22 2a07 	vmul.f32	s4, s4, s14
9001555e:	f340 808c 	ble.w	9001567a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90015562:	eba1 060e 	sub.w	r6, r1, lr
90015566:	fb96 f5f4 	sdiv	r5, r6, r4
9001556a:	ee07 5a10 	vmov	s14, r5
9001556e:	2d00      	cmp	r5, #0
90015570:	fb04 6615 	mls	r6, r4, r5, r6
90015574:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90015578:	eea7 0a04 	vfma.f32	s0, s14, s8
9001557c:	eee7 0a24 	vfma.f32	s1, s14, s9
90015580:	eea7 1a05 	vfma.f32	s2, s14, s10
90015584:	dd12      	ble.n	900155ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90015586:	ee70 6a44 	vsub.f32	s13, s0, s8
9001558a:	ee70 1ae4 	vsub.f32	s3, s1, s9
9001558e:	ee31 2a45 	vsub.f32	s4, s2, s10
90015592:	eef5 6a40 	vcmp.f32	s13, #0.0
90015596:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001559a:	bf14      	ite	ne
9001559c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
900155a0:	eeb0 7a67 	vmoveq.f32	s14, s15
900155a4:	ee61 1a87 	vmul.f32	s3, s3, s14
900155a8:	ee22 2a07 	vmul.f32	s4, s4, s14
900155ac:	fb05 f204 	mul.w	r2, r5, r4
900155b0:	1abf      	subs	r7, r7, r2
900155b2:	4494      	add	ip, r2
900155b4:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900155b8:	4411      	add	r1, r2
900155ba:	eb09 020c 	add.w	r2, r9, ip
900155be:	b209      	sxth	r1, r1
900155c0:	443a      	add	r2, r7
900155c2:	428a      	cmp	r2, r1
900155c4:	bfc4      	itt	gt
900155c6:	eba1 0209 	subgt.w	r2, r1, r9
900155ca:	eba2 070c 	subgt.w	r7, r2, ip
900155ce:	2f00      	cmp	r7, #0
900155d0:	dd50      	ble.n	90015674 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
900155d2:	fb97 f1f4 	sdiv	r1, r7, r4
900155d6:	fb04 7211 	mls	r2, r4, r1, r7
900155da:	b90a      	cbnz	r2, 900155e0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
900155dc:	3901      	subs	r1, #1
900155de:	4622      	mov	r2, r4
900155e0:	eec7 3a80 	vdiv.f32	s7, s15, s0
900155e4:	6840      	ldr	r0, [r0, #4]
900155e6:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
900155ea:	44b6      	add	lr, r6
900155ec:	f8d0 a000 	ldr.w	sl, [r0]
900155f0:	2900      	cmp	r1, #0
900155f2:	bfcc      	ite	gt
900155f4:	46a1      	movgt	r9, r4
900155f6:	4691      	movle	r9, r2
900155f8:	900b      	str	r0, [sp, #44]	; 0x2c
900155fa:	9817      	ldr	r0, [sp, #92]	; 0x5c
900155fc:	fb04 e505 	mla	r5, r4, r5, lr
90015600:	eef0 6a42 	vmov.f32	s13, s4
90015604:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
90015608:	9008      	str	r0, [sp, #32]
9001560a:	eeb0 7a61 	vmov.f32	s14, s3
9001560e:	9818      	ldr	r0, [sp, #96]	; 0x60
90015610:	695b      	ldr	r3, [r3, #20]
90015612:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90015616:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
9001561a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
9001561e:	980b      	ldr	r0, [sp, #44]	; 0x2c
90015620:	445b      	add	r3, fp
90015622:	9307      	str	r3, [sp, #28]
90015624:	ee16 3a90 	vmov	r3, s13
90015628:	e9cd 8505 	strd	r8, r5, [sp, #20]
9001562c:	ee60 2aa3 	vmul.f32	s5, s1, s7
90015630:	ee21 3a23 	vmul.f32	s6, s2, s7
90015634:	ee72 7ae1 	vsub.f32	s15, s5, s3
90015638:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9001563c:	ee17 7a90 	vmov	r7, s15
90015640:	ee73 7a42 	vsub.f32	s15, s6, s4
90015644:	fb97 f7f4 	sdiv	r7, r7, r4
90015648:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9001564c:	ee17 ca90 	vmov	ip, s15
90015650:	fb9c fcf4 	sdiv	ip, ip, r4
90015654:	fb0c 3306 	mla	r3, ip, r6, r3
90015658:	9302      	str	r3, [sp, #8]
9001565a:	ee17 3a10 	vmov	r3, s14
9001565e:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90015662:	fb07 3706 	mla	r7, r7, r6, r3
90015666:	eba9 0306 	sub.w	r3, r9, r6
9001566a:	e9cd 4700 	strd	r4, r7, [sp]
9001566e:	f8da 4008 	ldr.w	r4, [sl, #8]
90015672:	47a0      	blx	r4
90015674:	b00d      	add	sp, #52	; 0x34
90015676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001567a:	2500      	movs	r5, #0
9001567c:	462e      	mov	r6, r5
9001567e:	e799      	b.n	900155b4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90015680 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90015680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015684:	b0db      	sub	sp, #364	; 0x16c
90015686:	461d      	mov	r5, r3
90015688:	4614      	mov	r4, r2
9001568a:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
9001568e:	910f      	str	r1, [sp, #60]	; 0x3c
90015690:	4629      	mov	r1, r5
90015692:	930a      	str	r3, [sp, #40]	; 0x28
90015694:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
90015698:	9009      	str	r0, [sp, #36]	; 0x24
9001569a:	930b      	str	r3, [sp, #44]	; 0x2c
9001569c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
900156a0:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
900156a4:	9310      	str	r3, [sp, #64]	; 0x40
900156a6:	6803      	ldr	r3, [r0, #0]
900156a8:	6c5f      	ldr	r7, [r3, #68]	; 0x44
900156aa:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
900156ae:	47b8      	blx	r7
900156b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900156b2:	6058      	str	r0, [r3, #4]
900156b4:	2800      	cmp	r0, #0
900156b6:	f000 83a1 	beq.w	90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900156ba:	682b      	ldr	r3, [r5, #0]
900156bc:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
900156c0:	ed94 7a02 	vldr	s14, [r4, #8]
900156c4:	9314      	str	r3, [sp, #80]	; 0x50
900156c6:	686b      	ldr	r3, [r5, #4]
900156c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
900156cc:	9315      	str	r3, [sp, #84]	; 0x54
900156ce:	4bc1      	ldr	r3, [pc, #772]	; (900159d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
900156d0:	7819      	ldrb	r1, [r3, #0]
900156d2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
900156d6:	2900      	cmp	r1, #0
900156d8:	bf16      	itet	ne
900156da:	4619      	movne	r1, r3
900156dc:	4611      	moveq	r1, r2
900156de:	4613      	movne	r3, r2
900156e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900156e4:	9116      	str	r1, [sp, #88]	; 0x58
900156e6:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
900156ea:	f240 8387 	bls.w	90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900156ee:	ed94 7a07 	vldr	s14, [r4, #28]
900156f2:	eeb4 7ae7 	vcmpe.f32	s14, s15
900156f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900156fa:	f240 837f 	bls.w	90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900156fe:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
90015702:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001570a:	f240 8377 	bls.w	90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001570e:	6822      	ldr	r2, [r4, #0]
90015710:	4bb1      	ldr	r3, [pc, #708]	; (900159d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90015712:	429a      	cmp	r2, r3
90015714:	f2c0 8372 	blt.w	90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015718:	49b0      	ldr	r1, [pc, #704]	; (900159dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
9001571a:	6963      	ldr	r3, [r4, #20]
9001571c:	428a      	cmp	r2, r1
9001571e:	f300 836d 	bgt.w	90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015722:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90015726:	48ae      	ldr	r0, [pc, #696]	; (900159e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90015728:	33ff      	adds	r3, #255	; 0xff
9001572a:	4283      	cmp	r3, r0
9001572c:	f200 8366 	bhi.w	90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015730:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90015732:	4dac      	ldr	r5, [pc, #688]	; (900159e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90015734:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90015738:	33ff      	adds	r3, #255	; 0xff
9001573a:	42ab      	cmp	r3, r5
9001573c:	f200 835e 	bhi.w	90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015740:	6862      	ldr	r2, [r4, #4]
90015742:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
90015746:	33ff      	adds	r3, #255	; 0xff
90015748:	4283      	cmp	r3, r0
9001574a:	f200 8357 	bhi.w	90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001574e:	69a1      	ldr	r1, [r4, #24]
90015750:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
90015754:	33ff      	adds	r3, #255	; 0xff
90015756:	4283      	cmp	r3, r0
90015758:	f200 8350 	bhi.w	90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001575c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001575e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
90015762:	30ff      	adds	r0, #255	; 0xff
90015764:	42a8      	cmp	r0, r5
90015766:	f200 8349 	bhi.w	90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001576a:	428a      	cmp	r2, r1
9001576c:	f280 8110 	bge.w	90015990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90015770:	429a      	cmp	r2, r3
90015772:	f300 8119 	bgt.w	900159a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90015776:	4299      	cmp	r1, r3
90015778:	f280 811d 	bge.w	900159b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
9001577c:	2502      	movs	r5, #2
9001577e:	2701      	movs	r7, #1
90015780:	46a9      	mov	r9, r5
90015782:	46b8      	mov	r8, r7
90015784:	f04f 0a00 	mov.w	sl, #0
90015788:	4621      	mov	r1, r4
9001578a:	a849      	add	r0, sp, #292	; 0x124
9001578c:	f003 fe7c 	bl	90019488 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90015790:	4622      	mov	r2, r4
90015792:	4653      	mov	r3, sl
90015794:	a949      	add	r1, sp, #292	; 0x124
90015796:	f8cd 9000 	str.w	r9, [sp]
9001579a:	a819      	add	r0, sp, #100	; 0x64
9001579c:	f003 ffa4 	bl	900196e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900157a0:	4622      	mov	r2, r4
900157a2:	4653      	mov	r3, sl
900157a4:	a949      	add	r1, sp, #292	; 0x124
900157a6:	f8cd 8000 	str.w	r8, [sp]
900157aa:	a829      	add	r0, sp, #164	; 0xa4
900157ac:	f003 ff9c 	bl	900196e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900157b0:	4643      	mov	r3, r8
900157b2:	4622      	mov	r2, r4
900157b4:	a949      	add	r1, sp, #292	; 0x124
900157b6:	f8cd 9000 	str.w	r9, [sp]
900157ba:	a839      	add	r0, sp, #228	; 0xe4
900157bc:	f003 ff94 	bl	900196e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900157c0:	42af      	cmp	r7, r5
900157c2:	af12      	add	r7, sp, #72	; 0x48
900157c4:	bfb7      	itett	lt
900157c6:	2300      	movlt	r3, #0
900157c8:	2301      	movge	r3, #1
900157ca:	ad29      	addlt	r5, sp, #164	; 0xa4
900157cc:	ac19      	addlt	r4, sp, #100	; 0x64
900157ce:	bfb1      	iteee	lt
900157d0:	930e      	strlt	r3, [sp, #56]	; 0x38
900157d2:	ad19      	addge	r5, sp, #100	; 0x64
900157d4:	930e      	strge	r3, [sp, #56]	; 0x38
900157d6:	ac29      	addge	r4, sp, #164	; 0xa4
900157d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900157da:	e893 0003 	ldmia.w	r3, {r0, r1}
900157de:	e887 0003 	stmia.w	r7, {r0, r1}
900157e2:	b928      	cbnz	r0, 900157f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
900157e4:	4b80      	ldr	r3, [pc, #512]	; (900159e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
900157e6:	6818      	ldr	r0, [r3, #0]
900157e8:	6803      	ldr	r3, [r0, #0]
900157ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900157ec:	4798      	blx	r3
900157ee:	6038      	str	r0, [r7, #0]
900157f0:	9b64      	ldr	r3, [sp, #400]	; 0x190
900157f2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900157f6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900157fa:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
900157fc:	930c      	str	r3, [sp, #48]	; 0x30
900157fe:	990c      	ldr	r1, [sp, #48]	; 0x30
90015800:	6963      	ldr	r3, [r4, #20]
90015802:	440b      	add	r3, r1
90015804:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015808:	4408      	add	r0, r1
9001580a:	b200      	sxth	r0, r0
9001580c:	4283      	cmp	r3, r0
9001580e:	900d      	str	r0, [sp, #52]	; 0x34
90015810:	f280 80dd 	bge.w	900159ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90015814:	428b      	cmp	r3, r1
90015816:	da08      	bge.n	9001582a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015818:	2a00      	cmp	r2, #0
9001581a:	dd06      	ble.n	9001582a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
9001581c:	1acb      	subs	r3, r1, r3
9001581e:	429a      	cmp	r2, r3
90015820:	f2c0 80e4 	blt.w	900159ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90015824:	2b00      	cmp	r3, #0
90015826:	f300 80e2 	bgt.w	900159ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
9001582a:	6967      	ldr	r7, [r4, #20]
9001582c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90015830:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90015832:	443b      	add	r3, r7
90015834:	461f      	mov	r7, r3
90015836:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90015838:	1bdf      	subs	r7, r3, r7
9001583a:	4297      	cmp	r7, r2
9001583c:	bfa8      	it	ge
9001583e:	4617      	movge	r7, r2
90015840:	2f00      	cmp	r7, #0
90015842:	f340 8166 	ble.w	90015b12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90015846:	9b64      	ldr	r3, [sp, #400]	; 0x190
90015848:	6829      	ldr	r1, [r5, #0]
9001584a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001584e:	f9bb 3000 	ldrsh.w	r3, [fp]
90015852:	4411      	add	r1, r2
90015854:	6820      	ldr	r0, [r4, #0]
90015856:	4299      	cmp	r1, r3
90015858:	dd1a      	ble.n	90015890 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
9001585a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
9001585e:	4402      	add	r2, r0
90015860:	440b      	add	r3, r1
90015862:	b21b      	sxth	r3, r3
90015864:	429a      	cmp	r2, r3
90015866:	dc13      	bgt.n	90015890 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015868:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001586a:	a912      	add	r1, sp, #72	; 0x48
9001586c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001586e:	9809      	ldr	r0, [sp, #36]	; 0x24
90015870:	681b      	ldr	r3, [r3, #0]
90015872:	9206      	str	r2, [sp, #24]
90015874:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90015876:	9500      	str	r5, [sp, #0]
90015878:	9205      	str	r2, [sp, #20]
9001587a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001587c:	e9cd b203 	strd	fp, r2, [sp, #12]
90015880:	9a64      	ldr	r2, [sp, #400]	; 0x190
90015882:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015886:	aa49      	add	r2, sp, #292	; 0x124
90015888:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
9001588c:	4623      	mov	r3, r4
9001588e:	47c8      	blx	r9
90015890:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90015894:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90015898:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
9001589c:	ee37 7a27 	vadd.f32	s14, s14, s15
900158a0:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
900158a4:	68a1      	ldr	r1, [r4, #8]
900158a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
900158aa:	ed94 6a08 	vldr	s12, [r4, #32]
900158ae:	edd4 6a07 	vldr	s13, [r4, #28]
900158b2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
900158b6:	ee76 6a86 	vadd.f32	s13, s13, s12
900158ba:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
900158be:	e9d4 2300 	ldrd	r2, r3, [r4]
900158c2:	edc4 6a07 	vstr	s13, [r4, #28]
900158c6:	441a      	add	r2, r3
900158c8:	6963      	ldr	r3, [r4, #20]
900158ca:	3301      	adds	r3, #1
900158cc:	6022      	str	r2, [r4, #0]
900158ce:	6163      	str	r3, [r4, #20]
900158d0:	69a3      	ldr	r3, [r4, #24]
900158d2:	3b01      	subs	r3, #1
900158d4:	61a3      	str	r3, [r4, #24]
900158d6:	6923      	ldr	r3, [r4, #16]
900158d8:	440b      	add	r3, r1
900158da:	68e1      	ldr	r1, [r4, #12]
900158dc:	428b      	cmp	r3, r1
900158de:	6123      	str	r3, [r4, #16]
900158e0:	db15      	blt.n	9001590e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
900158e2:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
900158e6:	3201      	adds	r2, #1
900158e8:	1a5b      	subs	r3, r3, r1
900158ea:	ee76 6a26 	vadd.f32	s13, s12, s13
900158ee:	6022      	str	r2, [r4, #0]
900158f0:	6123      	str	r3, [r4, #16]
900158f2:	edc4 6a07 	vstr	s13, [r4, #28]
900158f6:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
900158fa:	ee36 7a87 	vadd.f32	s14, s13, s14
900158fe:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90015902:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90015906:	ee77 7a27 	vadd.f32	s15, s14, s15
9001590a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
9001590e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90015912:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90015916:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
9001591a:	ee37 7a27 	vadd.f32	s14, s14, s15
9001591e:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90015922:	68a9      	ldr	r1, [r5, #8]
90015924:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015928:	ed95 6a08 	vldr	s12, [r5, #32]
9001592c:	edd5 6a07 	vldr	s13, [r5, #28]
90015930:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90015934:	ee76 6a86 	vadd.f32	s13, s13, s12
90015938:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
9001593c:	e9d5 2300 	ldrd	r2, r3, [r5]
90015940:	edc5 6a07 	vstr	s13, [r5, #28]
90015944:	441a      	add	r2, r3
90015946:	696b      	ldr	r3, [r5, #20]
90015948:	3301      	adds	r3, #1
9001594a:	602a      	str	r2, [r5, #0]
9001594c:	616b      	str	r3, [r5, #20]
9001594e:	69ab      	ldr	r3, [r5, #24]
90015950:	3b01      	subs	r3, #1
90015952:	61ab      	str	r3, [r5, #24]
90015954:	692b      	ldr	r3, [r5, #16]
90015956:	440b      	add	r3, r1
90015958:	68e9      	ldr	r1, [r5, #12]
9001595a:	428b      	cmp	r3, r1
9001595c:	612b      	str	r3, [r5, #16]
9001595e:	db15      	blt.n	9001598c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90015960:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90015964:	3201      	adds	r2, #1
90015966:	1a5b      	subs	r3, r3, r1
90015968:	ee76 6a26 	vadd.f32	s13, s12, s13
9001596c:	602a      	str	r2, [r5, #0]
9001596e:	612b      	str	r3, [r5, #16]
90015970:	edc5 6a07 	vstr	s13, [r5, #28]
90015974:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90015978:	ee36 7a87 	vadd.f32	s14, s13, s14
9001597c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90015980:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90015984:	ee77 7a27 	vadd.f32	s15, s14, s15
90015988:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
9001598c:	3f01      	subs	r7, #1
9001598e:	e757      	b.n	90015840 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90015990:	4299      	cmp	r1, r3
90015992:	dc13      	bgt.n	900159bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90015994:	429a      	cmp	r2, r3
90015996:	da14      	bge.n	900159c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90015998:	2502      	movs	r5, #2
9001599a:	2703      	movs	r7, #3
9001599c:	f04f 0800 	mov.w	r8, #0
900159a0:	46a9      	mov	r9, r5
900159a2:	f04f 0a01 	mov.w	sl, #1
900159a6:	e6ef      	b.n	90015788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
900159a8:	2501      	movs	r5, #1
900159aa:	2700      	movs	r7, #0
900159ac:	46a9      	mov	r9, r5
900159ae:	46b8      	mov	r8, r7
900159b0:	f04f 0a02 	mov.w	sl, #2
900159b4:	e6e8      	b.n	90015788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
900159b6:	2501      	movs	r5, #1
900159b8:	2702      	movs	r7, #2
900159ba:	e6e1      	b.n	90015780 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
900159bc:	2500      	movs	r5, #0
900159be:	2701      	movs	r7, #1
900159c0:	e7f4      	b.n	900159ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
900159c2:	2702      	movs	r7, #2
900159c4:	2503      	movs	r5, #3
900159c6:	f04f 0900 	mov.w	r9, #0
900159ca:	46b8      	mov	r8, r7
900159cc:	e7e9      	b.n	900159a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
900159ce:	4613      	mov	r3, r2
900159d0:	e728      	b.n	90015824 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
900159d2:	bf00      	nop
900159d4:	24039894 	.word	0x24039894
900159d8:	fffd8f01 	.word	0xfffd8f01
900159dc:	00027100 	.word	0x00027100
900159e0:	0004e1ff 	.word	0x0004e1ff
900159e4:	0004e1fe 	.word	0x0004e1fe
900159e8:	2403989c 	.word	0x2403989c
900159ec:	4613      	mov	r3, r2
900159ee:	992b      	ldr	r1, [sp, #172]	; 0xac
900159f0:	469e      	mov	lr, r3
900159f2:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
900159f4:	469c      	mov	ip, r3
900159f6:	9111      	str	r1, [sp, #68]	; 0x44
900159f8:	f04f 0900 	mov.w	r9, #0
900159fc:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
90015a00:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
90015a04:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
90015a08:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
90015a0c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
90015a10:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
90015a14:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
90015a18:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
90015a1c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
90015a20:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
90015a24:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
90015a28:	f1bc 0f00 	cmp.w	ip, #0
90015a2c:	d147      	bne.n	90015abe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90015a2e:	eb03 0c07 	add.w	ip, r3, r7
90015a32:	1ad7      	subs	r7, r2, r3
90015a34:	f1b9 0f00 	cmp.w	r9, #0
90015a38:	d009      	beq.n	90015a4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90015a3a:	9029      	str	r0, [sp, #164]	; 0xa4
90015a3c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
90015a40:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
90015a44:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
90015a48:	912d      	str	r1, [sp, #180]	; 0xb4
90015a4a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
90015a4e:	991b      	ldr	r1, [sp, #108]	; 0x6c
90015a50:	f04f 0800 	mov.w	r8, #0
90015a54:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90015a58:	9111      	str	r1, [sp, #68]	; 0x44
90015a5a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90015a5e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90015a62:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90015a66:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90015a6a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90015a6e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90015a72:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90015a76:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90015a7a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90015a7e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90015a82:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90015a86:	f1be 0f00 	cmp.w	lr, #0
90015a8a:	d031      	beq.n	90015af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90015a8c:	9e11      	ldr	r6, [sp, #68]	; 0x44
90015a8e:	4450      	add	r0, sl
90015a90:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015a94:	4431      	add	r1, r6
90015a96:	ee37 7a04 	vadd.f32	s14, s14, s8
90015a9a:	ee77 7aa3 	vadd.f32	s15, s15, s7
90015a9e:	4549      	cmp	r1, r9
90015aa0:	db08      	blt.n	90015ab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90015aa2:	ee77 7a85 	vadd.f32	s15, s15, s10
90015aa6:	3001      	adds	r0, #1
90015aa8:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015aac:	eba1 0109 	sub.w	r1, r1, r9
90015ab0:	ee37 7a06 	vadd.f32	s14, s14, s12
90015ab4:	f10e 3eff 	add.w	lr, lr, #4294967295
90015ab8:	f04f 0801 	mov.w	r8, #1
90015abc:	e7e3      	b.n	90015a86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90015abe:	9e11      	ldr	r6, [sp, #68]	; 0x44
90015ac0:	4450      	add	r0, sl
90015ac2:	ee37 7a24 	vadd.f32	s14, s14, s9
90015ac6:	4431      	add	r1, r6
90015ac8:	ee77 7a84 	vadd.f32	s15, s15, s8
90015acc:	ee76 6aa3 	vadd.f32	s13, s13, s7
90015ad0:	4541      	cmp	r1, r8
90015ad2:	db08      	blt.n	90015ae6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90015ad4:	ee76 6a85 	vadd.f32	s13, s13, s10
90015ad8:	3001      	adds	r0, #1
90015ada:	ee37 7a25 	vadd.f32	s14, s14, s11
90015ade:	eba1 0108 	sub.w	r1, r1, r8
90015ae2:	ee77 7a86 	vadd.f32	s15, s15, s12
90015ae6:	f10c 3cff 	add.w	ip, ip, #4294967295
90015aea:	f04f 0901 	mov.w	r9, #1
90015aee:	e79b      	b.n	90015a28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90015af0:	449c      	add	ip, r3
90015af2:	1aff      	subs	r7, r7, r3
90015af4:	f1b8 0f00 	cmp.w	r8, #0
90015af8:	d009      	beq.n	90015b0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90015afa:	9019      	str	r0, [sp, #100]	; 0x64
90015afc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90015b00:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90015b04:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90015b08:	911d      	str	r1, [sp, #116]	; 0x74
90015b0a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90015b0e:	1ad2      	subs	r2, r2, r3
90015b10:	e68b      	b.n	9001582a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015b12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90015b14:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
90015b16:	2b00      	cmp	r3, #0
90015b18:	f000 80d1 	beq.w	90015cbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90015b1c:	ad19      	add	r5, sp, #100	; 0x64
90015b1e:	ac39      	add	r4, sp, #228	; 0xe4
90015b20:	9b64      	ldr	r3, [sp, #400]	; 0x190
90015b22:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90015b26:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90015b2a:	930c      	str	r3, [sp, #48]	; 0x30
90015b2c:	990c      	ldr	r1, [sp, #48]	; 0x30
90015b2e:	6963      	ldr	r3, [r4, #20]
90015b30:	440b      	add	r3, r1
90015b32:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015b36:	4408      	add	r0, r1
90015b38:	b200      	sxth	r0, r0
90015b3a:	4283      	cmp	r3, r0
90015b3c:	900d      	str	r0, [sp, #52]	; 0x34
90015b3e:	f280 80c1 	bge.w	90015cc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90015b42:	428b      	cmp	r3, r1
90015b44:	da08      	bge.n	90015b58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015b46:	2a00      	cmp	r2, #0
90015b48:	dd06      	ble.n	90015b58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015b4a:	1acb      	subs	r3, r1, r3
90015b4c:	429a      	cmp	r2, r3
90015b4e:	f2c0 80bb 	blt.w	90015cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90015b52:	2b00      	cmp	r3, #0
90015b54:	f300 80b9 	bgt.w	90015cca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90015b58:	6967      	ldr	r7, [r4, #20]
90015b5a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90015b5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90015b60:	443b      	add	r3, r7
90015b62:	461f      	mov	r7, r3
90015b64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90015b66:	1bdf      	subs	r7, r3, r7
90015b68:	4297      	cmp	r7, r2
90015b6a:	bfa8      	it	ge
90015b6c:	4617      	movge	r7, r2
90015b6e:	2f00      	cmp	r7, #0
90015b70:	f340 813c 	ble.w	90015dec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90015b74:	9b64      	ldr	r3, [sp, #400]	; 0x190
90015b76:	6829      	ldr	r1, [r5, #0]
90015b78:	f9b3 2000 	ldrsh.w	r2, [r3]
90015b7c:	f9bb 3000 	ldrsh.w	r3, [fp]
90015b80:	4411      	add	r1, r2
90015b82:	6820      	ldr	r0, [r4, #0]
90015b84:	4299      	cmp	r1, r3
90015b86:	dd1a      	ble.n	90015bbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015b88:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015b8c:	4402      	add	r2, r0
90015b8e:	440b      	add	r3, r1
90015b90:	b21b      	sxth	r3, r3
90015b92:	429a      	cmp	r2, r3
90015b94:	dc13      	bgt.n	90015bbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015b96:	9a10      	ldr	r2, [sp, #64]	; 0x40
90015b98:	a912      	add	r1, sp, #72	; 0x48
90015b9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
90015b9c:	9809      	ldr	r0, [sp, #36]	; 0x24
90015b9e:	681b      	ldr	r3, [r3, #0]
90015ba0:	9206      	str	r2, [sp, #24]
90015ba2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90015ba4:	9500      	str	r5, [sp, #0]
90015ba6:	9205      	str	r2, [sp, #20]
90015ba8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90015baa:	e9cd b203 	strd	fp, r2, [sp, #12]
90015bae:	9a64      	ldr	r2, [sp, #400]	; 0x190
90015bb0:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015bb4:	aa49      	add	r2, sp, #292	; 0x124
90015bb6:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90015bba:	4623      	mov	r3, r4
90015bbc:	47c8      	blx	r9
90015bbe:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90015bc2:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90015bc6:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90015bca:	ee37 7a27 	vadd.f32	s14, s14, s15
90015bce:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90015bd2:	68a1      	ldr	r1, [r4, #8]
90015bd4:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015bd8:	ed94 6a08 	vldr	s12, [r4, #32]
90015bdc:	edd4 6a07 	vldr	s13, [r4, #28]
90015be0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90015be4:	ee76 6a86 	vadd.f32	s13, s13, s12
90015be8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90015bec:	e9d4 2300 	ldrd	r2, r3, [r4]
90015bf0:	edc4 6a07 	vstr	s13, [r4, #28]
90015bf4:	441a      	add	r2, r3
90015bf6:	6963      	ldr	r3, [r4, #20]
90015bf8:	3301      	adds	r3, #1
90015bfa:	6022      	str	r2, [r4, #0]
90015bfc:	6163      	str	r3, [r4, #20]
90015bfe:	69a3      	ldr	r3, [r4, #24]
90015c00:	3b01      	subs	r3, #1
90015c02:	61a3      	str	r3, [r4, #24]
90015c04:	6923      	ldr	r3, [r4, #16]
90015c06:	440b      	add	r3, r1
90015c08:	68e1      	ldr	r1, [r4, #12]
90015c0a:	428b      	cmp	r3, r1
90015c0c:	6123      	str	r3, [r4, #16]
90015c0e:	db15      	blt.n	90015c3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90015c10:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90015c14:	3201      	adds	r2, #1
90015c16:	1a5b      	subs	r3, r3, r1
90015c18:	ee76 6a26 	vadd.f32	s13, s12, s13
90015c1c:	6022      	str	r2, [r4, #0]
90015c1e:	6123      	str	r3, [r4, #16]
90015c20:	edc4 6a07 	vstr	s13, [r4, #28]
90015c24:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90015c28:	ee36 7a87 	vadd.f32	s14, s13, s14
90015c2c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90015c30:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90015c34:	ee77 7a27 	vadd.f32	s15, s14, s15
90015c38:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90015c3c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90015c40:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90015c44:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90015c48:	ee37 7a27 	vadd.f32	s14, s14, s15
90015c4c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90015c50:	68a9      	ldr	r1, [r5, #8]
90015c52:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015c56:	ed95 6a08 	vldr	s12, [r5, #32]
90015c5a:	edd5 6a07 	vldr	s13, [r5, #28]
90015c5e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90015c62:	ee76 6a86 	vadd.f32	s13, s13, s12
90015c66:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90015c6a:	e9d5 2300 	ldrd	r2, r3, [r5]
90015c6e:	edc5 6a07 	vstr	s13, [r5, #28]
90015c72:	441a      	add	r2, r3
90015c74:	696b      	ldr	r3, [r5, #20]
90015c76:	3301      	adds	r3, #1
90015c78:	602a      	str	r2, [r5, #0]
90015c7a:	616b      	str	r3, [r5, #20]
90015c7c:	69ab      	ldr	r3, [r5, #24]
90015c7e:	3b01      	subs	r3, #1
90015c80:	61ab      	str	r3, [r5, #24]
90015c82:	692b      	ldr	r3, [r5, #16]
90015c84:	440b      	add	r3, r1
90015c86:	68e9      	ldr	r1, [r5, #12]
90015c88:	428b      	cmp	r3, r1
90015c8a:	612b      	str	r3, [r5, #16]
90015c8c:	db15      	blt.n	90015cba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90015c8e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90015c92:	3201      	adds	r2, #1
90015c94:	1a5b      	subs	r3, r3, r1
90015c96:	ee76 6a26 	vadd.f32	s13, s12, s13
90015c9a:	602a      	str	r2, [r5, #0]
90015c9c:	612b      	str	r3, [r5, #16]
90015c9e:	edc5 6a07 	vstr	s13, [r5, #28]
90015ca2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90015ca6:	ee36 7a87 	vadd.f32	s14, s13, s14
90015caa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90015cae:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90015cb2:	ee77 7a27 	vadd.f32	s15, s14, s15
90015cb6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90015cba:	3f01      	subs	r7, #1
90015cbc:	e757      	b.n	90015b6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90015cbe:	ad39      	add	r5, sp, #228	; 0xe4
90015cc0:	ac19      	add	r4, sp, #100	; 0x64
90015cc2:	e72d      	b.n	90015b20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90015cc4:	4613      	mov	r3, r2
90015cc6:	e744      	b.n	90015b52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90015cc8:	4613      	mov	r3, r2
90015cca:	9e3b      	ldr	r6, [sp, #236]	; 0xec
90015ccc:	469e      	mov	lr, r3
90015cce:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
90015cd2:	461f      	mov	r7, r3
90015cd4:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
90015cd8:	f04f 0900 	mov.w	r9, #0
90015cdc:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
90015ce0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
90015ce4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
90015ce8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
90015cec:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
90015cf0:	993d      	ldr	r1, [sp, #244]	; 0xf4
90015cf2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
90015cf6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
90015cfa:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
90015cfe:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
90015d02:	960e      	str	r6, [sp, #56]	; 0x38
90015d04:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
90015d08:	2f00      	cmp	r7, #0
90015d0a:	d146      	bne.n	90015d9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90015d0c:	449c      	add	ip, r3
90015d0e:	1ad7      	subs	r7, r2, r3
90015d10:	f1b9 0f00 	cmp.w	r9, #0
90015d14:	d009      	beq.n	90015d2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90015d16:	9039      	str	r0, [sp, #228]	; 0xe4
90015d18:	913d      	str	r1, [sp, #244]	; 0xf4
90015d1a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
90015d1e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
90015d22:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
90015d26:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
90015d2a:	991b      	ldr	r1, [sp, #108]	; 0x6c
90015d2c:	f04f 0800 	mov.w	r8, #0
90015d30:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90015d34:	910e      	str	r1, [sp, #56]	; 0x38
90015d36:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90015d3a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90015d3e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90015d42:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90015d46:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90015d4a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90015d4e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90015d52:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90015d56:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90015d5a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90015d5e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90015d62:	f1be 0f00 	cmp.w	lr, #0
90015d66:	d030      	beq.n	90015dca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90015d68:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90015d6a:	4450      	add	r0, sl
90015d6c:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015d70:	4431      	add	r1, r6
90015d72:	ee37 7a04 	vadd.f32	s14, s14, s8
90015d76:	ee77 7aa3 	vadd.f32	s15, s15, s7
90015d7a:	4549      	cmp	r1, r9
90015d7c:	db08      	blt.n	90015d90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90015d7e:	ee77 7a85 	vadd.f32	s15, s15, s10
90015d82:	3001      	adds	r0, #1
90015d84:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015d88:	eba1 0109 	sub.w	r1, r1, r9
90015d8c:	ee37 7a06 	vadd.f32	s14, s14, s12
90015d90:	f10e 3eff 	add.w	lr, lr, #4294967295
90015d94:	f04f 0801 	mov.w	r8, #1
90015d98:	e7e3      	b.n	90015d62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90015d9a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90015d9c:	4450      	add	r0, sl
90015d9e:	ee37 7a24 	vadd.f32	s14, s14, s9
90015da2:	4431      	add	r1, r6
90015da4:	ee77 7a84 	vadd.f32	s15, s15, s8
90015da8:	ee76 6aa3 	vadd.f32	s13, s13, s7
90015dac:	4541      	cmp	r1, r8
90015dae:	db08      	blt.n	90015dc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90015db0:	ee76 6a85 	vadd.f32	s13, s13, s10
90015db4:	3001      	adds	r0, #1
90015db6:	ee37 7a25 	vadd.f32	s14, s14, s11
90015dba:	eba1 0108 	sub.w	r1, r1, r8
90015dbe:	ee77 7a86 	vadd.f32	s15, s15, s12
90015dc2:	3f01      	subs	r7, #1
90015dc4:	f04f 0901 	mov.w	r9, #1
90015dc8:	e79e      	b.n	90015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90015dca:	449c      	add	ip, r3
90015dcc:	1aff      	subs	r7, r7, r3
90015dce:	f1b8 0f00 	cmp.w	r8, #0
90015dd2:	d009      	beq.n	90015de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90015dd4:	9019      	str	r0, [sp, #100]	; 0x64
90015dd6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90015dda:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90015dde:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90015de2:	911d      	str	r1, [sp, #116]	; 0x74
90015de4:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90015de8:	1ad2      	subs	r2, r2, r3
90015dea:	e6b5      	b.n	90015b58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015dec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90015dee:	681b      	ldr	r3, [r3, #0]
90015df0:	b923      	cbnz	r3, 90015dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015df2:	4b04      	ldr	r3, [pc, #16]	; (90015e04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90015df4:	6818      	ldr	r0, [r3, #0]
90015df6:	6803      	ldr	r3, [r0, #0]
90015df8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015dfa:	4798      	blx	r3
90015dfc:	b05b      	add	sp, #364	; 0x16c
90015dfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015e02:	bf00      	nop
90015e04:	2403989c 	.word	0x2403989c

90015e08 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90015e08:	b570      	push	{r4, r5, r6, lr}
90015e0a:	4604      	mov	r4, r0
90015e0c:	2500      	movs	r5, #0
90015e0e:	9805      	ldr	r0, [sp, #20]
90015e10:	f89d 601c 	ldrb.w	r6, [sp, #28]
90015e14:	6061      	str	r1, [r4, #4]
90015e16:	8263      	strh	r3, [r4, #18]
90015e18:	f89d 1010 	ldrb.w	r1, [sp, #16]
90015e1c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90015e20:	8025      	strh	r5, [r4, #0]
90015e22:	7221      	strb	r1, [r4, #8]
90015e24:	7266      	strb	r6, [r4, #9]
90015e26:	60e0      	str	r0, [r4, #12]
90015e28:	8222      	strh	r2, [r4, #16]
90015e2a:	82a3      	strh	r3, [r4, #20]
90015e2c:	82e5      	strh	r5, [r4, #22]
90015e2e:	8325      	strh	r5, [r4, #24]
90015e30:	8365      	strh	r5, [r4, #26]
90015e32:	83a5      	strh	r5, [r4, #28]
90015e34:	83e5      	strh	r5, [r4, #30]
90015e36:	8425      	strh	r5, [r4, #32]
90015e38:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
90015e3c:	b32e      	cbz	r6, 90015e8a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015e3e:	6803      	ldr	r3, [r0, #0]
90015e40:	695b      	ldr	r3, [r3, #20]
90015e42:	4798      	blx	r3
90015e44:	4606      	mov	r6, r0
90015e46:	b300      	cbz	r0, 90015e8a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015e48:	68e0      	ldr	r0, [r4, #12]
90015e4a:	4631      	mov	r1, r6
90015e4c:	6803      	ldr	r3, [r0, #0]
90015e4e:	68db      	ldr	r3, [r3, #12]
90015e50:	4798      	blx	r3
90015e52:	4605      	mov	r5, r0
90015e54:	b1c8      	cbz	r0, 90015e8a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015e56:	7b43      	ldrb	r3, [r0, #13]
90015e58:	7a82      	ldrb	r2, [r0, #10]
90015e5a:	005b      	lsls	r3, r3, #1
90015e5c:	f403 7380 	and.w	r3, r3, #256	; 0x100
90015e60:	4313      	orrs	r3, r2
90015e62:	8423      	strh	r3, [r4, #32]
90015e64:	7a63      	ldrb	r3, [r4, #9]
90015e66:	2b06      	cmp	r3, #6
90015e68:	d10f      	bne.n	90015e8a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015e6a:	68e0      	ldr	r0, [r4, #12]
90015e6c:	462a      	mov	r2, r5
90015e6e:	4631      	mov	r1, r6
90015e70:	6803      	ldr	r3, [r0, #0]
90015e72:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015e74:	4798      	blx	r3
90015e76:	7b6b      	ldrb	r3, [r5, #13]
90015e78:	005b      	lsls	r3, r3, #1
90015e7a:	f403 7280 	and.w	r2, r3, #256	; 0x100
90015e7e:	7aab      	ldrb	r3, [r5, #10]
90015e80:	4313      	orrs	r3, r2
90015e82:	4418      	add	r0, r3
90015e84:	8c23      	ldrh	r3, [r4, #32]
90015e86:	4418      	add	r0, r3
90015e88:	8420      	strh	r0, [r4, #32]
90015e8a:	4620      	mov	r0, r4
90015e8c:	bd70      	pop	{r4, r5, r6, pc}

90015e8e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90015e8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015e92:	2400      	movs	r4, #0
90015e94:	b085      	sub	sp, #20
90015e96:	4681      	mov	r9, r0
90015e98:	4688      	mov	r8, r1
90015e9a:	4692      	mov	sl, r2
90015e9c:	469b      	mov	fp, r3
90015e9e:	4627      	mov	r7, r4
90015ea0:	4625      	mov	r5, r4
90015ea2:	4626      	mov	r6, r4
90015ea4:	4554      	cmp	r4, sl
90015ea6:	da2a      	bge.n	90015efe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90015ea8:	2300      	movs	r3, #0
90015eaa:	9303      	str	r3, [sp, #12]
90015eac:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015eb0:	429d      	cmp	r5, r3
90015eb2:	d004      	beq.n	90015ebe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90015eb4:	f242 030b 	movw	r3, #8203	; 0x200b
90015eb8:	429d      	cmp	r5, r3
90015eba:	bf18      	it	ne
90015ebc:	462f      	movne	r7, r5
90015ebe:	ab03      	add	r3, sp, #12
90015ec0:	4642      	mov	r2, r8
90015ec2:	4659      	mov	r1, fp
90015ec4:	4648      	mov	r0, r9
90015ec6:	f003 f8f5 	bl	900190b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015eca:	4605      	mov	r5, r0
90015ecc:	b1b8      	cbz	r0, 90015efe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90015ece:	280a      	cmp	r0, #10
90015ed0:	d015      	beq.n	90015efe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90015ed2:	9a03      	ldr	r2, [sp, #12]
90015ed4:	b18a      	cbz	r2, 90015efa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90015ed6:	7b50      	ldrb	r0, [r2, #13]
90015ed8:	4639      	mov	r1, r7
90015eda:	7a93      	ldrb	r3, [r2, #10]
90015edc:	0040      	lsls	r0, r0, #1
90015ede:	8895      	ldrh	r5, [r2, #4]
90015ee0:	f400 7080 	and.w	r0, r0, #256	; 0x100
90015ee4:	4303      	orrs	r3, r0
90015ee6:	4640      	mov	r0, r8
90015ee8:	9301      	str	r3, [sp, #4]
90015eea:	f8d8 3000 	ldr.w	r3, [r8]
90015eee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015ef0:	4798      	blx	r3
90015ef2:	9b01      	ldr	r3, [sp, #4]
90015ef4:	4418      	add	r0, r3
90015ef6:	4406      	add	r6, r0
90015ef8:	b2b6      	uxth	r6, r6
90015efa:	3401      	adds	r4, #1
90015efc:	e7d2      	b.n	90015ea4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
90015efe:	4630      	mov	r0, r6
90015f00:	b005      	add	sp, #20
90015f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90015f06 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90015f06:	2a02      	cmp	r2, #2
90015f08:	b530      	push	{r4, r5, lr}
90015f0a:	d011      	beq.n	90015f30 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90015f0c:	2a03      	cmp	r2, #3
90015f0e:	d01c      	beq.n	90015f4a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90015f10:	2a01      	cmp	r2, #1
90015f12:	d10c      	bne.n	90015f2e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90015f14:	888b      	ldrh	r3, [r1, #4]
90015f16:	8801      	ldrh	r1, [r0, #0]
90015f18:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90015f1c:	1a5b      	subs	r3, r3, r1
90015f1e:	8844      	ldrh	r4, [r0, #2]
90015f20:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90015f24:	1a9b      	subs	r3, r3, r2
90015f26:	8004      	strh	r4, [r0, #0]
90015f28:	8081      	strh	r1, [r0, #4]
90015f2a:	8043      	strh	r3, [r0, #2]
90015f2c:	80c2      	strh	r2, [r0, #6]
90015f2e:	bd30      	pop	{r4, r5, pc}
90015f30:	88cb      	ldrh	r3, [r1, #6]
90015f32:	8842      	ldrh	r2, [r0, #2]
90015f34:	1a9b      	subs	r3, r3, r2
90015f36:	88c2      	ldrh	r2, [r0, #6]
90015f38:	1a9b      	subs	r3, r3, r2
90015f3a:	888a      	ldrh	r2, [r1, #4]
90015f3c:	8801      	ldrh	r1, [r0, #0]
90015f3e:	8043      	strh	r3, [r0, #2]
90015f40:	1a52      	subs	r2, r2, r1
90015f42:	8881      	ldrh	r1, [r0, #4]
90015f44:	1a52      	subs	r2, r2, r1
90015f46:	8002      	strh	r2, [r0, #0]
90015f48:	e7f1      	b.n	90015f2e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90015f4a:	88cb      	ldrh	r3, [r1, #6]
90015f4c:	8841      	ldrh	r1, [r0, #2]
90015f4e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90015f52:	1a5b      	subs	r3, r3, r1
90015f54:	f9b0 5000 	ldrsh.w	r5, [r0]
90015f58:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90015f5c:	1a9b      	subs	r3, r3, r2
90015f5e:	8045      	strh	r5, [r0, #2]
90015f60:	8082      	strh	r2, [r0, #4]
90015f62:	8003      	strh	r3, [r0, #0]
90015f64:	80c4      	strh	r4, [r0, #6]
90015f66:	e7e2      	b.n	90015f2e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90015f68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90015f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015f6c:	b09f      	sub	sp, #124	; 0x7c
90015f6e:	9116      	str	r1, [sp, #88]	; 0x58
90015f70:	9317      	str	r3, [sp, #92]	; 0x5c
90015f72:	9929      	ldr	r1, [sp, #164]	; 0xa4
90015f74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90015f76:	8809      	ldrh	r1, [r1, #0]
90015f78:	889b      	ldrh	r3, [r3, #4]
90015f7a:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
90015f7e:	440b      	add	r3, r1
90015f80:	9212      	str	r2, [sp, #72]	; 0x48
90015f82:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
90015f86:	b21b      	sxth	r3, r3
90015f88:	9011      	str	r0, [sp, #68]	; 0x44
90015f8a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
90015f8e:	9310      	str	r3, [sp, #64]	; 0x40
90015f90:	f8d8 3000 	ldr.w	r3, [r8]
90015f94:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
90015f98:	7b19      	ldrb	r1, [r3, #12]
90015f9a:	7adb      	ldrb	r3, [r3, #11]
90015f9c:	9114      	str	r1, [sp, #80]	; 0x50
90015f9e:	9315      	str	r3, [sp, #84]	; 0x54
90015fa0:	2a00      	cmp	r2, #0
90015fa2:	d06a      	beq.n	9001607a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90015fa4:	f898 3010 	ldrb.w	r3, [r8, #16]
90015fa8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90015faa:	2b06      	cmp	r3, #6
90015fac:	bf14      	ite	ne
90015fae:	2301      	movne	r3, #1
90015fb0:	2302      	moveq	r3, #2
90015fb2:	4413      	add	r3, r2
90015fb4:	f04f 0900 	mov.w	r9, #0
90015fb8:	930f      	str	r3, [sp, #60]	; 0x3c
90015fba:	464c      	mov	r4, r9
90015fbc:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
90015fc0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
90015fc4:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
90015fc8:	4293      	cmp	r3, r2
90015fca:	f280 808f 	bge.w	900160ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
90015fce:	2300      	movs	r3, #0
90015fd0:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
90015fd4:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
90015fd8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015fdc:	429c      	cmp	r4, r3
90015fde:	d006      	beq.n	90015fee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
90015fe0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90015fe2:	f242 020b 	movw	r2, #8203	; 0x200b
90015fe6:	4294      	cmp	r4, r2
90015fe8:	bf18      	it	ne
90015fea:	4623      	movne	r3, r4
90015fec:	930d      	str	r3, [sp, #52]	; 0x34
90015fee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90015ff0:	992d      	ldr	r1, [sp, #180]	; 0xb4
90015ff2:	f8d8 2000 	ldr.w	r2, [r8]
90015ff6:	428b      	cmp	r3, r1
90015ff8:	db41      	blt.n	9001607e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90015ffa:	6813      	ldr	r3, [r2, #0]
90015ffc:	4610      	mov	r0, r2
90015ffe:	695b      	ldr	r3, [r3, #20]
90016000:	4798      	blx	r3
90016002:	4604      	mov	r4, r0
90016004:	f8d8 0000 	ldr.w	r0, [r8]
90016008:	aa1d      	add	r2, sp, #116	; 0x74
9001600a:	4621      	mov	r1, r4
9001600c:	6803      	ldr	r3, [r0, #0]
9001600e:	689d      	ldr	r5, [r3, #8]
90016010:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90016014:	47a8      	blx	r5
90016016:	901c      	str	r0, [sp, #112]	; 0x70
90016018:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001601c:	429c      	cmp	r4, r3
9001601e:	f000 80ec 	beq.w	900161fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90016022:	f242 030b 	movw	r3, #8203	; 0x200b
90016026:	429c      	cmp	r4, r3
90016028:	f000 80e7 	beq.w	900161fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001602c:	2c00      	cmp	r4, #0
9001602e:	f000 80f9 	beq.w	90016224 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
90016032:	2c0a      	cmp	r4, #10
90016034:	d060      	beq.n	900160f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
90016036:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90016038:	b36a      	cbz	r2, 90016096 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
9001603a:	8894      	ldrh	r4, [r2, #4]
9001603c:	f1bb 0f00 	cmp.w	fp, #0
90016040:	d03b      	beq.n	900160ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90016042:	f892 900d 	ldrb.w	r9, [r2, #13]
90016046:	f1bb 0f01 	cmp.w	fp, #1
9001604a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001604e:	f409 7380 	and.w	r3, r9, #256	; 0x100
90016052:	f892 900a 	ldrb.w	r9, [r2, #10]
90016056:	ea49 0903 	orr.w	r9, r9, r3
9001605a:	d134      	bne.n	900160c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
9001605c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001605e:	eba6 0609 	sub.w	r6, r6, r9
90016062:	2b00      	cmp	r3, #0
90016064:	d14f      	bne.n	90016106 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90016066:	9a14      	ldr	r2, [sp, #80]	; 0x50
90016068:	eb09 0306 	add.w	r3, r9, r6
9001606c:	4413      	add	r3, r2
9001606e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90016070:	f9b2 2000 	ldrsh.w	r2, [r2]
90016074:	4293      	cmp	r3, r2
90016076:	da51      	bge.n	9001611c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
90016078:	e038      	b.n	900160ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
9001607a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001607c:	e79a      	b.n	90015fb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
9001607e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90016082:	4659      	mov	r1, fp
90016084:	982c      	ldr	r0, [sp, #176]	; 0xb0
90016086:	9301      	str	r3, [sp, #4]
90016088:	ab1d      	add	r3, sp, #116	; 0x74
9001608a:	9300      	str	r3, [sp, #0]
9001608c:	ab1c      	add	r3, sp, #112	; 0x70
9001608e:	f003 f85a 	bl	90019146 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90016092:	4604      	mov	r4, r0
90016094:	e7c0      	b.n	90016018 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90016096:	f8d8 0000 	ldr.w	r0, [r8]
9001609a:	6803      	ldr	r3, [r0, #0]
9001609c:	691b      	ldr	r3, [r3, #16]
9001609e:	4798      	blx	r3
900160a0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900160a4:	4298      	cmp	r0, r3
900160a6:	f000 80a8 	beq.w	900161fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900160aa:	f242 030b 	movw	r3, #8203	; 0x200b
900160ae:	4298      	cmp	r0, r3
900160b0:	f000 80a3 	beq.w	900161fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900160b4:	f1bb 0f00 	cmp.w	fp, #0
900160b8:	d100      	bne.n	900160bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
900160ba:	444e      	add	r6, r9
900160bc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
900160be:	2a00      	cmp	r2, #0
900160c0:	d1bf      	bne.n	90016042 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
900160c2:	4691      	mov	r9, r2
900160c4:	e099      	b.n	900161fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900160c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900160c8:	2b00      	cmp	r3, #0
900160ca:	f000 80ad 	beq.w	90016228 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
900160ce:	f1bb 0f00 	cmp.w	fp, #0
900160d2:	d118      	bne.n	90016106 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
900160d4:	f8d8 0000 	ldr.w	r0, [r8]
900160d8:	990d      	ldr	r1, [sp, #52]	; 0x34
900160da:	6803      	ldr	r3, [r0, #0]
900160dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900160de:	4798      	blx	r3
900160e0:	4406      	add	r6, r0
900160e2:	9b15      	ldr	r3, [sp, #84]	; 0x54
900160e4:	9a10      	ldr	r2, [sp, #64]	; 0x40
900160e6:	1af3      	subs	r3, r6, r3
900160e8:	4293      	cmp	r3, r2
900160ea:	dd17      	ble.n	9001611c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
900160ec:	2c00      	cmp	r4, #0
900160ee:	f000 8099 	beq.w	90016224 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
900160f2:	2c0a      	cmp	r4, #10
900160f4:	f040 8087 	bne.w	90016206 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
900160f8:	240a      	movs	r4, #10
900160fa:	fab4 f084 	clz	r0, r4
900160fe:	0940      	lsrs	r0, r0, #5
90016100:	b01f      	add	sp, #124	; 0x7c
90016102:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016106:	f8d8 0000 	ldr.w	r0, [r8]
9001610a:	990d      	ldr	r1, [sp, #52]	; 0x34
9001610c:	6803      	ldr	r3, [r0, #0]
9001610e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90016110:	4798      	blx	r3
90016112:	f1bb 0f01 	cmp.w	fp, #1
90016116:	eba6 0600 	sub.w	r6, r6, r0
9001611a:	d0a4      	beq.n	90016066 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
9001611c:	981c      	ldr	r0, [sp, #112]	; 0x70
9001611e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90016120:	f990 1009 	ldrsb.w	r1, [r0, #9]
90016124:	f9b3 7000 	ldrsh.w	r7, [r3]
90016128:	7b43      	ldrb	r3, [r0, #13]
9001612a:	4431      	add	r1, r6
9001612c:	015b      	lsls	r3, r3, #5
9001612e:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016132:	7983      	ldrb	r3, [r0, #6]
90016134:	4313      	orrs	r3, r2
90016136:	440b      	add	r3, r1
90016138:	42bb      	cmp	r3, r7
9001613a:	db5e      	blt.n	900161fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001613c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001613e:	4299      	cmp	r1, r3
90016140:	da5b      	bge.n	900161fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90016142:	f8d8 0000 	ldr.w	r0, [r8]
90016146:	42b7      	cmp	r7, r6
90016148:	6803      	ldr	r3, [r0, #0]
9001614a:	bfcc      	ite	gt
9001614c:	1bbf      	subgt	r7, r7, r6
9001614e:	2700      	movle	r7, #0
90016150:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90016152:	bfc8      	it	gt
90016154:	b2bf      	uxthgt	r7, r7
90016156:	4798      	blx	r3
90016158:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001615a:	7b5a      	ldrb	r2, [r3, #13]
9001615c:	00d1      	lsls	r1, r2, #3
9001615e:	f401 7580 	and.w	r5, r1, #256	; 0x100
90016162:	7a19      	ldrb	r1, [r3, #8]
90016164:	4329      	orrs	r1, r5
90016166:	0655      	lsls	r5, r2, #25
90016168:	9d17      	ldr	r5, [sp, #92]	; 0x5c
9001616a:	bf48      	it	mi
9001616c:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
90016170:	4405      	add	r5, r0
90016172:	bf48      	it	mi
90016174:	b209      	sxthmi	r1, r1
90016176:	1a6d      	subs	r5, r5, r1
90016178:	9929      	ldr	r1, [sp, #164]	; 0xa4
9001617a:	b2ad      	uxth	r5, r5
9001617c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90016180:	fa0f fa85 	sxth.w	sl, r5
90016184:	4551      	cmp	r1, sl
90016186:	dd3c      	ble.n	90016202 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
90016188:	0112      	lsls	r2, r2, #4
9001618a:	79d8      	ldrb	r0, [r3, #7]
9001618c:	f402 7280 	and.w	r2, r2, #256	; 0x100
90016190:	4302      	orrs	r2, r0
90016192:	4492      	add	sl, r2
90016194:	4551      	cmp	r1, sl
90016196:	dc30      	bgt.n	900161fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90016198:	1b4d      	subs	r5, r1, r5
9001619a:	468a      	mov	sl, r1
9001619c:	b22d      	sxth	r5, r5
9001619e:	9319      	str	r3, [sp, #100]	; 0x64
900161a0:	b2ad      	uxth	r5, r5
900161a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
900161a4:	f8d8 0000 	ldr.w	r0, [r8]
900161a8:	681a      	ldr	r2, [r3, #0]
900161aa:	6801      	ldr	r1, [r0, #0]
900161ac:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
900161ae:	9a1d      	ldr	r2, [sp, #116]	; 0x74
900161b0:	9313      	str	r3, [sp, #76]	; 0x4c
900161b2:	9218      	str	r2, [sp, #96]	; 0x60
900161b4:	6c09      	ldr	r1, [r1, #64]	; 0x40
900161b6:	4788      	blx	r1
900161b8:	f898 1006 	ldrb.w	r1, [r8, #6]
900161bc:	9b19      	ldr	r3, [sp, #100]	; 0x64
900161be:	910b      	str	r1, [sp, #44]	; 0x2c
900161c0:	f898 100e 	ldrb.w	r1, [r8, #14]
900161c4:	9a18      	ldr	r2, [sp, #96]	; 0x60
900161c6:	910a      	str	r1, [sp, #40]	; 0x28
900161c8:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
900161cc:	9109      	str	r1, [sp, #36]	; 0x24
900161ce:	f8d8 1008 	ldr.w	r1, [r8, #8]
900161d2:	9305      	str	r3, [sp, #20]
900161d4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900161d6:	9206      	str	r2, [sp, #24]
900161d8:	9304      	str	r3, [sp, #16]
900161da:	9b12      	ldr	r3, [sp, #72]	; 0x48
900161dc:	f8cd a004 	str.w	sl, [sp, #4]
900161e0:	e9cd 7502 	strd	r7, r5, [sp, #8]
900161e4:	4437      	add	r7, r6
900161e6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900161e8:	b23f      	sxth	r7, r7
900161ea:	e9cd 0107 	strd	r0, r1, [sp, #28]
900161ee:	9700      	str	r7, [sp, #0]
900161f0:	9916      	ldr	r1, [sp, #88]	; 0x58
900161f2:	681a      	ldr	r2, [r3, #0]
900161f4:	9811      	ldr	r0, [sp, #68]	; 0x44
900161f6:	685b      	ldr	r3, [r3, #4]
900161f8:	47a8      	blx	r5
900161fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900161fc:	3301      	adds	r3, #1
900161fe:	930e      	str	r3, [sp, #56]	; 0x38
90016200:	e6e0      	b.n	90015fc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
90016202:	2500      	movs	r5, #0
90016204:	e7cb      	b.n	9001619e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
90016206:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90016208:	3501      	adds	r5, #1
9001620a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001620c:	429d      	cmp	r5, r3
9001620e:	f6bf af74 	bge.w	900160fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
90016212:	4659      	mov	r1, fp
90016214:	982c      	ldr	r0, [sp, #176]	; 0xb0
90016216:	f7ee f847 	bl	900042a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001621a:	4604      	mov	r4, r0
9001621c:	b110      	cbz	r0, 90016224 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
9001621e:	280a      	cmp	r0, #10
90016220:	d1f2      	bne.n	90016208 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
90016222:	e769      	b.n	900160f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
90016224:	2400      	movs	r4, #0
90016226:	e768      	b.n	900160fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
90016228:	f1bb 0f00 	cmp.w	fp, #0
9001622c:	f43f af59 	beq.w	900160e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
90016230:	e774      	b.n	9001611c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

90016232 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90016232:	b530      	push	{r4, r5, lr}
90016234:	8ac4      	ldrh	r4, [r0, #22]
90016236:	8b45      	ldrh	r5, [r0, #26]
90016238:	8343      	strh	r3, [r0, #26]
9001623a:	442c      	add	r4, r5
9001623c:	1ae4      	subs	r4, r4, r3
9001623e:	8b83      	ldrh	r3, [r0, #28]
90016240:	82c4      	strh	r4, [r0, #22]
90016242:	8b04      	ldrh	r4, [r0, #24]
90016244:	4422      	add	r2, r4
90016246:	440c      	add	r4, r1
90016248:	1a59      	subs	r1, r3, r1
9001624a:	83c2      	strh	r2, [r0, #30]
9001624c:	8304      	strh	r4, [r0, #24]
9001624e:	8381      	strh	r1, [r0, #28]
90016250:	bd30      	pop	{r4, r5, pc}

90016252 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90016252:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016256:	4604      	mov	r4, r0
90016258:	8a47      	ldrh	r7, [r0, #18]
9001625a:	68c0      	ldr	r0, [r0, #12]
9001625c:	b085      	sub	sp, #20
9001625e:	6803      	ldr	r3, [r0, #0]
90016260:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90016262:	4798      	blx	r3
90016264:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90016268:	7a63      	ldrb	r3, [r4, #9]
9001626a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001626e:	3b01      	subs	r3, #1
90016270:	42b7      	cmp	r7, r6
90016272:	bfac      	ite	ge
90016274:	f04f 0900 	movge.w	r9, #0
90016278:	f04f 0901 	movlt.w	r9, #1
9001627c:	2b05      	cmp	r3, #5
9001627e:	d804      	bhi.n	9001628a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90016280:	e8df f003 	tbb	[pc, r3]
90016284:	470f0854 	.word	0x470f0854
90016288:	4c4c      	.short	0x4c4c
9001628a:	2500      	movs	r5, #0
9001628c:	46a9      	mov	r9, r5
9001628e:	462e      	mov	r6, r5
90016290:	462f      	mov	r7, r5
90016292:	e00e      	b.n	900162b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90016294:	42b7      	cmp	r7, r6
90016296:	f04f 0500 	mov.w	r5, #0
9001629a:	bfb4      	ite	lt
9001629c:	2600      	movlt	r6, #0
9001629e:	2601      	movge	r6, #1
900162a0:	e7f6      	b.n	90016290 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900162a2:	42b7      	cmp	r7, r6
900162a4:	464d      	mov	r5, r9
900162a6:	f04f 0900 	mov.w	r9, #0
900162aa:	bfb4      	ite	lt
900162ac:	2600      	movlt	r6, #0
900162ae:	2601      	movge	r6, #1
900162b0:	464f      	mov	r7, r9
900162b2:	f04f 0800 	mov.w	r8, #0
900162b6:	f8a4 8016 	strh.w	r8, [r4, #22]
900162ba:	f8a4 8018 	strh.w	r8, [r4, #24]
900162be:	f8cd 8004 	str.w	r8, [sp, #4]
900162c2:	2300      	movs	r3, #0
900162c4:	9303      	str	r3, [sp, #12]
900162c6:	8823      	ldrh	r3, [r4, #0]
900162c8:	2b20      	cmp	r3, #32
900162ca:	d033      	beq.n	90016334 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900162cc:	f242 010b 	movw	r1, #8203	; 0x200b
900162d0:	1a5a      	subs	r2, r3, r1
900162d2:	f1d2 0a00 	rsbs	sl, r2, #0
900162d6:	eb4a 0a02 	adc.w	sl, sl, r2
900162da:	f64f 62ff 	movw	r2, #65279	; 0xfeff
900162de:	4293      	cmp	r3, r2
900162e0:	d008      	beq.n	900162f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900162e2:	428b      	cmp	r3, r1
900162e4:	9a01      	ldr	r2, [sp, #4]
900162e6:	bf0e      	itee	eq
900162e8:	f04f 0a01 	moveq.w	sl, #1
900162ec:	461a      	movne	r2, r3
900162ee:	f04f 0a00 	movne.w	sl, #0
900162f2:	9201      	str	r2, [sp, #4]
900162f4:	ab03      	add	r3, sp, #12
900162f6:	68e2      	ldr	r2, [r4, #12]
900162f8:	7a21      	ldrb	r1, [r4, #8]
900162fa:	6860      	ldr	r0, [r4, #4]
900162fc:	f002 feda 	bl	900190b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90016300:	8020      	strh	r0, [r4, #0]
90016302:	b9d8      	cbnz	r0, 9001633c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90016304:	8ba2      	ldrh	r2, [r4, #28]
90016306:	2300      	movs	r3, #0
90016308:	4611      	mov	r1, r2
9001630a:	4620      	mov	r0, r4
9001630c:	f7ff ff91 	bl	90016232 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90016310:	e06e      	b.n	900163f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90016312:	2500      	movs	r5, #0
90016314:	2701      	movs	r7, #1
90016316:	46a9      	mov	r9, r5
90016318:	462e      	mov	r6, r5
9001631a:	e7ca      	b.n	900162b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001631c:	42b7      	cmp	r7, r6
9001631e:	f04f 0500 	mov.w	r5, #0
90016322:	bfb4      	ite	lt
90016324:	2700      	movlt	r7, #0
90016326:	2701      	movge	r7, #1
90016328:	462e      	mov	r6, r5
9001632a:	e7c2      	b.n	900162b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001632c:	2500      	movs	r5, #0
9001632e:	2601      	movs	r6, #1
90016330:	46a9      	mov	r9, r5
90016332:	e7ad      	b.n	90016290 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90016334:	9301      	str	r3, [sp, #4]
90016336:	f04f 0a01 	mov.w	sl, #1
9001633a:	e7db      	b.n	900162f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001633c:	8b63      	ldrh	r3, [r4, #26]
9001633e:	280a      	cmp	r0, #10
90016340:	f103 0301 	add.w	r3, r3, #1
90016344:	8363      	strh	r3, [r4, #26]
90016346:	d0dd      	beq.n	90016304 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90016348:	9a03      	ldr	r2, [sp, #12]
9001634a:	bb62      	cbnz	r2, 900163a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
9001634c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90016350:	4298      	cmp	r0, r3
90016352:	d003      	beq.n	9001635c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90016354:	f242 030b 	movw	r3, #8203	; 0x200b
90016358:	4298      	cmp	r0, r3
9001635a:	d1b2      	bne.n	900162c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001635c:	8823      	ldrh	r3, [r4, #0]
9001635e:	8ba1      	ldrh	r1, [r4, #28]
90016360:	2b20      	cmp	r3, #32
90016362:	d003      	beq.n	9001636c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90016364:	f242 000b 	movw	r0, #8203	; 0x200b
90016368:	4283      	cmp	r3, r0
9001636a:	d131      	bne.n	900163d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
9001636c:	f1ba 0f00 	cmp.w	sl, #0
90016370:	bf0a      	itet	eq
90016372:	4688      	moveq	r8, r1
90016374:	4650      	movne	r0, sl
90016376:	2001      	moveq	r0, #1
90016378:	440a      	add	r2, r1
9001637a:	8b23      	ldrh	r3, [r4, #24]
9001637c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90016380:	b292      	uxth	r2, r2
90016382:	83a2      	strh	r2, [r4, #28]
90016384:	4413      	add	r3, r2
90016386:	f1b9 0f00 	cmp.w	r9, #0
9001638a:	d102      	bne.n	90016392 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
9001638c:	2d00      	cmp	r5, #0
9001638e:	d042      	beq.n	90016416 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90016390:	b300      	cbz	r0, 900163d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90016392:	8c21      	ldrh	r1, [r4, #32]
90016394:	4419      	add	r1, r3
90016396:	458c      	cmp	ip, r1
90016398:	da37      	bge.n	9001640a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001639a:	8ae1      	ldrh	r1, [r4, #22]
9001639c:	2900      	cmp	r1, #0
9001639e:	d034      	beq.n	9001640a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900163a0:	4563      	cmp	r3, ip
900163a2:	dd8e      	ble.n	900162c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900163a4:	e01d      	b.n	900163e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
900163a6:	8893      	ldrh	r3, [r2, #4]
900163a8:	9901      	ldr	r1, [sp, #4]
900163aa:	8023      	strh	r3, [r4, #0]
900163ac:	f892 b00d 	ldrb.w	fp, [r2, #13]
900163b0:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
900163b4:	f40b 7080 	and.w	r0, fp, #256	; 0x100
900163b8:	f892 b00a 	ldrb.w	fp, [r2, #10]
900163bc:	ea4b 0b00 	orr.w	fp, fp, r0
900163c0:	68e0      	ldr	r0, [r4, #12]
900163c2:	6803      	ldr	r3, [r0, #0]
900163c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900163c6:	4798      	blx	r3
900163c8:	eb0b 0200 	add.w	r2, fp, r0
900163cc:	b292      	uxth	r2, r2
900163ce:	e7c5      	b.n	9001635c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900163d0:	2000      	movs	r0, #0
900163d2:	e7d1      	b.n	90016378 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
900163d4:	4563      	cmp	r3, ip
900163d6:	f77f af74 	ble.w	900162c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900163da:	8ae3      	ldrh	r3, [r4, #22]
900163dc:	2b00      	cmp	r3, #0
900163de:	f43f af70 	beq.w	900162c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900163e2:	2301      	movs	r3, #1
900163e4:	8c22      	ldrh	r2, [r4, #32]
900163e6:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
900163ea:	8be3      	ldrh	r3, [r4, #30]
900163ec:	4413      	add	r3, r2
900163ee:	83e3      	strh	r3, [r4, #30]
900163f0:	68e0      	ldr	r0, [r4, #12]
900163f2:	6803      	ldr	r3, [r0, #0]
900163f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900163f6:	4798      	blx	r3
900163f8:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
900163fc:	4418      	add	r0, r3
900163fe:	8a63      	ldrh	r3, [r4, #18]
90016400:	1a18      	subs	r0, r3, r0
90016402:	8260      	strh	r0, [r4, #18]
90016404:	b005      	add	sp, #20
90016406:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001640a:	2300      	movs	r3, #0
9001640c:	4611      	mov	r1, r2
9001640e:	4620      	mov	r0, r4
90016410:	f7ff ff0f 	bl	90016232 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90016414:	e755      	b.n	900162c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016416:	4563      	cmp	r3, ip
90016418:	dd14      	ble.n	90016444 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
9001641a:	b117      	cbz	r7, 90016422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
9001641c:	2301      	movs	r3, #1
9001641e:	460a      	mov	r2, r1
90016420:	e772      	b.n	90016308 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90016422:	2e00      	cmp	r6, #0
90016424:	f43f af4d 	beq.w	900162c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016428:	2800      	cmp	r0, #0
9001642a:	f47f af4a 	bne.w	900162c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001642e:	f1ba 0f00 	cmp.w	sl, #0
90016432:	d002      	beq.n	9001643a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90016434:	2301      	movs	r3, #1
90016436:	4642      	mov	r2, r8
90016438:	e767      	b.n	9001630a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
9001643a:	8ae3      	ldrh	r3, [r4, #22]
9001643c:	2b00      	cmp	r3, #0
9001643e:	f43f af40 	beq.w	900162c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016442:	e7d5      	b.n	900163f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90016444:	2800      	cmp	r0, #0
90016446:	f47f af3c 	bne.w	900162c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001644a:	f1ba 0f00 	cmp.w	sl, #0
9001644e:	f43f af38 	beq.w	900162c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016452:	2301      	movs	r3, #1
90016454:	4642      	mov	r2, r8
90016456:	e7da      	b.n	9001640e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90016458 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90016458:	b5f0      	push	{r4, r5, r6, r7, lr}
9001645a:	4605      	mov	r5, r0
9001645c:	b08f      	sub	sp, #60	; 0x3c
9001645e:	4617      	mov	r7, r2
90016460:	461c      	mov	r4, r3
90016462:	460e      	mov	r6, r1
90016464:	b1d1      	cbz	r1, 9001649c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90016466:	681b      	ldr	r3, [r3, #0]
90016468:	4620      	mov	r0, r4
9001646a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001646c:	4798      	blx	r3
9001646e:	4240      	negs	r0, r0
90016470:	9603      	str	r6, [sp, #12]
90016472:	f64f 73ff 	movw	r3, #65535	; 0xffff
90016476:	b200      	sxth	r0, r0
90016478:	9700      	str	r7, [sp, #0]
9001647a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
9001647e:	4629      	mov	r1, r5
90016480:	e9cd 4001 	strd	r4, r0, [sp, #4]
90016484:	2401      	movs	r4, #1
90016486:	a805      	add	r0, sp, #20
90016488:	f7ff fcbe 	bl	90015e08 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001648c:	a805      	add	r0, sp, #20
9001648e:	f7ff fee0 	bl	90016252 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90016492:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90016496:	b163      	cbz	r3, 900164b2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90016498:	3401      	adds	r4, #1
9001649a:	e7f7      	b.n	9001648c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
9001649c:	2401      	movs	r4, #1
9001649e:	f002 fed5 	bl	9001924c <_ZN8touchgfx12TextProvider11getNextCharEv>
900164a2:	280a      	cmp	r0, #10
900164a4:	4628      	mov	r0, r5
900164a6:	bf08      	it	eq
900164a8:	3401      	addeq	r4, #1
900164aa:	f002 fecf 	bl	9001924c <_ZN8touchgfx12TextProvider11getNextCharEv>
900164ae:	2800      	cmp	r0, #0
900164b0:	d1f7      	bne.n	900164a2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
900164b2:	b2a0      	uxth	r0, r4
900164b4:	b00f      	add	sp, #60	; 0x3c
900164b6:	bdf0      	pop	{r4, r5, r6, r7, pc}

900164b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
900164b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900164bc:	b0e3      	sub	sp, #396	; 0x18c
900164be:	461c      	mov	r4, r3
900164c0:	4683      	mov	fp, r0
900164c2:	4688      	mov	r8, r1
900164c4:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
900164c6:	2b00      	cmp	r3, #0
900164c8:	f000 8112 	beq.w	900166f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900164cc:	6823      	ldr	r3, [r4, #0]
900164ce:	2b00      	cmp	r3, #0
900164d0:	f000 810e 	beq.w	900166f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900164d4:	7ba3      	ldrb	r3, [r4, #14]
900164d6:	2b00      	cmp	r3, #0
900164d8:	f000 810a 	beq.w	900166f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900164dc:	ad0a      	add	r5, sp, #40	; 0x28
900164de:	6810      	ldr	r0, [r2, #0]
900164e0:	6851      	ldr	r1, [r2, #4]
900164e2:	462b      	mov	r3, r5
900164e4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
900164e8:	c303      	stmia	r3!, {r0, r1}
900164ea:	2100      	movs	r1, #0
900164ec:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
900164f0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
900164f4:	4628      	mov	r0, r5
900164f6:	910c      	str	r1, [sp, #48]	; 0x30
900164f8:	a90c      	add	r1, sp, #48	; 0x30
900164fa:	79a2      	ldrb	r2, [r4, #6]
900164fc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90016500:	f7ff fd01 	bl	90015f06 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90016504:	a90c      	add	r1, sp, #48	; 0x30
90016506:	79a2      	ldrb	r2, [r4, #6]
90016508:	4608      	mov	r0, r1
9001650a:	f7ff fcfc 	bl	90015f06 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001650e:	a817      	add	r0, sp, #92	; 0x5c
90016510:	f002 fa6f 	bl	900189f2 <_ZN8touchgfx12TextProviderC1Ev>
90016514:	6820      	ldr	r0, [r4, #0]
90016516:	6803      	ldr	r3, [r0, #0]
90016518:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001651a:	4798      	blx	r3
9001651c:	4606      	mov	r6, r0
9001651e:	6820      	ldr	r0, [r4, #0]
90016520:	6803      	ldr	r3, [r0, #0]
90016522:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90016524:	4798      	blx	r3
90016526:	4633      	mov	r3, r6
90016528:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
9001652a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
9001652c:	9000      	str	r0, [sp, #0]
9001652e:	a817      	add	r0, sp, #92	; 0x5c
90016530:	f002 faba 	bl	90018aa8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016534:	6820      	ldr	r0, [r4, #0]
90016536:	f894 a004 	ldrb.w	sl, [r4, #4]
9001653a:	6803      	ldr	r3, [r0, #0]
9001653c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001653e:	4798      	blx	r3
90016540:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90016544:	6823      	ldr	r3, [r4, #0]
90016546:	4607      	mov	r7, r0
90016548:	4406      	add	r6, r0
9001654a:	a830      	add	r0, sp, #192	; 0xc0
9001654c:	f893 9009 	ldrb.w	r9, [r3, #9]
90016550:	f002 fa4f 	bl	900189f2 <_ZN8touchgfx12TextProviderC1Ev>
90016554:	7c23      	ldrb	r3, [r4, #16]
90016556:	b17b      	cbz	r3, 90016578 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90016558:	6820      	ldr	r0, [r4, #0]
9001655a:	6803      	ldr	r3, [r0, #0]
9001655c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001655e:	4798      	blx	r3
90016560:	9009      	str	r0, [sp, #36]	; 0x24
90016562:	6820      	ldr	r0, [r4, #0]
90016564:	6802      	ldr	r2, [r0, #0]
90016566:	6d12      	ldr	r2, [r2, #80]	; 0x50
90016568:	4790      	blx	r2
9001656a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001656c:	9000      	str	r0, [sp, #0]
9001656e:	a830      	add	r0, sp, #192	; 0xc0
90016570:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
90016572:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90016574:	f002 fa98 	bl	90018aa8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016578:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001657c:	a80e      	add	r0, sp, #56	; 0x38
9001657e:	7be2      	ldrb	r2, [r4, #15]
90016580:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90016584:	1a8a      	subs	r2, r1, r2
90016586:	7c21      	ldrb	r1, [r4, #16]
90016588:	9103      	str	r1, [sp, #12]
9001658a:	b292      	uxth	r2, r2
9001658c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90016590:	9102      	str	r1, [sp, #8]
90016592:	6821      	ldr	r1, [r4, #0]
90016594:	9101      	str	r1, [sp, #4]
90016596:	7961      	ldrb	r1, [r4, #5]
90016598:	9100      	str	r1, [sp, #0]
9001659a:	a930      	add	r1, sp, #192	; 0xc0
9001659c:	f7ff fc34 	bl	90015e08 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900165a0:	2e00      	cmp	r6, #0
900165a2:	dc5b      	bgt.n	9001665c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
900165a4:	af17      	add	r7, sp, #92	; 0x5c
900165a6:	f04f 0900 	mov.w	r9, #0
900165aa:	7c23      	ldrb	r3, [r4, #16]
900165ac:	2b00      	cmp	r3, #0
900165ae:	f000 80b1 	beq.w	90016714 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
900165b2:	a80e      	add	r0, sp, #56	; 0x38
900165b4:	f7ff fe4d 	bl	90016252 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900165b8:	f1ba 0f00 	cmp.w	sl, #0
900165bc:	f000 80a5 	beq.w	9001670a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900165c0:	7c23      	ldrb	r3, [r4, #16]
900165c2:	2264      	movs	r2, #100	; 0x64
900165c4:	4639      	mov	r1, r7
900165c6:	a849      	add	r0, sp, #292	; 0x124
900165c8:	9309      	str	r3, [sp, #36]	; 0x24
900165ca:	f012 f8c9 	bl	90028760 <memcpy>
900165ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
900165d0:	2b00      	cmp	r3, #0
900165d2:	f000 80a7 	beq.w	90016724 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
900165d6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
900165da:	7922      	ldrb	r2, [r4, #4]
900165dc:	2a01      	cmp	r2, #1
900165de:	f040 808a 	bne.w	900166f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
900165e2:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
900165e6:	1ac0      	subs	r0, r0, r3
900165e8:	2302      	movs	r3, #2
900165ea:	fb90 f0f3 	sdiv	r0, r0, r3
900165ee:	b200      	sxth	r0, r0
900165f0:	7c23      	ldrb	r3, [r4, #16]
900165f2:	2b00      	cmp	r3, #0
900165f4:	f000 808b 	beq.w	9001670e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
900165f8:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
900165fc:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
90016600:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90016604:	e9cd 2105 	strd	r2, r1, [sp, #20]
90016608:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001660c:	2100      	movs	r1, #0
9001660e:	4410      	add	r0, r2
90016610:	4642      	mov	r2, r8
90016612:	b200      	sxth	r0, r0
90016614:	e9cd 9703 	strd	r9, r7, [sp, #12]
90016618:	9000      	str	r0, [sp, #0]
9001661a:	4658      	mov	r0, fp
9001661c:	e9cd 5401 	strd	r5, r4, [sp, #4]
90016620:	f7ff fca2 	bl	90015f68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90016624:	2800      	cmp	r0, #0
90016626:	d163      	bne.n	900166f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016628:	b2b2      	uxth	r2, r6
9001662a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001662e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90016632:	4413      	add	r3, r2
90016634:	1a8a      	subs	r2, r1, r2
90016636:	b21b      	sxth	r3, r3
90016638:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
9001663c:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
90016640:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90016644:	2a00      	cmp	r2, #0
90016646:	d153      	bne.n	900166f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016648:	6822      	ldr	r2, [r4, #0]
9001664a:	8869      	ldrh	r1, [r5, #2]
9001664c:	7a12      	ldrb	r2, [r2, #8]
9001664e:	1a9b      	subs	r3, r3, r2
90016650:	88ea      	ldrh	r2, [r5, #6]
90016652:	440a      	add	r2, r1
90016654:	b212      	sxth	r2, r2
90016656:	4293      	cmp	r3, r2
90016658:	dda7      	ble.n	900165aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
9001665a:	e049      	b.n	900166f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001665c:	7c23      	ldrb	r3, [r4, #16]
9001665e:	444f      	add	r7, r9
90016660:	b1c3      	cbz	r3, 90016694 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90016662:	f64f 79ff 	movw	r9, #65535	; 0xffff
90016666:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001666a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001666e:	443b      	add	r3, r7
90016670:	4293      	cmp	r3, r2
90016672:	da97      	bge.n	900165a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90016674:	a80e      	add	r0, sp, #56	; 0x38
90016676:	f7ff fdec 	bl	90016252 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001667a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
9001667e:	3b01      	subs	r3, #1
90016680:	b29b      	uxth	r3, r3
90016682:	454b      	cmp	r3, r9
90016684:	9309      	str	r3, [sp, #36]	; 0x24
90016686:	d021      	beq.n	900166cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90016688:	7961      	ldrb	r1, [r4, #5]
9001668a:	a817      	add	r0, sp, #92	; 0x5c
9001668c:	f7ed fe0c 	bl	900042a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90016690:	9b09      	ldr	r3, [sp, #36]	; 0x24
90016692:	e7f4      	b.n	9001667e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90016694:	fa1f f986 	uxth.w	r9, r6
90016698:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001669c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900166a0:	443b      	add	r3, r7
900166a2:	4293      	cmp	r3, r2
900166a4:	f6bf af7e 	bge.w	900165a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
900166a8:	a817      	add	r0, sp, #92	; 0x5c
900166aa:	f002 fdcf 	bl	9001924c <_ZN8touchgfx12TextProvider11getNextCharEv>
900166ae:	b1f8      	cbz	r0, 900166f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900166b0:	280a      	cmp	r0, #10
900166b2:	d1f1      	bne.n	90016698 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900166b4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
900166b8:	444b      	add	r3, r9
900166ba:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900166be:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
900166c2:	eba3 0309 	sub.w	r3, r3, r9
900166c6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900166ca:	e7e5      	b.n	90016698 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900166cc:	b2b3      	uxth	r3, r6
900166ce:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
900166d2:	441a      	add	r2, r3
900166d4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
900166d8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
900166dc:	1ad3      	subs	r3, r2, r3
900166de:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900166e2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900166e6:	b11b      	cbz	r3, 900166f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900166e8:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
900166ec:	2b00      	cmp	r3, #0
900166ee:	d0ba      	beq.n	90016666 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
900166f0:	b063      	add	sp, #396	; 0x18c
900166f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900166f6:	2a02      	cmp	r2, #2
900166f8:	d105      	bne.n	90016706 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
900166fa:	7be2      	ldrb	r2, [r4, #15]
900166fc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90016700:	1a80      	subs	r0, r0, r2
90016702:	1ac0      	subs	r0, r0, r3
90016704:	e773      	b.n	900165ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90016706:	2000      	movs	r0, #0
90016708:	e772      	b.n	900165f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001670a:	7be0      	ldrb	r0, [r4, #15]
9001670c:	e770      	b.n	900165f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001670e:	f647 72ff 	movw	r2, #32767	; 0x7fff
90016712:	e773      	b.n	900165fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90016714:	f1ba 0f00 	cmp.w	sl, #0
90016718:	d0f7      	beq.n	9001670a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
9001671a:	2264      	movs	r2, #100	; 0x64
9001671c:	4639      	mov	r1, r7
9001671e:	a849      	add	r0, sp, #292	; 0x124
90016720:	f012 f81e 	bl	90028760 <memcpy>
90016724:	2300      	movs	r3, #0
90016726:	f647 72ff 	movw	r2, #32767	; 0x7fff
9001672a:	6821      	ldr	r1, [r4, #0]
9001672c:	a849      	add	r0, sp, #292	; 0x124
9001672e:	f7ff fbae 	bl	90015e8e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90016732:	b203      	sxth	r3, r0
90016734:	e751      	b.n	900165da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90016736 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90016736:	2b03      	cmp	r3, #3
90016738:	d818      	bhi.n	9001676c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
9001673a:	e8df f003 	tbb	[pc, r3]
9001673e:	0602      	.short	0x0602
90016740:	130d      	.short	0x130d
90016742:	f9b0 2000 	ldrsh.w	r2, [r0]
90016746:	1850      	adds	r0, r2, r1
90016748:	4770      	bx	lr
9001674a:	8803      	ldrh	r3, [r0, #0]
9001674c:	8880      	ldrh	r0, [r0, #4]
9001674e:	4418      	add	r0, r3
90016750:	b200      	sxth	r0, r0
90016752:	1a80      	subs	r0, r0, r2
90016754:	3801      	subs	r0, #1
90016756:	4770      	bx	lr
90016758:	8803      	ldrh	r3, [r0, #0]
9001675a:	8880      	ldrh	r0, [r0, #4]
9001675c:	4418      	add	r0, r3
9001675e:	b200      	sxth	r0, r0
90016760:	1a40      	subs	r0, r0, r1
90016762:	e7f7      	b.n	90016754 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90016764:	f9b0 0000 	ldrsh.w	r0, [r0]
90016768:	4410      	add	r0, r2
9001676a:	4770      	bx	lr
9001676c:	2000      	movs	r0, #0
9001676e:	4770      	bx	lr

90016770 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90016770:	2b03      	cmp	r3, #3
90016772:	d817      	bhi.n	900167a4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90016774:	e8df f003 	tbb	[pc, r3]
90016778:	10090602 	.word	0x10090602
9001677c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90016780:	1850      	adds	r0, r2, r1
90016782:	4770      	bx	lr
90016784:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016788:	e7fa      	b.n	90016780 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
9001678a:	8843      	ldrh	r3, [r0, #2]
9001678c:	88c0      	ldrh	r0, [r0, #6]
9001678e:	4418      	add	r0, r3
90016790:	b200      	sxth	r0, r0
90016792:	1a80      	subs	r0, r0, r2
90016794:	3801      	subs	r0, #1
90016796:	4770      	bx	lr
90016798:	8843      	ldrh	r3, [r0, #2]
9001679a:	88c0      	ldrh	r0, [r0, #6]
9001679c:	4418      	add	r0, r3
9001679e:	b200      	sxth	r0, r0
900167a0:	1a40      	subs	r0, r0, r1
900167a2:	e7f7      	b.n	90016794 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
900167a4:	2000      	movs	r0, #0
900167a6:	4770      	bx	lr

900167a8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
900167a8:	4b01      	ldr	r3, [pc, #4]	; (900167b0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
900167aa:	2200      	movs	r2, #0
900167ac:	601a      	str	r2, [r3, #0]
900167ae:	4770      	bx	lr
900167b0:	240398ac 	.word	0x240398ac

900167b4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
900167b4:	4603      	mov	r3, r0
900167b6:	b1c8      	cbz	r0, 900167ec <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
900167b8:	0c02      	lsrs	r2, r0, #16
900167ba:	0412      	lsls	r2, r2, #16
900167bc:	b9a2      	cbnz	r2, 900167e8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
900167be:	0403      	lsls	r3, r0, #16
900167c0:	2010      	movs	r0, #16
900167c2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
900167c6:	bf04      	itt	eq
900167c8:	021b      	lsleq	r3, r3, #8
900167ca:	3008      	addeq	r0, #8
900167cc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
900167d0:	bf04      	itt	eq
900167d2:	011b      	lsleq	r3, r3, #4
900167d4:	3004      	addeq	r0, #4
900167d6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
900167da:	bf04      	itt	eq
900167dc:	009b      	lsleq	r3, r3, #2
900167de:	3002      	addeq	r0, #2
900167e0:	2b00      	cmp	r3, #0
900167e2:	db04      	blt.n	900167ee <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
900167e4:	3001      	adds	r0, #1
900167e6:	4770      	bx	lr
900167e8:	2000      	movs	r0, #0
900167ea:	e7ea      	b.n	900167c2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
900167ec:	2020      	movs	r0, #32
900167ee:	4770      	bx	lr

900167f0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
900167f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900167f4:	b087      	sub	sp, #28
900167f6:	460d      	mov	r5, r1
900167f8:	4616      	mov	r6, r2
900167fa:	4698      	mov	r8, r3
900167fc:	4601      	mov	r1, r0
900167fe:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
90016802:	b120      	cbz	r0, 9001680e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016804:	b11a      	cbz	r2, 9001680e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016806:	2d1f      	cmp	r5, #31
90016808:	d801      	bhi.n	9001680e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
9001680a:	2b1f      	cmp	r3, #31
9001680c:	d904      	bls.n	90016818 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
9001680e:	2000      	movs	r0, #0
90016810:	6038      	str	r0, [r7, #0]
90016812:	b007      	add	sp, #28
90016814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016818:	b97d      	cbnz	r5, 9001683a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
9001681a:	b143      	cbz	r3, 9001682e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
9001681c:	4602      	mov	r2, r0
9001681e:	462b      	mov	r3, r5
90016820:	4641      	mov	r1, r8
90016822:	4630      	mov	r0, r6
90016824:	e9cd 4700 	strd	r4, r7, [sp]
90016828:	f7ff ffe2 	bl	900167f0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001682c:	e7f1      	b.n	90016812 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001682e:	f04f 33ff 	mov.w	r3, #4294967295
90016832:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90016836:	603b      	str	r3, [r7, #0]
90016838:	e7eb      	b.n	90016812 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001683a:	fa32 fa05 	lsrs.w	sl, r2, r5
9001683e:	d106      	bne.n	9001684e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90016840:	4346      	muls	r6, r0
90016842:	fbb6 f0f4 	udiv	r0, r6, r4
90016846:	fb04 6610 	mls	r6, r4, r0, r6
9001684a:	603e      	str	r6, [r7, #0]
9001684c:	e7e1      	b.n	90016812 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001684e:	2201      	movs	r2, #1
90016850:	fa00 fb05 	lsl.w	fp, r0, r5
90016854:	40aa      	lsls	r2, r5
90016856:	fbbb f9f4 	udiv	r9, fp, r4
9001685a:	3a01      	subs	r2, #1
9001685c:	fb0a f309 	mul.w	r3, sl, r9
90016860:	fb04 b919 	mls	r9, r4, r9, fp
90016864:	4016      	ands	r6, r2
90016866:	9303      	str	r3, [sp, #12]
90016868:	4630      	mov	r0, r6
9001686a:	f7ff ffa3 	bl	900167b4 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001686e:	462b      	mov	r3, r5
90016870:	460a      	mov	r2, r1
90016872:	4601      	mov	r1, r0
90016874:	4630      	mov	r0, r6
90016876:	e9cd 4700 	strd	r4, r7, [sp]
9001687a:	f7ff ffb9 	bl	900167f0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001687e:	4606      	mov	r6, r0
90016880:	4648      	mov	r0, r9
90016882:	eb05 0108 	add.w	r1, r5, r8
90016886:	f7ff ff95 	bl	900167b4 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001688a:	ab05      	add	r3, sp, #20
9001688c:	464a      	mov	r2, r9
9001688e:	e9cd 4300 	strd	r4, r3, [sp]
90016892:	4603      	mov	r3, r0
90016894:	4650      	mov	r0, sl
90016896:	f7ff ffab 	bl	900167f0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001689a:	6839      	ldr	r1, [r7, #0]
9001689c:	9a05      	ldr	r2, [sp, #20]
9001689e:	9b03      	ldr	r3, [sp, #12]
900168a0:	4411      	add	r1, r2
900168a2:	fbb1 f2f4 	udiv	r2, r1, r4
900168a6:	18d3      	adds	r3, r2, r3
900168a8:	fb04 1412 	mls	r4, r4, r2, r1
900168ac:	441e      	add	r6, r3
900168ae:	603c      	str	r4, [r7, #0]
900168b0:	4430      	add	r0, r6
900168b2:	e7ae      	b.n	90016812 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

900168b4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
900168b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900168b8:	b085      	sub	sp, #20
900168ba:	f1b0 0900 	subs.w	r9, r0, #0
900168be:	461d      	mov	r5, r3
900168c0:	4617      	mov	r7, r2
900168c2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900168c4:	bfbb      	ittet	lt
900168c6:	f1c9 0900 	rsblt	r9, r9, #0
900168ca:	f04f 36ff 	movlt.w	r6, #4294967295
900168ce:	2601      	movge	r6, #1
900168d0:	6823      	ldrlt	r3, [r4, #0]
900168d2:	bfbc      	itt	lt
900168d4:	425b      	neglt	r3, r3
900168d6:	6023      	strlt	r3, [r4, #0]
900168d8:	2a00      	cmp	r2, #0
900168da:	da04      	bge.n	900168e6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
900168dc:	6823      	ldr	r3, [r4, #0]
900168de:	4257      	negs	r7, r2
900168e0:	4276      	negs	r6, r6
900168e2:	425b      	negs	r3, r3
900168e4:	6023      	str	r3, [r4, #0]
900168e6:	2d00      	cmp	r5, #0
900168e8:	4638      	mov	r0, r7
900168ea:	bfba      	itte	lt
900168ec:	426d      	neglt	r5, r5
900168ee:	f04f 38ff 	movlt.w	r8, #4294967295
900168f2:	f04f 0801 	movge.w	r8, #1
900168f6:	f7ff ff5d 	bl	900167b4 <_ZN8touchgfx16TouchCalibration4clzuEm>
900168fa:	ab03      	add	r3, sp, #12
900168fc:	463a      	mov	r2, r7
900168fe:	e9cd 5300 	strd	r5, r3, [sp]
90016902:	4603      	mov	r3, r0
90016904:	4648      	mov	r0, r9
90016906:	f7ff ff73 	bl	900167f0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001690a:	6823      	ldr	r3, [r4, #0]
9001690c:	9a03      	ldr	r2, [sp, #12]
9001690e:	4546      	cmp	r6, r8
90016910:	441a      	add	r2, r3
90016912:	fb92 f3f5 	sdiv	r3, r2, r5
90016916:	4418      	add	r0, r3
90016918:	fb05 2313 	mls	r3, r5, r3, r2
9001691c:	bf18      	it	ne
9001691e:	4240      	negne	r0, r0
90016920:	1c72      	adds	r2, r6, #1
90016922:	6023      	str	r3, [r4, #0]
90016924:	d105      	bne.n	90016932 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90016926:	2b00      	cmp	r3, #0
90016928:	f1c3 0200 	rsb	r2, r3, #0
9001692c:	db0b      	blt.n	90016946 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
9001692e:	6022      	str	r2, [r4, #0]
90016930:	e006      	b.n	90016940 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016932:	2e01      	cmp	r6, #1
90016934:	d104      	bne.n	90016940 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016936:	2b00      	cmp	r3, #0
90016938:	da02      	bge.n	90016940 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001693a:	442b      	add	r3, r5
9001693c:	3801      	subs	r0, #1
9001693e:	6023      	str	r3, [r4, #0]
90016940:	b005      	add	sp, #20
90016942:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016946:	3801      	subs	r0, #1
90016948:	1b52      	subs	r2, r2, r5
9001694a:	e7f0      	b.n	9001692e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

9001694c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
9001694c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90016950:	4c1c      	ldr	r4, [pc, #112]	; (900169c4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90016952:	4605      	mov	r5, r0
90016954:	6807      	ldr	r7, [r0, #0]
90016956:	69a3      	ldr	r3, [r4, #24]
90016958:	b92b      	cbnz	r3, 90016966 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
9001695a:	6840      	ldr	r0, [r0, #4]
9001695c:	e9c5 7000 	strd	r7, r0, [r5]
90016960:	b004      	add	sp, #16
90016962:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016966:	f04f 0802 	mov.w	r8, #2
9001696a:	68a2      	ldr	r2, [r4, #8]
9001696c:	ae04      	add	r6, sp, #16
9001696e:	6820      	ldr	r0, [r4, #0]
90016970:	fb93 f1f8 	sdiv	r1, r3, r8
90016974:	440a      	add	r2, r1
90016976:	69e1      	ldr	r1, [r4, #28]
90016978:	f846 2d04 	str.w	r2, [r6, #-4]!
9001697c:	463a      	mov	r2, r7
9001697e:	9600      	str	r6, [sp, #0]
90016980:	f7ff ff98 	bl	900168b4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016984:	69a3      	ldr	r3, [r4, #24]
90016986:	4607      	mov	r7, r0
90016988:	686a      	ldr	r2, [r5, #4]
9001698a:	6a21      	ldr	r1, [r4, #32]
9001698c:	9600      	str	r6, [sp, #0]
9001698e:	6860      	ldr	r0, [r4, #4]
90016990:	f7ff ff90 	bl	900168b4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016994:	69a3      	ldr	r3, [r4, #24]
90016996:	6962      	ldr	r2, [r4, #20]
90016998:	4407      	add	r7, r0
9001699a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9001699c:	9600      	str	r6, [sp, #0]
9001699e:	68e0      	ldr	r0, [r4, #12]
900169a0:	fb93 f8f8 	sdiv	r8, r3, r8
900169a4:	4442      	add	r2, r8
900169a6:	9203      	str	r2, [sp, #12]
900169a8:	682a      	ldr	r2, [r5, #0]
900169aa:	f7ff ff83 	bl	900168b4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900169ae:	4680      	mov	r8, r0
900169b0:	9600      	str	r6, [sp, #0]
900169b2:	69a3      	ldr	r3, [r4, #24]
900169b4:	686a      	ldr	r2, [r5, #4]
900169b6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
900169b8:	6920      	ldr	r0, [r4, #16]
900169ba:	f7ff ff7b 	bl	900168b4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900169be:	4440      	add	r0, r8
900169c0:	e7cc      	b.n	9001695c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
900169c2:	bf00      	nop
900169c4:	240398b0 	.word	0x240398b0

900169c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
900169c8:	4b07      	ldr	r3, [pc, #28]	; (900169e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
900169ca:	781b      	ldrb	r3, [r3, #0]
900169cc:	2b01      	cmp	r3, #1
900169ce:	d109      	bne.n	900169e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
900169d0:	f9b1 3000 	ldrsh.w	r3, [r1]
900169d4:	f9b0 2000 	ldrsh.w	r2, [r0]
900169d8:	8003      	strh	r3, [r0, #0]
900169da:	4b04      	ldr	r3, [pc, #16]	; (900169ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
900169dc:	881b      	ldrh	r3, [r3, #0]
900169de:	3b01      	subs	r3, #1
900169e0:	1a9b      	subs	r3, r3, r2
900169e2:	800b      	strh	r3, [r1, #0]
900169e4:	4770      	bx	lr
900169e6:	bf00      	nop
900169e8:	24039894 	.word	0x24039894
900169ec:	24039890 	.word	0x24039890

900169f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
900169f0:	4b07      	ldr	r3, [pc, #28]	; (90016a10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
900169f2:	b510      	push	{r4, lr}
900169f4:	781b      	ldrb	r3, [r3, #0]
900169f6:	2b01      	cmp	r3, #1
900169f8:	d108      	bne.n	90016a0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
900169fa:	4b06      	ldr	r3, [pc, #24]	; (90016a14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
900169fc:	880c      	ldrh	r4, [r1, #0]
900169fe:	881b      	ldrh	r3, [r3, #0]
90016a00:	f9b0 2000 	ldrsh.w	r2, [r0]
90016a04:	3b01      	subs	r3, #1
90016a06:	1b1b      	subs	r3, r3, r4
90016a08:	8003      	strh	r3, [r0, #0]
90016a0a:	800a      	strh	r2, [r1, #0]
90016a0c:	bd10      	pop	{r4, pc}
90016a0e:	bf00      	nop
90016a10:	24039894 	.word	0x24039894
90016a14:	24039890 	.word	0x24039890

90016a18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90016a18:	4b0a      	ldr	r3, [pc, #40]	; (90016a44 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90016a1a:	b510      	push	{r4, lr}
90016a1c:	781b      	ldrb	r3, [r3, #0]
90016a1e:	2b01      	cmp	r3, #1
90016a20:	d10e      	bne.n	90016a40 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90016a22:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90016a26:	8843      	ldrh	r3, [r0, #2]
90016a28:	f9b0 4000 	ldrsh.w	r4, [r0]
90016a2c:	18ca      	adds	r2, r1, r3
90016a2e:	4b06      	ldr	r3, [pc, #24]	; (90016a48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90016a30:	8044      	strh	r4, [r0, #2]
90016a32:	881b      	ldrh	r3, [r3, #0]
90016a34:	1a9b      	subs	r3, r3, r2
90016a36:	8003      	strh	r3, [r0, #0]
90016a38:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016a3c:	8081      	strh	r1, [r0, #4]
90016a3e:	80c3      	strh	r3, [r0, #6]
90016a40:	bd10      	pop	{r4, pc}
90016a42:	bf00      	nop
90016a44:	24039894 	.word	0x24039894
90016a48:	24039890 	.word	0x24039890

90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90016a4c:	4b08      	ldr	r3, [pc, #32]	; (90016a70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90016a4e:	781b      	ldrb	r3, [r3, #0]
90016a50:	2b01      	cmp	r3, #1
90016a52:	d10c      	bne.n	90016a6e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90016a54:	8803      	ldrh	r3, [r0, #0]
90016a56:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90016a5a:	8842      	ldrh	r2, [r0, #2]
90016a5c:	8002      	strh	r2, [r0, #0]
90016a5e:	185a      	adds	r2, r3, r1
90016a60:	4b04      	ldr	r3, [pc, #16]	; (90016a74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90016a62:	881b      	ldrh	r3, [r3, #0]
90016a64:	1a9b      	subs	r3, r3, r2
90016a66:	8043      	strh	r3, [r0, #2]
90016a68:	88c3      	ldrh	r3, [r0, #6]
90016a6a:	80c1      	strh	r1, [r0, #6]
90016a6c:	8083      	strh	r3, [r0, #4]
90016a6e:	4770      	bx	lr
90016a70:	24039894 	.word	0x24039894
90016a74:	24039890 	.word	0x24039890

90016a78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90016a78:	4b07      	ldr	r3, [pc, #28]	; (90016a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90016a7a:	b510      	push	{r4, lr}
90016a7c:	781b      	ldrb	r3, [r3, #0]
90016a7e:	2b01      	cmp	r3, #1
90016a80:	d108      	bne.n	90016a94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90016a82:	f9b1 3000 	ldrsh.w	r3, [r1]
90016a86:	f9b0 4000 	ldrsh.w	r4, [r0]
90016a8a:	8003      	strh	r3, [r0, #0]
90016a8c:	8893      	ldrh	r3, [r2, #4]
90016a8e:	3b01      	subs	r3, #1
90016a90:	1b1b      	subs	r3, r3, r4
90016a92:	800b      	strh	r3, [r1, #0]
90016a94:	bd10      	pop	{r4, pc}
90016a96:	bf00      	nop
90016a98:	24039894 	.word	0x24039894

90016a9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90016a9c:	4b0b      	ldr	r3, [pc, #44]	; (90016acc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
90016a9e:	781b      	ldrb	r3, [r3, #0]
90016aa0:	2b01      	cmp	r3, #1
90016aa2:	d111      	bne.n	90016ac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90016aa4:	680b      	ldr	r3, [r1, #0]
90016aa6:	ed90 7a00 	vldr	s14, [r0]
90016aaa:	6003      	str	r3, [r0, #0]
90016aac:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90016ab0:	eddf 6a07 	vldr	s13, [pc, #28]	; 90016ad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90016ab4:	ee07 3a90 	vmov	s15, r3
90016ab8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016abc:	ee77 7ae6 	vsub.f32	s15, s15, s13
90016ac0:	ee77 7ac7 	vsub.f32	s15, s15, s14
90016ac4:	edc1 7a00 	vstr	s15, [r1]
90016ac8:	4770      	bx	lr
90016aca:	bf00      	nop
90016acc:	24039894 	.word	0x24039894
90016ad0:	38d1b717 	.word	0x38d1b717

90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90016ad4:	4b0a      	ldr	r3, [pc, #40]	; (90016b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90016ad6:	460a      	mov	r2, r1
90016ad8:	b510      	push	{r4, lr}
90016ada:	781b      	ldrb	r3, [r3, #0]
90016adc:	2b01      	cmp	r3, #1
90016ade:	d10d      	bne.n	90016afc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90016ae0:	8881      	ldrh	r1, [r0, #4]
90016ae2:	8803      	ldrh	r3, [r0, #0]
90016ae4:	440b      	add	r3, r1
90016ae6:	4601      	mov	r1, r0
90016ae8:	3b01      	subs	r3, #1
90016aea:	f821 3b02 	strh.w	r3, [r1], #2
90016aee:	f7ff ffc3 	bl	90016a78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90016af2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016af6:	88c2      	ldrh	r2, [r0, #6]
90016af8:	80c3      	strh	r3, [r0, #6]
90016afa:	8082      	strh	r2, [r0, #4]
90016afc:	bd10      	pop	{r4, pc}
90016afe:	bf00      	nop
90016b00:	24039894 	.word	0x24039894

90016b04 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90016b04:	4770      	bx	lr
	...

90016b08 <_ZN8touchgfx11Application13requestRedrawEv>:
90016b08:	4b06      	ldr	r3, [pc, #24]	; (90016b24 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90016b0a:	2100      	movs	r1, #0
90016b0c:	f9b3 2000 	ldrsh.w	r2, [r3]
90016b10:	4b05      	ldr	r3, [pc, #20]	; (90016b28 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90016b12:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
90016b16:	f9b3 3000 	ldrsh.w	r3, [r3]
90016b1a:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
90016b1e:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
90016b22:	4770      	bx	lr
90016b24:	24039890 	.word	0x24039890
90016b28:	24039892 	.word	0x24039892

90016b2c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90016b2c:	4b03      	ldr	r3, [pc, #12]	; (90016b3c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90016b2e:	6818      	ldr	r0, [r3, #0]
90016b30:	b110      	cbz	r0, 90016b38 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90016b32:	6803      	ldr	r3, [r0, #0]
90016b34:	699b      	ldr	r3, [r3, #24]
90016b36:	4718      	bx	r3
90016b38:	4770      	bx	lr
90016b3a:	bf00      	nop
90016b3c:	240398e0 	.word	0x240398e0

90016b40 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90016b40:	4770      	bx	lr
	...

90016b44 <_ZN8touchgfx11Application4drawEv>:
90016b44:	4b09      	ldr	r3, [pc, #36]	; (90016b6c <_ZN8touchgfx11Application4drawEv+0x28>)
90016b46:	b507      	push	{r0, r1, r2, lr}
90016b48:	f9b3 2000 	ldrsh.w	r2, [r3]
90016b4c:	2100      	movs	r1, #0
90016b4e:	4b08      	ldr	r3, [pc, #32]	; (90016b70 <_ZN8touchgfx11Application4drawEv+0x2c>)
90016b50:	9100      	str	r1, [sp, #0]
90016b52:	4669      	mov	r1, sp
90016b54:	f9b3 3000 	ldrsh.w	r3, [r3]
90016b58:	f8ad 2004 	strh.w	r2, [sp, #4]
90016b5c:	f8ad 3006 	strh.w	r3, [sp, #6]
90016b60:	6803      	ldr	r3, [r0, #0]
90016b62:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90016b64:	4798      	blx	r3
90016b66:	b003      	add	sp, #12
90016b68:	f85d fb04 	ldr.w	pc, [sp], #4
90016b6c:	24039890 	.word	0x24039890
90016b70:	24039892 	.word	0x24039892

90016b74 <_ZN8touchgfx11Application10invalidateEv>:
90016b74:	4b09      	ldr	r3, [pc, #36]	; (90016b9c <_ZN8touchgfx11Application10invalidateEv+0x28>)
90016b76:	b082      	sub	sp, #8
90016b78:	2100      	movs	r1, #0
90016b7a:	f9b3 2000 	ldrsh.w	r2, [r3]
90016b7e:	4b08      	ldr	r3, [pc, #32]	; (90016ba0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90016b80:	f8ad 2004 	strh.w	r2, [sp, #4]
90016b84:	aa02      	add	r2, sp, #8
90016b86:	f9b3 3000 	ldrsh.w	r3, [r3]
90016b8a:	9100      	str	r1, [sp, #0]
90016b8c:	f8ad 3006 	strh.w	r3, [sp, #6]
90016b90:	6803      	ldr	r3, [r0, #0]
90016b92:	e912 0006 	ldmdb	r2, {r1, r2}
90016b96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90016b98:	b002      	add	sp, #8
90016b9a:	4718      	bx	r3
90016b9c:	24039890 	.word	0x24039890
90016ba0:	24039892 	.word	0x24039892

90016ba4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90016ba4:	4b03      	ldr	r3, [pc, #12]	; (90016bb4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90016ba6:	6818      	ldr	r0, [r3, #0]
90016ba8:	b110      	cbz	r0, 90016bb0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90016baa:	6803      	ldr	r3, [r0, #0]
90016bac:	69db      	ldr	r3, [r3, #28]
90016bae:	4718      	bx	r3
90016bb0:	4770      	bx	lr
90016bb2:	bf00      	nop
90016bb4:	240398e0 	.word	0x240398e0

90016bb8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90016bb8:	4b03      	ldr	r3, [pc, #12]	; (90016bc8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90016bba:	6818      	ldr	r0, [r3, #0]
90016bbc:	b110      	cbz	r0, 90016bc4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90016bbe:	6803      	ldr	r3, [r0, #0]
90016bc0:	6a1b      	ldr	r3, [r3, #32]
90016bc2:	4718      	bx	r3
90016bc4:	4770      	bx	lr
90016bc6:	bf00      	nop
90016bc8:	240398e0 	.word	0x240398e0

90016bcc <_ZN8touchgfx11Application16clearCachedAreasEv>:
90016bcc:	2300      	movs	r3, #0
90016bce:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
90016bd2:	4770      	bx	lr

90016bd4 <_ZN8touchgfx11Application14handleKeyEventEh>:
90016bd4:	4b03      	ldr	r3, [pc, #12]	; (90016be4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90016bd6:	6818      	ldr	r0, [r3, #0]
90016bd8:	b110      	cbz	r0, 90016be0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90016bda:	6803      	ldr	r3, [r0, #0]
90016bdc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90016bde:	4718      	bx	r3
90016be0:	4770      	bx	lr
90016be2:	bf00      	nop
90016be4:	240398e0 	.word	0x240398e0

90016be8 <_ZN8touchgfx11ApplicationD1Ev>:
90016be8:	4770      	bx	lr

90016bea <_ZN8touchgfx11ApplicationD0Ev>:
90016bea:	b510      	push	{r4, lr}
90016bec:	4604      	mov	r4, r0
90016bee:	f44f 719e 	mov.w	r1, #316	; 0x13c
90016bf2:	f011 fa1f 	bl	90028034 <_ZdlPvj>
90016bf6:	4620      	mov	r0, r4
90016bf8:	bd10      	pop	{r4, pc}

90016bfa <_ZNK8touchgfx4Rect9intersectERKS0_>:
90016bfa:	b510      	push	{r4, lr}
90016bfc:	f9b1 4000 	ldrsh.w	r4, [r1]
90016c00:	888a      	ldrh	r2, [r1, #4]
90016c02:	f9b0 3000 	ldrsh.w	r3, [r0]
90016c06:	4422      	add	r2, r4
90016c08:	b212      	sxth	r2, r2
90016c0a:	4293      	cmp	r3, r2
90016c0c:	da15      	bge.n	90016c3a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016c0e:	8882      	ldrh	r2, [r0, #4]
90016c10:	4413      	add	r3, r2
90016c12:	b21b      	sxth	r3, r3
90016c14:	429c      	cmp	r4, r3
90016c16:	da10      	bge.n	90016c3a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016c18:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016c1c:	88c9      	ldrh	r1, [r1, #6]
90016c1e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016c22:	4419      	add	r1, r3
90016c24:	b209      	sxth	r1, r1
90016c26:	428a      	cmp	r2, r1
90016c28:	da07      	bge.n	90016c3a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016c2a:	88c0      	ldrh	r0, [r0, #6]
90016c2c:	4410      	add	r0, r2
90016c2e:	b200      	sxth	r0, r0
90016c30:	4283      	cmp	r3, r0
90016c32:	bfac      	ite	ge
90016c34:	2000      	movge	r0, #0
90016c36:	2001      	movlt	r0, #1
90016c38:	bd10      	pop	{r4, pc}
90016c3a:	2000      	movs	r0, #0
90016c3c:	e7fc      	b.n	90016c38 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90016c3e <_ZN8touchgfx4Rect10restrictToEss>:
90016c3e:	f9b0 3000 	ldrsh.w	r3, [r0]
90016c42:	2b00      	cmp	r3, #0
90016c44:	b510      	push	{r4, lr}
90016c46:	da04      	bge.n	90016c52 <_ZN8touchgfx4Rect10restrictToEss+0x14>
90016c48:	8884      	ldrh	r4, [r0, #4]
90016c4a:	4423      	add	r3, r4
90016c4c:	8083      	strh	r3, [r0, #4]
90016c4e:	2300      	movs	r3, #0
90016c50:	8003      	strh	r3, [r0, #0]
90016c52:	f9b0 4000 	ldrsh.w	r4, [r0]
90016c56:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016c5a:	1b09      	subs	r1, r1, r4
90016c5c:	428b      	cmp	r3, r1
90016c5e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90016c62:	bfc8      	it	gt
90016c64:	8081      	strhgt	r1, [r0, #4]
90016c66:	2b00      	cmp	r3, #0
90016c68:	da04      	bge.n	90016c74 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90016c6a:	88c1      	ldrh	r1, [r0, #6]
90016c6c:	440b      	add	r3, r1
90016c6e:	80c3      	strh	r3, [r0, #6]
90016c70:	2300      	movs	r3, #0
90016c72:	8043      	strh	r3, [r0, #2]
90016c74:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90016c78:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90016c7c:	1a52      	subs	r2, r2, r1
90016c7e:	4293      	cmp	r3, r2
90016c80:	bfc8      	it	gt
90016c82:	80c2      	strhgt	r2, [r0, #6]
90016c84:	bd10      	pop	{r4, pc}
	...

90016c88 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90016c88:	4b10      	ldr	r3, [pc, #64]	; (90016ccc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90016c8a:	b510      	push	{r4, lr}
90016c8c:	460c      	mov	r4, r1
90016c8e:	f9b3 2000 	ldrsh.w	r2, [r3]
90016c92:	4b0f      	ldr	r3, [pc, #60]	; (90016cd0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90016c94:	4620      	mov	r0, r4
90016c96:	f9b3 1000 	ldrsh.w	r1, [r3]
90016c9a:	f7ff ffd0 	bl	90016c3e <_ZN8touchgfx4Rect10restrictToEss>
90016c9e:	4b0d      	ldr	r3, [pc, #52]	; (90016cd4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90016ca0:	6818      	ldr	r0, [r3, #0]
90016ca2:	b190      	cbz	r0, 90016cca <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90016ca4:	6803      	ldr	r3, [r0, #0]
90016ca6:	4621      	mov	r1, r4
90016ca8:	689b      	ldr	r3, [r3, #8]
90016caa:	4798      	blx	r3
90016cac:	4b0a      	ldr	r3, [pc, #40]	; (90016cd8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90016cae:	6818      	ldr	r0, [r3, #0]
90016cb0:	b118      	cbz	r0, 90016cba <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90016cb2:	6803      	ldr	r3, [r0, #0]
90016cb4:	4621      	mov	r1, r4
90016cb6:	689b      	ldr	r3, [r3, #8]
90016cb8:	4798      	blx	r3
90016cba:	4b08      	ldr	r3, [pc, #32]	; (90016cdc <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90016cbc:	4621      	mov	r1, r4
90016cbe:	6818      	ldr	r0, [r3, #0]
90016cc0:	6803      	ldr	r3, [r0, #0]
90016cc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90016cc6:	69db      	ldr	r3, [r3, #28]
90016cc8:	4718      	bx	r3
90016cca:	bd10      	pop	{r4, pc}
90016ccc:	24039892 	.word	0x24039892
90016cd0:	24039890 	.word	0x24039890
90016cd4:	240398e0 	.word	0x240398e0
90016cd8:	240398dc 	.word	0x240398dc
90016cdc:	2403989c 	.word	0x2403989c

90016ce0 <_ZNK8touchgfx4Rect8includesERKS0_>:
90016ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016ce2:	4606      	mov	r6, r0
90016ce4:	4608      	mov	r0, r1
90016ce6:	460f      	mov	r7, r1
90016ce8:	f7fa fdd5 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
90016cec:	b9e8      	cbnz	r0, 90016d2a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016cee:	f9b7 5000 	ldrsh.w	r5, [r7]
90016cf2:	f9b6 4000 	ldrsh.w	r4, [r6]
90016cf6:	42a5      	cmp	r5, r4
90016cf8:	db17      	blt.n	90016d2a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016cfa:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90016cfe:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90016d02:	429a      	cmp	r2, r3
90016d04:	db11      	blt.n	90016d2a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016d06:	88b9      	ldrh	r1, [r7, #4]
90016d08:	440d      	add	r5, r1
90016d0a:	88b1      	ldrh	r1, [r6, #4]
90016d0c:	440c      	add	r4, r1
90016d0e:	b22d      	sxth	r5, r5
90016d10:	b224      	sxth	r4, r4
90016d12:	42a5      	cmp	r5, r4
90016d14:	dc09      	bgt.n	90016d2a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016d16:	88f8      	ldrh	r0, [r7, #6]
90016d18:	4410      	add	r0, r2
90016d1a:	88f2      	ldrh	r2, [r6, #6]
90016d1c:	4413      	add	r3, r2
90016d1e:	b200      	sxth	r0, r0
90016d20:	b21b      	sxth	r3, r3
90016d22:	4298      	cmp	r0, r3
90016d24:	bfcc      	ite	gt
90016d26:	2000      	movgt	r0, #0
90016d28:	2001      	movle	r0, #1
90016d2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90016d2c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90016d2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016d2e:	4604      	mov	r4, r0
90016d30:	4608      	mov	r0, r1
90016d32:	460d      	mov	r5, r1
90016d34:	f7fa fdaf 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
90016d38:	b978      	cbnz	r0, 90016d5a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90016d3a:	4620      	mov	r0, r4
90016d3c:	f7fa fdab 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
90016d40:	f9b5 6000 	ldrsh.w	r6, [r5]
90016d44:	b150      	cbz	r0, 90016d5c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90016d46:	8026      	strh	r6, [r4, #0]
90016d48:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90016d4c:	8063      	strh	r3, [r4, #2]
90016d4e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90016d52:	80a3      	strh	r3, [r4, #4]
90016d54:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90016d58:	80e3      	strh	r3, [r4, #6]
90016d5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016d5c:	f9b4 1000 	ldrsh.w	r1, [r4]
90016d60:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016d64:	42b1      	cmp	r1, r6
90016d66:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90016d6a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90016d6e:	460f      	mov	r7, r1
90016d70:	88ed      	ldrh	r5, [r5, #6]
90016d72:	bfa8      	it	ge
90016d74:	4637      	movge	r7, r6
90016d76:	4293      	cmp	r3, r2
90016d78:	4618      	mov	r0, r3
90016d7a:	4466      	add	r6, ip
90016d7c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90016d80:	bfa8      	it	ge
90016d82:	4610      	movge	r0, r2
90016d84:	442a      	add	r2, r5
90016d86:	88e5      	ldrh	r5, [r4, #6]
90016d88:	4461      	add	r1, ip
90016d8a:	b236      	sxth	r6, r6
90016d8c:	8027      	strh	r7, [r4, #0]
90016d8e:	442b      	add	r3, r5
90016d90:	b209      	sxth	r1, r1
90016d92:	b212      	sxth	r2, r2
90016d94:	8060      	strh	r0, [r4, #2]
90016d96:	b21b      	sxth	r3, r3
90016d98:	428e      	cmp	r6, r1
90016d9a:	bfac      	ite	ge
90016d9c:	ebc7 0106 	rsbge	r1, r7, r6
90016da0:	ebc7 0101 	rsblt	r1, r7, r1
90016da4:	429a      	cmp	r2, r3
90016da6:	bfac      	ite	ge
90016da8:	ebc0 0202 	rsbge	r2, r0, r2
90016dac:	ebc0 0203 	rsblt	r2, r0, r3
90016db0:	80a1      	strh	r1, [r4, #4]
90016db2:	80e2      	strh	r2, [r4, #6]
90016db4:	e7d1      	b.n	90016d5a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90016db8 <_ZN8touchgfx11Application11getInstanceEv>:
90016db8:	4b01      	ldr	r3, [pc, #4]	; (90016dc0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90016dba:	6818      	ldr	r0, [r3, #0]
90016dbc:	4770      	bx	lr
90016dbe:	bf00      	nop
90016dc0:	240398f0 	.word	0x240398f0

90016dc4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
90016dc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016dc6:	4b10      	ldr	r3, [pc, #64]	; (90016e08 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
90016dc8:	4605      	mov	r5, r0
90016dca:	781b      	ldrb	r3, [r3, #0]
90016dcc:	b1d3      	cbz	r3, 90016e04 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
90016dce:	4b0f      	ldr	r3, [pc, #60]	; (90016e0c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
90016dd0:	f100 06ee 	add.w	r6, r0, #238	; 0xee
90016dd4:	4f0e      	ldr	r7, [pc, #56]	; (90016e10 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
90016dd6:	881c      	ldrh	r4, [r3, #0]
90016dd8:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
90016ddc:	42a3      	cmp	r3, r4
90016dde:	d90e      	bls.n	90016dfe <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
90016de0:	683b      	ldr	r3, [r7, #0]
90016de2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90016de6:	b10a      	cbz	r2, 90016dec <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
90016de8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90016dea:	b900      	cbnz	r0, 90016dee <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
90016dec:	6898      	ldr	r0, [r3, #8]
90016dee:	6803      	ldr	r3, [r0, #0]
90016df0:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
90016df4:	3401      	adds	r4, #1
90016df6:	69db      	ldr	r3, [r3, #28]
90016df8:	4798      	blx	r3
90016dfa:	b2a4      	uxth	r4, r4
90016dfc:	e7ec      	b.n	90016dd8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
90016dfe:	2300      	movs	r3, #0
90016e00:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
90016e04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016e06:	bf00      	nop
90016e08:	2403989a 	.word	0x2403989a
90016e0c:	24000080 	.word	0x24000080
90016e10:	2403989c 	.word	0x2403989c

90016e14 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90016e14:	2300      	movs	r3, #0
90016e16:	b510      	push	{r4, lr}
90016e18:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
90016e1c:	4604      	mov	r4, r0
90016e1e:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90016e22:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90016e26:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90016e2a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
90016e2e:	429a      	cmp	r2, r3
90016e30:	d90e      	bls.n	90016e50 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
90016e32:	18e2      	adds	r2, r4, r3
90016e34:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
90016e38:	b122      	cbz	r2, 90016e44 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90016e3a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90016e3e:	6803      	ldr	r3, [r0, #0]
90016e40:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90016e42:	4798      	blx	r3
90016e44:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90016e48:	3301      	adds	r3, #1
90016e4a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90016e4e:	e7ea      	b.n	90016e26 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90016e50:	bd10      	pop	{r4, pc}

90016e52 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90016e52:	2300      	movs	r3, #0
90016e54:	f100 0284 	add.w	r2, r0, #132	; 0x84
90016e58:	30a4      	adds	r0, #164	; 0xa4
90016e5a:	f820 3c24 	strh.w	r3, [r0, #-36]
90016e5e:	f802 3b01 	strb.w	r3, [r2], #1
90016e62:	4282      	cmp	r2, r0
90016e64:	d1fb      	bne.n	90016e5e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90016e66:	4770      	bx	lr

90016e68 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90016e68:	b570      	push	{r4, r5, r6, lr}
90016e6a:	4c0b      	ldr	r4, [pc, #44]	; (90016e98 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90016e6c:	4605      	mov	r5, r0
90016e6e:	460e      	mov	r6, r1
90016e70:	6820      	ldr	r0, [r4, #0]
90016e72:	b110      	cbz	r0, 90016e7a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90016e74:	6803      	ldr	r3, [r0, #0]
90016e76:	695b      	ldr	r3, [r3, #20]
90016e78:	4798      	blx	r3
90016e7a:	1d28      	adds	r0, r5, #4
90016e7c:	f7ff ffe9 	bl	90016e52 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90016e80:	6026      	str	r6, [r4, #0]
90016e82:	6833      	ldr	r3, [r6, #0]
90016e84:	4630      	mov	r0, r6
90016e86:	68db      	ldr	r3, [r3, #12]
90016e88:	4798      	blx	r3
90016e8a:	682b      	ldr	r3, [r5, #0]
90016e8c:	4628      	mov	r0, r5
90016e8e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90016e90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016e94:	4718      	bx	r3
90016e96:	bf00      	nop
90016e98:	240398e0 	.word	0x240398e0

90016e9c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90016e9c:	2300      	movs	r3, #0
90016e9e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
90016ea2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
90016ea6:	461a      	mov	r2, r3
90016ea8:	b5f0      	push	{r4, r5, r6, r7, lr}
90016eaa:	461c      	mov	r4, r3
90016eac:	461d      	mov	r5, r3
90016eae:	459c      	cmp	ip, r3
90016eb0:	dd1a      	ble.n	90016ee8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90016eb2:	18c6      	adds	r6, r0, r3
90016eb4:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
90016eb8:	b16e      	cbz	r6, 90016ed6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90016eba:	429a      	cmp	r2, r3
90016ebc:	d008      	beq.n	90016ed0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90016ebe:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90016ec2:	fa1f fe82 	uxth.w	lr, r2
90016ec6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90016eca:	1887      	adds	r7, r0, r2
90016ecc:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
90016ed0:	3201      	adds	r2, #1
90016ed2:	3301      	adds	r3, #1
90016ed4:	e7eb      	b.n	90016eae <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90016ed6:	4299      	cmp	r1, r3
90016ed8:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
90016edc:	bfa8      	it	ge
90016ede:	3501      	addge	r5, #1
90016ee0:	429e      	cmp	r6, r3
90016ee2:	bfc8      	it	gt
90016ee4:	3401      	addgt	r4, #1
90016ee6:	e7f4      	b.n	90016ed2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90016ee8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
90016eec:	1b49      	subs	r1, r1, r5
90016eee:	1b1b      	subs	r3, r3, r4
90016ef0:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
90016ef4:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90016ef8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90016efc:	4293      	cmp	r3, r2
90016efe:	dd03      	ble.n	90016f08 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90016f00:	3b01      	subs	r3, #1
90016f02:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
90016f06:	e7f7      	b.n	90016ef8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90016f08:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90016f0c <_ZN8touchgfx11Application15handleTickEventEv>:
90016f0c:	b570      	push	{r4, r5, r6, lr}
90016f0e:	4d16      	ldr	r5, [pc, #88]	; (90016f68 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90016f10:	4604      	mov	r4, r0
90016f12:	6828      	ldr	r0, [r5, #0]
90016f14:	b140      	cbz	r0, 90016f28 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90016f16:	7a03      	ldrb	r3, [r0, #8]
90016f18:	b933      	cbnz	r3, 90016f28 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90016f1a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
90016f1e:	6803      	ldr	r3, [r0, #0]
90016f20:	689b      	ldr	r3, [r3, #8]
90016f22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016f26:	4718      	bx	r3
90016f28:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
90016f2c:	4e0f      	ldr	r6, [pc, #60]	; (90016f6c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
90016f2e:	b973      	cbnz	r3, 90016f4e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90016f30:	b168      	cbz	r0, 90016f4e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90016f32:	7a03      	ldrb	r3, [r0, #8]
90016f34:	b15b      	cbz	r3, 90016f4e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90016f36:	6830      	ldr	r0, [r6, #0]
90016f38:	b110      	cbz	r0, 90016f40 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
90016f3a:	6803      	ldr	r3, [r0, #0]
90016f3c:	691b      	ldr	r3, [r3, #16]
90016f3e:	4798      	blx	r3
90016f40:	6828      	ldr	r0, [r5, #0]
90016f42:	6803      	ldr	r3, [r0, #0]
90016f44:	68db      	ldr	r3, [r3, #12]
90016f46:	4798      	blx	r3
90016f48:	2301      	movs	r3, #1
90016f4a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
90016f4e:	3404      	adds	r4, #4
90016f50:	4620      	mov	r0, r4
90016f52:	f7ff ff5f 	bl	90016e14 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90016f56:	4620      	mov	r0, r4
90016f58:	f7ff ffa0 	bl	90016e9c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90016f5c:	6830      	ldr	r0, [r6, #0]
90016f5e:	b110      	cbz	r0, 90016f66 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90016f60:	6803      	ldr	r3, [r0, #0]
90016f62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90016f64:	e7dd      	b.n	90016f22 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90016f66:	bd70      	pop	{r4, r5, r6, pc}
90016f68:	240398e4 	.word	0x240398e4
90016f6c:	240398e0 	.word	0x240398e0

90016f70 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90016f70:	4603      	mov	r3, r0
90016f72:	f100 0140 	add.w	r1, r0, #64	; 0x40
90016f76:	2200      	movs	r2, #0
90016f78:	801a      	strh	r2, [r3, #0]
90016f7a:	3308      	adds	r3, #8
90016f7c:	f823 2c06 	strh.w	r2, [r3, #-6]
90016f80:	f823 2c04 	strh.w	r2, [r3, #-4]
90016f84:	f823 2c02 	strh.w	r2, [r3, #-2]
90016f88:	428b      	cmp	r3, r1
90016f8a:	d1f5      	bne.n	90016f78 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90016f8c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
90016f90:	4770      	bx	lr
	...

90016f94 <_ZN8touchgfx11ApplicationC1Ev>:
90016f94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016f96:	4b1d      	ldr	r3, [pc, #116]	; (9001700c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90016f98:	4606      	mov	r6, r0
90016f9a:	4604      	mov	r4, r0
90016f9c:	2500      	movs	r5, #0
90016f9e:	f846 3b04 	str.w	r3, [r6], #4
90016fa2:	22a8      	movs	r2, #168	; 0xa8
90016fa4:	2100      	movs	r1, #0
90016fa6:	4630      	mov	r0, r6
90016fa8:	f011 fafa 	bl	900285a0 <memset>
90016fac:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
90016fb0:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90016fb4:	4f16      	ldr	r7, [pc, #88]	; (90017010 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90016fb6:	f7ff ffdb 	bl	90016f70 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016fba:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90016fbe:	f7ff ffd7 	bl	90016f70 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016fc2:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
90016fc6:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
90016fca:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
90016fce:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
90016fd2:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
90016fd6:	490f      	ldr	r1, [pc, #60]	; (90017014 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90016fd8:	480f      	ldr	r0, [pc, #60]	; (90017018 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90016fda:	f010 fbdb 	bl	90027794 <CRC_Lock>
90016fde:	4b0f      	ldr	r3, [pc, #60]	; (9001701c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90016fe0:	b158      	cbz	r0, 90016ffa <_ZN8touchgfx11ApplicationC1Ev+0x66>
90016fe2:	801d      	strh	r5, [r3, #0]
90016fe4:	2300      	movs	r3, #0
90016fe6:	4a0e      	ldr	r2, [pc, #56]	; (90017020 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90016fe8:	4630      	mov	r0, r6
90016fea:	6013      	str	r3, [r2, #0]
90016fec:	4a0d      	ldr	r2, [pc, #52]	; (90017024 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90016fee:	603b      	str	r3, [r7, #0]
90016ff0:	6013      	str	r3, [r2, #0]
90016ff2:	f7ff ff2e 	bl	90016e52 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90016ff6:	4620      	mov	r0, r4
90016ff8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016ffa:	f44f 6280 	mov.w	r2, #1024	; 0x400
90016ffe:	2002      	movs	r0, #2
90017000:	801a      	strh	r2, [r3, #0]
90017002:	6038      	str	r0, [r7, #0]
90017004:	f001 fb48 	bl	90018698 <_ZN8touchgfx6Screen4drawEv>
90017008:	e7ec      	b.n	90016fe4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
9001700a:	bf00      	nop
9001700c:	9002c558 	.word	0x9002c558
90017010:	240398e0 	.word	0x240398e0
90017014:	b5e8b5cd 	.word	0xb5e8b5cd
90017018:	f407a5c2 	.word	0xf407a5c2
9001701c:	24000080 	.word	0x24000080
90017020:	240398f0 	.word	0x240398f0
90017024:	240398e4 	.word	0x240398e4

90017028 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90017028:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
9001702c:	3b01      	subs	r3, #1
9001702e:	b29b      	uxth	r3, r3
90017030:	428b      	cmp	r3, r1
90017032:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
90017036:	b510      	push	{r4, lr}
90017038:	d908      	bls.n	9001704c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
9001703a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001703e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90017042:	681a      	ldr	r2, [r3, #0]
90017044:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90017048:	685a      	ldr	r2, [r3, #4]
9001704a:	6062      	str	r2, [r4, #4]
9001704c:	bd10      	pop	{r4, pc}
	...

90017050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90017050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017054:	b08f      	sub	sp, #60	; 0x3c
90017056:	4b8f      	ldr	r3, [pc, #572]	; (90017294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90017058:	4683      	mov	fp, r0
9001705a:	ac0a      	add	r4, sp, #40	; 0x28
9001705c:	e884 0006 	stmia.w	r4, {r1, r2}
90017060:	f9b3 2000 	ldrsh.w	r2, [r3]
90017064:	4620      	mov	r0, r4
90017066:	4b8c      	ldr	r3, [pc, #560]	; (90017298 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90017068:	f9b3 1000 	ldrsh.w	r1, [r3]
9001706c:	f7ff fde7 	bl	90016c3e <_ZN8touchgfx4Rect10restrictToEss>
90017070:	4620      	mov	r0, r4
90017072:	f7fa fc10 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
90017076:	2800      	cmp	r0, #0
90017078:	d16a      	bne.n	90017150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001707a:	9403      	str	r4, [sp, #12]
9001707c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90017080:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90017084:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90017088:	9301      	str	r3, [sp, #4]
9001708a:	35a4      	adds	r5, #164	; 0xa4
9001708c:	b15c      	cbz	r4, 900170a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
9001708e:	4629      	mov	r1, r5
90017090:	9803      	ldr	r0, [sp, #12]
90017092:	f7ff fe25 	bl	90016ce0 <_ZNK8touchgfx4Rect8includesERKS0_>
90017096:	3c01      	subs	r4, #1
90017098:	b118      	cbz	r0, 900170a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
9001709a:	b2a1      	uxth	r1, r4
9001709c:	9801      	ldr	r0, [sp, #4]
9001709e:	f7ff ffc3 	bl	90017028 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900170a2:	3d08      	subs	r5, #8
900170a4:	e7f2      	b.n	9001708c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
900170a6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
900170aa:	f10a 33ff 	add.w	r3, sl, #4294967295
900170ae:	f8cd a010 	str.w	sl, [sp, #16]
900170b2:	9302      	str	r3, [sp, #8]
900170b4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900170b8:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
900170bc:	9306      	str	r3, [sp, #24]
900170be:	445c      	add	r4, fp
900170c0:	2500      	movs	r5, #0
900170c2:	4626      	mov	r6, r4
900170c4:	f8cd a014 	str.w	sl, [sp, #20]
900170c8:	462f      	mov	r7, r5
900170ca:	9b05      	ldr	r3, [sp, #20]
900170cc:	2b00      	cmp	r3, #0
900170ce:	d073      	beq.n	900171b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
900170d0:	9903      	ldr	r1, [sp, #12]
900170d2:	4630      	mov	r0, r6
900170d4:	f7ff fd91 	bl	90016bfa <_ZNK8touchgfx4Rect9intersectERKS0_>
900170d8:	b350      	cbz	r0, 90017130 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
900170da:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
900170de:	f9b6 c000 	ldrsh.w	ip, [r6]
900170e2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
900170e6:	45e6      	cmp	lr, ip
900170e8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
900170ec:	db33      	blt.n	90017156 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900170ee:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
900170f2:	88b3      	ldrh	r3, [r6, #4]
900170f4:	4472      	add	r2, lr
900170f6:	4463      	add	r3, ip
900170f8:	b212      	sxth	r2, r2
900170fa:	b21b      	sxth	r3, r3
900170fc:	429a      	cmp	r2, r3
900170fe:	dc2a      	bgt.n	90017156 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90017100:	fa1f f289 	uxth.w	r2, r9
90017104:	88f3      	ldrh	r3, [r6, #6]
90017106:	45c8      	cmp	r8, r9
90017108:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
9001710c:	4413      	add	r3, r2
9001710e:	fa1f fc88 	uxth.w	ip, r8
90017112:	b29b      	uxth	r3, r3
90017114:	fa0f fe83 	sxth.w	lr, r3
90017118:	db0f      	blt.n	9001713a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
9001711a:	eba3 030c 	sub.w	r3, r3, ip
9001711e:	1ac9      	subs	r1, r1, r3
90017120:	b209      	sxth	r1, r1
90017122:	2900      	cmp	r1, #0
90017124:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90017128:	dd12      	ble.n	90017150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001712a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
9001712e:	4605      	mov	r5, r0
90017130:	9b05      	ldr	r3, [sp, #20]
90017132:	3e08      	subs	r6, #8
90017134:	3b01      	subs	r3, #1
90017136:	9305      	str	r3, [sp, #20]
90017138:	e7c7      	b.n	900170ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
9001713a:	4461      	add	r1, ip
9001713c:	b209      	sxth	r1, r1
9001713e:	4571      	cmp	r1, lr
90017140:	dc38      	bgt.n	900171b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90017142:	eba2 020c 	sub.w	r2, r2, ip
90017146:	b212      	sxth	r2, r2
90017148:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001714c:	2a00      	cmp	r2, #0
9001714e:	dcee      	bgt.n	9001712e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90017150:	b00f      	add	sp, #60	; 0x3c
90017152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017156:	45c8      	cmp	r8, r9
90017158:	db2c      	blt.n	900171b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001715a:	88f3      	ldrh	r3, [r6, #6]
9001715c:	4499      	add	r9, r3
9001715e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
90017162:	4498      	add	r8, r3
90017164:	fa0f f989 	sxth.w	r9, r9
90017168:	fa0f f888 	sxth.w	r8, r8
9001716c:	45c1      	cmp	r9, r8
9001716e:	db21      	blt.n	900171b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90017170:	fa1f f28c 	uxth.w	r2, ip
90017174:	88b3      	ldrh	r3, [r6, #4]
90017176:	45e6      	cmp	lr, ip
90017178:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001717c:	4413      	add	r3, r2
9001717e:	fa1f f88e 	uxth.w	r8, lr
90017182:	b29b      	uxth	r3, r3
90017184:	fa0f f983 	sxth.w	r9, r3
90017188:	db0a      	blt.n	900171a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
9001718a:	eba3 0308 	sub.w	r3, r3, r8
9001718e:	1ac9      	subs	r1, r1, r3
90017190:	b209      	sxth	r1, r1
90017192:	2900      	cmp	r1, #0
90017194:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
90017198:	ddda      	ble.n	90017150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001719a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001719e:	e7c6      	b.n	9001712e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
900171a0:	4441      	add	r1, r8
900171a2:	b209      	sxth	r1, r1
900171a4:	4549      	cmp	r1, r9
900171a6:	dc05      	bgt.n	900171b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900171a8:	eba2 0208 	sub.w	r2, r2, r8
900171ac:	b212      	sxth	r2, r2
900171ae:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
900171b2:	e7cb      	b.n	9001714c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
900171b4:	4607      	mov	r7, r0
900171b6:	e7bb      	b.n	90017130 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
900171b8:	2d00      	cmp	r5, #0
900171ba:	d181      	bne.n	900170c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
900171bc:	2f00      	cmp	r7, #0
900171be:	f000 81dd 	beq.w	9001757c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900171c2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
900171c6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
900171ca:	b2b3      	uxth	r3, r6
900171cc:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
900171d0:	9305      	str	r3, [sp, #20]
900171d2:	9a05      	ldr	r2, [sp, #20]
900171d4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
900171d8:	4413      	add	r3, r2
900171da:	b2ba      	uxth	r2, r7
900171dc:	4492      	add	sl, r2
900171de:	b29b      	uxth	r3, r3
900171e0:	fa1f fa8a 	uxth.w	sl, sl
900171e4:	fa0f f883 	sxth.w	r8, r3
900171e8:	fa0f f98a 	sxth.w	r9, sl
900171ec:	e9cd 2307 	strd	r2, r3, [sp, #28]
900171f0:	9b04      	ldr	r3, [sp, #16]
900171f2:	2b00      	cmp	r3, #0
900171f4:	d052      	beq.n	9001729c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
900171f6:	9903      	ldr	r1, [sp, #12]
900171f8:	4620      	mov	r0, r4
900171fa:	f7ff fcfe 	bl	90016bfa <_ZNK8touchgfx4Rect9intersectERKS0_>
900171fe:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90017202:	b1c0      	cbz	r0, 90017236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90017204:	f9b4 e000 	ldrsh.w	lr, [r4]
90017208:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001720c:	4576      	cmp	r6, lr
9001720e:	dc22      	bgt.n	90017256 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90017210:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90017214:	44f4      	add	ip, lr
90017216:	fa0f fc8c 	sxth.w	ip, ip
9001721a:	45e0      	cmp	r8, ip
9001721c:	db1b      	blt.n	90017256 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001721e:	428f      	cmp	r7, r1
90017220:	fa1f fc81 	uxth.w	ip, r1
90017224:	88e1      	ldrh	r1, [r4, #6]
90017226:	dc0d      	bgt.n	90017244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90017228:	ebaa 0c0c 	sub.w	ip, sl, ip
9001722c:	f8a4 9002 	strh.w	r9, [r4, #2]
90017230:	eba1 010c 	sub.w	r1, r1, ip
90017234:	80e1      	strh	r1, [r4, #6]
90017236:	4628      	mov	r0, r5
90017238:	9904      	ldr	r1, [sp, #16]
9001723a:	3c08      	subs	r4, #8
9001723c:	4605      	mov	r5, r0
9001723e:	3901      	subs	r1, #1
90017240:	9104      	str	r1, [sp, #16]
90017242:	e7d3      	b.n	900171ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90017244:	4461      	add	r1, ip
90017246:	b209      	sxth	r1, r1
90017248:	4549      	cmp	r1, r9
9001724a:	dcf5      	bgt.n	90017238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001724c:	eba2 0c0c 	sub.w	ip, r2, ip
90017250:	f8a4 c006 	strh.w	ip, [r4, #6]
90017254:	e7ef      	b.n	90017236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90017256:	428f      	cmp	r7, r1
90017258:	dcee      	bgt.n	90017238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001725a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001725e:	4461      	add	r1, ip
90017260:	b209      	sxth	r1, r1
90017262:	4589      	cmp	r9, r1
90017264:	dbe8      	blt.n	90017238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90017266:	4576      	cmp	r6, lr
90017268:	fa1f fc8e 	uxth.w	ip, lr
9001726c:	88a1      	ldrh	r1, [r4, #4]
9001726e:	dc07      	bgt.n	90017280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90017270:	eba3 0c0c 	sub.w	ip, r3, ip
90017274:	f8a4 8000 	strh.w	r8, [r4]
90017278:	eba1 010c 	sub.w	r1, r1, ip
9001727c:	80a1      	strh	r1, [r4, #4]
9001727e:	e7da      	b.n	90017236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90017280:	4461      	add	r1, ip
90017282:	b209      	sxth	r1, r1
90017284:	4588      	cmp	r8, r1
90017286:	dbd7      	blt.n	90017238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90017288:	9905      	ldr	r1, [sp, #20]
9001728a:	eba1 0c0c 	sub.w	ip, r1, ip
9001728e:	f8a4 c004 	strh.w	ip, [r4, #4]
90017292:	e7d0      	b.n	90017236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90017294:	24039892 	.word	0x24039892
90017298:	24039890 	.word	0x24039890
9001729c:	2d00      	cmp	r5, #0
9001729e:	f000 816d 	beq.w	9001757c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900172a2:	9b06      	ldr	r3, [sp, #24]
900172a4:	445b      	add	r3, fp
900172a6:	461c      	mov	r4, r3
900172a8:	9b02      	ldr	r3, [sp, #8]
900172aa:	3301      	adds	r3, #1
900172ac:	f000 8166 	beq.w	9001757c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900172b0:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
900172b4:	9803      	ldr	r0, [sp, #12]
900172b6:	4629      	mov	r1, r5
900172b8:	f7ff fd12 	bl	90016ce0 <_ZNK8touchgfx4Rect8includesERKS0_>
900172bc:	b120      	cbz	r0, 900172c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
900172be:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900172c2:	9801      	ldr	r0, [sp, #4]
900172c4:	f7ff feb0 	bl	90017028 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900172c8:	9903      	ldr	r1, [sp, #12]
900172ca:	4628      	mov	r0, r5
900172cc:	f7ff fc95 	bl	90016bfa <_ZNK8touchgfx4Rect9intersectERKS0_>
900172d0:	2800      	cmp	r0, #0
900172d2:	f000 809c 	beq.w	9001740e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
900172d6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
900172da:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
900172de:	fa1f f189 	uxth.w	r1, r9
900172e2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
900172e6:	9309      	str	r3, [sp, #36]	; 0x24
900172e8:	eb01 0c03 	add.w	ip, r1, r3
900172ec:	b283      	uxth	r3, r0
900172ee:	4548      	cmp	r0, r9
900172f0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
900172f4:	fa1f fa8c 	uxth.w	sl, ip
900172f8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
900172fc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
90017300:	eb03 050c 	add.w	r5, r3, ip
90017304:	b2ad      	uxth	r5, r5
90017306:	9505      	str	r5, [sp, #20]
90017308:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
9001730c:	9504      	str	r5, [sp, #16]
9001730e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
90017312:	f340 8099 	ble.w	90017448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90017316:	1a5b      	subs	r3, r3, r1
90017318:	4596      	cmp	lr, r2
9001731a:	fa0f f08a 	sxth.w	r0, sl
9001731e:	b29b      	uxth	r3, r3
90017320:	b21e      	sxth	r6, r3
90017322:	dd2e      	ble.n	90017382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90017324:	9f02      	ldr	r7, [sp, #8]
90017326:	fa1f fe8e 	uxth.w	lr, lr
9001732a:	b292      	uxth	r2, r2
9001732c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
90017330:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90017334:	9f04      	ldr	r7, [sp, #16]
90017336:	ebae 0102 	sub.w	r1, lr, r2
9001733a:	44a6      	add	lr, r4
9001733c:	1a3f      	subs	r7, r7, r0
9001733e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
90017342:	b289      	uxth	r1, r1
90017344:	4402      	add	r2, r0
90017346:	fa0f fe8e 	sxth.w	lr, lr
9001734a:	b20d      	sxth	r5, r1
9001734c:	b212      	sxth	r2, r2
9001734e:	436f      	muls	r7, r5
90017350:	ebae 0202 	sub.w	r2, lr, r2
90017354:	4372      	muls	r2, r6
90017356:	4297      	cmp	r7, r2
90017358:	db09      	blt.n	9001736e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
9001735a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
9001735e:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
90017362:	449c      	add	ip, r3
90017364:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90017368:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
9001736c:	e686      	b.n	9001707c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001736e:	4421      	add	r1, r4
90017370:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
90017374:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
90017378:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001737c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90017380:	e67c      	b.n	9001707c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90017382:	9f04      	ldr	r7, [sp, #16]
90017384:	42b8      	cmp	r0, r7
90017386:	da27      	bge.n	900173d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90017388:	9902      	ldr	r1, [sp, #8]
9001738a:	1a3f      	subs	r7, r7, r0
9001738c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
90017390:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90017394:	eb05 010e 	add.w	r1, r5, lr
90017398:	fa1f f881 	uxth.w	r8, r1
9001739c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
900173a0:	4411      	add	r1, r2
900173a2:	fa0f f988 	sxth.w	r9, r8
900173a6:	eba2 020e 	sub.w	r2, r2, lr
900173aa:	eba1 0108 	sub.w	r1, r1, r8
900173ae:	4372      	muls	r2, r6
900173b0:	b289      	uxth	r1, r1
900173b2:	fa0f f881 	sxth.w	r8, r1
900173b6:	fb08 f707 	mul.w	r7, r8, r7
900173ba:	42ba      	cmp	r2, r7
900173bc:	dc06      	bgt.n	900173cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
900173be:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
900173c2:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
900173c6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
900173ca:	e7ca      	b.n	90017362 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
900173cc:	4429      	add	r1, r5
900173ce:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
900173d2:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900173d6:	e651      	b.n	9001707c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900173d8:	9805      	ldr	r0, [sp, #20]
900173da:	2d06      	cmp	r5, #6
900173dc:	ebaa 0000 	sub.w	r0, sl, r0
900173e0:	b280      	uxth	r0, r0
900173e2:	fa0f fe80 	sxth.w	lr, r0
900173e6:	d817      	bhi.n	90017418 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
900173e8:	9b04      	ldr	r3, [sp, #16]
900173ea:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
900173ee:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
900173f2:	1c6b      	adds	r3, r5, #1
900173f4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
900173f8:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
900173fc:	9b01      	ldr	r3, [sp, #4]
900173fe:	9801      	ldr	r0, [sp, #4]
90017400:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90017404:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90017408:	805a      	strh	r2, [r3, #2]
9001740a:	809e      	strh	r6, [r3, #4]
9001740c:	80d9      	strh	r1, [r3, #6]
9001740e:	9b02      	ldr	r3, [sp, #8]
90017410:	3c08      	subs	r4, #8
90017412:	3b01      	subs	r3, #1
90017414:	9302      	str	r3, [sp, #8]
90017416:	e747      	b.n	900172a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90017418:	9a02      	ldr	r2, [sp, #8]
9001741a:	45b6      	cmp	lr, r6
9001741c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90017420:	db0d      	blt.n	9001743e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90017422:	449c      	add	ip, r3
90017424:	445a      	add	r2, fp
90017426:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001742a:	fa1f fc8c 	uxth.w	ip, ip
9001742e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
90017432:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90017436:	448c      	add	ip, r1
90017438:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
9001743c:	e61e      	b.n	9001707c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001743e:	445a      	add	r2, fp
90017440:	4484      	add	ip, r0
90017442:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
90017446:	e78f      	b.n	90017368 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90017448:	fa1f f18e 	uxth.w	r1, lr
9001744c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
90017450:	b293      	uxth	r3, r2
90017452:	4596      	cmp	lr, r2
90017454:	eb01 0806 	add.w	r8, r1, r6
90017458:	9306      	str	r3, [sp, #24]
9001745a:	fa1f f888 	uxth.w	r8, r8
9001745e:	9f06      	ldr	r7, [sp, #24]
90017460:	fa0f f388 	sxth.w	r3, r8
90017464:	9307      	str	r3, [sp, #28]
90017466:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
9001746a:	443b      	add	r3, r7
9001746c:	b29b      	uxth	r3, r3
9001746e:	9308      	str	r3, [sp, #32]
90017470:	da24      	bge.n	900174bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90017472:	9905      	ldr	r1, [sp, #20]
90017474:	eba3 0308 	sub.w	r3, r3, r8
90017478:	eba2 020e 	sub.w	r2, r2, lr
9001747c:	eba9 0000 	sub.w	r0, r9, r0
90017480:	ebaa 0401 	sub.w	r4, sl, r1
90017484:	b29b      	uxth	r3, r3
90017486:	b2a4      	uxth	r4, r4
90017488:	b219      	sxth	r1, r3
9001748a:	b225      	sxth	r5, r4
9001748c:	4348      	muls	r0, r1
9001748e:	436a      	muls	r2, r5
90017490:	4282      	cmp	r2, r0
90017492:	9a02      	ldr	r2, [sp, #8]
90017494:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90017498:	445a      	add	r2, fp
9001749a:	dc06      	bgt.n	900174aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
9001749c:	9b07      	ldr	r3, [sp, #28]
9001749e:	44a4      	add	ip, r4
900174a0:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
900174a4:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
900174a8:	e75e      	b.n	90017368 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900174aa:	9904      	ldr	r1, [sp, #16]
900174ac:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
900174b0:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
900174b4:	4433      	add	r3, r6
900174b6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900174ba:	e5df      	b.n	9001707c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900174bc:	9f06      	ldr	r7, [sp, #24]
900174be:	9b04      	ldr	r3, [sp, #16]
900174c0:	1bc9      	subs	r1, r1, r7
900174c2:	fa0f f78a 	sxth.w	r7, sl
900174c6:	b289      	uxth	r1, r1
900174c8:	429f      	cmp	r7, r3
900174ca:	fa0f fe81 	sxth.w	lr, r1
900174ce:	dd23      	ble.n	90017518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
900174d0:	9a05      	ldr	r2, [sp, #20]
900174d2:	eba9 0000 	sub.w	r0, r9, r0
900174d6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
900174da:	ebaa 0202 	sub.w	r2, sl, r2
900174de:	9d07      	ldr	r5, [sp, #28]
900174e0:	fb0e f000 	mul.w	r0, lr, r0
900174e4:	b292      	uxth	r2, r2
900174e6:	eba5 0a03 	sub.w	sl, r5, r3
900174ea:	9b02      	ldr	r3, [sp, #8]
900174ec:	b214      	sxth	r4, r2
900174ee:	00db      	lsls	r3, r3, #3
900174f0:	fb04 fa0a 	mul.w	sl, r4, sl
900174f4:	445b      	add	r3, fp
900174f6:	4550      	cmp	r0, sl
900174f8:	db03      	blt.n	90017502 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
900174fa:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
900174fe:	4494      	add	ip, r2
90017500:	e732      	b.n	90017368 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90017502:	9a04      	ldr	r2, [sp, #16]
90017504:	4431      	add	r1, r6
90017506:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
9001750a:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
9001750e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
90017512:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90017516:	e75c      	b.n	900173d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90017518:	9b08      	ldr	r3, [sp, #32]
9001751a:	2d06      	cmp	r5, #6
9001751c:	eba3 0308 	sub.w	r3, r3, r8
90017520:	b29b      	uxth	r3, r3
90017522:	b218      	sxth	r0, r3
90017524:	d813      	bhi.n	9001754e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90017526:	9b07      	ldr	r3, [sp, #28]
90017528:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
9001752c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
90017530:	1c6b      	adds	r3, r5, #1
90017532:	9901      	ldr	r1, [sp, #4]
90017534:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90017538:	9b01      	ldr	r3, [sp, #4]
9001753a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
9001753e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90017542:	805a      	strh	r2, [r3, #2]
90017544:	9a09      	ldr	r2, [sp, #36]	; 0x24
90017546:	f8a3 e006 	strh.w	lr, [r3, #6]
9001754a:	809a      	strh	r2, [r3, #4]
9001754c:	e75f      	b.n	9001740e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001754e:	9c02      	ldr	r4, [sp, #8]
90017550:	4570      	cmp	r0, lr
90017552:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90017556:	db0d      	blt.n	90017574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90017558:	4431      	add	r1, r6
9001755a:	9b06      	ldr	r3, [sp, #24]
9001755c:	445c      	add	r4, fp
9001755e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90017562:	b289      	uxth	r1, r1
90017564:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
90017568:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001756c:	4419      	add	r1, r3
9001756e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
90017572:	e583      	b.n	9001707c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90017574:	445c      	add	r4, fp
90017576:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
9001757a:	e79b      	b.n	900174b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
9001757c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90017580:	f64f 76ff 	movw	r6, #65535	; 0xffff
90017584:	1e65      	subs	r5, r4, #1
90017586:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
9001758a:	b2ad      	uxth	r5, r5
9001758c:	42b5      	cmp	r5, r6
9001758e:	d044      	beq.n	9001761a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90017590:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
90017594:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
90017598:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001759c:	4282      	cmp	r2, r0
9001759e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
900175a2:	d11f      	bne.n	900175e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900175a4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
900175a8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
900175ac:	459c      	cmp	ip, r3
900175ae:	d119      	bne.n	900175e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900175b0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
900175b4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
900175b8:	19d8      	adds	r0, r3, r7
900175ba:	b200      	sxth	r0, r0
900175bc:	4288      	cmp	r0, r1
900175be:	d109      	bne.n	900175d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
900175c0:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
900175c4:	4413      	add	r3, r2
900175c6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
900175ca:	4629      	mov	r1, r5
900175cc:	9801      	ldr	r0, [sp, #4]
900175ce:	f7ff fd2b 	bl	90017028 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900175d2:	e003      	b.n	900175dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900175d4:	4411      	add	r1, r2
900175d6:	b209      	sxth	r1, r1
900175d8:	42b9      	cmp	r1, r7
900175da:	d0f3      	beq.n	900175c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
900175dc:	3d01      	subs	r5, #1
900175de:	3c08      	subs	r4, #8
900175e0:	b2ad      	uxth	r5, r5
900175e2:	e7d3      	b.n	9001758c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900175e4:	42b9      	cmp	r1, r7
900175e6:	d1f9      	bne.n	900175dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900175e8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
900175ec:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
900175f0:	4299      	cmp	r1, r3
900175f2:	d1f3      	bne.n	900175dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900175f4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
900175f8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
900175fc:	181f      	adds	r7, r3, r0
900175fe:	b23f      	sxth	r7, r7
90017600:	42ba      	cmp	r2, r7
90017602:	d105      	bne.n	90017610 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90017604:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
90017608:	440b      	add	r3, r1
9001760a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
9001760e:	e7dc      	b.n	900175ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90017610:	440a      	add	r2, r1
90017612:	b212      	sxth	r2, r2
90017614:	4290      	cmp	r0, r2
90017616:	d1e1      	bne.n	900175dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90017618:	e7f6      	b.n	90017608 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
9001761a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
9001761e:	2e07      	cmp	r6, #7
90017620:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90017624:	d812      	bhi.n	9001764c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90017626:	1c75      	adds	r5, r6, #1
90017628:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
9001762c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
90017630:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
90017634:	9d01      	ldr	r5, [sp, #4]
90017636:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001763a:	442c      	add	r4, r5
9001763c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
90017640:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90017644:	8061      	strh	r1, [r4, #2]
90017646:	80a2      	strh	r2, [r4, #4]
90017648:	80e3      	strh	r3, [r4, #6]
9001764a:	e581      	b.n	90017150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001764c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90017650:	3e01      	subs	r6, #1
90017652:	445c      	add	r4, fp
90017654:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
90017658:	f04f 37ff 	mov.w	r7, #4294967295
9001765c:	2500      	movs	r5, #0
9001765e:	9305      	str	r3, [sp, #20]
90017660:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90017664:	1e72      	subs	r2, r6, #1
90017666:	9302      	str	r3, [sp, #8]
90017668:	4691      	mov	r9, r2
9001766a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
9001766e:	9304      	str	r3, [sp, #16]
90017670:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
90017674:	f1b9 3fff 	cmp.w	r9, #4294967295
90017678:	6818      	ldr	r0, [r3, #0]
9001767a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
9001767e:	9207      	str	r2, [sp, #28]
90017680:	bf16      	itet	ne
90017682:	9905      	ldrne	r1, [sp, #20]
90017684:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90017688:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
9001768c:	9306      	str	r3, [sp, #24]
9001768e:	f8be 1006 	ldrh.w	r1, [lr, #6]
90017692:	f8be 8004 	ldrh.w	r8, [lr, #4]
90017696:	fb18 f801 	smulbb	r8, r8, r1
9001769a:	6859      	ldr	r1, [r3, #4]
9001769c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
900176a0:	4671      	mov	r1, lr
900176a2:	a80c      	add	r0, sp, #48	; 0x30
900176a4:	f7ff fb42 	bl	90016d2c <_ZN8touchgfx4Rect11expandToFitERKS0_>
900176a8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
900176ac:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
900176b0:	f04f 0c08 	mov.w	ip, #8
900176b4:	9b04      	ldr	r3, [sp, #16]
900176b6:	9a02      	ldr	r2, [sp, #8]
900176b8:	fb10 f001 	smulbb	r0, r0, r1
900176bc:	fb02 8803 	mla	r8, r2, r3, r8
900176c0:	eba0 0108 	sub.w	r1, r0, r8
900176c4:	fb90 f0fc 	sdiv	r0, r0, ip
900176c8:	4288      	cmp	r0, r1
900176ca:	dc20      	bgt.n	9001770e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
900176cc:	4551      	cmp	r1, sl
900176ce:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
900176d2:	da03      	bge.n	900176dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
900176d4:	b1d9      	cbz	r1, 9001770e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
900176d6:	468a      	mov	sl, r1
900176d8:	464f      	mov	r7, r9
900176da:	4635      	mov	r5, r6
900176dc:	f109 39ff 	add.w	r9, r9, #4294967295
900176e0:	f119 0f02 	cmn.w	r9, #2
900176e4:	d1c6      	bne.n	90017674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
900176e6:	4616      	mov	r6, r2
900176e8:	3201      	adds	r2, #1
900176ea:	f1a4 0408 	sub.w	r4, r4, #8
900176ee:	d1b7      	bne.n	90017660 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
900176f0:	9b01      	ldr	r3, [sp, #4]
900176f2:	b2ac      	uxth	r4, r5
900176f4:	00ed      	lsls	r5, r5, #3
900176f6:	1958      	adds	r0, r3, r5
900176f8:	1c7b      	adds	r3, r7, #1
900176fa:	d10b      	bne.n	90017714 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
900176fc:	4601      	mov	r1, r0
900176fe:	9803      	ldr	r0, [sp, #12]
90017700:	f7ff fb14 	bl	90016d2c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017704:	4621      	mov	r1, r4
90017706:	9801      	ldr	r0, [sp, #4]
90017708:	f7ff fc8e 	bl	90017028 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001770c:	e4b6      	b.n	9001707c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001770e:	464f      	mov	r7, r9
90017710:	4635      	mov	r5, r6
90017712:	e7ed      	b.n	900176f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90017714:	9b01      	ldr	r3, [sp, #4]
90017716:	00ff      	lsls	r7, r7, #3
90017718:	445d      	add	r5, fp
9001771a:	19d9      	adds	r1, r3, r7
9001771c:	445f      	add	r7, fp
9001771e:	f7ff fb05 	bl	90016d2c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017722:	9b03      	ldr	r3, [sp, #12]
90017724:	cb03      	ldmia	r3!, {r0, r1}
90017726:	9b03      	ldr	r3, [sp, #12]
90017728:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
9001772c:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
90017730:	f855 0fac 	ldr.w	r0, [r5, #172]!
90017734:	6869      	ldr	r1, [r5, #4]
90017736:	c303      	stmia	r3!, {r0, r1}
90017738:	e7e4      	b.n	90017704 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
9001773a:	bf00      	nop

9001773c <_ZN8touchgfx11Application15drawCachedAreasEv>:
9001773c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017740:	f500 7698 	add.w	r6, r0, #304	; 0x130
90017744:	b09b      	sub	sp, #108	; 0x6c
90017746:	4604      	mov	r4, r0
90017748:	4630      	mov	r0, r6
9001774a:	f7fa f8a4 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
9001774e:	4605      	mov	r5, r0
90017750:	b948      	cbnz	r0, 90017766 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90017752:	6823      	ldr	r3, [r4, #0]
90017754:	4620      	mov	r0, r4
90017756:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90017758:	e896 0006 	ldmia.w	r6, {r1, r2}
9001775c:	4798      	blx	r3
9001775e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
90017762:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
90017766:	4bc5      	ldr	r3, [pc, #788]	; (90017a7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90017768:	681b      	ldr	r3, [r3, #0]
9001776a:	2b00      	cmp	r3, #0
9001776c:	d03f      	beq.n	900177ee <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001776e:	4dc4      	ldr	r5, [pc, #784]	; (90017a80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90017770:	4628      	mov	r0, r5
90017772:	f7fa f890 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
90017776:	4606      	mov	r6, r0
90017778:	2800      	cmp	r0, #0
9001777a:	d138      	bne.n	900177ee <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001777c:	4628      	mov	r0, r5
9001777e:	f7ff f94b 	bl	90016a18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90017782:	6823      	ldr	r3, [r4, #0]
90017784:	6829      	ldr	r1, [r5, #0]
90017786:	4620      	mov	r0, r4
90017788:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9001778a:	686a      	ldr	r2, [r5, #4]
9001778c:	4798      	blx	r3
9001778e:	802e      	strh	r6, [r5, #0]
90017790:	806e      	strh	r6, [r5, #2]
90017792:	80ae      	strh	r6, [r5, #4]
90017794:	80ee      	strh	r6, [r5, #6]
90017796:	f10d 0824 	add.w	r8, sp, #36	; 0x24
9001779a:	4dba      	ldr	r5, [pc, #744]	; (90017a84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
9001779c:	4640      	mov	r0, r8
9001779e:	f7ff fbe7 	bl	90016f70 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900177a2:	882e      	ldrh	r6, [r5, #0]
900177a4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
900177a8:	f104 00ac 	add.w	r0, r4, #172	; 0xac
900177ac:	4633      	mov	r3, r6
900177ae:	42bb      	cmp	r3, r7
900177b0:	d224      	bcs.n	900177fc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
900177b2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
900177b6:	2907      	cmp	r1, #7
900177b8:	d816      	bhi.n	900177e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
900177ba:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
900177be:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
900177c2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
900177c6:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
900177ca:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
900177ce:	1c4a      	adds	r2, r1, #1
900177d0:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
900177d4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
900177d8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
900177dc:	f8a2 a002 	strh.w	sl, [r2, #2]
900177e0:	f8a2 e004 	strh.w	lr, [r2, #4]
900177e4:	f8a2 c006 	strh.w	ip, [r2, #6]
900177e8:	3301      	adds	r3, #1
900177ea:	b29b      	uxth	r3, r3
900177ec:	e7df      	b.n	900177ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
900177ee:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
900177f2:	2b00      	cmp	r3, #0
900177f4:	d1cf      	bne.n	90017796 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
900177f6:	b01b      	add	sp, #108	; 0x6c
900177f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900177fc:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
90017800:	42b3      	cmp	r3, r6
90017802:	d90c      	bls.n	9001781e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90017804:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90017808:	6822      	ldr	r2, [r4, #0]
9001780a:	3601      	adds	r6, #1
9001780c:	4620      	mov	r0, r4
9001780e:	6c17      	ldr	r7, [r2, #64]	; 0x40
90017810:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
90017814:	b2b6      	uxth	r6, r6
90017816:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
9001781a:	47b8      	blx	r7
9001781c:	e7ee      	b.n	900177fc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001781e:	4a9a      	ldr	r2, [pc, #616]	; (90017a88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90017820:	6813      	ldr	r3, [r2, #0]
90017822:	4691      	mov	r9, r2
90017824:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
90017828:	2b01      	cmp	r3, #1
9001782a:	f040 80e0 	bne.w	900179ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
9001782e:	8829      	ldrh	r1, [r5, #0]
90017830:	2600      	movs	r6, #0
90017832:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90017836:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
9001783a:	33ae      	adds	r3, #174	; 0xae
9001783c:	428f      	cmp	r7, r1
9001783e:	f103 0308 	add.w	r3, r3, #8
90017842:	dd0a      	ble.n	9001785a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90017844:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90017848:	3101      	adds	r1, #1
9001784a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
9001784e:	4402      	add	r2, r0
90017850:	b212      	sxth	r2, r2
90017852:	4296      	cmp	r6, r2
90017854:	bfb8      	it	lt
90017856:	4616      	movlt	r6, r2
90017858:	e7f0      	b.n	9001783c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
9001785a:	4b8c      	ldr	r3, [pc, #560]	; (90017a8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
9001785c:	f8df 9228 	ldr.w	r9, [pc, #552]	; 90017a88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90017860:	881b      	ldrh	r3, [r3, #0]
90017862:	2b0f      	cmp	r3, #15
90017864:	bf8c      	ite	hi
90017866:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
9001786a:	f04f 0b01 	movls.w	fp, #1
9001786e:	2300      	movs	r3, #0
90017870:	e9cd 3305 	strd	r3, r3, [sp, #20]
90017874:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90017878:	f8bd 001a 	ldrh.w	r0, [sp, #26]
9001787c:	4b82      	ldr	r3, [pc, #520]	; (90017a88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001787e:	4438      	add	r0, r7
90017880:	b207      	sxth	r7, r0
90017882:	6818      	ldr	r0, [r3, #0]
90017884:	42b7      	cmp	r7, r6
90017886:	6803      	ldr	r3, [r0, #0]
90017888:	f280 8083 	bge.w	90017992 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
9001788c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
90017890:	4798      	blx	r3
90017892:	eb07 030b 	add.w	r3, r7, fp
90017896:	4298      	cmp	r0, r3
90017898:	da07      	bge.n	900178aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001789a:	42b0      	cmp	r0, r6
9001789c:	da05      	bge.n	900178aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001789e:	4287      	cmp	r7, r0
900178a0:	dd6c      	ble.n	9001797c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
900178a2:	2f00      	cmp	r7, #0
900178a4:	dd6a      	ble.n	9001797c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
900178a6:	4630      	mov	r0, r6
900178a8:	e004      	b.n	900178b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
900178aa:	4287      	cmp	r7, r0
900178ac:	dcfb      	bgt.n	900178a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
900178ae:	42b0      	cmp	r0, r6
900178b0:	bfa8      	it	ge
900178b2:	4630      	movge	r0, r6
900178b4:	4b76      	ldr	r3, [pc, #472]	; (90017a90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
900178b6:	1bc0      	subs	r0, r0, r7
900178b8:	2200      	movs	r2, #0
900178ba:	f8ad 7016 	strh.w	r7, [sp, #22]
900178be:	f9b3 3000 	ldrsh.w	r3, [r3]
900178c2:	882f      	ldrh	r7, [r5, #0]
900178c4:	f8ad 2014 	strh.w	r2, [sp, #20]
900178c8:	f8ad 3018 	strh.w	r3, [sp, #24]
900178cc:	f8ad 001a 	strh.w	r0, [sp, #26]
900178d0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
900178d4:	42bb      	cmp	r3, r7
900178d6:	d9cd      	bls.n	90017874 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
900178d8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
900178dc:	ab07      	add	r3, sp, #28
900178de:	f852 0fac 	ldr.w	r0, [r2, #172]!
900178e2:	6851      	ldr	r1, [r2, #4]
900178e4:	c303      	stmia	r3!, {r0, r1}
900178e6:	a905      	add	r1, sp, #20
900178e8:	a807      	add	r0, sp, #28
900178ea:	f7ff f986 	bl	90016bfa <_ZNK8touchgfx4Rect9intersectERKS0_>
900178ee:	2800      	cmp	r0, #0
900178f0:	d04c      	beq.n	9001798c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
900178f2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
900178f6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
900178fa:	f8bd a020 	ldrh.w	sl, [sp, #32]
900178fe:	4686      	mov	lr, r0
90017900:	4290      	cmp	r0, r2
90017902:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90017906:	4450      	add	r0, sl
90017908:	f8bd a018 	ldrh.w	sl, [sp, #24]
9001790c:	bfb8      	it	lt
9001790e:	4696      	movlt	lr, r2
90017910:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90017914:	4452      	add	r2, sl
90017916:	b280      	uxth	r0, r0
90017918:	4299      	cmp	r1, r3
9001791a:	468c      	mov	ip, r1
9001791c:	b292      	uxth	r2, r2
9001791e:	9302      	str	r3, [sp, #8]
90017920:	bfb8      	it	lt
90017922:	469c      	movlt	ip, r3
90017924:	b203      	sxth	r3, r0
90017926:	fa0f fa82 	sxth.w	sl, r2
9001792a:	f8ad e01c 	strh.w	lr, [sp, #28]
9001792e:	f8ad c01e 	strh.w	ip, [sp, #30]
90017932:	4553      	cmp	r3, sl
90017934:	bfb8      	it	lt
90017936:	4602      	movlt	r2, r0
90017938:	9b02      	ldr	r3, [sp, #8]
9001793a:	eba2 020e 	sub.w	r2, r2, lr
9001793e:	f8ad 2020 	strh.w	r2, [sp, #32]
90017942:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90017946:	4411      	add	r1, r2
90017948:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001794c:	4413      	add	r3, r2
9001794e:	b289      	uxth	r1, r1
90017950:	b29b      	uxth	r3, r3
90017952:	b208      	sxth	r0, r1
90017954:	b21a      	sxth	r2, r3
90017956:	4290      	cmp	r0, r2
90017958:	bfb8      	it	lt
9001795a:	460b      	movlt	r3, r1
9001795c:	eba3 030c 	sub.w	r3, r3, ip
90017960:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90017964:	a807      	add	r0, sp, #28
90017966:	f7f9 ff96 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
9001796a:	b920      	cbnz	r0, 90017976 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
9001796c:	6823      	ldr	r3, [r4, #0]
9001796e:	a907      	add	r1, sp, #28
90017970:	4620      	mov	r0, r4
90017972:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017974:	4798      	blx	r3
90017976:	3701      	adds	r7, #1
90017978:	b2bf      	uxth	r7, r7
9001797a:	e7a9      	b.n	900178d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
9001797c:	f8d9 0000 	ldr.w	r0, [r9]
90017980:	2101      	movs	r1, #1
90017982:	6803      	ldr	r3, [r0, #0]
90017984:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
90017988:	4798      	blx	r3
9001798a:	e773      	b.n	90017874 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
9001798c:	e9cd 0007 	strd	r0, r0, [sp, #28]
90017990:	e7e8      	b.n	90017964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90017992:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90017994:	4798      	blx	r3
90017996:	4b3f      	ldr	r3, [pc, #252]	; (90017a94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90017998:	781b      	ldrb	r3, [r3, #0]
9001799a:	2b00      	cmp	r3, #0
9001799c:	f43f af2b 	beq.w	900177f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
900179a0:	2300      	movs	r3, #0
900179a2:	f104 00ee 	add.w	r0, r4, #238	; 0xee
900179a6:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
900179aa:	882b      	ldrh	r3, [r5, #0]
900179ac:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
900179b0:	42ab      	cmp	r3, r5
900179b2:	f4bf af20 	bcs.w	900177f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
900179b6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
900179ba:	2907      	cmp	r1, #7
900179bc:	d814      	bhi.n	900179e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
900179be:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
900179c2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
900179c6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
900179ca:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
900179ce:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
900179d2:	1c4a      	adds	r2, r1, #1
900179d4:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
900179d8:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
900179dc:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
900179e0:	f8a2 c002 	strh.w	ip, [r2, #2]
900179e4:	8097      	strh	r7, [r2, #4]
900179e6:	80d6      	strh	r6, [r2, #6]
900179e8:	3301      	adds	r3, #1
900179ea:	b29b      	uxth	r3, r3
900179ec:	e7e0      	b.n	900179b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
900179ee:	2b02      	cmp	r3, #2
900179f0:	f040 8133 	bne.w	90017c5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
900179f4:	4b28      	ldr	r3, [pc, #160]	; (90017a98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
900179f6:	f104 0aac 	add.w	sl, r4, #172	; 0xac
900179fa:	781b      	ldrb	r3, [r3, #0]
900179fc:	2b01      	cmp	r3, #1
900179fe:	f000 8098 	beq.w	90017b32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90017a02:	882a      	ldrh	r2, [r5, #0]
90017a04:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
90017a08:	3201      	adds	r2, #1
90017a0a:	b292      	uxth	r2, r2
90017a0c:	2900      	cmp	r1, #0
90017a0e:	d0c2      	beq.n	90017996 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90017a10:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
90017a14:	4694      	mov	ip, r2
90017a16:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
90017a1a:	f04f 0900 	mov.w	r9, #0
90017a1e:	441e      	add	r6, r3
90017a20:	b236      	sxth	r6, r6
90017a22:	fa1f f38c 	uxth.w	r3, ip
90017a26:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90017a2a:	4299      	cmp	r1, r3
90017a2c:	f240 80be 	bls.w	90017bac <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90017a30:	4427      	add	r7, r4
90017a32:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90017a36:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
90017a3a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
90017a3e:	4283      	cmp	r3, r0
90017a40:	f340 80a0 	ble.w	90017b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90017a44:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
90017a48:	46e1      	mov	r9, ip
90017a4a:	4406      	add	r6, r0
90017a4c:	b236      	sxth	r6, r6
90017a4e:	429e      	cmp	r6, r3
90017a50:	bfa8      	it	ge
90017a52:	461e      	movge	r6, r3
90017a54:	f10c 0c01 	add.w	ip, ip, #1
90017a58:	e7e3      	b.n	90017a22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
90017a5a:	d10a      	bne.n	90017a72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
90017a5c:	4562      	cmp	r2, ip
90017a5e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
90017a62:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
90017a66:	bfb8      	it	lt
90017a68:	4662      	movlt	r2, ip
90017a6a:	4288      	cmp	r0, r1
90017a6c:	bfb8      	it	lt
90017a6e:	461f      	movlt	r7, r3
90017a70:	e086      	b.n	90017b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90017a72:	428a      	cmp	r2, r1
90017a74:	bfb8      	it	lt
90017a76:	460a      	movlt	r2, r1
90017a78:	e082      	b.n	90017b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90017a7a:	bf00      	nop
90017a7c:	240398dc 	.word	0x240398dc
90017a80:	240398e8 	.word	0x240398e8
90017a84:	24000080 	.word	0x24000080
90017a88:	2403989c 	.word	0x2403989c
90017a8c:	24039892 	.word	0x24039892
90017a90:	24039890 	.word	0x24039890
90017a94:	2403989a 	.word	0x2403989a
90017a98:	24039894 	.word	0x24039894
90017a9c:	19a1      	adds	r1, r4, r6
90017a9e:	ab07      	add	r3, sp, #28
90017aa0:	f851 0fac 	ldr.w	r0, [r1, #172]!
90017aa4:	6849      	ldr	r1, [r1, #4]
90017aa6:	c303      	stmia	r3!, {r0, r1}
90017aa8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90017aac:	a807      	add	r0, sp, #28
90017aae:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90017ab2:	2b13      	cmp	r3, #19
90017ab4:	440b      	add	r3, r1
90017ab6:	bfd8      	it	le
90017ab8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90017abc:	1a9b      	subs	r3, r3, r2
90017abe:	f8ad 201c 	strh.w	r2, [sp, #28]
90017ac2:	f8ad 3020 	strh.w	r3, [sp, #32]
90017ac6:	f7fe ffc1 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90017aca:	a807      	add	r0, sp, #28
90017acc:	f7f9 fee3 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
90017ad0:	bb78      	cbnz	r0, 90017b32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90017ad2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90017ad6:	4426      	add	r6, r4
90017ad8:	f8d9 0000 	ldr.w	r0, [r9]
90017adc:	f1bc 0f14 	cmp.w	ip, #20
90017ae0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90017ae4:	f8d0 e000 	ldr.w	lr, [r0]
90017ae8:	bfa8      	it	ge
90017aea:	f04f 0c14 	movge.w	ip, #20
90017aee:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90017af2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90017af6:	fa1f fc8c 	uxth.w	ip, ip
90017afa:	f8cd c000 	str.w	ip, [sp]
90017afe:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
90017b02:	47d8      	blx	fp
90017b04:	4683      	mov	fp, r0
90017b06:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90017b0a:	a807      	add	r0, sp, #28
90017b0c:	f7fe ff84 	bl	90016a18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90017b10:	6823      	ldr	r3, [r4, #0]
90017b12:	4620      	mov	r0, r4
90017b14:	a907      	add	r1, sp, #28
90017b16:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017b18:	4798      	blx	r3
90017b1a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90017b1e:	eba0 000b 	sub.w	r0, r0, fp
90017b22:	b200      	sxth	r0, r0
90017b24:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
90017b28:	b918      	cbnz	r0, 90017b32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90017b2a:	b2b9      	uxth	r1, r7
90017b2c:	4650      	mov	r0, sl
90017b2e:	f7ff fa7b 	bl	90017028 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017b32:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
90017b36:	f1bb 0f00 	cmp.w	fp, #0
90017b3a:	f43f af2c 	beq.w	90017996 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90017b3e:	882b      	ldrh	r3, [r5, #0]
90017b40:	2700      	movs	r7, #0
90017b42:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
90017b46:	3301      	adds	r3, #1
90017b48:	b29b      	uxth	r3, r3
90017b4a:	b299      	uxth	r1, r3
90017b4c:	00fe      	lsls	r6, r7, #3
90017b4e:	458b      	cmp	fp, r1
90017b50:	d9a4      	bls.n	90017a9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
90017b52:	4426      	add	r6, r4
90017b54:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90017b58:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
90017b5c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90017b60:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
90017b64:	4408      	add	r0, r1
90017b66:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
90017b6a:	4461      	add	r1, ip
90017b6c:	b200      	sxth	r0, r0
90017b6e:	b209      	sxth	r1, r1
90017b70:	4288      	cmp	r0, r1
90017b72:	f6bf af72 	bge.w	90017a5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90017b76:	4584      	cmp	ip, r0
90017b78:	4662      	mov	r2, ip
90017b7a:	461f      	mov	r7, r3
90017b7c:	bfb8      	it	lt
90017b7e:	4602      	movlt	r2, r0
90017b80:	3301      	adds	r3, #1
90017b82:	e7e2      	b.n	90017b4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90017b84:	d10e      	bne.n	90017ba4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90017b86:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
90017b8a:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
90017b8e:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
90017b92:	4473      	add	r3, lr
90017b94:	b21b      	sxth	r3, r3
90017b96:	429e      	cmp	r6, r3
90017b98:	bfa8      	it	ge
90017b9a:	461e      	movge	r6, r3
90017b9c:	4287      	cmp	r7, r0
90017b9e:	bfb8      	it	lt
90017ba0:	46e1      	movlt	r9, ip
90017ba2:	e757      	b.n	90017a54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017ba4:	4286      	cmp	r6, r0
90017ba6:	bfa8      	it	ge
90017ba8:	4606      	movge	r6, r0
90017baa:	e753      	b.n	90017a54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017bac:	eb0a 0007 	add.w	r0, sl, r7
90017bb0:	4427      	add	r7, r4
90017bb2:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
90017bb6:	f1bb 0f13 	cmp.w	fp, #19
90017bba:	bfdc      	itt	le
90017bbc:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
90017bc0:	445e      	addle	r6, fp
90017bc2:	e9cd 2102 	strd	r2, r1, [sp, #8]
90017bc6:	bfd8      	it	le
90017bc8:	b236      	sxthle	r6, r6
90017bca:	f7f9 fe64 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
90017bce:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90017bd2:	2800      	cmp	r0, #0
90017bd4:	f47f af1a 	bne.w	90017a0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90017bd8:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
90017bdc:	fa1f fb8b 	uxth.w	fp, fp
90017be0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90017be4:	1ab6      	subs	r6, r6, r2
90017be6:	4829      	ldr	r0, [pc, #164]	; (90017c8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90017be8:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
90017bec:	2e14      	cmp	r6, #20
90017bee:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
90017bf2:	6800      	ldr	r0, [r0, #0]
90017bf4:	bfa8      	it	ge
90017bf6:	2614      	movge	r6, #20
90017bf8:	f8ad 101c 	strh.w	r1, [sp, #28]
90017bfc:	f8ad 201e 	strh.w	r2, [sp, #30]
90017c00:	b289      	uxth	r1, r1
90017c02:	f8ad 3020 	strh.w	r3, [sp, #32]
90017c06:	b2b6      	uxth	r6, r6
90017c08:	f8d0 c000 	ldr.w	ip, [r0]
90017c0c:	b292      	uxth	r2, r2
90017c0e:	455e      	cmp	r6, fp
90017c10:	bf94      	ite	ls
90017c12:	9600      	strls	r6, [sp, #0]
90017c14:	f8cd b000 	strhi.w	fp, [sp]
90017c18:	b29b      	uxth	r3, r3
90017c1a:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
90017c1e:	47b0      	blx	r6
90017c20:	6823      	ldr	r3, [r4, #0]
90017c22:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90017c26:	a907      	add	r1, sp, #28
90017c28:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017c2a:	4620      	mov	r0, r4
90017c2c:	4798      	blx	r3
90017c2e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90017c32:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
90017c36:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
90017c3a:	1a5b      	subs	r3, r3, r1
90017c3c:	440a      	add	r2, r1
90017c3e:	b21b      	sxth	r3, r3
90017c40:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
90017c44:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
90017c48:	2b00      	cmp	r3, #0
90017c4a:	f47f aeda 	bne.w	90017a02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90017c4e:	fa1f f189 	uxth.w	r1, r9
90017c52:	4650      	mov	r0, sl
90017c54:	f7ff f9e8 	bl	90017028 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017c58:	e6d3      	b.n	90017a02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90017c5a:	882e      	ldrh	r6, [r5, #0]
90017c5c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90017c60:	42b3      	cmp	r3, r6
90017c62:	f67f ae98 	bls.w	90017996 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90017c66:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
90017c6a:	ab07      	add	r3, sp, #28
90017c6c:	f852 0fac 	ldr.w	r0, [r2, #172]!
90017c70:	6851      	ldr	r1, [r2, #4]
90017c72:	c303      	stmia	r3!, {r0, r1}
90017c74:	a807      	add	r0, sp, #28
90017c76:	f7f9 fe0e 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
90017c7a:	b920      	cbnz	r0, 90017c86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
90017c7c:	6823      	ldr	r3, [r4, #0]
90017c7e:	a907      	add	r1, sp, #28
90017c80:	4620      	mov	r0, r4
90017c82:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017c84:	4798      	blx	r3
90017c86:	3601      	adds	r6, #1
90017c88:	b2b6      	uxth	r6, r6
90017c8a:	e7e7      	b.n	90017c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90017c8c:	2403989c 	.word	0x2403989c

90017c90 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90017c90:	4b03      	ldr	r3, [pc, #12]	; (90017ca0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90017c92:	2200      	movs	r2, #0
90017c94:	801a      	strh	r2, [r3, #0]
90017c96:	805a      	strh	r2, [r3, #2]
90017c98:	809a      	strh	r2, [r3, #4]
90017c9a:	80da      	strh	r2, [r3, #6]
90017c9c:	4770      	bx	lr
90017c9e:	bf00      	nop
90017ca0:	240398e8 	.word	0x240398e8

90017ca4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90017ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017ca8:	b09d      	sub	sp, #116	; 0x74
90017caa:	4606      	mov	r6, r0
90017cac:	4614      	mov	r4, r2
90017cae:	468a      	mov	sl, r1
90017cb0:	a803      	add	r0, sp, #12
90017cb2:	461d      	mov	r5, r3
90017cb4:	f000 fe9d 	bl	900189f2 <_ZN8touchgfx12TextProviderC1Ev>
90017cb8:	6833      	ldr	r3, [r6, #0]
90017cba:	4630      	mov	r0, r6
90017cbc:	f242 0b0b 	movw	fp, #8203	; 0x200b
90017cc0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017cc2:	4798      	blx	r3
90017cc4:	6833      	ldr	r3, [r6, #0]
90017cc6:	4607      	mov	r7, r0
90017cc8:	4630      	mov	r0, r6
90017cca:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017ccc:	4798      	blx	r3
90017cce:	462a      	mov	r2, r5
90017cd0:	2500      	movs	r5, #0
90017cd2:	4621      	mov	r1, r4
90017cd4:	9000      	str	r0, [sp, #0]
90017cd6:	463b      	mov	r3, r7
90017cd8:	462c      	mov	r4, r5
90017cda:	46a9      	mov	r9, r5
90017cdc:	46a8      	mov	r8, r5
90017cde:	a803      	add	r0, sp, #12
90017ce0:	f000 fee2 	bl	90018aa8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017ce4:	2300      	movs	r3, #0
90017ce6:	9302      	str	r3, [sp, #8]
90017ce8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017cec:	429c      	cmp	r4, r3
90017cee:	d002      	beq.n	90017cf6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90017cf0:	455c      	cmp	r4, fp
90017cf2:	bf18      	it	ne
90017cf4:	4625      	movne	r5, r4
90017cf6:	ab02      	add	r3, sp, #8
90017cf8:	4632      	mov	r2, r6
90017cfa:	4651      	mov	r1, sl
90017cfc:	a803      	add	r0, sp, #12
90017cfe:	f001 f9d9 	bl	900190b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017d02:	4604      	mov	r4, r0
90017d04:	b108      	cbz	r0, 90017d0a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90017d06:	280a      	cmp	r0, #10
90017d08:	d10a      	bne.n	90017d20 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90017d0a:	45c1      	cmp	r9, r8
90017d0c:	bf38      	it	cc
90017d0e:	46c1      	movcc	r9, r8
90017d10:	f04f 0800 	mov.w	r8, #0
90017d14:	2c00      	cmp	r4, #0
90017d16:	d1e5      	bne.n	90017ce4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90017d18:	4648      	mov	r0, r9
90017d1a:	b01d      	add	sp, #116	; 0x74
90017d1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017d20:	9a02      	ldr	r2, [sp, #8]
90017d22:	2a00      	cmp	r2, #0
90017d24:	d0de      	beq.n	90017ce4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90017d26:	7b57      	ldrb	r7, [r2, #13]
90017d28:	4629      	mov	r1, r5
90017d2a:	6833      	ldr	r3, [r6, #0]
90017d2c:	007f      	lsls	r7, r7, #1
90017d2e:	8894      	ldrh	r4, [r2, #4]
90017d30:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017d32:	f407 7080 	and.w	r0, r7, #256	; 0x100
90017d36:	7a97      	ldrb	r7, [r2, #10]
90017d38:	4307      	orrs	r7, r0
90017d3a:	4630      	mov	r0, r6
90017d3c:	4798      	blx	r3
90017d3e:	4438      	add	r0, r7
90017d40:	4480      	add	r8, r0
90017d42:	fa1f f888 	uxth.w	r8, r8
90017d46:	e7e5      	b.n	90017d14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90017d48 <_ZNK8touchgfx4Font12getCharWidthEt>:
90017d48:	b508      	push	{r3, lr}
90017d4a:	6803      	ldr	r3, [r0, #0]
90017d4c:	68db      	ldr	r3, [r3, #12]
90017d4e:	4798      	blx	r3
90017d50:	b128      	cbz	r0, 90017d5e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90017d52:	7b43      	ldrb	r3, [r0, #13]
90017d54:	7a80      	ldrb	r0, [r0, #10]
90017d56:	005b      	lsls	r3, r3, #1
90017d58:	f403 7380 	and.w	r3, r3, #256	; 0x100
90017d5c:	4318      	orrs	r0, r3
90017d5e:	bd08      	pop	{r3, pc}

90017d60 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90017d60:	b40e      	push	{r1, r2, r3}
90017d62:	b5f0      	push	{r4, r5, r6, r7, lr}
90017d64:	b09e      	sub	sp, #120	; 0x78
90017d66:	4605      	mov	r5, r0
90017d68:	ab23      	add	r3, sp, #140	; 0x8c
90017d6a:	a805      	add	r0, sp, #20
90017d6c:	f853 4b04 	ldr.w	r4, [r3], #4
90017d70:	9303      	str	r3, [sp, #12]
90017d72:	f000 fe3e 	bl	900189f2 <_ZN8touchgfx12TextProviderC1Ev>
90017d76:	682b      	ldr	r3, [r5, #0]
90017d78:	4628      	mov	r0, r5
90017d7a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017d7c:	4798      	blx	r3
90017d7e:	682b      	ldr	r3, [r5, #0]
90017d80:	4606      	mov	r6, r0
90017d82:	4628      	mov	r0, r5
90017d84:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017d86:	4798      	blx	r3
90017d88:	4633      	mov	r3, r6
90017d8a:	4621      	mov	r1, r4
90017d8c:	ae1e      	add	r6, sp, #120	; 0x78
90017d8e:	2400      	movs	r4, #0
90017d90:	9000      	str	r0, [sp, #0]
90017d92:	9a03      	ldr	r2, [sp, #12]
90017d94:	a805      	add	r0, sp, #20
90017d96:	f000 fe87 	bl	90018aa8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017d9a:	f846 4d68 	str.w	r4, [r6, #-104]!
90017d9e:	462a      	mov	r2, r5
90017da0:	4633      	mov	r3, r6
90017da2:	4621      	mov	r1, r4
90017da4:	a805      	add	r0, sp, #20
90017da6:	f001 f985 	bl	900190b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017daa:	b300      	cbz	r0, 90017dee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90017dac:	280a      	cmp	r0, #10
90017dae:	d01a      	beq.n	90017de6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90017db0:	9f04      	ldr	r7, [sp, #16]
90017db2:	b1c7      	cbz	r7, 90017de6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90017db4:	7b78      	ldrb	r0, [r7, #13]
90017db6:	7a3b      	ldrb	r3, [r7, #8]
90017db8:	00c1      	lsls	r1, r0, #3
90017dba:	88ea      	ldrh	r2, [r5, #6]
90017dbc:	f401 7180 	and.w	r1, r1, #256	; 0x100
90017dc0:	4319      	orrs	r1, r3
90017dc2:	0643      	lsls	r3, r0, #25
90017dc4:	ea4f 1000 	mov.w	r0, r0, lsl #4
90017dc8:	bf48      	it	mi
90017dca:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
90017dce:	f400 7080 	and.w	r0, r0, #256	; 0x100
90017dd2:	bf48      	it	mi
90017dd4:	b219      	sxthmi	r1, r3
90017dd6:	79fb      	ldrb	r3, [r7, #7]
90017dd8:	4303      	orrs	r3, r0
90017dda:	4413      	add	r3, r2
90017ddc:	1a5b      	subs	r3, r3, r1
90017dde:	b21b      	sxth	r3, r3
90017de0:	429c      	cmp	r4, r3
90017de2:	bfb8      	it	lt
90017de4:	461c      	movlt	r4, r3
90017de6:	4633      	mov	r3, r6
90017de8:	462a      	mov	r2, r5
90017dea:	2100      	movs	r1, #0
90017dec:	e7da      	b.n	90017da4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90017dee:	b2a0      	uxth	r0, r4
90017df0:	b01e      	add	sp, #120	; 0x78
90017df2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90017df6:	b003      	add	sp, #12
90017df8:	4770      	bx	lr

90017dfa <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90017dfa:	7a43      	ldrb	r3, [r0, #9]
90017dfc:	8880      	ldrh	r0, [r0, #4]
90017dfe:	4418      	add	r0, r3
90017e00:	b280      	uxth	r0, r0
90017e02:	4770      	bx	lr

90017e04 <_ZNK8touchgfx4Font13getFontHeightEv>:
90017e04:	6803      	ldr	r3, [r0, #0]
90017e06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90017e08:	4718      	bx	r3

90017e0a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90017e0a:	b40e      	push	{r1, r2, r3}
90017e0c:	b570      	push	{r4, r5, r6, lr}
90017e0e:	b09d      	sub	sp, #116	; 0x74
90017e10:	4604      	mov	r4, r0
90017e12:	ab21      	add	r3, sp, #132	; 0x84
90017e14:	a803      	add	r0, sp, #12
90017e16:	f853 5b04 	ldr.w	r5, [r3], #4
90017e1a:	9302      	str	r3, [sp, #8]
90017e1c:	f000 fde9 	bl	900189f2 <_ZN8touchgfx12TextProviderC1Ev>
90017e20:	6823      	ldr	r3, [r4, #0]
90017e22:	4620      	mov	r0, r4
90017e24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017e26:	4798      	blx	r3
90017e28:	6823      	ldr	r3, [r4, #0]
90017e2a:	4606      	mov	r6, r0
90017e2c:	4620      	mov	r0, r4
90017e2e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017e30:	2401      	movs	r4, #1
90017e32:	4798      	blx	r3
90017e34:	4633      	mov	r3, r6
90017e36:	9000      	str	r0, [sp, #0]
90017e38:	4629      	mov	r1, r5
90017e3a:	9a02      	ldr	r2, [sp, #8]
90017e3c:	a803      	add	r0, sp, #12
90017e3e:	f000 fe33 	bl	90018aa8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017e42:	a803      	add	r0, sp, #12
90017e44:	f001 fa02 	bl	9001924c <_ZN8touchgfx12TextProvider11getNextCharEv>
90017e48:	b2a3      	uxth	r3, r4
90017e4a:	b138      	cbz	r0, 90017e5c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
90017e4c:	280a      	cmp	r0, #10
90017e4e:	a803      	add	r0, sp, #12
90017e50:	bf04      	itt	eq
90017e52:	3301      	addeq	r3, #1
90017e54:	b21c      	sxtheq	r4, r3
90017e56:	f001 f9f9 	bl	9001924c <_ZN8touchgfx12TextProvider11getNextCharEv>
90017e5a:	e7f5      	b.n	90017e48 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
90017e5c:	4618      	mov	r0, r3
90017e5e:	b01d      	add	sp, #116	; 0x74
90017e60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017e64:	b003      	add	sp, #12
90017e66:	4770      	bx	lr

90017e68 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90017e68:	b40e      	push	{r1, r2, r3}
90017e6a:	b5f0      	push	{r4, r5, r6, r7, lr}
90017e6c:	b09e      	sub	sp, #120	; 0x78
90017e6e:	4604      	mov	r4, r0
90017e70:	ab23      	add	r3, sp, #140	; 0x8c
90017e72:	a805      	add	r0, sp, #20
90017e74:	f853 5b04 	ldr.w	r5, [r3], #4
90017e78:	9303      	str	r3, [sp, #12]
90017e7a:	f000 fdba 	bl	900189f2 <_ZN8touchgfx12TextProviderC1Ev>
90017e7e:	6823      	ldr	r3, [r4, #0]
90017e80:	4620      	mov	r0, r4
90017e82:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017e84:	4798      	blx	r3
90017e86:	6823      	ldr	r3, [r4, #0]
90017e88:	4606      	mov	r6, r0
90017e8a:	4620      	mov	r0, r4
90017e8c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017e8e:	4798      	blx	r3
90017e90:	4633      	mov	r3, r6
90017e92:	4629      	mov	r1, r5
90017e94:	9000      	str	r0, [sp, #0]
90017e96:	9a03      	ldr	r2, [sp, #12]
90017e98:	a805      	add	r0, sp, #20
90017e9a:	f000 fe05 	bl	90018aa8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017e9e:	ad1e      	add	r5, sp, #120	; 0x78
90017ea0:	2100      	movs	r1, #0
90017ea2:	f647 76ff 	movw	r6, #32767	; 0x7fff
90017ea6:	4622      	mov	r2, r4
90017ea8:	a805      	add	r0, sp, #20
90017eaa:	f845 1d68 	str.w	r1, [r5, #-104]!
90017eae:	462b      	mov	r3, r5
90017eb0:	f001 f900 	bl	900190b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017eb4:	b1d8      	cbz	r0, 90017eee <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
90017eb6:	280a      	cmp	r0, #10
90017eb8:	d012      	beq.n	90017ee0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90017eba:	9804      	ldr	r0, [sp, #16]
90017ebc:	b180      	cbz	r0, 90017ee0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90017ebe:	7b47      	ldrb	r7, [r0, #13]
90017ec0:	88e2      	ldrh	r2, [r4, #6]
90017ec2:	00fb      	lsls	r3, r7, #3
90017ec4:	f403 7180 	and.w	r1, r3, #256	; 0x100
90017ec8:	7a03      	ldrb	r3, [r0, #8]
90017eca:	430b      	orrs	r3, r1
90017ecc:	0679      	lsls	r1, r7, #25
90017ece:	bf44      	itt	mi
90017ed0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90017ed4:	b21b      	sxthmi	r3, r3
90017ed6:	1ad3      	subs	r3, r2, r3
90017ed8:	b21b      	sxth	r3, r3
90017eda:	429e      	cmp	r6, r3
90017edc:	bfa8      	it	ge
90017ede:	461e      	movge	r6, r3
90017ee0:	462b      	mov	r3, r5
90017ee2:	4622      	mov	r2, r4
90017ee4:	2100      	movs	r1, #0
90017ee6:	a805      	add	r0, sp, #20
90017ee8:	f001 f8e4 	bl	900190b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017eec:	e7e2      	b.n	90017eb4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90017eee:	4630      	mov	r0, r6
90017ef0:	b01e      	add	sp, #120	; 0x78
90017ef2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90017ef6:	b003      	add	sp, #12
90017ef8:	4770      	bx	lr

90017efa <_ZNK8touchgfx8Drawable10invalidateEv>:
90017efa:	b513      	push	{r0, r1, r4, lr}
90017efc:	6803      	ldr	r3, [r0, #0]
90017efe:	2400      	movs	r4, #0
90017f00:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90017f04:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90017f08:	f8ad 1004 	strh.w	r1, [sp, #4]
90017f0c:	4669      	mov	r1, sp
90017f0e:	691b      	ldr	r3, [r3, #16]
90017f10:	9400      	str	r4, [sp, #0]
90017f12:	f8ad 2006 	strh.w	r2, [sp, #6]
90017f16:	4798      	blx	r3
90017f18:	b002      	add	sp, #8
90017f1a:	bd10      	pop	{r4, pc}

90017f1c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90017f1c:	b538      	push	{r3, r4, r5, lr}
90017f1e:	680b      	ldr	r3, [r1, #0]
90017f20:	460c      	mov	r4, r1
90017f22:	4605      	mov	r5, r0
90017f24:	68db      	ldr	r3, [r3, #12]
90017f26:	4798      	blx	r3
90017f28:	6823      	ldr	r3, [r4, #0]
90017f2a:	4620      	mov	r0, r4
90017f2c:	4629      	mov	r1, r5
90017f2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90017f30:	4798      	blx	r3
90017f32:	4628      	mov	r0, r5
90017f34:	bd38      	pop	{r3, r4, r5, pc}

90017f36 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90017f36:	b410      	push	{r4}
90017f38:	880a      	ldrh	r2, [r1, #0]
90017f3a:	8884      	ldrh	r4, [r0, #4]
90017f3c:	4422      	add	r2, r4
90017f3e:	800a      	strh	r2, [r1, #0]
90017f40:	884a      	ldrh	r2, [r1, #2]
90017f42:	88c4      	ldrh	r4, [r0, #6]
90017f44:	4422      	add	r2, r4
90017f46:	804a      	strh	r2, [r1, #2]
90017f48:	6940      	ldr	r0, [r0, #20]
90017f4a:	b120      	cbz	r0, 90017f56 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90017f4c:	6803      	ldr	r3, [r0, #0]
90017f4e:	f85d 4b04 	ldr.w	r4, [sp], #4
90017f52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90017f54:	4718      	bx	r3
90017f56:	f85d 4b04 	ldr.w	r4, [sp], #4
90017f5a:	4770      	bx	lr

90017f5c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90017f5c:	b570      	push	{r4, r5, r6, lr}
90017f5e:	8882      	ldrh	r2, [r0, #4]
90017f60:	460c      	mov	r4, r1
90017f62:	880b      	ldrh	r3, [r1, #0]
90017f64:	4605      	mov	r5, r0
90017f66:	4413      	add	r3, r2
90017f68:	800b      	strh	r3, [r1, #0]
90017f6a:	884b      	ldrh	r3, [r1, #2]
90017f6c:	88c2      	ldrh	r2, [r0, #6]
90017f6e:	4413      	add	r3, r2
90017f70:	804b      	strh	r3, [r1, #2]
90017f72:	1d01      	adds	r1, r0, #4
90017f74:	4620      	mov	r0, r4
90017f76:	f7f9 fc4b 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
90017f7a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90017f7e:	2b00      	cmp	r3, #0
90017f80:	dd0b      	ble.n	90017f9a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017f82:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90017f86:	2b00      	cmp	r3, #0
90017f88:	dd07      	ble.n	90017f9a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017f8a:	6968      	ldr	r0, [r5, #20]
90017f8c:	b128      	cbz	r0, 90017f9a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017f8e:	6803      	ldr	r3, [r0, #0]
90017f90:	4621      	mov	r1, r4
90017f92:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90017f94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017f98:	4718      	bx	r3
90017f9a:	bd70      	pop	{r4, r5, r6, pc}

90017f9c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90017f9c:	b570      	push	{r4, r5, r6, lr}
90017f9e:	8882      	ldrh	r2, [r0, #4]
90017fa0:	460c      	mov	r4, r1
90017fa2:	880b      	ldrh	r3, [r1, #0]
90017fa4:	4605      	mov	r5, r0
90017fa6:	4413      	add	r3, r2
90017fa8:	800b      	strh	r3, [r1, #0]
90017faa:	884b      	ldrh	r3, [r1, #2]
90017fac:	88c2      	ldrh	r2, [r0, #6]
90017fae:	4413      	add	r3, r2
90017fb0:	804b      	strh	r3, [r1, #2]
90017fb2:	1d01      	adds	r1, r0, #4
90017fb4:	4620      	mov	r0, r4
90017fb6:	f7f9 fc2b 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
90017fba:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90017fbe:	2b00      	cmp	r3, #0
90017fc0:	dd19      	ble.n	90017ff6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017fc2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90017fc6:	2b00      	cmp	r3, #0
90017fc8:	dd15      	ble.n	90017ff6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017fca:	6968      	ldr	r0, [r5, #20]
90017fcc:	b128      	cbz	r0, 90017fda <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90017fce:	6803      	ldr	r3, [r0, #0]
90017fd0:	4621      	mov	r1, r4
90017fd2:	691b      	ldr	r3, [r3, #16]
90017fd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017fd8:	4718      	bx	r3
90017fda:	4b07      	ldr	r3, [pc, #28]	; (90017ff8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90017fdc:	681b      	ldr	r3, [r3, #0]
90017fde:	3304      	adds	r3, #4
90017fe0:	429d      	cmp	r5, r3
90017fe2:	d108      	bne.n	90017ff6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017fe4:	f7fe fee8 	bl	90016db8 <_ZN8touchgfx11Application11getInstanceEv>
90017fe8:	6803      	ldr	r3, [r0, #0]
90017fea:	6821      	ldr	r1, [r4, #0]
90017fec:	6862      	ldr	r2, [r4, #4]
90017fee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90017ff0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017ff4:	4718      	bx	r3
90017ff6:	bd70      	pop	{r4, r5, r6, pc}
90017ff8:	240398e0 	.word	0x240398e0

90017ffc <_ZN8touchgfx8Drawable12moveRelativeEss>:
90017ffc:	b570      	push	{r4, r5, r6, lr}
90017ffe:	4604      	mov	r4, r0
90018000:	4616      	mov	r6, r2
90018002:	460d      	mov	r5, r1
90018004:	b901      	cbnz	r1, 90018008 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90018006:	b192      	cbz	r2, 9001802e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90018008:	6823      	ldr	r3, [r4, #0]
9001800a:	4620      	mov	r0, r4
9001800c:	699b      	ldr	r3, [r3, #24]
9001800e:	4798      	blx	r3
90018010:	88e2      	ldrh	r2, [r4, #6]
90018012:	88a1      	ldrh	r1, [r4, #4]
90018014:	4620      	mov	r0, r4
90018016:	4432      	add	r2, r6
90018018:	4429      	add	r1, r5
9001801a:	b212      	sxth	r2, r2
9001801c:	b209      	sxth	r1, r1
9001801e:	f7f9 fecd 	bl	90011dbc <_ZN8touchgfx8Drawable5setXYEss>
90018022:	6823      	ldr	r3, [r4, #0]
90018024:	4620      	mov	r0, r4
90018026:	699b      	ldr	r3, [r3, #24]
90018028:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001802c:	4718      	bx	r3
9001802e:	bd70      	pop	{r4, r5, r6, pc}

90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90018030:	b510      	push	{r4, lr}
90018032:	2300      	movs	r3, #0
90018034:	4604      	mov	r4, r0
90018036:	4608      	mov	r0, r1
90018038:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001803c:	8023      	strh	r3, [r4, #0]
9001803e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90018042:	8063      	strh	r3, [r4, #2]
90018044:	6803      	ldr	r3, [r0, #0]
90018046:	80a1      	strh	r1, [r4, #4]
90018048:	4621      	mov	r1, r4
9001804a:	80e2      	strh	r2, [r4, #6]
9001804c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001804e:	4798      	blx	r3
90018050:	4620      	mov	r0, r4
90018052:	bd10      	pop	{r4, pc}

90018054 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90018054:	b530      	push	{r4, r5, lr}
90018056:	8083      	strh	r3, [r0, #4]
90018058:	f8bd 300c 	ldrh.w	r3, [sp, #12]
9001805c:	f89d 5018 	ldrb.w	r5, [sp, #24]
90018060:	80c3      	strh	r3, [r0, #6]
90018062:	f89d 3010 	ldrb.w	r3, [sp, #16]
90018066:	6141      	str	r1, [r0, #20]
90018068:	7203      	strb	r3, [r0, #8]
9001806a:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001806e:	8302      	strh	r2, [r0, #24]
90018070:	7243      	strb	r3, [r0, #9]
90018072:	7a83      	ldrb	r3, [r0, #10]
90018074:	f365 0306 	bfi	r3, r5, #0, #7
90018078:	f89d 501c 	ldrb.w	r5, [sp, #28]
9001807c:	f365 13c7 	bfi	r3, r5, #7, #1
90018080:	7283      	strb	r3, [r0, #10]
90018082:	f89d 3020 	ldrb.w	r3, [sp, #32]
90018086:	72c3      	strb	r3, [r0, #11]
90018088:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
9001808c:	7303      	strb	r3, [r0, #12]
9001808e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90018092:	81c3      	strh	r3, [r0, #14]
90018094:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90018098:	8203      	strh	r3, [r0, #16]
9001809a:	4b01      	ldr	r3, [pc, #4]	; (900180a0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
9001809c:	6003      	str	r3, [r0, #0]
9001809e:	bd30      	pop	{r4, r5, pc}
900180a0:	9002c5ac 	.word	0x9002c5ac

900180a4 <_ZNK8touchgfx9ConstFont4findEt>:
900180a4:	b5f0      	push	{r4, r5, r6, r7, lr}
900180a6:	6944      	ldr	r4, [r0, #20]
900180a8:	b3bc      	cbz	r4, 9001811a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900180aa:	88a3      	ldrh	r3, [r4, #4]
900180ac:	8b02      	ldrh	r2, [r0, #24]
900180ae:	1acb      	subs	r3, r1, r3
900180b0:	f102 32ff 	add.w	r2, r2, #4294967295
900180b4:	d431      	bmi.n	9001811a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900180b6:	4293      	cmp	r3, r2
900180b8:	dd0c      	ble.n	900180d4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
900180ba:	230e      	movs	r3, #14
900180bc:	fb03 4302 	mla	r3, r3, r2, r4
900180c0:	889b      	ldrh	r3, [r3, #4]
900180c2:	1a5b      	subs	r3, r3, r1
900180c4:	1ad3      	subs	r3, r2, r3
900180c6:	429a      	cmp	r2, r3
900180c8:	db27      	blt.n	9001811a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900180ca:	2b00      	cmp	r3, #0
900180cc:	bfbc      	itt	lt
900180ce:	2302      	movlt	r3, #2
900180d0:	fb92 f3f3 	sdivlt	r3, r2, r3
900180d4:	2500      	movs	r5, #0
900180d6:	260e      	movs	r6, #14
900180d8:	4295      	cmp	r5, r2
900180da:	dc1e      	bgt.n	9001811a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900180dc:	fb06 4003 	mla	r0, r6, r3, r4
900180e0:	8887      	ldrh	r7, [r0, #4]
900180e2:	42b9      	cmp	r1, r7
900180e4:	d01a      	beq.n	9001811c <_ZNK8touchgfx9ConstFont4findEt+0x78>
900180e6:	d20d      	bcs.n	90018104 <_ZNK8touchgfx9ConstFont4findEt+0x60>
900180e8:	1e5a      	subs	r2, r3, #1
900180ea:	4295      	cmp	r5, r2
900180ec:	dc15      	bgt.n	9001811a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900180ee:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
900180f2:	1a5b      	subs	r3, r3, r1
900180f4:	1ad3      	subs	r3, r2, r3
900180f6:	429a      	cmp	r2, r3
900180f8:	db0f      	blt.n	9001811a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900180fa:	429d      	cmp	r5, r3
900180fc:	ddec      	ble.n	900180d8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900180fe:	1953      	adds	r3, r2, r5
90018100:	105b      	asrs	r3, r3, #1
90018102:	e7e9      	b.n	900180d8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90018104:	1c5d      	adds	r5, r3, #1
90018106:	42aa      	cmp	r2, r5
90018108:	db07      	blt.n	9001811a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001810a:	8a43      	ldrh	r3, [r0, #18]
9001810c:	1acb      	subs	r3, r1, r3
9001810e:	442b      	add	r3, r5
90018110:	429d      	cmp	r5, r3
90018112:	dc02      	bgt.n	9001811a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018114:	429a      	cmp	r2, r3
90018116:	dadf      	bge.n	900180d8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90018118:	e7f1      	b.n	900180fe <_ZNK8touchgfx9ConstFont4findEt+0x5a>
9001811a:	2000      	movs	r0, #0
9001811c:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001811e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001811e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018120:	4604      	mov	r4, r0
90018122:	4617      	mov	r7, r2
90018124:	461e      	mov	r6, r3
90018126:	b911      	cbnz	r1, 9001812e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90018128:	2500      	movs	r5, #0
9001812a:	4628      	mov	r0, r5
9001812c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001812e:	290a      	cmp	r1, #10
90018130:	d0fa      	beq.n	90018128 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018132:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90018136:	4291      	cmp	r1, r2
90018138:	d0f6      	beq.n	90018128 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001813a:	f242 020b 	movw	r2, #8203	; 0x200b
9001813e:	4291      	cmp	r1, r2
90018140:	d0f2      	beq.n	90018128 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018142:	f7ff ffaf 	bl	900180a4 <_ZNK8touchgfx9ConstFont4findEt>
90018146:	4605      	mov	r5, r0
90018148:	b950      	cbnz	r0, 90018160 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001814a:	6823      	ldr	r3, [r4, #0]
9001814c:	4620      	mov	r0, r4
9001814e:	691b      	ldr	r3, [r3, #16]
90018150:	4798      	blx	r3
90018152:	4601      	mov	r1, r0
90018154:	4620      	mov	r0, r4
90018156:	f7ff ffa5 	bl	900180a4 <_ZNK8touchgfx9ConstFont4findEt>
9001815a:	4605      	mov	r5, r0
9001815c:	2800      	cmp	r0, #0
9001815e:	d0e3      	beq.n	90018128 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018160:	6823      	ldr	r3, [r4, #0]
90018162:	4629      	mov	r1, r5
90018164:	4620      	mov	r0, r4
90018166:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90018168:	4798      	blx	r3
9001816a:	6038      	str	r0, [r7, #0]
9001816c:	6823      	ldr	r3, [r4, #0]
9001816e:	4620      	mov	r0, r4
90018170:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90018172:	4798      	blx	r3
90018174:	7030      	strb	r0, [r6, #0]
90018176:	e7d8      	b.n	9001812a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90018178 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90018178:	b538      	push	{r3, r4, r5, lr}
9001817a:	4605      	mov	r5, r0
9001817c:	f002 f936 	bl	9001a3ec <_ZNK8touchgfx6Bitmap9getFormatEv>
90018180:	4604      	mov	r4, r0
90018182:	4628      	mov	r0, r5
90018184:	f002 f876 	bl	9001a274 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90018188:	2800      	cmp	r0, #0
9001818a:	bf14      	ite	ne
9001818c:	2002      	movne	r0, #2
9001818e:	2000      	moveq	r0, #0
90018190:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90018194:	b280      	uxth	r0, r0
90018196:	bd38      	pop	{r3, r4, r5, pc}

90018198 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90018198:	b538      	push	{r3, r4, r5, lr}
9001819a:	4605      	mov	r5, r0
9001819c:	f002 f926 	bl	9001a3ec <_ZNK8touchgfx6Bitmap9getFormatEv>
900181a0:	4604      	mov	r4, r0
900181a2:	4628      	mov	r0, r5
900181a4:	f002 f866 	bl	9001a274 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
900181a8:	2800      	cmp	r0, #0
900181aa:	bf14      	ite	ne
900181ac:	2002      	movne	r0, #2
900181ae:	2000      	moveq	r0, #0
900181b0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
900181b4:	f040 0001 	orr.w	r0, r0, #1
900181b8:	b280      	uxth	r0, r0
900181ba:	bd38      	pop	{r3, r4, r5, pc}

900181bc <_ZN8touchgfx4clzuEm>:
900181bc:	4603      	mov	r3, r0
900181be:	b1c8      	cbz	r0, 900181f4 <_ZN8touchgfx4clzuEm+0x38>
900181c0:	0c02      	lsrs	r2, r0, #16
900181c2:	0412      	lsls	r2, r2, #16
900181c4:	b9a2      	cbnz	r2, 900181f0 <_ZN8touchgfx4clzuEm+0x34>
900181c6:	0403      	lsls	r3, r0, #16
900181c8:	2010      	movs	r0, #16
900181ca:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
900181ce:	bf04      	itt	eq
900181d0:	021b      	lsleq	r3, r3, #8
900181d2:	3008      	addeq	r0, #8
900181d4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
900181d8:	bf04      	itt	eq
900181da:	011b      	lsleq	r3, r3, #4
900181dc:	3004      	addeq	r0, #4
900181de:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
900181e2:	bf04      	itt	eq
900181e4:	009b      	lsleq	r3, r3, #2
900181e6:	3002      	addeq	r0, #2
900181e8:	2b00      	cmp	r3, #0
900181ea:	db04      	blt.n	900181f6 <_ZN8touchgfx4clzuEm+0x3a>
900181ec:	3001      	adds	r0, #1
900181ee:	4770      	bx	lr
900181f0:	2000      	movs	r0, #0
900181f2:	e7ea      	b.n	900181ca <_ZN8touchgfx4clzuEm+0xe>
900181f4:	2020      	movs	r0, #32
900181f6:	4770      	bx	lr

900181f8 <_ZN8touchgfx7muldivuEmmmRm>:
900181f8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
900181fc:	460f      	mov	r7, r1
900181fe:	4615      	mov	r5, r2
90018200:	461e      	mov	r6, r3
90018202:	4601      	mov	r1, r0
90018204:	b100      	cbz	r0, 90018208 <_ZN8touchgfx7muldivuEmmmRm+0x10>
90018206:	b927      	cbnz	r7, 90018212 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
90018208:	2000      	movs	r0, #0
9001820a:	6030      	str	r0, [r6, #0]
9001820c:	b002      	add	sp, #8
9001820e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90018212:	f7ff ffd3 	bl	900181bc <_ZN8touchgfx4clzuEm>
90018216:	b980      	cbnz	r0, 9001823a <_ZN8touchgfx7muldivuEmmmRm+0x42>
90018218:	4638      	mov	r0, r7
9001821a:	f7ff ffcf 	bl	900181bc <_ZN8touchgfx4clzuEm>
9001821e:	2800      	cmp	r0, #0
90018220:	dd05      	ble.n	9001822e <_ZN8touchgfx7muldivuEmmmRm+0x36>
90018222:	4633      	mov	r3, r6
90018224:	462a      	mov	r2, r5
90018226:	4638      	mov	r0, r7
90018228:	f7ff ffe6 	bl	900181f8 <_ZN8touchgfx7muldivuEmmmRm>
9001822c:	e7ee      	b.n	9001820c <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001822e:	f04f 33ff 	mov.w	r3, #4294967295
90018232:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90018236:	6033      	str	r3, [r6, #0]
90018238:	e7e8      	b.n	9001820c <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001823a:	fa37 f800 	lsrs.w	r8, r7, r0
9001823e:	fb07 f301 	mul.w	r3, r7, r1
90018242:	d105      	bne.n	90018250 <_ZN8touchgfx7muldivuEmmmRm+0x58>
90018244:	fbb3 f0f5 	udiv	r0, r3, r5
90018248:	fb05 3510 	mls	r5, r5, r0, r3
9001824c:	6035      	str	r5, [r6, #0]
9001824e:	e7dd      	b.n	9001820c <_ZN8touchgfx7muldivuEmmmRm+0x14>
90018250:	2301      	movs	r3, #1
90018252:	fa01 fa00 	lsl.w	sl, r1, r0
90018256:	462a      	mov	r2, r5
90018258:	fa03 f000 	lsl.w	r0, r3, r0
9001825c:	4633      	mov	r3, r6
9001825e:	fbba f9f5 	udiv	r9, sl, r5
90018262:	3801      	subs	r0, #1
90018264:	fb08 f409 	mul.w	r4, r8, r9
90018268:	4038      	ands	r0, r7
9001826a:	f7ff ffc5 	bl	900181f8 <_ZN8touchgfx7muldivuEmmmRm>
9001826e:	462a      	mov	r2, r5
90018270:	4607      	mov	r7, r0
90018272:	ab01      	add	r3, sp, #4
90018274:	fb05 a119 	mls	r1, r5, r9, sl
90018278:	4640      	mov	r0, r8
9001827a:	f7ff ffbd 	bl	900181f8 <_ZN8touchgfx7muldivuEmmmRm>
9001827e:	9b01      	ldr	r3, [sp, #4]
90018280:	6832      	ldr	r2, [r6, #0]
90018282:	441a      	add	r2, r3
90018284:	fbb2 f3f5 	udiv	r3, r2, r5
90018288:	441c      	add	r4, r3
9001828a:	fb05 2513 	mls	r5, r5, r3, r2
9001828e:	443c      	add	r4, r7
90018290:	4420      	add	r0, r4
90018292:	e7db      	b.n	9001824c <_ZN8touchgfx7muldivuEmmmRm+0x54>

90018294 <_ZN8touchgfx6muldivElllRl>:
90018294:	b573      	push	{r0, r1, r4, r5, r6, lr}
90018296:	2800      	cmp	r0, #0
90018298:	461e      	mov	r6, r3
9001829a:	bfba      	itte	lt
9001829c:	4240      	neglt	r0, r0
9001829e:	f04f 34ff 	movlt.w	r4, #4294967295
900182a2:	2401      	movge	r4, #1
900182a4:	2900      	cmp	r1, #0
900182a6:	bfbc      	itt	lt
900182a8:	4249      	neglt	r1, r1
900182aa:	4264      	neglt	r4, r4
900182ac:	2a00      	cmp	r2, #0
900182ae:	bfb6      	itet	lt
900182b0:	4265      	neglt	r5, r4
900182b2:	4625      	movge	r5, r4
900182b4:	4252      	neglt	r2, r2
900182b6:	4288      	cmp	r0, r1
900182b8:	bfc2      	ittt	gt
900182ba:	4603      	movgt	r3, r0
900182bc:	4608      	movgt	r0, r1
900182be:	4619      	movgt	r1, r3
900182c0:	ab01      	add	r3, sp, #4
900182c2:	f7ff ff99 	bl	900181f8 <_ZN8touchgfx7muldivuEmmmRm>
900182c6:	9b01      	ldr	r3, [sp, #4]
900182c8:	4368      	muls	r0, r5
900182ca:	435c      	muls	r4, r3
900182cc:	6034      	str	r4, [r6, #0]
900182ce:	b002      	add	sp, #8
900182d0:	bd70      	pop	{r4, r5, r6, pc}

900182d2 <_ZN8touchgfx6muldivElll>:
900182d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
900182d4:	4606      	mov	r6, r0
900182d6:	ab01      	add	r3, sp, #4
900182d8:	460d      	mov	r5, r1
900182da:	4614      	mov	r4, r2
900182dc:	f7ff ffda 	bl	90018294 <_ZN8touchgfx6muldivElllRl>
900182e0:	2e00      	cmp	r6, #0
900182e2:	db20      	blt.n	90018326 <_ZN8touchgfx6muldivElll+0x54>
900182e4:	bf14      	ite	ne
900182e6:	2301      	movne	r3, #1
900182e8:	2300      	moveq	r3, #0
900182ea:	2d00      	cmp	r5, #0
900182ec:	db1e      	blt.n	9001832c <_ZN8touchgfx6muldivElll+0x5a>
900182ee:	bf14      	ite	ne
900182f0:	2201      	movne	r2, #1
900182f2:	2200      	moveq	r2, #0
900182f4:	2c00      	cmp	r4, #0
900182f6:	fb03 f202 	mul.w	r2, r3, r2
900182fa:	db1a      	blt.n	90018332 <_ZN8touchgfx6muldivElll+0x60>
900182fc:	bf14      	ite	ne
900182fe:	2301      	movne	r3, #1
90018300:	2300      	moveq	r3, #0
90018302:	4353      	muls	r3, r2
90018304:	2b01      	cmp	r3, #1
90018306:	d117      	bne.n	90018338 <_ZN8touchgfx6muldivElll+0x66>
90018308:	2c00      	cmp	r4, #0
9001830a:	9b01      	ldr	r3, [sp, #4]
9001830c:	bfb8      	it	lt
9001830e:	4264      	neglt	r4, r4
90018310:	2b00      	cmp	r3, #0
90018312:	f104 0401 	add.w	r4, r4, #1
90018316:	bfb8      	it	lt
90018318:	425b      	neglt	r3, r3
9001831a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001831e:	db00      	blt.n	90018322 <_ZN8touchgfx6muldivElll+0x50>
90018320:	3001      	adds	r0, #1
90018322:	b002      	add	sp, #8
90018324:	bd70      	pop	{r4, r5, r6, pc}
90018326:	f04f 33ff 	mov.w	r3, #4294967295
9001832a:	e7de      	b.n	900182ea <_ZN8touchgfx6muldivElll+0x18>
9001832c:	f04f 32ff 	mov.w	r2, #4294967295
90018330:	e7e0      	b.n	900182f4 <_ZN8touchgfx6muldivElll+0x22>
90018332:	f04f 33ff 	mov.w	r3, #4294967295
90018336:	e7e4      	b.n	90018302 <_ZN8touchgfx6muldivElll+0x30>
90018338:	3301      	adds	r3, #1
9001833a:	d1f2      	bne.n	90018322 <_ZN8touchgfx6muldivElll+0x50>
9001833c:	9b01      	ldr	r3, [sp, #4]
9001833e:	2c00      	cmp	r4, #0
90018340:	bfb8      	it	lt
90018342:	4264      	neglt	r4, r4
90018344:	2b00      	cmp	r3, #0
90018346:	bfb8      	it	lt
90018348:	425b      	neglt	r3, r3
9001834a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001834e:	bfc8      	it	gt
90018350:	f100 30ff 	addgt.w	r0, r0, #4294967295
90018354:	e7e5      	b.n	90018322 <_ZN8touchgfx6muldivElll+0x50>

90018356 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90018356:	2000      	movs	r0, #0
90018358:	4770      	bx	lr

9001835a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
9001835a:	2001      	movs	r0, #1
9001835c:	4770      	bx	lr

9001835e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001835e:	2002      	movs	r0, #2
90018360:	4770      	bx	lr

90018362 <_ZN8touchgfx6ScreenD1Ev>:
90018362:	4770      	bx	lr

90018364 <_ZN8touchgfx6Screen11setupScreenEv>:
90018364:	4770      	bx	lr

90018366 <_ZN8touchgfx12GestureEventD1Ev>:
90018366:	4770      	bx	lr

90018368 <_ZN8touchgfx9DragEventD1Ev>:
90018368:	4770      	bx	lr

9001836a <_ZN8touchgfx10ClickEventD1Ev>:
9001836a:	4770      	bx	lr

9001836c <_ZN8touchgfx10ClickEventD0Ev>:
9001836c:	b510      	push	{r4, lr}
9001836e:	4604      	mov	r4, r0
90018370:	210c      	movs	r1, #12
90018372:	f00f fe5f 	bl	90028034 <_ZdlPvj>
90018376:	4620      	mov	r0, r4
90018378:	bd10      	pop	{r4, pc}

9001837a <_ZN8touchgfx9DragEventD0Ev>:
9001837a:	b510      	push	{r4, lr}
9001837c:	4604      	mov	r4, r0
9001837e:	2110      	movs	r1, #16
90018380:	f00f fe58 	bl	90028034 <_ZdlPvj>
90018384:	4620      	mov	r0, r4
90018386:	bd10      	pop	{r4, pc}

90018388 <_ZN8touchgfx12GestureEventD0Ev>:
90018388:	b510      	push	{r4, lr}
9001838a:	4604      	mov	r4, r0
9001838c:	210c      	movs	r1, #12
9001838e:	f00f fe51 	bl	90028034 <_ZdlPvj>
90018392:	4620      	mov	r0, r4
90018394:	bd10      	pop	{r4, pc}

90018396 <_ZN8touchgfx6ScreenD0Ev>:
90018396:	b510      	push	{r4, lr}
90018398:	4604      	mov	r4, r0
9001839a:	213c      	movs	r1, #60	; 0x3c
9001839c:	f00f fe4a 	bl	90028034 <_ZdlPvj>
900183a0:	4620      	mov	r0, r4
900183a2:	bd10      	pop	{r4, pc}

900183a4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
900183a4:	b530      	push	{r4, r5, lr}
900183a6:	460d      	mov	r5, r1
900183a8:	6b01      	ldr	r1, [r0, #48]	; 0x30
900183aa:	b087      	sub	sp, #28
900183ac:	4604      	mov	r4, r0
900183ae:	b301      	cbz	r1, 900183f2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
900183b0:	a801      	add	r0, sp, #4
900183b2:	f7ff fe3d 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900183b6:	892a      	ldrh	r2, [r5, #8]
900183b8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900183bc:	7928      	ldrb	r0, [r5, #4]
900183be:	1ad2      	subs	r2, r2, r3
900183c0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900183c2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900183c6:	441a      	add	r2, r3
900183c8:	896b      	ldrh	r3, [r5, #10]
900183ca:	f8bd 5006 	ldrh.w	r5, [sp, #6]
900183ce:	f88d 0010 	strb.w	r0, [sp, #16]
900183d2:	1b5b      	subs	r3, r3, r5
900183d4:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
900183d6:	6b20      	ldr	r0, [r4, #48]	; 0x30
900183d8:	442b      	add	r3, r5
900183da:	4d07      	ldr	r5, [pc, #28]	; (900183f8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
900183dc:	f8ad 1012 	strh.w	r1, [sp, #18]
900183e0:	a903      	add	r1, sp, #12
900183e2:	9503      	str	r5, [sp, #12]
900183e4:	f8ad 2014 	strh.w	r2, [sp, #20]
900183e8:	f8ad 3016 	strh.w	r3, [sp, #22]
900183ec:	6803      	ldr	r3, [r0, #0]
900183ee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900183f0:	4798      	blx	r3
900183f2:	b007      	add	sp, #28
900183f4:	bd30      	pop	{r4, r5, pc}
900183f6:	bf00      	nop
900183f8:	9002c634 	.word	0x9002c634

900183fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
900183fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018400:	6b03      	ldr	r3, [r0, #48]	; 0x30
90018402:	b08a      	sub	sp, #40	; 0x28
90018404:	4604      	mov	r4, r0
90018406:	460d      	mov	r5, r1
90018408:	b113      	cbz	r3, 90018410 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
9001840a:	790b      	ldrb	r3, [r1, #4]
9001840c:	2b00      	cmp	r3, #0
9001840e:	d044      	beq.n	9001849a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018410:	f104 0804 	add.w	r8, r4, #4
90018414:	a803      	add	r0, sp, #12
90018416:	4641      	mov	r1, r8
90018418:	f7ff fe0a 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001841c:	792b      	ldrb	r3, [r5, #4]
9001841e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90018422:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90018426:	b983      	cbnz	r3, 9001844a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90018428:	f104 0336 	add.w	r3, r4, #54	; 0x36
9001842c:	892a      	ldrh	r2, [r5, #8]
9001842e:	88e9      	ldrh	r1, [r5, #6]
90018430:	4640      	mov	r0, r8
90018432:	1b92      	subs	r2, r2, r6
90018434:	9301      	str	r3, [sp, #4]
90018436:	1bc9      	subs	r1, r1, r7
90018438:	f104 0334 	add.w	r3, r4, #52	; 0x34
9001843c:	b212      	sxth	r2, r2
9001843e:	9300      	str	r3, [sp, #0]
90018440:	b209      	sxth	r1, r1
90018442:	f104 0330 	add.w	r3, r4, #48	; 0x30
90018446:	f7f9 f901 	bl	9001164c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001844a:	6b21      	ldr	r1, [r4, #48]	; 0x30
9001844c:	b329      	cbz	r1, 9001849a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001844e:	a805      	add	r0, sp, #20
90018450:	f7ff fdee 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018454:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90018458:	792b      	ldrb	r3, [r5, #4]
9001845a:	a907      	add	r1, sp, #28
9001845c:	1abf      	subs	r7, r7, r2
9001845e:	88ea      	ldrh	r2, [r5, #6]
90018460:	6b20      	ldr	r0, [r4, #48]	; 0x30
90018462:	4417      	add	r7, r2
90018464:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
90018466:	f88d 3020 	strb.w	r3, [sp, #32]
9001846a:	4417      	add	r7, r2
9001846c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90018470:	1ab6      	subs	r6, r6, r2
90018472:	892a      	ldrh	r2, [r5, #8]
90018474:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90018478:	4416      	add	r6, r2
9001847a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001847c:	4416      	add	r6, r2
9001847e:	4a08      	ldr	r2, [pc, #32]	; (900184a0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90018480:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
90018484:	2600      	movs	r6, #0
90018486:	9207      	str	r2, [sp, #28]
90018488:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
9001848c:	6803      	ldr	r3, [r0, #0]
9001848e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90018490:	4798      	blx	r3
90018492:	792b      	ldrb	r3, [r5, #4]
90018494:	b10b      	cbz	r3, 9001849a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018496:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
9001849a:	b00a      	add	sp, #40	; 0x28
9001849c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900184a0:	9002c60c 	.word	0x9002c60c

900184a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
900184a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900184a8:	460c      	mov	r4, r1
900184aa:	6b01      	ldr	r1, [r0, #48]	; 0x30
900184ac:	b088      	sub	sp, #32
900184ae:	4605      	mov	r5, r0
900184b0:	2900      	cmp	r1, #0
900184b2:	d06d      	beq.n	90018590 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
900184b4:	4668      	mov	r0, sp
900184b6:	f7ff fdbb 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900184ba:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
900184bc:	88e3      	ldrh	r3, [r4, #6]
900184be:	f9bd 8000 	ldrsh.w	r8, [sp]
900184c2:	440b      	add	r3, r1
900184c4:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
900184c8:	b21b      	sxth	r3, r3
900184ca:	4543      	cmp	r3, r8
900184cc:	db31      	blt.n	90018532 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900184ce:	f8bd c004 	ldrh.w	ip, [sp, #4]
900184d2:	44c4      	add	ip, r8
900184d4:	fa0f fc8c 	sxth.w	ip, ip
900184d8:	4563      	cmp	r3, ip
900184da:	da2a      	bge.n	90018532 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900184dc:	8eea      	ldrh	r2, [r5, #54]	; 0x36
900184de:	8926      	ldrh	r6, [r4, #8]
900184e0:	4416      	add	r6, r2
900184e2:	b236      	sxth	r6, r6
900184e4:	42be      	cmp	r6, r7
900184e6:	db24      	blt.n	90018532 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900184e8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
900184ec:	4438      	add	r0, r7
900184ee:	b200      	sxth	r0, r0
900184f0:	4286      	cmp	r6, r0
900184f2:	da1e      	bge.n	90018532 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900184f4:	8963      	ldrh	r3, [r4, #10]
900184f6:	4419      	add	r1, r3
900184f8:	b209      	sxth	r1, r1
900184fa:	4541      	cmp	r1, r8
900184fc:	db08      	blt.n	90018510 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900184fe:	4561      	cmp	r1, ip
90018500:	da06      	bge.n	90018510 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90018502:	89a3      	ldrh	r3, [r4, #12]
90018504:	441a      	add	r2, r3
90018506:	b212      	sxth	r2, r2
90018508:	42ba      	cmp	r2, r7
9001850a:	db01      	blt.n	90018510 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001850c:	4282      	cmp	r2, r0
9001850e:	db10      	blt.n	90018532 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018510:	4b21      	ldr	r3, [pc, #132]	; (90018598 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90018512:	a904      	add	r1, sp, #16
90018514:	6b28      	ldr	r0, [r5, #48]	; 0x30
90018516:	9304      	str	r3, [sp, #16]
90018518:	2302      	movs	r3, #2
9001851a:	f88d 3014 	strb.w	r3, [sp, #20]
9001851e:	2300      	movs	r3, #0
90018520:	f8ad 3016 	strh.w	r3, [sp, #22]
90018524:	f8ad 3018 	strh.w	r3, [sp, #24]
90018528:	f8ad 301a 	strh.w	r3, [sp, #26]
9001852c:	6803      	ldr	r3, [r0, #0]
9001852e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90018530:	4798      	blx	r3
90018532:	1d29      	adds	r1, r5, #4
90018534:	a802      	add	r0, sp, #8
90018536:	f7ff fd7b 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001853a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001853e:	88e0      	ldrh	r0, [r4, #6]
90018540:	eba3 0808 	sub.w	r8, r3, r8
90018544:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018548:	7921      	ldrb	r1, [r4, #4]
9001854a:	fa1f f888 	uxth.w	r8, r8
9001854e:	1bdf      	subs	r7, r3, r7
90018550:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
90018554:	b2bb      	uxth	r3, r7
90018556:	4440      	add	r0, r8
90018558:	8922      	ldrh	r2, [r4, #8]
9001855a:	8967      	ldrh	r7, [r4, #10]
9001855c:	4460      	add	r0, ip
9001855e:	89a4      	ldrh	r4, [r4, #12]
90018560:	441a      	add	r2, r3
90018562:	8eee      	ldrh	r6, [r5, #54]	; 0x36
90018564:	44b8      	add	r8, r7
90018566:	4423      	add	r3, r4
90018568:	f8ad 0016 	strh.w	r0, [sp, #22]
9001856c:	4432      	add	r2, r6
9001856e:	44e0      	add	r8, ip
90018570:	4433      	add	r3, r6
90018572:	4c0a      	ldr	r4, [pc, #40]	; (9001859c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90018574:	6b28      	ldr	r0, [r5, #48]	; 0x30
90018576:	f88d 1014 	strb.w	r1, [sp, #20]
9001857a:	a904      	add	r1, sp, #16
9001857c:	9404      	str	r4, [sp, #16]
9001857e:	f8ad 2018 	strh.w	r2, [sp, #24]
90018582:	f8ad 801a 	strh.w	r8, [sp, #26]
90018586:	f8ad 301c 	strh.w	r3, [sp, #28]
9001858a:	6803      	ldr	r3, [r0, #0]
9001858c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001858e:	4798      	blx	r3
90018590:	b008      	add	sp, #32
90018592:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018596:	bf00      	nop
90018598:	9002c60c 	.word	0x9002c60c
9001859c:	9002c620 	.word	0x9002c620

900185a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
900185a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
900185a2:	4604      	mov	r4, r0
900185a4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
900185a8:	3201      	adds	r2, #1
900185aa:	d112      	bne.n	900185d2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
900185ac:	2500      	movs	r5, #0
900185ae:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900185b2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900185b6:	6803      	ldr	r3, [r0, #0]
900185b8:	9500      	str	r5, [sp, #0]
900185ba:	466d      	mov	r5, sp
900185bc:	f8ad 1004 	strh.w	r1, [sp, #4]
900185c0:	f8ad 2006 	strh.w	r2, [sp, #6]
900185c4:	4629      	mov	r1, r5
900185c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900185c8:	4798      	blx	r3
900185ca:	e895 0003 	ldmia.w	r5, {r0, r1}
900185ce:	e884 0003 	stmia.w	r4, {r0, r1}
900185d2:	4620      	mov	r0, r4
900185d4:	b003      	add	sp, #12
900185d6:	bd30      	pop	{r4, r5, pc}

900185d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
900185d8:	b513      	push	{r0, r1, r4, lr}
900185da:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900185de:	4604      	mov	r4, r0
900185e0:	3301      	adds	r3, #1
900185e2:	d109      	bne.n	900185f8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
900185e4:	4601      	mov	r1, r0
900185e6:	4668      	mov	r0, sp
900185e8:	f7ff fd22 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900185ec:	f8bd 3000 	ldrh.w	r3, [sp]
900185f0:	8423      	strh	r3, [r4, #32]
900185f2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900185f6:	8463      	strh	r3, [r4, #34]	; 0x22
900185f8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
900185fc:	b002      	add	sp, #8
900185fe:	bd10      	pop	{r4, pc}

90018600 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90018600:	b513      	push	{r0, r1, r4, lr}
90018602:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
90018606:	4604      	mov	r4, r0
90018608:	3301      	adds	r3, #1
9001860a:	d109      	bne.n	90018620 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001860c:	4601      	mov	r1, r0
9001860e:	4668      	mov	r0, sp
90018610:	f7ff fd0e 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018614:	f8bd 3000 	ldrh.w	r3, [sp]
90018618:	8423      	strh	r3, [r4, #32]
9001861a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001861e:	8463      	strh	r3, [r4, #34]	; 0x22
90018620:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
90018624:	b002      	add	sp, #8
90018626:	bd10      	pop	{r4, pc}

90018628 <_ZN8touchgfx6ScreenC1Ev>:
90018628:	b570      	push	{r4, r5, r6, lr}
9001862a:	4b17      	ldr	r3, [pc, #92]	; (90018688 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001862c:	4605      	mov	r5, r0
9001862e:	4a17      	ldr	r2, [pc, #92]	; (9001868c <_ZN8touchgfx6ScreenC1Ev+0x64>)
90018630:	2101      	movs	r1, #1
90018632:	f845 3b04 	str.w	r3, [r5], #4
90018636:	2300      	movs	r3, #0
90018638:	6042      	str	r2, [r0, #4]
9001863a:	4604      	mov	r4, r0
9001863c:	8103      	strh	r3, [r0, #8]
9001863e:	8143      	strh	r3, [r0, #10]
90018640:	8183      	strh	r3, [r0, #12]
90018642:	81c3      	strh	r3, [r0, #14]
90018644:	8203      	strh	r3, [r0, #16]
90018646:	8243      	strh	r3, [r0, #18]
90018648:	8283      	strh	r3, [r0, #20]
9001864a:	82c3      	strh	r3, [r0, #22]
9001864c:	6203      	str	r3, [r0, #32]
9001864e:	8483      	strh	r3, [r0, #36]	; 0x24
90018650:	84c3      	strh	r3, [r0, #38]	; 0x26
90018652:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90018656:	6343      	str	r3, [r0, #52]	; 0x34
90018658:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
9001865c:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
90018660:	e9c0 3306 	strd	r3, r3, [r0, #24]
90018664:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
90018668:	4b09      	ldr	r3, [pc, #36]	; (90018690 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001866a:	4628      	mov	r0, r5
9001866c:	f9b3 6000 	ldrsh.w	r6, [r3]
90018670:	6b93      	ldr	r3, [r2, #56]	; 0x38
90018672:	4a08      	ldr	r2, [pc, #32]	; (90018694 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90018674:	f9b2 1000 	ldrsh.w	r1, [r2]
90018678:	4798      	blx	r3
9001867a:	6863      	ldr	r3, [r4, #4]
9001867c:	4628      	mov	r0, r5
9001867e:	4631      	mov	r1, r6
90018680:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90018682:	4798      	blx	r3
90018684:	4620      	mov	r0, r4
90018686:	bd70      	pop	{r4, r5, r6, pc}
90018688:	9002c648 	.word	0x9002c648
9001868c:	9002beb0 	.word	0x9002beb0
90018690:	24039892 	.word	0x24039892
90018694:	24039890 	.word	0x24039890

90018698 <_ZN8touchgfx6Screen4drawEv>:
90018698:	4b09      	ldr	r3, [pc, #36]	; (900186c0 <_ZN8touchgfx6Screen4drawEv+0x28>)
9001869a:	b507      	push	{r0, r1, r2, lr}
9001869c:	f9b3 2000 	ldrsh.w	r2, [r3]
900186a0:	2100      	movs	r1, #0
900186a2:	4b08      	ldr	r3, [pc, #32]	; (900186c4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
900186a4:	9100      	str	r1, [sp, #0]
900186a6:	4669      	mov	r1, sp
900186a8:	f9b3 3000 	ldrsh.w	r3, [r3]
900186ac:	f8ad 2004 	strh.w	r2, [sp, #4]
900186b0:	f8ad 3006 	strh.w	r3, [sp, #6]
900186b4:	6803      	ldr	r3, [r0, #0]
900186b6:	689b      	ldr	r3, [r3, #8]
900186b8:	4798      	blx	r3
900186ba:	b003      	add	sp, #12
900186bc:	f85d fb04 	ldr.w	pc, [sp], #4
900186c0:	24039890 	.word	0x24039890
900186c4:	24039892 	.word	0x24039892

900186c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
900186c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900186cc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
900186d0:	b089      	sub	sp, #36	; 0x24
900186d2:	4680      	mov	r8, r0
900186d4:	460c      	mov	r4, r1
900186d6:	2b00      	cmp	r3, #0
900186d8:	4615      	mov	r5, r2
900186da:	dd0e      	ble.n	900186fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900186dc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900186e0:	2b00      	cmp	r3, #0
900186e2:	dd0a      	ble.n	900186fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900186e4:	4628      	mov	r0, r5
900186e6:	f7ff ff5b 	bl	900185a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900186ea:	4621      	mov	r1, r4
900186ec:	f7fe fa85 	bl	90016bfa <_ZNK8touchgfx4Rect9intersectERKS0_>
900186f0:	69eb      	ldr	r3, [r5, #28]
900186f2:	b928      	cbnz	r0, 90018700 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
900186f4:	461d      	mov	r5, r3
900186f6:	2b00      	cmp	r3, #0
900186f8:	d1f4      	bne.n	900186e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
900186fa:	b009      	add	sp, #36	; 0x24
900186fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018700:	ae04      	add	r6, sp, #16
90018702:	2b00      	cmp	r3, #0
90018704:	f000 80b5 	beq.w	90018872 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018708:	682b      	ldr	r3, [r5, #0]
9001870a:	4629      	mov	r1, r5
9001870c:	a802      	add	r0, sp, #8
9001870e:	68db      	ldr	r3, [r3, #12]
90018710:	4798      	blx	r3
90018712:	4628      	mov	r0, r5
90018714:	f7ff ff60 	bl	900185d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90018718:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001871c:	4407      	add	r7, r0
9001871e:	4628      	mov	r0, r5
90018720:	f7ff ff6e 	bl	90018600 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90018724:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018728:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001872c:	b23f      	sxth	r7, r7
9001872e:	4418      	add	r0, r3
90018730:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90018734:	4621      	mov	r1, r4
90018736:	f8ad 2014 	strh.w	r2, [sp, #20]
9001873a:	f8ad 0012 	strh.w	r0, [sp, #18]
9001873e:	4630      	mov	r0, r6
90018740:	f8ad 3016 	strh.w	r3, [sp, #22]
90018744:	f8ad 7010 	strh.w	r7, [sp, #16]
90018748:	f7f9 f862 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
9001874c:	4628      	mov	r0, r5
9001874e:	f7ff ff27 	bl	900185a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90018752:	ab06      	add	r3, sp, #24
90018754:	4602      	mov	r2, r0
90018756:	e896 0003 	ldmia.w	r6, {r0, r1}
9001875a:	e883 0003 	stmia.w	r3, {r0, r1}
9001875e:	4611      	mov	r1, r2
90018760:	4618      	mov	r0, r3
90018762:	f7f9 f855 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
90018766:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001876a:	f9b4 1000 	ldrsh.w	r1, [r4]
9001876e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90018772:	4299      	cmp	r1, r3
90018774:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90018778:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001877c:	d10b      	bne.n	90018796 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001877e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90018782:	4552      	cmp	r2, sl
90018784:	d107      	bne.n	90018796 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90018786:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001878a:	455a      	cmp	r2, fp
9001878c:	d103      	bne.n	90018796 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001878e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90018792:	454a      	cmp	r2, r9
90018794:	d06d      	beq.n	90018872 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018796:	f1bb 0f00 	cmp.w	fp, #0
9001879a:	dd65      	ble.n	90018868 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001879c:	f1b9 0f00 	cmp.w	r9, #0
900187a0:	dd62      	ble.n	90018868 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900187a2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900187a6:	fa1f f08a 	uxth.w	r0, sl
900187aa:	4552      	cmp	r2, sl
900187ac:	9000      	str	r0, [sp, #0]
900187ae:	da12      	bge.n	900187d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
900187b0:	9301      	str	r3, [sp, #4]
900187b2:	9b00      	ldr	r3, [sp, #0]
900187b4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900187b8:	f8ad 2012 	strh.w	r2, [sp, #18]
900187bc:	1a9a      	subs	r2, r3, r2
900187be:	f8ad 1010 	strh.w	r1, [sp, #16]
900187c2:	4631      	mov	r1, r6
900187c4:	f8ad 0014 	strh.w	r0, [sp, #20]
900187c8:	4640      	mov	r0, r8
900187ca:	f8ad 2016 	strh.w	r2, [sp, #22]
900187ce:	69ea      	ldr	r2, [r5, #28]
900187d0:	f7ff ff7a 	bl	900186c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900187d4:	9b01      	ldr	r3, [sp, #4]
900187d6:	f9b4 2000 	ldrsh.w	r2, [r4]
900187da:	b29f      	uxth	r7, r3
900187dc:	429a      	cmp	r2, r3
900187de:	da0d      	bge.n	900187fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
900187e0:	f8ad 2010 	strh.w	r2, [sp, #16]
900187e4:	1aba      	subs	r2, r7, r2
900187e6:	f8ad a012 	strh.w	sl, [sp, #18]
900187ea:	4631      	mov	r1, r6
900187ec:	f8ad 2014 	strh.w	r2, [sp, #20]
900187f0:	4640      	mov	r0, r8
900187f2:	f8ad 9016 	strh.w	r9, [sp, #22]
900187f6:	69ea      	ldr	r2, [r5, #28]
900187f8:	f7ff ff66 	bl	900186c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900187fc:	8822      	ldrh	r2, [r4, #0]
900187fe:	445f      	add	r7, fp
90018800:	88a3      	ldrh	r3, [r4, #4]
90018802:	b2bf      	uxth	r7, r7
90018804:	4413      	add	r3, r2
90018806:	b23a      	sxth	r2, r7
90018808:	b29b      	uxth	r3, r3
9001880a:	b219      	sxth	r1, r3
9001880c:	4291      	cmp	r1, r2
9001880e:	dd0d      	ble.n	9001882c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90018810:	1bdb      	subs	r3, r3, r7
90018812:	f8ad 2010 	strh.w	r2, [sp, #16]
90018816:	f8ad a012 	strh.w	sl, [sp, #18]
9001881a:	4631      	mov	r1, r6
9001881c:	f8ad 3014 	strh.w	r3, [sp, #20]
90018820:	4640      	mov	r0, r8
90018822:	f8ad 9016 	strh.w	r9, [sp, #22]
90018826:	69ea      	ldr	r2, [r5, #28]
90018828:	f7ff ff4e 	bl	900186c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001882c:	88e2      	ldrh	r2, [r4, #6]
9001882e:	8863      	ldrh	r3, [r4, #2]
90018830:	4413      	add	r3, r2
90018832:	9a00      	ldr	r2, [sp, #0]
90018834:	444a      	add	r2, r9
90018836:	b29b      	uxth	r3, r3
90018838:	fa1f f982 	uxth.w	r9, r2
9001883c:	b219      	sxth	r1, r3
9001883e:	fa0f f289 	sxth.w	r2, r9
90018842:	428a      	cmp	r2, r1
90018844:	da15      	bge.n	90018872 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018846:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001884a:	eba3 0309 	sub.w	r3, r3, r9
9001884e:	f9b4 0000 	ldrsh.w	r0, [r4]
90018852:	f8ad 1014 	strh.w	r1, [sp, #20]
90018856:	4631      	mov	r1, r6
90018858:	f8ad 0010 	strh.w	r0, [sp, #16]
9001885c:	f8ad 2012 	strh.w	r2, [sp, #18]
90018860:	f8ad 3016 	strh.w	r3, [sp, #22]
90018864:	69ea      	ldr	r2, [r5, #28]
90018866:	e001      	b.n	9001886c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90018868:	69ea      	ldr	r2, [r5, #28]
9001886a:	4621      	mov	r1, r4
9001886c:	4640      	mov	r0, r8
9001886e:	f7ff ff2b 	bl	900186c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90018872:	4628      	mov	r0, r5
90018874:	f7ff fe94 	bl	900185a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90018878:	6861      	ldr	r1, [r4, #4]
9001887a:	4602      	mov	r2, r0
9001887c:	4633      	mov	r3, r6
9001887e:	6820      	ldr	r0, [r4, #0]
90018880:	c303      	stmia	r3!, {r0, r1}
90018882:	4611      	mov	r1, r2
90018884:	4630      	mov	r0, r6
90018886:	f7f8 ffc3 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
9001888a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001888e:	2b00      	cmp	r3, #0
90018890:	f77f af33 	ble.w	900186fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90018894:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90018898:	2b00      	cmp	r3, #0
9001889a:	f77f af2e 	ble.w	900186fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001889e:	4628      	mov	r0, r5
900188a0:	f7ff fe9a 	bl	900185d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900188a4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
900188a8:	1a18      	subs	r0, r3, r0
900188aa:	f8ad 0010 	strh.w	r0, [sp, #16]
900188ae:	4628      	mov	r0, r5
900188b0:	f7ff fea6 	bl	90018600 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900188b4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900188b8:	4631      	mov	r1, r6
900188ba:	1a18      	subs	r0, r3, r0
900188bc:	f8ad 0012 	strh.w	r0, [sp, #18]
900188c0:	4628      	mov	r0, r5
900188c2:	682b      	ldr	r3, [r5, #0]
900188c4:	689b      	ldr	r3, [r3, #8]
900188c6:	4798      	blx	r3
900188c8:	e717      	b.n	900186fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

900188ca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
900188ca:	b570      	push	{r4, r5, r6, lr}
900188cc:	1d06      	adds	r6, r0, #4
900188ce:	b086      	sub	sp, #24
900188d0:	460c      	mov	r4, r1
900188d2:	2300      	movs	r3, #0
900188d4:	4631      	mov	r1, r6
900188d6:	4605      	mov	r5, r0
900188d8:	a802      	add	r0, sp, #8
900188da:	9301      	str	r3, [sp, #4]
900188dc:	f7ff fba8 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900188e0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
900188e4:	8822      	ldrh	r2, [r4, #0]
900188e6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
900188ea:	1ad2      	subs	r2, r2, r3
900188ec:	8863      	ldrh	r3, [r4, #2]
900188ee:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900188f2:	1a5b      	subs	r3, r3, r1
900188f4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
900188f8:	f8ad 2010 	strh.w	r2, [sp, #16]
900188fc:	aa01      	add	r2, sp, #4
900188fe:	f8ad 0014 	strh.w	r0, [sp, #20]
90018902:	4630      	mov	r0, r6
90018904:	f8ad 1016 	strh.w	r1, [sp, #22]
90018908:	a904      	add	r1, sp, #16
9001890a:	f8ad 3012 	strh.w	r3, [sp, #18]
9001890e:	f7f9 f857 	bl	900119c0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90018912:	9a01      	ldr	r2, [sp, #4]
90018914:	b11a      	cbz	r2, 9001891e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90018916:	4621      	mov	r1, r4
90018918:	4628      	mov	r0, r5
9001891a:	f7ff fed5 	bl	900186c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001891e:	b006      	add	sp, #24
90018920:	bd70      	pop	{r4, r5, r6, pc}

90018922 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90018922:	4602      	mov	r2, r0
90018924:	b530      	push	{r4, r5, lr}
90018926:	4604      	mov	r4, r0
90018928:	b085      	sub	sp, #20
9001892a:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001892e:	460d      	mov	r5, r1
90018930:	466b      	mov	r3, sp
90018932:	6851      	ldr	r1, [r2, #4]
90018934:	c303      	stmia	r3!, {r0, r1}
90018936:	4629      	mov	r1, r5
90018938:	4668      	mov	r0, sp
9001893a:	f7f8 ff69 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
9001893e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90018942:	b12b      	cbz	r3, 90018950 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90018944:	4669      	mov	r1, sp
90018946:	4620      	mov	r0, r4
90018948:	f7ff ffbf 	bl	900188ca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001894c:	b005      	add	sp, #20
9001894e:	bd30      	pop	{r4, r5, pc}
90018950:	3404      	adds	r4, #4
90018952:	a802      	add	r0, sp, #8
90018954:	4621      	mov	r1, r4
90018956:	f7ff fb6b 	bl	90018030 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001895a:	f8bd 3000 	ldrh.w	r3, [sp]
9001895e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90018962:	4669      	mov	r1, sp
90018964:	4620      	mov	r0, r4
90018966:	1a9b      	subs	r3, r3, r2
90018968:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001896c:	f8ad 3000 	strh.w	r3, [sp]
90018970:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90018974:	1a9b      	subs	r3, r3, r2
90018976:	f8ad 3002 	strh.w	r3, [sp, #2]
9001897a:	f7f8 ffe8 	bl	9001194e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001897e:	e7e5      	b.n	9001894c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90018980 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90018980:	460b      	mov	r3, r1
90018982:	680a      	ldr	r2, [r1, #0]
90018984:	1d01      	adds	r1, r0, #4
90018986:	6992      	ldr	r2, [r2, #24]
90018988:	4618      	mov	r0, r3
9001898a:	4710      	bx	r2

9001898c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
9001898c:	4298      	cmp	r0, r3
9001898e:	d200      	bcs.n	90018992 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
90018990:	b913      	cbnz	r3, 90018998 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
90018992:	440a      	add	r2, r1
90018994:	b210      	sxth	r0, r2
90018996:	4770      	bx	lr
90018998:	ee07 0a90 	vmov	s15, r0
9001899c:	eef8 6a67 	vcvt.f32.u32	s13, s15
900189a0:	ee07 3a90 	vmov	s15, r3
900189a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900189a8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
900189ac:	ee07 2a90 	vmov	s15, r2
900189b0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900189b4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
900189b8:	ee07 1a90 	vmov	s15, r1
900189bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900189c0:	ee37 7a66 	vsub.f32	s14, s14, s13
900189c4:	ee67 5a07 	vmul.f32	s11, s14, s14
900189c8:	eee5 6a87 	vfma.f32	s13, s11, s14
900189cc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
900189d0:	eee6 7a26 	vfma.f32	s15, s12, s13
900189d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900189d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900189dc:	bfcc      	ite	gt
900189de:	ee77 7a87 	vaddgt.f32	s15, s15, s14
900189e2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
900189e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
900189ea:	ee17 3a90 	vmov	r3, s15
900189ee:	b218      	sxth	r0, r3
900189f0:	4770      	bx	lr

900189f2 <_ZN8touchgfx12TextProviderC1Ev>:
900189f2:	b538      	push	{r3, r4, r5, lr}
900189f4:	2500      	movs	r5, #0
900189f6:	2302      	movs	r3, #2
900189f8:	4604      	mov	r4, r0
900189fa:	220e      	movs	r2, #14
900189fc:	7403      	strb	r3, [r0, #16]
900189fe:	4629      	mov	r1, r5
90018a00:	6145      	str	r5, [r0, #20]
90018a02:	7605      	strb	r5, [r0, #24]
90018a04:	83c5      	strh	r5, [r0, #30]
90018a06:	8405      	strh	r5, [r0, #32]
90018a08:	86c5      	strh	r5, [r0, #54]	; 0x36
90018a0a:	8705      	strh	r5, [r0, #56]	; 0x38
90018a0c:	87c5      	strh	r5, [r0, #62]	; 0x3e
90018a0e:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
90018a12:	e9c0 5500 	strd	r5, r5, [r0]
90018a16:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
90018a1a:	304c      	adds	r0, #76	; 0x4c
90018a1c:	f00f fdc0 	bl	900285a0 <memset>
90018a20:	2301      	movs	r3, #1
90018a22:	4620      	mov	r0, r4
90018a24:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
90018a28:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90018a2c:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
90018a30:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
90018a34:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
90018a38:	f7eb fc86 	bl	90004348 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90018a3c:	4620      	mov	r0, r4
90018a3e:	bd38      	pop	{r3, r4, r5, pc}

90018a40 <_ZN8touchgfx12TextProvider11endOfStringEv>:
90018a40:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90018a42:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90018a46:	8c40      	ldrh	r0, [r0, #34]	; 0x22
90018a48:	fab0 f080 	clz	r0, r0
90018a4c:	0940      	lsrs	r0, r0, #5
90018a4e:	4770      	bx	lr

90018a50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
90018a50:	b530      	push	{r4, r5, lr}
90018a52:	2500      	movs	r5, #0
90018a54:	2401      	movs	r4, #1
90018a56:	6843      	ldr	r3, [r0, #4]
90018a58:	b913      	cbnz	r3, 90018a60 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90018a5a:	6803      	ldr	r3, [r0, #0]
90018a5c:	b313      	cbz	r3, 90018aa4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90018a5e:	6043      	str	r3, [r0, #4]
90018a60:	7e03      	ldrb	r3, [r0, #24]
90018a62:	b143      	cbz	r3, 90018a76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90018a64:	6943      	ldr	r3, [r0, #20]
90018a66:	b12b      	cbz	r3, 90018a74 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90018a68:	881a      	ldrh	r2, [r3, #0]
90018a6a:	b11a      	cbz	r2, 90018a74 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90018a6c:	1c9a      	adds	r2, r3, #2
90018a6e:	6142      	str	r2, [r0, #20]
90018a70:	8818      	ldrh	r0, [r3, #0]
90018a72:	bd30      	pop	{r4, r5, pc}
90018a74:	7605      	strb	r5, [r0, #24]
90018a76:	6843      	ldr	r3, [r0, #4]
90018a78:	8819      	ldrh	r1, [r3, #0]
90018a7a:	b199      	cbz	r1, 90018aa4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90018a7c:	1c9a      	adds	r2, r3, #2
90018a7e:	2902      	cmp	r1, #2
90018a80:	6042      	str	r2, [r0, #4]
90018a82:	d1f5      	bne.n	90018a70 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90018a84:	7c03      	ldrb	r3, [r0, #16]
90018a86:	2b01      	cmp	r3, #1
90018a88:	d8e5      	bhi.n	90018a56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018a8a:	1c5a      	adds	r2, r3, #1
90018a8c:	3302      	adds	r3, #2
90018a8e:	7402      	strb	r2, [r0, #16]
90018a90:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90018a94:	6143      	str	r3, [r0, #20]
90018a96:	2b00      	cmp	r3, #0
90018a98:	d0dd      	beq.n	90018a56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018a9a:	881b      	ldrh	r3, [r3, #0]
90018a9c:	2b00      	cmp	r3, #0
90018a9e:	d0da      	beq.n	90018a56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018aa0:	7604      	strb	r4, [r0, #24]
90018aa2:	e7d8      	b.n	90018a56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018aa4:	2000      	movs	r0, #0
90018aa6:	e7e4      	b.n	90018a72 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90018aa8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90018aa8:	6001      	str	r1, [r0, #0]
90018aaa:	2100      	movs	r1, #0
90018aac:	b430      	push	{r4, r5}
90018aae:	6041      	str	r1, [r0, #4]
90018ab0:	6815      	ldr	r5, [r2, #0]
90018ab2:	6085      	str	r5, [r0, #8]
90018ab4:	6852      	ldr	r2, [r2, #4]
90018ab6:	6443      	str	r3, [r0, #68]	; 0x44
90018ab8:	9b02      	ldr	r3, [sp, #8]
90018aba:	60c2      	str	r2, [r0, #12]
90018abc:	7401      	strb	r1, [r0, #16]
90018abe:	6141      	str	r1, [r0, #20]
90018ac0:	7601      	strb	r1, [r0, #24]
90018ac2:	8701      	strh	r1, [r0, #56]	; 0x38
90018ac4:	8401      	strh	r1, [r0, #32]
90018ac6:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
90018aca:	6483      	str	r3, [r0, #72]	; 0x48
90018acc:	bc30      	pop	{r4, r5}
90018ace:	f7eb bc3b 	b.w	90004348 <_ZN8touchgfx12TextProvider18initializeInternalEv>

90018ad2 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
90018ad2:	b408      	push	{r3}
90018ad4:	b510      	push	{r4, lr}
90018ad6:	b085      	sub	sp, #20
90018ad8:	ac07      	add	r4, sp, #28
90018ada:	f854 3b04 	ldr.w	r3, [r4], #4
90018ade:	9300      	str	r3, [sp, #0]
90018ae0:	4613      	mov	r3, r2
90018ae2:	4622      	mov	r2, r4
90018ae4:	9403      	str	r4, [sp, #12]
90018ae6:	f7ff ffdf 	bl	90018aa8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018aea:	b005      	add	sp, #20
90018aec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90018af0:	b001      	add	sp, #4
90018af2:	4770      	bx	lr

90018af4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90018af4:	b5f0      	push	{r4, r5, r6, r7, lr}
90018af6:	4605      	mov	r5, r0
90018af8:	4608      	mov	r0, r1
90018afa:	b1f1      	cbz	r1, 90018b3a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90018afc:	f105 044c 	add.w	r4, r5, #76	; 0x4c
90018b00:	460b      	mov	r3, r1
90018b02:	f101 0708 	add.w	r7, r1, #8
90018b06:	4622      	mov	r2, r4
90018b08:	6818      	ldr	r0, [r3, #0]
90018b0a:	3308      	adds	r3, #8
90018b0c:	f853 1c04 	ldr.w	r1, [r3, #-4]
90018b10:	4626      	mov	r6, r4
90018b12:	42bb      	cmp	r3, r7
90018b14:	c603      	stmia	r6!, {r0, r1}
90018b16:	4634      	mov	r4, r6
90018b18:	d1f6      	bne.n	90018b08 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90018b1a:	6818      	ldr	r0, [r3, #0]
90018b1c:	6030      	str	r0, [r6, #0]
90018b1e:	4610      	mov	r0, r2
90018b20:	889b      	ldrh	r3, [r3, #4]
90018b22:	80b3      	strh	r3, [r6, #4]
90018b24:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
90018b28:	015b      	lsls	r3, r3, #5
90018b2a:	f403 7180 	and.w	r1, r3, #256	; 0x100
90018b2e:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
90018b32:	430b      	orrs	r3, r1
90018b34:	425b      	negs	r3, r3
90018b36:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
90018b3a:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018b3c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90018b3c:	b538      	push	{r3, r4, r5, lr}
90018b3e:	460c      	mov	r4, r1
90018b40:	6811      	ldr	r1, [r2, #0]
90018b42:	4610      	mov	r0, r2
90018b44:	68cd      	ldr	r5, [r1, #12]
90018b46:	4619      	mov	r1, r3
90018b48:	47a8      	blx	r5
90018b4a:	2800      	cmp	r0, #0
90018b4c:	bf08      	it	eq
90018b4e:	4620      	moveq	r0, r4
90018b50:	bd38      	pop	{r3, r4, r5, pc}
	...

90018b54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90018b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018b56:	4604      	mov	r4, r0
90018b58:	4615      	mov	r5, r2
90018b5a:	4608      	mov	r0, r1
90018b5c:	b93a      	cbnz	r2, 90018b6e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
90018b5e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
90018b62:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
90018b66:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
90018b6a:	4628      	mov	r0, r5
90018b6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90018b6e:	f892 c00d 	ldrb.w	ip, [r2, #13]
90018b72:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
90018b76:	8893      	ldrh	r3, [r2, #4]
90018b78:	ea4f 160c 	mov.w	r6, ip, lsl #4
90018b7c:	f406 7280 	and.w	r2, r6, #256	; 0x100
90018b80:	79ee      	ldrb	r6, [r5, #7]
90018b82:	4316      	orrs	r6, r2
90018b84:	19da      	adds	r2, r3, r7
90018b86:	b291      	uxth	r1, r2
90018b88:	b2b7      	uxth	r7, r6
90018b8a:	291d      	cmp	r1, #29
90018b8c:	d87b      	bhi.n	90018c86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90018b8e:	2201      	movs	r2, #1
90018b90:	10f6      	asrs	r6, r6, #3
90018b92:	408a      	lsls	r2, r1
90018b94:	4974      	ldr	r1, [pc, #464]	; (90018d68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90018b96:	420a      	tst	r2, r1
90018b98:	d12e      	bne.n	90018bf8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90018b9a:	f412 7f60 	tst.w	r2, #896	; 0x380
90018b9e:	d072      	beq.n	90018c86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90018ba0:	f104 024c 	add.w	r2, r4, #76	; 0x4c
90018ba4:	462b      	mov	r3, r5
90018ba6:	f105 0e08 	add.w	lr, r5, #8
90018baa:	4615      	mov	r5, r2
90018bac:	6818      	ldr	r0, [r3, #0]
90018bae:	3308      	adds	r3, #8
90018bb0:	f853 1c04 	ldr.w	r1, [r3, #-4]
90018bb4:	4694      	mov	ip, r2
90018bb6:	4573      	cmp	r3, lr
90018bb8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90018bbc:	4662      	mov	r2, ip
90018bbe:	d1f5      	bne.n	90018bac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90018bc0:	6818      	ldr	r0, [r3, #0]
90018bc2:	f8cc 0000 	str.w	r0, [ip]
90018bc6:	889b      	ldrh	r3, [r3, #4]
90018bc8:	f8ac 3004 	strh.w	r3, [ip, #4]
90018bcc:	b2b3      	uxth	r3, r6
90018bce:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
90018bd2:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
90018bd6:	1aca      	subs	r2, r1, r3
90018bd8:	1bcf      	subs	r7, r1, r7
90018bda:	f020 0060 	bic.w	r0, r0, #96	; 0x60
90018bde:	b292      	uxth	r2, r2
90018be0:	1afb      	subs	r3, r7, r3
90018be2:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
90018be6:	10d2      	asrs	r2, r2, #3
90018be8:	f002 0260 	and.w	r2, r2, #96	; 0x60
90018bec:	4302      	orrs	r2, r0
90018bee:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
90018bf2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
90018bf6:	e7b8      	b.n	90018b6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90018bf8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90018bfa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018bfe:	8c59      	ldrh	r1, [r3, #34]	; 0x22
90018c00:	f640 6333 	movw	r3, #3635	; 0xe33
90018c04:	4299      	cmp	r1, r3
90018c06:	d110      	bne.n	90018c2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
90018c08:	6803      	ldr	r3, [r0, #0]
90018c0a:	68db      	ldr	r3, [r3, #12]
90018c0c:	4798      	blx	r3
90018c0e:	7b41      	ldrb	r1, [r0, #13]
90018c10:	00cb      	lsls	r3, r1, #3
90018c12:	f403 7280 	and.w	r2, r3, #256	; 0x100
90018c16:	7a03      	ldrb	r3, [r0, #8]
90018c18:	0648      	lsls	r0, r1, #25
90018c1a:	ea43 0302 	orr.w	r3, r3, r2
90018c1e:	bf44      	itt	mi
90018c20:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018c24:	b21b      	sxthmi	r3, r3
90018c26:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018c2a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
90018c2e:	462a      	mov	r2, r5
90018c30:	f105 0c08 	add.w	ip, r5, #8
90018c34:	443b      	add	r3, r7
90018c36:	4433      	add	r3, r6
90018c38:	f104 064c 	add.w	r6, r4, #76	; 0x4c
90018c3c:	b29b      	uxth	r3, r3
90018c3e:	4635      	mov	r5, r6
90018c40:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018c44:	6810      	ldr	r0, [r2, #0]
90018c46:	3208      	adds	r2, #8
90018c48:	f852 1c04 	ldr.w	r1, [r2, #-4]
90018c4c:	4637      	mov	r7, r6
90018c4e:	4562      	cmp	r2, ip
90018c50:	c703      	stmia	r7!, {r0, r1}
90018c52:	463e      	mov	r6, r7
90018c54:	d1f6      	bne.n	90018c44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
90018c56:	6810      	ldr	r0, [r2, #0]
90018c58:	6038      	str	r0, [r7, #0]
90018c5a:	8892      	ldrh	r2, [r2, #4]
90018c5c:	80ba      	strh	r2, [r7, #4]
90018c5e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90018c62:	10db      	asrs	r3, r3, #3
90018c64:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90018c68:	f003 0360 	and.w	r3, r3, #96	; 0x60
90018c6c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90018c70:	4313      	orrs	r3, r2
90018c72:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
90018c76:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90018c7a:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
90018c7e:	1a9b      	subs	r3, r3, r2
90018c80:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
90018c84:	e771      	b.n	90018b6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90018c86:	f023 0204 	bic.w	r2, r3, #4
90018c8a:	f640 611b 	movw	r1, #3611	; 0xe1b
90018c8e:	428a      	cmp	r2, r1
90018c90:	d003      	beq.n	90018c9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
90018c92:	f640 621d 	movw	r2, #3613	; 0xe1d
90018c96:	4293      	cmp	r3, r2
90018c98:	d120      	bne.n	90018cdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
90018c9a:	3b01      	subs	r3, #1
90018c9c:	4602      	mov	r2, r0
90018c9e:	4629      	mov	r1, r5
90018ca0:	4620      	mov	r0, r4
90018ca2:	b29b      	uxth	r3, r3
90018ca4:	f7ff ff4a 	bl	90018b3c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018ca8:	7b41      	ldrb	r1, [r0, #13]
90018caa:	00cb      	lsls	r3, r1, #3
90018cac:	0649      	lsls	r1, r1, #25
90018cae:	f403 7280 	and.w	r2, r3, #256	; 0x100
90018cb2:	7a03      	ldrb	r3, [r0, #8]
90018cb4:	ea43 0302 	orr.w	r3, r3, r2
90018cb8:	bf44      	itt	mi
90018cba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018cbe:	b21b      	sxthmi	r3, r3
90018cc0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018cc4:	7b6b      	ldrb	r3, [r5, #13]
90018cc6:	7aaa      	ldrb	r2, [r5, #10]
90018cc8:	005b      	lsls	r3, r3, #1
90018cca:	f403 7380 	and.w	r3, r3, #256	; 0x100
90018cce:	4313      	orrs	r3, r2
90018cd0:	115a      	asrs	r2, r3, #5
90018cd2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
90018cd6:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90018cda:	e035      	b.n	90018d48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
90018cdc:	ea4f 02cc 	mov.w	r2, ip, lsl #3
90018ce0:	f01c 0f40 	tst.w	ip, #64	; 0x40
90018ce4:	f402 7180 	and.w	r1, r2, #256	; 0x100
90018ce8:	7a2a      	ldrb	r2, [r5, #8]
90018cea:	ea42 0201 	orr.w	r2, r2, r1
90018cee:	f640 6109 	movw	r1, #3593	; 0xe09
90018cf2:	bf1c      	itt	ne
90018cf4:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
90018cf8:	b212      	sxthne	r2, r2
90018cfa:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
90018cfe:	f023 0210 	bic.w	r2, r3, #16
90018d02:	428a      	cmp	r2, r1
90018d04:	d003      	beq.n	90018d0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
90018d06:	f640 6213 	movw	r2, #3603	; 0xe13
90018d0a:	4293      	cmp	r3, r2
90018d0c:	d129      	bne.n	90018d62 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
90018d0e:	7b6e      	ldrb	r6, [r5, #13]
90018d10:	4629      	mov	r1, r5
90018d12:	0076      	lsls	r6, r6, #1
90018d14:	f406 7280 	and.w	r2, r6, #256	; 0x100
90018d18:	7aae      	ldrb	r6, [r5, #10]
90018d1a:	4316      	orrs	r6, r2
90018d1c:	f640 6213 	movw	r2, #3603	; 0xe13
90018d20:	4293      	cmp	r3, r2
90018d22:	4602      	mov	r2, r0
90018d24:	4620      	mov	r0, r4
90018d26:	bf16      	itet	ne
90018d28:	f103 33ff 	addne.w	r3, r3, #4294967295
90018d2c:	f640 630c 	movweq	r3, #3596	; 0xe0c
90018d30:	b29b      	uxthne	r3, r3
90018d32:	f7ff ff03 	bl	90018b3c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018d36:	7b43      	ldrb	r3, [r0, #13]
90018d38:	7a82      	ldrb	r2, [r0, #10]
90018d3a:	005b      	lsls	r3, r3, #1
90018d3c:	f403 7380 	and.w	r3, r3, #256	; 0x100
90018d40:	4313      	orrs	r3, r2
90018d42:	1af6      	subs	r6, r6, r3
90018d44:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
90018d48:	7b69      	ldrb	r1, [r5, #13]
90018d4a:	00cb      	lsls	r3, r1, #3
90018d4c:	f403 7280 	and.w	r2, r3, #256	; 0x100
90018d50:	7a2b      	ldrb	r3, [r5, #8]
90018d52:	4313      	orrs	r3, r2
90018d54:	064a      	lsls	r2, r1, #25
90018d56:	bf44      	itt	mi
90018d58:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018d5c:	b21b      	sxthmi	r3, r3
90018d5e:	1bdb      	subs	r3, r3, r7
90018d60:	e747      	b.n	90018bf2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90018d62:	2300      	movs	r3, #0
90018d64:	e7b7      	b.n	90018cd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
90018d66:	bf00      	nop
90018d68:	3fc00079 	.word	0x3fc00079

90018d6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90018d6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90018d70:	4604      	mov	r4, r0
90018d72:	b942      	cbnz	r2, 90018d86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90018d74:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90018d78:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
90018d7c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
90018d80:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90018d84:	e047      	b.n	90018e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90018d86:	7b51      	ldrb	r1, [r2, #13]
90018d88:	8893      	ldrh	r3, [r2, #4]
90018d8a:	010d      	lsls	r5, r1, #4
90018d8c:	f405 7080 	and.w	r0, r5, #256	; 0x100
90018d90:	79d5      	ldrb	r5, [r2, #7]
90018d92:	4305      	orrs	r5, r0
90018d94:	2d04      	cmp	r5, #4
90018d96:	bfcc      	ite	gt
90018d98:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90018d9c:	f04f 0e01 	movle.w	lr, #1
90018da0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
90018da4:	f200 80ab 	bhi.w	90018efe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90018da8:	f240 60e7 	movw	r0, #1767	; 0x6e7
90018dac:	4283      	cmp	r3, r0
90018dae:	d216      	bcs.n	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018db0:	f240 605b 	movw	r0, #1627	; 0x65b
90018db4:	4283      	cmp	r3, r0
90018db6:	d859      	bhi.n	90018e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
90018db8:	f240 6057 	movw	r0, #1623	; 0x657
90018dbc:	4283      	cmp	r3, r0
90018dbe:	d20e      	bcs.n	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018dc0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90018dc4:	d24a      	bcs.n	90018e5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90018dc6:	f240 604e 	movw	r0, #1614	; 0x64e
90018dca:	4283      	cmp	r3, r0
90018dcc:	d207      	bcs.n	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018dce:	f240 601a 	movw	r0, #1562	; 0x61a
90018dd2:	4283      	cmp	r3, r0
90018dd4:	d02a      	beq.n	90018e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018dd6:	d821      	bhi.n	90018e1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
90018dd8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
90018ddc:	d35b      	bcc.n	90018e96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018dde:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
90018de2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90018de6:	f040 80d0 	bne.w	90018f8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90018dea:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
90018dee:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90018df2:	f040 80ca 	bne.w	90018f8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90018df6:	00cb      	lsls	r3, r1, #3
90018df8:	0649      	lsls	r1, r1, #25
90018dfa:	f403 7080 	and.w	r0, r3, #256	; 0x100
90018dfe:	7a13      	ldrb	r3, [r2, #8]
90018e00:	ea43 0300 	orr.w	r3, r3, r0
90018e04:	bf44      	itt	mi
90018e06:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018e0a:	b21b      	sxthmi	r3, r3
90018e0c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018e10:	1b5d      	subs	r5, r3, r5
90018e12:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90018e16:	4610      	mov	r0, r2
90018e18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90018e1c:	f240 604b 	movw	r0, #1611	; 0x64b
90018e20:	4283      	cmp	r3, r0
90018e22:	d338      	bcc.n	90018e96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018e24:	f240 604c 	movw	r0, #1612	; 0x64c
90018e28:	4283      	cmp	r3, r0
90018e2a:	d9d8      	bls.n	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018e2c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
90018e30:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
90018e34:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90018e38:	f040 80f3 	bne.w	90019022 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90018e3c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90018e40:	f040 80ef 	bne.w	90019022 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90018e44:	00cb      	lsls	r3, r1, #3
90018e46:	064e      	lsls	r6, r1, #25
90018e48:	f403 7080 	and.w	r0, r3, #256	; 0x100
90018e4c:	7a13      	ldrb	r3, [r2, #8]
90018e4e:	ea43 0300 	orr.w	r3, r3, r0
90018e52:	bf44      	itt	mi
90018e54:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018e58:	b21b      	sxthmi	r3, r3
90018e5a:	e7d9      	b.n	90018e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90018e5c:	f240 6054 	movw	r0, #1620	; 0x654
90018e60:	4283      	cmp	r3, r0
90018e62:	d8e3      	bhi.n	90018e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018e64:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90018e68:	d9e0      	bls.n	90018e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018e6a:	e7b8      	b.n	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018e6c:	f240 6074 	movw	r0, #1652	; 0x674
90018e70:	4283      	cmp	r3, r0
90018e72:	d0b4      	beq.n	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018e74:	d82d      	bhi.n	90018ed2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90018e76:	f240 605e 	movw	r0, #1630	; 0x65e
90018e7a:	4283      	cmp	r3, r0
90018e7c:	d804      	bhi.n	90018e88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90018e7e:	f240 605d 	movw	r0, #1629	; 0x65d
90018e82:	4283      	cmp	r3, r0
90018e84:	d3d2      	bcc.n	90018e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018e86:	e7aa      	b.n	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018e88:	f240 605f 	movw	r0, #1631	; 0x65f
90018e8c:	4283      	cmp	r3, r0
90018e8e:	d0cd      	beq.n	90018e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018e90:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
90018e94:	d0a3      	beq.n	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018e96:	00cb      	lsls	r3, r1, #3
90018e98:	0649      	lsls	r1, r1, #25
90018e9a:	f403 7080 	and.w	r0, r3, #256	; 0x100
90018e9e:	7a13      	ldrb	r3, [r2, #8]
90018ea0:	ea43 0300 	orr.w	r3, r3, r0
90018ea4:	bf44      	itt	mi
90018ea6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018eaa:	b21b      	sxthmi	r3, r3
90018eac:	1b5d      	subs	r5, r3, r5
90018eae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018eb2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90018eb6:	7b53      	ldrb	r3, [r2, #13]
90018eb8:	015b      	lsls	r3, r3, #5
90018eba:	f403 7180 	and.w	r1, r3, #256	; 0x100
90018ebe:	7993      	ldrb	r3, [r2, #6]
90018ec0:	430b      	orrs	r3, r1
90018ec2:	2105      	movs	r1, #5
90018ec4:	005b      	lsls	r3, r3, #1
90018ec6:	fb93 f3f1 	sdiv	r3, r3, r1
90018eca:	f992 1009 	ldrsb.w	r1, [r2, #9]
90018ece:	440b      	add	r3, r1
90018ed0:	e756      	b.n	90018d80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90018ed2:	f240 60e2 	movw	r0, #1762	; 0x6e2
90018ed6:	4283      	cmp	r3, r0
90018ed8:	d809      	bhi.n	90018eee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
90018eda:	f240 60df 	movw	r0, #1759	; 0x6df
90018ede:	4283      	cmp	r3, r0
90018ee0:	f4bf af7d 	bcs.w	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018ee4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
90018ee8:	2b05      	cmp	r3, #5
90018eea:	d8d4      	bhi.n	90018e96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018eec:	e777      	b.n	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018eee:	f240 60e3 	movw	r0, #1763	; 0x6e3
90018ef2:	4283      	cmp	r3, r0
90018ef4:	d09a      	beq.n	90018e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018ef6:	f240 60e4 	movw	r0, #1764	; 0x6e4
90018efa:	4283      	cmp	r3, r0
90018efc:	e7ca      	b.n	90018e94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90018efe:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
90018f02:	d22b      	bcs.n	90018f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90018f04:	f640 00ed 	movw	r0, #2285	; 0x8ed
90018f08:	4283      	cmp	r3, r0
90018f0a:	d28f      	bcs.n	90018e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018f0c:	f640 00e5 	movw	r0, #2277	; 0x8e5
90018f10:	4283      	cmp	r3, r0
90018f12:	d816      	bhi.n	90018f42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90018f14:	f640 00e4 	movw	r0, #2276	; 0x8e4
90018f18:	4283      	cmp	r3, r0
90018f1a:	f4bf af60 	bcs.w	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018f1e:	f240 60ec 	movw	r0, #1772	; 0x6ec
90018f22:	4283      	cmp	r3, r0
90018f24:	d80a      	bhi.n	90018f3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90018f26:	f240 60eb 	movw	r0, #1771	; 0x6eb
90018f2a:	4283      	cmp	r3, r0
90018f2c:	f4bf af57 	bcs.w	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018f30:	f240 60ea 	movw	r0, #1770	; 0x6ea
90018f34:	4283      	cmp	r3, r0
90018f36:	f43f af79 	beq.w	90018e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018f3a:	e7ac      	b.n	90018e96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018f3c:	f240 60ed 	movw	r0, #1773	; 0x6ed
90018f40:	e7f8      	b.n	90018f34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90018f42:	f640 00e8 	movw	r0, #2280	; 0x8e8
90018f46:	4283      	cmp	r3, r0
90018f48:	d802      	bhi.n	90018f50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90018f4a:	f640 00e7 	movw	r0, #2279	; 0x8e7
90018f4e:	e798      	b.n	90018e82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90018f50:	f640 00e9 	movw	r0, #2281	; 0x8e9
90018f54:	4283      	cmp	r3, r0
90018f56:	f47f af42 	bne.w	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018f5a:	e767      	b.n	90018e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018f5c:	f640 00f6 	movw	r0, #2294	; 0x8f6
90018f60:	4283      	cmp	r3, r0
90018f62:	f43f af63 	beq.w	90018e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018f66:	d802      	bhi.n	90018f6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90018f68:	f640 00f2 	movw	r0, #2290	; 0x8f2
90018f6c:	e7f2      	b.n	90018f54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90018f6e:	f640 00fa 	movw	r0, #2298	; 0x8fa
90018f72:	4283      	cmp	r3, r0
90018f74:	d805      	bhi.n	90018f82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90018f76:	f640 00f9 	movw	r0, #2297	; 0x8f9
90018f7a:	4283      	cmp	r3, r0
90018f7c:	f4ff af2f 	bcc.w	90018dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018f80:	e754      	b.n	90018e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018f82:	f640 00fe 	movw	r0, #2302	; 0x8fe
90018f86:	4283      	cmp	r3, r0
90018f88:	e7af      	b.n	90018eea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90018f8a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
90018f8e:	4617      	mov	r7, r2
90018f90:	f102 0808 	add.w	r8, r2, #8
90018f94:	4666      	mov	r6, ip
90018f96:	6838      	ldr	r0, [r7, #0]
90018f98:	3708      	adds	r7, #8
90018f9a:	f857 1c04 	ldr.w	r1, [r7, #-4]
90018f9e:	46e6      	mov	lr, ip
90018fa0:	4547      	cmp	r7, r8
90018fa2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90018fa6:	46f4      	mov	ip, lr
90018fa8:	d1f5      	bne.n	90018f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90018faa:	6838      	ldr	r0, [r7, #0]
90018fac:	f8ce 0000 	str.w	r0, [lr]
90018fb0:	88b9      	ldrh	r1, [r7, #4]
90018fb2:	f8ae 1004 	strh.w	r1, [lr, #4]
90018fb6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
90018fba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90018fbe:	d009      	beq.n	90018fd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90018fc0:	7b51      	ldrb	r1, [r2, #13]
90018fc2:	7992      	ldrb	r2, [r2, #6]
90018fc4:	0149      	lsls	r1, r1, #5
90018fc6:	f401 7180 	and.w	r1, r1, #256	; 0x100
90018fca:	4311      	orrs	r1, r2
90018fcc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90018fd0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
90018fd4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90018fd8:	b2ad      	uxth	r5, r5
90018fda:	d00d      	beq.n	90018ff8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90018fdc:	442b      	add	r3, r5
90018fde:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90018fe2:	b29b      	uxth	r3, r3
90018fe4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90018fe8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90018fec:	10db      	asrs	r3, r3, #3
90018fee:	f003 0360 	and.w	r3, r3, #96	; 0x60
90018ff2:	4313      	orrs	r3, r2
90018ff4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90018ff8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90018ffc:	00cb      	lsls	r3, r1, #3
90018ffe:	064f      	lsls	r7, r1, #25
90019000:	f403 7280 	and.w	r2, r3, #256	; 0x100
90019004:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
90019008:	ea43 0302 	orr.w	r3, r3, r2
9001900c:	bf44      	itt	mi
9001900e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90019012:	b21b      	sxthmi	r3, r3
90019014:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90019018:	1b5b      	subs	r3, r3, r5
9001901a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001901e:	4632      	mov	r2, r6
90019020:	e6f9      	b.n	90018e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90019022:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
90019026:	4617      	mov	r7, r2
90019028:	f102 0908 	add.w	r9, r2, #8
9001902c:	4666      	mov	r6, ip
9001902e:	6838      	ldr	r0, [r7, #0]
90019030:	3708      	adds	r7, #8
90019032:	f857 1c04 	ldr.w	r1, [r7, #-4]
90019036:	46e0      	mov	r8, ip
90019038:	454f      	cmp	r7, r9
9001903a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001903e:	46c4      	mov	ip, r8
90019040:	d1f5      	bne.n	9001902e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90019042:	6838      	ldr	r0, [r7, #0]
90019044:	f8c8 0000 	str.w	r0, [r8]
90019048:	88b9      	ldrh	r1, [r7, #4]
9001904a:	f8a8 1004 	strh.w	r1, [r8, #4]
9001904e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
90019052:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90019056:	d009      	beq.n	9001906c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90019058:	7b51      	ldrb	r1, [r2, #13]
9001905a:	7992      	ldrb	r2, [r2, #6]
9001905c:	0149      	lsls	r1, r1, #5
9001905e:	f401 7180 	and.w	r1, r1, #256	; 0x100
90019062:	4311      	orrs	r1, r2
90019064:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90019068:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
9001906c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90019070:	d00e      	beq.n	90019090 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90019072:	eba3 030e 	sub.w	r3, r3, lr
90019076:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001907a:	b29b      	uxth	r3, r3
9001907c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90019080:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90019084:	10db      	asrs	r3, r3, #3
90019086:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001908a:	4313      	orrs	r3, r2
9001908c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90019090:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90019094:	00cb      	lsls	r3, r1, #3
90019096:	0648      	lsls	r0, r1, #25
90019098:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001909c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
900190a0:	ea43 0302 	orr.w	r3, r3, r2
900190a4:	bf44      	itt	mi
900190a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900190aa:	b21b      	sxthmi	r3, r3
900190ac:	1b5d      	subs	r5, r3, r5
900190ae:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
900190b2:	e7b4      	b.n	9001901e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

900190b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
900190b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900190b8:	461e      	mov	r6, r3
900190ba:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900190bc:	4604      	mov	r4, r0
900190be:	4617      	mov	r7, r2
900190c0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900190c4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
900190c8:	f7eb f8ee 	bl	900042a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900190cc:	4605      	mov	r5, r0
900190ce:	b918      	cbnz	r0, 900190d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
900190d0:	6030      	str	r0, [r6, #0]
900190d2:	4628      	mov	r0, r5
900190d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900190d8:	683b      	ldr	r3, [r7, #0]
900190da:	4601      	mov	r1, r0
900190dc:	4638      	mov	r0, r7
900190de:	68db      	ldr	r3, [r3, #12]
900190e0:	4798      	blx	r3
900190e2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
900190e6:	4602      	mov	r2, r0
900190e8:	6030      	str	r0, [r6, #0]
900190ea:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
900190ee:	d213      	bcs.n	90019118 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
900190f0:	4643      	mov	r3, r8
900190f2:	4639      	mov	r1, r7
900190f4:	4620      	mov	r0, r4
900190f6:	f7ff fe39 	bl	90018d6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
900190fa:	6030      	str	r0, [r6, #0]
900190fc:	6833      	ldr	r3, [r6, #0]
900190fe:	b143      	cbz	r3, 90019112 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90019100:	7b5a      	ldrb	r2, [r3, #13]
90019102:	7a9b      	ldrb	r3, [r3, #10]
90019104:	0052      	lsls	r2, r2, #1
90019106:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001910a:	4313      	orrs	r3, r2
9001910c:	bf0c      	ite	eq
9001910e:	2301      	moveq	r3, #1
90019110:	2300      	movne	r3, #0
90019112:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
90019116:	e7dc      	b.n	900190d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90019118:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
9001911c:	b29b      	uxth	r3, r3
9001911e:	2b7f      	cmp	r3, #127	; 0x7f
90019120:	d804      	bhi.n	9001912c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90019122:	4639      	mov	r1, r7
90019124:	4620      	mov	r0, r4
90019126:	f7ff fd15 	bl	90018b54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001912a:	e7e6      	b.n	900190fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001912c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
90019130:	2b00      	cmp	r3, #0
90019132:	d0e3      	beq.n	900190fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90019134:	f640 1302 	movw	r3, #2306	; 0x902
90019138:	429d      	cmp	r5, r3
9001913a:	d1df      	bne.n	900190fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001913c:	4601      	mov	r1, r0
9001913e:	4620      	mov	r0, r4
90019140:	f7ff fcd8 	bl	90018af4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90019144:	e7d9      	b.n	900190fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90019146 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90019146:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001914a:	461e      	mov	r6, r3
9001914c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001914e:	4604      	mov	r4, r0
90019150:	4617      	mov	r7, r2
90019152:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90019156:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001915a:	f7eb f8a5 	bl	900042a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001915e:	4605      	mov	r5, r0
90019160:	b918      	cbnz	r0, 9001916a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90019162:	6030      	str	r0, [r6, #0]
90019164:	4628      	mov	r0, r5
90019166:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001916a:	683b      	ldr	r3, [r7, #0]
9001916c:	4601      	mov	r1, r0
9001916e:	4638      	mov	r0, r7
90019170:	f8d3 9008 	ldr.w	r9, [r3, #8]
90019174:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90019178:	47c8      	blx	r9
9001917a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001917e:	4602      	mov	r2, r0
90019180:	6030      	str	r0, [r6, #0]
90019182:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
90019186:	d213      	bcs.n	900191b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90019188:	4643      	mov	r3, r8
9001918a:	4639      	mov	r1, r7
9001918c:	4620      	mov	r0, r4
9001918e:	f7ff fded 	bl	90018d6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90019192:	6030      	str	r0, [r6, #0]
90019194:	6833      	ldr	r3, [r6, #0]
90019196:	b143      	cbz	r3, 900191aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90019198:	7b5a      	ldrb	r2, [r3, #13]
9001919a:	7a9b      	ldrb	r3, [r3, #10]
9001919c:	0052      	lsls	r2, r2, #1
9001919e:	f402 7280 	and.w	r2, r2, #256	; 0x100
900191a2:	4313      	orrs	r3, r2
900191a4:	bf0c      	ite	eq
900191a6:	2301      	moveq	r3, #1
900191a8:	2300      	movne	r3, #0
900191aa:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
900191ae:	e7d9      	b.n	90019164 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
900191b0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
900191b4:	b29b      	uxth	r3, r3
900191b6:	2b7f      	cmp	r3, #127	; 0x7f
900191b8:	d804      	bhi.n	900191c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
900191ba:	4639      	mov	r1, r7
900191bc:	4620      	mov	r0, r4
900191be:	f7ff fcc9 	bl	90018b54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
900191c2:	e7e6      	b.n	90019192 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
900191c4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
900191c8:	2b00      	cmp	r3, #0
900191ca:	d0e3      	beq.n	90019194 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
900191cc:	f640 1302 	movw	r3, #2306	; 0x902
900191d0:	429d      	cmp	r5, r3
900191d2:	d1df      	bne.n	90019194 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
900191d4:	4601      	mov	r1, r0
900191d6:	4620      	mov	r0, r4
900191d8:	f7ff fc8c 	bl	90018af4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
900191dc:	e7d9      	b.n	90019192 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

900191de <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
900191de:	b510      	push	{r4, lr}
900191e0:	4604      	mov	r4, r0
900191e2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
900191e6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900191e8:	b1e1      	cbz	r1, 90019224 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
900191ea:	2b0a      	cmp	r3, #10
900191ec:	d02d      	beq.n	9001924a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
900191ee:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
900191f0:	3901      	subs	r1, #1
900191f2:	eb04 0042 	add.w	r0, r4, r2, lsl #1
900191f6:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
900191f8:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
900191fc:	1c51      	adds	r1, r2, #1
900191fe:	b289      	uxth	r1, r1
90019200:	2901      	cmp	r1, #1
90019202:	bf8a      	itet	hi
90019204:	f102 32ff 	addhi.w	r2, r2, #4294967295
90019208:	87e1      	strhls	r1, [r4, #62]	; 0x3e
9001920a:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
9001920c:	1c5a      	adds	r2, r3, #1
9001920e:	8722      	strh	r2, [r4, #56]	; 0x38
90019210:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90019212:	4413      	add	r3, r2
90019214:	b29b      	uxth	r3, r3
90019216:	2b09      	cmp	r3, #9
90019218:	bf88      	it	hi
9001921a:	3b0a      	subhi	r3, #10
9001921c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019220:	8458      	strh	r0, [r3, #34]	; 0x22
90019222:	e7de      	b.n	900191e2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90019224:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90019226:	2b0a      	cmp	r3, #10
90019228:	d00f      	beq.n	9001924a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001922a:	4620      	mov	r0, r4
9001922c:	f7ff fc10 	bl	90018a50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90019230:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90019232:	1c5a      	adds	r2, r3, #1
90019234:	8722      	strh	r2, [r4, #56]	; 0x38
90019236:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90019238:	4413      	add	r3, r2
9001923a:	b29b      	uxth	r3, r3
9001923c:	2b09      	cmp	r3, #9
9001923e:	bf88      	it	hi
90019240:	3b0a      	subhi	r3, #10
90019242:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019246:	8458      	strh	r0, [r3, #34]	; 0x22
90019248:	e7ec      	b.n	90019224 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001924a:	bd10      	pop	{r4, pc}

9001924c <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001924c:	b538      	push	{r3, r4, r5, lr}
9001924e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90019250:	4604      	mov	r4, r0
90019252:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90019256:	8c55      	ldrh	r5, [r2, #34]	; 0x22
90019258:	8f02      	ldrh	r2, [r0, #56]	; 0x38
9001925a:	3a01      	subs	r2, #1
9001925c:	8702      	strh	r2, [r0, #56]	; 0x38
9001925e:	1c5a      	adds	r2, r3, #1
90019260:	b292      	uxth	r2, r2
90019262:	2a09      	cmp	r2, #9
90019264:	bf8a      	itet	hi
90019266:	3b09      	subhi	r3, #9
90019268:	86c2      	strhls	r2, [r0, #54]	; 0x36
9001926a:	86c3      	strhhi	r3, [r0, #54]	; 0x36
9001926c:	f7ff ffb7 	bl	900191de <_ZN8touchgfx12TextProvider15fillInputBufferEv>
90019270:	8c23      	ldrh	r3, [r4, #32]
90019272:	2b01      	cmp	r3, #1
90019274:	bf9c      	itt	ls
90019276:	3301      	addls	r3, #1
90019278:	8423      	strhls	r3, [r4, #32]
9001927a:	8be3      	ldrh	r3, [r4, #30]
9001927c:	b90b      	cbnz	r3, 90019282 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001927e:	2302      	movs	r3, #2
90019280:	83e3      	strh	r3, [r4, #30]
90019282:	8be3      	ldrh	r3, [r4, #30]
90019284:	4628      	mov	r0, r5
90019286:	3b01      	subs	r3, #1
90019288:	b29b      	uxth	r3, r3
9001928a:	83e3      	strh	r3, [r4, #30]
9001928c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019290:	8365      	strh	r5, [r4, #26]
90019292:	bd38      	pop	{r3, r4, r5, pc}

90019294 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90019294:	428a      	cmp	r2, r1
90019296:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001929a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
9001929c:	d932      	bls.n	90019304 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001929e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
900192a0:	1a54      	subs	r4, r2, r1
900192a2:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
900192a6:	19ee      	adds	r6, r5, r7
900192a8:	fa1f fe84 	uxth.w	lr, r4
900192ac:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
900192b0:	3e01      	subs	r6, #1
900192b2:	b2b4      	uxth	r4, r6
900192b4:	eba4 090e 	sub.w	r9, r4, lr
900192b8:	fa1f f989 	uxth.w	r9, r9
900192bc:	2c09      	cmp	r4, #9
900192be:	4626      	mov	r6, r4
900192c0:	bf88      	it	hi
900192c2:	f1a4 060a 	subhi.w	r6, r4, #10
900192c6:	f1bc 0f00 	cmp.w	ip, #0
900192ca:	f104 34ff 	add.w	r4, r4, #4294967295
900192ce:	bf08      	it	eq
900192d0:	f04f 0c02 	moveq.w	ip, #2
900192d4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
900192d8:	b2a4      	uxth	r4, r4
900192da:	f10c 3cff 	add.w	ip, ip, #4294967295
900192de:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
900192e2:	454c      	cmp	r4, r9
900192e4:	fa1f fc8c 	uxth.w	ip, ip
900192e8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
900192ec:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
900192f0:	d1e4      	bne.n	900192bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
900192f2:	eba5 050e 	sub.w	r5, r5, lr
900192f6:	eb0e 0408 	add.w	r4, lr, r8
900192fa:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
900192fe:	8705      	strh	r5, [r0, #56]	; 0x38
90019300:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
90019304:	8f04      	ldrh	r4, [r0, #56]	; 0x38
90019306:	250a      	movs	r5, #10
90019308:	1a64      	subs	r4, r4, r1
9001930a:	4439      	add	r1, r7
9001930c:	b289      	uxth	r1, r1
9001930e:	8704      	strh	r4, [r0, #56]	; 0x38
90019310:	2909      	cmp	r1, #9
90019312:	bf88      	it	hi
90019314:	390a      	subhi	r1, #10
90019316:	86c1      	strh	r1, [r0, #54]	; 0x36
90019318:	b18a      	cbz	r2, 9001933e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001931a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
9001931c:	3a01      	subs	r2, #1
9001931e:	3101      	adds	r1, #1
90019320:	b292      	uxth	r2, r2
90019322:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90019326:	8701      	strh	r1, [r0, #56]	; 0x38
90019328:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001932a:	b901      	cbnz	r1, 9001932e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001932c:	86c5      	strh	r5, [r0, #54]	; 0x36
9001932e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
90019330:	3901      	subs	r1, #1
90019332:	b289      	uxth	r1, r1
90019334:	86c1      	strh	r1, [r0, #54]	; 0x36
90019336:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001933a:	844c      	strh	r4, [r1, #34]	; 0x22
9001933c:	e7ec      	b.n	90019318 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001933e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90019342:	f7ff bf4c 	b.w	900191de <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90019346 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90019346:	b570      	push	{r4, r5, r6, lr}
90019348:	2500      	movs	r5, #0
9001934a:	4295      	cmp	r5, r2
9001934c:	d011      	beq.n	90019372 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001934e:	8bc4      	ldrh	r4, [r0, #30]
90019350:	f831 6b02 	ldrh.w	r6, [r1], #2
90019354:	4414      	add	r4, r2
90019356:	3c01      	subs	r4, #1
90019358:	1b64      	subs	r4, r4, r5
9001935a:	b2a4      	uxth	r4, r4
9001935c:	2c01      	cmp	r4, #1
9001935e:	bf88      	it	hi
90019360:	3c02      	subhi	r4, #2
90019362:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90019366:	8b64      	ldrh	r4, [r4, #26]
90019368:	42b4      	cmp	r4, r6
9001936a:	d117      	bne.n	9001939c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001936c:	3501      	adds	r5, #1
9001936e:	b2ad      	uxth	r5, r5
90019370:	e7eb      	b.n	9001934a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
90019372:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90019376:	2400      	movs	r4, #0
90019378:	4413      	add	r3, r2
9001937a:	b2a2      	uxth	r2, r4
9001937c:	429a      	cmp	r2, r3
9001937e:	da0f      	bge.n	900193a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
90019380:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
90019382:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90019386:	3401      	adds	r4, #1
90019388:	4432      	add	r2, r6
9001938a:	b292      	uxth	r2, r2
9001938c:	2a09      	cmp	r2, #9
9001938e:	bf88      	it	hi
90019390:	3a0a      	subhi	r2, #10
90019392:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90019396:	8c52      	ldrh	r2, [r2, #34]	; 0x22
90019398:	42aa      	cmp	r2, r5
9001939a:	d0ee      	beq.n	9001937a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001939c:	2000      	movs	r0, #0
9001939e:	bd70      	pop	{r4, r5, r6, pc}
900193a0:	2001      	movs	r0, #1
900193a2:	e7fc      	b.n	9001939e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

900193a4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
900193a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900193a8:	4605      	mov	r5, r0
900193aa:	4616      	mov	r6, r2
900193ac:	1c8c      	adds	r4, r1, #2
900193ae:	8809      	ldrh	r1, [r1, #0]
900193b0:	ea4f 3a11 	mov.w	sl, r1, lsr #12
900193b4:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
900193b8:	42b3      	cmp	r3, r6
900193ba:	d124      	bne.n	90019406 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
900193bc:	f3c1 2903 	ubfx	r9, r1, #8, #4
900193c0:	f3c1 1803 	ubfx	r8, r1, #4, #4
900193c4:	f001 070f 	and.w	r7, r1, #15
900193c8:	4652      	mov	r2, sl
900193ca:	f8cd 8000 	str.w	r8, [sp]
900193ce:	464b      	mov	r3, r9
900193d0:	4621      	mov	r1, r4
900193d2:	4628      	mov	r0, r5
900193d4:	f7ff ffb7 	bl	90019346 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
900193d8:	4683      	mov	fp, r0
900193da:	b168      	cbz	r0, 900193f8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
900193dc:	eb0a 0109 	add.w	r1, sl, r9
900193e0:	463a      	mov	r2, r7
900193e2:	4628      	mov	r0, r5
900193e4:	4441      	add	r1, r8
900193e6:	eb04 0341 	add.w	r3, r4, r1, lsl #1
900193ea:	4649      	mov	r1, r9
900193ec:	f7ff ff52 	bl	90019294 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
900193f0:	4658      	mov	r0, fp
900193f2:	b003      	add	sp, #12
900193f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900193f8:	eb07 010a 	add.w	r1, r7, sl
900193fc:	4449      	add	r1, r9
900193fe:	4441      	add	r1, r8
90019400:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90019404:	e7d2      	b.n	900193ac <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90019406:	f04f 0b00 	mov.w	fp, #0
9001940a:	e7f1      	b.n	900193f0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001940c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001940c:	b570      	push	{r4, r5, r6, lr}
9001940e:	8810      	ldrh	r0, [r2, #0]
90019410:	4298      	cmp	r0, r3
90019412:	d817      	bhi.n	90019444 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019414:	1e48      	subs	r0, r1, #1
90019416:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001941a:	4298      	cmp	r0, r3
9001941c:	d312      	bcc.n	90019444 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001941e:	2400      	movs	r4, #0
90019420:	428c      	cmp	r4, r1
90019422:	d20f      	bcs.n	90019444 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019424:	1860      	adds	r0, r4, r1
90019426:	1040      	asrs	r0, r0, #1
90019428:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001942c:	0085      	lsls	r5, r0, #2
9001942e:	42b3      	cmp	r3, r6
90019430:	d902      	bls.n	90019438 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
90019432:	3001      	adds	r0, #1
90019434:	b284      	uxth	r4, r0
90019436:	e7f3      	b.n	90019420 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90019438:	d201      	bcs.n	9001943e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001943a:	b281      	uxth	r1, r0
9001943c:	e7f0      	b.n	90019420 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001943e:	442a      	add	r2, r5
90019440:	8850      	ldrh	r0, [r2, #2]
90019442:	bd70      	pop	{r4, r5, r6, pc}
90019444:	2000      	movs	r0, #0
90019446:	e7fc      	b.n	90019442 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90019448 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90019448:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001944c:	6c45      	ldr	r5, [r0, #68]	; 0x44
9001944e:	4604      	mov	r4, r0
90019450:	260b      	movs	r6, #11
90019452:	886f      	ldrh	r7, [r5, #2]
90019454:	087f      	lsrs	r7, r7, #1
90019456:	3e01      	subs	r6, #1
90019458:	d013      	beq.n	90019482 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001945a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
9001945c:	462a      	mov	r2, r5
9001945e:	4639      	mov	r1, r7
90019460:	4620      	mov	r0, r4
90019462:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019466:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001946a:	4643      	mov	r3, r8
9001946c:	f7ff ffce 	bl	9001940c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90019470:	b138      	cbz	r0, 90019482 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90019472:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90019476:	4642      	mov	r2, r8
90019478:	4620      	mov	r0, r4
9001947a:	f7ff ff93 	bl	900193a4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001947e:	2800      	cmp	r0, #0
90019480:	d1e9      	bne.n	90019456 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
90019482:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90019488 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90019488:	b570      	push	{r4, r5, r6, lr}
9001948a:	694a      	ldr	r2, [r1, #20]
9001948c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9001948e:	684b      	ldr	r3, [r1, #4]
90019490:	1b54      	subs	r4, r2, r5
90019492:	6ace      	ldr	r6, [r1, #44]	; 0x2c
90019494:	f000 8106 	beq.w	900196a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90019498:	1b9b      	subs	r3, r3, r6
9001949a:	d003      	beq.n	900194a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001949c:	4363      	muls	r3, r4
9001949e:	2210      	movs	r2, #16
900194a0:	fb93 f3f2 	sdiv	r3, r3, r2
900194a4:	680c      	ldr	r4, [r1, #0]
900194a6:	698a      	ldr	r2, [r1, #24]
900194a8:	1b65      	subs	r5, r4, r5
900194aa:	f000 80fd 	beq.w	900196a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
900194ae:	1b92      	subs	r2, r2, r6
900194b0:	d003      	beq.n	900194ba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
900194b2:	436a      	muls	r2, r5
900194b4:	2410      	movs	r4, #16
900194b6:	fb92 f2f4 	sdiv	r2, r2, r4
900194ba:	1a9b      	subs	r3, r3, r2
900194bc:	ed9f 4a89 	vldr	s8, [pc, #548]	; 900196e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
900194c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900194c4:	460a      	mov	r2, r1
900194c6:	ee07 3a90 	vmov	s15, r3
900194ca:	f100 040c 	add.w	r4, r0, #12
900194ce:	4603      	mov	r3, r0
900194d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900194d4:	ee67 7a84 	vmul.f32	s15, s15, s8
900194d8:	ee87 3a27 	vdiv.f32	s6, s14, s15
900194dc:	eeb1 6a43 	vneg.f32	s12, s6
900194e0:	edd2 7a02 	vldr	s15, [r2, #8]
900194e4:	3214      	adds	r2, #20
900194e6:	eec7 6a27 	vdiv.f32	s13, s14, s15
900194ea:	ece3 6a01 	vstmia	r3!, {s13}
900194ee:	429c      	cmp	r4, r3
900194f0:	ed52 7a02 	vldr	s15, [r2, #-8]
900194f4:	ee67 7aa6 	vmul.f32	s15, s15, s13
900194f8:	edc3 7a02 	vstr	s15, [r3, #8]
900194fc:	ed52 7a01 	vldr	s15, [r2, #-4]
90019500:	ee67 7aa6 	vmul.f32	s15, s15, s13
90019504:	edc3 7a05 	vstr	s15, [r3, #20]
90019508:	d1ea      	bne.n	900194e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001950a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001950c:	698b      	ldr	r3, [r1, #24]
9001950e:	edd0 4a02 	vldr	s9, [r0, #8]
90019512:	1a9b      	subs	r3, r3, r2
90019514:	edd0 3a00 	vldr	s7, [r0]
90019518:	edd0 6a01 	vldr	s13, [r0, #4]
9001951c:	ee07 3a90 	vmov	s15, r3
90019520:	684b      	ldr	r3, [r1, #4]
90019522:	ee76 6ae4 	vsub.f32	s13, s13, s9
90019526:	ed90 5a05 	vldr	s10, [r0, #20]
9001952a:	1a9b      	subs	r3, r3, r2
9001952c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019530:	ee73 4ae4 	vsub.f32	s9, s7, s9
90019534:	ed90 2a03 	vldr	s4, [r0, #12]
90019538:	ee07 3a10 	vmov	s14, r3
9001953c:	edd0 5a04 	vldr	s11, [r0, #16]
90019540:	ee67 7a84 	vmul.f32	s15, s15, s8
90019544:	ed90 1a07 	vldr	s2, [r0, #28]
90019548:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001954c:	edd0 2a06 	vldr	s5, [r0, #24]
90019550:	ee75 5ac5 	vsub.f32	s11, s11, s10
90019554:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90019558:	ee27 7a04 	vmul.f32	s14, s14, s8
9001955c:	ee32 5a45 	vsub.f32	s10, s4, s10
90019560:	eee6 7a87 	vfma.f32	s15, s13, s14
90019564:	ee67 7a83 	vmul.f32	s15, s15, s6
90019568:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
9001956c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001956e:	694a      	ldr	r2, [r1, #20]
90019570:	1b13      	subs	r3, r2, r4
90019572:	ee07 3a10 	vmov	s14, r3
90019576:	680b      	ldr	r3, [r1, #0]
90019578:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001957c:	1b1b      	subs	r3, r3, r4
9001957e:	ee27 7a04 	vmul.f32	s14, s14, s8
90019582:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90019586:	ee07 3a10 	vmov	s14, r3
9001958a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001958e:	ee27 7a04 	vmul.f32	s14, s14, s8
90019592:	eee6 4a87 	vfma.f32	s9, s13, s14
90019596:	ee64 4a86 	vmul.f32	s9, s9, s12
9001959a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
9001959e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
900195a0:	698b      	ldr	r3, [r1, #24]
900195a2:	1a9b      	subs	r3, r3, r2
900195a4:	ee06 3a90 	vmov	s13, r3
900195a8:	684b      	ldr	r3, [r1, #4]
900195aa:	1a9b      	subs	r3, r3, r2
900195ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900195b0:	ee07 3a10 	vmov	s14, r3
900195b4:	ee66 6a84 	vmul.f32	s13, s13, s8
900195b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900195bc:	ee65 6a66 	vnmul.f32	s13, s10, s13
900195c0:	ee27 7a04 	vmul.f32	s14, s14, s8
900195c4:	eee5 6a87 	vfma.f32	s13, s11, s14
900195c8:	ee66 6a83 	vmul.f32	s13, s13, s6
900195cc:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
900195d0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
900195d2:	694a      	ldr	r2, [r1, #20]
900195d4:	1b13      	subs	r3, r2, r4
900195d6:	ee07 3a10 	vmov	s14, r3
900195da:	680b      	ldr	r3, [r1, #0]
900195dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900195e0:	1b1b      	subs	r3, r3, r4
900195e2:	ee27 7a04 	vmul.f32	s14, s14, s8
900195e6:	ee25 5a47 	vnmul.f32	s10, s10, s14
900195ea:	ee07 3a10 	vmov	s14, r3
900195ee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900195f2:	ee27 7a04 	vmul.f32	s14, s14, s8
900195f6:	eea5 5a87 	vfma.f32	s10, s11, s14
900195fa:	edd0 5a08 	vldr	s11, [r0, #32]
900195fe:	ee31 1a65 	vsub.f32	s2, s2, s11
90019602:	ee72 5ae5 	vsub.f32	s11, s5, s11
90019606:	ee25 5a06 	vmul.f32	s10, s10, s12
9001960a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
9001960e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90019610:	698b      	ldr	r3, [r1, #24]
90019612:	1a9b      	subs	r3, r3, r2
90019614:	ee07 3a10 	vmov	s14, r3
90019618:	684b      	ldr	r3, [r1, #4]
9001961a:	1a9b      	subs	r3, r3, r2
9001961c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019620:	ee01 3a90 	vmov	s3, r3
90019624:	ee27 7a04 	vmul.f32	s14, s14, s8
90019628:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001962c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90019630:	ee61 1a84 	vmul.f32	s3, s3, s8
90019634:	eea1 7a21 	vfma.f32	s14, s2, s3
90019638:	ee27 7a03 	vmul.f32	s14, s14, s6
9001963c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
90019640:	6a8c      	ldr	r4, [r1, #40]	; 0x28
90019642:	694a      	ldr	r2, [r1, #20]
90019644:	1b13      	subs	r3, r2, r4
90019646:	ee03 3a10 	vmov	s6, r3
9001964a:	680b      	ldr	r3, [r1, #0]
9001964c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90019650:	1b1b      	subs	r3, r3, r4
90019652:	ee23 3a04 	vmul.f32	s6, s6, s8
90019656:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001965a:	ee03 3a10 	vmov	s6, r3
9001965e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90019662:	ee23 4a04 	vmul.f32	s8, s6, s8
90019666:	eee1 5a04 	vfma.f32	s11, s2, s8
9001966a:	ee25 6a86 	vmul.f32	s12, s11, s12
9001966e:	ee62 5a67 	vnmul.f32	s11, s4, s15
90019672:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
90019676:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001967a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001967e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019682:	dd13      	ble.n	900196ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90019684:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90019688:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001968c:	63c3      	str	r3, [r0, #60]	; 0x3c
9001968e:	eee3 7a87 	vfma.f32	s15, s7, s14
90019692:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90019696:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001969a:	dd15      	ble.n	900196c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001969c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
900196a0:	6403      	str	r3, [r0, #64]	; 0x40
900196a2:	bd70      	pop	{r4, r5, r6, pc}
900196a4:	4623      	mov	r3, r4
900196a6:	e6fd      	b.n	900194a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
900196a8:	462a      	mov	r2, r5
900196aa:	e706      	b.n	900194ba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
900196ac:	d502      	bpl.n	900196b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
900196ae:	f647 73ff 	movw	r3, #32767	; 0x7fff
900196b2:	e7e9      	b.n	90019688 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
900196b4:	ee22 2a64 	vnmul.f32	s4, s4, s9
900196b8:	eea3 2a85 	vfma.f32	s4, s7, s10
900196bc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
900196c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900196c4:	dade      	bge.n	90019684 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
900196c6:	e7f2      	b.n	900196ae <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
900196c8:	d502      	bpl.n	900196d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
900196ca:	f647 73ff 	movw	r3, #32767	; 0x7fff
900196ce:	e7e7      	b.n	900196a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
900196d0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
900196d4:	eee3 4a86 	vfma.f32	s9, s7, s12
900196d8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
900196dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900196e0:	dadc      	bge.n	9001969c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
900196e2:	e7f2      	b.n	900196ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
900196e4:	3d800000 	.word	0x3d800000

900196e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
900196e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900196ec:	2714      	movs	r7, #20
900196ee:	435f      	muls	r7, r3
900196f0:	eb02 0c07 	add.w	ip, r2, r7
900196f4:	f8dc 5004 	ldr.w	r5, [ip, #4]
900196f8:	f115 0e0f 	adds.w	lr, r5, #15
900196fc:	f100 80a2 	bmi.w	90019844 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
90019700:	ea4f 1e2e 	mov.w	lr, lr, asr #4
90019704:	9c08      	ldr	r4, [sp, #32]
90019706:	2614      	movs	r6, #20
90019708:	f8c0 e014 	str.w	lr, [r0, #20]
9001970c:	4366      	muls	r6, r4
9001970e:	eb02 0806 	add.w	r8, r2, r6
90019712:	f8d8 5004 	ldr.w	r5, [r8, #4]
90019716:	f115 040f 	adds.w	r4, r5, #15
9001971a:	f100 809f 	bmi.w	9001985c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001971e:	1124      	asrs	r4, r4, #4
90019720:	eba4 040e 	sub.w	r4, r4, lr
90019724:	6184      	str	r4, [r0, #24]
90019726:	2c00      	cmp	r4, #0
90019728:	f000 808a 	beq.w	90019840 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001972c:	f8dc 9004 	ldr.w	r9, [ip, #4]
90019730:	f8d8 4004 	ldr.w	r4, [r8, #4]
90019734:	5995      	ldr	r5, [r2, r6]
90019736:	eba4 0809 	sub.w	r8, r4, r9
9001973a:	59d4      	ldr	r4, [r2, r7]
9001973c:	eba5 0a04 	sub.w	sl, r5, r4
90019740:	ea4f 1608 	mov.w	r6, r8, lsl #4
90019744:	ea4f 150a 	mov.w	r5, sl, lsl #4
90019748:	fb0e fe05 	mul.w	lr, lr, r5
9001974c:	fb0a ee19 	mls	lr, sl, r9, lr
90019750:	fb08 e404 	mla	r4, r8, r4, lr
90019754:	3c01      	subs	r4, #1
90019756:	19a4      	adds	r4, r4, r6
90019758:	f100 808c 	bmi.w	90019874 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001975c:	fb94 fef6 	sdiv	lr, r4, r6
90019760:	fb06 441e 	mls	r4, r6, lr, r4
90019764:	f8c0 e000 	str.w	lr, [r0]
90019768:	6104      	str	r4, [r0, #16]
9001976a:	2d00      	cmp	r5, #0
9001976c:	f2c0 8095 	blt.w	9001989a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
90019770:	fb95 f4f6 	sdiv	r4, r5, r6
90019774:	fb06 5514 	mls	r5, r6, r4, r5
90019778:	6044      	str	r4, [r0, #4]
9001977a:	6085      	str	r5, [r0, #8]
9001977c:	60c6      	str	r6, [r0, #12]
9001977e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90019782:	f8dc 4004 	ldr.w	r4, [ip, #4]
90019786:	6945      	ldr	r5, [r0, #20]
90019788:	59d2      	ldr	r2, [r2, r7]
9001978a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001978e:	eddf 6a4b 	vldr	s13, [pc, #300]	; 900198bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
90019792:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
90019796:	ee07 4a10 	vmov	s14, r4
9001979a:	6804      	ldr	r4, [r0, #0]
9001979c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
900197a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900197a4:	ee07 2a90 	vmov	s15, r2
900197a8:	ee27 7a26 	vmul.f32	s14, s14, s13
900197ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900197b0:	ee67 7aa6 	vmul.f32	s15, s15, s13
900197b4:	edd3 6a00 	vldr	s13, [r3]
900197b8:	eee6 6a07 	vfma.f32	s13, s12, s14
900197bc:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
900197c0:	eee6 6a27 	vfma.f32	s13, s12, s15
900197c4:	edc0 6a07 	vstr	s13, [r0, #28]
900197c8:	edd0 6a01 	vldr	s13, [r0, #4]
900197cc:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
900197d0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900197d4:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
900197d8:	eea6 6aa5 	vfma.f32	s12, s13, s11
900197dc:	ed80 6a08 	vstr	s12, [r0, #32]
900197e0:	6a4a      	ldr	r2, [r1, #36]	; 0x24
900197e2:	6242      	str	r2, [r0, #36]	; 0x24
900197e4:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
900197e8:	ed93 6a03 	vldr	s12, [r3, #12]
900197ec:	eea5 6a87 	vfma.f32	s12, s11, s14
900197f0:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
900197f4:	eea5 6aa7 	vfma.f32	s12, s11, s15
900197f8:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
900197fc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
90019800:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
90019804:	eea6 6aa5 	vfma.f32	s12, s13, s11
90019808:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
9001980c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001980e:	6302      	str	r2, [r0, #48]	; 0x30
90019810:	ed93 6a06 	vldr	s12, [r3, #24]
90019814:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
90019818:	eea5 6a87 	vfma.f32	s12, s11, s14
9001981c:	eeb0 7a46 	vmov.f32	s14, s12
90019820:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
90019824:	eea6 7a27 	vfma.f32	s14, s12, s15
90019828:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001982c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
90019830:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
90019834:	eee6 7a87 	vfma.f32	s15, s13, s14
90019838:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
9001983c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
9001983e:	63c3      	str	r3, [r0, #60]	; 0x3c
90019840:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90019844:	2410      	movs	r4, #16
90019846:	f1c5 0501 	rsb	r5, r5, #1
9001984a:	fb9e fef4 	sdiv	lr, lr, r4
9001984e:	f015 050f 	ands.w	r5, r5, #15
90019852:	bf18      	it	ne
90019854:	2501      	movne	r5, #1
90019856:	ebae 0e05 	sub.w	lr, lr, r5
9001985a:	e753      	b.n	90019704 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001985c:	f04f 0910 	mov.w	r9, #16
90019860:	f1c5 0501 	rsb	r5, r5, #1
90019864:	fb94 f4f9 	sdiv	r4, r4, r9
90019868:	f015 050f 	ands.w	r5, r5, #15
9001986c:	bf18      	it	ne
9001986e:	2501      	movne	r5, #1
90019870:	1b64      	subs	r4, r4, r5
90019872:	e755      	b.n	90019720 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
90019874:	4264      	negs	r4, r4
90019876:	fb94 fef6 	sdiv	lr, r4, r6
9001987a:	f1ce 0800 	rsb	r8, lr, #0
9001987e:	fb06 441e 	mls	r4, r6, lr, r4
90019882:	f8c0 8000 	str.w	r8, [r0]
90019886:	6104      	str	r4, [r0, #16]
90019888:	2c00      	cmp	r4, #0
9001988a:	f43f af6e 	beq.w	9001976a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001988e:	ea6f 0e0e 	mvn.w	lr, lr
90019892:	1b34      	subs	r4, r6, r4
90019894:	f8c0 e000 	str.w	lr, [r0]
90019898:	e766      	b.n	90019768 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001989a:	426d      	negs	r5, r5
9001989c:	fb95 f4f6 	sdiv	r4, r5, r6
900198a0:	f1c4 0e00 	rsb	lr, r4, #0
900198a4:	fb06 5514 	mls	r5, r6, r4, r5
900198a8:	f8c0 e004 	str.w	lr, [r0, #4]
900198ac:	6085      	str	r5, [r0, #8]
900198ae:	2d00      	cmp	r5, #0
900198b0:	f43f af64 	beq.w	9001977c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
900198b4:	43e4      	mvns	r4, r4
900198b6:	1b75      	subs	r5, r6, r5
900198b8:	6044      	str	r4, [r0, #4]
900198ba:	e75e      	b.n	9001977a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
900198bc:	3d800000 	.word	0x3d800000

900198c0 <_ZN8touchgfx7Unicode6strlenEPKt>:
900198c0:	4602      	mov	r2, r0
900198c2:	b148      	cbz	r0, 900198d8 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
900198c4:	2300      	movs	r3, #0
900198c6:	b298      	uxth	r0, r3
900198c8:	3301      	adds	r3, #1
900198ca:	eb02 0143 	add.w	r1, r2, r3, lsl #1
900198ce:	f831 1c02 	ldrh.w	r1, [r1, #-2]
900198d2:	2900      	cmp	r1, #0
900198d4:	d1f7      	bne.n	900198c6 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
900198d6:	4770      	bx	lr
900198d8:	4770      	bx	lr

900198da <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
900198da:	b530      	push	{r4, r5, lr}
900198dc:	4604      	mov	r4, r0
900198de:	b159      	cbz	r1, 900198f8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
900198e0:	b148      	cbz	r0, 900198f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900198e2:	2300      	movs	r3, #0
900198e4:	b298      	uxth	r0, r3
900198e6:	4282      	cmp	r2, r0
900198e8:	d905      	bls.n	900198f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900198ea:	5ccd      	ldrb	r5, [r1, r3]
900198ec:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
900198f0:	3301      	adds	r3, #1
900198f2:	2d00      	cmp	r5, #0
900198f4:	d1f6      	bne.n	900198e4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
900198f6:	bd30      	pop	{r4, r5, pc}
900198f8:	4608      	mov	r0, r1
900198fa:	e7fc      	b.n	900198f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

900198fc <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
900198fc:	b5f0      	push	{r4, r5, r6, r7, lr}
900198fe:	b08b      	sub	sp, #44	; 0x2c
90019900:	468c      	mov	ip, r1
90019902:	4604      	mov	r4, r0
90019904:	2100      	movs	r1, #0
90019906:	261f      	movs	r6, #31
90019908:	af01      	add	r7, sp, #4
9001990a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001990e:	1e71      	subs	r1, r6, #1
90019910:	fb94 fef3 	sdiv	lr, r4, r3
90019914:	fb03 441e 	mls	r4, r3, lr, r4
90019918:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001991c:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
90019920:	b2ec      	uxtb	r4, r5
90019922:	2d09      	cmp	r5, #9
90019924:	bfd4      	ite	le
90019926:	3430      	addle	r4, #48	; 0x30
90019928:	3457      	addgt	r4, #87	; 0x57
9001992a:	b2e4      	uxtb	r4, r4
9001992c:	55bc      	strb	r4, [r7, r6]
9001992e:	4674      	mov	r4, lr
90019930:	b974      	cbnz	r4, 90019950 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
90019932:	2800      	cmp	r0, #0
90019934:	da05      	bge.n	90019942 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
90019936:	ab0a      	add	r3, sp, #40	; 0x28
90019938:	4419      	add	r1, r3
9001993a:	232d      	movs	r3, #45	; 0x2d
9001993c:	f801 3c24 	strb.w	r3, [r1, #-36]
90019940:	1eb1      	subs	r1, r6, #2
90019942:	3101      	adds	r1, #1
90019944:	4660      	mov	r0, ip
90019946:	4439      	add	r1, r7
90019948:	f7ff ffc7 	bl	900198da <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001994c:	b00b      	add	sp, #44	; 0x2c
9001994e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90019950:	460e      	mov	r6, r1
90019952:	e7dc      	b.n	9001990e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

90019954 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
90019954:	b5f0      	push	{r4, r5, r6, r7, lr}
90019956:	468c      	mov	ip, r1
90019958:	b08b      	sub	sp, #44	; 0x2c
9001995a:	2100      	movs	r1, #0
9001995c:	ae01      	add	r6, sp, #4
9001995e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
90019962:	211f      	movs	r1, #31
90019964:	fbb0 f7f3 	udiv	r7, r0, r3
90019968:	fb03 0517 	mls	r5, r3, r7, r0
9001996c:	4638      	mov	r0, r7
9001996e:	b2ec      	uxtb	r4, r5
90019970:	2d09      	cmp	r5, #9
90019972:	bfd4      	ite	le
90019974:	3430      	addle	r4, #48	; 0x30
90019976:	3457      	addgt	r4, #87	; 0x57
90019978:	b2e4      	uxtb	r4, r4
9001997a:	558c      	strb	r4, [r1, r6]
9001997c:	1e4c      	subs	r4, r1, #1
9001997e:	b92f      	cbnz	r7, 9001998c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
90019980:	4431      	add	r1, r6
90019982:	4660      	mov	r0, ip
90019984:	f7ff ffa9 	bl	900198da <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90019988:	b00b      	add	sp, #44	; 0x2c
9001998a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001998c:	4621      	mov	r1, r4
9001998e:	e7e9      	b.n	90019964 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

90019990 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
90019990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019994:	b085      	sub	sp, #20
90019996:	4691      	mov	r9, r2
90019998:	6802      	ldr	r2, [r0, #0]
9001999a:	4688      	mov	r8, r1
9001999c:	461c      	mov	r4, r3
9001999e:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
900199a2:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
900199a6:	4683      	mov	fp, r0
900199a8:	4610      	mov	r0, r2
900199aa:	9103      	str	r1, [sp, #12]
900199ac:	9302      	str	r3, [sp, #8]
900199ae:	9201      	str	r2, [sp, #4]
900199b0:	f7ff ff86 	bl	900198c0 <_ZN8touchgfx7Unicode6strlenEPKt>
900199b4:	f1b8 0f00 	cmp.w	r8, #0
900199b8:	bf0c      	ite	eq
900199ba:	4684      	moveq	ip, r0
900199bc:	f100 0c01 	addne.w	ip, r0, #1
900199c0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
900199c4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
900199c8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
900199ca:	fa1f fc8c 	uxth.w	ip, ip
900199ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900199d0:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
900199d4:	9903      	ldr	r1, [sp, #12]
900199d6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
900199da:	d041      	beq.n	90019a60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900199dc:	d834      	bhi.n	90019a48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
900199de:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
900199e2:	d059      	beq.n	90019a98 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
900199e4:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
900199e8:	d03a      	beq.n	90019a60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900199ea:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
900199ee:	d034      	beq.n	90019a5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
900199f0:	2400      	movs	r4, #0
900199f2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
900199f6:	3a01      	subs	r2, #1
900199f8:	b169      	cbz	r1, 90019a16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900199fa:	9911      	ldr	r1, [sp, #68]	; 0x44
900199fc:	458c      	cmp	ip, r1
900199fe:	da09      	bge.n	90019a14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90019a00:	eba1 010c 	sub.w	r1, r1, ip
90019a04:	b289      	uxth	r1, r1
90019a06:	b933      	cbnz	r3, 90019a16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90019a08:	2e00      	cmp	r6, #0
90019a0a:	d051      	beq.n	90019ab0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90019a0c:	2800      	cmp	r0, #0
90019a0e:	d04f      	beq.n	90019ab0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90019a10:	440c      	add	r4, r1
90019a12:	b2a4      	uxth	r4, r4
90019a14:	2100      	movs	r1, #0
90019a16:	682b      	ldr	r3, [r5, #0]
90019a18:	4293      	cmp	r3, r2
90019a1a:	da07      	bge.n	90019a2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90019a1c:	f1b8 0f00 	cmp.w	r8, #0
90019a20:	d004      	beq.n	90019a2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90019a22:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
90019a26:	682b      	ldr	r3, [r5, #0]
90019a28:	3301      	adds	r3, #1
90019a2a:	602b      	str	r3, [r5, #0]
90019a2c:	2730      	movs	r7, #48	; 0x30
90019a2e:	2c00      	cmp	r4, #0
90019a30:	d04e      	beq.n	90019ad0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019a32:	682e      	ldr	r6, [r5, #0]
90019a34:	3c01      	subs	r4, #1
90019a36:	42b2      	cmp	r2, r6
90019a38:	b2a4      	uxth	r4, r4
90019a3a:	dd49      	ble.n	90019ad0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019a3c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90019a40:	682b      	ldr	r3, [r5, #0]
90019a42:	3301      	adds	r3, #1
90019a44:	602b      	str	r3, [r5, #0]
90019a46:	e7f2      	b.n	90019a2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
90019a48:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
90019a4c:	d01d      	beq.n	90019a8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
90019a4e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
90019a52:	d002      	beq.n	90019a5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90019a54:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
90019a58:	e7c9      	b.n	900199ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
90019a5a:	4684      	mov	ip, r0
90019a5c:	f04f 0800 	mov.w	r8, #0
90019a60:	2c00      	cmp	r4, #0
90019a62:	d0c6      	beq.n	900199f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019a64:	b947      	cbnz	r7, 90019a78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90019a66:	2801      	cmp	r0, #1
90019a68:	d106      	bne.n	90019a78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90019a6a:	8814      	ldrh	r4, [r2, #0]
90019a6c:	2c30      	cmp	r4, #48	; 0x30
90019a6e:	bf02      	ittt	eq
90019a70:	3202      	addeq	r2, #2
90019a72:	4638      	moveq	r0, r7
90019a74:	f8cb 2000 	streq.w	r2, [fp]
90019a78:	45bc      	cmp	ip, r7
90019a7a:	da14      	bge.n	90019aa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
90019a7c:	b2bf      	uxth	r7, r7
90019a7e:	eba7 040c 	sub.w	r4, r7, ip
90019a82:	46bc      	mov	ip, r7
90019a84:	b2a4      	uxth	r4, r4
90019a86:	2600      	movs	r6, #0
90019a88:	e7b3      	b.n	900199f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019a8a:	4684      	mov	ip, r0
90019a8c:	b16c      	cbz	r4, 90019aaa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
90019a8e:	42b8      	cmp	r0, r7
90019a90:	dd00      	ble.n	90019a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
90019a92:	b2b8      	uxth	r0, r7
90019a94:	2400      	movs	r4, #0
90019a96:	e003      	b.n	90019aa0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
90019a98:	f04f 0c01 	mov.w	ip, #1
90019a9c:	2400      	movs	r4, #0
90019a9e:	4660      	mov	r0, ip
90019aa0:	4626      	mov	r6, r4
90019aa2:	46a0      	mov	r8, r4
90019aa4:	e7a5      	b.n	900199f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019aa6:	2400      	movs	r4, #0
90019aa8:	e7ed      	b.n	90019a86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
90019aaa:	4626      	mov	r6, r4
90019aac:	46a0      	mov	r8, r4
90019aae:	e7a0      	b.n	900199f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019ab0:	2900      	cmp	r1, #0
90019ab2:	d0b0      	beq.n	90019a16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90019ab4:	2720      	movs	r7, #32
90019ab6:	682e      	ldr	r6, [r5, #0]
90019ab8:	2900      	cmp	r1, #0
90019aba:	d0ac      	beq.n	90019a16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90019abc:	3901      	subs	r1, #1
90019abe:	4296      	cmp	r6, r2
90019ac0:	b289      	uxth	r1, r1
90019ac2:	daa7      	bge.n	90019a14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90019ac4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90019ac8:	682b      	ldr	r3, [r5, #0]
90019aca:	3301      	adds	r3, #1
90019acc:	602b      	str	r3, [r5, #0]
90019ace:	e7f2      	b.n	90019ab6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
90019ad0:	b188      	cbz	r0, 90019af6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90019ad2:	682b      	ldr	r3, [r5, #0]
90019ad4:	3801      	subs	r0, #1
90019ad6:	429a      	cmp	r2, r3
90019ad8:	b280      	uxth	r0, r0
90019ada:	dd0c      	ble.n	90019af6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90019adc:	f8db 3000 	ldr.w	r3, [fp]
90019ae0:	1c9c      	adds	r4, r3, #2
90019ae2:	f8cb 4000 	str.w	r4, [fp]
90019ae6:	881c      	ldrh	r4, [r3, #0]
90019ae8:	682b      	ldr	r3, [r5, #0]
90019aea:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
90019aee:	682b      	ldr	r3, [r5, #0]
90019af0:	3301      	adds	r3, #1
90019af2:	602b      	str	r3, [r5, #0]
90019af4:	e7ec      	b.n	90019ad0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019af6:	2620      	movs	r6, #32
90019af8:	b151      	cbz	r1, 90019b10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90019afa:	6828      	ldr	r0, [r5, #0]
90019afc:	3901      	subs	r1, #1
90019afe:	4282      	cmp	r2, r0
90019b00:	b289      	uxth	r1, r1
90019b02:	dd05      	ble.n	90019b10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90019b04:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
90019b08:	682b      	ldr	r3, [r5, #0]
90019b0a:	3301      	adds	r3, #1
90019b0c:	602b      	str	r3, [r5, #0]
90019b0e:	e7f3      	b.n	90019af8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
90019b10:	b005      	add	sp, #20
90019b12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019b16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
90019b16:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90019b1a:	2400      	movs	r4, #0
90019b1c:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
90019b20:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
90019b24:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
90019b28:	8014      	strh	r4, [r2, #0]
90019b2a:	701c      	strb	r4, [r3, #0]
90019b2c:	f888 4000 	strb.w	r4, [r8]
90019b30:	f88c 4000 	strb.w	r4, [ip]
90019b34:	f88e 4000 	strb.w	r4, [lr]
90019b38:	703c      	strb	r4, [r7, #0]
90019b3a:	6804      	ldr	r4, [r0, #0]
90019b3c:	b1a4      	cbz	r4, 90019b68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
90019b3e:	8824      	ldrh	r4, [r4, #0]
90019b40:	f04f 0901 	mov.w	r9, #1
90019b44:	b314      	cbz	r4, 90019b8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019b46:	2c2b      	cmp	r4, #43	; 0x2b
90019b48:	d001      	beq.n	90019b4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
90019b4a:	2c20      	cmp	r4, #32
90019b4c:	d110      	bne.n	90019b70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
90019b4e:	8014      	strh	r4, [r2, #0]
90019b50:	6804      	ldr	r4, [r0, #0]
90019b52:	b10c      	cbz	r4, 90019b58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
90019b54:	3402      	adds	r4, #2
90019b56:	6004      	str	r4, [r0, #0]
90019b58:	680c      	ldr	r4, [r1, #0]
90019b5a:	b10c      	cbz	r4, 90019b60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
90019b5c:	3401      	adds	r4, #1
90019b5e:	600c      	str	r4, [r1, #0]
90019b60:	6804      	ldr	r4, [r0, #0]
90019b62:	b17c      	cbz	r4, 90019b84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
90019b64:	8824      	ldrh	r4, [r4, #0]
90019b66:	e7ed      	b.n	90019b44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90019b68:	680c      	ldr	r4, [r1, #0]
90019b6a:	b17c      	cbz	r4, 90019b8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019b6c:	7824      	ldrb	r4, [r4, #0]
90019b6e:	e7e7      	b.n	90019b40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
90019b70:	2c2d      	cmp	r4, #45	; 0x2d
90019b72:	d102      	bne.n	90019b7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
90019b74:	f883 9000 	strb.w	r9, [r3]
90019b78:	e7ea      	b.n	90019b50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90019b7a:	2c23      	cmp	r4, #35	; 0x23
90019b7c:	d107      	bne.n	90019b8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
90019b7e:	f888 9000 	strb.w	r9, [r8]
90019b82:	e7e5      	b.n	90019b50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90019b84:	680c      	ldr	r4, [r1, #0]
90019b86:	b10c      	cbz	r4, 90019b8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019b88:	7824      	ldrb	r4, [r4, #0]
90019b8a:	e7db      	b.n	90019b44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90019b8c:	2400      	movs	r4, #0
90019b8e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
90019b92:	2b09      	cmp	r3, #9
90019b94:	d901      	bls.n	90019b9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
90019b96:	2c2a      	cmp	r4, #42	; 0x2a
90019b98:	d122      	bne.n	90019be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019b9a:	2301      	movs	r3, #1
90019b9c:	2c30      	cmp	r4, #48	; 0x30
90019b9e:	f88e 3000 	strb.w	r3, [lr]
90019ba2:	d10d      	bne.n	90019bc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90019ba4:	f88c 3000 	strb.w	r3, [ip]
90019ba8:	6803      	ldr	r3, [r0, #0]
90019baa:	b10b      	cbz	r3, 90019bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
90019bac:	3302      	adds	r3, #2
90019bae:	6003      	str	r3, [r0, #0]
90019bb0:	680b      	ldr	r3, [r1, #0]
90019bb2:	b10b      	cbz	r3, 90019bb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
90019bb4:	3301      	adds	r3, #1
90019bb6:	600b      	str	r3, [r1, #0]
90019bb8:	6803      	ldr	r3, [r0, #0]
90019bba:	2b00      	cmp	r3, #0
90019bbc:	d02f      	beq.n	90019c1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
90019bbe:	881c      	ldrh	r4, [r3, #0]
90019bc0:	2c2a      	cmp	r4, #42	; 0x2a
90019bc2:	d135      	bne.n	90019c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90019bc4:	f04f 33ff 	mov.w	r3, #4294967295
90019bc8:	6033      	str	r3, [r6, #0]
90019bca:	6803      	ldr	r3, [r0, #0]
90019bcc:	b10b      	cbz	r3, 90019bd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
90019bce:	3302      	adds	r3, #2
90019bd0:	6003      	str	r3, [r0, #0]
90019bd2:	680b      	ldr	r3, [r1, #0]
90019bd4:	b10b      	cbz	r3, 90019bda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
90019bd6:	3301      	adds	r3, #1
90019bd8:	600b      	str	r3, [r1, #0]
90019bda:	6803      	ldr	r3, [r0, #0]
90019bdc:	b31b      	cbz	r3, 90019c26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
90019bde:	881c      	ldrh	r4, [r3, #0]
90019be0:	2c2e      	cmp	r4, #46	; 0x2e
90019be2:	d11a      	bne.n	90019c1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019be4:	2301      	movs	r3, #1
90019be6:	703b      	strb	r3, [r7, #0]
90019be8:	6803      	ldr	r3, [r0, #0]
90019bea:	b10b      	cbz	r3, 90019bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
90019bec:	3302      	adds	r3, #2
90019bee:	6003      	str	r3, [r0, #0]
90019bf0:	680b      	ldr	r3, [r1, #0]
90019bf2:	b10b      	cbz	r3, 90019bf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
90019bf4:	3301      	adds	r3, #1
90019bf6:	600b      	str	r3, [r1, #0]
90019bf8:	6803      	ldr	r3, [r0, #0]
90019bfa:	2b00      	cmp	r3, #0
90019bfc:	d036      	beq.n	90019c6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
90019bfe:	881b      	ldrh	r3, [r3, #0]
90019c00:	2b2a      	cmp	r3, #42	; 0x2a
90019c02:	d137      	bne.n	90019c74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90019c04:	f04f 33ff 	mov.w	r3, #4294967295
90019c08:	602b      	str	r3, [r5, #0]
90019c0a:	6803      	ldr	r3, [r0, #0]
90019c0c:	b10b      	cbz	r3, 90019c12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
90019c0e:	3302      	adds	r3, #2
90019c10:	6003      	str	r3, [r0, #0]
90019c12:	680b      	ldr	r3, [r1, #0]
90019c14:	b10b      	cbz	r3, 90019c1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019c16:	3301      	adds	r3, #1
90019c18:	600b      	str	r3, [r1, #0]
90019c1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90019c1e:	680c      	ldr	r4, [r1, #0]
90019c20:	b134      	cbz	r4, 90019c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90019c22:	7824      	ldrb	r4, [r4, #0]
90019c24:	e7cc      	b.n	90019bc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90019c26:	680b      	ldr	r3, [r1, #0]
90019c28:	2b00      	cmp	r3, #0
90019c2a:	d0f6      	beq.n	90019c1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019c2c:	781c      	ldrb	r4, [r3, #0]
90019c2e:	e7d7      	b.n	90019be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019c30:	2300      	movs	r3, #0
90019c32:	220a      	movs	r2, #10
90019c34:	6033      	str	r3, [r6, #0]
90019c36:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
90019c3a:	fa1f f38c 	uxth.w	r3, ip
90019c3e:	2b09      	cmp	r3, #9
90019c40:	d8ce      	bhi.n	90019be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019c42:	6833      	ldr	r3, [r6, #0]
90019c44:	fb02 c303 	mla	r3, r2, r3, ip
90019c48:	6033      	str	r3, [r6, #0]
90019c4a:	6803      	ldr	r3, [r0, #0]
90019c4c:	b10b      	cbz	r3, 90019c52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
90019c4e:	3302      	adds	r3, #2
90019c50:	6003      	str	r3, [r0, #0]
90019c52:	680b      	ldr	r3, [r1, #0]
90019c54:	b10b      	cbz	r3, 90019c5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
90019c56:	3301      	adds	r3, #1
90019c58:	600b      	str	r3, [r1, #0]
90019c5a:	6803      	ldr	r3, [r0, #0]
90019c5c:	b10b      	cbz	r3, 90019c62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
90019c5e:	881c      	ldrh	r4, [r3, #0]
90019c60:	e7e9      	b.n	90019c36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019c62:	680c      	ldr	r4, [r1, #0]
90019c64:	2c00      	cmp	r4, #0
90019c66:	d0e6      	beq.n	90019c36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019c68:	7824      	ldrb	r4, [r4, #0]
90019c6a:	e7e4      	b.n	90019c36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019c6c:	680b      	ldr	r3, [r1, #0]
90019c6e:	b10b      	cbz	r3, 90019c74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90019c70:	781b      	ldrb	r3, [r3, #0]
90019c72:	e7c5      	b.n	90019c00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90019c74:	2200      	movs	r2, #0
90019c76:	240a      	movs	r4, #10
90019c78:	602a      	str	r2, [r5, #0]
90019c7a:	3b30      	subs	r3, #48	; 0x30
90019c7c:	682a      	ldr	r2, [r5, #0]
90019c7e:	b29e      	uxth	r6, r3
90019c80:	2e09      	cmp	r6, #9
90019c82:	d813      	bhi.n	90019cac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90019c84:	fb04 3302 	mla	r3, r4, r2, r3
90019c88:	602b      	str	r3, [r5, #0]
90019c8a:	6803      	ldr	r3, [r0, #0]
90019c8c:	b10b      	cbz	r3, 90019c92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
90019c8e:	3302      	adds	r3, #2
90019c90:	6003      	str	r3, [r0, #0]
90019c92:	680b      	ldr	r3, [r1, #0]
90019c94:	b10b      	cbz	r3, 90019c9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
90019c96:	3301      	adds	r3, #1
90019c98:	600b      	str	r3, [r1, #0]
90019c9a:	6803      	ldr	r3, [r0, #0]
90019c9c:	b10b      	cbz	r3, 90019ca2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
90019c9e:	881b      	ldrh	r3, [r3, #0]
90019ca0:	e7eb      	b.n	90019c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019ca2:	680b      	ldr	r3, [r1, #0]
90019ca4:	2b00      	cmp	r3, #0
90019ca6:	d0e8      	beq.n	90019c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019ca8:	781b      	ldrb	r3, [r3, #0]
90019caa:	e7e6      	b.n	90019c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019cac:	2a06      	cmp	r2, #6
90019cae:	bfa8      	it	ge
90019cb0:	2206      	movge	r2, #6
90019cb2:	602a      	str	r2, [r5, #0]
90019cb4:	e7b1      	b.n	90019c1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

90019cb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
90019cb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019cba:	b0a3      	sub	sp, #140	; 0x8c
90019cbc:	2600      	movs	r6, #0
90019cbe:	4607      	mov	r7, r0
90019cc0:	4688      	mov	r8, r1
90019cc2:	f10d 0944 	add.w	r9, sp, #68	; 0x44
90019cc6:	4631      	mov	r1, r6
90019cc8:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
90019cca:	4648      	mov	r0, r9
90019ccc:	960d      	str	r6, [sp, #52]	; 0x34
90019cce:	e9cd 3208 	strd	r3, r2, [sp, #32]
90019cd2:	2242      	movs	r2, #66	; 0x42
90019cd4:	f00e fc64 	bl	900285a0 <memset>
90019cd8:	b15f      	cbz	r7, 90019cf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
90019cda:	f108 3aff 	add.w	sl, r8, #4294967295
90019cde:	9a09      	ldr	r2, [sp, #36]	; 0x24
90019ce0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90019ce2:	b152      	cbz	r2, 90019cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
90019ce4:	8812      	ldrh	r2, [r2, #0]
90019ce6:	b10a      	cbz	r2, 90019cec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90019ce8:	459a      	cmp	sl, r3
90019cea:	dc2e      	bgt.n	90019d4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
90019cec:	2200      	movs	r2, #0
90019cee:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90019cf2:	4638      	mov	r0, r7
90019cf4:	b023      	add	sp, #140	; 0x8c
90019cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019cfa:	9a08      	ldr	r2, [sp, #32]
90019cfc:	2a00      	cmp	r2, #0
90019cfe:	d0f5      	beq.n	90019cec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90019d00:	7812      	ldrb	r2, [r2, #0]
90019d02:	e7f0      	b.n	90019ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
90019d04:	2d00      	cmp	r5, #0
90019d06:	d0ea      	beq.n	90019cde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019d08:	782a      	ldrb	r2, [r5, #0]
90019d0a:	b142      	cbz	r2, 90019d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
90019d0c:	2a25      	cmp	r2, #37	; 0x25
90019d0e:	d001      	beq.n	90019d14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
90019d10:	459a      	cmp	sl, r3
90019d12:	dc08      	bgt.n	90019d26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90019d14:	f1bb 0f00 	cmp.w	fp, #0
90019d18:	d121      	bne.n	90019d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90019d1a:	2d00      	cmp	r5, #0
90019d1c:	d0df      	beq.n	90019cde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019d1e:	782a      	ldrb	r2, [r5, #0]
90019d20:	f04f 0b00 	mov.w	fp, #0
90019d24:	e01d      	b.n	90019d62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
90019d26:	f1bb 0f00 	cmp.w	fp, #0
90019d2a:	d077      	beq.n	90019e1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90019d2c:	f8bb 2000 	ldrh.w	r2, [fp]
90019d30:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90019d34:	f1bb 0f00 	cmp.w	fp, #0
90019d38:	d002      	beq.n	90019d40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
90019d3a:	f10b 0202 	add.w	r2, fp, #2
90019d3e:	9209      	str	r2, [sp, #36]	; 0x24
90019d40:	b10d      	cbz	r5, 90019d46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
90019d42:	3501      	adds	r5, #1
90019d44:	9508      	str	r5, [sp, #32]
90019d46:	3301      	adds	r3, #1
90019d48:	930d      	str	r3, [sp, #52]	; 0x34
90019d4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90019d4c:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
90019d50:	f1bb 0f00 	cmp.w	fp, #0
90019d54:	d0d6      	beq.n	90019d04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
90019d56:	f8bb 2000 	ldrh.w	r2, [fp]
90019d5a:	2a00      	cmp	r2, #0
90019d5c:	d1d6      	bne.n	90019d0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
90019d5e:	f8bb 2000 	ldrh.w	r2, [fp]
90019d62:	2a00      	cmp	r2, #0
90019d64:	d0bb      	beq.n	90019cde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019d66:	459a      	cmp	sl, r3
90019d68:	ddb9      	ble.n	90019cde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019d6a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
90019d6e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
90019d72:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
90019d76:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
90019d7a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
90019d7e:	960e      	str	r6, [sp, #56]	; 0x38
90019d80:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
90019d84:	960f      	str	r6, [sp, #60]	; 0x3c
90019d86:	f1bb 0f00 	cmp.w	fp, #0
90019d8a:	d002      	beq.n	90019d92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
90019d8c:	f10b 0302 	add.w	r3, fp, #2
90019d90:	9309      	str	r3, [sp, #36]	; 0x24
90019d92:	b10d      	cbz	r5, 90019d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
90019d94:	1c6b      	adds	r3, r5, #1
90019d96:	9308      	str	r3, [sp, #32]
90019d98:	ab0f      	add	r3, sp, #60	; 0x3c
90019d9a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
90019d9e:	a908      	add	r1, sp, #32
90019da0:	a809      	add	r0, sp, #36	; 0x24
90019da2:	9305      	str	r3, [sp, #20]
90019da4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
90019da8:	9304      	str	r3, [sp, #16]
90019daa:	ab0e      	add	r3, sp, #56	; 0x38
90019dac:	9303      	str	r3, [sp, #12]
90019dae:	ab0c      	add	r3, sp, #48	; 0x30
90019db0:	9302      	str	r3, [sp, #8]
90019db2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
90019db6:	9301      	str	r3, [sp, #4]
90019db8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
90019dbc:	9300      	str	r3, [sp, #0]
90019dbe:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
90019dc2:	f7ff fea8 	bl	90019b16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
90019dc6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019dc8:	2b00      	cmp	r3, #0
90019dca:	bfbf      	itttt	lt
90019dcc:	6823      	ldrlt	r3, [r4, #0]
90019dce:	3404      	addlt	r4, #4
90019dd0:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90019dd4:	930e      	strlt	r3, [sp, #56]	; 0x38
90019dd6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90019dd8:	2b00      	cmp	r3, #0
90019dda:	bfbe      	ittt	lt
90019ddc:	6823      	ldrlt	r3, [r4, #0]
90019dde:	3404      	addlt	r4, #4
90019de0:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90019de4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90019de8:	bfb8      	it	lt
90019dea:	930f      	strlt	r3, [sp, #60]	; 0x3c
90019dec:	b1d9      	cbz	r1, 90019e26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
90019dee:	880b      	ldrh	r3, [r1, #0]
90019df0:	2b69      	cmp	r3, #105	; 0x69
90019df2:	d01f      	beq.n	90019e34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019df4:	d82f      	bhi.n	90019e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
90019df6:	2b58      	cmp	r3, #88	; 0x58
90019df8:	d01c      	beq.n	90019e34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019dfa:	d818      	bhi.n	90019e2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
90019dfc:	2b25      	cmp	r3, #37	; 0x25
90019dfe:	d034      	beq.n	90019e6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
90019e00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90019e02:	e9cd 5b08 	strd	r5, fp, [sp, #32]
90019e06:	f1bb 0f00 	cmp.w	fp, #0
90019e0a:	f000 80b7 	beq.w	90019f7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
90019e0e:	f8bb 5000 	ldrh.w	r5, [fp]
90019e12:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
90019e16:	3301      	adds	r3, #1
90019e18:	930d      	str	r3, [sp, #52]	; 0x34
90019e1a:	e029      	b.n	90019e70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90019e1c:	b10d      	cbz	r5, 90019e22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
90019e1e:	782a      	ldrb	r2, [r5, #0]
90019e20:	e786      	b.n	90019d30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90019e22:	462a      	mov	r2, r5
90019e24:	e784      	b.n	90019d30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90019e26:	2a00      	cmp	r2, #0
90019e28:	d0ea      	beq.n	90019e00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019e2a:	7813      	ldrb	r3, [r2, #0]
90019e2c:	e7e0      	b.n	90019df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
90019e2e:	3b63      	subs	r3, #99	; 0x63
90019e30:	2b01      	cmp	r3, #1
90019e32:	d8e5      	bhi.n	90019e00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019e34:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
90019e38:	b329      	cbz	r1, 90019e86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
90019e3a:	880b      	ldrh	r3, [r1, #0]
90019e3c:	2b69      	cmp	r3, #105	; 0x69
90019e3e:	d063      	beq.n	90019f08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90019e40:	d825      	bhi.n	90019e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
90019e42:	2b63      	cmp	r3, #99	; 0x63
90019e44:	d038      	beq.n	90019eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
90019e46:	2b64      	cmp	r3, #100	; 0x64
90019e48:	d05e      	beq.n	90019f08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90019e4a:	2b58      	cmp	r3, #88	; 0x58
90019e4c:	d07a      	beq.n	90019f44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
90019e4e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
90019e52:	4625      	mov	r5, r4
90019e54:	e036      	b.n	90019ec4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019e56:	2b73      	cmp	r3, #115	; 0x73
90019e58:	d0ec      	beq.n	90019e34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019e5a:	d802      	bhi.n	90019e62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
90019e5c:	2b6f      	cmp	r3, #111	; 0x6f
90019e5e:	d1cf      	bne.n	90019e00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019e60:	e7e8      	b.n	90019e34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019e62:	2b75      	cmp	r3, #117	; 0x75
90019e64:	d0e6      	beq.n	90019e34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019e66:	2b78      	cmp	r3, #120	; 0x78
90019e68:	e7f9      	b.n	90019e5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
90019e6a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019e6c:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
90019e70:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019e72:	b10b      	cbz	r3, 90019e78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
90019e74:	3302      	adds	r3, #2
90019e76:	9309      	str	r3, [sp, #36]	; 0x24
90019e78:	9b08      	ldr	r3, [sp, #32]
90019e7a:	2b00      	cmp	r3, #0
90019e7c:	f43f af2f 	beq.w	90019cde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019e80:	3301      	adds	r3, #1
90019e82:	9308      	str	r3, [sp, #32]
90019e84:	e72b      	b.n	90019cde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019e86:	2a00      	cmp	r2, #0
90019e88:	d0e1      	beq.n	90019e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019e8a:	7813      	ldrb	r3, [r2, #0]
90019e8c:	e7d6      	b.n	90019e3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
90019e8e:	2b73      	cmp	r3, #115	; 0x73
90019e90:	d036      	beq.n	90019f00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
90019e92:	d807      	bhi.n	90019ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90019e94:	2b6f      	cmp	r3, #111	; 0x6f
90019e96:	d1da      	bne.n	90019e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019e98:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019e9a:	1d25      	adds	r5, r4, #4
90019e9c:	2308      	movs	r3, #8
90019e9e:	eba8 0202 	sub.w	r2, r8, r2
90019ea2:	e049      	b.n	90019f38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90019ea4:	2b75      	cmp	r3, #117	; 0x75
90019ea6:	d042      	beq.n	90019f2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90019ea8:	2b78      	cmp	r3, #120	; 0x78
90019eaa:	d1d0      	bne.n	90019e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019eac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019eae:	1d25      	adds	r5, r4, #4
90019eb0:	2310      	movs	r3, #16
90019eb2:	eba8 0202 	sub.w	r2, r8, r2
90019eb6:	e03f      	b.n	90019f38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90019eb8:	6823      	ldr	r3, [r4, #0]
90019eba:	1d25      	adds	r5, r4, #4
90019ebc:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
90019ec0:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90019ec4:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019ec6:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
90019eca:	2b00      	cmp	r3, #0
90019ecc:	d051      	beq.n	90019f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
90019ece:	881a      	ldrh	r2, [r3, #0]
90019ed0:	a80d      	add	r0, sp, #52	; 0x34
90019ed2:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
90019ed6:	462c      	mov	r4, r5
90019ed8:	9005      	str	r0, [sp, #20]
90019eda:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
90019ede:	9004      	str	r0, [sp, #16]
90019ee0:	980e      	ldr	r0, [sp, #56]	; 0x38
90019ee2:	9003      	str	r0, [sp, #12]
90019ee4:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
90019ee8:	9002      	str	r0, [sp, #8]
90019eea:	980f      	ldr	r0, [sp, #60]	; 0x3c
90019eec:	9001      	str	r0, [sp, #4]
90019eee:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
90019ef2:	e9cd 8706 	strd	r8, r7, [sp, #24]
90019ef6:	9000      	str	r0, [sp, #0]
90019ef8:	a810      	add	r0, sp, #64	; 0x40
90019efa:	f7ff fd49 	bl	90019990 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
90019efe:	e7b7      	b.n	90019e70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90019f00:	1d25      	adds	r5, r4, #4
90019f02:	6823      	ldr	r3, [r4, #0]
90019f04:	9310      	str	r3, [sp, #64]	; 0x40
90019f06:	e7dd      	b.n	90019ec4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019f08:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019f0a:	230a      	movs	r3, #10
90019f0c:	4649      	mov	r1, r9
90019f0e:	6820      	ldr	r0, [r4, #0]
90019f10:	eba8 0202 	sub.w	r2, r8, r2
90019f14:	1d25      	adds	r5, r4, #4
90019f16:	b292      	uxth	r2, r2
90019f18:	f7ff fcf0 	bl	900198fc <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
90019f1c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90019f20:	2b2d      	cmp	r3, #45	; 0x2d
90019f22:	d1cf      	bne.n	90019ec4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019f24:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90019f28:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019f2a:	3302      	adds	r3, #2
90019f2c:	e7ea      	b.n	90019f04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
90019f2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019f30:	1d25      	adds	r5, r4, #4
90019f32:	230a      	movs	r3, #10
90019f34:	eba8 0202 	sub.w	r2, r8, r2
90019f38:	b292      	uxth	r2, r2
90019f3a:	4649      	mov	r1, r9
90019f3c:	6820      	ldr	r0, [r4, #0]
90019f3e:	f7ff fd09 	bl	90019954 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90019f42:	e7bf      	b.n	90019ec4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019f44:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019f46:	2310      	movs	r3, #16
90019f48:	4649      	mov	r1, r9
90019f4a:	6820      	ldr	r0, [r4, #0]
90019f4c:	eba8 0202 	sub.w	r2, r8, r2
90019f50:	1d25      	adds	r5, r4, #4
90019f52:	b292      	uxth	r2, r2
90019f54:	f7ff fcfe 	bl	90019954 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90019f58:	f10d 0242 	add.w	r2, sp, #66	; 0x42
90019f5c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
90019f60:	2b00      	cmp	r3, #0
90019f62:	d0af      	beq.n	90019ec4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019f64:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
90019f68:	2919      	cmp	r1, #25
90019f6a:	d8f7      	bhi.n	90019f5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90019f6c:	3b20      	subs	r3, #32
90019f6e:	8013      	strh	r3, [r2, #0]
90019f70:	e7f4      	b.n	90019f5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90019f72:	9a08      	ldr	r2, [sp, #32]
90019f74:	2a00      	cmp	r2, #0
90019f76:	d0ab      	beq.n	90019ed0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90019f78:	7812      	ldrb	r2, [r2, #0]
90019f7a:	e7a9      	b.n	90019ed0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90019f7c:	2d00      	cmp	r5, #0
90019f7e:	f43f af48 	beq.w	90019e12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
90019f82:	782d      	ldrb	r5, [r5, #0]
90019f84:	e745      	b.n	90019e12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

90019f86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
90019f86:	b507      	push	{r0, r1, r2, lr}
90019f88:	9300      	str	r3, [sp, #0]
90019f8a:	4613      	mov	r3, r2
90019f8c:	2200      	movs	r2, #0
90019f8e:	f7ff fe92 	bl	90019cb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
90019f92:	b003      	add	sp, #12
90019f94:	f85d fb04 	ldr.w	pc, [sp], #4

90019f98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90019f98:	b40c      	push	{r2, r3}
90019f9a:	b507      	push	{r0, r1, r2, lr}
90019f9c:	ab04      	add	r3, sp, #16
90019f9e:	f853 2b04 	ldr.w	r2, [r3], #4
90019fa2:	9301      	str	r3, [sp, #4]
90019fa4:	f7ff ffef 	bl	90019f86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
90019fa8:	b003      	add	sp, #12
90019faa:	f85d eb04 	ldr.w	lr, [sp], #4
90019fae:	b002      	add	sp, #8
90019fb0:	4770      	bx	lr
	...

90019fb4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90019fb4:	4b01      	ldr	r3, [pc, #4]	; (90019fbc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
90019fb6:	6018      	str	r0, [r3, #0]
90019fb8:	4770      	bx	lr
90019fba:	bf00      	nop
90019fbc:	24039904 	.word	0x24039904

90019fc0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
90019fc0:	4b06      	ldr	r3, [pc, #24]	; (90019fdc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
90019fc2:	881a      	ldrh	r2, [r3, #0]
90019fc4:	4282      	cmp	r2, r0
90019fc6:	d807      	bhi.n	90019fd8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90019fc8:	4b05      	ldr	r3, [pc, #20]	; (90019fe0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
90019fca:	881b      	ldrh	r3, [r3, #0]
90019fcc:	4413      	add	r3, r2
90019fce:	4298      	cmp	r0, r3
90019fd0:	bfac      	ite	ge
90019fd2:	2000      	movge	r0, #0
90019fd4:	2001      	movlt	r0, #1
90019fd6:	4770      	bx	lr
90019fd8:	2000      	movs	r0, #0
90019fda:	4770      	bx	lr
90019fdc:	24039924 	.word	0x24039924
90019fe0:	24039928 	.word	0x24039928

90019fe4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90019fe4:	b508      	push	{r3, lr}
90019fe6:	4601      	mov	r1, r0
90019fe8:	f7ff ffea 	bl	90019fc0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
90019fec:	b118      	cbz	r0, 90019ff6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
90019fee:	4b02      	ldr	r3, [pc, #8]	; (90019ff8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
90019ff0:	681b      	ldr	r3, [r3, #0]
90019ff2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90019ff6:	bd08      	pop	{r3, pc}
90019ff8:	24039908 	.word	0x24039908

90019ffc <_ZN8touchgfx6Bitmap10clearCacheEv>:
90019ffc:	b5f0      	push	{r4, r5, r6, r7, lr}
90019ffe:	4c24      	ldr	r4, [pc, #144]	; (9001a090 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001a000:	6823      	ldr	r3, [r4, #0]
9001a002:	2b00      	cmp	r3, #0
9001a004:	d042      	beq.n	9001a08c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001a006:	4a23      	ldr	r2, [pc, #140]	; (9001a094 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001a008:	4d23      	ldr	r5, [pc, #140]	; (9001a098 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001a00a:	8811      	ldrh	r1, [r2, #0]
9001a00c:	f8b5 c000 	ldrh.w	ip, [r5]
9001a010:	4822      	ldr	r0, [pc, #136]	; (9001a09c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001a012:	4461      	add	r1, ip
9001a014:	1c4a      	adds	r2, r1, #1
9001a016:	008f      	lsls	r7, r1, #2
9001a018:	f022 0201 	bic.w	r2, r2, #1
9001a01c:	19de      	adds	r6, r3, r7
9001a01e:	0412      	lsls	r2, r2, #16
9001a020:	6006      	str	r6, [r0, #0]
9001a022:	4e1f      	ldr	r6, [pc, #124]	; (9001a0a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001a024:	0c12      	lsrs	r2, r2, #16
9001a026:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001a02a:	19da      	adds	r2, r3, r7
9001a02c:	6032      	str	r2, [r6, #0]
9001a02e:	220e      	movs	r2, #14
9001a030:	fb02 f20c 	mul.w	r2, r2, ip
9001a034:	3203      	adds	r2, #3
9001a036:	f022 0203 	bic.w	r2, r2, #3
9001a03a:	443a      	add	r2, r7
9001a03c:	4f19      	ldr	r7, [pc, #100]	; (9001a0a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001a03e:	4413      	add	r3, r2
9001a040:	603b      	str	r3, [r7, #0]
9001a042:	2300      	movs	r3, #0
9001a044:	4f18      	ldr	r7, [pc, #96]	; (9001a0a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001a046:	469c      	mov	ip, r3
9001a048:	803b      	strh	r3, [r7, #0]
9001a04a:	4f18      	ldr	r7, [pc, #96]	; (9001a0ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001a04c:	683f      	ldr	r7, [r7, #0]
9001a04e:	1aba      	subs	r2, r7, r2
9001a050:	4f17      	ldr	r7, [pc, #92]	; (9001a0b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001a052:	603a      	str	r2, [r7, #0]
9001a054:	f64f 77ff 	movw	r7, #65535	; 0xffff
9001a058:	4a16      	ldr	r2, [pc, #88]	; (9001a0b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001a05a:	8013      	strh	r3, [r2, #0]
9001a05c:	428b      	cmp	r3, r1
9001a05e:	d10d      	bne.n	9001a07c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001a060:	882d      	ldrh	r5, [r5, #0]
9001a062:	2300      	movs	r3, #0
9001a064:	6830      	ldr	r0, [r6, #0]
9001a066:	240e      	movs	r4, #14
9001a068:	429d      	cmp	r5, r3
9001a06a:	d90f      	bls.n	9001a08c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001a06c:	fb04 0203 	mla	r2, r4, r3, r0
9001a070:	3301      	adds	r3, #1
9001a072:	7b11      	ldrb	r1, [r2, #12]
9001a074:	f36f 1145 	bfc	r1, #5, #1
9001a078:	7311      	strb	r1, [r2, #12]
9001a07a:	e7f5      	b.n	9001a068 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001a07c:	6822      	ldr	r2, [r4, #0]
9001a07e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001a082:	6802      	ldr	r2, [r0, #0]
9001a084:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001a088:	3301      	adds	r3, #1
9001a08a:	e7e7      	b.n	9001a05c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001a08c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001a08e:	bf00      	nop
9001a090:	24039908 	.word	0x24039908
9001a094:	24039924 	.word	0x24039924
9001a098:	24039928 	.word	0x24039928
9001a09c:	2403991c 	.word	0x2403991c
9001a0a0:	2403990c 	.word	0x2403990c
9001a0a4:	24039914 	.word	0x24039914
9001a0a8:	24039926 	.word	0x24039926
9001a0ac:	24039910 	.word	0x24039910
9001a0b0:	24039920 	.word	0x24039920
9001a0b4:	24039918 	.word	0x24039918

9001a0b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001a0b8:	4b06      	ldr	r3, [pc, #24]	; (9001a0d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001a0ba:	681b      	ldr	r3, [r3, #0]
9001a0bc:	b943      	cbnz	r3, 9001a0d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001a0be:	b139      	cbz	r1, 9001a0d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001a0c0:	4b05      	ldr	r3, [pc, #20]	; (9001a0d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001a0c2:	801a      	strh	r2, [r3, #0]
9001a0c4:	4b05      	ldr	r3, [pc, #20]	; (9001a0dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001a0c6:	6019      	str	r1, [r3, #0]
9001a0c8:	4b05      	ldr	r3, [pc, #20]	; (9001a0e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001a0ca:	6018      	str	r0, [r3, #0]
9001a0cc:	f7ff bf96 	b.w	90019ffc <_ZN8touchgfx6Bitmap10clearCacheEv>
9001a0d0:	4770      	bx	lr
9001a0d2:	bf00      	nop
9001a0d4:	24039914 	.word	0x24039914
9001a0d8:	24039928 	.word	0x24039928
9001a0dc:	24039910 	.word	0x24039910
9001a0e0:	24039908 	.word	0x24039908

9001a0e4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001a0e4:	b470      	push	{r4, r5, r6}
9001a0e6:	4c07      	ldr	r4, [pc, #28]	; (9001a104 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001a0e8:	4605      	mov	r5, r0
9001a0ea:	4610      	mov	r0, r2
9001a0ec:	9a03      	ldr	r2, [sp, #12]
9001a0ee:	6826      	ldr	r6, [r4, #0]
9001a0f0:	b936      	cbnz	r6, 9001a100 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001a0f2:	6025      	str	r5, [r4, #0]
9001a0f4:	4c04      	ldr	r4, [pc, #16]	; (9001a108 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001a0f6:	8021      	strh	r1, [r4, #0]
9001a0f8:	4619      	mov	r1, r3
9001a0fa:	bc70      	pop	{r4, r5, r6}
9001a0fc:	f7ff bfdc 	b.w	9001a0b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001a100:	bc70      	pop	{r4, r5, r6}
9001a102:	4770      	bx	lr
9001a104:	2403992c 	.word	0x2403992c
9001a108:	24039924 	.word	0x24039924

9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001a10c:	4a12      	ldr	r2, [pc, #72]	; (9001a158 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001a10e:	8803      	ldrh	r3, [r0, #0]
9001a110:	8812      	ldrh	r2, [r2, #0]
9001a112:	4293      	cmp	r3, r2
9001a114:	d207      	bcs.n	9001a126 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001a116:	4a11      	ldr	r2, [pc, #68]	; (9001a15c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001a118:	2114      	movs	r1, #20
9001a11a:	6812      	ldr	r2, [r2, #0]
9001a11c:	fb01 2303 	mla	r3, r1, r3, r2
9001a120:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001a124:	4770      	bx	lr
9001a126:	490e      	ldr	r1, [pc, #56]	; (9001a160 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001a128:	8809      	ldrh	r1, [r1, #0]
9001a12a:	4411      	add	r1, r2
9001a12c:	428b      	cmp	r3, r1
9001a12e:	da04      	bge.n	9001a13a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001a130:	1a9b      	subs	r3, r3, r2
9001a132:	4a0c      	ldr	r2, [pc, #48]	; (9001a164 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001a134:	210e      	movs	r1, #14
9001a136:	6812      	ldr	r2, [r2, #0]
9001a138:	e7f0      	b.n	9001a11c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001a13a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001a13e:	4293      	cmp	r3, r2
9001a140:	d108      	bne.n	9001a154 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001a142:	4b09      	ldr	r3, [pc, #36]	; (9001a168 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001a144:	781b      	ldrb	r3, [r3, #0]
9001a146:	b91b      	cbnz	r3, 9001a150 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001a148:	4b08      	ldr	r3, [pc, #32]	; (9001a16c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001a14a:	f9b3 0000 	ldrsh.w	r0, [r3]
9001a14e:	4770      	bx	lr
9001a150:	4b07      	ldr	r3, [pc, #28]	; (9001a170 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001a152:	e7fa      	b.n	9001a14a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001a154:	2000      	movs	r0, #0
9001a156:	4770      	bx	lr
9001a158:	24039924 	.word	0x24039924
9001a15c:	2403992c 	.word	0x2403992c
9001a160:	24039928 	.word	0x24039928
9001a164:	2403990c 	.word	0x2403990c
9001a168:	24039894 	.word	0x24039894
9001a16c:	24039896 	.word	0x24039896
9001a170:	24039898 	.word	0x24039898

9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001a174:	4a12      	ldr	r2, [pc, #72]	; (9001a1c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001a176:	8803      	ldrh	r3, [r0, #0]
9001a178:	8812      	ldrh	r2, [r2, #0]
9001a17a:	4293      	cmp	r3, r2
9001a17c:	d207      	bcs.n	9001a18e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001a17e:	4a11      	ldr	r2, [pc, #68]	; (9001a1c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001a180:	2114      	movs	r1, #20
9001a182:	6812      	ldr	r2, [r2, #0]
9001a184:	fb01 2303 	mla	r3, r1, r3, r2
9001a188:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001a18c:	4770      	bx	lr
9001a18e:	490e      	ldr	r1, [pc, #56]	; (9001a1c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001a190:	8809      	ldrh	r1, [r1, #0]
9001a192:	4411      	add	r1, r2
9001a194:	428b      	cmp	r3, r1
9001a196:	da04      	bge.n	9001a1a2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001a198:	1a9b      	subs	r3, r3, r2
9001a19a:	4a0c      	ldr	r2, [pc, #48]	; (9001a1cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001a19c:	210e      	movs	r1, #14
9001a19e:	6812      	ldr	r2, [r2, #0]
9001a1a0:	e7f0      	b.n	9001a184 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001a1a2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001a1a6:	4293      	cmp	r3, r2
9001a1a8:	d108      	bne.n	9001a1bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001a1aa:	4b09      	ldr	r3, [pc, #36]	; (9001a1d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001a1ac:	781b      	ldrb	r3, [r3, #0]
9001a1ae:	b91b      	cbnz	r3, 9001a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001a1b0:	4b08      	ldr	r3, [pc, #32]	; (9001a1d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001a1b2:	f9b3 0000 	ldrsh.w	r0, [r3]
9001a1b6:	4770      	bx	lr
9001a1b8:	4b07      	ldr	r3, [pc, #28]	; (9001a1d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001a1ba:	e7fa      	b.n	9001a1b2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001a1bc:	2000      	movs	r0, #0
9001a1be:	4770      	bx	lr
9001a1c0:	24039924 	.word	0x24039924
9001a1c4:	2403992c 	.word	0x2403992c
9001a1c8:	24039928 	.word	0x24039928
9001a1cc:	2403990c 	.word	0x2403990c
9001a1d0:	24039894 	.word	0x24039894
9001a1d4:	24039898 	.word	0x24039898
9001a1d8:	24039896 	.word	0x24039896

9001a1dc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001a1dc:	4a1f      	ldr	r2, [pc, #124]	; (9001a25c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001a1de:	b510      	push	{r4, lr}
9001a1e0:	880b      	ldrh	r3, [r1, #0]
9001a1e2:	8812      	ldrh	r2, [r2, #0]
9001a1e4:	4293      	cmp	r3, r2
9001a1e6:	d213      	bcs.n	9001a210 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001a1e8:	4a1d      	ldr	r2, [pc, #116]	; (9001a260 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
9001a1ea:	2114      	movs	r1, #20
9001a1ec:	6812      	ldr	r2, [r2, #0]
9001a1ee:	fb01 2303 	mla	r3, r1, r3, r2
9001a1f2:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001a1f6:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001a1fa:	8a1a      	ldrh	r2, [r3, #16]
9001a1fc:	8a5b      	ldrh	r3, [r3, #18]
9001a1fe:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001a202:	8004      	strh	r4, [r0, #0]
9001a204:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001a208:	8041      	strh	r1, [r0, #2]
9001a20a:	8082      	strh	r2, [r0, #4]
9001a20c:	80c3      	strh	r3, [r0, #6]
9001a20e:	e00e      	b.n	9001a22e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001a210:	4914      	ldr	r1, [pc, #80]	; (9001a264 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001a212:	8809      	ldrh	r1, [r1, #0]
9001a214:	4411      	add	r1, r2
9001a216:	428b      	cmp	r3, r1
9001a218:	da0a      	bge.n	9001a230 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
9001a21a:	1a9b      	subs	r3, r3, r2
9001a21c:	4a12      	ldr	r2, [pc, #72]	; (9001a268 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001a21e:	210e      	movs	r1, #14
9001a220:	6812      	ldr	r2, [r2, #0]
9001a222:	fb01 2303 	mla	r3, r1, r3, r2
9001a226:	681a      	ldr	r2, [r3, #0]
9001a228:	6002      	str	r2, [r0, #0]
9001a22a:	685a      	ldr	r2, [r3, #4]
9001a22c:	6042      	str	r2, [r0, #4]
9001a22e:	bd10      	pop	{r4, pc}
9001a230:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001a234:	4293      	cmp	r3, r2
9001a236:	d10b      	bne.n	9001a250 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
9001a238:	4b0c      	ldr	r3, [pc, #48]	; (9001a26c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001a23a:	f9b3 1000 	ldrsh.w	r1, [r3]
9001a23e:	4b0c      	ldr	r3, [pc, #48]	; (9001a270 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001a240:	8081      	strh	r1, [r0, #4]
9001a242:	f9b3 2000 	ldrsh.w	r2, [r3]
9001a246:	2300      	movs	r3, #0
9001a248:	80c2      	strh	r2, [r0, #6]
9001a24a:	8003      	strh	r3, [r0, #0]
9001a24c:	8043      	strh	r3, [r0, #2]
9001a24e:	e7ee      	b.n	9001a22e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001a250:	2300      	movs	r3, #0
9001a252:	8003      	strh	r3, [r0, #0]
9001a254:	8043      	strh	r3, [r0, #2]
9001a256:	8083      	strh	r3, [r0, #4]
9001a258:	e7d8      	b.n	9001a20c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001a25a:	bf00      	nop
9001a25c:	24039924 	.word	0x24039924
9001a260:	2403992c 	.word	0x2403992c
9001a264:	24039928 	.word	0x24039928
9001a268:	2403990c 	.word	0x2403990c
9001a26c:	24039890 	.word	0x24039890
9001a270:	24039892 	.word	0x24039892

9001a274 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001a274:	4a17      	ldr	r2, [pc, #92]	; (9001a2d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001a276:	8803      	ldrh	r3, [r0, #0]
9001a278:	8812      	ldrh	r2, [r2, #0]
9001a27a:	4293      	cmp	r3, r2
9001a27c:	d213      	bcs.n	9001a2a6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001a27e:	4a16      	ldr	r2, [pc, #88]	; (9001a2d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001a280:	2114      	movs	r1, #20
9001a282:	6812      	ldr	r2, [r2, #0]
9001a284:	fb01 2303 	mla	r3, r1, r3, r2
9001a288:	8a1a      	ldrh	r2, [r3, #16]
9001a28a:	8919      	ldrh	r1, [r3, #8]
9001a28c:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001a290:	428a      	cmp	r2, r1
9001a292:	db1d      	blt.n	9001a2d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001a294:	8a58      	ldrh	r0, [r3, #18]
9001a296:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001a29a:	895b      	ldrh	r3, [r3, #10]
9001a29c:	4298      	cmp	r0, r3
9001a29e:	bfac      	ite	ge
9001a2a0:	2000      	movge	r0, #0
9001a2a2:	2001      	movlt	r0, #1
9001a2a4:	4770      	bx	lr
9001a2a6:	490d      	ldr	r1, [pc, #52]	; (9001a2dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001a2a8:	8809      	ldrh	r1, [r1, #0]
9001a2aa:	4411      	add	r1, r2
9001a2ac:	428b      	cmp	r3, r1
9001a2ae:	da0d      	bge.n	9001a2cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001a2b0:	1a9b      	subs	r3, r3, r2
9001a2b2:	4a0b      	ldr	r2, [pc, #44]	; (9001a2e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001a2b4:	210e      	movs	r1, #14
9001a2b6:	6812      	ldr	r2, [r2, #0]
9001a2b8:	fb01 2303 	mla	r3, r1, r3, r2
9001a2bc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001a2c0:	891a      	ldrh	r2, [r3, #8]
9001a2c2:	4291      	cmp	r1, r2
9001a2c4:	db04      	blt.n	9001a2d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001a2c6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001a2ca:	e7e6      	b.n	9001a29a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001a2cc:	2000      	movs	r0, #0
9001a2ce:	4770      	bx	lr
9001a2d0:	2001      	movs	r0, #1
9001a2d2:	4770      	bx	lr
9001a2d4:	24039924 	.word	0x24039924
9001a2d8:	2403992c 	.word	0x2403992c
9001a2dc:	24039928 	.word	0x24039928
9001a2e0:	2403990c 	.word	0x2403990c

9001a2e4 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001a2e4:	4a12      	ldr	r2, [pc, #72]	; (9001a330 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001a2e6:	8803      	ldrh	r3, [r0, #0]
9001a2e8:	8811      	ldrh	r1, [r2, #0]
9001a2ea:	428b      	cmp	r3, r1
9001a2ec:	d20b      	bcs.n	9001a306 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001a2ee:	4a11      	ldr	r2, [pc, #68]	; (9001a334 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001a2f0:	6812      	ldr	r2, [r2, #0]
9001a2f2:	b112      	cbz	r2, 9001a2fa <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001a2f4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001a2f8:	b9c0      	cbnz	r0, 9001a32c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001a2fa:	4a0f      	ldr	r2, [pc, #60]	; (9001a338 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001a2fc:	6811      	ldr	r1, [r2, #0]
9001a2fe:	2214      	movs	r2, #20
9001a300:	4353      	muls	r3, r2
9001a302:	58c8      	ldr	r0, [r1, r3]
9001a304:	4770      	bx	lr
9001a306:	4a0d      	ldr	r2, [pc, #52]	; (9001a33c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001a308:	8812      	ldrh	r2, [r2, #0]
9001a30a:	440a      	add	r2, r1
9001a30c:	4293      	cmp	r3, r2
9001a30e:	da04      	bge.n	9001a31a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001a310:	4a08      	ldr	r2, [pc, #32]	; (9001a334 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001a312:	6812      	ldr	r2, [r2, #0]
9001a314:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001a318:	4770      	bx	lr
9001a31a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001a31e:	4293      	cmp	r3, r2
9001a320:	d103      	bne.n	9001a32a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001a322:	4b07      	ldr	r3, [pc, #28]	; (9001a340 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001a324:	681b      	ldr	r3, [r3, #0]
9001a326:	6c58      	ldr	r0, [r3, #68]	; 0x44
9001a328:	4770      	bx	lr
9001a32a:	2000      	movs	r0, #0
9001a32c:	4770      	bx	lr
9001a32e:	bf00      	nop
9001a330:	24039924 	.word	0x24039924
9001a334:	24039908 	.word	0x24039908
9001a338:	2403992c 	.word	0x2403992c
9001a33c:	24039928 	.word	0x24039928
9001a340:	2403989c 	.word	0x2403989c

9001a344 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001a344:	4b24      	ldr	r3, [pc, #144]	; (9001a3d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001a346:	8802      	ldrh	r2, [r0, #0]
9001a348:	8818      	ldrh	r0, [r3, #0]
9001a34a:	4282      	cmp	r2, r0
9001a34c:	d221      	bcs.n	9001a392 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001a34e:	4b23      	ldr	r3, [pc, #140]	; (9001a3dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001a350:	6819      	ldr	r1, [r3, #0]
9001a352:	2314      	movs	r3, #20
9001a354:	fb03 1302 	mla	r3, r3, r2, r1
9001a358:	6858      	ldr	r0, [r3, #4]
9001a35a:	2800      	cmp	r0, #0
9001a35c:	d03a      	beq.n	9001a3d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a35e:	4920      	ldr	r1, [pc, #128]	; (9001a3e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001a360:	6809      	ldr	r1, [r1, #0]
9001a362:	2900      	cmp	r1, #0
9001a364:	d036      	beq.n	9001a3d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a366:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001a36a:	2900      	cmp	r1, #0
9001a36c:	d032      	beq.n	9001a3d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a36e:	891a      	ldrh	r2, [r3, #8]
9001a370:	8958      	ldrh	r0, [r3, #10]
9001a372:	4350      	muls	r0, r2
9001a374:	7c5a      	ldrb	r2, [r3, #17]
9001a376:	7cdb      	ldrb	r3, [r3, #19]
9001a378:	0952      	lsrs	r2, r2, #5
9001a37a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001a37e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001a382:	2b0b      	cmp	r3, #11
9001a384:	bf18      	it	ne
9001a386:	0040      	lslne	r0, r0, #1
9001a388:	3003      	adds	r0, #3
9001a38a:	f020 0003 	bic.w	r0, r0, #3
9001a38e:	4408      	add	r0, r1
9001a390:	4770      	bx	lr
9001a392:	4b14      	ldr	r3, [pc, #80]	; (9001a3e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001a394:	881b      	ldrh	r3, [r3, #0]
9001a396:	4403      	add	r3, r0
9001a398:	429a      	cmp	r2, r3
9001a39a:	da1a      	bge.n	9001a3d2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001a39c:	4b12      	ldr	r3, [pc, #72]	; (9001a3e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001a39e:	1a10      	subs	r0, r2, r0
9001a3a0:	210e      	movs	r1, #14
9001a3a2:	681b      	ldr	r3, [r3, #0]
9001a3a4:	fb01 3000 	mla	r0, r1, r0, r3
9001a3a8:	7b03      	ldrb	r3, [r0, #12]
9001a3aa:	f003 031f 	and.w	r3, r3, #31
9001a3ae:	2b0b      	cmp	r3, #11
9001a3b0:	d10b      	bne.n	9001a3ca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001a3b2:	8903      	ldrh	r3, [r0, #8]
9001a3b4:	8940      	ldrh	r0, [r0, #10]
9001a3b6:	4358      	muls	r0, r3
9001a3b8:	4b09      	ldr	r3, [pc, #36]	; (9001a3e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001a3ba:	3003      	adds	r0, #3
9001a3bc:	6819      	ldr	r1, [r3, #0]
9001a3be:	f020 0303 	bic.w	r3, r0, #3
9001a3c2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001a3c6:	4418      	add	r0, r3
9001a3c8:	4770      	bx	lr
9001a3ca:	2b0d      	cmp	r3, #13
9001a3cc:	d101      	bne.n	9001a3d2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001a3ce:	300d      	adds	r0, #13
9001a3d0:	4770      	bx	lr
9001a3d2:	2000      	movs	r0, #0
9001a3d4:	4770      	bx	lr
9001a3d6:	bf00      	nop
9001a3d8:	24039924 	.word	0x24039924
9001a3dc:	2403992c 	.word	0x2403992c
9001a3e0:	24039908 	.word	0x24039908
9001a3e4:	24039928 	.word	0x24039928
9001a3e8:	2403990c 	.word	0x2403990c

9001a3ec <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001a3ec:	4a17      	ldr	r2, [pc, #92]	; (9001a44c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001a3ee:	b510      	push	{r4, lr}
9001a3f0:	8803      	ldrh	r3, [r0, #0]
9001a3f2:	8812      	ldrh	r2, [r2, #0]
9001a3f4:	4293      	cmp	r3, r2
9001a3f6:	d20c      	bcs.n	9001a412 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
9001a3f8:	4a15      	ldr	r2, [pc, #84]	; (9001a450 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
9001a3fa:	2114      	movs	r1, #20
9001a3fc:	6812      	ldr	r2, [r2, #0]
9001a3fe:	fb01 2303 	mla	r3, r1, r3, r2
9001a402:	7c58      	ldrb	r0, [r3, #17]
9001a404:	0942      	lsrs	r2, r0, #5
9001a406:	7cd8      	ldrb	r0, [r3, #19]
9001a408:	f3c0 1042 	ubfx	r0, r0, #5, #3
9001a40c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
9001a410:	bd10      	pop	{r4, pc}
9001a412:	4910      	ldr	r1, [pc, #64]	; (9001a454 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
9001a414:	8809      	ldrh	r1, [r1, #0]
9001a416:	4411      	add	r1, r2
9001a418:	428b      	cmp	r3, r1
9001a41a:	da09      	bge.n	9001a430 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
9001a41c:	1a9b      	subs	r3, r3, r2
9001a41e:	4a0e      	ldr	r2, [pc, #56]	; (9001a458 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001a420:	210e      	movs	r1, #14
9001a422:	6812      	ldr	r2, [r2, #0]
9001a424:	fb01 2303 	mla	r3, r1, r3, r2
9001a428:	7b18      	ldrb	r0, [r3, #12]
9001a42a:	f000 001f 	and.w	r0, r0, #31
9001a42e:	e7ef      	b.n	9001a410 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001a430:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001a434:	4293      	cmp	r3, r2
9001a436:	d106      	bne.n	9001a446 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
9001a438:	f7f7 fcce 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
9001a43c:	6803      	ldr	r3, [r0, #0]
9001a43e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001a442:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001a444:	4718      	bx	r3
9001a446:	2000      	movs	r0, #0
9001a448:	e7e2      	b.n	9001a410 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001a44a:	bf00      	nop
9001a44c:	24039924 	.word	0x24039924
9001a450:	2403992c 	.word	0x2403992c
9001a454:	24039928 	.word	0x24039928
9001a458:	2403990c 	.word	0x2403990c

9001a45c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001a45c:	2010      	movs	r0, #16
9001a45e:	4770      	bx	lr

9001a460 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001a460:	4b02      	ldr	r3, [pc, #8]	; (9001a46c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001a462:	8818      	ldrh	r0, [r3, #0]
9001a464:	0040      	lsls	r0, r0, #1
9001a466:	b280      	uxth	r0, r0
9001a468:	4770      	bx	lr
9001a46a:	bf00      	nop
9001a46c:	24039896 	.word	0x24039896

9001a470 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001a470:	2bff      	cmp	r3, #255	; 0xff
9001a472:	d050      	beq.n	9001a516 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001a474:	2a0b      	cmp	r2, #11
9001a476:	d04a      	beq.n	9001a50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001a478:	d80e      	bhi.n	9001a498 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001a47a:	2a03      	cmp	r2, #3
9001a47c:	d03f      	beq.n	9001a4fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001a47e:	d804      	bhi.n	9001a48a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001a480:	2a01      	cmp	r2, #1
9001a482:	d03e      	beq.n	9001a502 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
9001a484:	d93f      	bls.n	9001a506 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
9001a486:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001a488:	4770      	bx	lr
9001a48a:	2a09      	cmp	r2, #9
9001a48c:	d03f      	beq.n	9001a50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001a48e:	d83c      	bhi.n	9001a50a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001a490:	2a08      	cmp	r2, #8
9001a492:	d03a      	beq.n	9001a50a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001a494:	2000      	movs	r0, #0
9001a496:	4770      	bx	lr
9001a498:	2a2f      	cmp	r2, #47	; 0x2f
9001a49a:	d024      	beq.n	9001a4e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
9001a49c:	d80d      	bhi.n	9001a4ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001a49e:	2a2d      	cmp	r2, #45	; 0x2d
9001a4a0:	d014      	beq.n	9001a4cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
9001a4a2:	d826      	bhi.n	9001a4f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001a4a4:	2a2c      	cmp	r2, #44	; 0x2c
9001a4a6:	d1f5      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a4a8:	684b      	ldr	r3, [r1, #4]
9001a4aa:	781b      	ldrb	r3, [r3, #0]
9001a4ac:	2b01      	cmp	r3, #1
9001a4ae:	d018      	beq.n	9001a4e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
9001a4b0:	d323      	bcc.n	9001a4fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
9001a4b2:	2b02      	cmp	r3, #2
9001a4b4:	d1ee      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a4b6:	6880      	ldr	r0, [r0, #8]
9001a4b8:	4770      	bx	lr
9001a4ba:	2a31      	cmp	r2, #49	; 0x31
9001a4bc:	d004      	beq.n	9001a4c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
9001a4be:	d328      	bcc.n	9001a512 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001a4c0:	2a32      	cmp	r2, #50	; 0x32
9001a4c2:	d026      	beq.n	9001a512 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001a4c4:	2a33      	cmp	r2, #51	; 0x33
9001a4c6:	d1e5      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a4c8:	6f00      	ldr	r0, [r0, #112]	; 0x70
9001a4ca:	4770      	bx	lr
9001a4cc:	684b      	ldr	r3, [r1, #4]
9001a4ce:	781b      	ldrb	r3, [r3, #0]
9001a4d0:	2b01      	cmp	r3, #1
9001a4d2:	d004      	beq.n	9001a4de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
9001a4d4:	d30b      	bcc.n	9001a4ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a4d6:	2b02      	cmp	r3, #2
9001a4d8:	d1dc      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a4da:	6900      	ldr	r0, [r0, #16]
9001a4dc:	4770      	bx	lr
9001a4de:	6a00      	ldr	r0, [r0, #32]
9001a4e0:	4770      	bx	lr
9001a4e2:	6980      	ldr	r0, [r0, #24]
9001a4e4:	4770      	bx	lr
9001a4e6:	684b      	ldr	r3, [r1, #4]
9001a4e8:	781b      	ldrb	r3, [r3, #0]
9001a4ea:	2b00      	cmp	r3, #0
9001a4ec:	d1d2      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a4ee:	6b00      	ldr	r0, [r0, #48]	; 0x30
9001a4f0:	4770      	bx	lr
9001a4f2:	684b      	ldr	r3, [r1, #4]
9001a4f4:	781b      	ldrb	r3, [r3, #0]
9001a4f6:	2b00      	cmp	r3, #0
9001a4f8:	d1cc      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a4fa:	6a80      	ldr	r0, [r0, #40]	; 0x28
9001a4fc:	4770      	bx	lr
9001a4fe:	6c80      	ldr	r0, [r0, #72]	; 0x48
9001a500:	4770      	bx	lr
9001a502:	6d00      	ldr	r0, [r0, #80]	; 0x50
9001a504:	4770      	bx	lr
9001a506:	6c00      	ldr	r0, [r0, #64]	; 0x40
9001a508:	4770      	bx	lr
9001a50a:	6d80      	ldr	r0, [r0, #88]	; 0x58
9001a50c:	4770      	bx	lr
9001a50e:	6e00      	ldr	r0, [r0, #96]	; 0x60
9001a510:	4770      	bx	lr
9001a512:	6e80      	ldr	r0, [r0, #104]	; 0x68
9001a514:	4770      	bx	lr
9001a516:	2a0b      	cmp	r2, #11
9001a518:	d049      	beq.n	9001a5ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001a51a:	d80e      	bhi.n	9001a53a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
9001a51c:	2a03      	cmp	r2, #3
9001a51e:	d040      	beq.n	9001a5a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
9001a520:	d804      	bhi.n	9001a52c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
9001a522:	2a01      	cmp	r2, #1
9001a524:	d03f      	beq.n	9001a5a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
9001a526:	d940      	bls.n	9001a5aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
9001a528:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
9001a52a:	4770      	bx	lr
9001a52c:	2a09      	cmp	r2, #9
9001a52e:	d03e      	beq.n	9001a5ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001a530:	d801      	bhi.n	9001a536 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
9001a532:	2a08      	cmp	r2, #8
9001a534:	d1ae      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a536:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
9001a538:	4770      	bx	lr
9001a53a:	2a2f      	cmp	r2, #47	; 0x2f
9001a53c:	d024      	beq.n	9001a588 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001a53e:	d80d      	bhi.n	9001a55c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001a540:	2a2d      	cmp	r2, #45	; 0x2d
9001a542:	d014      	beq.n	9001a56e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
9001a544:	d826      	bhi.n	9001a594 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
9001a546:	2a2c      	cmp	r2, #44	; 0x2c
9001a548:	d1a4      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a54a:	684b      	ldr	r3, [r1, #4]
9001a54c:	781b      	ldrb	r3, [r3, #0]
9001a54e:	2b01      	cmp	r3, #1
9001a550:	d018      	beq.n	9001a584 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001a552:	d324      	bcc.n	9001a59e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
9001a554:	2b02      	cmp	r3, #2
9001a556:	d19d      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a558:	68c0      	ldr	r0, [r0, #12]
9001a55a:	4770      	bx	lr
9001a55c:	2a31      	cmp	r2, #49	; 0x31
9001a55e:	d004      	beq.n	9001a56a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001a560:	d327      	bcc.n	9001a5b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001a562:	2a32      	cmp	r2, #50	; 0x32
9001a564:	d025      	beq.n	9001a5b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001a566:	2a33      	cmp	r2, #51	; 0x33
9001a568:	d194      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a56a:	6f40      	ldr	r0, [r0, #116]	; 0x74
9001a56c:	4770      	bx	lr
9001a56e:	684b      	ldr	r3, [r1, #4]
9001a570:	781b      	ldrb	r3, [r3, #0]
9001a572:	2b01      	cmp	r3, #1
9001a574:	d004      	beq.n	9001a580 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001a576:	d30b      	bcc.n	9001a590 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
9001a578:	2b02      	cmp	r3, #2
9001a57a:	d18b      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a57c:	6940      	ldr	r0, [r0, #20]
9001a57e:	4770      	bx	lr
9001a580:	6a40      	ldr	r0, [r0, #36]	; 0x24
9001a582:	4770      	bx	lr
9001a584:	69c0      	ldr	r0, [r0, #28]
9001a586:	4770      	bx	lr
9001a588:	684b      	ldr	r3, [r1, #4]
9001a58a:	781b      	ldrb	r3, [r3, #0]
9001a58c:	2b00      	cmp	r3, #0
9001a58e:	d181      	bne.n	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a590:	6b40      	ldr	r0, [r0, #52]	; 0x34
9001a592:	4770      	bx	lr
9001a594:	684b      	ldr	r3, [r1, #4]
9001a596:	781b      	ldrb	r3, [r3, #0]
9001a598:	2b00      	cmp	r3, #0
9001a59a:	f47f af7b 	bne.w	9001a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a59e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
9001a5a0:	4770      	bx	lr
9001a5a2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001a5a4:	4770      	bx	lr
9001a5a6:	6d40      	ldr	r0, [r0, #84]	; 0x54
9001a5a8:	4770      	bx	lr
9001a5aa:	6c40      	ldr	r0, [r0, #68]	; 0x44
9001a5ac:	4770      	bx	lr
9001a5ae:	6e40      	ldr	r0, [r0, #100]	; 0x64
9001a5b0:	4770      	bx	lr
9001a5b2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
9001a5b4:	4770      	bx	lr

9001a5b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a5b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a5ba:	b087      	sub	sp, #28
9001a5bc:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a5be:	9205      	str	r2, [sp, #20]
9001a5c0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a5c4:	9101      	str	r1, [sp, #4]
9001a5c6:	9202      	str	r2, [sp, #8]
9001a5c8:	6841      	ldr	r1, [r0, #4]
9001a5ca:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001a5ce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a5d2:	fb01 2404 	mla	r4, r1, r4, r2
9001a5d6:	6802      	ldr	r2, [r0, #0]
9001a5d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a5dc:	f8de 2000 	ldr.w	r2, [lr]
9001a5e0:	9203      	str	r2, [sp, #12]
9001a5e2:	f8de 2004 	ldr.w	r2, [lr, #4]
9001a5e6:	3204      	adds	r2, #4
9001a5e8:	9204      	str	r2, [sp, #16]
9001a5ea:	9a02      	ldr	r2, [sp, #8]
9001a5ec:	43d6      	mvns	r6, r2
9001a5ee:	b2f6      	uxtb	r6, r6
9001a5f0:	9a01      	ldr	r2, [sp, #4]
9001a5f2:	2a00      	cmp	r2, #0
9001a5f4:	dc03      	bgt.n	9001a5fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001a5f6:	9a05      	ldr	r2, [sp, #20]
9001a5f8:	2a00      	cmp	r2, #0
9001a5fa:	f340 8129 	ble.w	9001a850 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001a5fe:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a600:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001a604:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a608:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a60a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001a60e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a612:	2b00      	cmp	r3, #0
9001a614:	dd0e      	ble.n	9001a634 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a616:	1408      	asrs	r0, r1, #16
9001a618:	d405      	bmi.n	9001a626 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a61a:	4560      	cmp	r0, ip
9001a61c:	da03      	bge.n	9001a626 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a61e:	1410      	asrs	r0, r2, #16
9001a620:	d401      	bmi.n	9001a626 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a622:	42b8      	cmp	r0, r7
9001a624:	db07      	blt.n	9001a636 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a626:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a628:	3b01      	subs	r3, #1
9001a62a:	3402      	adds	r4, #2
9001a62c:	4401      	add	r1, r0
9001a62e:	9814      	ldr	r0, [sp, #80]	; 0x50
9001a630:	4402      	add	r2, r0
9001a632:	e7ee      	b.n	9001a612 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001a634:	d071      	beq.n	9001a71a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a636:	1e58      	subs	r0, r3, #1
9001a638:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a63a:	fb05 1500 	mla	r5, r5, r0, r1
9001a63e:	142d      	asrs	r5, r5, #16
9001a640:	d45f      	bmi.n	9001a702 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a642:	4565      	cmp	r5, ip
9001a644:	da5d      	bge.n	9001a702 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a646:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a648:	fb05 2000 	mla	r0, r5, r0, r2
9001a64c:	1400      	asrs	r0, r0, #16
9001a64e:	d458      	bmi.n	9001a702 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a650:	42b8      	cmp	r0, r7
9001a652:	da56      	bge.n	9001a702 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a654:	4699      	mov	r9, r3
9001a656:	46a2      	mov	sl, r4
9001a658:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001a65c:	f1b9 0f00 	cmp.w	r9, #0
9001a660:	dd57      	ble.n	9001a712 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001a662:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001a666:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a66a:	9803      	ldr	r0, [sp, #12]
9001a66c:	140d      	asrs	r5, r1, #16
9001a66e:	f109 39ff 	add.w	r9, r9, #4294967295
9001a672:	fb07 000c 	mla	r0, r7, ip, r0
9001a676:	5d40      	ldrb	r0, [r0, r5]
9001a678:	9d04      	ldr	r5, [sp, #16]
9001a67a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001a67e:	f8ba 5000 	ldrh.w	r5, [sl]
9001a682:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a686:	122f      	asrs	r7, r5, #8
9001a688:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001a68c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a690:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a694:	00ed      	lsls	r5, r5, #3
9001a696:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001a69a:	fb17 f706 	smulbb	r7, r7, r6
9001a69e:	b2ed      	uxtb	r5, r5
9001a6a0:	fb18 f806 	smulbb	r8, r8, r6
9001a6a4:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001a6a8:	10c7      	asrs	r7, r0, #3
9001a6aa:	fb15 f506 	smulbb	r5, r5, r6
9001a6ae:	00c0      	lsls	r0, r0, #3
9001a6b0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a6b4:	fa1f fc8c 	uxth.w	ip, ip
9001a6b8:	b2c0      	uxtb	r0, r0
9001a6ba:	fb07 870b 	mla	r7, r7, fp, r8
9001a6be:	fb00 500b 	mla	r0, r0, fp, r5
9001a6c2:	f10c 0501 	add.w	r5, ip, #1
9001a6c6:	b2bf      	uxth	r7, r7
9001a6c8:	b280      	uxth	r0, r0
9001a6ca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a6ce:	f107 0801 	add.w	r8, r7, #1
9001a6d2:	1c45      	adds	r5, r0, #1
9001a6d4:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001a6d8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a6dc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001a6e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a6e2:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001a6e6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a6ea:	4401      	add	r1, r0
9001a6ec:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001a6f0:	9814      	ldr	r0, [sp, #80]	; 0x50
9001a6f2:	ea45 0c0c 	orr.w	ip, r5, ip
9001a6f6:	4402      	add	r2, r0
9001a6f8:	ea4c 0c08 	orr.w	ip, ip, r8
9001a6fc:	f82a cb02 	strh.w	ip, [sl], #2
9001a700:	e7ac      	b.n	9001a65c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001a702:	f04f 0800 	mov.w	r8, #0
9001a706:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001a70a:	eb03 0008 	add.w	r0, r3, r8
9001a70e:	2800      	cmp	r0, #0
9001a710:	dc41      	bgt.n	9001a796 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001a712:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a716:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a71a:	9b01      	ldr	r3, [sp, #4]
9001a71c:	2b00      	cmp	r3, #0
9001a71e:	f340 8097 	ble.w	9001a850 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001a722:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001a726:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a728:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a72c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a730:	eef0 6a62 	vmov.f32	s13, s5
9001a734:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001a738:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a73c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a740:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001a744:	eef0 6a43 	vmov.f32	s13, s6
9001a748:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a74c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001a750:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a754:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a758:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a75c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a760:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a764:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a768:	ee12 2a90 	vmov	r2, s5
9001a76c:	eef0 2a47 	vmov.f32	s5, s14
9001a770:	fb92 f3f3 	sdiv	r3, r2, r3
9001a774:	ee13 2a10 	vmov	r2, s6
9001a778:	9313      	str	r3, [sp, #76]	; 0x4c
9001a77a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a77c:	eeb0 3a67 	vmov.f32	s6, s15
9001a780:	fb92 f3f3 	sdiv	r3, r2, r3
9001a784:	9314      	str	r3, [sp, #80]	; 0x50
9001a786:	9b01      	ldr	r3, [sp, #4]
9001a788:	9a05      	ldr	r2, [sp, #20]
9001a78a:	3b01      	subs	r3, #1
9001a78c:	9301      	str	r3, [sp, #4]
9001a78e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a790:	bf08      	it	eq
9001a792:	4613      	moveq	r3, r2
9001a794:	e72c      	b.n	9001a5f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001a796:	140f      	asrs	r7, r1, #16
9001a798:	d453      	bmi.n	9001a842 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a79a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001a79e:	42bd      	cmp	r5, r7
9001a7a0:	dd4f      	ble.n	9001a842 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a7a2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a7a6:	d44c      	bmi.n	9001a842 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a7a8:	f8de 000c 	ldr.w	r0, [lr, #12]
9001a7ac:	4560      	cmp	r0, ip
9001a7ae:	dd48      	ble.n	9001a842 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a7b0:	9803      	ldr	r0, [sp, #12]
9001a7b2:	b22d      	sxth	r5, r5
9001a7b4:	fb0c 0505 	mla	r5, ip, r5, r0
9001a7b8:	5de8      	ldrb	r0, [r5, r7]
9001a7ba:	9d04      	ldr	r5, [sp, #16]
9001a7bc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001a7c0:	f06f 0501 	mvn.w	r5, #1
9001a7c4:	fb05 fb08 	mul.w	fp, r5, r8
9001a7c8:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a7cc:	f834 500b 	ldrh.w	r5, [r4, fp]
9001a7d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a7d4:	122f      	asrs	r7, r5, #8
9001a7d6:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001a7da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a7de:	00ed      	lsls	r5, r5, #3
9001a7e0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001a7e4:	fb17 f706 	smulbb	r7, r7, r6
9001a7e8:	b2ed      	uxtb	r5, r5
9001a7ea:	fb19 f906 	smulbb	r9, r9, r6
9001a7ee:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001a7f2:	10c7      	asrs	r7, r0, #3
9001a7f4:	fb15 f506 	smulbb	r5, r5, r6
9001a7f8:	00c0      	lsls	r0, r0, #3
9001a7fa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a7fe:	fa1f fc8c 	uxth.w	ip, ip
9001a802:	b2c0      	uxtb	r0, r0
9001a804:	fb07 970a 	mla	r7, r7, sl, r9
9001a808:	fb00 500a 	mla	r0, r0, sl, r5
9001a80c:	f10c 0501 	add.w	r5, ip, #1
9001a810:	b2bf      	uxth	r7, r7
9001a812:	b280      	uxth	r0, r0
9001a814:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a818:	f107 0901 	add.w	r9, r7, #1
9001a81c:	1c45      	adds	r5, r0, #1
9001a81e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001a822:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a826:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001a82a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001a82e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a832:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001a836:	ea45 0c0c 	orr.w	ip, r5, ip
9001a83a:	ea4c 0c09 	orr.w	ip, ip, r9
9001a83e:	f824 c00b 	strh.w	ip, [r4, fp]
9001a842:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a844:	f108 38ff 	add.w	r8, r8, #4294967295
9001a848:	4401      	add	r1, r0
9001a84a:	9814      	ldr	r0, [sp, #80]	; 0x50
9001a84c:	4402      	add	r2, r0
9001a84e:	e75c      	b.n	9001a70a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001a850:	b007      	add	sp, #28
9001a852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a856 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a856:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a85a:	b085      	sub	sp, #20
9001a85c:	4693      	mov	fp, r2
9001a85e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a862:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001a864:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001a866:	6870      	ldr	r0, [r6, #4]
9001a868:	9100      	str	r1, [sp, #0]
9001a86a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001a86e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001a872:	fb00 2404 	mla	r4, r0, r4, r2
9001a876:	6832      	ldr	r2, [r6, #0]
9001a878:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a87c:	682a      	ldr	r2, [r5, #0]
9001a87e:	9201      	str	r2, [sp, #4]
9001a880:	686a      	ldr	r2, [r5, #4]
9001a882:	3204      	adds	r2, #4
9001a884:	9202      	str	r2, [sp, #8]
9001a886:	9a00      	ldr	r2, [sp, #0]
9001a888:	2a00      	cmp	r2, #0
9001a88a:	dc03      	bgt.n	9001a894 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001a88c:	f1bb 0f00 	cmp.w	fp, #0
9001a890:	f340 80a0 	ble.w	9001a9d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001a894:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001a896:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a89a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a89e:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001a8a0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001a8a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a8a8:	2b00      	cmp	r3, #0
9001a8aa:	dd0c      	ble.n	9001a8c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a8ac:	1406      	asrs	r6, r0, #16
9001a8ae:	d405      	bmi.n	9001a8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a8b0:	454e      	cmp	r6, r9
9001a8b2:	da03      	bge.n	9001a8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a8b4:	1416      	asrs	r6, r2, #16
9001a8b6:	d401      	bmi.n	9001a8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a8b8:	4546      	cmp	r6, r8
9001a8ba:	db05      	blt.n	9001a8c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a8bc:	4470      	add	r0, lr
9001a8be:	4462      	add	r2, ip
9001a8c0:	3b01      	subs	r3, #1
9001a8c2:	3402      	adds	r4, #2
9001a8c4:	e7f0      	b.n	9001a8a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001a8c6:	d00f      	beq.n	9001a8e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a8c8:	1e5e      	subs	r6, r3, #1
9001a8ca:	fb0e 0706 	mla	r7, lr, r6, r0
9001a8ce:	143f      	asrs	r7, r7, #16
9001a8d0:	d541      	bpl.n	9001a956 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001a8d2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001a8d6:	4698      	mov	r8, r3
9001a8d8:	9603      	str	r6, [sp, #12]
9001a8da:	f1b8 0f00 	cmp.w	r8, #0
9001a8de:	dc59      	bgt.n	9001a994 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a8e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a8e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a8e8:	9b00      	ldr	r3, [sp, #0]
9001a8ea:	2b00      	cmp	r3, #0
9001a8ec:	dd72      	ble.n	9001a9d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001a8ee:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a8f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a8f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a8f8:	eeb0 6a62 	vmov.f32	s12, s5
9001a8fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a900:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a904:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a908:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001a90c:	eeb0 6a43 	vmov.f32	s12, s6
9001a910:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a914:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001a918:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a91c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a920:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a924:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a928:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a92c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a930:	ee12 2a90 	vmov	r2, s5
9001a934:	eef0 2a47 	vmov.f32	s5, s14
9001a938:	fb92 fef3 	sdiv	lr, r2, r3
9001a93c:	ee13 2a10 	vmov	r2, s6
9001a940:	eeb0 3a67 	vmov.f32	s6, s15
9001a944:	fb92 fcf3 	sdiv	ip, r2, r3
9001a948:	9b00      	ldr	r3, [sp, #0]
9001a94a:	3b01      	subs	r3, #1
9001a94c:	9300      	str	r3, [sp, #0]
9001a94e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a950:	bf08      	it	eq
9001a952:	465b      	moveq	r3, fp
9001a954:	e797      	b.n	9001a886 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001a956:	454f      	cmp	r7, r9
9001a958:	dabb      	bge.n	9001a8d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a95a:	fb0c 2606 	mla	r6, ip, r6, r2
9001a95e:	1436      	asrs	r6, r6, #16
9001a960:	d4b7      	bmi.n	9001a8d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a962:	4546      	cmp	r6, r8
9001a964:	dab5      	bge.n	9001a8d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a966:	461e      	mov	r6, r3
9001a968:	46a0      	mov	r8, r4
9001a96a:	2e00      	cmp	r6, #0
9001a96c:	ddb8      	ble.n	9001a8e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001a96e:	1417      	asrs	r7, r2, #16
9001a970:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001a974:	9901      	ldr	r1, [sp, #4]
9001a976:	ea4f 4920 	mov.w	r9, r0, asr #16
9001a97a:	4462      	add	r2, ip
9001a97c:	4470      	add	r0, lr
9001a97e:	fb0a 1707 	mla	r7, sl, r7, r1
9001a982:	9902      	ldr	r1, [sp, #8]
9001a984:	3e01      	subs	r6, #1
9001a986:	f817 7009 	ldrb.w	r7, [r7, r9]
9001a98a:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001a98e:	f828 7b02 	strh.w	r7, [r8], #2
9001a992:	e7ea      	b.n	9001a96a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001a994:	ea5f 4920 	movs.w	r9, r0, asr #16
9001a998:	d417      	bmi.n	9001a9ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a99a:	68ae      	ldr	r6, [r5, #8]
9001a99c:	454e      	cmp	r6, r9
9001a99e:	dd14      	ble.n	9001a9ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a9a0:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001a9a4:	d411      	bmi.n	9001a9ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a9a6:	68ef      	ldr	r7, [r5, #12]
9001a9a8:	4557      	cmp	r7, sl
9001a9aa:	dd0e      	ble.n	9001a9ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a9ac:	9f01      	ldr	r7, [sp, #4]
9001a9ae:	b236      	sxth	r6, r6
9001a9b0:	f06f 0101 	mvn.w	r1, #1
9001a9b4:	fb0a 7606 	mla	r6, sl, r6, r7
9001a9b8:	9f02      	ldr	r7, [sp, #8]
9001a9ba:	f816 6009 	ldrb.w	r6, [r6, r9]
9001a9be:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001a9c2:	fb01 f608 	mul.w	r6, r1, r8
9001a9c6:	9903      	ldr	r1, [sp, #12]
9001a9c8:	538f      	strh	r7, [r1, r6]
9001a9ca:	4470      	add	r0, lr
9001a9cc:	4462      	add	r2, ip
9001a9ce:	f108 38ff 	add.w	r8, r8, #4294967295
9001a9d2:	e782      	b.n	9001a8da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a9d4:	b005      	add	sp, #20
9001a9d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a9da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a9da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a9de:	b087      	sub	sp, #28
9001a9e0:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001a9e2:	9205      	str	r2, [sp, #20]
9001a9e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a9e8:	9102      	str	r1, [sp, #8]
9001a9ea:	9203      	str	r2, [sp, #12]
9001a9ec:	6861      	ldr	r1, [r4, #4]
9001a9ee:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001a9f2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001a9f6:	fb01 2000 	mla	r0, r1, r0, r2
9001a9fa:	6822      	ldr	r2, [r4, #0]
9001a9fc:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001aa00:	9200      	str	r2, [sp, #0]
9001aa02:	f8dc 2000 	ldr.w	r2, [ip]
9001aa06:	9204      	str	r2, [sp, #16]
9001aa08:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001aa0c:	3204      	adds	r2, #4
9001aa0e:	9201      	str	r2, [sp, #4]
9001aa10:	9a03      	ldr	r2, [sp, #12]
9001aa12:	43d5      	mvns	r5, r2
9001aa14:	b2ed      	uxtb	r5, r5
9001aa16:	9a02      	ldr	r2, [sp, #8]
9001aa18:	2a00      	cmp	r2, #0
9001aa1a:	dc03      	bgt.n	9001aa24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001aa1c:	9a05      	ldr	r2, [sp, #20]
9001aa1e:	2a00      	cmp	r2, #0
9001aa20:	f340 812c 	ble.w	9001ac7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001aa24:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001aa26:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001aa2a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001aa2e:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001aa30:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001aa34:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001aa38:	2b00      	cmp	r3, #0
9001aa3a:	dd10      	ble.n	9001aa5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001aa3c:	140c      	asrs	r4, r1, #16
9001aa3e:	d405      	bmi.n	9001aa4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001aa40:	4574      	cmp	r4, lr
9001aa42:	da03      	bge.n	9001aa4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001aa44:	1414      	asrs	r4, r2, #16
9001aa46:	d401      	bmi.n	9001aa4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001aa48:	42bc      	cmp	r4, r7
9001aa4a:	db09      	blt.n	9001aa60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001aa4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001aa4e:	3b01      	subs	r3, #1
9001aa50:	9800      	ldr	r0, [sp, #0]
9001aa52:	4421      	add	r1, r4
9001aa54:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001aa56:	3002      	adds	r0, #2
9001aa58:	4422      	add	r2, r4
9001aa5a:	9000      	str	r0, [sp, #0]
9001aa5c:	e7ec      	b.n	9001aa38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001aa5e:	d071      	beq.n	9001ab44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001aa60:	1e5c      	subs	r4, r3, #1
9001aa62:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001aa64:	fb06 1604 	mla	r6, r6, r4, r1
9001aa68:	1436      	asrs	r6, r6, #16
9001aa6a:	d45d      	bmi.n	9001ab28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001aa6c:	4576      	cmp	r6, lr
9001aa6e:	da5b      	bge.n	9001ab28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001aa70:	9e14      	ldr	r6, [sp, #80]	; 0x50
9001aa72:	fb06 2404 	mla	r4, r6, r4, r2
9001aa76:	1424      	asrs	r4, r4, #16
9001aa78:	d456      	bmi.n	9001ab28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001aa7a:	42bc      	cmp	r4, r7
9001aa7c:	da54      	bge.n	9001ab28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001aa7e:	4698      	mov	r8, r3
9001aa80:	f8dd 9000 	ldr.w	r9, [sp]
9001aa84:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001aa88:	f1b8 0f00 	cmp.w	r8, #0
9001aa8c:	dd54      	ble.n	9001ab38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001aa8e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001aa92:	1414      	asrs	r4, r2, #16
9001aa94:	9804      	ldr	r0, [sp, #16]
9001aa96:	140e      	asrs	r6, r1, #16
9001aa98:	f108 38ff 	add.w	r8, r8, #4294967295
9001aa9c:	fb07 0404 	mla	r4, r7, r4, r0
9001aaa0:	9801      	ldr	r0, [sp, #4]
9001aaa2:	f814 e006 	ldrb.w	lr, [r4, r6]
9001aaa6:	f8b9 4000 	ldrh.w	r4, [r9]
9001aaaa:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001aaae:	1227      	asrs	r7, r4, #8
9001aab0:	eb00 0b0e 	add.w	fp, r0, lr
9001aab4:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001aab8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001aabc:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001aabe:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001aac2:	f89b b001 	ldrb.w	fp, [fp, #1]
9001aac6:	4401      	add	r1, r0
9001aac8:	fb16 f60a 	smulbb	r6, r6, sl
9001aacc:	9814      	ldr	r0, [sp, #80]	; 0x50
9001aace:	fb1b fb0a 	smulbb	fp, fp, sl
9001aad2:	fb07 6705 	mla	r7, r7, r5, r6
9001aad6:	10e6      	asrs	r6, r4, #3
9001aad8:	00e4      	lsls	r4, r4, #3
9001aada:	4402      	add	r2, r0
9001aadc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001aae0:	b2bf      	uxth	r7, r7
9001aae2:	b2e4      	uxtb	r4, r4
9001aae4:	fb06 b605 	mla	r6, r6, r5, fp
9001aae8:	fb14 f405 	smulbb	r4, r4, r5
9001aaec:	b2b6      	uxth	r6, r6
9001aaee:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001aaf2:	1c7c      	adds	r4, r7, #1
9001aaf4:	f106 0b01 	add.w	fp, r6, #1
9001aaf8:	fa1f fe8e 	uxth.w	lr, lr
9001aafc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001ab00:	f10e 0401 	add.w	r4, lr, #1
9001ab04:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001ab08:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001ab0c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001ab10:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001ab14:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001ab18:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001ab1c:	4327      	orrs	r7, r4
9001ab1e:	ea47 070b 	orr.w	r7, r7, fp
9001ab22:	f829 7b02 	strh.w	r7, [r9], #2
9001ab26:	e7af      	b.n	9001aa88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001ab28:	f04f 0e00 	mov.w	lr, #0
9001ab2c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001ab30:	eb03 040e 	add.w	r4, r3, lr
9001ab34:	2c00      	cmp	r4, #0
9001ab36:	dc43      	bgt.n	9001abc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001ab38:	9a00      	ldr	r2, [sp, #0]
9001ab3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ab3e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001ab42:	9300      	str	r3, [sp, #0]
9001ab44:	9b02      	ldr	r3, [sp, #8]
9001ab46:	2b00      	cmp	r3, #0
9001ab48:	f340 8098 	ble.w	9001ac7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001ab4c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001ab50:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ab52:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ab56:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ab5a:	eef0 6a62 	vmov.f32	s13, s5
9001ab5e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001ab62:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ab66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ab6a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001ab6e:	eef0 6a43 	vmov.f32	s13, s6
9001ab72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ab76:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001ab7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ab7e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ab82:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ab86:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ab8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ab8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ab92:	ee12 2a90 	vmov	r2, s5
9001ab96:	eef0 2a47 	vmov.f32	s5, s14
9001ab9a:	fb92 f3f3 	sdiv	r3, r2, r3
9001ab9e:	ee13 2a10 	vmov	r2, s6
9001aba2:	9313      	str	r3, [sp, #76]	; 0x4c
9001aba4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001aba6:	eeb0 3a67 	vmov.f32	s6, s15
9001abaa:	fb92 f3f3 	sdiv	r3, r2, r3
9001abae:	9314      	str	r3, [sp, #80]	; 0x50
9001abb0:	9b02      	ldr	r3, [sp, #8]
9001abb2:	9a05      	ldr	r2, [sp, #20]
9001abb4:	3b01      	subs	r3, #1
9001abb6:	9302      	str	r3, [sp, #8]
9001abb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001abba:	bf08      	it	eq
9001abbc:	4613      	moveq	r3, r2
9001abbe:	e72a      	b.n	9001aa16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001abc0:	140f      	asrs	r7, r1, #16
9001abc2:	d454      	bmi.n	9001ac6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001abc4:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001abc8:	42be      	cmp	r6, r7
9001abca:	dd50      	ble.n	9001ac6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001abcc:	ea5f 4822 	movs.w	r8, r2, asr #16
9001abd0:	d44d      	bmi.n	9001ac6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001abd2:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001abd6:	4544      	cmp	r4, r8
9001abd8:	dd49      	ble.n	9001ac6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001abda:	9c04      	ldr	r4, [sp, #16]
9001abdc:	b236      	sxth	r6, r6
9001abde:	f06f 0001 	mvn.w	r0, #1
9001abe2:	fb08 4606 	mla	r6, r8, r6, r4
9001abe6:	9c01      	ldr	r4, [sp, #4]
9001abe8:	fb00 fa0e 	mul.w	sl, r0, lr
9001abec:	9800      	ldr	r0, [sp, #0]
9001abee:	f816 8007 	ldrb.w	r8, [r6, r7]
9001abf2:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001abf6:	eb04 0b08 	add.w	fp, r4, r8
9001abfa:	f830 400a 	ldrh.w	r4, [r0, sl]
9001abfe:	9801      	ldr	r0, [sp, #4]
9001ac00:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001ac04:	1227      	asrs	r7, r4, #8
9001ac06:	f89b b001 	ldrb.w	fp, [fp, #1]
9001ac0a:	fb16 f609 	smulbb	r6, r6, r9
9001ac0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001ac12:	f810 8008 	ldrb.w	r8, [r0, r8]
9001ac16:	fb1b fb09 	smulbb	fp, fp, r9
9001ac1a:	fb07 6705 	mla	r7, r7, r5, r6
9001ac1e:	10e6      	asrs	r6, r4, #3
9001ac20:	00e4      	lsls	r4, r4, #3
9001ac22:	9800      	ldr	r0, [sp, #0]
9001ac24:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001ac28:	b2bf      	uxth	r7, r7
9001ac2a:	b2e4      	uxtb	r4, r4
9001ac2c:	fb06 b605 	mla	r6, r6, r5, fp
9001ac30:	fb14 f405 	smulbb	r4, r4, r5
9001ac34:	b2b6      	uxth	r6, r6
9001ac36:	fb08 4809 	mla	r8, r8, r9, r4
9001ac3a:	1c7c      	adds	r4, r7, #1
9001ac3c:	f106 0b01 	add.w	fp, r6, #1
9001ac40:	fa1f f888 	uxth.w	r8, r8
9001ac44:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001ac48:	f108 0401 	add.w	r4, r8, #1
9001ac4c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001ac50:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001ac54:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001ac58:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001ac5c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001ac60:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001ac64:	4327      	orrs	r7, r4
9001ac66:	ea47 070b 	orr.w	r7, r7, fp
9001ac6a:	f820 700a 	strh.w	r7, [r0, sl]
9001ac6e:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001ac70:	f10e 3eff 	add.w	lr, lr, #4294967295
9001ac74:	4401      	add	r1, r0
9001ac76:	9814      	ldr	r0, [sp, #80]	; 0x50
9001ac78:	4402      	add	r2, r0
9001ac7a:	e759      	b.n	9001ab30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001ac7c:	b007      	add	sp, #28
9001ac7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001ac84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ac84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ac88:	b085      	sub	sp, #20
9001ac8a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001ac8e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001ac90:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001ac92:	9203      	str	r2, [sp, #12]
9001ac94:	6870      	ldr	r0, [r6, #4]
9001ac96:	686f      	ldr	r7, [r5, #4]
9001ac98:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
9001ac9c:	3704      	adds	r7, #4
9001ac9e:	9101      	str	r1, [sp, #4]
9001aca0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001aca4:	fb00 2404 	mla	r4, r0, r4, r2
9001aca8:	6832      	ldr	r2, [r6, #0]
9001acaa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001acae:	682a      	ldr	r2, [r5, #0]
9001acb0:	9202      	str	r2, [sp, #8]
9001acb2:	9a01      	ldr	r2, [sp, #4]
9001acb4:	2a00      	cmp	r2, #0
9001acb6:	dc03      	bgt.n	9001acc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001acb8:	9a03      	ldr	r2, [sp, #12]
9001acba:	2a00      	cmp	r2, #0
9001acbc:	f340 80cc 	ble.w	9001ae58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001acc0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001acc2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001acc6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001acca:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001accc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001acd0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001acd4:	2b00      	cmp	r3, #0
9001acd6:	dd0d      	ble.n	9001acf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001acd8:	1406      	asrs	r6, r0, #16
9001acda:	d405      	bmi.n	9001ace8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001acdc:	454e      	cmp	r6, r9
9001acde:	da03      	bge.n	9001ace8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001ace0:	1416      	asrs	r6, r2, #16
9001ace2:	d401      	bmi.n	9001ace8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001ace4:	4546      	cmp	r6, r8
9001ace6:	db06      	blt.n	9001acf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ace8:	9e12      	ldr	r6, [sp, #72]	; 0x48
9001acea:	4460      	add	r0, ip
9001acec:	3b01      	subs	r3, #1
9001acee:	3402      	adds	r4, #2
9001acf0:	4432      	add	r2, r6
9001acf2:	e7ef      	b.n	9001acd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001acf4:	d00f      	beq.n	9001ad16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001acf6:	1e5e      	subs	r6, r3, #1
9001acf8:	fb0c 0e06 	mla	lr, ip, r6, r0
9001acfc:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001ad00:	d543      	bpl.n	9001ad8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001ad02:	4698      	mov	r8, r3
9001ad04:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001ad08:	f1b8 0f00 	cmp.w	r8, #0
9001ad0c:	dc71      	bgt.n	9001adf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001ad0e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ad12:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ad16:	9b01      	ldr	r3, [sp, #4]
9001ad18:	2b00      	cmp	r3, #0
9001ad1a:	f340 809d 	ble.w	9001ae58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001ad1e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ad22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ad24:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ad28:	eeb0 6a62 	vmov.f32	s12, s5
9001ad2c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ad30:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ad34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ad38:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001ad3c:	eeb0 6a43 	vmov.f32	s12, s6
9001ad40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ad44:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001ad48:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ad4c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ad50:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ad54:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ad58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ad5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ad60:	ee12 2a90 	vmov	r2, s5
9001ad64:	eef0 2a47 	vmov.f32	s5, s14
9001ad68:	fb92 fcf3 	sdiv	ip, r2, r3
9001ad6c:	ee13 2a10 	vmov	r2, s6
9001ad70:	eeb0 3a67 	vmov.f32	s6, s15
9001ad74:	fb92 f3f3 	sdiv	r3, r2, r3
9001ad78:	9312      	str	r3, [sp, #72]	; 0x48
9001ad7a:	9b01      	ldr	r3, [sp, #4]
9001ad7c:	9a03      	ldr	r2, [sp, #12]
9001ad7e:	3b01      	subs	r3, #1
9001ad80:	9301      	str	r3, [sp, #4]
9001ad82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ad84:	bf08      	it	eq
9001ad86:	4613      	moveq	r3, r2
9001ad88:	e793      	b.n	9001acb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001ad8a:	45ce      	cmp	lr, r9
9001ad8c:	dab9      	bge.n	9001ad02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ad8e:	9912      	ldr	r1, [sp, #72]	; 0x48
9001ad90:	fb01 2606 	mla	r6, r1, r6, r2
9001ad94:	1436      	asrs	r6, r6, #16
9001ad96:	d4b4      	bmi.n	9001ad02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ad98:	4546      	cmp	r6, r8
9001ad9a:	dab2      	bge.n	9001ad02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ad9c:	4698      	mov	r8, r3
9001ad9e:	46a2      	mov	sl, r4
9001ada0:	f1b8 0f00 	cmp.w	r8, #0
9001ada4:	ddb3      	ble.n	9001ad0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001ada6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001adaa:	1416      	asrs	r6, r2, #16
9001adac:	9902      	ldr	r1, [sp, #8]
9001adae:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001adb2:	f108 38ff 	add.w	r8, r8, #4294967295
9001adb6:	4460      	add	r0, ip
9001adb8:	fb09 1606 	mla	r6, r9, r6, r1
9001adbc:	4928      	ldr	r1, [pc, #160]	; (9001ae60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001adbe:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001adc2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001adc6:	eb07 0b0e 	add.w	fp, r7, lr
9001adca:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001adce:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001add2:	00f6      	lsls	r6, r6, #3
9001add4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001add8:	9912      	ldr	r1, [sp, #72]	; 0x48
9001adda:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001adde:	440a      	add	r2, r1
9001ade0:	ea49 0606 	orr.w	r6, r9, r6
9001ade4:	f817 900e 	ldrb.w	r9, [r7, lr]
9001ade8:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001adec:	f82a 6b02 	strh.w	r6, [sl], #2
9001adf0:	e7d6      	b.n	9001ada0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001adf2:	ea5f 4920 	movs.w	r9, r0, asr #16
9001adf6:	d429      	bmi.n	9001ae4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001adf8:	68ae      	ldr	r6, [r5, #8]
9001adfa:	454e      	cmp	r6, r9
9001adfc:	dd26      	ble.n	9001ae4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001adfe:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001ae02:	d423      	bmi.n	9001ae4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001ae04:	68e9      	ldr	r1, [r5, #12]
9001ae06:	4559      	cmp	r1, fp
9001ae08:	dd20      	ble.n	9001ae4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001ae0a:	fa0f fe86 	sxth.w	lr, r6
9001ae0e:	9902      	ldr	r1, [sp, #8]
9001ae10:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001ae14:	f06f 0101 	mvn.w	r1, #1
9001ae18:	f81e e009 	ldrb.w	lr, [lr, r9]
9001ae1c:	fb01 f908 	mul.w	r9, r1, r8
9001ae20:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
9001ae24:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001ae28:	eb07 060e 	add.w	r6, r7, lr
9001ae2c:	f896 b002 	ldrb.w	fp, [r6, #2]
9001ae30:	7876      	ldrb	r6, [r6, #1]
9001ae32:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001ae36:	00f6      	lsls	r6, r6, #3
9001ae38:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001ae3c:	ea4b 0606 	orr.w	r6, fp, r6
9001ae40:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001ae44:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001ae48:	f82a 6009 	strh.w	r6, [sl, r9]
9001ae4c:	9912      	ldr	r1, [sp, #72]	; 0x48
9001ae4e:	4460      	add	r0, ip
9001ae50:	f108 38ff 	add.w	r8, r8, #4294967295
9001ae54:	440a      	add	r2, r1
9001ae56:	e757      	b.n	9001ad08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001ae58:	b005      	add	sp, #20
9001ae5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ae5e:	bf00      	nop
9001ae60:	fffff800 	.word	0xfffff800

9001ae64 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ae64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ae68:	b087      	sub	sp, #28
9001ae6a:	468b      	mov	fp, r1
9001ae6c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001ae70:	9815      	ldr	r0, [sp, #84]	; 0x54
9001ae72:	9204      	str	r2, [sp, #16]
9001ae74:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001ae78:	6841      	ldr	r1, [r0, #4]
9001ae7a:	9205      	str	r2, [sp, #20]
9001ae7c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001ae80:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001ae84:	fb01 2404 	mla	r4, r1, r4, r2
9001ae88:	6802      	ldr	r2, [r0, #0]
9001ae8a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ae8e:	f8dc 2000 	ldr.w	r2, [ip]
9001ae92:	9201      	str	r2, [sp, #4]
9001ae94:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001ae98:	3204      	adds	r2, #4
9001ae9a:	9202      	str	r2, [sp, #8]
9001ae9c:	f1bb 0f00 	cmp.w	fp, #0
9001aea0:	dc03      	bgt.n	9001aeaa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001aea2:	9a04      	ldr	r2, [sp, #16]
9001aea4:	2a00      	cmp	r2, #0
9001aea6:	f340 8138 	ble.w	9001b11a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001aeaa:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001aeac:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001aeb0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001aeb4:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001aeb6:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001aeba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001aebe:	2b00      	cmp	r3, #0
9001aec0:	dd0e      	ble.n	9001aee0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001aec2:	1402      	asrs	r2, r0, #16
9001aec4:	d405      	bmi.n	9001aed2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001aec6:	42ba      	cmp	r2, r7
9001aec8:	da03      	bge.n	9001aed2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001aeca:	140a      	asrs	r2, r1, #16
9001aecc:	d401      	bmi.n	9001aed2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001aece:	42b2      	cmp	r2, r6
9001aed0:	db07      	blt.n	9001aee2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001aed2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001aed4:	3b01      	subs	r3, #1
9001aed6:	3402      	adds	r4, #2
9001aed8:	4410      	add	r0, r2
9001aeda:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001aedc:	4411      	add	r1, r2
9001aede:	e7ee      	b.n	9001aebe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001aee0:	d019      	beq.n	9001af16 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001aee2:	1e5a      	subs	r2, r3, #1
9001aee4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001aee6:	fb05 0502 	mla	r5, r5, r2, r0
9001aeea:	142d      	asrs	r5, r5, #16
9001aeec:	d409      	bmi.n	9001af02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001aeee:	42bd      	cmp	r5, r7
9001aef0:	da07      	bge.n	9001af02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001aef2:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001aef4:	fb05 1202 	mla	r2, r5, r2, r1
9001aef8:	1412      	asrs	r2, r2, #16
9001aefa:	d402      	bmi.n	9001af02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001aefc:	42b2      	cmp	r2, r6
9001aefe:	f2c0 80ac 	blt.w	9001b05a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001af02:	f04f 0e00 	mov.w	lr, #0
9001af06:	eb03 020e 	add.w	r2, r3, lr
9001af0a:	2a00      	cmp	r2, #0
9001af0c:	dc3e      	bgt.n	9001af8c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001af0e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001af12:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001af16:	f1bb 0f00 	cmp.w	fp, #0
9001af1a:	f340 80fe 	ble.w	9001b11a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001af1e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001af22:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001af24:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001af28:	f1bb 0b01 	subs.w	fp, fp, #1
9001af2c:	eeb0 6a62 	vmov.f32	s12, s5
9001af30:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001af34:	ee31 1a05 	vadd.f32	s2, s2, s10
9001af38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001af3c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001af40:	eeb0 6a43 	vmov.f32	s12, s6
9001af44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001af48:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001af4c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001af50:	ee61 7a27 	vmul.f32	s15, s2, s15
9001af54:	ee77 2a62 	vsub.f32	s5, s14, s5
9001af58:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001af5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001af60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001af64:	ee12 2a90 	vmov	r2, s5
9001af68:	eef0 2a47 	vmov.f32	s5, s14
9001af6c:	fb92 f3f3 	sdiv	r3, r2, r3
9001af70:	ee13 2a10 	vmov	r2, s6
9001af74:	9313      	str	r3, [sp, #76]	; 0x4c
9001af76:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001af78:	eeb0 3a67 	vmov.f32	s6, s15
9001af7c:	fb92 f3f3 	sdiv	r3, r2, r3
9001af80:	9a04      	ldr	r2, [sp, #16]
9001af82:	9314      	str	r3, [sp, #80]	; 0x50
9001af84:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001af86:	bf08      	it	eq
9001af88:	4613      	moveq	r3, r2
9001af8a:	e787      	b.n	9001ae9c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001af8c:	1406      	asrs	r6, r0, #16
9001af8e:	d45d      	bmi.n	9001b04c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001af90:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001af94:	42b5      	cmp	r5, r6
9001af96:	dd59      	ble.n	9001b04c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001af98:	140f      	asrs	r7, r1, #16
9001af9a:	d457      	bmi.n	9001b04c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001af9c:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001afa0:	42ba      	cmp	r2, r7
9001afa2:	dd53      	ble.n	9001b04c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001afa4:	9a01      	ldr	r2, [sp, #4]
9001afa6:	b22d      	sxth	r5, r5
9001afa8:	fb07 2505 	mla	r5, r7, r5, r2
9001afac:	5daa      	ldrb	r2, [r5, r6]
9001afae:	9d02      	ldr	r5, [sp, #8]
9001afb0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001afb4:	0e2e      	lsrs	r6, r5, #24
9001afb6:	d049      	beq.n	9001b04c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001afb8:	f06f 0201 	mvn.w	r2, #1
9001afbc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001afc0:	fb02 f20e 	mul.w	r2, r2, lr
9001afc4:	f834 8002 	ldrh.w	r8, [r4, r2]
9001afc8:	9203      	str	r2, [sp, #12]
9001afca:	9a05      	ldr	r2, [sp, #20]
9001afcc:	ea4f 2728 	mov.w	r7, r8, asr #8
9001afd0:	4356      	muls	r6, r2
9001afd2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001afd6:	1c72      	adds	r2, r6, #1
9001afd8:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001afdc:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001afe0:	b2ed      	uxtb	r5, r5
9001afe2:	1212      	asrs	r2, r2, #8
9001afe4:	fa1f f982 	uxth.w	r9, r2
9001afe8:	43d2      	mvns	r2, r2
9001afea:	fb16 f609 	smulbb	r6, r6, r9
9001afee:	b2d2      	uxtb	r2, r2
9001aff0:	fb15 f509 	smulbb	r5, r5, r9
9001aff4:	fb07 6702 	mla	r7, r7, r2, r6
9001aff8:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001affc:	fb1a fa09 	smulbb	sl, sl, r9
9001b000:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b004:	b2bf      	uxth	r7, r7
9001b006:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001b00a:	fa5f f888 	uxtb.w	r8, r8
9001b00e:	fb06 a602 	mla	r6, r6, r2, sl
9001b012:	fb08 5502 	mla	r5, r8, r2, r5
9001b016:	1c7a      	adds	r2, r7, #1
9001b018:	b2b6      	uxth	r6, r6
9001b01a:	b2ad      	uxth	r5, r5
9001b01c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001b020:	9a03      	ldr	r2, [sp, #12]
9001b022:	f105 0a01 	add.w	sl, r5, #1
9001b026:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001b02a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b02e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b032:	ea4a 0707 	orr.w	r7, sl, r7
9001b036:	f106 0a01 	add.w	sl, r6, #1
9001b03a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b03e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b042:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b046:	ea47 070a 	orr.w	r7, r7, sl
9001b04a:	52a7      	strh	r7, [r4, r2]
9001b04c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001b04e:	f10e 3eff 	add.w	lr, lr, #4294967295
9001b052:	4410      	add	r0, r2
9001b054:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b056:	4411      	add	r1, r2
9001b058:	e755      	b.n	9001af06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001b05a:	f04f 0800 	mov.w	r8, #0
9001b05e:	eba3 0208 	sub.w	r2, r3, r8
9001b062:	2a00      	cmp	r2, #0
9001b064:	f77f af53 	ble.w	9001af0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001b068:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001b06c:	140a      	asrs	r2, r1, #16
9001b06e:	9f01      	ldr	r7, [sp, #4]
9001b070:	1405      	asrs	r5, r0, #16
9001b072:	fb06 7202 	mla	r2, r6, r2, r7
9001b076:	5d52      	ldrb	r2, [r2, r5]
9001b078:	9d02      	ldr	r5, [sp, #8]
9001b07a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001b07e:	0e2e      	lsrs	r6, r5, #24
9001b080:	d044      	beq.n	9001b10c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001b082:	9a05      	ldr	r2, [sp, #20]
9001b084:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b088:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001b08c:	4356      	muls	r6, r2
9001b08e:	ea4f 272e 	mov.w	r7, lr, asr #8
9001b092:	1c72      	adds	r2, r6, #1
9001b094:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b098:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001b09c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b0a0:	b2ed      	uxtb	r5, r5
9001b0a2:	1212      	asrs	r2, r2, #8
9001b0a4:	fa1f f982 	uxth.w	r9, r2
9001b0a8:	43d2      	mvns	r2, r2
9001b0aa:	fb16 f609 	smulbb	r6, r6, r9
9001b0ae:	b2d2      	uxtb	r2, r2
9001b0b0:	fb15 f509 	smulbb	r5, r5, r9
9001b0b4:	fb07 6702 	mla	r7, r7, r2, r6
9001b0b8:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001b0bc:	fb1a fa09 	smulbb	sl, sl, r9
9001b0c0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b0c4:	b2bf      	uxth	r7, r7
9001b0c6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001b0ca:	fa5f fe8e 	uxtb.w	lr, lr
9001b0ce:	fb06 a602 	mla	r6, r6, r2, sl
9001b0d2:	fb0e 5502 	mla	r5, lr, r2, r5
9001b0d6:	1c7a      	adds	r2, r7, #1
9001b0d8:	b2b6      	uxth	r6, r6
9001b0da:	b2ad      	uxth	r5, r5
9001b0dc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001b0e0:	f105 0a01 	add.w	sl, r5, #1
9001b0e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001b0e8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b0ec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b0f0:	ea4a 0707 	orr.w	r7, sl, r7
9001b0f4:	f106 0a01 	add.w	sl, r6, #1
9001b0f8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b0fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b100:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b104:	ea47 070a 	orr.w	r7, r7, sl
9001b108:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001b10c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001b10e:	f108 0801 	add.w	r8, r8, #1
9001b112:	4410      	add	r0, r2
9001b114:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b116:	4411      	add	r1, r2
9001b118:	e7a1      	b.n	9001b05e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001b11a:	b007      	add	sp, #28
9001b11c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b120 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b124:	b085      	sub	sp, #20
9001b126:	468b      	mov	fp, r1
9001b128:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b12c:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001b12e:	9203      	str	r2, [sp, #12]
9001b130:	6841      	ldr	r1, [r0, #4]
9001b132:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001b136:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001b13a:	fb01 2404 	mla	r4, r1, r4, r2
9001b13e:	6802      	ldr	r2, [r0, #0]
9001b140:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b144:	f8de 2000 	ldr.w	r2, [lr]
9001b148:	9200      	str	r2, [sp, #0]
9001b14a:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b14e:	3204      	adds	r2, #4
9001b150:	9201      	str	r2, [sp, #4]
9001b152:	f1bb 0f00 	cmp.w	fp, #0
9001b156:	dc03      	bgt.n	9001b160 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001b158:	9a03      	ldr	r2, [sp, #12]
9001b15a:	2a00      	cmp	r2, #0
9001b15c:	f340 8153 	ble.w	9001b406 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001b160:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b162:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b166:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b16a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001b16c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001b170:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b174:	2b00      	cmp	r3, #0
9001b176:	dd0e      	ble.n	9001b196 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b178:	1408      	asrs	r0, r1, #16
9001b17a:	d405      	bmi.n	9001b188 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b17c:	42b8      	cmp	r0, r7
9001b17e:	da03      	bge.n	9001b188 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b180:	1410      	asrs	r0, r2, #16
9001b182:	d401      	bmi.n	9001b188 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b184:	42b0      	cmp	r0, r6
9001b186:	db07      	blt.n	9001b198 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001b188:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b18a:	3b01      	subs	r3, #1
9001b18c:	3402      	adds	r4, #2
9001b18e:	4401      	add	r1, r0
9001b190:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b192:	4402      	add	r2, r0
9001b194:	e7ee      	b.n	9001b174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001b196:	d017      	beq.n	9001b1c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001b198:	1e58      	subs	r0, r3, #1
9001b19a:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001b19c:	fb05 1500 	mla	r5, r5, r0, r1
9001b1a0:	142d      	asrs	r5, r5, #16
9001b1a2:	d409      	bmi.n	9001b1b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b1a4:	42bd      	cmp	r5, r7
9001b1a6:	da07      	bge.n	9001b1b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b1a8:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001b1aa:	fb05 2000 	mla	r0, r5, r0, r2
9001b1ae:	1400      	asrs	r0, r0, #16
9001b1b0:	d402      	bmi.n	9001b1b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b1b2:	42b0      	cmp	r0, r6
9001b1b4:	f2c0 80bc 	blt.w	9001b330 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001b1b8:	2600      	movs	r6, #0
9001b1ba:	1998      	adds	r0, r3, r6
9001b1bc:	2800      	cmp	r0, #0
9001b1be:	dc3e      	bgt.n	9001b23e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001b1c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b1c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b1c8:	f1bb 0f00 	cmp.w	fp, #0
9001b1cc:	f340 811b 	ble.w	9001b406 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001b1d0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b1d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b1d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b1da:	f1bb 0b01 	subs.w	fp, fp, #1
9001b1de:	eeb0 6a62 	vmov.f32	s12, s5
9001b1e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b1e6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b1ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b1ee:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001b1f2:	eeb0 6a43 	vmov.f32	s12, s6
9001b1f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b1fa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001b1fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b202:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b206:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b20a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b20e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b212:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b216:	ee12 2a90 	vmov	r2, s5
9001b21a:	eef0 2a47 	vmov.f32	s5, s14
9001b21e:	fb92 f3f3 	sdiv	r3, r2, r3
9001b222:	ee13 2a10 	vmov	r2, s6
9001b226:	9311      	str	r3, [sp, #68]	; 0x44
9001b228:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b22a:	eeb0 3a67 	vmov.f32	s6, s15
9001b22e:	fb92 f3f3 	sdiv	r3, r2, r3
9001b232:	9a03      	ldr	r2, [sp, #12]
9001b234:	9312      	str	r3, [sp, #72]	; 0x48
9001b236:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b238:	bf08      	it	eq
9001b23a:	4613      	moveq	r3, r2
9001b23c:	e789      	b.n	9001b152 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001b23e:	140f      	asrs	r7, r1, #16
9001b240:	d426      	bmi.n	9001b290 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b242:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b246:	42bd      	cmp	r5, r7
9001b248:	dd22      	ble.n	9001b290 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b24a:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b24e:	d41f      	bmi.n	9001b290 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b250:	f8de 000c 	ldr.w	r0, [lr, #12]
9001b254:	4560      	cmp	r0, ip
9001b256:	dd1b      	ble.n	9001b290 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b258:	9800      	ldr	r0, [sp, #0]
9001b25a:	b22d      	sxth	r5, r5
9001b25c:	fb0c 0505 	mla	r5, ip, r5, r0
9001b260:	5de8      	ldrb	r0, [r5, r7]
9001b262:	9d01      	ldr	r5, [sp, #4]
9001b264:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001b268:	0e07      	lsrs	r7, r0, #24
9001b26a:	2fff      	cmp	r7, #255	; 0xff
9001b26c:	d116      	bne.n	9001b29c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b26e:	f06f 0501 	mvn.w	r5, #1
9001b272:	fb05 f706 	mul.w	r7, r5, r6
9001b276:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001b27a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001b27e:	0945      	lsrs	r5, r0, #5
9001b280:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001b284:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b288:	ea4c 0505 	orr.w	r5, ip, r5
9001b28c:	4305      	orrs	r5, r0
9001b28e:	53e5      	strh	r5, [r4, r7]
9001b290:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b292:	3e01      	subs	r6, #1
9001b294:	4401      	add	r1, r0
9001b296:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b298:	4402      	add	r2, r0
9001b29a:	e78e      	b.n	9001b1ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001b29c:	b2fd      	uxtb	r5, r7
9001b29e:	2f00      	cmp	r7, #0
9001b2a0:	d0f6      	beq.n	9001b290 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b2a2:	f06f 0701 	mvn.w	r7, #1
9001b2a6:	fa1f f985 	uxth.w	r9, r5
9001b2aa:	43ed      	mvns	r5, r5
9001b2ac:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001b2b0:	4377      	muls	r7, r6
9001b2b2:	fb1a fa09 	smulbb	sl, sl, r9
9001b2b6:	b2ed      	uxtb	r5, r5
9001b2b8:	f834 8007 	ldrh.w	r8, [r4, r7]
9001b2bc:	9702      	str	r7, [sp, #8]
9001b2be:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001b2c2:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001b2c6:	fb17 f709 	smulbb	r7, r7, r9
9001b2ca:	b2c0      	uxtb	r0, r0
9001b2cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b2d0:	fb10 f009 	smulbb	r0, r0, r9
9001b2d4:	fb0c 7c05 	mla	ip, ip, r5, r7
9001b2d8:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001b2dc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b2e0:	fa1f fc8c 	uxth.w	ip, ip
9001b2e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b2e8:	fa5f f888 	uxtb.w	r8, r8
9001b2ec:	fb07 a705 	mla	r7, r7, r5, sl
9001b2f0:	fb08 0005 	mla	r0, r8, r5, r0
9001b2f4:	f10c 0501 	add.w	r5, ip, #1
9001b2f8:	b2bf      	uxth	r7, r7
9001b2fa:	b280      	uxth	r0, r0
9001b2fc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b300:	f100 0a01 	add.w	sl, r0, #1
9001b304:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b308:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001b30c:	9802      	ldr	r0, [sp, #8]
9001b30e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b312:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b316:	f107 0a01 	add.w	sl, r7, #1
9001b31a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b31e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b322:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b326:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b32a:	f824 c000 	strh.w	ip, [r4, r0]
9001b32e:	e7af      	b.n	9001b290 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b330:	f04f 0800 	mov.w	r8, #0
9001b334:	eba3 0008 	sub.w	r0, r3, r8
9001b338:	2800      	cmp	r0, #0
9001b33a:	f77f af41 	ble.w	9001b1c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b33e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001b342:	1410      	asrs	r0, r2, #16
9001b344:	9f00      	ldr	r7, [sp, #0]
9001b346:	140d      	asrs	r5, r1, #16
9001b348:	fb06 7000 	mla	r0, r6, r0, r7
9001b34c:	5d40      	ldrb	r0, [r0, r5]
9001b34e:	9d01      	ldr	r5, [sp, #4]
9001b350:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001b354:	0e2e      	lsrs	r6, r5, #24
9001b356:	2eff      	cmp	r6, #255	; 0xff
9001b358:	d112      	bne.n	9001b380 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001b35a:	482c      	ldr	r0, [pc, #176]	; (9001b40c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001b35c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001b360:	0968      	lsrs	r0, r5, #5
9001b362:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b366:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001b36a:	4330      	orrs	r0, r6
9001b36c:	4328      	orrs	r0, r5
9001b36e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001b372:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b374:	f108 0801 	add.w	r8, r8, #1
9001b378:	4401      	add	r1, r0
9001b37a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b37c:	4402      	add	r2, r0
9001b37e:	e7d9      	b.n	9001b334 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001b380:	b2f0      	uxtb	r0, r6
9001b382:	2e00      	cmp	r6, #0
9001b384:	d0f5      	beq.n	9001b372 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001b386:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001b38a:	fa1f f980 	uxth.w	r9, r0
9001b38e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b392:	43c0      	mvns	r0, r0
9001b394:	ea4f 272c 	mov.w	r7, ip, asr #8
9001b398:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b39c:	fb16 f609 	smulbb	r6, r6, r9
9001b3a0:	b2c0      	uxtb	r0, r0
9001b3a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b3a6:	b2ed      	uxtb	r5, r5
9001b3a8:	fb1a fa09 	smulbb	sl, sl, r9
9001b3ac:	fb07 6700 	mla	r7, r7, r0, r6
9001b3b0:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001b3b4:	fb15 f509 	smulbb	r5, r5, r9
9001b3b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b3bc:	b2bf      	uxth	r7, r7
9001b3be:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001b3c2:	fa5f fc8c 	uxtb.w	ip, ip
9001b3c6:	fb06 a600 	mla	r6, r6, r0, sl
9001b3ca:	fb0c 5500 	mla	r5, ip, r0, r5
9001b3ce:	1c78      	adds	r0, r7, #1
9001b3d0:	b2b6      	uxth	r6, r6
9001b3d2:	b2ad      	uxth	r5, r5
9001b3d4:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001b3d8:	f105 0a01 	add.w	sl, r5, #1
9001b3dc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001b3e0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b3e4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b3e8:	ea4a 0707 	orr.w	r7, sl, r7
9001b3ec:	f106 0a01 	add.w	sl, r6, #1
9001b3f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b3f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b3f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b3fc:	ea47 070a 	orr.w	r7, r7, sl
9001b400:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001b404:	e7b5      	b.n	9001b372 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001b406:	b005      	add	sp, #20
9001b408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b40c:	fffff800 	.word	0xfffff800

9001b410 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b414:	b087      	sub	sp, #28
9001b416:	468b      	mov	fp, r1
9001b418:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b41c:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001b41e:	9204      	str	r2, [sp, #16]
9001b420:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b424:	6861      	ldr	r1, [r4, #4]
9001b426:	9205      	str	r2, [sp, #20]
9001b428:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001b42c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001b430:	fb01 2000 	mla	r0, r1, r0, r2
9001b434:	6822      	ldr	r2, [r4, #0]
9001b436:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001b43a:	f8de 2000 	ldr.w	r2, [lr]
9001b43e:	9201      	str	r2, [sp, #4]
9001b440:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b444:	9202      	str	r2, [sp, #8]
9001b446:	f1bb 0f00 	cmp.w	fp, #0
9001b44a:	dc03      	bgt.n	9001b454 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001b44c:	9a04      	ldr	r2, [sp, #16]
9001b44e:	2a00      	cmp	r2, #0
9001b450:	f340 8142 	ble.w	9001b6d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001b454:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001b456:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b45a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b45e:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001b460:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001b464:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b468:	2b00      	cmp	r3, #0
9001b46a:	dd0e      	ble.n	9001b48a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001b46c:	140c      	asrs	r4, r1, #16
9001b46e:	d405      	bmi.n	9001b47c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b470:	42bc      	cmp	r4, r7
9001b472:	da03      	bge.n	9001b47c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b474:	1414      	asrs	r4, r2, #16
9001b476:	d401      	bmi.n	9001b47c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b478:	42b4      	cmp	r4, r6
9001b47a:	db07      	blt.n	9001b48c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b47c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001b47e:	3b01      	subs	r3, #1
9001b480:	3002      	adds	r0, #2
9001b482:	4421      	add	r1, r4
9001b484:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001b486:	4422      	add	r2, r4
9001b488:	e7ee      	b.n	9001b468 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001b48a:	d019      	beq.n	9001b4c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001b48c:	1e5c      	subs	r4, r3, #1
9001b48e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001b490:	fb05 1504 	mla	r5, r5, r4, r1
9001b494:	142d      	asrs	r5, r5, #16
9001b496:	d409      	bmi.n	9001b4ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b498:	42bd      	cmp	r5, r7
9001b49a:	da07      	bge.n	9001b4ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b49c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001b49e:	fb05 2404 	mla	r4, r5, r4, r2
9001b4a2:	1424      	asrs	r4, r4, #16
9001b4a4:	d402      	bmi.n	9001b4ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b4a6:	42b4      	cmp	r4, r6
9001b4a8:	f2c0 80b1 	blt.w	9001b60e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001b4ac:	f04f 0800 	mov.w	r8, #0
9001b4b0:	eb03 0408 	add.w	r4, r3, r8
9001b4b4:	2c00      	cmp	r4, #0
9001b4b6:	dc3e      	bgt.n	9001b536 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001b4b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b4bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b4c0:	f1bb 0f00 	cmp.w	fp, #0
9001b4c4:	f340 8108 	ble.w	9001b6d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001b4c8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b4cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b4ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b4d2:	f1bb 0b01 	subs.w	fp, fp, #1
9001b4d6:	eeb0 6a62 	vmov.f32	s12, s5
9001b4da:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b4de:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b4e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b4e6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001b4ea:	eeb0 6a43 	vmov.f32	s12, s6
9001b4ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b4f2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001b4f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b4fa:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b4fe:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b502:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b506:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b50a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b50e:	ee12 2a90 	vmov	r2, s5
9001b512:	eef0 2a47 	vmov.f32	s5, s14
9001b516:	fb92 f3f3 	sdiv	r3, r2, r3
9001b51a:	ee13 2a10 	vmov	r2, s6
9001b51e:	9313      	str	r3, [sp, #76]	; 0x4c
9001b520:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b522:	eeb0 3a67 	vmov.f32	s6, s15
9001b526:	fb92 f3f3 	sdiv	r3, r2, r3
9001b52a:	9a04      	ldr	r2, [sp, #16]
9001b52c:	9314      	str	r3, [sp, #80]	; 0x50
9001b52e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b530:	bf08      	it	eq
9001b532:	4613      	moveq	r3, r2
9001b534:	e787      	b.n	9001b446 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001b536:	140e      	asrs	r6, r1, #16
9001b538:	d462      	bmi.n	9001b600 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b53a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b53e:	42b5      	cmp	r5, r6
9001b540:	dd5e      	ble.n	9001b600 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b542:	1417      	asrs	r7, r2, #16
9001b544:	d45c      	bmi.n	9001b600 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b546:	f8de 400c 	ldr.w	r4, [lr, #12]
9001b54a:	42bc      	cmp	r4, r7
9001b54c:	dd58      	ble.n	9001b600 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b54e:	b22d      	sxth	r5, r5
9001b550:	9c02      	ldr	r4, [sp, #8]
9001b552:	fb07 6505 	mla	r5, r7, r5, r6
9001b556:	5d66      	ldrb	r6, [r4, r5]
9001b558:	2e00      	cmp	r6, #0
9001b55a:	d051      	beq.n	9001b600 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b55c:	9c01      	ldr	r4, [sp, #4]
9001b55e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001b562:	f06f 0401 	mvn.w	r4, #1
9001b566:	fb04 f408 	mul.w	r4, r4, r8
9001b56a:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001b56e:	5b05      	ldrh	r5, [r0, r4]
9001b570:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b574:	9403      	str	r4, [sp, #12]
9001b576:	9c05      	ldr	r4, [sp, #20]
9001b578:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b57c:	4366      	muls	r6, r4
9001b57e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001b582:	1c74      	adds	r4, r6, #1
9001b584:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001b588:	122e      	asrs	r6, r5, #8
9001b58a:	1224      	asrs	r4, r4, #8
9001b58c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b590:	00ed      	lsls	r5, r5, #3
9001b592:	b2a7      	uxth	r7, r4
9001b594:	43e4      	mvns	r4, r4
9001b596:	b2ed      	uxtb	r5, r5
9001b598:	b2e4      	uxtb	r4, r4
9001b59a:	fb16 f604 	smulbb	r6, r6, r4
9001b59e:	fb15 f504 	smulbb	r5, r5, r4
9001b5a2:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b5a6:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001b5aa:	fb1a fa04 	smulbb	sl, sl, r4
9001b5ae:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001b5b2:	fa1f fc8c 	uxth.w	ip, ip
9001b5b6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001b5ba:	fa5f f989 	uxtb.w	r9, r9
9001b5be:	fb06 a607 	mla	r6, r6, r7, sl
9001b5c2:	f10c 0401 	add.w	r4, ip, #1
9001b5c6:	fb09 5507 	mla	r5, r9, r7, r5
9001b5ca:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b5ce:	9c03      	ldr	r4, [sp, #12]
9001b5d0:	b2ad      	uxth	r5, r5
9001b5d2:	b2b6      	uxth	r6, r6
9001b5d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b5d8:	f105 0a01 	add.w	sl, r5, #1
9001b5dc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b5e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b5e4:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b5e8:	f106 0a01 	add.w	sl, r6, #1
9001b5ec:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b5f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b5f4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b5f8:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b5fc:	f820 c004 	strh.w	ip, [r0, r4]
9001b600:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001b602:	f108 38ff 	add.w	r8, r8, #4294967295
9001b606:	4421      	add	r1, r4
9001b608:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001b60a:	4422      	add	r2, r4
9001b60c:	e750      	b.n	9001b4b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b60e:	f04f 0900 	mov.w	r9, #0
9001b612:	eba3 0409 	sub.w	r4, r3, r9
9001b616:	2c00      	cmp	r4, #0
9001b618:	f77f af4e 	ble.w	9001b4b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001b61c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001b620:	140d      	asrs	r5, r1, #16
9001b622:	1414      	asrs	r4, r2, #16
9001b624:	fb06 5404 	mla	r4, r6, r4, r5
9001b628:	9d02      	ldr	r5, [sp, #8]
9001b62a:	5d2e      	ldrb	r6, [r5, r4]
9001b62c:	2e00      	cmp	r6, #0
9001b62e:	d04c      	beq.n	9001b6ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001b630:	9d01      	ldr	r5, [sp, #4]
9001b632:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001b636:	9c05      	ldr	r4, [sp, #20]
9001b638:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001b63c:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001b640:	4366      	muls	r6, r4
9001b642:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b646:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b64a:	1c74      	adds	r4, r6, #1
9001b64c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001b650:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001b654:	122e      	asrs	r6, r5, #8
9001b656:	1224      	asrs	r4, r4, #8
9001b658:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b65c:	00ed      	lsls	r5, r5, #3
9001b65e:	b2a7      	uxth	r7, r4
9001b660:	43e4      	mvns	r4, r4
9001b662:	b2ed      	uxtb	r5, r5
9001b664:	b2e4      	uxtb	r4, r4
9001b666:	fb16 f604 	smulbb	r6, r6, r4
9001b66a:	fb15 f504 	smulbb	r5, r5, r4
9001b66e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b672:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001b676:	fb1a fa04 	smulbb	sl, sl, r4
9001b67a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b67e:	fa1f fc8c 	uxth.w	ip, ip
9001b682:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001b686:	fa5f f888 	uxtb.w	r8, r8
9001b68a:	fb06 a607 	mla	r6, r6, r7, sl
9001b68e:	f10c 0401 	add.w	r4, ip, #1
9001b692:	fb08 5507 	mla	r5, r8, r7, r5
9001b696:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b69a:	b2ad      	uxth	r5, r5
9001b69c:	b2b6      	uxth	r6, r6
9001b69e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b6a2:	f105 0a01 	add.w	sl, r5, #1
9001b6a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b6aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b6ae:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b6b2:	f106 0a01 	add.w	sl, r6, #1
9001b6b6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b6ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b6be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b6c2:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b6c6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001b6ca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001b6cc:	f109 0901 	add.w	r9, r9, #1
9001b6d0:	4421      	add	r1, r4
9001b6d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001b6d4:	4422      	add	r2, r4
9001b6d6:	e79c      	b.n	9001b612 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001b6d8:	b007      	add	sp, #28
9001b6da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b6de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b6de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b6e2:	b085      	sub	sp, #20
9001b6e4:	468b      	mov	fp, r1
9001b6e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b6ea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001b6ec:	9203      	str	r2, [sp, #12]
9001b6ee:	6861      	ldr	r1, [r4, #4]
9001b6f0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001b6f4:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
9001b6f8:	fb01 2000 	mla	r0, r1, r0, r2
9001b6fc:	6822      	ldr	r2, [r4, #0]
9001b6fe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001b702:	f8d8 2000 	ldr.w	r2, [r8]
9001b706:	9200      	str	r2, [sp, #0]
9001b708:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001b70c:	9201      	str	r2, [sp, #4]
9001b70e:	f1bb 0f00 	cmp.w	fp, #0
9001b712:	dc03      	bgt.n	9001b71c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001b714:	9a03      	ldr	r2, [sp, #12]
9001b716:	2a00      	cmp	r2, #0
9001b718:	f340 8146 	ble.w	9001b9a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001b71c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b71e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001b722:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b726:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001b728:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001b72c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b730:	2b00      	cmp	r3, #0
9001b732:	dd0e      	ble.n	9001b752 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001b734:	140c      	asrs	r4, r1, #16
9001b736:	d405      	bmi.n	9001b744 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b738:	42bc      	cmp	r4, r7
9001b73a:	da03      	bge.n	9001b744 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b73c:	1414      	asrs	r4, r2, #16
9001b73e:	d401      	bmi.n	9001b744 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b740:	42b4      	cmp	r4, r6
9001b742:	db07      	blt.n	9001b754 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b744:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001b746:	3b01      	subs	r3, #1
9001b748:	3002      	adds	r0, #2
9001b74a:	4421      	add	r1, r4
9001b74c:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001b74e:	4422      	add	r2, r4
9001b750:	e7ee      	b.n	9001b730 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001b752:	d017      	beq.n	9001b784 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001b754:	1e5c      	subs	r4, r3, #1
9001b756:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001b758:	fb05 1504 	mla	r5, r5, r4, r1
9001b75c:	142d      	asrs	r5, r5, #16
9001b75e:	d409      	bmi.n	9001b774 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b760:	42bd      	cmp	r5, r7
9001b762:	da07      	bge.n	9001b774 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b764:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001b766:	fb05 2404 	mla	r4, r5, r4, r2
9001b76a:	1424      	asrs	r4, r4, #16
9001b76c:	d402      	bmi.n	9001b774 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b76e:	42b4      	cmp	r4, r6
9001b770:	f2c0 80b3 	blt.w	9001b8da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001b774:	2600      	movs	r6, #0
9001b776:	199c      	adds	r4, r3, r6
9001b778:	2c00      	cmp	r4, #0
9001b77a:	dc3e      	bgt.n	9001b7fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001b77c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b780:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b784:	f1bb 0f00 	cmp.w	fp, #0
9001b788:	f340 810e 	ble.w	9001b9a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001b78c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b790:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b792:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b796:	f1bb 0b01 	subs.w	fp, fp, #1
9001b79a:	eeb0 6a62 	vmov.f32	s12, s5
9001b79e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b7a2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b7a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b7aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001b7ae:	eeb0 6a43 	vmov.f32	s12, s6
9001b7b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b7b6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001b7ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b7be:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b7c2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b7c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b7ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b7ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b7d2:	ee12 2a90 	vmov	r2, s5
9001b7d6:	eef0 2a47 	vmov.f32	s5, s14
9001b7da:	fb92 f3f3 	sdiv	r3, r2, r3
9001b7de:	ee13 2a10 	vmov	r2, s6
9001b7e2:	9311      	str	r3, [sp, #68]	; 0x44
9001b7e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b7e6:	eeb0 3a67 	vmov.f32	s6, s15
9001b7ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001b7ee:	9a03      	ldr	r2, [sp, #12]
9001b7f0:	9312      	str	r3, [sp, #72]	; 0x48
9001b7f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b7f4:	bf08      	it	eq
9001b7f6:	4613      	moveq	r3, r2
9001b7f8:	e789      	b.n	9001b70e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001b7fa:	140f      	asrs	r7, r1, #16
9001b7fc:	d418      	bmi.n	9001b830 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b7fe:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001b802:	42bd      	cmp	r5, r7
9001b804:	dd14      	ble.n	9001b830 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b806:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b80a:	d411      	bmi.n	9001b830 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b80c:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001b810:	4564      	cmp	r4, ip
9001b812:	dd0d      	ble.n	9001b830 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b814:	b22d      	sxth	r5, r5
9001b816:	9c01      	ldr	r4, [sp, #4]
9001b818:	fb0c 7505 	mla	r5, ip, r5, r7
9001b81c:	5d64      	ldrb	r4, [r4, r5]
9001b81e:	2cff      	cmp	r4, #255	; 0xff
9001b820:	d10c      	bne.n	9001b83c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001b822:	9c00      	ldr	r4, [sp, #0]
9001b824:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001b828:	f06f 0401 	mvn.w	r4, #1
9001b82c:	4374      	muls	r4, r6
9001b82e:	5305      	strh	r5, [r0, r4]
9001b830:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001b832:	3e01      	subs	r6, #1
9001b834:	4421      	add	r1, r4
9001b836:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001b838:	4422      	add	r2, r4
9001b83a:	e79c      	b.n	9001b776 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b83c:	2c00      	cmp	r4, #0
9001b83e:	d0f7      	beq.n	9001b830 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b840:	9f00      	ldr	r7, [sp, #0]
9001b842:	fa1f fc84 	uxth.w	ip, r4
9001b846:	43e4      	mvns	r4, r4
9001b848:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001b84c:	f06f 0501 	mvn.w	r5, #1
9001b850:	b2e4      	uxtb	r4, r4
9001b852:	4375      	muls	r5, r6
9001b854:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001b858:	9502      	str	r5, [sp, #8]
9001b85a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001b85e:	5b45      	ldrh	r5, [r0, r5]
9001b860:	122f      	asrs	r7, r5, #8
9001b862:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b866:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b86a:	00ed      	lsls	r5, r5, #3
9001b86c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001b870:	fb17 f704 	smulbb	r7, r7, r4
9001b874:	b2ed      	uxtb	r5, r5
9001b876:	fb1a fa04 	smulbb	sl, sl, r4
9001b87a:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001b87e:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001b882:	fb15 f504 	smulbb	r5, r5, r4
9001b886:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001b88a:	fa1f fe8e 	uxth.w	lr, lr
9001b88e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b892:	fa5f f989 	uxtb.w	r9, r9
9001b896:	fb07 a70c 	mla	r7, r7, ip, sl
9001b89a:	f10e 0401 	add.w	r4, lr, #1
9001b89e:	fb09 550c 	mla	r5, r9, ip, r5
9001b8a2:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001b8a6:	9c02      	ldr	r4, [sp, #8]
9001b8a8:	b2ad      	uxth	r5, r5
9001b8aa:	b2bf      	uxth	r7, r7
9001b8ac:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001b8b0:	f105 0a01 	add.w	sl, r5, #1
9001b8b4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b8b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b8bc:	ea4a 0e0e 	orr.w	lr, sl, lr
9001b8c0:	f107 0a01 	add.w	sl, r7, #1
9001b8c4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b8c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b8cc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b8d0:	ea4e 0e0a 	orr.w	lr, lr, sl
9001b8d4:	f820 e004 	strh.w	lr, [r0, r4]
9001b8d8:	e7aa      	b.n	9001b830 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b8da:	f04f 0900 	mov.w	r9, #0
9001b8de:	eba3 0409 	sub.w	r4, r3, r9
9001b8e2:	2c00      	cmp	r4, #0
9001b8e4:	f77f af4a 	ble.w	9001b77c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b8e8:	1414      	asrs	r4, r2, #16
9001b8ea:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001b8ee:	140d      	asrs	r5, r1, #16
9001b8f0:	fb06 5504 	mla	r5, r6, r4, r5
9001b8f4:	9c01      	ldr	r4, [sp, #4]
9001b8f6:	5d64      	ldrb	r4, [r4, r5]
9001b8f8:	2cff      	cmp	r4, #255	; 0xff
9001b8fa:	d10b      	bne.n	9001b914 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001b8fc:	9c00      	ldr	r4, [sp, #0]
9001b8fe:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001b902:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001b906:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001b908:	f109 0901 	add.w	r9, r9, #1
9001b90c:	4421      	add	r1, r4
9001b90e:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001b910:	4422      	add	r2, r4
9001b912:	e7e4      	b.n	9001b8de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001b914:	2c00      	cmp	r4, #0
9001b916:	d0f6      	beq.n	9001b906 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001b918:	9e00      	ldr	r6, [sp, #0]
9001b91a:	b2a7      	uxth	r7, r4
9001b91c:	43e4      	mvns	r4, r4
9001b91e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001b922:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001b926:	b2e4      	uxtb	r4, r4
9001b928:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001b92c:	122e      	asrs	r6, r5, #8
9001b92e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b932:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b936:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b93a:	00ed      	lsls	r5, r5, #3
9001b93c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001b940:	fb16 f604 	smulbb	r6, r6, r4
9001b944:	b2ed      	uxtb	r5, r5
9001b946:	fb1a fa04 	smulbb	sl, sl, r4
9001b94a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b94e:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001b952:	fb15 f504 	smulbb	r5, r5, r4
9001b956:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b95a:	fa1f fc8c 	uxth.w	ip, ip
9001b95e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001b962:	fa5f fe8e 	uxtb.w	lr, lr
9001b966:	fb06 a607 	mla	r6, r6, r7, sl
9001b96a:	f10c 0401 	add.w	r4, ip, #1
9001b96e:	fb0e 5507 	mla	r5, lr, r7, r5
9001b972:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b976:	b2ad      	uxth	r5, r5
9001b978:	b2b6      	uxth	r6, r6
9001b97a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b97e:	f105 0a01 	add.w	sl, r5, #1
9001b982:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b986:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b98a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b98e:	f106 0a01 	add.w	sl, r6, #1
9001b992:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b996:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b99a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b99e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b9a2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001b9a6:	e7ae      	b.n	9001b906 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001b9a8:	b005      	add	sp, #20
9001b9aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b9ae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b9ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b9b2:	b085      	sub	sp, #20
9001b9b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001b9b6:	9203      	str	r2, [sp, #12]
9001b9b8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
9001b9bc:	9100      	str	r1, [sp, #0]
9001b9be:	9201      	str	r2, [sp, #4]
9001b9c0:	6841      	ldr	r1, [r0, #4]
9001b9c2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001b9c6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001b9ca:	fb01 2404 	mla	r4, r1, r4, r2
9001b9ce:	6802      	ldr	r2, [r0, #0]
9001b9d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b9d4:	f8de 2000 	ldr.w	r2, [lr]
9001b9d8:	9202      	str	r2, [sp, #8]
9001b9da:	9a01      	ldr	r2, [sp, #4]
9001b9dc:	43d6      	mvns	r6, r2
9001b9de:	b2f6      	uxtb	r6, r6
9001b9e0:	9a00      	ldr	r2, [sp, #0]
9001b9e2:	2a00      	cmp	r2, #0
9001b9e4:	dc03      	bgt.n	9001b9ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001b9e6:	9a03      	ldr	r2, [sp, #12]
9001b9e8:	2a00      	cmp	r2, #0
9001b9ea:	f340 8124 	ble.w	9001bc36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001b9ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b9f0:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001b9f4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b9f8:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001b9fa:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001b9fe:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001ba02:	2b00      	cmp	r3, #0
9001ba04:	dd0e      	ble.n	9001ba24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ba06:	1408      	asrs	r0, r1, #16
9001ba08:	d405      	bmi.n	9001ba16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ba0a:	4560      	cmp	r0, ip
9001ba0c:	da03      	bge.n	9001ba16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ba0e:	1410      	asrs	r0, r2, #16
9001ba10:	d401      	bmi.n	9001ba16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ba12:	42b8      	cmp	r0, r7
9001ba14:	db07      	blt.n	9001ba26 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001ba16:	9811      	ldr	r0, [sp, #68]	; 0x44
9001ba18:	3b01      	subs	r3, #1
9001ba1a:	3402      	adds	r4, #2
9001ba1c:	4401      	add	r1, r0
9001ba1e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001ba20:	4402      	add	r2, r0
9001ba22:	e7ee      	b.n	9001ba02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001ba24:	d06e      	beq.n	9001bb04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001ba26:	1e58      	subs	r0, r3, #1
9001ba28:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001ba2a:	fb05 1500 	mla	r5, r5, r0, r1
9001ba2e:	142d      	asrs	r5, r5, #16
9001ba30:	d45c      	bmi.n	9001baec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001ba32:	4565      	cmp	r5, ip
9001ba34:	da5a      	bge.n	9001baec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001ba36:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001ba38:	fb05 2000 	mla	r0, r5, r0, r2
9001ba3c:	1400      	asrs	r0, r0, #16
9001ba3e:	d455      	bmi.n	9001baec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001ba40:	42b8      	cmp	r0, r7
9001ba42:	da53      	bge.n	9001baec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001ba44:	4699      	mov	r9, r3
9001ba46:	46a2      	mov	sl, r4
9001ba48:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001ba4c:	f1b9 0f00 	cmp.w	r9, #0
9001ba50:	dd54      	ble.n	9001bafc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001ba52:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001ba56:	140d      	asrs	r5, r1, #16
9001ba58:	1410      	asrs	r0, r2, #16
9001ba5a:	f109 39ff 	add.w	r9, r9, #4294967295
9001ba5e:	fb07 5000 	mla	r0, r7, r0, r5
9001ba62:	9d02      	ldr	r5, [sp, #8]
9001ba64:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001ba68:	f8ba 5000 	ldrh.w	r5, [sl]
9001ba6c:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001ba70:	122f      	asrs	r7, r5, #8
9001ba72:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001ba76:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ba7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001ba7e:	00ed      	lsls	r5, r5, #3
9001ba80:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001ba84:	fb17 f706 	smulbb	r7, r7, r6
9001ba88:	b2ed      	uxtb	r5, r5
9001ba8a:	fb18 f806 	smulbb	r8, r8, r6
9001ba8e:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001ba92:	10c7      	asrs	r7, r0, #3
9001ba94:	fb15 f506 	smulbb	r5, r5, r6
9001ba98:	00c0      	lsls	r0, r0, #3
9001ba9a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001ba9e:	fa1f fc8c 	uxth.w	ip, ip
9001baa2:	b2c0      	uxtb	r0, r0
9001baa4:	fb07 870b 	mla	r7, r7, fp, r8
9001baa8:	fb00 500b 	mla	r0, r0, fp, r5
9001baac:	f10c 0501 	add.w	r5, ip, #1
9001bab0:	b2bf      	uxth	r7, r7
9001bab2:	b280      	uxth	r0, r0
9001bab4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bab8:	f107 0801 	add.w	r8, r7, #1
9001babc:	1c45      	adds	r5, r0, #1
9001babe:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001bac2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001bac6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001baca:	9811      	ldr	r0, [sp, #68]	; 0x44
9001bacc:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001bad0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bad4:	4401      	add	r1, r0
9001bad6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001bada:	9812      	ldr	r0, [sp, #72]	; 0x48
9001badc:	ea45 0c0c 	orr.w	ip, r5, ip
9001bae0:	4402      	add	r2, r0
9001bae2:	ea4c 0c08 	orr.w	ip, ip, r8
9001bae6:	f82a cb02 	strh.w	ip, [sl], #2
9001baea:	e7af      	b.n	9001ba4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001baec:	f04f 0800 	mov.w	r8, #0
9001baf0:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001baf4:	eb03 0008 	add.w	r0, r3, r8
9001baf8:	2800      	cmp	r0, #0
9001bafa:	dc41      	bgt.n	9001bb80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001bafc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bb00:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bb04:	9b00      	ldr	r3, [sp, #0]
9001bb06:	2b00      	cmp	r3, #0
9001bb08:	f340 8095 	ble.w	9001bc36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001bb0c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001bb10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bb12:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bb16:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bb1a:	eef0 6a62 	vmov.f32	s13, s5
9001bb1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001bb22:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bb26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bb2a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
9001bb2e:	eef0 6a43 	vmov.f32	s13, s6
9001bb32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bb36:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
9001bb3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bb3e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bb42:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bb46:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bb4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bb4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bb52:	ee12 2a90 	vmov	r2, s5
9001bb56:	eef0 2a47 	vmov.f32	s5, s14
9001bb5a:	fb92 f3f3 	sdiv	r3, r2, r3
9001bb5e:	ee13 2a10 	vmov	r2, s6
9001bb62:	9311      	str	r3, [sp, #68]	; 0x44
9001bb64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bb66:	eeb0 3a67 	vmov.f32	s6, s15
9001bb6a:	fb92 f3f3 	sdiv	r3, r2, r3
9001bb6e:	9312      	str	r3, [sp, #72]	; 0x48
9001bb70:	9b00      	ldr	r3, [sp, #0]
9001bb72:	9a03      	ldr	r2, [sp, #12]
9001bb74:	3b01      	subs	r3, #1
9001bb76:	9300      	str	r3, [sp, #0]
9001bb78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bb7a:	bf08      	it	eq
9001bb7c:	4613      	moveq	r3, r2
9001bb7e:	e72f      	b.n	9001b9e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001bb80:	140f      	asrs	r7, r1, #16
9001bb82:	d451      	bmi.n	9001bc28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001bb84:	f8de 5008 	ldr.w	r5, [lr, #8]
9001bb88:	42bd      	cmp	r5, r7
9001bb8a:	dd4d      	ble.n	9001bc28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001bb8c:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001bb90:	d44a      	bmi.n	9001bc28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001bb92:	f8de 000c 	ldr.w	r0, [lr, #12]
9001bb96:	4560      	cmp	r0, ip
9001bb98:	dd46      	ble.n	9001bc28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001bb9a:	b22d      	sxth	r5, r5
9001bb9c:	9802      	ldr	r0, [sp, #8]
9001bb9e:	fb0c 7505 	mla	r5, ip, r5, r7
9001bba2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001bba6:	f06f 0501 	mvn.w	r5, #1
9001bbaa:	fb05 fb08 	mul.w	fp, r5, r8
9001bbae:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001bbb2:	f834 500b 	ldrh.w	r5, [r4, fp]
9001bbb6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001bbba:	122f      	asrs	r7, r5, #8
9001bbbc:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001bbc0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bbc4:	00ed      	lsls	r5, r5, #3
9001bbc6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001bbca:	fb17 f706 	smulbb	r7, r7, r6
9001bbce:	b2ed      	uxtb	r5, r5
9001bbd0:	fb19 f906 	smulbb	r9, r9, r6
9001bbd4:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001bbd8:	10c7      	asrs	r7, r0, #3
9001bbda:	fb15 f506 	smulbb	r5, r5, r6
9001bbde:	00c0      	lsls	r0, r0, #3
9001bbe0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001bbe4:	fa1f fc8c 	uxth.w	ip, ip
9001bbe8:	b2c0      	uxtb	r0, r0
9001bbea:	fb07 970a 	mla	r7, r7, sl, r9
9001bbee:	fb00 500a 	mla	r0, r0, sl, r5
9001bbf2:	f10c 0501 	add.w	r5, ip, #1
9001bbf6:	b2bf      	uxth	r7, r7
9001bbf8:	b280      	uxth	r0, r0
9001bbfa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bbfe:	f107 0901 	add.w	r9, r7, #1
9001bc02:	1c45      	adds	r5, r0, #1
9001bc04:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001bc08:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001bc0c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bc10:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001bc14:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bc18:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001bc1c:	ea45 0c0c 	orr.w	ip, r5, ip
9001bc20:	ea4c 0c09 	orr.w	ip, ip, r9
9001bc24:	f824 c00b 	strh.w	ip, [r4, fp]
9001bc28:	9811      	ldr	r0, [sp, #68]	; 0x44
9001bc2a:	f108 38ff 	add.w	r8, r8, #4294967295
9001bc2e:	4401      	add	r1, r0
9001bc30:	9812      	ldr	r0, [sp, #72]	; 0x48
9001bc32:	4402      	add	r2, r0
9001bc34:	e75e      	b.n	9001baf4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001bc36:	b005      	add	sp, #20
9001bc38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bc3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bc3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bc40:	b085      	sub	sp, #20
9001bc42:	4693      	mov	fp, r2
9001bc44:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001bc48:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001bc4a:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001bc4c:	6870      	ldr	r0, [r6, #4]
9001bc4e:	9101      	str	r1, [sp, #4]
9001bc50:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001bc54:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001bc58:	fb00 2404 	mla	r4, r0, r4, r2
9001bc5c:	6832      	ldr	r2, [r6, #0]
9001bc5e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bc62:	682a      	ldr	r2, [r5, #0]
9001bc64:	9202      	str	r2, [sp, #8]
9001bc66:	9a01      	ldr	r2, [sp, #4]
9001bc68:	2a00      	cmp	r2, #0
9001bc6a:	dc03      	bgt.n	9001bc74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001bc6c:	f1bb 0f00 	cmp.w	fp, #0
9001bc70:	f340 809a 	ble.w	9001bda8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001bc74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001bc76:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001bc7a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001bc7e:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001bc80:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001bc84:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001bc88:	2b00      	cmp	r3, #0
9001bc8a:	dd0c      	ble.n	9001bca6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001bc8c:	1406      	asrs	r6, r0, #16
9001bc8e:	d405      	bmi.n	9001bc9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bc90:	454e      	cmp	r6, r9
9001bc92:	da03      	bge.n	9001bc9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bc94:	1416      	asrs	r6, r2, #16
9001bc96:	d401      	bmi.n	9001bc9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bc98:	4546      	cmp	r6, r8
9001bc9a:	db05      	blt.n	9001bca8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001bc9c:	4470      	add	r0, lr
9001bc9e:	4462      	add	r2, ip
9001bca0:	3b01      	subs	r3, #1
9001bca2:	3402      	adds	r4, #2
9001bca4:	e7f0      	b.n	9001bc88 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001bca6:	d00f      	beq.n	9001bcc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001bca8:	1e5e      	subs	r6, r3, #1
9001bcaa:	fb0e 0706 	mla	r7, lr, r6, r0
9001bcae:	143f      	asrs	r7, r7, #16
9001bcb0:	d541      	bpl.n	9001bd36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001bcb2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001bcb6:	4698      	mov	r8, r3
9001bcb8:	9603      	str	r6, [sp, #12]
9001bcba:	f1b8 0f00 	cmp.w	r8, #0
9001bcbe:	dc56      	bgt.n	9001bd6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001bcc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bcc4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bcc8:	9b01      	ldr	r3, [sp, #4]
9001bcca:	2b00      	cmp	r3, #0
9001bccc:	dd6c      	ble.n	9001bda8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001bcce:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bcd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bcd4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bcd8:	eeb0 6a62 	vmov.f32	s12, s5
9001bcdc:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bce0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bce4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bce8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001bcec:	eeb0 6a43 	vmov.f32	s12, s6
9001bcf0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bcf4:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001bcf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bcfc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bd00:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bd04:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bd08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bd0c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bd10:	ee12 2a90 	vmov	r2, s5
9001bd14:	eef0 2a47 	vmov.f32	s5, s14
9001bd18:	fb92 fef3 	sdiv	lr, r2, r3
9001bd1c:	ee13 2a10 	vmov	r2, s6
9001bd20:	eeb0 3a67 	vmov.f32	s6, s15
9001bd24:	fb92 fcf3 	sdiv	ip, r2, r3
9001bd28:	9b01      	ldr	r3, [sp, #4]
9001bd2a:	3b01      	subs	r3, #1
9001bd2c:	9301      	str	r3, [sp, #4]
9001bd2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bd30:	bf08      	it	eq
9001bd32:	465b      	moveq	r3, fp
9001bd34:	e797      	b.n	9001bc66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001bd36:	454f      	cmp	r7, r9
9001bd38:	dabb      	bge.n	9001bcb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001bd3a:	fb0c 2606 	mla	r6, ip, r6, r2
9001bd3e:	1436      	asrs	r6, r6, #16
9001bd40:	d4b7      	bmi.n	9001bcb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001bd42:	4546      	cmp	r6, r8
9001bd44:	dab5      	bge.n	9001bcb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001bd46:	461e      	mov	r6, r3
9001bd48:	46a0      	mov	r8, r4
9001bd4a:	2e00      	cmp	r6, #0
9001bd4c:	ddb8      	ble.n	9001bcc0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001bd4e:	1417      	asrs	r7, r2, #16
9001bd50:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001bd54:	ea4f 4920 	mov.w	r9, r0, asr #16
9001bd58:	9902      	ldr	r1, [sp, #8]
9001bd5a:	4470      	add	r0, lr
9001bd5c:	4462      	add	r2, ip
9001bd5e:	fb0a 9707 	mla	r7, sl, r7, r9
9001bd62:	3e01      	subs	r6, #1
9001bd64:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001bd68:	f828 7b02 	strh.w	r7, [r8], #2
9001bd6c:	e7ed      	b.n	9001bd4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001bd6e:	ea5f 4920 	movs.w	r9, r0, asr #16
9001bd72:	d414      	bmi.n	9001bd9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001bd74:	68ae      	ldr	r6, [r5, #8]
9001bd76:	454e      	cmp	r6, r9
9001bd78:	dd11      	ble.n	9001bd9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001bd7a:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001bd7e:	d40e      	bmi.n	9001bd9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001bd80:	68ef      	ldr	r7, [r5, #12]
9001bd82:	4557      	cmp	r7, sl
9001bd84:	dd0b      	ble.n	9001bd9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001bd86:	b236      	sxth	r6, r6
9001bd88:	f06f 0101 	mvn.w	r1, #1
9001bd8c:	9f02      	ldr	r7, [sp, #8]
9001bd8e:	fb0a 9606 	mla	r6, sl, r6, r9
9001bd92:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001bd96:	fb01 f608 	mul.w	r6, r1, r8
9001bd9a:	9903      	ldr	r1, [sp, #12]
9001bd9c:	538f      	strh	r7, [r1, r6]
9001bd9e:	4470      	add	r0, lr
9001bda0:	4462      	add	r2, ip
9001bda2:	f108 38ff 	add.w	r8, r8, #4294967295
9001bda6:	e788      	b.n	9001bcba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001bda8:	b005      	add	sp, #20
9001bdaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bdae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bdae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bdb2:	b087      	sub	sp, #28
9001bdb4:	468b      	mov	fp, r1
9001bdb6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001bdba:	9815      	ldr	r0, [sp, #84]	; 0x54
9001bdbc:	9203      	str	r2, [sp, #12]
9001bdbe:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001bdc2:	6841      	ldr	r1, [r0, #4]
9001bdc4:	9204      	str	r2, [sp, #16]
9001bdc6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001bdca:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
9001bdce:	fb01 2505 	mla	r5, r1, r5, r2
9001bdd2:	6802      	ldr	r2, [r0, #0]
9001bdd4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001bdd8:	f8d9 2000 	ldr.w	r2, [r9]
9001bddc:	9201      	str	r2, [sp, #4]
9001bdde:	f1bb 0f00 	cmp.w	fp, #0
9001bde2:	dc03      	bgt.n	9001bdec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001bde4:	9a03      	ldr	r2, [sp, #12]
9001bde6:	2a00      	cmp	r2, #0
9001bde8:	f340 8158 	ble.w	9001c09c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001bdec:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001bdee:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001bdf2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001bdf6:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001bdf8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001bdfc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001be00:	2b00      	cmp	r3, #0
9001be02:	dd0e      	ble.n	9001be22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001be04:	1402      	asrs	r2, r0, #16
9001be06:	d405      	bmi.n	9001be14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001be08:	42ba      	cmp	r2, r7
9001be0a:	da03      	bge.n	9001be14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001be0c:	140a      	asrs	r2, r1, #16
9001be0e:	d401      	bmi.n	9001be14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001be10:	42b2      	cmp	r2, r6
9001be12:	db07      	blt.n	9001be24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001be14:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001be16:	3b01      	subs	r3, #1
9001be18:	3502      	adds	r5, #2
9001be1a:	4410      	add	r0, r2
9001be1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001be1e:	4411      	add	r1, r2
9001be20:	e7ee      	b.n	9001be00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001be22:	d017      	beq.n	9001be54 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001be24:	1e5a      	subs	r2, r3, #1
9001be26:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001be28:	fb04 0402 	mla	r4, r4, r2, r0
9001be2c:	1424      	asrs	r4, r4, #16
9001be2e:	d409      	bmi.n	9001be44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001be30:	42bc      	cmp	r4, r7
9001be32:	da07      	bge.n	9001be44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001be34:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001be36:	fb04 1202 	mla	r2, r4, r2, r1
9001be3a:	1412      	asrs	r2, r2, #16
9001be3c:	d402      	bmi.n	9001be44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001be3e:	42b2      	cmp	r2, r6
9001be40:	f2c0 80bf 	blt.w	9001bfc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001be44:	2700      	movs	r7, #0
9001be46:	19da      	adds	r2, r3, r7
9001be48:	2a00      	cmp	r2, #0
9001be4a:	dc3e      	bgt.n	9001beca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001be4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001be50:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001be54:	f1bb 0f00 	cmp.w	fp, #0
9001be58:	f340 8120 	ble.w	9001c09c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001be5c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001be60:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001be62:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001be66:	f1bb 0b01 	subs.w	fp, fp, #1
9001be6a:	eeb0 6a62 	vmov.f32	s12, s5
9001be6e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001be72:	ee31 1a05 	vadd.f32	s2, s2, s10
9001be76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001be7a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001be7e:	eeb0 6a43 	vmov.f32	s12, s6
9001be82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001be86:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001be8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001be8e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001be92:	ee77 2a62 	vsub.f32	s5, s14, s5
9001be96:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001be9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001be9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bea2:	ee12 2a90 	vmov	r2, s5
9001bea6:	eef0 2a47 	vmov.f32	s5, s14
9001beaa:	fb92 f3f3 	sdiv	r3, r2, r3
9001beae:	ee13 2a10 	vmov	r2, s6
9001beb2:	9313      	str	r3, [sp, #76]	; 0x4c
9001beb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001beb6:	eeb0 3a67 	vmov.f32	s6, s15
9001beba:	fb92 f3f3 	sdiv	r3, r2, r3
9001bebe:	9a03      	ldr	r2, [sp, #12]
9001bec0:	9314      	str	r3, [sp, #80]	; 0x50
9001bec2:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bec4:	bf08      	it	eq
9001bec6:	4613      	moveq	r3, r2
9001bec8:	e789      	b.n	9001bdde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001beca:	1406      	asrs	r6, r0, #16
9001becc:	d42d      	bmi.n	9001bf2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bece:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001bed2:	42b4      	cmp	r4, r6
9001bed4:	dd29      	ble.n	9001bf2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bed6:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001beda:	d426      	bmi.n	9001bf2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bedc:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001bee0:	4562      	cmp	r2, ip
9001bee2:	dd22      	ble.n	9001bf2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bee4:	b224      	sxth	r4, r4
9001bee6:	9a01      	ldr	r2, [sp, #4]
9001bee8:	fb0c 6404 	mla	r4, ip, r4, r6
9001beec:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001bef0:	0e22      	lsrs	r2, r4, #24
9001bef2:	d01a      	beq.n	9001bf2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bef4:	9e04      	ldr	r6, [sp, #16]
9001bef6:	4372      	muls	r2, r6
9001bef8:	1c56      	adds	r6, r2, #1
9001befa:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001befe:	0a26      	lsrs	r6, r4, #8
9001bf00:	1212      	asrs	r2, r2, #8
9001bf02:	9605      	str	r6, [sp, #20]
9001bf04:	2aff      	cmp	r2, #255	; 0xff
9001bf06:	d116      	bne.n	9001bf36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001bf08:	f06f 0201 	mvn.w	r2, #1
9001bf0c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001bf10:	fb02 fc07 	mul.w	ip, r2, r7
9001bf14:	0962      	lsrs	r2, r4, #5
9001bf16:	f026 0607 	bic.w	r6, r6, #7
9001bf1a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001bf1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001bf22:	4316      	orrs	r6, r2
9001bf24:	4326      	orrs	r6, r4
9001bf26:	f825 600c 	strh.w	r6, [r5, ip]
9001bf2a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bf2c:	3f01      	subs	r7, #1
9001bf2e:	4410      	add	r0, r2
9001bf30:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bf32:	4411      	add	r1, r2
9001bf34:	e787      	b.n	9001be46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bf36:	f06f 0601 	mvn.w	r6, #1
9001bf3a:	fa1f fa82 	uxth.w	sl, r2
9001bf3e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001bf42:	43d2      	mvns	r2, r2
9001bf44:	437e      	muls	r6, r7
9001bf46:	b2e4      	uxtb	r4, r4
9001bf48:	fb1c fc0a 	smulbb	ip, ip, sl
9001bf4c:	b2d2      	uxtb	r2, r2
9001bf4e:	f835 8006 	ldrh.w	r8, [r5, r6]
9001bf52:	fb14 f40a 	smulbb	r4, r4, sl
9001bf56:	9602      	str	r6, [sp, #8]
9001bf58:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001bf5c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001bf60:	fb16 f60a 	smulbb	r6, r6, sl
9001bf64:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001bf68:	fb0e ce02 	mla	lr, lr, r2, ip
9001bf6c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001bf70:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001bf74:	fa1f fe8e 	uxth.w	lr, lr
9001bf78:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001bf7c:	fa5f f888 	uxtb.w	r8, r8
9001bf80:	fb0c 6c02 	mla	ip, ip, r2, r6
9001bf84:	fb08 4402 	mla	r4, r8, r2, r4
9001bf88:	f10e 0201 	add.w	r2, lr, #1
9001bf8c:	fa1f fc8c 	uxth.w	ip, ip
9001bf90:	b2a4      	uxth	r4, r4
9001bf92:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001bf96:	9a02      	ldr	r2, [sp, #8]
9001bf98:	1c66      	adds	r6, r4, #1
9001bf9a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001bf9e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001bfa2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001bfa6:	ea46 0e0e 	orr.w	lr, r6, lr
9001bfaa:	f10c 0601 	add.w	r6, ip, #1
9001bfae:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001bfb2:	0976      	lsrs	r6, r6, #5
9001bfb4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001bfb8:	ea4e 0e06 	orr.w	lr, lr, r6
9001bfbc:	f825 e002 	strh.w	lr, [r5, r2]
9001bfc0:	e7b3      	b.n	9001bf2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bfc2:	f04f 0800 	mov.w	r8, #0
9001bfc6:	eba3 0208 	sub.w	r2, r3, r8
9001bfca:	2a00      	cmp	r2, #0
9001bfcc:	f77f af3e 	ble.w	9001be4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001bfd0:	1404      	asrs	r4, r0, #16
9001bfd2:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001bfd6:	140a      	asrs	r2, r1, #16
9001bfd8:	fb06 4202 	mla	r2, r6, r2, r4
9001bfdc:	9c01      	ldr	r4, [sp, #4]
9001bfde:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001bfe2:	0e22      	lsrs	r2, r4, #24
9001bfe4:	d015      	beq.n	9001c012 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001bfe6:	9e04      	ldr	r6, [sp, #16]
9001bfe8:	4372      	muls	r2, r6
9001bfea:	1c56      	adds	r6, r2, #1
9001bfec:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001bff0:	0a26      	lsrs	r6, r4, #8
9001bff2:	1212      	asrs	r2, r2, #8
9001bff4:	2aff      	cmp	r2, #255	; 0xff
9001bff6:	d113      	bne.n	9001c020 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001bff8:	0962      	lsrs	r2, r4, #5
9001bffa:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001bffe:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001c002:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c006:	f026 0607 	bic.w	r6, r6, #7
9001c00a:	4316      	orrs	r6, r2
9001c00c:	4326      	orrs	r6, r4
9001c00e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001c012:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c014:	f108 0801 	add.w	r8, r8, #1
9001c018:	4410      	add	r0, r2
9001c01a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c01c:	4411      	add	r1, r2
9001c01e:	e7d2      	b.n	9001bfc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001c020:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001c024:	fa1f fa82 	uxth.w	sl, r2
9001c028:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001c02c:	43d2      	mvns	r2, r2
9001c02e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c032:	fb17 f70a 	smulbb	r7, r7, sl
9001c036:	b2d2      	uxtb	r2, r2
9001c038:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c03c:	b2e4      	uxtb	r4, r4
9001c03e:	b2f6      	uxtb	r6, r6
9001c040:	fb0c 7c02 	mla	ip, ip, r2, r7
9001c044:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001c048:	fb14 f40a 	smulbb	r4, r4, sl
9001c04c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c050:	fa1f fc8c 	uxth.w	ip, ip
9001c054:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001c058:	fb16 f60a 	smulbb	r6, r6, sl
9001c05c:	fa5f fe8e 	uxtb.w	lr, lr
9001c060:	fb0e 4402 	mla	r4, lr, r2, r4
9001c064:	fb07 6702 	mla	r7, r7, r2, r6
9001c068:	f10c 0201 	add.w	r2, ip, #1
9001c06c:	b2a4      	uxth	r4, r4
9001c06e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001c072:	1c66      	adds	r6, r4, #1
9001c074:	b2bf      	uxth	r7, r7
9001c076:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001c07a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001c07e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c082:	ea46 0c0c 	orr.w	ip, r6, ip
9001c086:	1c7e      	adds	r6, r7, #1
9001c088:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001c08c:	0976      	lsrs	r6, r6, #5
9001c08e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c092:	ea4c 0c06 	orr.w	ip, ip, r6
9001c096:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001c09a:	e7ba      	b.n	9001c012 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001c09c:	b007      	add	sp, #28
9001c09e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001c0a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c0a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c0a8:	b085      	sub	sp, #20
9001c0aa:	468b      	mov	fp, r1
9001c0ac:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c0b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c0b2:	9203      	str	r2, [sp, #12]
9001c0b4:	6841      	ldr	r1, [r0, #4]
9001c0b6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001c0ba:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001c0be:	fb01 2404 	mla	r4, r1, r4, r2
9001c0c2:	6802      	ldr	r2, [r0, #0]
9001c0c4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c0c8:	f8d8 2000 	ldr.w	r2, [r8]
9001c0cc:	9201      	str	r2, [sp, #4]
9001c0ce:	f1bb 0f00 	cmp.w	fp, #0
9001c0d2:	dc03      	bgt.n	9001c0dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001c0d4:	9a03      	ldr	r2, [sp, #12]
9001c0d6:	2a00      	cmp	r2, #0
9001c0d8:	f340 814f 	ble.w	9001c37a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001c0dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001c0de:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001c0e2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c0e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001c0e8:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001c0ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c0f0:	2b00      	cmp	r3, #0
9001c0f2:	dd0e      	ble.n	9001c112 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c0f4:	1408      	asrs	r0, r1, #16
9001c0f6:	d405      	bmi.n	9001c104 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c0f8:	42b8      	cmp	r0, r7
9001c0fa:	da03      	bge.n	9001c104 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c0fc:	1410      	asrs	r0, r2, #16
9001c0fe:	d401      	bmi.n	9001c104 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c100:	42b0      	cmp	r0, r6
9001c102:	db07      	blt.n	9001c114 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c104:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c106:	3b01      	subs	r3, #1
9001c108:	3402      	adds	r4, #2
9001c10a:	4401      	add	r1, r0
9001c10c:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c10e:	4402      	add	r2, r0
9001c110:	e7ee      	b.n	9001c0f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001c112:	d017      	beq.n	9001c144 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c114:	1e58      	subs	r0, r3, #1
9001c116:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001c118:	fb05 1500 	mla	r5, r5, r0, r1
9001c11c:	142d      	asrs	r5, r5, #16
9001c11e:	d409      	bmi.n	9001c134 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001c120:	42bd      	cmp	r5, r7
9001c122:	da07      	bge.n	9001c134 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001c124:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001c126:	fb05 2000 	mla	r0, r5, r0, r2
9001c12a:	1400      	asrs	r0, r0, #16
9001c12c:	d402      	bmi.n	9001c134 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001c12e:	42b0      	cmp	r0, r6
9001c130:	f2c0 80ba 	blt.w	9001c2a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001c134:	2600      	movs	r6, #0
9001c136:	1998      	adds	r0, r3, r6
9001c138:	2800      	cmp	r0, #0
9001c13a:	dc3e      	bgt.n	9001c1ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001c13c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c140:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c144:	f1bb 0f00 	cmp.w	fp, #0
9001c148:	f340 8117 	ble.w	9001c37a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001c14c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c150:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c152:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c156:	f1bb 0b01 	subs.w	fp, fp, #1
9001c15a:	eeb0 6a62 	vmov.f32	s12, s5
9001c15e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c162:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c166:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c16a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001c16e:	eeb0 6a43 	vmov.f32	s12, s6
9001c172:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c176:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001c17a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c17e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c182:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c186:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c18a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c18e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c192:	ee12 2a90 	vmov	r2, s5
9001c196:	eef0 2a47 	vmov.f32	s5, s14
9001c19a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c19e:	ee13 2a10 	vmov	r2, s6
9001c1a2:	9311      	str	r3, [sp, #68]	; 0x44
9001c1a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c1a6:	eeb0 3a67 	vmov.f32	s6, s15
9001c1aa:	fb92 f3f3 	sdiv	r3, r2, r3
9001c1ae:	9a03      	ldr	r2, [sp, #12]
9001c1b0:	9312      	str	r3, [sp, #72]	; 0x48
9001c1b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c1b4:	bf08      	it	eq
9001c1b6:	4613      	moveq	r3, r2
9001c1b8:	e789      	b.n	9001c0ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001c1ba:	140f      	asrs	r7, r1, #16
9001c1bc:	d424      	bmi.n	9001c208 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c1be:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001c1c2:	42bd      	cmp	r5, r7
9001c1c4:	dd20      	ble.n	9001c208 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c1c6:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c1ca:	d41d      	bmi.n	9001c208 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c1cc:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001c1d0:	4560      	cmp	r0, ip
9001c1d2:	dd19      	ble.n	9001c208 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c1d4:	b22d      	sxth	r5, r5
9001c1d6:	9801      	ldr	r0, [sp, #4]
9001c1d8:	fb0c 7505 	mla	r5, ip, r5, r7
9001c1dc:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001c1e0:	0e07      	lsrs	r7, r0, #24
9001c1e2:	2fff      	cmp	r7, #255	; 0xff
9001c1e4:	d116      	bne.n	9001c214 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c1e6:	f06f 0501 	mvn.w	r5, #1
9001c1ea:	fb05 f706 	mul.w	r7, r5, r6
9001c1ee:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001c1f2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001c1f6:	0945      	lsrs	r5, r0, #5
9001c1f8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001c1fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c200:	ea4c 0505 	orr.w	r5, ip, r5
9001c204:	4305      	orrs	r5, r0
9001c206:	53e5      	strh	r5, [r4, r7]
9001c208:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c20a:	3e01      	subs	r6, #1
9001c20c:	4401      	add	r1, r0
9001c20e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c210:	4402      	add	r2, r0
9001c212:	e790      	b.n	9001c136 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c214:	b2fd      	uxtb	r5, r7
9001c216:	2f00      	cmp	r7, #0
9001c218:	d0f6      	beq.n	9001c208 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c21a:	f06f 0701 	mvn.w	r7, #1
9001c21e:	fa1f f985 	uxth.w	r9, r5
9001c222:	43ed      	mvns	r5, r5
9001c224:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001c228:	4377      	muls	r7, r6
9001c22a:	fb1a fa09 	smulbb	sl, sl, r9
9001c22e:	b2ed      	uxtb	r5, r5
9001c230:	f834 e007 	ldrh.w	lr, [r4, r7]
9001c234:	9702      	str	r7, [sp, #8]
9001c236:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001c23a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c23e:	fb17 f709 	smulbb	r7, r7, r9
9001c242:	b2c0      	uxtb	r0, r0
9001c244:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c248:	fb10 f009 	smulbb	r0, r0, r9
9001c24c:	fb0c 7c05 	mla	ip, ip, r5, r7
9001c250:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001c254:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c258:	fa1f fc8c 	uxth.w	ip, ip
9001c25c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001c260:	fa5f fe8e 	uxtb.w	lr, lr
9001c264:	fb07 a705 	mla	r7, r7, r5, sl
9001c268:	fb0e 0005 	mla	r0, lr, r5, r0
9001c26c:	f10c 0501 	add.w	r5, ip, #1
9001c270:	b2bf      	uxth	r7, r7
9001c272:	b280      	uxth	r0, r0
9001c274:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c278:	f100 0a01 	add.w	sl, r0, #1
9001c27c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001c280:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001c284:	9802      	ldr	r0, [sp, #8]
9001c286:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c28a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c28e:	f107 0a01 	add.w	sl, r7, #1
9001c292:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c296:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c29a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c29e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c2a2:	f824 c000 	strh.w	ip, [r4, r0]
9001c2a6:	e7af      	b.n	9001c208 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c2a8:	f04f 0e00 	mov.w	lr, #0
9001c2ac:	eba3 000e 	sub.w	r0, r3, lr
9001c2b0:	2800      	cmp	r0, #0
9001c2b2:	f77f af43 	ble.w	9001c13c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c2b6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001c2ba:	140d      	asrs	r5, r1, #16
9001c2bc:	1410      	asrs	r0, r2, #16
9001c2be:	fb06 5000 	mla	r0, r6, r0, r5
9001c2c2:	9d01      	ldr	r5, [sp, #4]
9001c2c4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001c2c8:	0e2e      	lsrs	r6, r5, #24
9001c2ca:	2eff      	cmp	r6, #255	; 0xff
9001c2cc:	d112      	bne.n	9001c2f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001c2ce:	482c      	ldr	r0, [pc, #176]	; (9001c380 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001c2d0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001c2d4:	0968      	lsrs	r0, r5, #5
9001c2d6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c2da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001c2de:	4330      	orrs	r0, r6
9001c2e0:	4328      	orrs	r0, r5
9001c2e2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001c2e6:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c2e8:	f10e 0e01 	add.w	lr, lr, #1
9001c2ec:	4401      	add	r1, r0
9001c2ee:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c2f0:	4402      	add	r2, r0
9001c2f2:	e7db      	b.n	9001c2ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001c2f4:	b2f0      	uxtb	r0, r6
9001c2f6:	2e00      	cmp	r6, #0
9001c2f8:	d0f5      	beq.n	9001c2e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001c2fa:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001c2fe:	fa1f f980 	uxth.w	r9, r0
9001c302:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c306:	43c0      	mvns	r0, r0
9001c308:	ea4f 272c 	mov.w	r7, ip, asr #8
9001c30c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c310:	fb16 f609 	smulbb	r6, r6, r9
9001c314:	b2c0      	uxtb	r0, r0
9001c316:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c31a:	b2ed      	uxtb	r5, r5
9001c31c:	fb1a fa09 	smulbb	sl, sl, r9
9001c320:	fb07 6700 	mla	r7, r7, r0, r6
9001c324:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001c328:	fb15 f509 	smulbb	r5, r5, r9
9001c32c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c330:	b2bf      	uxth	r7, r7
9001c332:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c336:	fa5f fc8c 	uxtb.w	ip, ip
9001c33a:	fb06 a600 	mla	r6, r6, r0, sl
9001c33e:	fb0c 5500 	mla	r5, ip, r0, r5
9001c342:	1c78      	adds	r0, r7, #1
9001c344:	b2b6      	uxth	r6, r6
9001c346:	b2ad      	uxth	r5, r5
9001c348:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001c34c:	f105 0a01 	add.w	sl, r5, #1
9001c350:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c354:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c358:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c35c:	ea4a 0707 	orr.w	r7, sl, r7
9001c360:	f106 0a01 	add.w	sl, r6, #1
9001c364:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c368:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c36c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c370:	ea47 070a 	orr.w	r7, r7, sl
9001c374:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001c378:	e7b5      	b.n	9001c2e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001c37a:	b005      	add	sp, #20
9001c37c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c380:	fffff800 	.word	0xfffff800

9001c384 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c388:	b087      	sub	sp, #28
9001c38a:	468b      	mov	fp, r1
9001c38c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c390:	9815      	ldr	r0, [sp, #84]	; 0x54
9001c392:	9203      	str	r2, [sp, #12]
9001c394:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c398:	6841      	ldr	r1, [r0, #4]
9001c39a:	9204      	str	r2, [sp, #16]
9001c39c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001c3a0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001c3a4:	fb01 2404 	mla	r4, r1, r4, r2
9001c3a8:	6802      	ldr	r2, [r0, #0]
9001c3aa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c3ae:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001c3b2:	3201      	adds	r2, #1
9001c3b4:	f022 0201 	bic.w	r2, r2, #1
9001c3b8:	9200      	str	r2, [sp, #0]
9001c3ba:	f8d9 2000 	ldr.w	r2, [r9]
9001c3be:	9201      	str	r2, [sp, #4]
9001c3c0:	f1bb 0f00 	cmp.w	fp, #0
9001c3c4:	dc03      	bgt.n	9001c3ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001c3c6:	9a03      	ldr	r2, [sp, #12]
9001c3c8:	2a00      	cmp	r2, #0
9001c3ca:	f340 816a 	ble.w	9001c6a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001c3ce:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001c3d0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001c3d4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001c3d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c3da:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001c3de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c3e2:	2b00      	cmp	r3, #0
9001c3e4:	dd0e      	ble.n	9001c404 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c3e6:	1402      	asrs	r2, r0, #16
9001c3e8:	d405      	bmi.n	9001c3f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c3ea:	42ba      	cmp	r2, r7
9001c3ec:	da03      	bge.n	9001c3f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c3ee:	140a      	asrs	r2, r1, #16
9001c3f0:	d401      	bmi.n	9001c3f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c3f2:	42b2      	cmp	r2, r6
9001c3f4:	db07      	blt.n	9001c406 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001c3f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c3f8:	3b01      	subs	r3, #1
9001c3fa:	3402      	adds	r4, #2
9001c3fc:	4410      	add	r0, r2
9001c3fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c400:	4411      	add	r1, r2
9001c402:	e7ee      	b.n	9001c3e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001c404:	d017      	beq.n	9001c436 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001c406:	1e5a      	subs	r2, r3, #1
9001c408:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001c40a:	fb05 0502 	mla	r5, r5, r2, r0
9001c40e:	142d      	asrs	r5, r5, #16
9001c410:	d409      	bmi.n	9001c426 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c412:	42bd      	cmp	r5, r7
9001c414:	da07      	bge.n	9001c426 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c416:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001c418:	fb05 1202 	mla	r2, r5, r2, r1
9001c41c:	1412      	asrs	r2, r2, #16
9001c41e:	d402      	bmi.n	9001c426 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c420:	42b2      	cmp	r2, r6
9001c422:	f2c0 80c8 	blt.w	9001c5b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001c426:	2700      	movs	r7, #0
9001c428:	19da      	adds	r2, r3, r7
9001c42a:	2a00      	cmp	r2, #0
9001c42c:	dc3e      	bgt.n	9001c4ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c42e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c432:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c436:	f1bb 0f00 	cmp.w	fp, #0
9001c43a:	f340 8132 	ble.w	9001c6a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001c43e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c442:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c444:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c448:	f1bb 0b01 	subs.w	fp, fp, #1
9001c44c:	eeb0 6a62 	vmov.f32	s12, s5
9001c450:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c454:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c458:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c45c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001c460:	eeb0 6a43 	vmov.f32	s12, s6
9001c464:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c468:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001c46c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c470:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c474:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c478:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c47c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c480:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c484:	ee12 2a90 	vmov	r2, s5
9001c488:	eef0 2a47 	vmov.f32	s5, s14
9001c48c:	fb92 f3f3 	sdiv	r3, r2, r3
9001c490:	ee13 2a10 	vmov	r2, s6
9001c494:	9313      	str	r3, [sp, #76]	; 0x4c
9001c496:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c498:	eeb0 3a67 	vmov.f32	s6, s15
9001c49c:	fb92 f3f3 	sdiv	r3, r2, r3
9001c4a0:	9a03      	ldr	r2, [sp, #12]
9001c4a2:	9314      	str	r3, [sp, #80]	; 0x50
9001c4a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c4a6:	bf08      	it	eq
9001c4a8:	4613      	moveq	r3, r2
9001c4aa:	e789      	b.n	9001c3c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c4ac:	1405      	asrs	r5, r0, #16
9001c4ae:	d436      	bmi.n	9001c51e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c4b0:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001c4b4:	42aa      	cmp	r2, r5
9001c4b6:	dd32      	ble.n	9001c51e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c4b8:	140e      	asrs	r6, r1, #16
9001c4ba:	d430      	bmi.n	9001c51e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c4bc:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001c4c0:	42b2      	cmp	r2, r6
9001c4c2:	dd2c      	ble.n	9001c51e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c4c4:	9a00      	ldr	r2, [sp, #0]
9001c4c6:	fb06 5502 	mla	r5, r6, r2, r5
9001c4ca:	9e01      	ldr	r6, [sp, #4]
9001c4cc:	086a      	lsrs	r2, r5, #1
9001c4ce:	5cb2      	ldrb	r2, [r6, r2]
9001c4d0:	07ee      	lsls	r6, r5, #31
9001c4d2:	bf54      	ite	pl
9001c4d4:	f002 020f 	andpl.w	r2, r2, #15
9001c4d8:	1112      	asrmi	r2, r2, #4
9001c4da:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c4de:	b2d2      	uxtb	r2, r2
9001c4e0:	b1ea      	cbz	r2, 9001c51e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c4e2:	9d04      	ldr	r5, [sp, #16]
9001c4e4:	436a      	muls	r2, r5
9001c4e6:	1c55      	adds	r5, r2, #1
9001c4e8:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001c4ec:	4d6e      	ldr	r5, [pc, #440]	; (9001c6a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001c4ee:	1212      	asrs	r2, r2, #8
9001c4f0:	682d      	ldr	r5, [r5, #0]
9001c4f2:	2aff      	cmp	r2, #255	; 0xff
9001c4f4:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001c4f8:	9605      	str	r6, [sp, #20]
9001c4fa:	d116      	bne.n	9001c52a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001c4fc:	f06f 0201 	mvn.w	r2, #1
9001c500:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001c504:	fb02 fc07 	mul.w	ip, r2, r7
9001c508:	096a      	lsrs	r2, r5, #5
9001c50a:	f026 0607 	bic.w	r6, r6, #7
9001c50e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c512:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c516:	4316      	orrs	r6, r2
9001c518:	432e      	orrs	r6, r5
9001c51a:	f824 600c 	strh.w	r6, [r4, ip]
9001c51e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c520:	3f01      	subs	r7, #1
9001c522:	4410      	add	r0, r2
9001c524:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c526:	4411      	add	r1, r2
9001c528:	e77e      	b.n	9001c428 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001c52a:	f06f 0601 	mvn.w	r6, #1
9001c52e:	fa1f fa82 	uxth.w	sl, r2
9001c532:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001c536:	43d2      	mvns	r2, r2
9001c538:	437e      	muls	r6, r7
9001c53a:	b2ed      	uxtb	r5, r5
9001c53c:	fb1c fc0a 	smulbb	ip, ip, sl
9001c540:	b2d2      	uxtb	r2, r2
9001c542:	f834 8006 	ldrh.w	r8, [r4, r6]
9001c546:	fb15 f50a 	smulbb	r5, r5, sl
9001c54a:	9602      	str	r6, [sp, #8]
9001c54c:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001c550:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001c554:	fb16 f60a 	smulbb	r6, r6, sl
9001c558:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001c55c:	fb0e ce02 	mla	lr, lr, r2, ip
9001c560:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001c564:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c568:	fa1f fe8e 	uxth.w	lr, lr
9001c56c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001c570:	fa5f f888 	uxtb.w	r8, r8
9001c574:	fb0c 6c02 	mla	ip, ip, r2, r6
9001c578:	fb08 5502 	mla	r5, r8, r2, r5
9001c57c:	f10e 0201 	add.w	r2, lr, #1
9001c580:	fa1f fc8c 	uxth.w	ip, ip
9001c584:	b2ad      	uxth	r5, r5
9001c586:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001c58a:	9a02      	ldr	r2, [sp, #8]
9001c58c:	1c6e      	adds	r6, r5, #1
9001c58e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001c592:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001c596:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c59a:	ea46 0e0e 	orr.w	lr, r6, lr
9001c59e:	f10c 0601 	add.w	r6, ip, #1
9001c5a2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001c5a6:	0976      	lsrs	r6, r6, #5
9001c5a8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c5ac:	ea4e 0e06 	orr.w	lr, lr, r6
9001c5b0:	f824 e002 	strh.w	lr, [r4, r2]
9001c5b4:	e7b3      	b.n	9001c51e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c5b6:	f04f 0800 	mov.w	r8, #0
9001c5ba:	eba3 0208 	sub.w	r2, r3, r8
9001c5be:	2a00      	cmp	r2, #0
9001c5c0:	f77f af35 	ble.w	9001c42e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001c5c4:	1402      	asrs	r2, r0, #16
9001c5c6:	9e00      	ldr	r6, [sp, #0]
9001c5c8:	140d      	asrs	r5, r1, #16
9001c5ca:	fb06 2505 	mla	r5, r6, r5, r2
9001c5ce:	9e01      	ldr	r6, [sp, #4]
9001c5d0:	086a      	lsrs	r2, r5, #1
9001c5d2:	07ed      	lsls	r5, r5, #31
9001c5d4:	5cb2      	ldrb	r2, [r6, r2]
9001c5d6:	bf54      	ite	pl
9001c5d8:	f002 020f 	andpl.w	r2, r2, #15
9001c5dc:	1112      	asrmi	r2, r2, #4
9001c5de:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c5e2:	b2d2      	uxtb	r2, r2
9001c5e4:	b1c2      	cbz	r2, 9001c618 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c5e6:	9d04      	ldr	r5, [sp, #16]
9001c5e8:	436a      	muls	r2, r5
9001c5ea:	1c55      	adds	r5, r2, #1
9001c5ec:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001c5f0:	4d2d      	ldr	r5, [pc, #180]	; (9001c6a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001c5f2:	1212      	asrs	r2, r2, #8
9001c5f4:	682e      	ldr	r6, [r5, #0]
9001c5f6:	2aff      	cmp	r2, #255	; 0xff
9001c5f8:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001c5fc:	d113      	bne.n	9001c626 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c5fe:	0972      	lsrs	r2, r6, #5
9001c600:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001c604:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001c608:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c60c:	f025 0507 	bic.w	r5, r5, #7
9001c610:	4315      	orrs	r5, r2
9001c612:	4335      	orrs	r5, r6
9001c614:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001c618:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c61a:	f108 0801 	add.w	r8, r8, #1
9001c61e:	4410      	add	r0, r2
9001c620:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c622:	4411      	add	r1, r2
9001c624:	e7c9      	b.n	9001c5ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001c626:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001c62a:	fa1f fa82 	uxth.w	sl, r2
9001c62e:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001c632:	43d2      	mvns	r2, r2
9001c634:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c638:	fb17 f70a 	smulbb	r7, r7, sl
9001c63c:	b2d2      	uxtb	r2, r2
9001c63e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c642:	b2f6      	uxtb	r6, r6
9001c644:	b2ed      	uxtb	r5, r5
9001c646:	fb0c 7c02 	mla	ip, ip, r2, r7
9001c64a:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001c64e:	fb16 f60a 	smulbb	r6, r6, sl
9001c652:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c656:	fa1f fc8c 	uxth.w	ip, ip
9001c65a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001c65e:	fb15 f50a 	smulbb	r5, r5, sl
9001c662:	fa5f fe8e 	uxtb.w	lr, lr
9001c666:	fb0e 6602 	mla	r6, lr, r2, r6
9001c66a:	fb07 5702 	mla	r7, r7, r2, r5
9001c66e:	f10c 0201 	add.w	r2, ip, #1
9001c672:	b2b6      	uxth	r6, r6
9001c674:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001c678:	1c75      	adds	r5, r6, #1
9001c67a:	b2bf      	uxth	r7, r7
9001c67c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001c680:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001c684:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c688:	ea45 0c0c 	orr.w	ip, r5, ip
9001c68c:	1c7d      	adds	r5, r7, #1
9001c68e:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001c692:	096d      	lsrs	r5, r5, #5
9001c694:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c698:	ea4c 0c05 	orr.w	ip, ip, r5
9001c69c:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001c6a0:	e7ba      	b.n	9001c618 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c6a2:	b007      	add	sp, #28
9001c6a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c6a8:	240398ac 	.word	0x240398ac

9001c6ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c6ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c6b0:	b087      	sub	sp, #28
9001c6b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c6b6:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001c9c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001c6ba:	9815      	ldr	r0, [sp, #84]	; 0x54
9001c6bc:	9101      	str	r1, [sp, #4]
9001c6be:	9205      	str	r2, [sp, #20]
9001c6c0:	6841      	ldr	r1, [r0, #4]
9001c6c2:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001c6c6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001c6ca:	fb01 2404 	mla	r4, r1, r4, r2
9001c6ce:	6802      	ldr	r2, [r0, #0]
9001c6d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c6d4:	f8db 2008 	ldr.w	r2, [fp, #8]
9001c6d8:	3201      	adds	r2, #1
9001c6da:	f022 0201 	bic.w	r2, r2, #1
9001c6de:	9202      	str	r2, [sp, #8]
9001c6e0:	f8db 2000 	ldr.w	r2, [fp]
9001c6e4:	9203      	str	r2, [sp, #12]
9001c6e6:	9a01      	ldr	r2, [sp, #4]
9001c6e8:	2a00      	cmp	r2, #0
9001c6ea:	dc03      	bgt.n	9001c6f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001c6ec:	9a05      	ldr	r2, [sp, #20]
9001c6ee:	2a00      	cmp	r2, #0
9001c6f0:	f340 8162 	ble.w	9001c9b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001c6f4:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001c6f6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001c6fa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001c6fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c700:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001c704:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c708:	2b00      	cmp	r3, #0
9001c70a:	dd0e      	ble.n	9001c72a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c70c:	1402      	asrs	r2, r0, #16
9001c70e:	d405      	bmi.n	9001c71c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c710:	42ba      	cmp	r2, r7
9001c712:	da03      	bge.n	9001c71c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c714:	140a      	asrs	r2, r1, #16
9001c716:	d401      	bmi.n	9001c71c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c718:	42b2      	cmp	r2, r6
9001c71a:	db07      	blt.n	9001c72c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c71c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c71e:	3b01      	subs	r3, #1
9001c720:	3402      	adds	r4, #2
9001c722:	4410      	add	r0, r2
9001c724:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c726:	4411      	add	r1, r2
9001c728:	e7ee      	b.n	9001c708 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001c72a:	d017      	beq.n	9001c75c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001c72c:	1e5a      	subs	r2, r3, #1
9001c72e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001c730:	fb05 0502 	mla	r5, r5, r2, r0
9001c734:	142d      	asrs	r5, r5, #16
9001c736:	d409      	bmi.n	9001c74c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c738:	42bd      	cmp	r5, r7
9001c73a:	da07      	bge.n	9001c74c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c73c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001c73e:	fb05 1202 	mla	r2, r5, r2, r1
9001c742:	1412      	asrs	r2, r2, #16
9001c744:	d402      	bmi.n	9001c74c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c746:	42b2      	cmp	r2, r6
9001c748:	f2c0 80c3 	blt.w	9001c8d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001c74c:	2500      	movs	r5, #0
9001c74e:	195a      	adds	r2, r3, r5
9001c750:	2a00      	cmp	r2, #0
9001c752:	dc3f      	bgt.n	9001c7d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c754:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c758:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c75c:	9b01      	ldr	r3, [sp, #4]
9001c75e:	2b00      	cmp	r3, #0
9001c760:	f340 812a 	ble.w	9001c9b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001c764:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c768:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c76a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c76e:	eeb0 6a62 	vmov.f32	s12, s5
9001c772:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c776:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c77a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c77e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001c782:	eeb0 6a43 	vmov.f32	s12, s6
9001c786:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c78a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001c78e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c792:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c796:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c79a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c79e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c7a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c7a6:	ee12 2a90 	vmov	r2, s5
9001c7aa:	eef0 2a47 	vmov.f32	s5, s14
9001c7ae:	fb92 f3f3 	sdiv	r3, r2, r3
9001c7b2:	ee13 2a10 	vmov	r2, s6
9001c7b6:	9313      	str	r3, [sp, #76]	; 0x4c
9001c7b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c7ba:	eeb0 3a67 	vmov.f32	s6, s15
9001c7be:	fb92 f3f3 	sdiv	r3, r2, r3
9001c7c2:	9314      	str	r3, [sp, #80]	; 0x50
9001c7c4:	9b01      	ldr	r3, [sp, #4]
9001c7c6:	9a05      	ldr	r2, [sp, #20]
9001c7c8:	3b01      	subs	r3, #1
9001c7ca:	9301      	str	r3, [sp, #4]
9001c7cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c7ce:	bf08      	it	eq
9001c7d0:	4613      	moveq	r3, r2
9001c7d2:	e788      	b.n	9001c6e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001c7d4:	1406      	asrs	r6, r0, #16
9001c7d6:	d42c      	bmi.n	9001c832 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c7d8:	f8db 2008 	ldr.w	r2, [fp, #8]
9001c7dc:	42b2      	cmp	r2, r6
9001c7de:	dd28      	ble.n	9001c832 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c7e0:	140f      	asrs	r7, r1, #16
9001c7e2:	d426      	bmi.n	9001c832 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c7e4:	f8db 200c 	ldr.w	r2, [fp, #12]
9001c7e8:	42ba      	cmp	r2, r7
9001c7ea:	dd22      	ble.n	9001c832 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c7ec:	9a02      	ldr	r2, [sp, #8]
9001c7ee:	fb07 6602 	mla	r6, r7, r2, r6
9001c7f2:	9f03      	ldr	r7, [sp, #12]
9001c7f4:	0872      	lsrs	r2, r6, #1
9001c7f6:	07f6      	lsls	r6, r6, #31
9001c7f8:	5cba      	ldrb	r2, [r7, r2]
9001c7fa:	bf54      	ite	pl
9001c7fc:	f002 020f 	andpl.w	r2, r2, #15
9001c800:	1112      	asrmi	r2, r2, #4
9001c802:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c806:	b2d2      	uxtb	r2, r2
9001c808:	2aff      	cmp	r2, #255	; 0xff
9001c80a:	d118      	bne.n	9001c83e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001c80c:	f06f 0601 	mvn.w	r6, #1
9001c810:	f8d8 2000 	ldr.w	r2, [r8]
9001c814:	fb06 f705 	mul.w	r7, r6, r5
9001c818:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001c81c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001c820:	0956      	lsrs	r6, r2, #5
9001c822:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001c826:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c82a:	ea4c 0606 	orr.w	r6, ip, r6
9001c82e:	4316      	orrs	r6, r2
9001c830:	53e6      	strh	r6, [r4, r7]
9001c832:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c834:	3d01      	subs	r5, #1
9001c836:	4410      	add	r0, r2
9001c838:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c83a:	4411      	add	r1, r2
9001c83c:	e787      	b.n	9001c74e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c83e:	2a00      	cmp	r2, #0
9001c840:	d0f7      	beq.n	9001c832 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c842:	f06f 0601 	mvn.w	r6, #1
9001c846:	f8d8 c000 	ldr.w	ip, [r8]
9001c84a:	fa1f f982 	uxth.w	r9, r2
9001c84e:	43d2      	mvns	r2, r2
9001c850:	436e      	muls	r6, r5
9001c852:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001c856:	b2d2      	uxtb	r2, r2
9001c858:	f834 e006 	ldrh.w	lr, [r4, r6]
9001c85c:	fb1a fa09 	smulbb	sl, sl, r9
9001c860:	9604      	str	r6, [sp, #16]
9001c862:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001c866:	ea4f 272e 	mov.w	r7, lr, asr #8
9001c86a:	fb16 f609 	smulbb	r6, r6, r9
9001c86e:	fa5f fc8c 	uxtb.w	ip, ip
9001c872:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c876:	fb1c fc09 	smulbb	ip, ip, r9
9001c87a:	fb07 6702 	mla	r7, r7, r2, r6
9001c87e:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001c882:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c886:	b2bf      	uxth	r7, r7
9001c888:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c88c:	fa5f fe8e 	uxtb.w	lr, lr
9001c890:	fb06 a602 	mla	r6, r6, r2, sl
9001c894:	fb0e cc02 	mla	ip, lr, r2, ip
9001c898:	1c7a      	adds	r2, r7, #1
9001c89a:	b2b6      	uxth	r6, r6
9001c89c:	fa1f fc8c 	uxth.w	ip, ip
9001c8a0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c8a4:	9a04      	ldr	r2, [sp, #16]
9001c8a6:	f10c 0a01 	add.w	sl, ip, #1
9001c8aa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c8ae:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001c8b2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c8b6:	ea4a 0707 	orr.w	r7, sl, r7
9001c8ba:	f106 0a01 	add.w	sl, r6, #1
9001c8be:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c8c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c8c6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c8ca:	ea47 070a 	orr.w	r7, r7, sl
9001c8ce:	52a7      	strh	r7, [r4, r2]
9001c8d0:	e7af      	b.n	9001c832 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c8d2:	f04f 0e00 	mov.w	lr, #0
9001c8d6:	eba3 020e 	sub.w	r2, r3, lr
9001c8da:	2a00      	cmp	r2, #0
9001c8dc:	f77f af3a 	ble.w	9001c754 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c8e0:	1402      	asrs	r2, r0, #16
9001c8e2:	9e02      	ldr	r6, [sp, #8]
9001c8e4:	140d      	asrs	r5, r1, #16
9001c8e6:	fb06 2505 	mla	r5, r6, r5, r2
9001c8ea:	9e03      	ldr	r6, [sp, #12]
9001c8ec:	086a      	lsrs	r2, r5, #1
9001c8ee:	07ed      	lsls	r5, r5, #31
9001c8f0:	5cb2      	ldrb	r2, [r6, r2]
9001c8f2:	bf54      	ite	pl
9001c8f4:	f002 020f 	andpl.w	r2, r2, #15
9001c8f8:	1112      	asrmi	r2, r2, #4
9001c8fa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c8fe:	b2d2      	uxtb	r2, r2
9001c900:	2aff      	cmp	r2, #255	; 0xff
9001c902:	d115      	bne.n	9001c930 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001c904:	f8d8 5000 	ldr.w	r5, [r8]
9001c908:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001c90c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001c910:	096a      	lsrs	r2, r5, #5
9001c912:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c916:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c91a:	4332      	orrs	r2, r6
9001c91c:	432a      	orrs	r2, r5
9001c91e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001c922:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c924:	f10e 0e01 	add.w	lr, lr, #1
9001c928:	4410      	add	r0, r2
9001c92a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c92c:	4411      	add	r1, r2
9001c92e:	e7d2      	b.n	9001c8d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001c930:	2a00      	cmp	r2, #0
9001c932:	d0f6      	beq.n	9001c922 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001c934:	f8d8 7000 	ldr.w	r7, [r8]
9001c938:	fa1f f982 	uxth.w	r9, r2
9001c93c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001c940:	43d2      	mvns	r2, r2
9001c942:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001c946:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001c94a:	ea4f 262c 	mov.w	r6, ip, asr #8
9001c94e:	fb15 f509 	smulbb	r5, r5, r9
9001c952:	b2d2      	uxtb	r2, r2
9001c954:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c958:	b2ff      	uxtb	r7, r7
9001c95a:	fb1a fa09 	smulbb	sl, sl, r9
9001c95e:	fb06 5602 	mla	r6, r6, r2, r5
9001c962:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001c966:	fb17 f709 	smulbb	r7, r7, r9
9001c96a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c96e:	b2b6      	uxth	r6, r6
9001c970:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c974:	fa5f fc8c 	uxtb.w	ip, ip
9001c978:	fb05 a502 	mla	r5, r5, r2, sl
9001c97c:	fb0c 7702 	mla	r7, ip, r2, r7
9001c980:	1c72      	adds	r2, r6, #1
9001c982:	b2ad      	uxth	r5, r5
9001c984:	b2bf      	uxth	r7, r7
9001c986:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001c98a:	f107 0a01 	add.w	sl, r7, #1
9001c98e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001c992:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c996:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c99a:	ea4a 0606 	orr.w	r6, sl, r6
9001c99e:	f105 0a01 	add.w	sl, r5, #1
9001c9a2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c9a6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c9aa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c9ae:	ea46 060a 	orr.w	r6, r6, sl
9001c9b2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001c9b6:	e7b4      	b.n	9001c922 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001c9b8:	b007      	add	sp, #28
9001c9ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c9be:	bf00      	nop
9001c9c0:	240398ac 	.word	0x240398ac

9001c9c4 <_ZN8touchgfx8LCD16bppD1Ev>:
9001c9c4:	4770      	bx	lr

9001c9c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001c9c6:	4770      	bx	lr

9001c9c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001c9c8:	4770      	bx	lr

9001c9ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001c9ca:	4770      	bx	lr

9001c9cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001c9cc:	4770      	bx	lr

9001c9ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001c9ce:	4770      	bx	lr

9001c9d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001c9d0:	4770      	bx	lr

9001c9d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001c9d2:	4770      	bx	lr

9001c9d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c9d4:	4770      	bx	lr

9001c9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c9d6:	4770      	bx	lr

9001c9d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c9d8:	4770      	bx	lr

9001c9da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c9da:	4770      	bx	lr

9001c9dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c9dc:	4770      	bx	lr

9001c9de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001c9de:	4770      	bx	lr

9001c9e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c9e0:	4770      	bx	lr

9001c9e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c9e2:	4770      	bx	lr

9001c9e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c9e4:	4770      	bx	lr

9001c9e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001c9e6:	4770      	bx	lr

9001c9e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c9e8:	4770      	bx	lr

9001c9ea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c9ea:	4770      	bx	lr

9001c9ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c9ec:	4770      	bx	lr

9001c9ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c9ee:	4770      	bx	lr

9001c9f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c9f0:	4770      	bx	lr

9001c9f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c9f2:	4770      	bx	lr

9001c9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c9f4:	4770      	bx	lr

9001c9f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001c9f6:	4770      	bx	lr

9001c9f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c9f8:	4770      	bx	lr

9001c9fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001c9fa:	4770      	bx	lr

9001c9fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c9fc:	4770      	bx	lr

9001c9fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001c9fe:	4770      	bx	lr

9001ca00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001ca00:	4770      	bx	lr

9001ca02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001ca02:	4770      	bx	lr

9001ca04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001ca04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ca08:	b088      	sub	sp, #32
9001ca0a:	4606      	mov	r6, r0
9001ca0c:	4688      	mov	r8, r1
9001ca0e:	4691      	mov	r9, r2
9001ca10:	ac08      	add	r4, sp, #32
9001ca12:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001ca16:	4620      	mov	r0, r4
9001ca18:	f7fd fc64 	bl	9001a2e4 <_ZNK8touchgfx6Bitmap7getDataEv>
9001ca1c:	6833      	ldr	r3, [r6, #0]
9001ca1e:	4605      	mov	r5, r0
9001ca20:	4620      	mov	r0, r4
9001ca22:	699f      	ldr	r7, [r3, #24]
9001ca24:	f7fd fb72 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001ca28:	4682      	mov	sl, r0
9001ca2a:	4620      	mov	r0, r4
9001ca2c:	f7fd fba2 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001ca30:	9500      	str	r5, [sp, #0]
9001ca32:	464b      	mov	r3, r9
9001ca34:	4642      	mov	r2, r8
9001ca36:	4631      	mov	r1, r6
9001ca38:	e9cd a001 	strd	sl, r0, [sp, #4]
9001ca3c:	a806      	add	r0, sp, #24
9001ca3e:	47b8      	blx	r7
9001ca40:	4628      	mov	r0, r5
9001ca42:	b008      	add	sp, #32
9001ca44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001ca48 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001ca48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001ca4c:	2300      	movs	r3, #0
9001ca4e:	9300      	str	r3, [sp, #0]
9001ca50:	4b3d      	ldr	r3, [pc, #244]	; (9001cb48 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001ca52:	781b      	ldrb	r3, [r3, #0]
9001ca54:	2b00      	cmp	r3, #0
9001ca56:	d137      	bne.n	9001cac8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001ca58:	4a3c      	ldr	r2, [pc, #240]	; (9001cb4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ca5a:	f9b2 2000 	ldrsh.w	r2, [r2]
9001ca5e:	f8ad 2004 	strh.w	r2, [sp, #4]
9001ca62:	2b00      	cmp	r3, #0
9001ca64:	d132      	bne.n	9001cacc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001ca66:	4b3a      	ldr	r3, [pc, #232]	; (9001cb50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001ca68:	f9b3 3000 	ldrsh.w	r3, [r3]
9001ca6c:	ac02      	add	r4, sp, #8
9001ca6e:	6808      	ldr	r0, [r1, #0]
9001ca70:	f8ad 3006 	strh.w	r3, [sp, #6]
9001ca74:	ab02      	add	r3, sp, #8
9001ca76:	6849      	ldr	r1, [r1, #4]
9001ca78:	4d36      	ldr	r5, [pc, #216]	; (9001cb54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001ca7a:	c303      	stmia	r3!, {r0, r1}
9001ca7c:	4669      	mov	r1, sp
9001ca7e:	4620      	mov	r0, r4
9001ca80:	f7fa f828 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ca84:	4668      	mov	r0, sp
9001ca86:	f7f9 ffe1 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ca8a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001ca8e:	f8bd 2000 	ldrh.w	r2, [sp]
9001ca92:	462f      	mov	r7, r5
9001ca94:	6828      	ldr	r0, [r5, #0]
9001ca96:	4413      	add	r3, r2
9001ca98:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001ca9c:	f8ad 3008 	strh.w	r3, [sp, #8]
9001caa0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001caa4:	4413      	add	r3, r2
9001caa6:	f8ad 300a 	strh.w	r3, [sp, #10]
9001caaa:	6803      	ldr	r3, [r0, #0]
9001caac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001caae:	4798      	blx	r3
9001cab0:	f010 0f01 	tst.w	r0, #1
9001cab4:	d00c      	beq.n	9001cad0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001cab6:	6828      	ldr	r0, [r5, #0]
9001cab8:	6803      	ldr	r3, [r0, #0]
9001caba:	e894 0006 	ldmia.w	r4, {r1, r2}
9001cabe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001cac0:	4798      	blx	r3
9001cac2:	b004      	add	sp, #16
9001cac4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001cac8:	4a21      	ldr	r2, [pc, #132]	; (9001cb50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001caca:	e7c6      	b.n	9001ca5a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001cacc:	4b1f      	ldr	r3, [pc, #124]	; (9001cb4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001cace:	e7cb      	b.n	9001ca68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001cad0:	6838      	ldr	r0, [r7, #0]
9001cad2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001cad6:	6803      	ldr	r3, [r0, #0]
9001cad8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001cadc:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001cae0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001cae2:	4798      	blx	r3
9001cae4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001cae8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001caec:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001caf0:	fb16 3602 	smlabb	r6, r6, r2, r3
9001caf4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001caf8:	6838      	ldr	r0, [r7, #0]
9001cafa:	6803      	ldr	r3, [r0, #0]
9001cafc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cafe:	4798      	blx	r3
9001cb00:	4a12      	ldr	r2, [pc, #72]	; (9001cb4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001cb02:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001cb06:	8813      	ldrh	r3, [r2, #0]
9001cb08:	4691      	mov	r9, r2
9001cb0a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001cb0e:	435d      	muls	r5, r3
9001cb10:	fb03 1404 	mla	r4, r3, r4, r1
9001cb14:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001cb18:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001cb1c:	6838      	ldr	r0, [r7, #0]
9001cb1e:	42ac      	cmp	r4, r5
9001cb20:	6803      	ldr	r3, [r0, #0]
9001cb22:	d20e      	bcs.n	9001cb42 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001cb24:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001cb28:	4632      	mov	r2, r6
9001cb2a:	4643      	mov	r3, r8
9001cb2c:	4621      	mov	r1, r4
9001cb2e:	47d0      	blx	sl
9001cb30:	f8b9 3000 	ldrh.w	r3, [r9]
9001cb34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cb38:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001cb3c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001cb40:	e7ec      	b.n	9001cb1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001cb42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cb44:	4798      	blx	r3
9001cb46:	e7bc      	b.n	9001cac2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001cb48:	24039894 	.word	0x24039894
9001cb4c:	24039896 	.word	0x24039896
9001cb50:	24039898 	.word	0x24039898
9001cb54:	2403989c 	.word	0x2403989c

9001cb58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001cb58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cb5c:	b08b      	sub	sp, #44	; 0x2c
9001cb5e:	460f      	mov	r7, r1
9001cb60:	4616      	mov	r6, r2
9001cb62:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001cb66:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001cb6a:	f1bb 0f00 	cmp.w	fp, #0
9001cb6e:	d04a      	beq.n	9001cc06 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001cb70:	6810      	ldr	r0, [r2, #0]
9001cb72:	ad06      	add	r5, sp, #24
9001cb74:	6851      	ldr	r1, [r2, #4]
9001cb76:	c503      	stmia	r5!, {r0, r1}
9001cb78:	6818      	ldr	r0, [r3, #0]
9001cb7a:	ad08      	add	r5, sp, #32
9001cb7c:	6859      	ldr	r1, [r3, #4]
9001cb7e:	c503      	stmia	r5!, {r0, r1}
9001cb80:	a806      	add	r0, sp, #24
9001cb82:	f7f9 ff63 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cb86:	4631      	mov	r1, r6
9001cb88:	a808      	add	r0, sp, #32
9001cb8a:	f7f9 ffa3 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cb8e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001cb92:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001cb96:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001cb9a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001cb9e:	fb16 2103 	smlabb	r1, r6, r3, r2
9001cba2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001cba6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001cbaa:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001cbae:	4f5f      	ldr	r7, [pc, #380]	; (9001cd2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001cbb0:	440a      	add	r2, r1
9001cbb2:	6838      	ldr	r0, [r7, #0]
9001cbb4:	46b9      	mov	r9, r7
9001cbb6:	f8ad 2020 	strh.w	r2, [sp, #32]
9001cbba:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001cbbe:	4413      	add	r3, r2
9001cbc0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001cbc4:	6803      	ldr	r3, [r0, #0]
9001cbc6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001cbc8:	4798      	blx	r3
9001cbca:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001cbce:	d11d      	bne.n	9001cc0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001cbd0:	b9fc      	cbnz	r4, 9001cc12 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001cbd2:	f010 0f01 	tst.w	r0, #1
9001cbd6:	d01c      	beq.n	9001cc12 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001cbd8:	f8d9 0000 	ldr.w	r0, [r9]
9001cbdc:	2700      	movs	r7, #0
9001cbde:	b2ad      	uxth	r5, r5
9001cbe0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001cbe4:	6801      	ldr	r1, [r0, #0]
9001cbe6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001cbea:	f8cd b00c 	str.w	fp, [sp, #12]
9001cbee:	9501      	str	r5, [sp, #4]
9001cbf0:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001cbf4:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001cbf8:	9402      	str	r4, [sp, #8]
9001cbfa:	fa1f f488 	uxth.w	r4, r8
9001cbfe:	9400      	str	r4, [sp, #0]
9001cc00:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001cc02:	4631      	mov	r1, r6
9001cc04:	47a0      	blx	r4
9001cc06:	b00b      	add	sp, #44	; 0x2c
9001cc08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cc0c:	f010 0f04 	tst.w	r0, #4
9001cc10:	e7e1      	b.n	9001cbd6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001cc12:	f8d9 0000 	ldr.w	r0, [r9]
9001cc16:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001cc1a:	6803      	ldr	r3, [r0, #0]
9001cc1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cc1e:	4798      	blx	r3
9001cc20:	4b43      	ldr	r3, [pc, #268]	; (9001cd30 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001cc22:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001cc26:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001cc2a:	881a      	ldrh	r2, [r3, #0]
9001cc2c:	469a      	mov	sl, r3
9001cc2e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001cc32:	fb05 f502 	mul.w	r5, r5, r2
9001cc36:	fb02 1404 	mla	r4, r2, r4, r1
9001cc3a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001cc3e:	d059      	beq.n	9001ccf4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001cc40:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001cc44:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001cc48:	fa1f f28b 	uxth.w	r2, fp
9001cc4c:	469e      	mov	lr, r3
9001cc4e:	fa1f f989 	uxth.w	r9, r9
9001cc52:	42ac      	cmp	r4, r5
9001cc54:	d264      	bcs.n	9001cd20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001cc56:	eb04 0a07 	add.w	sl, r4, r7
9001cc5a:	4554      	cmp	r4, sl
9001cc5c:	d23d      	bcs.n	9001ccda <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001cc5e:	8821      	ldrh	r1, [r4, #0]
9001cc60:	f836 3b02 	ldrh.w	r3, [r6], #2
9001cc64:	1208      	asrs	r0, r1, #8
9001cc66:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001cc6a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001cc6e:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001cc72:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cc76:	00c9      	lsls	r1, r1, #3
9001cc78:	fb10 f009 	smulbb	r0, r0, r9
9001cc7c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001cc80:	b2c9      	uxtb	r1, r1
9001cc82:	fb0c 0c02 	mla	ip, ip, r2, r0
9001cc86:	10d8      	asrs	r0, r3, #3
9001cc88:	fb1b fb09 	smulbb	fp, fp, r9
9001cc8c:	00db      	lsls	r3, r3, #3
9001cc8e:	fa1f fc8c 	uxth.w	ip, ip
9001cc92:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001cc96:	fb11 f109 	smulbb	r1, r1, r9
9001cc9a:	b2db      	uxtb	r3, r3
9001cc9c:	fb00 b002 	mla	r0, r0, r2, fp
9001cca0:	f10c 0b01 	add.w	fp, ip, #1
9001cca4:	fb03 1302 	mla	r3, r3, r2, r1
9001cca8:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001ccac:	b29b      	uxth	r3, r3
9001ccae:	b280      	uxth	r0, r0
9001ccb0:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001ccb4:	f103 0c01 	add.w	ip, r3, #1
9001ccb8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001ccbc:	1c43      	adds	r3, r0, #1
9001ccbe:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001ccc2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001ccc6:	0940      	lsrs	r0, r0, #5
9001ccc8:	ea4c 0c0b 	orr.w	ip, ip, fp
9001cccc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001ccd0:	ea4c 0c00 	orr.w	ip, ip, r0
9001ccd4:	f824 cb02 	strh.w	ip, [r4], #2
9001ccd8:	e7bf      	b.n	9001cc5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001ccda:	f8be 3000 	ldrh.w	r3, [lr]
9001ccde:	eba3 0308 	sub.w	r3, r3, r8
9001cce2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cce6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001ccea:	eba3 0308 	sub.w	r3, r3, r8
9001ccee:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ccf2:	e7ae      	b.n	9001cc52 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001ccf4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001ccf8:	f8d9 0000 	ldr.w	r0, [r9]
9001ccfc:	42ac      	cmp	r4, r5
9001ccfe:	6803      	ldr	r3, [r0, #0]
9001cd00:	d20e      	bcs.n	9001cd20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001cd02:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001cd06:	4632      	mov	r2, r6
9001cd08:	463b      	mov	r3, r7
9001cd0a:	4621      	mov	r1, r4
9001cd0c:	47c0      	blx	r8
9001cd0e:	f8ba 3000 	ldrh.w	r3, [sl]
9001cd12:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cd16:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001cd1a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001cd1e:	e7eb      	b.n	9001ccf8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001cd20:	4b02      	ldr	r3, [pc, #8]	; (9001cd2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001cd22:	6818      	ldr	r0, [r3, #0]
9001cd24:	6803      	ldr	r3, [r0, #0]
9001cd26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cd28:	4798      	blx	r3
9001cd2a:	e76c      	b.n	9001cc06 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001cd2c:	2403989c 	.word	0x2403989c
9001cd30:	24039896 	.word	0x24039896

9001cd34 <_ZN8touchgfx8LCD16bppD0Ev>:
9001cd34:	b510      	push	{r4, lr}
9001cd36:	4604      	mov	r4, r0
9001cd38:	2184      	movs	r1, #132	; 0x84
9001cd3a:	f00b f97b 	bl	90028034 <_ZdlPvj>
9001cd3e:	4620      	mov	r0, r4
9001cd40:	bd10      	pop	{r4, pc}

9001cd42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001cd42:	b510      	push	{r4, lr}
9001cd44:	4604      	mov	r4, r0
9001cd46:	2104      	movs	r1, #4
9001cd48:	f00b f974 	bl	90028034 <_ZdlPvj>
9001cd4c:	4620      	mov	r0, r4
9001cd4e:	bd10      	pop	{r4, pc}

9001cd50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001cd50:	b510      	push	{r4, lr}
9001cd52:	4604      	mov	r4, r0
9001cd54:	2104      	movs	r1, #4
9001cd56:	f00b f96d 	bl	90028034 <_ZdlPvj>
9001cd5a:	4620      	mov	r0, r4
9001cd5c:	bd10      	pop	{r4, pc}

9001cd5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001cd5e:	b510      	push	{r4, lr}
9001cd60:	4604      	mov	r4, r0
9001cd62:	f640 0144 	movw	r1, #2116	; 0x844
9001cd66:	f00b f965 	bl	90028034 <_ZdlPvj>
9001cd6a:	4620      	mov	r0, r4
9001cd6c:	bd10      	pop	{r4, pc}

9001cd6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001cd6e:	b510      	push	{r4, lr}
9001cd70:	4604      	mov	r4, r0
9001cd72:	2104      	movs	r1, #4
9001cd74:	f00b f95e 	bl	90028034 <_ZdlPvj>
9001cd78:	4620      	mov	r0, r4
9001cd7a:	bd10      	pop	{r4, pc}

9001cd7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001cd7c:	b510      	push	{r4, lr}
9001cd7e:	4604      	mov	r4, r0
9001cd80:	2104      	movs	r1, #4
9001cd82:	f00b f957 	bl	90028034 <_ZdlPvj>
9001cd86:	4620      	mov	r0, r4
9001cd88:	bd10      	pop	{r4, pc}

9001cd8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001cd8a:	b510      	push	{r4, lr}
9001cd8c:	4604      	mov	r4, r0
9001cd8e:	2104      	movs	r1, #4
9001cd90:	f00b f950 	bl	90028034 <_ZdlPvj>
9001cd94:	4620      	mov	r0, r4
9001cd96:	bd10      	pop	{r4, pc}

9001cd98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001cd98:	b510      	push	{r4, lr}
9001cd9a:	4604      	mov	r4, r0
9001cd9c:	2104      	movs	r1, #4
9001cd9e:	f00b f949 	bl	90028034 <_ZdlPvj>
9001cda2:	4620      	mov	r0, r4
9001cda4:	bd10      	pop	{r4, pc}

9001cda6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001cda6:	b510      	push	{r4, lr}
9001cda8:	4604      	mov	r4, r0
9001cdaa:	2104      	movs	r1, #4
9001cdac:	f00b f942 	bl	90028034 <_ZdlPvj>
9001cdb0:	4620      	mov	r0, r4
9001cdb2:	bd10      	pop	{r4, pc}

9001cdb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001cdb4:	b510      	push	{r4, lr}
9001cdb6:	4604      	mov	r4, r0
9001cdb8:	2104      	movs	r1, #4
9001cdba:	f00b f93b 	bl	90028034 <_ZdlPvj>
9001cdbe:	4620      	mov	r0, r4
9001cdc0:	bd10      	pop	{r4, pc}

9001cdc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001cdc2:	b510      	push	{r4, lr}
9001cdc4:	4604      	mov	r4, r0
9001cdc6:	2104      	movs	r1, #4
9001cdc8:	f00b f934 	bl	90028034 <_ZdlPvj>
9001cdcc:	4620      	mov	r0, r4
9001cdce:	bd10      	pop	{r4, pc}

9001cdd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001cdd0:	b510      	push	{r4, lr}
9001cdd2:	4604      	mov	r4, r0
9001cdd4:	2104      	movs	r1, #4
9001cdd6:	f00b f92d 	bl	90028034 <_ZdlPvj>
9001cdda:	4620      	mov	r0, r4
9001cddc:	bd10      	pop	{r4, pc}

9001cdde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001cdde:	b510      	push	{r4, lr}
9001cde0:	4604      	mov	r4, r0
9001cde2:	2104      	movs	r1, #4
9001cde4:	f00b f926 	bl	90028034 <_ZdlPvj>
9001cde8:	4620      	mov	r0, r4
9001cdea:	bd10      	pop	{r4, pc}

9001cdec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001cdec:	b510      	push	{r4, lr}
9001cdee:	4604      	mov	r4, r0
9001cdf0:	2104      	movs	r1, #4
9001cdf2:	f00b f91f 	bl	90028034 <_ZdlPvj>
9001cdf6:	4620      	mov	r0, r4
9001cdf8:	bd10      	pop	{r4, pc}

9001cdfa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001cdfa:	b510      	push	{r4, lr}
9001cdfc:	4604      	mov	r4, r0
9001cdfe:	2104      	movs	r1, #4
9001ce00:	f00b f918 	bl	90028034 <_ZdlPvj>
9001ce04:	4620      	mov	r0, r4
9001ce06:	bd10      	pop	{r4, pc}

9001ce08 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ce08:	b510      	push	{r4, lr}
9001ce0a:	4604      	mov	r4, r0
9001ce0c:	2104      	movs	r1, #4
9001ce0e:	f00b f911 	bl	90028034 <_ZdlPvj>
9001ce12:	4620      	mov	r0, r4
9001ce14:	bd10      	pop	{r4, pc}

9001ce16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001ce16:	b510      	push	{r4, lr}
9001ce18:	4604      	mov	r4, r0
9001ce1a:	2104      	movs	r1, #4
9001ce1c:	f00b f90a 	bl	90028034 <_ZdlPvj>
9001ce20:	4620      	mov	r0, r4
9001ce22:	bd10      	pop	{r4, pc}

9001ce24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001ce24:	b510      	push	{r4, lr}
9001ce26:	4604      	mov	r4, r0
9001ce28:	2104      	movs	r1, #4
9001ce2a:	f00b f903 	bl	90028034 <_ZdlPvj>
9001ce2e:	4620      	mov	r0, r4
9001ce30:	bd10      	pop	{r4, pc}

9001ce32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001ce32:	b510      	push	{r4, lr}
9001ce34:	4604      	mov	r4, r0
9001ce36:	2104      	movs	r1, #4
9001ce38:	f00b f8fc 	bl	90028034 <_ZdlPvj>
9001ce3c:	4620      	mov	r0, r4
9001ce3e:	bd10      	pop	{r4, pc}

9001ce40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001ce40:	b510      	push	{r4, lr}
9001ce42:	4604      	mov	r4, r0
9001ce44:	2104      	movs	r1, #4
9001ce46:	f00b f8f5 	bl	90028034 <_ZdlPvj>
9001ce4a:	4620      	mov	r0, r4
9001ce4c:	bd10      	pop	{r4, pc}

9001ce4e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ce4e:	b510      	push	{r4, lr}
9001ce50:	4604      	mov	r4, r0
9001ce52:	2104      	movs	r1, #4
9001ce54:	f00b f8ee 	bl	90028034 <_ZdlPvj>
9001ce58:	4620      	mov	r0, r4
9001ce5a:	bd10      	pop	{r4, pc}

9001ce5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001ce5c:	b510      	push	{r4, lr}
9001ce5e:	4604      	mov	r4, r0
9001ce60:	2104      	movs	r1, #4
9001ce62:	f00b f8e7 	bl	90028034 <_ZdlPvj>
9001ce66:	4620      	mov	r0, r4
9001ce68:	bd10      	pop	{r4, pc}

9001ce6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001ce6a:	b510      	push	{r4, lr}
9001ce6c:	4604      	mov	r4, r0
9001ce6e:	2104      	movs	r1, #4
9001ce70:	f00b f8e0 	bl	90028034 <_ZdlPvj>
9001ce74:	4620      	mov	r0, r4
9001ce76:	bd10      	pop	{r4, pc}

9001ce78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ce78:	b510      	push	{r4, lr}
9001ce7a:	4604      	mov	r4, r0
9001ce7c:	2104      	movs	r1, #4
9001ce7e:	f00b f8d9 	bl	90028034 <_ZdlPvj>
9001ce82:	4620      	mov	r0, r4
9001ce84:	bd10      	pop	{r4, pc}

9001ce86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001ce86:	b510      	push	{r4, lr}
9001ce88:	4604      	mov	r4, r0
9001ce8a:	2104      	movs	r1, #4
9001ce8c:	f00b f8d2 	bl	90028034 <_ZdlPvj>
9001ce90:	4620      	mov	r0, r4
9001ce92:	bd10      	pop	{r4, pc}

9001ce94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001ce94:	b510      	push	{r4, lr}
9001ce96:	4604      	mov	r4, r0
9001ce98:	2104      	movs	r1, #4
9001ce9a:	f00b f8cb 	bl	90028034 <_ZdlPvj>
9001ce9e:	4620      	mov	r0, r4
9001cea0:	bd10      	pop	{r4, pc}

9001cea2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001cea2:	b510      	push	{r4, lr}
9001cea4:	4604      	mov	r4, r0
9001cea6:	2104      	movs	r1, #4
9001cea8:	f00b f8c4 	bl	90028034 <_ZdlPvj>
9001ceac:	4620      	mov	r0, r4
9001ceae:	bd10      	pop	{r4, pc}

9001ceb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ceb0:	b510      	push	{r4, lr}
9001ceb2:	4604      	mov	r4, r0
9001ceb4:	2104      	movs	r1, #4
9001ceb6:	f00b f8bd 	bl	90028034 <_ZdlPvj>
9001ceba:	4620      	mov	r0, r4
9001cebc:	bd10      	pop	{r4, pc}

9001cebe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001cebe:	b510      	push	{r4, lr}
9001cec0:	4604      	mov	r4, r0
9001cec2:	2104      	movs	r1, #4
9001cec4:	f00b f8b6 	bl	90028034 <_ZdlPvj>
9001cec8:	4620      	mov	r0, r4
9001ceca:	bd10      	pop	{r4, pc}

9001cecc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001cecc:	b510      	push	{r4, lr}
9001cece:	4604      	mov	r4, r0
9001ced0:	2104      	movs	r1, #4
9001ced2:	f00b f8af 	bl	90028034 <_ZdlPvj>
9001ced6:	4620      	mov	r0, r4
9001ced8:	bd10      	pop	{r4, pc}

9001ceda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001ceda:	b510      	push	{r4, lr}
9001cedc:	4604      	mov	r4, r0
9001cede:	2104      	movs	r1, #4
9001cee0:	f00b f8a8 	bl	90028034 <_ZdlPvj>
9001cee4:	4620      	mov	r0, r4
9001cee6:	bd10      	pop	{r4, pc}

9001cee8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001cee8:	b510      	push	{r4, lr}
9001ceea:	4604      	mov	r4, r0
9001ceec:	2104      	movs	r1, #4
9001ceee:	f00b f8a1 	bl	90028034 <_ZdlPvj>
9001cef2:	4620      	mov	r0, r4
9001cef4:	bd10      	pop	{r4, pc}
	...

9001cef8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001cef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cefc:	b08f      	sub	sp, #60	; 0x3c
9001cefe:	461c      	mov	r4, r3
9001cf00:	9205      	str	r2, [sp, #20]
9001cf02:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001cf06:	9100      	str	r1, [sp, #0]
9001cf08:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001cf0a:	9201      	str	r2, [sp, #4]
9001cf0c:	2a00      	cmp	r2, #0
9001cf0e:	f000 8116 	beq.w	9001d13e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001cf12:	6820      	ldr	r0, [r4, #0]
9001cf14:	aa0a      	add	r2, sp, #40	; 0x28
9001cf16:	6861      	ldr	r1, [r4, #4]
9001cf18:	c203      	stmia	r2!, {r0, r1}
9001cf1a:	6818      	ldr	r0, [r3, #0]
9001cf1c:	aa0c      	add	r2, sp, #48	; 0x30
9001cf1e:	6859      	ldr	r1, [r3, #4]
9001cf20:	c203      	stmia	r2!, {r0, r1}
9001cf22:	a80a      	add	r0, sp, #40	; 0x28
9001cf24:	f7f9 fd92 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cf28:	4621      	mov	r1, r4
9001cf2a:	a80c      	add	r0, sp, #48	; 0x30
9001cf2c:	f7f9 fdd2 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cf30:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001cf34:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001cf38:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001cf3c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001cf40:	bfdb      	ittet	le
9001cf42:	b2b3      	uxthle	r3, r6
9001cf44:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001cf48:	2301      	movgt	r3, #1
9001cf4a:	fb92 f3f3 	sdivle	r3, r2, r3
9001cf4e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001cf52:	441d      	add	r5, r3
9001cf54:	fb92 f1f3 	sdiv	r1, r2, r3
9001cf58:	fa1f fc81 	uxth.w	ip, r1
9001cf5c:	3d01      	subs	r5, #1
9001cf5e:	fb0c 2413 	mls	r4, ip, r3, r2
9001cf62:	4661      	mov	r1, ip
9001cf64:	fb14 f406 	smulbb	r4, r4, r6
9001cf68:	4404      	add	r4, r0
9001cf6a:	fb95 f5f3 	sdiv	r5, r5, r3
9001cf6e:	b2a4      	uxth	r4, r4
9001cf70:	b131      	cbz	r1, 9001cf80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001cf72:	9b05      	ldr	r3, [sp, #20]
9001cf74:	9900      	ldr	r1, [sp, #0]
9001cf76:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001cf7a:	ba1b      	rev	r3, r3
9001cf7c:	4419      	add	r1, r3
9001cf7e:	9100      	str	r1, [sp, #0]
9001cf80:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001cf84:	b2ad      	uxth	r5, r5
9001cf86:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001cf8a:	4418      	add	r0, r3
9001cf8c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001cf90:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001cf94:	00ad      	lsls	r5, r5, #2
9001cf96:	441a      	add	r2, r3
9001cf98:	4b6a      	ldr	r3, [pc, #424]	; (9001d144 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001cf9a:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001cf9e:	6818      	ldr	r0, [r3, #0]
9001cfa0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001cfa4:	6803      	ldr	r3, [r0, #0]
9001cfa6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cfa8:	4798      	blx	r3
9001cfaa:	4967      	ldr	r1, [pc, #412]	; (9001d148 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001cfac:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001cfb0:	2c00      	cmp	r4, #0
9001cfb2:	880b      	ldrh	r3, [r1, #0]
9001cfb4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001cfb8:	bf0c      	ite	eq
9001cfba:	46c6      	moveq	lr, r8
9001cfbc:	f04f 0e00 	movne.w	lr, #0
9001cfc0:	9109      	str	r1, [sp, #36]	; 0x24
9001cfc2:	fb03 c202 	mla	r2, r3, r2, ip
9001cfc6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001cfca:	4373      	muls	r3, r6
9001cfcc:	fa1f fe8e 	uxth.w	lr, lr
9001cfd0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cfd4:	9103      	str	r1, [sp, #12]
9001cfd6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001cfda:	9306      	str	r3, [sp, #24]
9001cfdc:	1d2b      	adds	r3, r5, #4
9001cfde:	9307      	str	r3, [sp, #28]
9001cfe0:	9b01      	ldr	r3, [sp, #4]
9001cfe2:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001cfe6:	2300      	movs	r3, #0
9001cfe8:	b292      	uxth	r2, r2
9001cfea:	9302      	str	r3, [sp, #8]
9001cfec:	9204      	str	r2, [sp, #16]
9001cfee:	9a06      	ldr	r2, [sp, #24]
9001cff0:	4282      	cmp	r2, r0
9001cff2:	f240 809f 	bls.w	9001d134 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001cff6:	b963      	cbnz	r3, 9001d012 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001cff8:	9b00      	ldr	r3, [sp, #0]
9001cffa:	781a      	ldrb	r2, [r3, #0]
9001cffc:	0993      	lsrs	r3, r2, #6
9001cffe:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001d002:	9202      	str	r2, [sp, #8]
9001d004:	1e5a      	subs	r2, r3, #1
9001d006:	2a02      	cmp	r2, #2
9001d008:	d815      	bhi.n	9001d036 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001d00a:	9a00      	ldr	r2, [sp, #0]
9001d00c:	b29b      	uxth	r3, r3
9001d00e:	3201      	adds	r2, #1
9001d010:	9200      	str	r2, [sp, #0]
9001d012:	b1b4      	cbz	r4, 9001d042 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001d014:	429c      	cmp	r4, r3
9001d016:	bf91      	iteee	ls
9001d018:	1b1c      	subls	r4, r3, r4
9001d01a:	1ae4      	subhi	r4, r4, r3
9001d01c:	4671      	movhi	r1, lr
9001d01e:	f04f 0a00 	movhi.w	sl, #0
9001d022:	bf9b      	ittet	ls
9001d024:	fa1f fa84 	uxthls.w	sl, r4
9001d028:	2400      	movls	r4, #0
9001d02a:	b2a4      	uxthhi	r4, r4
9001d02c:	fa1f f188 	uxthls.w	r1, r8
9001d030:	4653      	mov	r3, sl
9001d032:	468e      	mov	lr, r1
9001d034:	e7db      	b.n	9001cfee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001d036:	9a00      	ldr	r2, [sp, #0]
9001d038:	9b00      	ldr	r3, [sp, #0]
9001d03a:	3202      	adds	r2, #2
9001d03c:	785b      	ldrb	r3, [r3, #1]
9001d03e:	9200      	str	r2, [sp, #0]
9001d040:	e7e7      	b.n	9001d012 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001d042:	2202      	movs	r2, #2
9001d044:	9907      	ldr	r1, [sp, #28]
9001d046:	4573      	cmp	r3, lr
9001d048:	4615      	mov	r5, r2
9001d04a:	9a02      	ldr	r2, [sp, #8]
9001d04c:	bf24      	itt	cs
9001d04e:	eba3 0a0e 	subcs.w	sl, r3, lr
9001d052:	46f1      	movcs	r9, lr
9001d054:	fb15 1202 	smlabb	r2, r5, r2, r1
9001d058:	9905      	ldr	r1, [sp, #20]
9001d05a:	bf34      	ite	cc
9001d05c:	4699      	movcc	r9, r3
9001d05e:	fa1f fa8a 	uxthcs.w	sl, sl
9001d062:	f831 c002 	ldrh.w	ip, [r1, r2]
9001d066:	bf38      	it	cc
9001d068:	ebae 0103 	subcc.w	r1, lr, r3
9001d06c:	9a01      	ldr	r2, [sp, #4]
9001d06e:	bf2e      	itee	cs
9001d070:	4621      	movcs	r1, r4
9001d072:	b289      	uxthcc	r1, r1
9001d074:	46a2      	movcc	sl, r4
9001d076:	2aff      	cmp	r2, #255	; 0xff
9001d078:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001d07c:	d105      	bne.n	9001d08a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001d07e:	4481      	add	r9, r0
9001d080:	4581      	cmp	r9, r0
9001d082:	d045      	beq.n	9001d110 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001d084:	f820 cb02 	strh.w	ip, [r0], #2
9001d088:	e7fa      	b.n	9001d080 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001d08a:	ea4f 222c 	mov.w	r2, ip, asr #8
9001d08e:	9d03      	ldr	r5, [sp, #12]
9001d090:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001d094:	4481      	add	r9, r0
9001d096:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d09a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001d09e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001d0a2:	fa5f fc8c 	uxtb.w	ip, ip
9001d0a6:	436a      	muls	r2, r5
9001d0a8:	fb0b fb05 	mul.w	fp, fp, r5
9001d0ac:	fb0c fc05 	mul.w	ip, ip, r5
9001d0b0:	9208      	str	r2, [sp, #32]
9001d0b2:	4581      	cmp	r9, r0
9001d0b4:	d02c      	beq.n	9001d110 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001d0b6:	8802      	ldrh	r2, [r0, #0]
9001d0b8:	9d04      	ldr	r5, [sp, #16]
9001d0ba:	1216      	asrs	r6, r2, #8
9001d0bc:	9f04      	ldr	r7, [sp, #16]
9001d0be:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d0c2:	fb16 f605 	smulbb	r6, r6, r5
9001d0c6:	9d08      	ldr	r5, [sp, #32]
9001d0c8:	442e      	add	r6, r5
9001d0ca:	10d5      	asrs	r5, r2, #3
9001d0cc:	00d2      	lsls	r2, r2, #3
9001d0ce:	b2b6      	uxth	r6, r6
9001d0d0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001d0d4:	b2d2      	uxtb	r2, r2
9001d0d6:	fb15 f507 	smulbb	r5, r5, r7
9001d0da:	fb12 f207 	smulbb	r2, r2, r7
9001d0de:	1c77      	adds	r7, r6, #1
9001d0e0:	445d      	add	r5, fp
9001d0e2:	4462      	add	r2, ip
9001d0e4:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001d0e8:	b2ad      	uxth	r5, r5
9001d0ea:	b292      	uxth	r2, r2
9001d0ec:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001d0f0:	1c57      	adds	r7, r2, #1
9001d0f2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001d0f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d0fa:	4316      	orrs	r6, r2
9001d0fc:	1c6a      	adds	r2, r5, #1
9001d0fe:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001d102:	096d      	lsrs	r5, r5, #5
9001d104:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d108:	432e      	orrs	r6, r5
9001d10a:	f820 6b02 	strh.w	r6, [r0], #2
9001d10e:	e7d0      	b.n	9001d0b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001d110:	4573      	cmp	r3, lr
9001d112:	d38d      	bcc.n	9001d030 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001d114:	fa1f f188 	uxth.w	r1, r8
9001d118:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001d11c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001d11e:	1a64      	subs	r4, r4, r1
9001d120:	881b      	ldrh	r3, [r3, #0]
9001d122:	b2a4      	uxth	r4, r4
9001d124:	eba3 0308 	sub.w	r3, r3, r8
9001d128:	2c00      	cmp	r4, #0
9001d12a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d12e:	bf18      	it	ne
9001d130:	2100      	movne	r1, #0
9001d132:	e77d      	b.n	9001d030 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001d134:	4b03      	ldr	r3, [pc, #12]	; (9001d144 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001d136:	6818      	ldr	r0, [r3, #0]
9001d138:	6803      	ldr	r3, [r0, #0]
9001d13a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d13c:	4798      	blx	r3
9001d13e:	b00f      	add	sp, #60	; 0x3c
9001d140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d144:	2403989c 	.word	0x2403989c
9001d148:	24039896 	.word	0x24039896

9001d14c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001d14c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d150:	b09f      	sub	sp, #124	; 0x7c
9001d152:	461d      	mov	r5, r3
9001d154:	4604      	mov	r4, r0
9001d156:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001d158:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001d15c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001d160:	9209      	str	r2, [sp, #36]	; 0x24
9001d162:	2a00      	cmp	r2, #0
9001d164:	f000 81ed 	beq.w	9001d542 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001d168:	6828      	ldr	r0, [r5, #0]
9001d16a:	aa1a      	add	r2, sp, #104	; 0x68
9001d16c:	6869      	ldr	r1, [r5, #4]
9001d16e:	c203      	stmia	r2!, {r0, r1}
9001d170:	6818      	ldr	r0, [r3, #0]
9001d172:	aa1c      	add	r2, sp, #112	; 0x70
9001d174:	6859      	ldr	r1, [r3, #4]
9001d176:	c203      	stmia	r2!, {r0, r1}
9001d178:	a81a      	add	r0, sp, #104	; 0x68
9001d17a:	f7f9 fc67 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d17e:	4629      	mov	r1, r5
9001d180:	a81c      	add	r0, sp, #112	; 0x70
9001d182:	f7f9 fca7 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d186:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001d18a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001d18e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001d192:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001d196:	bfdb      	ittet	le
9001d198:	b29a      	uxthle	r2, r3
9001d19a:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001d19e:	2201      	movgt	r2, #1
9001d1a0:	fb91 f2f2 	sdivle	r2, r1, r2
9001d1a4:	9202      	str	r2, [sp, #8]
9001d1a6:	9802      	ldr	r0, [sp, #8]
9001d1a8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001d1ac:	9902      	ldr	r1, [sp, #8]
9001d1ae:	fb92 f0f0 	sdiv	r0, r2, r0
9001d1b2:	b280      	uxth	r0, r0
9001d1b4:	4488      	add	r8, r1
9001d1b6:	9010      	str	r0, [sp, #64]	; 0x40
9001d1b8:	f108 38ff 	add.w	r8, r8, #4294967295
9001d1bc:	9802      	ldr	r0, [sp, #8]
9001d1be:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001d1c0:	fb05 2510 	mls	r5, r5, r0, r2
9001d1c4:	fb98 f8f1 	sdiv	r8, r8, r1
9001d1c8:	fb15 f503 	smulbb	r5, r5, r3
9001d1cc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001d1d0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001d1d4:	f108 0801 	add.w	r8, r8, #1
9001d1d8:	440d      	add	r5, r1
9001d1da:	4419      	add	r1, r3
9001d1dc:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001d1e0:	fa1f f888 	uxth.w	r8, r8
9001d1e4:	441a      	add	r2, r3
9001d1e6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001d1ea:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001d1ee:	b2ad      	uxth	r5, r5
9001d1f0:	9304      	str	r3, [sp, #16]
9001d1f2:	4b94      	ldr	r3, [pc, #592]	; (9001d444 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001d1f4:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001d1f8:	6818      	ldr	r0, [r3, #0]
9001d1fa:	6803      	ldr	r3, [r0, #0]
9001d1fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d1fe:	4798      	blx	r3
9001d200:	4b91      	ldr	r3, [pc, #580]	; (9001d448 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001d202:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001d206:	2d00      	cmp	r5, #0
9001d208:	881a      	ldrh	r2, [r3, #0]
9001d20a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001d20e:	fb02 f606 	mul.w	r6, r2, r6
9001d212:	fb02 7101 	mla	r1, r2, r1, r7
9001d216:	9318      	str	r3, [sp, #96]	; 0x60
9001d218:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001d21c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001d220:	f04f 0100 	mov.w	r1, #0
9001d224:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001d228:	930f      	str	r3, [sp, #60]	; 0x3c
9001d22a:	4b88      	ldr	r3, [pc, #544]	; (9001d44c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001d22c:	920a      	str	r2, [sp, #40]	; 0x28
9001d22e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d230:	eba3 0304 	sub.w	r3, r3, r4
9001d234:	910d      	str	r1, [sp, #52]	; 0x34
9001d236:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001d23a:	9319      	str	r3, [sp, #100]	; 0x64
9001d23c:	f108 0204 	add.w	r2, r8, #4
9001d240:	9211      	str	r2, [sp, #68]	; 0x44
9001d242:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d244:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001d248:	9215      	str	r2, [sp, #84]	; 0x54
9001d24a:	9a04      	ldr	r2, [sp, #16]
9001d24c:	bf18      	it	ne
9001d24e:	2200      	movne	r2, #0
9001d250:	b292      	uxth	r2, r2
9001d252:	9910      	ldr	r1, [sp, #64]	; 0x40
9001d254:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d256:	fa11 f383 	uxtah	r3, r1, r3
9001d25a:	9914      	ldr	r1, [sp, #80]	; 0x50
9001d25c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001d260:	3304      	adds	r3, #4
9001d262:	9306      	str	r3, [sp, #24]
9001d264:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d266:	4283      	cmp	r3, r0
9001d268:	f240 8166 	bls.w	9001d538 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001d26c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001d270:	f04f 0a01 	mov.w	sl, #1
9001d274:	9902      	ldr	r1, [sp, #8]
9001d276:	9e06      	ldr	r6, [sp, #24]
9001d278:	46d3      	mov	fp, sl
9001d27a:	4657      	mov	r7, sl
9001d27c:	7836      	ldrb	r6, [r6, #0]
9001d27e:	fbb5 f3f3 	udiv	r3, r5, r3
9001d282:	1acb      	subs	r3, r1, r3
9001d284:	9612      	str	r6, [sp, #72]	; 0x48
9001d286:	3601      	adds	r6, #1
9001d288:	b29b      	uxth	r3, r3
9001d28a:	9605      	str	r6, [sp, #20]
9001d28c:	9316      	str	r3, [sp, #88]	; 0x58
9001d28e:	9b06      	ldr	r3, [sp, #24]
9001d290:	7859      	ldrb	r1, [r3, #1]
9001d292:	789b      	ldrb	r3, [r3, #2]
9001d294:	021b      	lsls	r3, r3, #8
9001d296:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001d29a:	9906      	ldr	r1, [sp, #24]
9001d29c:	78c9      	ldrb	r1, [r1, #3]
9001d29e:	430b      	orrs	r3, r1
9001d2a0:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001d2a2:	4419      	add	r1, r3
9001d2a4:	1c4e      	adds	r6, r1, #1
9001d2a6:	7849      	ldrb	r1, [r1, #1]
9001d2a8:	9603      	str	r6, [sp, #12]
9001d2aa:	0209      	lsls	r1, r1, #8
9001d2ac:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001d2ae:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001d2b2:	5cf3      	ldrb	r3, [r6, r3]
9001d2b4:	4319      	orrs	r1, r3
9001d2b6:	b28b      	uxth	r3, r1
9001d2b8:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001d2bc:	930c      	str	r3, [sp, #48]	; 0x30
9001d2be:	2300      	movs	r3, #0
9001d2c0:	9307      	str	r3, [sp, #28]
9001d2c2:	469c      	mov	ip, r3
9001d2c4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001d2c8:	930e      	str	r3, [sp, #56]	; 0x38
9001d2ca:	2d00      	cmp	r5, #0
9001d2cc:	d07e      	beq.n	9001d3cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001d2ce:	42af      	cmp	r7, r5
9001d2d0:	d26e      	bcs.n	9001d3b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001d2d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d2d4:	1bed      	subs	r5, r5, r7
9001d2d6:	9201      	str	r2, [sp, #4]
9001d2d8:	4283      	cmp	r3, r0
9001d2da:	b2ad      	uxth	r5, r5
9001d2dc:	d802      	bhi.n	9001d2e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001d2de:	e073      	b.n	9001d3c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001d2e0:	2b00      	cmp	r3, #0
9001d2e2:	d15f      	bne.n	9001d3a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001d2e4:	9b03      	ldr	r3, [sp, #12]
9001d2e6:	f1cb 0207 	rsb	r2, fp, #7
9001d2ea:	785b      	ldrb	r3, [r3, #1]
9001d2ec:	4093      	lsls	r3, r2
9001d2ee:	005b      	lsls	r3, r3, #1
9001d2f0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001d2f4:	9b03      	ldr	r3, [sp, #12]
9001d2f6:	781b      	ldrb	r3, [r3, #0]
9001d2f8:	fa43 f30b 	asr.w	r3, r3, fp
9001d2fc:	b2db      	uxtb	r3, r3
9001d2fe:	4313      	orrs	r3, r2
9001d300:	f10b 0201 	add.w	r2, fp, #1
9001d304:	fa5f fb82 	uxtb.w	fp, r2
9001d308:	9a03      	ldr	r2, [sp, #12]
9001d30a:	b29f      	uxth	r7, r3
9001d30c:	f1bb 0f08 	cmp.w	fp, #8
9001d310:	bf13      	iteet	ne
9001d312:	3201      	addne	r2, #1
9001d314:	3202      	addeq	r2, #2
9001d316:	f04f 0b00 	moveq.w	fp, #0
9001d31a:	9203      	strne	r2, [sp, #12]
9001d31c:	bf08      	it	eq
9001d31e:	9203      	streq	r2, [sp, #12]
9001d320:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001d322:	42ba      	cmp	r2, r7
9001d324:	d309      	bcc.n	9001d33a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001d326:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001d32a:	2301      	movs	r3, #1
9001d32c:	9a05      	ldr	r2, [sp, #20]
9001d32e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001d332:	d30e      	bcc.n	9001d352 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001d334:	469a      	mov	sl, r3
9001d336:	2600      	movs	r6, #0
9001d338:	e035      	b.n	9001d3a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001d33a:	9b05      	ldr	r3, [sp, #20]
9001d33c:	429f      	cmp	r7, r3
9001d33e:	d318      	bcc.n	9001d372 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001d340:	eb04 030a 	add.w	r3, r4, sl
9001d344:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001d348:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001d34c:	f10a 0301 	add.w	r3, sl, #1
9001d350:	b29b      	uxth	r3, r3
9001d352:	9a05      	ldr	r2, [sp, #20]
9001d354:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001d358:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001d35c:	990c      	ldr	r1, [sp, #48]	; 0x30
9001d35e:	7116      	strb	r6, [r2, #4]
9001d360:	f10a 0601 	add.w	r6, sl, #1
9001d364:	80d1      	strh	r1, [r2, #6]
9001d366:	7156      	strb	r6, [r2, #5]
9001d368:	9a05      	ldr	r2, [sp, #20]
9001d36a:	3201      	adds	r2, #1
9001d36c:	b292      	uxth	r2, r2
9001d36e:	9205      	str	r2, [sp, #20]
9001d370:	e7e0      	b.n	9001d334 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001d372:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001d376:	463a      	mov	r2, r7
9001d378:	795b      	ldrb	r3, [r3, #5]
9001d37a:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001d37e:	4426      	add	r6, r4
9001d380:	9919      	ldr	r1, [sp, #100]	; 0x64
9001d382:	eb01 0c06 	add.w	ip, r1, r6
9001d386:	f1bc 0f00 	cmp.w	ip, #0
9001d38a:	dd07      	ble.n	9001d39c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001d38c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001d390:	f892 c004 	ldrb.w	ip, [r2, #4]
9001d394:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001d398:	88d2      	ldrh	r2, [r2, #6]
9001d39a:	e7f1      	b.n	9001d380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001d39c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001d3a0:	b29b      	uxth	r3, r3
9001d3a2:	e7c3      	b.n	9001d32c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001d3a4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001d3a6:	970c      	str	r7, [sp, #48]	; 0x30
9001d3a8:	46b4      	mov	ip, r6
9001d3aa:	9a01      	ldr	r2, [sp, #4]
9001d3ac:	461f      	mov	r7, r3
9001d3ae:	e78c      	b.n	9001d2ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001d3b0:	1b7b      	subs	r3, r7, r5
9001d3b2:	eb0c 0605 	add.w	r6, ip, r5
9001d3b6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d3ba:	b29b      	uxth	r3, r3
9001d3bc:	b2b6      	uxth	r6, r6
9001d3be:	9201      	str	r2, [sp, #4]
9001d3c0:	2500      	movs	r5, #0
9001d3c2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001d3c4:	4282      	cmp	r2, r0
9001d3c6:	d88b      	bhi.n	9001d2e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001d3c8:	9a01      	ldr	r2, [sp, #4]
9001d3ca:	e74b      	b.n	9001d264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001d3cc:	4297      	cmp	r7, r2
9001d3ce:	d332      	bcc.n	9001d436 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001d3d0:	1abb      	subs	r3, r7, r2
9001d3d2:	9208      	str	r2, [sp, #32]
9001d3d4:	9501      	str	r5, [sp, #4]
9001d3d6:	b29b      	uxth	r3, r3
9001d3d8:	9909      	ldr	r1, [sp, #36]	; 0x24
9001d3da:	29ff      	cmp	r1, #255	; 0xff
9001d3dc:	9908      	ldr	r1, [sp, #32]
9001d3de:	eb0c 0601 	add.w	r6, ip, r1
9001d3e2:	d135      	bne.n	9001d450 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001d3e4:	f1a0 0e02 	sub.w	lr, r0, #2
9001d3e8:	b2b6      	uxth	r6, r6
9001d3ea:	45b4      	cmp	ip, r6
9001d3ec:	f040 808c 	bne.w	9001d508 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001d3f0:	9908      	ldr	r1, [sp, #32]
9001d3f2:	4297      	cmp	r7, r2
9001d3f4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001d3f8:	d3e2      	bcc.n	9001d3c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001d3fa:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001d3fc:	9904      	ldr	r1, [sp, #16]
9001d3fe:	8812      	ldrh	r2, [r2, #0]
9001d400:	1a52      	subs	r2, r2, r1
9001d402:	9916      	ldr	r1, [sp, #88]	; 0x58
9001d404:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d408:	9a07      	ldr	r2, [sp, #28]
9001d40a:	3201      	adds	r2, #1
9001d40c:	428a      	cmp	r2, r1
9001d40e:	9207      	str	r2, [sp, #28]
9001d410:	f040 8087 	bne.w	9001d522 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001d414:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001d418:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001d41c:	9b04      	ldr	r3, [sp, #16]
9001d41e:	1bed      	subs	r5, r5, r7
9001d420:	b2ad      	uxth	r5, r5
9001d422:	2d00      	cmp	r5, #0
9001d424:	bf08      	it	eq
9001d426:	461a      	moveq	r2, r3
9001d428:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d42a:	bf18      	it	ne
9001d42c:	2200      	movne	r2, #0
9001d42e:	3301      	adds	r3, #1
9001d430:	b292      	uxth	r2, r2
9001d432:	930d      	str	r3, [sp, #52]	; 0x34
9001d434:	e70d      	b.n	9001d252 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001d436:	1bd1      	subs	r1, r2, r7
9001d438:	9708      	str	r7, [sp, #32]
9001d43a:	b28b      	uxth	r3, r1
9001d43c:	9301      	str	r3, [sp, #4]
9001d43e:	462b      	mov	r3, r5
9001d440:	e7ca      	b.n	9001d3d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001d442:	bf00      	nop
9001d444:	2403989c 	.word	0x2403989c
9001d448:	24039896 	.word	0x24039896
9001d44c:	fffff7fb 	.word	0xfffff7fb
9001d450:	b2b6      	uxth	r6, r6
9001d452:	900b      	str	r0, [sp, #44]	; 0x2c
9001d454:	45b4      	cmp	ip, r6
9001d456:	d0cb      	beq.n	9001d3f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001d458:	f10c 0101 	add.w	r1, ip, #1
9001d45c:	44a4      	add	ip, r4
9001d45e:	9117      	str	r1, [sp, #92]	; 0x5c
9001d460:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001d464:	9911      	ldr	r1, [sp, #68]	; 0x44
9001d466:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001d46a:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001d46c:	ea4f 2825 	mov.w	r8, r5, asr #8
9001d470:	f8b1 c000 	ldrh.w	ip, [r1]
9001d474:	990e      	ldr	r1, [sp, #56]	; 0x38
9001d476:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001d47a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001d47e:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001d482:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001d486:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d48a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001d48e:	fb1e fe01 	smulbb	lr, lr, r1
9001d492:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001d494:	fa5f fc8c 	uxtb.w	ip, ip
9001d498:	fb08 e801 	mla	r8, r8, r1, lr
9001d49c:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001d4a0:	990e      	ldr	r1, [sp, #56]	; 0x38
9001d4a2:	00ed      	lsls	r5, r5, #3
9001d4a4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001d4a8:	fa1f f888 	uxth.w	r8, r8
9001d4ac:	fb19 f901 	smulbb	r9, r9, r1
9001d4b0:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001d4b2:	b2ed      	uxtb	r5, r5
9001d4b4:	fb0e 9e01 	mla	lr, lr, r1, r9
9001d4b8:	990e      	ldr	r1, [sp, #56]	; 0x38
9001d4ba:	fb1c fc01 	smulbb	ip, ip, r1
9001d4be:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001d4c0:	fa1f fe8e 	uxth.w	lr, lr
9001d4c4:	fb05 c501 	mla	r5, r5, r1, ip
9001d4c8:	f108 0c01 	add.w	ip, r8, #1
9001d4cc:	f10e 0901 	add.w	r9, lr, #1
9001d4d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001d4d2:	b2ad      	uxth	r5, r5
9001d4d4:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001d4d8:	f105 0c01 	add.w	ip, r5, #1
9001d4dc:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001d4e0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001d4e4:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001d4e8:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001d4ec:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d4f0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001d4f4:	ea4c 0808 	orr.w	r8, ip, r8
9001d4f8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001d4fc:	ea48 0809 	orr.w	r8, r8, r9
9001d500:	f821 8b02 	strh.w	r8, [r1], #2
9001d504:	910b      	str	r1, [sp, #44]	; 0x2c
9001d506:	e7a5      	b.n	9001d454 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001d508:	f10c 0801 	add.w	r8, ip, #1
9001d50c:	44a4      	add	ip, r4
9001d50e:	9911      	ldr	r1, [sp, #68]	; 0x44
9001d510:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001d514:	fa1f fc88 	uxth.w	ip, r8
9001d518:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001d51c:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001d520:	e763      	b.n	9001d3ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001d522:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d526:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001d52a:	1aad      	subs	r5, r5, r2
9001d52c:	b2ad      	uxth	r5, r5
9001d52e:	2d00      	cmp	r5, #0
9001d530:	bf18      	it	ne
9001d532:	2200      	movne	r2, #0
9001d534:	9201      	str	r2, [sp, #4]
9001d536:	e744      	b.n	9001d3c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001d538:	4b03      	ldr	r3, [pc, #12]	; (9001d548 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001d53a:	6818      	ldr	r0, [r3, #0]
9001d53c:	6803      	ldr	r3, [r0, #0]
9001d53e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d540:	4798      	blx	r3
9001d542:	b01f      	add	sp, #124	; 0x7c
9001d544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d548:	2403989c 	.word	0x2403989c

9001d54c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001d54c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d550:	b08f      	sub	sp, #60	; 0x3c
9001d552:	461c      	mov	r4, r3
9001d554:	460f      	mov	r7, r1
9001d556:	9203      	str	r2, [sp, #12]
9001d558:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001d55c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001d55e:	9202      	str	r2, [sp, #8]
9001d560:	2a00      	cmp	r2, #0
9001d562:	f000 8128 	beq.w	9001d7b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001d566:	6820      	ldr	r0, [r4, #0]
9001d568:	aa0a      	add	r2, sp, #40	; 0x28
9001d56a:	6861      	ldr	r1, [r4, #4]
9001d56c:	c203      	stmia	r2!, {r0, r1}
9001d56e:	6818      	ldr	r0, [r3, #0]
9001d570:	aa0c      	add	r2, sp, #48	; 0x30
9001d572:	6859      	ldr	r1, [r3, #4]
9001d574:	c203      	stmia	r2!, {r0, r1}
9001d576:	a80a      	add	r0, sp, #40	; 0x28
9001d578:	f7f9 fa68 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d57c:	4621      	mov	r1, r4
9001d57e:	a80c      	add	r0, sp, #48	; 0x30
9001d580:	f7f9 faa8 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d584:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001d588:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001d58c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001d590:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001d594:	bfdb      	ittet	le
9001d596:	b2b3      	uxthle	r3, r6
9001d598:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001d59c:	2301      	movgt	r3, #1
9001d59e:	fb92 f3f3 	sdivle	r3, r2, r3
9001d5a2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001d5a6:	441d      	add	r5, r3
9001d5a8:	fb92 f1f3 	sdiv	r1, r2, r3
9001d5ac:	fa1f fc81 	uxth.w	ip, r1
9001d5b0:	3d01      	subs	r5, #1
9001d5b2:	fb0c 2413 	mls	r4, ip, r3, r2
9001d5b6:	4661      	mov	r1, ip
9001d5b8:	fb14 f406 	smulbb	r4, r4, r6
9001d5bc:	4404      	add	r4, r0
9001d5be:	fb95 f5f3 	sdiv	r5, r5, r3
9001d5c2:	b2a4      	uxth	r4, r4
9001d5c4:	b121      	cbz	r1, 9001d5d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001d5c6:	9b03      	ldr	r3, [sp, #12]
9001d5c8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001d5cc:	ba1b      	rev	r3, r3
9001d5ce:	441f      	add	r7, r3
9001d5d0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001d5d4:	b2ad      	uxth	r5, r5
9001d5d6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001d5da:	4418      	add	r0, r3
9001d5dc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001d5e0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001d5e4:	00ad      	lsls	r5, r5, #2
9001d5e6:	441a      	add	r2, r3
9001d5e8:	4b74      	ldr	r3, [pc, #464]	; (9001d7bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001d5ea:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001d5ee:	6818      	ldr	r0, [r3, #0]
9001d5f0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001d5f4:	6803      	ldr	r3, [r0, #0]
9001d5f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d5f8:	4798      	blx	r3
9001d5fa:	4a71      	ldr	r2, [pc, #452]	; (9001d7c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001d5fc:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001d600:	2c00      	cmp	r4, #0
9001d602:	8813      	ldrh	r3, [r2, #0]
9001d604:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001d608:	bf0c      	ite	eq
9001d60a:	46c8      	moveq	r8, r9
9001d60c:	f04f 0800 	movne.w	r8, #0
9001d610:	9209      	str	r2, [sp, #36]	; 0x24
9001d612:	fb03 c101 	mla	r1, r3, r1, ip
9001d616:	4373      	muls	r3, r6
9001d618:	fa1f f888 	uxth.w	r8, r8
9001d61c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001d620:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d624:	9304      	str	r3, [sp, #16]
9001d626:	1d2b      	adds	r3, r5, #4
9001d628:	9305      	str	r3, [sp, #20]
9001d62a:	2300      	movs	r3, #0
9001d62c:	9301      	str	r3, [sp, #4]
9001d62e:	9a04      	ldr	r2, [sp, #16]
9001d630:	4282      	cmp	r2, r0
9001d632:	f240 80bb 	bls.w	9001d7ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001d636:	b95b      	cbnz	r3, 9001d650 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001d638:	783a      	ldrb	r2, [r7, #0]
9001d63a:	0993      	lsrs	r3, r2, #6
9001d63c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001d640:	9201      	str	r2, [sp, #4]
9001d642:	1e5a      	subs	r2, r3, #1
9001d644:	2a02      	cmp	r2, #2
9001d646:	bf8d      	iteet	hi
9001d648:	787b      	ldrbhi	r3, [r7, #1]
9001d64a:	3701      	addls	r7, #1
9001d64c:	b29b      	uxthls	r3, r3
9001d64e:	3702      	addhi	r7, #2
9001d650:	b184      	cbz	r4, 9001d674 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001d652:	429c      	cmp	r4, r3
9001d654:	bf91      	iteee	ls
9001d656:	1b1c      	subls	r4, r3, r4
9001d658:	1ae4      	subhi	r4, r4, r3
9001d65a:	46c4      	movhi	ip, r8
9001d65c:	f04f 0a00 	movhi.w	sl, #0
9001d660:	bf9b      	ittet	ls
9001d662:	fa1f fa84 	uxthls.w	sl, r4
9001d666:	2400      	movls	r4, #0
9001d668:	b2a4      	uxthhi	r4, r4
9001d66a:	fa1f fc89 	uxthls.w	ip, r9
9001d66e:	4653      	mov	r3, sl
9001d670:	46e0      	mov	r8, ip
9001d672:	e7dc      	b.n	9001d62e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001d674:	2204      	movs	r2, #4
9001d676:	9905      	ldr	r1, [sp, #20]
9001d678:	4543      	cmp	r3, r8
9001d67a:	4615      	mov	r5, r2
9001d67c:	9a01      	ldr	r2, [sp, #4]
9001d67e:	bf24      	itt	cs
9001d680:	eba3 0a08 	subcs.w	sl, r3, r8
9001d684:	46c6      	movcs	lr, r8
9001d686:	fb15 1202 	smlabb	r2, r5, r2, r1
9001d68a:	9903      	ldr	r1, [sp, #12]
9001d68c:	bf3c      	itt	cc
9001d68e:	eba8 0c03 	subcc.w	ip, r8, r3
9001d692:	469e      	movcc	lr, r3
9001d694:	588a      	ldr	r2, [r1, r2]
9001d696:	bf26      	itte	cs
9001d698:	fa1f fa8a 	uxthcs.w	sl, sl
9001d69c:	46a4      	movcs	ip, r4
9001d69e:	fa1f fc8c 	uxthcc.w	ip, ip
9001d6a2:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001d6a6:	bf38      	it	cc
9001d6a8:	46a2      	movcc	sl, r4
9001d6aa:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001d6ae:	2900      	cmp	r1, #0
9001d6b0:	d066      	beq.n	9001d780 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001d6b2:	29ff      	cmp	r1, #255	; 0xff
9001d6b4:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001d6b8:	d114      	bne.n	9001d6e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001d6ba:	9d02      	ldr	r5, [sp, #8]
9001d6bc:	2dff      	cmp	r5, #255	; 0xff
9001d6be:	d111      	bne.n	9001d6e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001d6c0:	0951      	lsrs	r1, r2, #5
9001d6c2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001d6c6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001d6ca:	4486      	add	lr, r0
9001d6cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001d6d0:	f026 0607 	bic.w	r6, r6, #7
9001d6d4:	430e      	orrs	r6, r1
9001d6d6:	4316      	orrs	r6, r2
9001d6d8:	b2b6      	uxth	r6, r6
9001d6da:	4586      	cmp	lr, r0
9001d6dc:	d051      	beq.n	9001d782 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001d6de:	f820 6b02 	strh.w	r6, [r0], #2
9001d6e2:	e7fa      	b.n	9001d6da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001d6e4:	9d02      	ldr	r5, [sp, #8]
9001d6e6:	b2f6      	uxtb	r6, r6
9001d6e8:	4486      	add	lr, r0
9001d6ea:	4369      	muls	r1, r5
9001d6ec:	1c4d      	adds	r5, r1, #1
9001d6ee:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001d6f2:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001d6f6:	b2d2      	uxtb	r2, r2
9001d6f8:	122d      	asrs	r5, r5, #8
9001d6fa:	ea6f 0b05 	mvn.w	fp, r5
9001d6fe:	b2ad      	uxth	r5, r5
9001d700:	fb11 f105 	smulbb	r1, r1, r5
9001d704:	fa5f fb8b 	uxtb.w	fp, fp
9001d708:	fb16 f605 	smulbb	r6, r6, r5
9001d70c:	fb12 f205 	smulbb	r2, r2, r5
9001d710:	b289      	uxth	r1, r1
9001d712:	b2b6      	uxth	r6, r6
9001d714:	b292      	uxth	r2, r2
9001d716:	9106      	str	r1, [sp, #24]
9001d718:	9607      	str	r6, [sp, #28]
9001d71a:	9208      	str	r2, [sp, #32]
9001d71c:	4586      	cmp	lr, r0
9001d71e:	d030      	beq.n	9001d782 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001d720:	8802      	ldrh	r2, [r0, #0]
9001d722:	9906      	ldr	r1, [sp, #24]
9001d724:	1216      	asrs	r6, r2, #8
9001d726:	10d5      	asrs	r5, r2, #3
9001d728:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d72c:	00d2      	lsls	r2, r2, #3
9001d72e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001d732:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001d736:	b2d2      	uxtb	r2, r2
9001d738:	fb06 160b 	mla	r6, r6, fp, r1
9001d73c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001d740:	9907      	ldr	r1, [sp, #28]
9001d742:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d746:	b2b6      	uxth	r6, r6
9001d748:	fb05 150b 	mla	r5, r5, fp, r1
9001d74c:	9908      	ldr	r1, [sp, #32]
9001d74e:	fb02 120b 	mla	r2, r2, fp, r1
9001d752:	1c71      	adds	r1, r6, #1
9001d754:	b2ad      	uxth	r5, r5
9001d756:	b292      	uxth	r2, r2
9001d758:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001d75c:	1c51      	adds	r1, r2, #1
9001d75e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001d762:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001d766:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d76a:	4316      	orrs	r6, r2
9001d76c:	1c6a      	adds	r2, r5, #1
9001d76e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001d772:	096d      	lsrs	r5, r5, #5
9001d774:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d778:	432e      	orrs	r6, r5
9001d77a:	f820 6b02 	strh.w	r6, [r0], #2
9001d77e:	e7cd      	b.n	9001d71c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001d780:	4470      	add	r0, lr
9001d782:	4543      	cmp	r3, r8
9001d784:	f4ff af73 	bcc.w	9001d66e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001d788:	fa1f fc89 	uxth.w	ip, r9
9001d78c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001d790:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001d792:	eba4 040c 	sub.w	r4, r4, ip
9001d796:	881b      	ldrh	r3, [r3, #0]
9001d798:	b2a4      	uxth	r4, r4
9001d79a:	eba3 0309 	sub.w	r3, r3, r9
9001d79e:	2c00      	cmp	r4, #0
9001d7a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d7a4:	bf18      	it	ne
9001d7a6:	f04f 0c00 	movne.w	ip, #0
9001d7aa:	e760      	b.n	9001d66e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001d7ac:	4b03      	ldr	r3, [pc, #12]	; (9001d7bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001d7ae:	6818      	ldr	r0, [r3, #0]
9001d7b0:	6803      	ldr	r3, [r0, #0]
9001d7b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d7b4:	4798      	blx	r3
9001d7b6:	b00f      	add	sp, #60	; 0x3c
9001d7b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d7bc:	2403989c 	.word	0x2403989c
9001d7c0:	24039896 	.word	0x24039896

9001d7c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001d7c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d7c8:	b093      	sub	sp, #76	; 0x4c
9001d7ca:	461c      	mov	r4, r3
9001d7cc:	9205      	str	r2, [sp, #20]
9001d7ce:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001d7d2:	9101      	str	r1, [sp, #4]
9001d7d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001d7d6:	9202      	str	r2, [sp, #8]
9001d7d8:	2a00      	cmp	r2, #0
9001d7da:	f000 812e 	beq.w	9001da3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001d7de:	6820      	ldr	r0, [r4, #0]
9001d7e0:	aa0e      	add	r2, sp, #56	; 0x38
9001d7e2:	6861      	ldr	r1, [r4, #4]
9001d7e4:	c203      	stmia	r2!, {r0, r1}
9001d7e6:	6818      	ldr	r0, [r3, #0]
9001d7e8:	aa10      	add	r2, sp, #64	; 0x40
9001d7ea:	6859      	ldr	r1, [r3, #4]
9001d7ec:	c203      	stmia	r2!, {r0, r1}
9001d7ee:	a80e      	add	r0, sp, #56	; 0x38
9001d7f0:	f7f9 f92c 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d7f4:	4621      	mov	r1, r4
9001d7f6:	a810      	add	r0, sp, #64	; 0x40
9001d7f8:	f7f9 f96c 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d7fc:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001d800:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001d804:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001d808:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001d80c:	bfdb      	ittet	le
9001d80e:	b2b3      	uxthle	r3, r6
9001d810:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001d814:	2301      	movgt	r3, #1
9001d816:	fb92 f3f3 	sdivle	r3, r2, r3
9001d81a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001d81e:	441d      	add	r5, r3
9001d820:	fb92 f1f3 	sdiv	r1, r2, r3
9001d824:	fa1f fc81 	uxth.w	ip, r1
9001d828:	3d01      	subs	r5, #1
9001d82a:	fb0c 2413 	mls	r4, ip, r3, r2
9001d82e:	4661      	mov	r1, ip
9001d830:	fb14 f406 	smulbb	r4, r4, r6
9001d834:	4404      	add	r4, r0
9001d836:	fb95 f5f3 	sdiv	r5, r5, r3
9001d83a:	b2a4      	uxth	r4, r4
9001d83c:	b131      	cbz	r1, 9001d84c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001d83e:	9b05      	ldr	r3, [sp, #20]
9001d840:	9901      	ldr	r1, [sp, #4]
9001d842:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001d846:	ba1b      	rev	r3, r3
9001d848:	4419      	add	r1, r3
9001d84a:	9101      	str	r1, [sp, #4]
9001d84c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001d850:	b2ad      	uxth	r5, r5
9001d852:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001d856:	4418      	add	r0, r3
9001d858:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001d85c:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001d860:	00ad      	lsls	r5, r5, #2
9001d862:	441a      	add	r2, r3
9001d864:	4b76      	ldr	r3, [pc, #472]	; (9001da40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001d866:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001d86a:	6818      	ldr	r0, [r3, #0]
9001d86c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001d870:	6803      	ldr	r3, [r0, #0]
9001d872:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d874:	4798      	blx	r3
9001d876:	4973      	ldr	r1, [pc, #460]	; (9001da44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001d878:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001d87c:	2c00      	cmp	r4, #0
9001d87e:	880b      	ldrh	r3, [r1, #0]
9001d880:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001d884:	910d      	str	r1, [sp, #52]	; 0x34
9001d886:	fb03 c202 	mla	r2, r3, r2, ip
9001d88a:	bf08      	it	eq
9001d88c:	46dc      	moveq	ip, fp
9001d88e:	fb03 f306 	mul.w	r3, r3, r6
9001d892:	bf18      	it	ne
9001d894:	f04f 0c00 	movne.w	ip, #0
9001d898:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d89c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001d8a0:	fa1f fc8c 	uxth.w	ip, ip
9001d8a4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d8a8:	9106      	str	r1, [sp, #24]
9001d8aa:	9308      	str	r3, [sp, #32]
9001d8ac:	1d2b      	adds	r3, r5, #4
9001d8ae:	9309      	str	r3, [sp, #36]	; 0x24
9001d8b0:	9b02      	ldr	r3, [sp, #8]
9001d8b2:	43da      	mvns	r2, r3
9001d8b4:	2300      	movs	r3, #0
9001d8b6:	b2d2      	uxtb	r2, r2
9001d8b8:	9303      	str	r3, [sp, #12]
9001d8ba:	9207      	str	r2, [sp, #28]
9001d8bc:	9a08      	ldr	r2, [sp, #32]
9001d8be:	4282      	cmp	r2, r0
9001d8c0:	f240 80b6 	bls.w	9001da30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001d8c4:	b963      	cbnz	r3, 9001d8e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001d8c6:	9b01      	ldr	r3, [sp, #4]
9001d8c8:	781a      	ldrb	r2, [r3, #0]
9001d8ca:	0993      	lsrs	r3, r2, #6
9001d8cc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001d8d0:	9203      	str	r2, [sp, #12]
9001d8d2:	1e5a      	subs	r2, r3, #1
9001d8d4:	2a02      	cmp	r2, #2
9001d8d6:	d815      	bhi.n	9001d904 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001d8d8:	9a01      	ldr	r2, [sp, #4]
9001d8da:	b29b      	uxth	r3, r3
9001d8dc:	3201      	adds	r2, #1
9001d8de:	9201      	str	r2, [sp, #4]
9001d8e0:	b1b4      	cbz	r4, 9001d910 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001d8e2:	429c      	cmp	r4, r3
9001d8e4:	bf91      	iteee	ls
9001d8e6:	1b1c      	subls	r4, r3, r4
9001d8e8:	1ae4      	subhi	r4, r4, r3
9001d8ea:	4666      	movhi	r6, ip
9001d8ec:	f04f 0800 	movhi.w	r8, #0
9001d8f0:	bf9b      	ittet	ls
9001d8f2:	fa1f f884 	uxthls.w	r8, r4
9001d8f6:	2400      	movls	r4, #0
9001d8f8:	b2a4      	uxthhi	r4, r4
9001d8fa:	fa1f f68b 	uxthls.w	r6, fp
9001d8fe:	4643      	mov	r3, r8
9001d900:	46b4      	mov	ip, r6
9001d902:	e7db      	b.n	9001d8bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001d904:	9a01      	ldr	r2, [sp, #4]
9001d906:	9b01      	ldr	r3, [sp, #4]
9001d908:	3202      	adds	r2, #2
9001d90a:	785b      	ldrb	r3, [r3, #1]
9001d90c:	9201      	str	r2, [sp, #4]
9001d90e:	e7e7      	b.n	9001d8e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001d910:	2203      	movs	r2, #3
9001d912:	9909      	ldr	r1, [sp, #36]	; 0x24
9001d914:	4563      	cmp	r3, ip
9001d916:	4615      	mov	r5, r2
9001d918:	9a03      	ldr	r2, [sp, #12]
9001d91a:	bf2c      	ite	cs
9001d91c:	eba3 080c 	subcs.w	r8, r3, ip
9001d920:	ebac 0603 	subcc.w	r6, ip, r3
9001d924:	fb15 1202 	smlabb	r2, r5, r2, r1
9001d928:	9905      	ldr	r1, [sp, #20]
9001d92a:	bf24      	itt	cs
9001d92c:	fa1f f888 	uxthcs.w	r8, r8
9001d930:	46e1      	movcs	r9, ip
9001d932:	eb01 0502 	add.w	r5, r1, r2
9001d936:	9902      	ldr	r1, [sp, #8]
9001d938:	bf2f      	iteee	cs
9001d93a:	4626      	movcs	r6, r4
9001d93c:	b2b6      	uxthcc	r6, r6
9001d93e:	4699      	movcc	r9, r3
9001d940:	46a0      	movcc	r8, r4
9001d942:	29ff      	cmp	r1, #255	; 0xff
9001d944:	d04a      	beq.n	9001d9dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001d946:	9f06      	ldr	r7, [sp, #24]
9001d948:	46ca      	mov	sl, r9
9001d94a:	78a9      	ldrb	r1, [r5, #2]
9001d94c:	9004      	str	r0, [sp, #16]
9001d94e:	4379      	muls	r1, r7
9001d950:	910a      	str	r1, [sp, #40]	; 0x28
9001d952:	7869      	ldrb	r1, [r5, #1]
9001d954:	4379      	muls	r1, r7
9001d956:	910b      	str	r1, [sp, #44]	; 0x2c
9001d958:	9905      	ldr	r1, [sp, #20]
9001d95a:	5c8a      	ldrb	r2, [r1, r2]
9001d95c:	437a      	muls	r2, r7
9001d95e:	920c      	str	r2, [sp, #48]	; 0x30
9001d960:	f1ba 0f00 	cmp.w	sl, #0
9001d964:	d03d      	beq.n	9001d9e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001d966:	9a04      	ldr	r2, [sp, #16]
9001d968:	f10a 3aff 	add.w	sl, sl, #4294967295
9001d96c:	9f07      	ldr	r7, [sp, #28]
9001d96e:	8812      	ldrh	r2, [r2, #0]
9001d970:	fa1f fa8a 	uxth.w	sl, sl
9001d974:	46be      	mov	lr, r7
9001d976:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001d978:	1215      	asrs	r5, r2, #8
9001d97a:	10d1      	asrs	r1, r2, #3
9001d97c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001d980:	00d2      	lsls	r2, r2, #3
9001d982:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001d986:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001d98a:	b2d2      	uxtb	r2, r2
9001d98c:	fb05 750e 	mla	r5, r5, lr, r7
9001d990:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001d994:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001d996:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d99a:	b2ad      	uxth	r5, r5
9001d99c:	fb01 710e 	mla	r1, r1, lr, r7
9001d9a0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001d9a2:	fb02 720e 	mla	r2, r2, lr, r7
9001d9a6:	f105 0e01 	add.w	lr, r5, #1
9001d9aa:	b289      	uxth	r1, r1
9001d9ac:	b292      	uxth	r2, r2
9001d9ae:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001d9b2:	f102 0e01 	add.w	lr, r2, #1
9001d9b6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001d9ba:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001d9be:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d9c2:	4315      	orrs	r5, r2
9001d9c4:	1c4a      	adds	r2, r1, #1
9001d9c6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001d9ca:	9a04      	ldr	r2, [sp, #16]
9001d9cc:	0949      	lsrs	r1, r1, #5
9001d9ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001d9d2:	430d      	orrs	r5, r1
9001d9d4:	f822 5b02 	strh.w	r5, [r2], #2
9001d9d8:	9204      	str	r2, [sp, #16]
9001d9da:	e7c1      	b.n	9001d960 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001d9dc:	4649      	mov	r1, r9
9001d9de:	4686      	mov	lr, r0
9001d9e0:	b999      	cbnz	r1, 9001da0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001d9e2:	4563      	cmp	r3, ip
9001d9e4:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001d9e8:	d389      	bcc.n	9001d8fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001d9ea:	fa1f f68b 	uxth.w	r6, fp
9001d9ee:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001d9f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d9f4:	1ba4      	subs	r4, r4, r6
9001d9f6:	881b      	ldrh	r3, [r3, #0]
9001d9f8:	b2a4      	uxth	r4, r4
9001d9fa:	eba3 030b 	sub.w	r3, r3, fp
9001d9fe:	2c00      	cmp	r4, #0
9001da00:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001da04:	bf18      	it	ne
9001da06:	2600      	movne	r6, #0
9001da08:	e779      	b.n	9001d8fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001da0a:	78aa      	ldrb	r2, [r5, #2]
9001da0c:	3901      	subs	r1, #1
9001da0e:	4f0e      	ldr	r7, [pc, #56]	; (9001da48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001da10:	b289      	uxth	r1, r1
9001da12:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001da16:	786a      	ldrb	r2, [r5, #1]
9001da18:	00d2      	lsls	r2, r2, #3
9001da1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001da1e:	ea4a 0202 	orr.w	r2, sl, r2
9001da22:	f895 a000 	ldrb.w	sl, [r5]
9001da26:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001da2a:	f82e 2b02 	strh.w	r2, [lr], #2
9001da2e:	e7d7      	b.n	9001d9e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001da30:	4b03      	ldr	r3, [pc, #12]	; (9001da40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001da32:	6818      	ldr	r0, [r3, #0]
9001da34:	6803      	ldr	r3, [r0, #0]
9001da36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001da38:	4798      	blx	r3
9001da3a:	b013      	add	sp, #76	; 0x4c
9001da3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001da40:	2403989c 	.word	0x2403989c
9001da44:	24039896 	.word	0x24039896
9001da48:	fffff800 	.word	0xfffff800

9001da4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001da4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001da50:	b09d      	sub	sp, #116	; 0x74
9001da52:	461c      	mov	r4, r3
9001da54:	4683      	mov	fp, r0
9001da56:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001da58:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001da5c:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001da60:	920e      	str	r2, [sp, #56]	; 0x38
9001da62:	2a00      	cmp	r2, #0
9001da64:	f000 81e4 	beq.w	9001de30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001da68:	6820      	ldr	r0, [r4, #0]
9001da6a:	aa18      	add	r2, sp, #96	; 0x60
9001da6c:	6861      	ldr	r1, [r4, #4]
9001da6e:	c203      	stmia	r2!, {r0, r1}
9001da70:	6818      	ldr	r0, [r3, #0]
9001da72:	aa1a      	add	r2, sp, #104	; 0x68
9001da74:	6859      	ldr	r1, [r3, #4]
9001da76:	c203      	stmia	r2!, {r0, r1}
9001da78:	a818      	add	r0, sp, #96	; 0x60
9001da7a:	f7f8 ffe7 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001da7e:	4621      	mov	r1, r4
9001da80:	a81a      	add	r0, sp, #104	; 0x68
9001da82:	f7f9 f827 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001da86:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001da8a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001da8e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001da92:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001da96:	bfdb      	ittet	le
9001da98:	b29a      	uxthle	r2, r3
9001da9a:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001da9e:	2201      	movgt	r2, #1
9001daa0:	fb91 f2f2 	sdivle	r2, r1, r2
9001daa4:	9202      	str	r2, [sp, #8]
9001daa6:	9802      	ldr	r0, [sp, #8]
9001daa8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001daac:	9902      	ldr	r1, [sp, #8]
9001daae:	fb92 f0f0 	sdiv	r0, r2, r0
9001dab2:	b280      	uxth	r0, r0
9001dab4:	440c      	add	r4, r1
9001dab6:	900f      	str	r0, [sp, #60]	; 0x3c
9001dab8:	3c01      	subs	r4, #1
9001daba:	9802      	ldr	r0, [sp, #8]
9001dabc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001dabe:	fb05 2510 	mls	r5, r5, r0, r2
9001dac2:	fb94 f4f1 	sdiv	r4, r4, r1
9001dac6:	fb15 f503 	smulbb	r5, r5, r3
9001daca:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001dace:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001dad2:	3401      	adds	r4, #1
9001dad4:	440d      	add	r5, r1
9001dad6:	4419      	add	r1, r3
9001dad8:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001dadc:	b2a4      	uxth	r4, r4
9001dade:	441a      	add	r2, r3
9001dae0:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001dae4:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001dae8:	00a4      	lsls	r4, r4, #2
9001daea:	9306      	str	r3, [sp, #24]
9001daec:	b2ad      	uxth	r5, r5
9001daee:	4bb3      	ldr	r3, [pc, #716]	; (9001ddbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001daf0:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001daf4:	6818      	ldr	r0, [r3, #0]
9001daf6:	6803      	ldr	r3, [r0, #0]
9001daf8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001dafa:	4798      	blx	r3
9001dafc:	4bb0      	ldr	r3, [pc, #704]	; (9001ddc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001dafe:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001db02:	2d00      	cmp	r5, #0
9001db04:	881a      	ldrh	r2, [r3, #0]
9001db06:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001db0a:	fb02 f606 	mul.w	r6, r2, r6
9001db0e:	fb02 7101 	mla	r1, r2, r1, r7
9001db12:	9316      	str	r3, [sp, #88]	; 0x58
9001db14:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001db18:	4baa      	ldr	r3, [pc, #680]	; (9001ddc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001db1a:	bf18      	it	ne
9001db1c:	2100      	movne	r1, #0
9001db1e:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001db22:	eba3 030b 	sub.w	r3, r3, fp
9001db26:	920a      	str	r2, [sp, #40]	; 0x28
9001db28:	f104 0204 	add.w	r2, r4, #4
9001db2c:	9317      	str	r3, [sp, #92]	; 0x5c
9001db2e:	9213      	str	r2, [sp, #76]	; 0x4c
9001db30:	9a06      	ldr	r2, [sp, #24]
9001db32:	bf08      	it	eq
9001db34:	4611      	moveq	r1, r2
9001db36:	2200      	movs	r2, #0
9001db38:	b289      	uxth	r1, r1
9001db3a:	920d      	str	r2, [sp, #52]	; 0x34
9001db3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001db3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001db40:	fa12 f383 	uxtah	r3, r2, r3
9001db44:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001db46:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001db4a:	3304      	adds	r3, #4
9001db4c:	9308      	str	r3, [sp, #32]
9001db4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001db50:	4543      	cmp	r3, r8
9001db52:	f240 8168 	bls.w	9001de26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001db56:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001db5a:	f04f 0e01 	mov.w	lr, #1
9001db5e:	9a02      	ldr	r2, [sp, #8]
9001db60:	9808      	ldr	r0, [sp, #32]
9001db62:	fbb5 f3f3 	udiv	r3, r5, r3
9001db66:	1ad3      	subs	r3, r2, r3
9001db68:	7800      	ldrb	r0, [r0, #0]
9001db6a:	b29b      	uxth	r3, r3
9001db6c:	9010      	str	r0, [sp, #64]	; 0x40
9001db6e:	3001      	adds	r0, #1
9001db70:	9314      	str	r3, [sp, #80]	; 0x50
9001db72:	9b08      	ldr	r3, [sp, #32]
9001db74:	9007      	str	r0, [sp, #28]
9001db76:	785a      	ldrb	r2, [r3, #1]
9001db78:	789b      	ldrb	r3, [r3, #2]
9001db7a:	021b      	lsls	r3, r3, #8
9001db7c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001db80:	9a08      	ldr	r2, [sp, #32]
9001db82:	78d2      	ldrb	r2, [r2, #3]
9001db84:	4313      	orrs	r3, r2
9001db86:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001db88:	441a      	add	r2, r3
9001db8a:	1c50      	adds	r0, r2, #1
9001db8c:	7852      	ldrb	r2, [r2, #1]
9001db8e:	9005      	str	r0, [sp, #20]
9001db90:	0212      	lsls	r2, r2, #8
9001db92:	9811      	ldr	r0, [sp, #68]	; 0x44
9001db94:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001db98:	5cc3      	ldrb	r3, [r0, r3]
9001db9a:	431a      	orrs	r2, r3
9001db9c:	b293      	uxth	r3, r2
9001db9e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001dba2:	930b      	str	r3, [sp, #44]	; 0x2c
9001dba4:	2300      	movs	r3, #0
9001dba6:	9309      	str	r3, [sp, #36]	; 0x24
9001dba8:	2301      	movs	r3, #1
9001dbaa:	9301      	str	r3, [sp, #4]
9001dbac:	9304      	str	r3, [sp, #16]
9001dbae:	2300      	movs	r3, #0
9001dbb0:	9303      	str	r3, [sp, #12]
9001dbb2:	2d00      	cmp	r5, #0
9001dbb4:	d07d      	beq.n	9001dcb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001dbb6:	45ae      	cmp	lr, r5
9001dbb8:	d26c      	bcs.n	9001dc94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001dbba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001dbbc:	eba5 050e 	sub.w	r5, r5, lr
9001dbc0:	460c      	mov	r4, r1
9001dbc2:	4543      	cmp	r3, r8
9001dbc4:	b2ad      	uxth	r5, r5
9001dbc6:	d802      	bhi.n	9001dbce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001dbc8:	e071      	b.n	9001dcae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001dbca:	2b00      	cmp	r3, #0
9001dbcc:	d15d      	bne.n	9001dc8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001dbce:	9b05      	ldr	r3, [sp, #20]
9001dbd0:	9a04      	ldr	r2, [sp, #16]
9001dbd2:	785b      	ldrb	r3, [r3, #1]
9001dbd4:	f1c2 0207 	rsb	r2, r2, #7
9001dbd8:	9904      	ldr	r1, [sp, #16]
9001dbda:	4093      	lsls	r3, r2
9001dbdc:	005b      	lsls	r3, r3, #1
9001dbde:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001dbe2:	9b05      	ldr	r3, [sp, #20]
9001dbe4:	781b      	ldrb	r3, [r3, #0]
9001dbe6:	410b      	asrs	r3, r1
9001dbe8:	3101      	adds	r1, #1
9001dbea:	b2c9      	uxtb	r1, r1
9001dbec:	b2db      	uxtb	r3, r3
9001dbee:	2908      	cmp	r1, #8
9001dbf0:	9104      	str	r1, [sp, #16]
9001dbf2:	9905      	ldr	r1, [sp, #20]
9001dbf4:	ea43 0302 	orr.w	r3, r3, r2
9001dbf8:	bf0c      	ite	eq
9001dbfa:	3102      	addeq	r1, #2
9001dbfc:	3101      	addne	r1, #1
9001dbfe:	b29a      	uxth	r2, r3
9001dc00:	bf05      	ittet	eq
9001dc02:	9105      	streq	r1, [sp, #20]
9001dc04:	2100      	moveq	r1, #0
9001dc06:	9105      	strne	r1, [sp, #20]
9001dc08:	9104      	streq	r1, [sp, #16]
9001dc0a:	9910      	ldr	r1, [sp, #64]	; 0x40
9001dc0c:	4291      	cmp	r1, r2
9001dc0e:	d30a      	bcc.n	9001dc26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001dc10:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001dc14:	2301      	movs	r3, #1
9001dc16:	9907      	ldr	r1, [sp, #28]
9001dc18:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001dc1c:	d30f      	bcc.n	9001dc3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001dc1e:	2100      	movs	r1, #0
9001dc20:	9301      	str	r3, [sp, #4]
9001dc22:	9103      	str	r1, [sp, #12]
9001dc24:	e032      	b.n	9001dc8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001dc26:	9b07      	ldr	r3, [sp, #28]
9001dc28:	429a      	cmp	r2, r3
9001dc2a:	d318      	bcc.n	9001dc5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001dc2c:	9b01      	ldr	r3, [sp, #4]
9001dc2e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001dc32:	445b      	add	r3, fp
9001dc34:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001dc38:	9b01      	ldr	r3, [sp, #4]
9001dc3a:	3301      	adds	r3, #1
9001dc3c:	b29b      	uxth	r3, r3
9001dc3e:	9907      	ldr	r1, [sp, #28]
9001dc40:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001dc44:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001dc48:	7108      	strb	r0, [r1, #4]
9001dc4a:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001dc4c:	80c8      	strh	r0, [r1, #6]
9001dc4e:	9801      	ldr	r0, [sp, #4]
9001dc50:	3001      	adds	r0, #1
9001dc52:	7148      	strb	r0, [r1, #5]
9001dc54:	9907      	ldr	r1, [sp, #28]
9001dc56:	3101      	adds	r1, #1
9001dc58:	b289      	uxth	r1, r1
9001dc5a:	9107      	str	r1, [sp, #28]
9001dc5c:	e7df      	b.n	9001dc1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001dc5e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001dc62:	4611      	mov	r1, r2
9001dc64:	795b      	ldrb	r3, [r3, #5]
9001dc66:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001dc6a:	4458      	add	r0, fp
9001dc6c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001dc6e:	4406      	add	r6, r0
9001dc70:	2e00      	cmp	r6, #0
9001dc72:	dd06      	ble.n	9001dc82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001dc74:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001dc78:	790e      	ldrb	r6, [r1, #4]
9001dc7a:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001dc7e:	88c9      	ldrh	r1, [r1, #6]
9001dc80:	e7f4      	b.n	9001dc6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001dc82:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001dc86:	b29b      	uxth	r3, r3
9001dc88:	e7c5      	b.n	9001dc16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001dc8a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001dc8c:	4621      	mov	r1, r4
9001dc8e:	920b      	str	r2, [sp, #44]	; 0x2c
9001dc90:	469e      	mov	lr, r3
9001dc92:	e78e      	b.n	9001dbb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001dc94:	9a03      	ldr	r2, [sp, #12]
9001dc96:	ebae 0305 	sub.w	r3, lr, r5
9001dc9a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001dc9e:	442a      	add	r2, r5
9001dca0:	b29b      	uxth	r3, r3
9001dca2:	b292      	uxth	r2, r2
9001dca4:	9203      	str	r2, [sp, #12]
9001dca6:	2500      	movs	r5, #0
9001dca8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001dcaa:	4542      	cmp	r2, r8
9001dcac:	d88d      	bhi.n	9001dbca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001dcae:	4621      	mov	r1, r4
9001dcb0:	e74d      	b.n	9001db4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001dcb2:	458e      	cmp	lr, r1
9001dcb4:	f04f 0900 	mov.w	r9, #0
9001dcb8:	bf2b      	itete	cs
9001dcba:	ebae 0301 	subcs.w	r3, lr, r1
9001dcbe:	eba1 040e 	subcc.w	r4, r1, lr
9001dcc2:	462c      	movcs	r4, r5
9001dcc4:	462b      	movcc	r3, r5
9001dcc6:	bf27      	ittee	cs
9001dcc8:	b29b      	uxthcs	r3, r3
9001dcca:	910c      	strcs	r1, [sp, #48]	; 0x30
9001dccc:	b2a4      	uxthcc	r4, r4
9001dcce:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001dcd2:	9a03      	ldr	r2, [sp, #12]
9001dcd4:	980c      	ldr	r0, [sp, #48]	; 0x30
9001dcd6:	444a      	add	r2, r9
9001dcd8:	4548      	cmp	r0, r9
9001dcda:	b292      	uxth	r2, r2
9001dcdc:	d074      	beq.n	9001ddc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001dcde:	2004      	movs	r0, #4
9001dce0:	445a      	add	r2, fp
9001dce2:	4605      	mov	r5, r0
9001dce4:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001dce8:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001dcea:	fb15 0202 	smlabb	r2, r5, r2, r0
9001dcee:	9812      	ldr	r0, [sp, #72]	; 0x48
9001dcf0:	5880      	ldr	r0, [r0, r2]
9001dcf2:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001dcf6:	d014      	beq.n	9001dd22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001dcf8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001dcfc:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001dd00:	d112      	bne.n	9001dd28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001dd02:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001dd04:	2aff      	cmp	r2, #255	; 0xff
9001dd06:	d10f      	bne.n	9001dd28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001dd08:	0942      	lsrs	r2, r0, #5
9001dd0a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001dd0e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001dd12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001dd16:	f025 0507 	bic.w	r5, r5, #7
9001dd1a:	4315      	orrs	r5, r2
9001dd1c:	4305      	orrs	r5, r0
9001dd1e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001dd22:	f109 0901 	add.w	r9, r9, #1
9001dd26:	e7d4      	b.n	9001dcd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001dd28:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001dd2c:	b2ed      	uxtb	r5, r5
9001dd2e:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001dd32:	ea4f 272c 	mov.w	r7, ip, asr #8
9001dd36:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001dd3a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001dd3e:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001dd42:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001dd46:	9215      	str	r2, [sp, #84]	; 0x54
9001dd48:	fa5f fc8c 	uxtb.w	ip, ip
9001dd4c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001dd4e:	b2c0      	uxtb	r0, r0
9001dd50:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001dd54:	fb02 fa0a 	mul.w	sl, r2, sl
9001dd58:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001dd5c:	f10a 0201 	add.w	r2, sl, #1
9001dd60:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001dd64:	1212      	asrs	r2, r2, #8
9001dd66:	fa1f fa82 	uxth.w	sl, r2
9001dd6a:	43d2      	mvns	r2, r2
9001dd6c:	fb16 f60a 	smulbb	r6, r6, sl
9001dd70:	b2d2      	uxtb	r2, r2
9001dd72:	fb10 f00a 	smulbb	r0, r0, sl
9001dd76:	fb07 6702 	mla	r7, r7, r2, r6
9001dd7a:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001dd7c:	fb0c 0002 	mla	r0, ip, r2, r0
9001dd80:	fb15 f50a 	smulbb	r5, r5, sl
9001dd84:	b2bf      	uxth	r7, r7
9001dd86:	b280      	uxth	r0, r0
9001dd88:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001dd8c:	fb06 5602 	mla	r6, r6, r2, r5
9001dd90:	1c7a      	adds	r2, r7, #1
9001dd92:	1c45      	adds	r5, r0, #1
9001dd94:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001dd98:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001dd9c:	b2b6      	uxth	r6, r6
9001dd9e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001dda2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001dda6:	432f      	orrs	r7, r5
9001dda8:	1c75      	adds	r5, r6, #1
9001ddaa:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001ddae:	096d      	lsrs	r5, r5, #5
9001ddb0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001ddb4:	432f      	orrs	r7, r5
9001ddb6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001ddba:	e7b2      	b.n	9001dd22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001ddbc:	2403989c 	.word	0x2403989c
9001ddc0:	24039896 	.word	0x24039896
9001ddc4:	fffff7fb 	.word	0xfffff7fb
9001ddc8:	9203      	str	r2, [sp, #12]
9001ddca:	458e      	cmp	lr, r1
9001ddcc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001ddce:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001ddd2:	f4ff af68 	bcc.w	9001dca6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001ddd6:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001ddd8:	9906      	ldr	r1, [sp, #24]
9001ddda:	8812      	ldrh	r2, [r2, #0]
9001dddc:	1a52      	subs	r2, r2, r1
9001ddde:	9914      	ldr	r1, [sp, #80]	; 0x50
9001dde0:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001dde4:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001dde6:	3201      	adds	r2, #1
9001dde8:	428a      	cmp	r2, r1
9001ddea:	9209      	str	r2, [sp, #36]	; 0x24
9001ddec:	d111      	bne.n	9001de12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001ddee:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001ddf2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001ddf6:	9b06      	ldr	r3, [sp, #24]
9001ddf8:	eba5 0509 	sub.w	r5, r5, r9
9001ddfc:	b2ad      	uxth	r5, r5
9001ddfe:	2d00      	cmp	r5, #0
9001de00:	bf08      	it	eq
9001de02:	4619      	moveq	r1, r3
9001de04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001de06:	bf18      	it	ne
9001de08:	2100      	movne	r1, #0
9001de0a:	3301      	adds	r3, #1
9001de0c:	b289      	uxth	r1, r1
9001de0e:	930d      	str	r3, [sp, #52]	; 0x34
9001de10:	e694      	b.n	9001db3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001de12:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001de16:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001de1a:	1b2d      	subs	r5, r5, r4
9001de1c:	b2ad      	uxth	r5, r5
9001de1e:	2d00      	cmp	r5, #0
9001de20:	bf18      	it	ne
9001de22:	2400      	movne	r4, #0
9001de24:	e740      	b.n	9001dca8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001de26:	4b04      	ldr	r3, [pc, #16]	; (9001de38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001de28:	6818      	ldr	r0, [r3, #0]
9001de2a:	6803      	ldr	r3, [r0, #0]
9001de2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001de2e:	4798      	blx	r3
9001de30:	b01d      	add	sp, #116	; 0x74
9001de32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001de36:	bf00      	nop
9001de38:	2403989c 	.word	0x2403989c

9001de3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001de3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001de40:	b09f      	sub	sp, #124	; 0x7c
9001de42:	461d      	mov	r5, r3
9001de44:	4604      	mov	r4, r0
9001de46:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001de48:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001de4c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001de50:	920a      	str	r2, [sp, #40]	; 0x28
9001de52:	2a00      	cmp	r2, #0
9001de54:	f000 81fe 	beq.w	9001e254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001de58:	6828      	ldr	r0, [r5, #0]
9001de5a:	aa1a      	add	r2, sp, #104	; 0x68
9001de5c:	6869      	ldr	r1, [r5, #4]
9001de5e:	c203      	stmia	r2!, {r0, r1}
9001de60:	6818      	ldr	r0, [r3, #0]
9001de62:	aa1c      	add	r2, sp, #112	; 0x70
9001de64:	6859      	ldr	r1, [r3, #4]
9001de66:	c203      	stmia	r2!, {r0, r1}
9001de68:	a81a      	add	r0, sp, #104	; 0x68
9001de6a:	f7f8 fdef 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001de6e:	4629      	mov	r1, r5
9001de70:	a81c      	add	r0, sp, #112	; 0x70
9001de72:	f7f8 fe2f 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001de76:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001de7a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001de7e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001de82:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001de86:	bfdb      	ittet	le
9001de88:	b29a      	uxthle	r2, r3
9001de8a:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001de8e:	2201      	movgt	r2, #1
9001de90:	fb91 f2f2 	sdivle	r2, r1, r2
9001de94:	9201      	str	r2, [sp, #4]
9001de96:	9801      	ldr	r0, [sp, #4]
9001de98:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001de9c:	9901      	ldr	r1, [sp, #4]
9001de9e:	fb92 f0f0 	sdiv	r0, r2, r0
9001dea2:	b280      	uxth	r0, r0
9001dea4:	440e      	add	r6, r1
9001dea6:	9010      	str	r0, [sp, #64]	; 0x40
9001dea8:	3e01      	subs	r6, #1
9001deaa:	9801      	ldr	r0, [sp, #4]
9001deac:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001deae:	fb05 2510 	mls	r5, r5, r0, r2
9001deb2:	fb96 f6f1 	sdiv	r6, r6, r1
9001deb6:	fb15 f503 	smulbb	r5, r5, r3
9001deba:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001debe:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001dec2:	3601      	adds	r6, #1
9001dec4:	440d      	add	r5, r1
9001dec6:	4419      	add	r1, r3
9001dec8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001decc:	b2b6      	uxth	r6, r6
9001dece:	441a      	add	r2, r3
9001ded0:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001ded4:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001ded8:	b2ad      	uxth	r5, r5
9001deda:	9304      	str	r3, [sp, #16]
9001dedc:	4b96      	ldr	r3, [pc, #600]	; (9001e138 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001dede:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001dee2:	6818      	ldr	r0, [r3, #0]
9001dee4:	6803      	ldr	r3, [r0, #0]
9001dee6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001dee8:	4798      	blx	r3
9001deea:	4b94      	ldr	r3, [pc, #592]	; (9001e13c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001deec:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001def0:	2d00      	cmp	r5, #0
9001def2:	881a      	ldrh	r2, [r3, #0]
9001def4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001def8:	fb02 f707 	mul.w	r7, r2, r7
9001defc:	fb02 c101 	mla	r1, r2, r1, ip
9001df00:	9318      	str	r3, [sp, #96]	; 0x60
9001df02:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001df06:	4b8e      	ldr	r3, [pc, #568]	; (9001e140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001df08:	bf18      	it	ne
9001df0a:	2100      	movne	r1, #0
9001df0c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001df10:	eba3 0304 	sub.w	r3, r3, r4
9001df14:	920b      	str	r2, [sp, #44]	; 0x2c
9001df16:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001df18:	9319      	str	r3, [sp, #100]	; 0x64
9001df1a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001df1e:	f106 0204 	add.w	r2, r6, #4
9001df22:	9206      	str	r2, [sp, #24]
9001df24:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001df26:	ea6f 0202 	mvn.w	r2, r2
9001df2a:	b2d2      	uxtb	r2, r2
9001df2c:	9215      	str	r2, [sp, #84]	; 0x54
9001df2e:	9a04      	ldr	r2, [sp, #16]
9001df30:	bf08      	it	eq
9001df32:	4611      	moveq	r1, r2
9001df34:	2200      	movs	r2, #0
9001df36:	b289      	uxth	r1, r1
9001df38:	920d      	str	r2, [sp, #52]	; 0x34
9001df3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001df3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001df3e:	fa12 f383 	uxtah	r3, r2, r3
9001df42:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001df44:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001df48:	3304      	adds	r3, #4
9001df4a:	9307      	str	r3, [sp, #28]
9001df4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001df4e:	455b      	cmp	r3, fp
9001df50:	f240 817b 	bls.w	9001e24a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001df54:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001df58:	f04f 0801 	mov.w	r8, #1
9001df5c:	9a01      	ldr	r2, [sp, #4]
9001df5e:	9807      	ldr	r0, [sp, #28]
9001df60:	46c4      	mov	ip, r8
9001df62:	f8cd 8008 	str.w	r8, [sp, #8]
9001df66:	7800      	ldrb	r0, [r0, #0]
9001df68:	fbb5 f3f3 	udiv	r3, r5, r3
9001df6c:	1ad3      	subs	r3, r2, r3
9001df6e:	9011      	str	r0, [sp, #68]	; 0x44
9001df70:	3001      	adds	r0, #1
9001df72:	b29b      	uxth	r3, r3
9001df74:	9005      	str	r0, [sp, #20]
9001df76:	9316      	str	r3, [sp, #88]	; 0x58
9001df78:	9b07      	ldr	r3, [sp, #28]
9001df7a:	785a      	ldrb	r2, [r3, #1]
9001df7c:	789b      	ldrb	r3, [r3, #2]
9001df7e:	021b      	lsls	r3, r3, #8
9001df80:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001df84:	9a07      	ldr	r2, [sp, #28]
9001df86:	78d2      	ldrb	r2, [r2, #3]
9001df88:	4313      	orrs	r3, r2
9001df8a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001df8c:	441a      	add	r2, r3
9001df8e:	1c50      	adds	r0, r2, #1
9001df90:	7852      	ldrb	r2, [r2, #1]
9001df92:	9003      	str	r0, [sp, #12]
9001df94:	0212      	lsls	r2, r2, #8
9001df96:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001df98:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001df9c:	5cc3      	ldrb	r3, [r0, r3]
9001df9e:	431a      	orrs	r2, r3
9001dfa0:	b293      	uxth	r3, r2
9001dfa2:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001dfa6:	930c      	str	r3, [sp, #48]	; 0x30
9001dfa8:	2300      	movs	r3, #0
9001dfaa:	9308      	str	r3, [sp, #32]
9001dfac:	461a      	mov	r2, r3
9001dfae:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001dfb2:	930e      	str	r3, [sp, #56]	; 0x38
9001dfb4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001dfb8:	930f      	str	r3, [sp, #60]	; 0x3c
9001dfba:	2d00      	cmp	r5, #0
9001dfbc:	d07d      	beq.n	9001e0ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001dfbe:	45ac      	cmp	ip, r5
9001dfc0:	d26d      	bcs.n	9001e09e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001dfc2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001dfc4:	eba5 050c 	sub.w	r5, r5, ip
9001dfc8:	4608      	mov	r0, r1
9001dfca:	455b      	cmp	r3, fp
9001dfcc:	b2ad      	uxth	r5, r5
9001dfce:	d802      	bhi.n	9001dfd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001dfd0:	e071      	b.n	9001e0b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001dfd2:	2b00      	cmp	r3, #0
9001dfd4:	d15d      	bne.n	9001e092 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001dfd6:	9b03      	ldr	r3, [sp, #12]
9001dfd8:	9a02      	ldr	r2, [sp, #8]
9001dfda:	785b      	ldrb	r3, [r3, #1]
9001dfdc:	f1c2 0207 	rsb	r2, r2, #7
9001dfe0:	9902      	ldr	r1, [sp, #8]
9001dfe2:	4093      	lsls	r3, r2
9001dfe4:	005b      	lsls	r3, r3, #1
9001dfe6:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001dfea:	9b03      	ldr	r3, [sp, #12]
9001dfec:	781b      	ldrb	r3, [r3, #0]
9001dfee:	410b      	asrs	r3, r1
9001dff0:	3101      	adds	r1, #1
9001dff2:	b2c9      	uxtb	r1, r1
9001dff4:	b2db      	uxtb	r3, r3
9001dff6:	2908      	cmp	r1, #8
9001dff8:	9102      	str	r1, [sp, #8]
9001dffa:	9903      	ldr	r1, [sp, #12]
9001dffc:	ea43 0302 	orr.w	r3, r3, r2
9001e000:	bf0c      	ite	eq
9001e002:	3102      	addeq	r1, #2
9001e004:	3101      	addne	r1, #1
9001e006:	b29a      	uxth	r2, r3
9001e008:	bf05      	ittet	eq
9001e00a:	9103      	streq	r1, [sp, #12]
9001e00c:	2100      	moveq	r1, #0
9001e00e:	9103      	strne	r1, [sp, #12]
9001e010:	9102      	streq	r1, [sp, #8]
9001e012:	9911      	ldr	r1, [sp, #68]	; 0x44
9001e014:	4291      	cmp	r1, r2
9001e016:	d30a      	bcc.n	9001e02e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001e018:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001e01c:	2301      	movs	r3, #1
9001e01e:	9905      	ldr	r1, [sp, #20]
9001e020:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001e024:	d30f      	bcc.n	9001e046 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001e026:	2100      	movs	r1, #0
9001e028:	4698      	mov	r8, r3
9001e02a:	9100      	str	r1, [sp, #0]
9001e02c:	e032      	b.n	9001e094 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001e02e:	9b05      	ldr	r3, [sp, #20]
9001e030:	429a      	cmp	r2, r3
9001e032:	d318      	bcc.n	9001e066 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001e034:	eb04 0308 	add.w	r3, r4, r8
9001e038:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001e03c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001e040:	f108 0301 	add.w	r3, r8, #1
9001e044:	b29b      	uxth	r3, r3
9001e046:	9905      	ldr	r1, [sp, #20]
9001e048:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001e04c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001e050:	710e      	strb	r6, [r1, #4]
9001e052:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001e054:	80ce      	strh	r6, [r1, #6]
9001e056:	f108 0601 	add.w	r6, r8, #1
9001e05a:	714e      	strb	r6, [r1, #5]
9001e05c:	9905      	ldr	r1, [sp, #20]
9001e05e:	3101      	adds	r1, #1
9001e060:	b289      	uxth	r1, r1
9001e062:	9105      	str	r1, [sp, #20]
9001e064:	e7df      	b.n	9001e026 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001e066:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001e06a:	4611      	mov	r1, r2
9001e06c:	795b      	ldrb	r3, [r3, #5]
9001e06e:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001e072:	4426      	add	r6, r4
9001e074:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001e076:	4437      	add	r7, r6
9001e078:	2f00      	cmp	r7, #0
9001e07a:	dd06      	ble.n	9001e08a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001e07c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001e080:	790f      	ldrb	r7, [r1, #4]
9001e082:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001e086:	88c9      	ldrh	r1, [r1, #6]
9001e088:	e7f4      	b.n	9001e074 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001e08a:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001e08e:	b29b      	uxth	r3, r3
9001e090:	e7c5      	b.n	9001e01e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001e092:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001e094:	920c      	str	r2, [sp, #48]	; 0x30
9001e096:	4601      	mov	r1, r0
9001e098:	9a00      	ldr	r2, [sp, #0]
9001e09a:	469c      	mov	ip, r3
9001e09c:	e78d      	b.n	9001dfba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001e09e:	ebac 0305 	sub.w	r3, ip, r5
9001e0a2:	1957      	adds	r7, r2, r5
9001e0a4:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001e0a8:	b2ba      	uxth	r2, r7
9001e0aa:	b29b      	uxth	r3, r3
9001e0ac:	9200      	str	r2, [sp, #0]
9001e0ae:	2500      	movs	r5, #0
9001e0b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001e0b2:	455a      	cmp	r2, fp
9001e0b4:	d88d      	bhi.n	9001dfd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001e0b6:	4601      	mov	r1, r0
9001e0b8:	e748      	b.n	9001df4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001e0ba:	458c      	cmp	ip, r1
9001e0bc:	bf27      	ittee	cs
9001e0be:	ebac 0301 	subcs.w	r3, ip, r1
9001e0c2:	4628      	movcs	r0, r5
9001e0c4:	eba1 000c 	subcc.w	r0, r1, ip
9001e0c8:	462b      	movcc	r3, r5
9001e0ca:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001e0cc:	bf27      	ittee	cs
9001e0ce:	b29b      	uxthcs	r3, r3
9001e0d0:	9109      	strcs	r1, [sp, #36]	; 0x24
9001e0d2:	b280      	uxthcc	r0, r0
9001e0d4:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001e0d8:	2dff      	cmp	r5, #255	; 0xff
9001e0da:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001e0dc:	eb02 0705 	add.w	r7, r2, r5
9001e0e0:	b2bd      	uxth	r5, r7
9001e0e2:	9500      	str	r5, [sp, #0]
9001e0e4:	d12e      	bne.n	9001e144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001e0e6:	465e      	mov	r6, fp
9001e0e8:	9d00      	ldr	r5, [sp, #0]
9001e0ea:	42aa      	cmp	r2, r5
9001e0ec:	f040 8083 	bne.w	9001e1f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001e0f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001e0f2:	458c      	cmp	ip, r1
9001e0f4:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001e0f8:	d3d9      	bcc.n	9001e0ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001e0fa:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001e0fc:	9904      	ldr	r1, [sp, #16]
9001e0fe:	8812      	ldrh	r2, [r2, #0]
9001e100:	1a52      	subs	r2, r2, r1
9001e102:	9916      	ldr	r1, [sp, #88]	; 0x58
9001e104:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001e108:	9a08      	ldr	r2, [sp, #32]
9001e10a:	3201      	adds	r2, #1
9001e10c:	428a      	cmp	r2, r1
9001e10e:	9208      	str	r2, [sp, #32]
9001e110:	f040 8091 	bne.w	9001e236 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001e114:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001e118:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001e11c:	9b04      	ldr	r3, [sp, #16]
9001e11e:	eba5 050c 	sub.w	r5, r5, ip
9001e122:	b2ad      	uxth	r5, r5
9001e124:	2d00      	cmp	r5, #0
9001e126:	bf08      	it	eq
9001e128:	4619      	moveq	r1, r3
9001e12a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e12c:	bf18      	it	ne
9001e12e:	2100      	movne	r1, #0
9001e130:	3301      	adds	r3, #1
9001e132:	b289      	uxth	r1, r1
9001e134:	930d      	str	r3, [sp, #52]	; 0x34
9001e136:	e700      	b.n	9001df3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001e138:	2403989c 	.word	0x2403989c
9001e13c:	24039896 	.word	0x24039896
9001e140:	fffff7fb 	.word	0xfffff7fb
9001e144:	46d9      	mov	r9, fp
9001e146:	9d00      	ldr	r5, [sp, #0]
9001e148:	42aa      	cmp	r2, r5
9001e14a:	d0d1      	beq.n	9001e0f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001e14c:	1c55      	adds	r5, r2, #1
9001e14e:	4422      	add	r2, r4
9001e150:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001e154:	9a06      	ldr	r2, [sp, #24]
9001e156:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001e15a:	9517      	str	r5, [sp, #92]	; 0x5c
9001e15c:	4472      	add	r2, lr
9001e15e:	9212      	str	r2, [sp, #72]	; 0x48
9001e160:	f8b9 2000 	ldrh.w	r2, [r9]
9001e164:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001e166:	1216      	asrs	r6, r2, #8
9001e168:	f897 a002 	ldrb.w	sl, [r7, #2]
9001e16c:	10d5      	asrs	r5, r2, #3
9001e16e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001e170:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001e174:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e178:	00d2      	lsls	r2, r2, #3
9001e17a:	fb1a fa07 	smulbb	sl, sl, r7
9001e17e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e182:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001e184:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001e188:	b2d2      	uxtb	r2, r2
9001e18a:	fb06 a607 	mla	r6, r6, r7, sl
9001e18e:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001e190:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e194:	f897 a001 	ldrb.w	sl, [r7, #1]
9001e198:	b2b6      	uxth	r6, r6
9001e19a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001e19c:	fb1a fa07 	smulbb	sl, sl, r7
9001e1a0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001e1a2:	fb05 a507 	mla	r5, r5, r7, sl
9001e1a6:	9f06      	ldr	r7, [sp, #24]
9001e1a8:	f106 0a01 	add.w	sl, r6, #1
9001e1ac:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001e1b0:	b2ad      	uxth	r5, r5
9001e1b2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001e1b4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001e1b8:	f105 0a01 	add.w	sl, r5, #1
9001e1bc:	fb1e fe07 	smulbb	lr, lr, r7
9001e1c0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001e1c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e1c6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001e1ca:	fb02 e207 	mla	r2, r2, r7, lr
9001e1ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e1d2:	b292      	uxth	r2, r2
9001e1d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001e1d8:	f102 0e01 	add.w	lr, r2, #1
9001e1dc:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001e1e0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001e1e4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001e1e8:	ea4e 0606 	orr.w	r6, lr, r6
9001e1ec:	ea46 060a 	orr.w	r6, r6, sl
9001e1f0:	f829 6b02 	strh.w	r6, [r9], #2
9001e1f4:	e7a7      	b.n	9001e146 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001e1f6:	f102 0e01 	add.w	lr, r2, #1
9001e1fa:	4422      	add	r2, r4
9001e1fc:	9f06      	ldr	r7, [sp, #24]
9001e1fe:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001e202:	9a06      	ldr	r2, [sp, #24]
9001e204:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001e208:	eb02 0a05 	add.w	sl, r2, r5
9001e20c:	4a13      	ldr	r2, [pc, #76]	; (9001e25c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001e20e:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001e212:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001e216:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001e21a:	00d2      	lsls	r2, r2, #3
9001e21c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001e220:	ea49 0202 	orr.w	r2, r9, r2
9001e224:	f817 9005 	ldrb.w	r9, [r7, r5]
9001e228:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001e22c:	f826 2b02 	strh.w	r2, [r6], #2
9001e230:	fa1f f28e 	uxth.w	r2, lr
9001e234:	e758      	b.n	9001e0e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001e236:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001e23a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001e23e:	1a2d      	subs	r5, r5, r0
9001e240:	b2ad      	uxth	r5, r5
9001e242:	2d00      	cmp	r5, #0
9001e244:	bf18      	it	ne
9001e246:	2000      	movne	r0, #0
9001e248:	e732      	b.n	9001e0b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001e24a:	4b05      	ldr	r3, [pc, #20]	; (9001e260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001e24c:	6818      	ldr	r0, [r3, #0]
9001e24e:	6803      	ldr	r3, [r0, #0]
9001e250:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e252:	4798      	blx	r3
9001e254:	b01f      	add	sp, #124	; 0x7c
9001e256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e25a:	bf00      	nop
9001e25c:	fffff800 	.word	0xfffff800
9001e260:	2403989c 	.word	0x2403989c

9001e264 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001e264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e268:	b091      	sub	sp, #68	; 0x44
9001e26a:	469b      	mov	fp, r3
9001e26c:	4616      	mov	r6, r2
9001e26e:	f9b3 2000 	ldrsh.w	r2, [r3]
9001e272:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001e276:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001e27a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001e27e:	4604      	mov	r4, r0
9001e280:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001e284:	4640      	mov	r0, r8
9001e286:	460d      	mov	r5, r1
9001e288:	4659      	mov	r1, fp
9001e28a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001e28e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001e292:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001e296:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001e29a:	f7f3 fab9 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
9001e29e:	4631      	mov	r1, r6
9001e2a0:	4640      	mov	r0, r8
9001e2a2:	f7f3 fab5 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
9001e2a6:	4b74      	ldr	r3, [pc, #464]	; (9001e478 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001e2a8:	8818      	ldrh	r0, [r3, #0]
9001e2aa:	4b74      	ldr	r3, [pc, #464]	; (9001e47c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001e2ac:	b202      	sxth	r2, r0
9001e2ae:	8819      	ldrh	r1, [r3, #0]
9001e2b0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001e2b4:	b20e      	sxth	r6, r1
9001e2b6:	2b00      	cmp	r3, #0
9001e2b8:	da07      	bge.n	9001e2ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001e2ba:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001e2be:	4463      	add	r3, ip
9001e2c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001e2c4:	2300      	movs	r3, #0
9001e2c6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001e2ca:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001e2ce:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001e2d2:	1ad2      	subs	r2, r2, r3
9001e2d4:	4594      	cmp	ip, r2
9001e2d6:	bfc4      	itt	gt
9001e2d8:	1ac2      	subgt	r2, r0, r3
9001e2da:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001e2de:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001e2e2:	2a00      	cmp	r2, #0
9001e2e4:	da07      	bge.n	9001e2f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001e2e6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001e2ea:	4462      	add	r2, ip
9001e2ec:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001e2f0:	2200      	movs	r2, #0
9001e2f2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001e2f6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001e2fa:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001e2fe:	eba6 060a 	sub.w	r6, r6, sl
9001e302:	42b2      	cmp	r2, r6
9001e304:	bfc4      	itt	gt
9001e306:	eba1 020a 	subgt.w	r2, r1, sl
9001e30a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001e30e:	4a5c      	ldr	r2, [pc, #368]	; (9001e480 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001e310:	7812      	ldrb	r2, [r2, #0]
9001e312:	b9a2      	cbnz	r2, 9001e33e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001e314:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001e318:	4286      	cmp	r6, r0
9001e31a:	4640      	mov	r0, r8
9001e31c:	9303      	str	r3, [sp, #12]
9001e31e:	bf14      	ite	ne
9001e320:	2600      	movne	r6, #0
9001e322:	2601      	moveq	r6, #1
9001e324:	f7f3 fab7 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
9001e328:	9b03      	ldr	r3, [sp, #12]
9001e32a:	b160      	cbz	r0, 9001e346 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001e32c:	2300      	movs	r3, #0
9001e32e:	8023      	strh	r3, [r4, #0]
9001e330:	8063      	strh	r3, [r4, #2]
9001e332:	80a3      	strh	r3, [r4, #4]
9001e334:	4620      	mov	r0, r4
9001e336:	80e3      	strh	r3, [r4, #6]
9001e338:	b011      	add	sp, #68	; 0x44
9001e33a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e33e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001e342:	428e      	cmp	r6, r1
9001e344:	e7e9      	b.n	9001e31a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001e346:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001e34a:	a90e      	add	r1, sp, #56	; 0x38
9001e34c:	900e      	str	r0, [sp, #56]	; 0x38
9001e34e:	a80c      	add	r0, sp, #48	; 0x30
9001e350:	9205      	str	r2, [sp, #20]
9001e352:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001e356:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001e35a:	9206      	str	r2, [sp, #24]
9001e35c:	f8bb 2000 	ldrh.w	r2, [fp]
9001e360:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001e364:	1a9b      	subs	r3, r3, r2
9001e366:	b21b      	sxth	r3, r3
9001e368:	9303      	str	r3, [sp, #12]
9001e36a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001e36e:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001e488 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001e372:	ebaa 0a03 	sub.w	sl, sl, r3
9001e376:	fa0f f38a 	sxth.w	r3, sl
9001e37a:	9304      	str	r3, [sp, #16]
9001e37c:	9b03      	ldr	r3, [sp, #12]
9001e37e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001e382:	9b04      	ldr	r3, [sp, #16]
9001e384:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001e388:	9b05      	ldr	r3, [sp, #20]
9001e38a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001e38e:	9b06      	ldr	r3, [sp, #24]
9001e390:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001e394:	f7f8 fb9e 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e398:	4640      	mov	r0, r8
9001e39a:	f7f8 fb57 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e39e:	a80e      	add	r0, sp, #56	; 0x38
9001e3a0:	f7f8 fb54 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e3a4:	4b37      	ldr	r3, [pc, #220]	; (9001e484 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001e3a6:	4628      	mov	r0, r5
9001e3a8:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001e3ac:	881b      	ldrh	r3, [r3, #0]
9001e3ae:	9307      	str	r3, [sp, #28]
9001e3b0:	682b      	ldr	r3, [r5, #0]
9001e3b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001e3b4:	4798      	blx	r3
9001e3b6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001e3ba:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001e3be:	4681      	mov	r9, r0
9001e3c0:	f8db 0000 	ldr.w	r0, [fp]
9001e3c4:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001e3c8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001e3ca:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001e3ce:	6803      	ldr	r3, [r0, #0]
9001e3d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001e3d2:	4798      	blx	r3
9001e3d4:	4607      	mov	r7, r0
9001e3d6:	f8db 0000 	ldr.w	r0, [fp]
9001e3da:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001e3de:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001e3e2:	6803      	ldr	r3, [r0, #0]
9001e3e4:	9109      	str	r1, [sp, #36]	; 0x24
9001e3e6:	9208      	str	r2, [sp, #32]
9001e3e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e3ea:	4798      	blx	r3
9001e3ec:	f010 0f01 	tst.w	r0, #1
9001e3f0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001e3f4:	d012      	beq.n	9001e41c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001e3f6:	f8db 0000 	ldr.w	r0, [fp]
9001e3fa:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001e3fe:	6803      	ldr	r3, [r0, #0]
9001e400:	9200      	str	r2, [sp, #0]
9001e402:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001e404:	462b      	mov	r3, r5
9001e406:	e898 0006 	ldmia.w	r8, {r1, r2}
9001e40a:	47b0      	blx	r6
9001e40c:	9b03      	ldr	r3, [sp, #12]
9001e40e:	8023      	strh	r3, [r4, #0]
9001e410:	9b04      	ldr	r3, [sp, #16]
9001e412:	8063      	strh	r3, [r4, #2]
9001e414:	9b05      	ldr	r3, [sp, #20]
9001e416:	80a3      	strh	r3, [r4, #4]
9001e418:	9b06      	ldr	r3, [sp, #24]
9001e41a:	e78b      	b.n	9001e334 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001e41c:	fb09 f202 	mul.w	r2, r9, r2
9001e420:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001e424:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001e428:	440f      	add	r7, r1
9001e42a:	b166      	cbz	r6, 9001e446 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001e42c:	9a07      	ldr	r2, [sp, #28]
9001e42e:	4592      	cmp	sl, r2
9001e430:	d109      	bne.n	9001e446 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001e432:	f8db 0000 	ldr.w	r0, [fp]
9001e436:	fb09 f303 	mul.w	r3, r9, r3
9001e43a:	4629      	mov	r1, r5
9001e43c:	6802      	ldr	r2, [r0, #0]
9001e43e:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001e440:	463a      	mov	r2, r7
9001e442:	47b0      	blx	r6
9001e444:	e7e2      	b.n	9001e40c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001e446:	fb0a f303 	mul.w	r3, sl, r3
9001e44a:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001e44e:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001e488 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001e452:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001e456:	4545      	cmp	r5, r8
9001e458:	d2d8      	bcs.n	9001e40c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001e45a:	f8db 0000 	ldr.w	r0, [fp]
9001e45e:	4629      	mov	r1, r5
9001e460:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001e464:	4435      	add	r5, r6
9001e466:	6802      	ldr	r2, [r0, #0]
9001e468:	005b      	lsls	r3, r3, #1
9001e46a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001e46e:	463a      	mov	r2, r7
9001e470:	47d0      	blx	sl
9001e472:	444f      	add	r7, r9
9001e474:	e7ef      	b.n	9001e456 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001e476:	bf00      	nop
9001e478:	24039890 	.word	0x24039890
9001e47c:	24039892 	.word	0x24039892
9001e480:	24039894 	.word	0x24039894
9001e484:	24039896 	.word	0x24039896
9001e488:	2403989c 	.word	0x2403989c

9001e48c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001e48c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001e48e:	4606      	mov	r6, r0
9001e490:	b087      	sub	sp, #28
9001e492:	460c      	mov	r4, r1
9001e494:	4617      	mov	r7, r2
9001e496:	461d      	mov	r5, r3
9001e498:	b333      	cbz	r3, 9001e4e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001e49a:	4608      	mov	r0, r1
9001e49c:	f7f3 f9fb 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
9001e4a0:	bb10      	cbnz	r0, 9001e4e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001e4a2:	6820      	ldr	r0, [r4, #0]
9001e4a4:	ab04      	add	r3, sp, #16
9001e4a6:	6861      	ldr	r1, [r4, #4]
9001e4a8:	4c1b      	ldr	r4, [pc, #108]	; (9001e518 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001e4aa:	c303      	stmia	r3!, {r0, r1}
9001e4ac:	a804      	add	r0, sp, #16
9001e4ae:	f7f8 facd 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e4b2:	6820      	ldr	r0, [r4, #0]
9001e4b4:	6803      	ldr	r3, [r0, #0]
9001e4b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e4b8:	4798      	blx	r3
9001e4ba:	2dff      	cmp	r5, #255	; 0xff
9001e4bc:	d016      	beq.n	9001e4ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001e4be:	f010 0f08 	tst.w	r0, #8
9001e4c2:	6820      	ldr	r0, [r4, #0]
9001e4c4:	d015      	beq.n	9001e4f2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001e4c6:	2400      	movs	r4, #0
9001e4c8:	6801      	ldr	r1, [r0, #0]
9001e4ca:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001e4ce:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e4d2:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001e4d6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001e4da:	9401      	str	r4, [sp, #4]
9001e4dc:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001e4e0:	9400      	str	r4, [sp, #0]
9001e4e2:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001e4e4:	4639      	mov	r1, r7
9001e4e6:	47a0      	blx	r4
9001e4e8:	b007      	add	sp, #28
9001e4ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001e4ec:	f010 0f02 	tst.w	r0, #2
9001e4f0:	e7e7      	b.n	9001e4c2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001e4f2:	6803      	ldr	r3, [r0, #0]
9001e4f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e4f6:	4798      	blx	r3
9001e4f8:	4b08      	ldr	r3, [pc, #32]	; (9001e51c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001e4fa:	4601      	mov	r1, r0
9001e4fc:	4630      	mov	r0, r6
9001e4fe:	881a      	ldrh	r2, [r3, #0]
9001e500:	6833      	ldr	r3, [r6, #0]
9001e502:	e9cd 7500 	strd	r7, r5, [sp]
9001e506:	6a5d      	ldr	r5, [r3, #36]	; 0x24
9001e508:	ab04      	add	r3, sp, #16
9001e50a:	47a8      	blx	r5
9001e50c:	6820      	ldr	r0, [r4, #0]
9001e50e:	6803      	ldr	r3, [r0, #0]
9001e510:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e512:	4798      	blx	r3
9001e514:	e7e8      	b.n	9001e4e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001e516:	bf00      	nop
9001e518:	2403989c 	.word	0x2403989c
9001e51c:	24039896 	.word	0x24039896

9001e520 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001e520:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e524:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
9001e528:	4688      	mov	r8, r1
9001e52a:	4614      	mov	r4, r2
9001e52c:	461d      	mov	r5, r3
9001e52e:	9e08      	ldr	r6, [sp, #32]
9001e530:	2f00      	cmp	r7, #0
9001e532:	f000 80ab 	beq.w	9001e68c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e536:	4618      	mov	r0, r3
9001e538:	f7f3 f9ad 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
9001e53c:	2800      	cmp	r0, #0
9001e53e:	f040 80a5 	bne.w	9001e68c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e542:	f9b5 1000 	ldrsh.w	r1, [r5]
9001e546:	2fff      	cmp	r7, #255	; 0xff
9001e548:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001e54c:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001e550:	fb04 1303 	mla	r3, r4, r3, r1
9001e554:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001e558:	eba4 0200 	sub.w	r2, r4, r0
9001e55c:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001e560:	fb04 f505 	mul.w	r5, r4, r5
9001e564:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001e568:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001e56c:	d04a      	beq.n	9001e604 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001e56e:	b2bc      	uxth	r4, r7
9001e570:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9001e574:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001e578:	fa5f f788 	uxtb.w	r7, r8
9001e57c:	b2f3      	uxtb	r3, r6
9001e57e:	0040      	lsls	r0, r0, #1
9001e580:	fb0e fe04 	mul.w	lr, lr, r4
9001e584:	4367      	muls	r7, r4
9001e586:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001e58a:	4363      	muls	r3, r4
9001e58c:	fa1f fc8c 	uxth.w	ip, ip
9001e590:	42a9      	cmp	r1, r5
9001e592:	d27b      	bcs.n	9001e68c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e594:	eb01 0900 	add.w	r9, r1, r0
9001e598:	4549      	cmp	r1, r9
9001e59a:	d231      	bcs.n	9001e600 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001e59c:	880a      	ldrh	r2, [r1, #0]
9001e59e:	1214      	asrs	r4, r2, #8
9001e5a0:	10d6      	asrs	r6, r2, #3
9001e5a2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001e5a6:	00d2      	lsls	r2, r2, #3
9001e5a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001e5ac:	b2d2      	uxtb	r2, r2
9001e5ae:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001e5b2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e5b6:	fb14 f40c 	smulbb	r4, r4, ip
9001e5ba:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001e5be:	fb12 f20c 	smulbb	r2, r2, ip
9001e5c2:	fb16 f60c 	smulbb	r6, r6, ip
9001e5c6:	4474      	add	r4, lr
9001e5c8:	441a      	add	r2, r3
9001e5ca:	b2a4      	uxth	r4, r4
9001e5cc:	443e      	add	r6, r7
9001e5ce:	b292      	uxth	r2, r2
9001e5d0:	f104 0a01 	add.w	sl, r4, #1
9001e5d4:	b2b6      	uxth	r6, r6
9001e5d6:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001e5da:	f102 0a01 	add.w	sl, r2, #1
9001e5de:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001e5e2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001e5e6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e5ea:	4322      	orrs	r2, r4
9001e5ec:	1c74      	adds	r4, r6, #1
9001e5ee:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001e5f2:	0976      	lsrs	r6, r6, #5
9001e5f4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001e5f8:	4332      	orrs	r2, r6
9001e5fa:	f821 2b02 	strh.w	r2, [r1], #2
9001e5fe:	e7cb      	b.n	9001e598 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001e600:	4441      	add	r1, r8
9001e602:	e7c5      	b.n	9001e590 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001e604:	0973      	lsrs	r3, r6, #5
9001e606:	4f22      	ldr	r7, [pc, #136]	; (9001e690 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001e608:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001e60c:	ea08 0707 	and.w	r7, r8, r7
9001e610:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e614:	433b      	orrs	r3, r7
9001e616:	07e7      	lsls	r7, r4, #31
9001e618:	ea43 0306 	orr.w	r3, r3, r6
9001e61c:	b29b      	uxth	r3, r3
9001e61e:	d50b      	bpl.n	9001e638 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001e620:	0040      	lsls	r0, r0, #1
9001e622:	0052      	lsls	r2, r2, #1
9001e624:	42a9      	cmp	r1, r5
9001e626:	d231      	bcs.n	9001e68c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e628:	180c      	adds	r4, r1, r0
9001e62a:	42a1      	cmp	r1, r4
9001e62c:	d202      	bcs.n	9001e634 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001e62e:	f821 3b02 	strh.w	r3, [r1], #2
9001e632:	e7fa      	b.n	9001e62a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001e634:	4411      	add	r1, r2
9001e636:	e7f5      	b.n	9001e624 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001e638:	078e      	lsls	r6, r1, #30
9001e63a:	d008      	beq.n	9001e64e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001e63c:	0066      	lsls	r6, r4, #1
9001e63e:	460a      	mov	r2, r1
9001e640:	42aa      	cmp	r2, r5
9001e642:	d202      	bcs.n	9001e64a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001e644:	8013      	strh	r3, [r2, #0]
9001e646:	4432      	add	r2, r6
9001e648:	e7fa      	b.n	9001e640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001e64a:	3102      	adds	r1, #2
9001e64c:	3801      	subs	r0, #1
9001e64e:	07c2      	lsls	r2, r0, #31
9001e650:	d50b      	bpl.n	9001e66a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001e652:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9001e656:	0066      	lsls	r6, r4, #1
9001e658:	3a01      	subs	r2, #1
9001e65a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001e65e:	42aa      	cmp	r2, r5
9001e660:	d202      	bcs.n	9001e668 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001e662:	8013      	strh	r3, [r2, #0]
9001e664:	4432      	add	r2, r6
9001e666:	e7fa      	b.n	9001e65e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001e668:	3801      	subs	r0, #1
9001e66a:	b178      	cbz	r0, 9001e68c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e66c:	1040      	asrs	r0, r0, #1
9001e66e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001e672:	0080      	lsls	r0, r0, #2
9001e674:	0064      	lsls	r4, r4, #1
9001e676:	42a9      	cmp	r1, r5
9001e678:	d208      	bcs.n	9001e68c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e67a:	180e      	adds	r6, r1, r0
9001e67c:	460a      	mov	r2, r1
9001e67e:	42b2      	cmp	r2, r6
9001e680:	d202      	bcs.n	9001e688 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001e682:	f842 3b04 	str.w	r3, [r2], #4
9001e686:	e7fa      	b.n	9001e67e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001e688:	4421      	add	r1, r4
9001e68a:	e7f4      	b.n	9001e676 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001e68c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e690:	00fff800 	.word	0x00fff800

9001e694 <_ZN8touchgfx8LCD16bppC1Ev>:
9001e694:	2200      	movs	r2, #0
9001e696:	4912      	ldr	r1, [pc, #72]	; (9001e6e0 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001e698:	6042      	str	r2, [r0, #4]
9001e69a:	6001      	str	r1, [r0, #0]
9001e69c:	e9c0 2202 	strd	r2, r2, [r0, #8]
9001e6a0:	e9c0 2204 	strd	r2, r2, [r0, #16]
9001e6a4:	e9c0 2206 	strd	r2, r2, [r0, #24]
9001e6a8:	e9c0 2208 	strd	r2, r2, [r0, #32]
9001e6ac:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
9001e6b0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
9001e6b4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
9001e6b8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
9001e6bc:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
9001e6c0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
9001e6c4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
9001e6c8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
9001e6cc:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
9001e6d0:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
9001e6d4:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
9001e6d8:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
9001e6dc:	4770      	bx	lr
9001e6de:	bf00      	nop
9001e6e0:	9002c900 	.word	0x9002c900

9001e6e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001e6e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e6e8:	b08d      	sub	sp, #52	; 0x34
9001e6ea:	460d      	mov	r5, r1
9001e6ec:	4604      	mov	r4, r0
9001e6ee:	4699      	mov	r9, r3
9001e6f0:	6808      	ldr	r0, [r1, #0]
9001e6f2:	ab08      	add	r3, sp, #32
9001e6f4:	6849      	ldr	r1, [r1, #4]
9001e6f6:	c303      	stmia	r3!, {r0, r1}
9001e6f8:	6810      	ldr	r0, [r2, #0]
9001e6fa:	ab0a      	add	r3, sp, #40	; 0x28
9001e6fc:	6851      	ldr	r1, [r2, #4]
9001e6fe:	c303      	stmia	r3!, {r0, r1}
9001e700:	a808      	add	r0, sp, #32
9001e702:	f7f8 f9a3 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e706:	4629      	mov	r1, r5
9001e708:	a80a      	add	r0, sp, #40	; 0x28
9001e70a:	4d67      	ldr	r5, [pc, #412]	; (9001e8a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001e70c:	f7f8 f9e2 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e710:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9001e714:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
9001e718:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
9001e71c:	6828      	ldr	r0, [r5, #0]
9001e71e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e722:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9001e726:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001e72a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001e72e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001e732:	440a      	add	r2, r1
9001e734:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001e738:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001e73c:	4413      	add	r3, r2
9001e73e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001e742:	6803      	ldr	r3, [r0, #0]
9001e744:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e746:	4798      	blx	r3
9001e748:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001e74c:	d119      	bne.n	9001e782 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001e74e:	f010 0f20 	tst.w	r0, #32
9001e752:	6828      	ldr	r0, [r5, #0]
9001e754:	d018      	beq.n	9001e788 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001e756:	2500      	movs	r5, #0
9001e758:	6801      	ldr	r1, [r0, #0]
9001e75a:	b2b6      	uxth	r6, r6
9001e75c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001e760:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9001e764:	9601      	str	r6, [sp, #4]
9001e766:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001e76a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
9001e76e:	9502      	str	r5, [sp, #8]
9001e770:	fa1f f588 	uxth.w	r5, r8
9001e774:	9500      	str	r5, [sp, #0]
9001e776:	6d0d      	ldr	r5, [r1, #80]	; 0x50
9001e778:	4621      	mov	r1, r4
9001e77a:	47a8      	blx	r5
9001e77c:	b00d      	add	sp, #52	; 0x34
9001e77e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e782:	f010 0f40 	tst.w	r0, #64	; 0x40
9001e786:	e7e4      	b.n	9001e752 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001e788:	6803      	ldr	r3, [r0, #0]
9001e78a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e78c:	4798      	blx	r3
9001e78e:	4947      	ldr	r1, [pc, #284]	; (9001e8ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001e790:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001e794:	880b      	ldrh	r3, [r1, #0]
9001e796:	468a      	mov	sl, r1
9001e798:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
9001e79c:	fb03 5202 	mla	r2, r3, r2, r5
9001e7a0:	4373      	muls	r3, r6
9001e7a2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e7a6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e7aa:	9307      	str	r3, [sp, #28]
9001e7ac:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001e7b0:	9306      	str	r3, [sp, #24]
9001e7b2:	9b07      	ldr	r3, [sp, #28]
9001e7b4:	4298      	cmp	r0, r3
9001e7b6:	d270      	bcs.n	9001e89a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001e7b8:	9b06      	ldr	r3, [sp, #24]
9001e7ba:	4621      	mov	r1, r4
9001e7bc:	eb00 0b03 	add.w	fp, r0, r3
9001e7c0:	4558      	cmp	r0, fp
9001e7c2:	d25d      	bcs.n	9001e880 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001e7c4:	f851 4b04 	ldr.w	r4, [r1], #4
9001e7c8:	0e23      	lsrs	r3, r4, #24
9001e7ca:	d014      	beq.n	9001e7f6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001e7cc:	2bff      	cmp	r3, #255	; 0xff
9001e7ce:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001e7d2:	d112      	bne.n	9001e7fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001e7d4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001e7d8:	d10f      	bne.n	9001e7fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001e7da:	0963      	lsrs	r3, r4, #5
9001e7dc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9001e7e0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001e7e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e7e8:	f02c 0c07 	bic.w	ip, ip, #7
9001e7ec:	ea43 0c0c 	orr.w	ip, r3, ip
9001e7f0:	ea4c 0404 	orr.w	r4, ip, r4
9001e7f4:	8004      	strh	r4, [r0, #0]
9001e7f6:	3002      	adds	r0, #2
9001e7f8:	e7e2      	b.n	9001e7c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001e7fa:	fb09 f303 	mul.w	r3, r9, r3
9001e7fe:	8807      	ldrh	r7, [r0, #0]
9001e800:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001e804:	fa5f fc8c 	uxtb.w	ip, ip
9001e808:	1c5a      	adds	r2, r3, #1
9001e80a:	123e      	asrs	r6, r7, #8
9001e80c:	10fd      	asrs	r5, r7, #3
9001e80e:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001e812:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001e816:	00ff      	lsls	r7, r7, #3
9001e818:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e81c:	1212      	asrs	r2, r2, #8
9001e81e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e822:	b293      	uxth	r3, r2
9001e824:	43d2      	mvns	r2, r2
9001e826:	b2ff      	uxtb	r7, r7
9001e828:	fb1e fe03 	smulbb	lr, lr, r3
9001e82c:	b2d2      	uxtb	r2, r2
9001e82e:	fb1c fc03 	smulbb	ip, ip, r3
9001e832:	b2e4      	uxtb	r4, r4
9001e834:	fb06 e602 	mla	r6, r6, r2, lr
9001e838:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001e83c:	fb14 f403 	smulbb	r4, r4, r3
9001e840:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001e844:	b2b6      	uxth	r6, r6
9001e846:	fb05 c502 	mla	r5, r5, r2, ip
9001e84a:	fb07 4702 	mla	r7, r7, r2, r4
9001e84e:	f106 0e01 	add.w	lr, r6, #1
9001e852:	b2ad      	uxth	r5, r5
9001e854:	b2bf      	uxth	r7, r7
9001e856:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001e85a:	f105 0c01 	add.w	ip, r5, #1
9001e85e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9001e862:	1c7e      	adds	r6, r7, #1
9001e864:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001e868:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001e86c:	096d      	lsrs	r5, r5, #5
9001e86e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001e872:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001e876:	ea46 060e 	orr.w	r6, r6, lr
9001e87a:	432e      	orrs	r6, r5
9001e87c:	8006      	strh	r6, [r0, #0]
9001e87e:	e7ba      	b.n	9001e7f6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001e880:	f8ba 3000 	ldrh.w	r3, [sl]
9001e884:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
9001e888:	eba3 0308 	sub.w	r3, r3, r8
9001e88c:	eba4 0408 	sub.w	r4, r4, r8
9001e890:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e894:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001e898:	e78b      	b.n	9001e7b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001e89a:	4b03      	ldr	r3, [pc, #12]	; (9001e8a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001e89c:	6818      	ldr	r0, [r3, #0]
9001e89e:	6803      	ldr	r3, [r0, #0]
9001e8a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e8a2:	4798      	blx	r3
9001e8a4:	e76a      	b.n	9001e77c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001e8a6:	bf00      	nop
9001e8a8:	2403989c 	.word	0x2403989c
9001e8ac:	24039896 	.word	0x24039896

9001e8b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001e8b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001e8b4:	b085      	sub	sp, #20
9001e8b6:	6810      	ldr	r0, [r2, #0]
9001e8b8:	460c      	mov	r4, r1
9001e8ba:	6851      	ldr	r1, [r2, #4]
9001e8bc:	466d      	mov	r5, sp
9001e8be:	4616      	mov	r6, r2
9001e8c0:	c503      	stmia	r5!, {r0, r1}
9001e8c2:	6818      	ldr	r0, [r3, #0]
9001e8c4:	6859      	ldr	r1, [r3, #4]
9001e8c6:	c503      	stmia	r5!, {r0, r1}
9001e8c8:	4668      	mov	r0, sp
9001e8ca:	4d2e      	ldr	r5, [pc, #184]	; (9001e984 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001e8cc:	f7f8 f8be 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e8d0:	4631      	mov	r1, r6
9001e8d2:	a802      	add	r0, sp, #8
9001e8d4:	4e2c      	ldr	r6, [pc, #176]	; (9001e988 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001e8d6:	f7f8 f8fd 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e8da:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001e8de:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001e8e2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e8e6:	6828      	ldr	r0, [r5, #0]
9001e8e8:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e8ec:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001e8f0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001e8f4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001e8f8:	f8bd 1000 	ldrh.w	r1, [sp]
9001e8fc:	440a      	add	r2, r1
9001e8fe:	f8ad 2008 	strh.w	r2, [sp, #8]
9001e902:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001e906:	4413      	add	r3, r2
9001e908:	f8ad 300a 	strh.w	r3, [sp, #10]
9001e90c:	6803      	ldr	r3, [r0, #0]
9001e90e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e910:	4798      	blx	r3
9001e912:	8833      	ldrh	r3, [r6, #0]
9001e914:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001e918:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001e91c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001e920:	f8df e068 	ldr.w	lr, [pc, #104]	; 9001e98c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001e924:	fb03 1202 	mla	r2, r3, r2, r1
9001e928:	fb08 f303 	mul.w	r3, r8, r3
9001e92c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e930:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e934:	4298      	cmp	r0, r3
9001e936:	d21d      	bcs.n	9001e974 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001e938:	eb00 080c 	add.w	r8, r0, ip
9001e93c:	4540      	cmp	r0, r8
9001e93e:	d20f      	bcs.n	9001e960 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001e940:	f854 1b04 	ldr.w	r1, [r4], #4
9001e944:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001e948:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001e94c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001e950:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001e954:	ea42 0209 	orr.w	r2, r2, r9
9001e958:	430a      	orrs	r2, r1
9001e95a:	f820 2b02 	strh.w	r2, [r0], #2
9001e95e:	e7ed      	b.n	9001e93c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001e960:	8832      	ldrh	r2, [r6, #0]
9001e962:	1bd2      	subs	r2, r2, r7
9001e964:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e968:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001e96c:	1bd2      	subs	r2, r2, r7
9001e96e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001e972:	e7df      	b.n	9001e934 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001e974:	6828      	ldr	r0, [r5, #0]
9001e976:	6803      	ldr	r3, [r0, #0]
9001e978:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e97a:	4798      	blx	r3
9001e97c:	b005      	add	sp, #20
9001e97e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001e982:	bf00      	nop
9001e984:	2403989c 	.word	0x2403989c
9001e988:	24039896 	.word	0x24039896
9001e98c:	fffff800 	.word	0xfffff800

9001e990 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001e990:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e994:	b08e      	sub	sp, #56	; 0x38
9001e996:	460e      	mov	r6, r1
9001e998:	4604      	mov	r4, r0
9001e99a:	461d      	mov	r5, r3
9001e99c:	6808      	ldr	r0, [r1, #0]
9001e99e:	ab0a      	add	r3, sp, #40	; 0x28
9001e9a0:	6849      	ldr	r1, [r1, #4]
9001e9a2:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 9001eb78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001e9a6:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9001eb7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001e9aa:	c303      	stmia	r3!, {r0, r1}
9001e9ac:	6810      	ldr	r0, [r2, #0]
9001e9ae:	ab0c      	add	r3, sp, #48	; 0x30
9001e9b0:	6851      	ldr	r1, [r2, #4]
9001e9b2:	c303      	stmia	r3!, {r0, r1}
9001e9b4:	a80a      	add	r0, sp, #40	; 0x28
9001e9b6:	f7f8 f849 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e9ba:	4631      	mov	r1, r6
9001e9bc:	a80c      	add	r0, sp, #48	; 0x30
9001e9be:	f7f8 f889 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e9c2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9001e9c6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001e9ca:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001e9ce:	f8d8 0000 	ldr.w	r0, [r8]
9001e9d2:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e9d6:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
9001e9da:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001e9de:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001e9e2:	440c      	add	r4, r1
9001e9e4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
9001e9e8:	440a      	add	r2, r1
9001e9ea:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9001e9ee:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
9001e9f2:	4413      	add	r3, r2
9001e9f4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001e9f8:	6803      	ldr	r3, [r0, #0]
9001e9fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e9fc:	4798      	blx	r3
9001e9fe:	2dff      	cmp	r5, #255	; 0xff
9001ea00:	d124      	bne.n	9001ea4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001ea02:	f010 0f01 	tst.w	r0, #1
9001ea06:	f8d8 0000 	ldr.w	r0, [r8]
9001ea0a:	d022      	beq.n	9001ea52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001ea0c:	2100      	movs	r1, #0
9001ea0e:	f04f 0e01 	mov.w	lr, #1
9001ea12:	f8d0 c000 	ldr.w	ip, [r0]
9001ea16:	b2b6      	uxth	r6, r6
9001ea18:	f8cd e018 	str.w	lr, [sp, #24]
9001ea1c:	b2bf      	uxth	r7, r7
9001ea1e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001ea22:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001ea26:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001ea2a:	f8b9 e000 	ldrh.w	lr, [r9]
9001ea2e:	9503      	str	r5, [sp, #12]
9001ea30:	9601      	str	r6, [sp, #4]
9001ea32:	9700      	str	r7, [sp, #0]
9001ea34:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001ea38:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001ea3c:	9102      	str	r1, [sp, #8]
9001ea3e:	4621      	mov	r1, r4
9001ea40:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9001ea44:	47a8      	blx	r5
9001ea46:	b00e      	add	sp, #56	; 0x38
9001ea48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ea4c:	f010 0f04 	tst.w	r0, #4
9001ea50:	e7d9      	b.n	9001ea06 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001ea52:	6803      	ldr	r3, [r0, #0]
9001ea54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ea56:	4798      	blx	r3
9001ea58:	f8b9 3000 	ldrh.w	r3, [r9]
9001ea5c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001ea60:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001ea64:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
9001ea68:	435e      	muls	r6, r3
9001ea6a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001ea6e:	2dff      	cmp	r5, #255	; 0xff
9001ea70:	fb03 1202 	mla	r2, r3, r2, r1
9001ea74:	ebac 0c07 	sub.w	ip, ip, r7
9001ea78:	eba3 0707 	sub.w	r7, r3, r7
9001ea7c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ea80:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001ea84:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001ea88:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001ea8c:	d049      	beq.n	9001eb22 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001ea8e:	43eb      	mvns	r3, r5
9001ea90:	fa1f f985 	uxth.w	r9, r5
9001ea94:	b2db      	uxtb	r3, r3
9001ea96:	42b0      	cmp	r0, r6
9001ea98:	d266      	bcs.n	9001eb68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001ea9a:	eb00 0a0e 	add.w	sl, r0, lr
9001ea9e:	4550      	cmp	r0, sl
9001eaa0:	4621      	mov	r1, r4
9001eaa2:	f104 0403 	add.w	r4, r4, #3
9001eaa6:	d25b      	bcs.n	9001eb60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001eaa8:	8802      	ldrh	r2, [r0, #0]
9001eaaa:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001eaae:	ea4f 2822 	mov.w	r8, r2, asr #8
9001eab2:	fb11 f109 	smulbb	r1, r1, r9
9001eab6:	10d5      	asrs	r5, r2, #3
9001eab8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001eabc:	00d2      	lsls	r2, r2, #3
9001eabe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001eac2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001eac6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001eaca:	fb08 1803 	mla	r8, r8, r3, r1
9001eace:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001ead2:	b2d2      	uxtb	r2, r2
9001ead4:	fb11 f109 	smulbb	r1, r1, r9
9001ead8:	fa1f f888 	uxth.w	r8, r8
9001eadc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001eae0:	fb05 1503 	mla	r5, r5, r3, r1
9001eae4:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001eae8:	fb11 f109 	smulbb	r1, r1, r9
9001eaec:	b2ad      	uxth	r5, r5
9001eaee:	fb02 1203 	mla	r2, r2, r3, r1
9001eaf2:	f108 0101 	add.w	r1, r8, #1
9001eaf6:	b292      	uxth	r2, r2
9001eaf8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001eafc:	1c51      	adds	r1, r2, #1
9001eafe:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001eb02:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001eb06:	1c69      	adds	r1, r5, #1
9001eb08:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001eb0c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001eb10:	096d      	lsrs	r5, r5, #5
9001eb12:	ea42 0208 	orr.w	r2, r2, r8
9001eb16:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001eb1a:	432a      	orrs	r2, r5
9001eb1c:	f820 2b02 	strh.w	r2, [r0], #2
9001eb20:	e7bd      	b.n	9001ea9e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001eb22:	4a14      	ldr	r2, [pc, #80]	; (9001eb74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001eb24:	42b0      	cmp	r0, r6
9001eb26:	d21f      	bcs.n	9001eb68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001eb28:	eb00 050e 	add.w	r5, r0, lr
9001eb2c:	42a8      	cmp	r0, r5
9001eb2e:	4621      	mov	r1, r4
9001eb30:	f104 0403 	add.w	r4, r4, #3
9001eb34:	d210      	bcs.n	9001eb58 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001eb36:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001eb3a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001eb3e:	00db      	lsls	r3, r3, #3
9001eb40:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001eb44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001eb48:	430b      	orrs	r3, r1
9001eb4a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001eb4e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001eb52:	f820 3b02 	strh.w	r3, [r0], #2
9001eb56:	e7e9      	b.n	9001eb2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001eb58:	4438      	add	r0, r7
9001eb5a:	eb01 040c 	add.w	r4, r1, ip
9001eb5e:	e7e1      	b.n	9001eb24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001eb60:	4438      	add	r0, r7
9001eb62:	eb01 040c 	add.w	r4, r1, ip
9001eb66:	e796      	b.n	9001ea96 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001eb68:	4b03      	ldr	r3, [pc, #12]	; (9001eb78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001eb6a:	6818      	ldr	r0, [r3, #0]
9001eb6c:	6803      	ldr	r3, [r0, #0]
9001eb6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001eb70:	4798      	blx	r3
9001eb72:	e768      	b.n	9001ea46 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001eb74:	fffff800 	.word	0xfffff800
9001eb78:	2403989c 	.word	0x2403989c
9001eb7c:	24039896 	.word	0x24039896

9001eb80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001eb80:	b4f0      	push	{r4, r5, r6, r7}
9001eb82:	4616      	mov	r6, r2
9001eb84:	461c      	mov	r4, r3
9001eb86:	460d      	mov	r5, r1
9001eb88:	9a04      	ldr	r2, [sp, #16]
9001eb8a:	2e01      	cmp	r6, #1
9001eb8c:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001eb90:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001eb94:	d012      	beq.n	9001ebbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001eb96:	d303      	bcc.n	9001eba0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001eb98:	2e02      	cmp	r6, #2
9001eb9a:	d00a      	beq.n	9001ebb2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001eb9c:	bcf0      	pop	{r4, r5, r6, r7}
9001eb9e:	4770      	bx	lr
9001eba0:	6805      	ldr	r5, [r0, #0]
9001eba2:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001eba6:	68ed      	ldr	r5, [r5, #12]
9001eba8:	4613      	mov	r3, r2
9001ebaa:	4622      	mov	r2, r4
9001ebac:	46ac      	mov	ip, r5
9001ebae:	bcf0      	pop	{r4, r5, r6, r7}
9001ebb0:	4760      	bx	ip
9001ebb2:	4621      	mov	r1, r4
9001ebb4:	4628      	mov	r0, r5
9001ebb6:	bcf0      	pop	{r4, r5, r6, r7}
9001ebb8:	f7ff bd94 	b.w	9001e6e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ebbc:	4621      	mov	r1, r4
9001ebbe:	4628      	mov	r0, r5
9001ebc0:	bcf0      	pop	{r4, r5, r6, r7}
9001ebc2:	f7ff bee5 	b.w	9001e990 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001ebc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001ebc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ebcc:	b093      	sub	sp, #76	; 0x4c
9001ebce:	4681      	mov	r9, r0
9001ebd0:	4688      	mov	r8, r1
9001ebd2:	6810      	ldr	r0, [r2, #0]
9001ebd4:	6851      	ldr	r1, [r2, #4]
9001ebd6:	ac0e      	add	r4, sp, #56	; 0x38
9001ebd8:	4616      	mov	r6, r2
9001ebda:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
9001ebde:	4f6b      	ldr	r7, [pc, #428]	; (9001ed8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001ebe0:	c403      	stmia	r4!, {r0, r1}
9001ebe2:	6818      	ldr	r0, [r3, #0]
9001ebe4:	ac10      	add	r4, sp, #64	; 0x40
9001ebe6:	6859      	ldr	r1, [r3, #4]
9001ebe8:	c403      	stmia	r4!, {r0, r1}
9001ebea:	a80e      	add	r0, sp, #56	; 0x38
9001ebec:	f7f7 ff2e 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ebf0:	4631      	mov	r1, r6
9001ebf2:	a810      	add	r0, sp, #64	; 0x40
9001ebf4:	4e66      	ldr	r6, [pc, #408]	; (9001ed90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001ebf6:	f7f7 ff6d 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ebfa:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
9001ebfe:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
9001ec02:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
9001ec06:	6830      	ldr	r0, [r6, #0]
9001ec08:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ec0c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
9001ec10:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
9001ec14:	4489      	add	r9, r1
9001ec16:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
9001ec1a:	440a      	add	r2, r1
9001ec1c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
9001ec20:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001ec24:	4413      	add	r3, r2
9001ec26:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
9001ec2a:	6803      	ldr	r3, [r0, #0]
9001ec2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ec2e:	4798      	blx	r3
9001ec30:	f010 0f80 	tst.w	r0, #128	; 0x80
9001ec34:	6830      	ldr	r0, [r6, #0]
9001ec36:	d01d      	beq.n	9001ec74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001ec38:	2200      	movs	r2, #0
9001ec3a:	6801      	ldr	r1, [r0, #0]
9001ec3c:	b2a4      	uxth	r4, r4
9001ec3e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001ec42:	b2ad      	uxth	r5, r5
9001ec44:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001ec48:	220b      	movs	r2, #11
9001ec4a:	9207      	str	r2, [sp, #28]
9001ec4c:	883a      	ldrh	r2, [r7, #0]
9001ec4e:	9502      	str	r5, [sp, #8]
9001ec50:	9206      	str	r2, [sp, #24]
9001ec52:	2201      	movs	r2, #1
9001ec54:	9401      	str	r4, [sp, #4]
9001ec56:	e9cd a204 	strd	sl, r2, [sp, #16]
9001ec5a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9001ec5e:	9203      	str	r2, [sp, #12]
9001ec60:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
9001ec64:	9200      	str	r2, [sp, #0]
9001ec66:	4642      	mov	r2, r8
9001ec68:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9001ec6a:	4649      	mov	r1, r9
9001ec6c:	47a0      	blx	r4
9001ec6e:	b013      	add	sp, #76	; 0x4c
9001ec70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ec74:	6803      	ldr	r3, [r0, #0]
9001ec76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ec78:	4798      	blx	r3
9001ec7a:	883b      	ldrh	r3, [r7, #0]
9001ec7c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001ec80:	f04f 0e04 	mov.w	lr, #4
9001ec84:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
9001ec88:	435d      	muls	r5, r3
9001ec8a:	fb03 1202 	mla	r2, r3, r2, r1
9001ec8e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ec92:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001ec96:	920c      	str	r2, [sp, #48]	; 0x30
9001ec98:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
9001ec9c:	1b12      	subs	r2, r2, r4
9001ec9e:	920d      	str	r2, [sp, #52]	; 0x34
9001eca0:	0062      	lsls	r2, r4, #1
9001eca2:	1b1c      	subs	r4, r3, r4
9001eca4:	920a      	str	r2, [sp, #40]	; 0x28
9001eca6:	0063      	lsls	r3, r4, #1
9001eca8:	930b      	str	r3, [sp, #44]	; 0x2c
9001ecaa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001ecac:	4298      	cmp	r0, r3
9001ecae:	d266      	bcs.n	9001ed7e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001ecb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001ecb2:	eb00 0b03 	add.w	fp, r0, r3
9001ecb6:	4558      	cmp	r0, fp
9001ecb8:	d25c      	bcs.n	9001ed74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001ecba:	f819 3b01 	ldrb.w	r3, [r9], #1
9001ecbe:	fb1e e303 	smlabb	r3, lr, r3, lr
9001ecc2:	f858 2003 	ldr.w	r2, [r8, r3]
9001ecc6:	0e11      	lsrs	r1, r2, #24
9001ecc8:	d012      	beq.n	9001ecf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001ecca:	29ff      	cmp	r1, #255	; 0xff
9001eccc:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001ecd0:	d110      	bne.n	9001ecf4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001ecd2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001ecd6:	d10d      	bne.n	9001ecf4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001ecd8:	0953      	lsrs	r3, r2, #5
9001ecda:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
9001ecde:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001ece2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ece6:	f027 0707 	bic.w	r7, r7, #7
9001ecea:	431f      	orrs	r7, r3
9001ecec:	433a      	orrs	r2, r7
9001ecee:	8002      	strh	r2, [r0, #0]
9001ecf0:	3002      	adds	r0, #2
9001ecf2:	e7e0      	b.n	9001ecb6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001ecf4:	fb0a f101 	mul.w	r1, sl, r1
9001ecf8:	8806      	ldrh	r6, [r0, #0]
9001ecfa:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001ecfe:	b2d2      	uxtb	r2, r2
9001ed00:	1c4b      	adds	r3, r1, #1
9001ed02:	1235      	asrs	r5, r6, #8
9001ed04:	10f4      	asrs	r4, r6, #3
9001ed06:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001ed0a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001ed0e:	00f6      	lsls	r6, r6, #3
9001ed10:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9001ed14:	121b      	asrs	r3, r3, #8
9001ed16:	b2f6      	uxtb	r6, r6
9001ed18:	b299      	uxth	r1, r3
9001ed1a:	43db      	mvns	r3, r3
9001ed1c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001ed20:	fb1c fc01 	smulbb	ip, ip, r1
9001ed24:	b2db      	uxtb	r3, r3
9001ed26:	fb12 f201 	smulbb	r2, r2, r1
9001ed2a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001ed2e:	fb05 c503 	mla	r5, r5, r3, ip
9001ed32:	b2ff      	uxtb	r7, r7
9001ed34:	fb06 2203 	mla	r2, r6, r3, r2
9001ed38:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001ed3c:	fb17 f701 	smulbb	r7, r7, r1
9001ed40:	b2ad      	uxth	r5, r5
9001ed42:	b292      	uxth	r2, r2
9001ed44:	fb04 7403 	mla	r4, r4, r3, r7
9001ed48:	f105 0c01 	add.w	ip, r5, #1
9001ed4c:	1c57      	adds	r7, r2, #1
9001ed4e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001ed52:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001ed56:	b2a4      	uxth	r4, r4
9001ed58:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001ed5c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001ed60:	433d      	orrs	r5, r7
9001ed62:	1c67      	adds	r7, r4, #1
9001ed64:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001ed68:	0964      	lsrs	r4, r4, #5
9001ed6a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001ed6e:	4325      	orrs	r5, r4
9001ed70:	8005      	strh	r5, [r0, #0]
9001ed72:	e7bd      	b.n	9001ecf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001ed74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001ed76:	4418      	add	r0, r3
9001ed78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ed7a:	4499      	add	r9, r3
9001ed7c:	e795      	b.n	9001ecaa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001ed7e:	4b04      	ldr	r3, [pc, #16]	; (9001ed90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001ed80:	6818      	ldr	r0, [r3, #0]
9001ed82:	6803      	ldr	r3, [r0, #0]
9001ed84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ed86:	4798      	blx	r3
9001ed88:	e771      	b.n	9001ec6e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001ed8a:	bf00      	nop
9001ed8c:	24039896 	.word	0x24039896
9001ed90:	2403989c 	.word	0x2403989c

9001ed94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001ed94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ed98:	b087      	sub	sp, #28
9001ed9a:	4680      	mov	r8, r0
9001ed9c:	460d      	mov	r5, r1
9001ed9e:	4614      	mov	r4, r2
9001eda0:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
9001eda4:	2e00      	cmp	r6, #0
9001eda6:	f000 80b9 	beq.w	9001ef1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001edaa:	6810      	ldr	r0, [r2, #0]
9001edac:	af02      	add	r7, sp, #8
9001edae:	6851      	ldr	r1, [r2, #4]
9001edb0:	c703      	stmia	r7!, {r0, r1}
9001edb2:	6818      	ldr	r0, [r3, #0]
9001edb4:	af04      	add	r7, sp, #16
9001edb6:	6859      	ldr	r1, [r3, #4]
9001edb8:	c703      	stmia	r7!, {r0, r1}
9001edba:	a802      	add	r0, sp, #8
9001edbc:	f7f7 fe46 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001edc0:	4621      	mov	r1, r4
9001edc2:	a804      	add	r0, sp, #16
9001edc4:	f7f7 fe86 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001edc8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001edcc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001edd0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001edd4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001edd8:	fb14 2103 	smlabb	r1, r4, r3, r2
9001eddc:	eb08 0401 	add.w	r4, r8, r1
9001ede0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001ede4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001ede8:	440a      	add	r2, r1
9001edea:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001edee:	f8ad 2010 	strh.w	r2, [sp, #16]
9001edf2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001edf6:	4413      	add	r3, r2
9001edf8:	f8ad 3012 	strh.w	r3, [sp, #18]
9001edfc:	4b49      	ldr	r3, [pc, #292]	; (9001ef24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001edfe:	6818      	ldr	r0, [r3, #0]
9001ee00:	6803      	ldr	r3, [r0, #0]
9001ee02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ee04:	4798      	blx	r3
9001ee06:	4b48      	ldr	r3, [pc, #288]	; (9001ef28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001ee08:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001ee0c:	2eff      	cmp	r6, #255	; 0xff
9001ee0e:	881a      	ldrh	r2, [r3, #0]
9001ee10:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001ee14:	fb02 c101 	mla	r1, r2, r1, ip
9001ee18:	fb02 f207 	mul.w	r2, r2, r7
9001ee1c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ee20:	f105 0104 	add.w	r1, r5, #4
9001ee24:	461d      	mov	r5, r3
9001ee26:	d05a      	beq.n	9001eede <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001ee28:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
9001ee2c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001ee30:	b2b6      	uxth	r6, r6
9001ee32:	9301      	str	r3, [sp, #4]
9001ee34:	fa1f fe8e 	uxth.w	lr, lr
9001ee38:	4282      	cmp	r2, r0
9001ee3a:	d96a      	bls.n	9001ef12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001ee3c:	eb00 0b0a 	add.w	fp, r0, sl
9001ee40:	4583      	cmp	fp, r0
9001ee42:	d940      	bls.n	9001eec6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001ee44:	8805      	ldrh	r5, [r0, #0]
9001ee46:	f814 3b01 	ldrb.w	r3, [r4], #1
9001ee4a:	122f      	asrs	r7, r5, #8
9001ee4c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001ee50:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001ee54:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001ee58:	00ed      	lsls	r5, r5, #3
9001ee5a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001ee5e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001ee62:	fb17 f70e 	smulbb	r7, r7, lr
9001ee66:	b2ed      	uxtb	r5, r5
9001ee68:	fb19 f90e 	smulbb	r9, r9, lr
9001ee6c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ee70:	fb15 f50e 	smulbb	r5, r5, lr
9001ee74:	fb0c 7c06 	mla	ip, ip, r6, r7
9001ee78:	10df      	asrs	r7, r3, #3
9001ee7a:	00db      	lsls	r3, r3, #3
9001ee7c:	fa1f fc8c 	uxth.w	ip, ip
9001ee80:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001ee84:	b2db      	uxtb	r3, r3
9001ee86:	fb07 9706 	mla	r7, r7, r6, r9
9001ee8a:	f10c 0901 	add.w	r9, ip, #1
9001ee8e:	fb03 5306 	mla	r3, r3, r6, r5
9001ee92:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001ee96:	b29b      	uxth	r3, r3
9001ee98:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
9001ee9c:	b2bf      	uxth	r7, r7
9001ee9e:	f103 0c01 	add.w	ip, r3, #1
9001eea2:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001eea6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001eeaa:	ea4c 0c09 	orr.w	ip, ip, r9
9001eeae:	f107 0901 	add.w	r9, r7, #1
9001eeb2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001eeb6:	097f      	lsrs	r7, r7, #5
9001eeb8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001eebc:	ea4c 0c07 	orr.w	ip, ip, r7
9001eec0:	f820 cb02 	strh.w	ip, [r0], #2
9001eec4:	e7bc      	b.n	9001ee40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001eec6:	9b01      	ldr	r3, [sp, #4]
9001eec8:	881b      	ldrh	r3, [r3, #0]
9001eeca:	eba3 0308 	sub.w	r3, r3, r8
9001eece:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001eed2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001eed6:	eba3 0308 	sub.w	r3, r3, r8
9001eeda:	441c      	add	r4, r3
9001eedc:	e7ac      	b.n	9001ee38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001eede:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001eee2:	4282      	cmp	r2, r0
9001eee4:	d915      	bls.n	9001ef12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001eee6:	eb00 060a 	add.w	r6, r0, sl
9001eeea:	4286      	cmp	r6, r0
9001eeec:	d906      	bls.n	9001eefc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001eeee:	f814 3b01 	ldrb.w	r3, [r4], #1
9001eef2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001eef6:	f820 3b02 	strh.w	r3, [r0], #2
9001eefa:	e7f6      	b.n	9001eeea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001eefc:	882b      	ldrh	r3, [r5, #0]
9001eefe:	eba3 0308 	sub.w	r3, r3, r8
9001ef02:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ef06:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001ef0a:	eba3 0308 	sub.w	r3, r3, r8
9001ef0e:	441c      	add	r4, r3
9001ef10:	e7e7      	b.n	9001eee2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001ef12:	4b04      	ldr	r3, [pc, #16]	; (9001ef24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001ef14:	6818      	ldr	r0, [r3, #0]
9001ef16:	6803      	ldr	r3, [r0, #0]
9001ef18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ef1a:	4798      	blx	r3
9001ef1c:	b007      	add	sp, #28
9001ef1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ef22:	bf00      	nop
9001ef24:	2403989c 	.word	0x2403989c
9001ef28:	24039896 	.word	0x24039896

9001ef2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001ef2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ef30:	b091      	sub	sp, #68	; 0x44
9001ef32:	4680      	mov	r8, r0
9001ef34:	460f      	mov	r7, r1
9001ef36:	4614      	mov	r4, r2
9001ef38:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
9001ef3c:	2d00      	cmp	r5, #0
9001ef3e:	d051      	beq.n	9001efe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001ef40:	6810      	ldr	r0, [r2, #0]
9001ef42:	ae0c      	add	r6, sp, #48	; 0x30
9001ef44:	6851      	ldr	r1, [r2, #4]
9001ef46:	f8df 9200 	ldr.w	r9, [pc, #512]	; 9001f148 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001ef4a:	c603      	stmia	r6!, {r0, r1}
9001ef4c:	6818      	ldr	r0, [r3, #0]
9001ef4e:	ae0e      	add	r6, sp, #56	; 0x38
9001ef50:	6859      	ldr	r1, [r3, #4]
9001ef52:	c603      	stmia	r6!, {r0, r1}
9001ef54:	a80c      	add	r0, sp, #48	; 0x30
9001ef56:	f7f7 fd79 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ef5a:	4621      	mov	r1, r4
9001ef5c:	a80e      	add	r0, sp, #56	; 0x38
9001ef5e:	f7f7 fdb9 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ef62:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
9001ef66:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001ef6a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001ef6e:	f8d9 0000 	ldr.w	r0, [r9]
9001ef72:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ef76:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001ef7a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
9001ef7e:	eb08 0401 	add.w	r4, r8, r1
9001ef82:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
9001ef86:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 9001f14c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001ef8a:	440a      	add	r2, r1
9001ef8c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
9001ef90:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
9001ef94:	4413      	add	r3, r2
9001ef96:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9001ef9a:	6803      	ldr	r3, [r0, #0]
9001ef9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ef9e:	4798      	blx	r3
9001efa0:	f010 0f80 	tst.w	r0, #128	; 0x80
9001efa4:	f8d9 0000 	ldr.w	r0, [r9]
9001efa8:	d01f      	beq.n	9001efea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001efaa:	2200      	movs	r2, #0
9001efac:	6801      	ldr	r1, [r0, #0]
9001efae:	b2b6      	uxth	r6, r6
9001efb0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001efb4:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001efb8:	220b      	movs	r2, #11
9001efba:	9207      	str	r2, [sp, #28]
9001efbc:	f8b8 2000 	ldrh.w	r2, [r8]
9001efc0:	9601      	str	r6, [sp, #4]
9001efc2:	9206      	str	r2, [sp, #24]
9001efc4:	2201      	movs	r2, #1
9001efc6:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001efca:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
9001efce:	9203      	str	r2, [sp, #12]
9001efd0:	fa1f f28a 	uxth.w	r2, sl
9001efd4:	9202      	str	r2, [sp, #8]
9001efd6:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001efda:	9200      	str	r2, [sp, #0]
9001efdc:	463a      	mov	r2, r7
9001efde:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
9001efe0:	4621      	mov	r1, r4
9001efe2:	47a8      	blx	r5
9001efe4:	b011      	add	sp, #68	; 0x44
9001efe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001efea:	6803      	ldr	r3, [r0, #0]
9001efec:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001eff0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001eff2:	4798      	blx	r3
9001eff4:	f8b8 2000 	ldrh.w	r2, [r8]
9001eff8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001effc:	2dff      	cmp	r5, #255	; 0xff
9001effe:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
9001f002:	fb0a fa02 	mul.w	sl, sl, r2
9001f006:	fb02 1303 	mla	r3, r2, r3, r1
9001f00a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f00e:	d062      	beq.n	9001f0d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001f010:	ea6f 0c05 	mvn.w	ip, r5
9001f014:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001f018:	b2ad      	uxth	r5, r5
9001f01a:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9001f01e:	fa5f fc8c 	uxtb.w	ip, ip
9001f022:	930a      	str	r3, [sp, #40]	; 0x28
9001f024:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f026:	4298      	cmp	r0, r3
9001f028:	f080 8085 	bcs.w	9001f136 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001f02c:	eb00 0b09 	add.w	fp, r0, r9
9001f030:	4558      	cmp	r0, fp
9001f032:	d246      	bcs.n	9001f0c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001f034:	f814 eb01 	ldrb.w	lr, [r4], #1
9001f038:	2303      	movs	r3, #3
9001f03a:	2204      	movs	r2, #4
9001f03c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001f040:	8803      	ldrh	r3, [r0, #0]
9001f042:	eb07 0a0e 	add.w	sl, r7, lr
9001f046:	1219      	asrs	r1, r3, #8
9001f048:	10da      	asrs	r2, r3, #3
9001f04a:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f04e:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001f052:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001f056:	00db      	lsls	r3, r3, #3
9001f058:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001f05c:	fb18 f805 	smulbb	r8, r8, r5
9001f060:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001f064:	fb1e fe05 	smulbb	lr, lr, r5
9001f068:	b2db      	uxtb	r3, r3
9001f06a:	fb01 810c 	mla	r1, r1, ip, r8
9001f06e:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001f072:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001f076:	fb18 f805 	smulbb	r8, r8, r5
9001f07a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001f07e:	b289      	uxth	r1, r1
9001f080:	fb02 820c 	mla	r2, r2, ip, r8
9001f084:	fb03 e30c 	mla	r3, r3, ip, lr
9001f088:	f101 0801 	add.w	r8, r1, #1
9001f08c:	b292      	uxth	r2, r2
9001f08e:	b29b      	uxth	r3, r3
9001f090:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001f094:	f102 0801 	add.w	r8, r2, #1
9001f098:	f103 0e01 	add.w	lr, r3, #1
9001f09c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001f0a0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9001f0a4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001f0a8:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001f0ac:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f0b0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001f0b4:	ea4e 0101 	orr.w	r1, lr, r1
9001f0b8:	ea41 0108 	orr.w	r1, r1, r8
9001f0bc:	f820 1b02 	strh.w	r1, [r0], #2
9001f0c0:	e7b6      	b.n	9001f030 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001f0c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f0c4:	881b      	ldrh	r3, [r3, #0]
9001f0c6:	1b9b      	subs	r3, r3, r6
9001f0c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f0cc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001f0d0:	1b9b      	subs	r3, r3, r6
9001f0d2:	441c      	add	r4, r3
9001f0d4:	e7a6      	b.n	9001f024 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001f0d6:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001f0da:	2203      	movs	r2, #3
9001f0dc:	2504      	movs	r5, #4
9001f0de:	4919      	ldr	r1, [pc, #100]	; (9001f144 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001f0e0:	4550      	cmp	r0, sl
9001f0e2:	d228      	bcs.n	9001f136 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001f0e4:	eb00 0c09 	add.w	ip, r0, r9
9001f0e8:	4560      	cmp	r0, ip
9001f0ea:	4623      	mov	r3, r4
9001f0ec:	d219      	bcs.n	9001f122 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001f0ee:	f893 e000 	ldrb.w	lr, [r3]
9001f0f2:	3401      	adds	r4, #1
9001f0f4:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001f0f8:	eb07 0b0e 	add.w	fp, r7, lr
9001f0fc:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f100:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001f104:	f89b b001 	ldrb.w	fp, [fp, #1]
9001f108:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001f10c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001f110:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001f114:	ea43 030b 	orr.w	r3, r3, fp
9001f118:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001f11c:	f820 3b02 	strh.w	r3, [r0], #2
9001f120:	e7e2      	b.n	9001f0e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001f122:	f8b8 3000 	ldrh.w	r3, [r8]
9001f126:	1b9b      	subs	r3, r3, r6
9001f128:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f12c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001f130:	1b9b      	subs	r3, r3, r6
9001f132:	441c      	add	r4, r3
9001f134:	e7d4      	b.n	9001f0e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001f136:	4b04      	ldr	r3, [pc, #16]	; (9001f148 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001f138:	6818      	ldr	r0, [r3, #0]
9001f13a:	6803      	ldr	r3, [r0, #0]
9001f13c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f13e:	4798      	blx	r3
9001f140:	e750      	b.n	9001efe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001f142:	bf00      	nop
9001f144:	fffff800 	.word	0xfffff800
9001f148:	2403989c 	.word	0x2403989c
9001f14c:	24039896 	.word	0x24039896

9001f150 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001f150:	b4f0      	push	{r4, r5, r6, r7}
9001f152:	460c      	mov	r4, r1
9001f154:	4611      	mov	r1, r2
9001f156:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001f15a:	461a      	mov	r2, r3
9001f15c:	780f      	ldrb	r7, [r1, #0]
9001f15e:	9b04      	ldr	r3, [sp, #16]
9001f160:	2f01      	cmp	r7, #1
9001f162:	784e      	ldrb	r6, [r1, #1]
9001f164:	d036      	beq.n	9001f1d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
9001f166:	d31e      	bcc.n	9001f1a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
9001f168:	2f02      	cmp	r7, #2
9001f16a:	d14a      	bne.n	9001f202 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001f16c:	2e03      	cmp	r6, #3
9001f16e:	d848      	bhi.n	9001f202 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001f170:	e8df f006 	tbb	[pc, r6]
9001f174:	16140702 	.word	0x16140702
9001f178:	9504      	str	r5, [sp, #16]
9001f17a:	4620      	mov	r0, r4
9001f17c:	bcf0      	pop	{r4, r5, r6, r7}
9001f17e:	f7ff be09 	b.w	9001ed94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001f182:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001f184:	2800      	cmp	r0, #0
9001f186:	d03c      	beq.n	9001f202 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001f188:	6806      	ldr	r6, [r0, #0]
9001f18a:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001f18e:	68b5      	ldr	r5, [r6, #8]
9001f190:	4613      	mov	r3, r2
9001f192:	46ac      	mov	ip, r5
9001f194:	460a      	mov	r2, r1
9001f196:	4621      	mov	r1, r4
9001f198:	bcf0      	pop	{r4, r5, r6, r7}
9001f19a:	4760      	bx	ip
9001f19c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001f19e:	e7f1      	b.n	9001f184 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001f1a0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001f1a4:	e7ee      	b.n	9001f184 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001f1a6:	2e03      	cmp	r6, #3
9001f1a8:	d82b      	bhi.n	9001f202 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001f1aa:	e8df f006 	tbb	[pc, r6]
9001f1ae:	0702      	.short	0x0702
9001f1b0:	100e      	.short	0x100e
9001f1b2:	9504      	str	r5, [sp, #16]
9001f1b4:	4620      	mov	r0, r4
9001f1b6:	bcf0      	pop	{r4, r5, r6, r7}
9001f1b8:	f7ff bd06 	b.w	9001ebc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001f1bc:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001f1be:	b300      	cbz	r0, 9001f202 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001f1c0:	6806      	ldr	r6, [r0, #0]
9001f1c2:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001f1c6:	68f5      	ldr	r5, [r6, #12]
9001f1c8:	e7e2      	b.n	9001f190 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001f1ca:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001f1cc:	e7f7      	b.n	9001f1be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
9001f1ce:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001f1d2:	e7f4      	b.n	9001f1be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
9001f1d4:	2e03      	cmp	r6, #3
9001f1d6:	d814      	bhi.n	9001f202 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001f1d8:	e8df f006 	tbb	[pc, r6]
9001f1dc:	100e0702 	.word	0x100e0702
9001f1e0:	9504      	str	r5, [sp, #16]
9001f1e2:	4620      	mov	r0, r4
9001f1e4:	bcf0      	pop	{r4, r5, r6, r7}
9001f1e6:	f7ff bea1 	b.w	9001ef2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001f1ea:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001f1ec:	b148      	cbz	r0, 9001f202 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001f1ee:	6806      	ldr	r6, [r0, #0]
9001f1f0:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001f1f4:	6935      	ldr	r5, [r6, #16]
9001f1f6:	e7cb      	b.n	9001f190 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001f1f8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001f1fa:	e7f7      	b.n	9001f1ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
9001f1fc:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001f200:	e7f4      	b.n	9001f1ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
9001f202:	bcf0      	pop	{r4, r5, r6, r7}
9001f204:	4770      	bx	lr
	...

9001f208 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001f208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f20c:	b087      	sub	sp, #28
9001f20e:	4604      	mov	r4, r0
9001f210:	460e      	mov	r6, r1
9001f212:	6810      	ldr	r0, [r2, #0]
9001f214:	6851      	ldr	r1, [r2, #4]
9001f216:	ad02      	add	r5, sp, #8
9001f218:	4617      	mov	r7, r2
9001f21a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
9001f21e:	f8df 9230 	ldr.w	r9, [pc, #560]	; 9001f450 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001f222:	c503      	stmia	r5!, {r0, r1}
9001f224:	6818      	ldr	r0, [r3, #0]
9001f226:	ad04      	add	r5, sp, #16
9001f228:	6859      	ldr	r1, [r3, #4]
9001f22a:	c503      	stmia	r5!, {r0, r1}
9001f22c:	a802      	add	r0, sp, #8
9001f22e:	f7f7 fc0d 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f232:	4639      	mov	r1, r7
9001f234:	a804      	add	r0, sp, #16
9001f236:	f7f7 fc4d 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f23a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001f23e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001f242:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001f246:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001f24a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f24e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001f252:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001f256:	440e      	add	r6, r1
9001f258:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001f25c:	440a      	add	r2, r1
9001f25e:	f8ad 2010 	strh.w	r2, [sp, #16]
9001f262:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001f266:	4413      	add	r3, r2
9001f268:	f8ad 3012 	strh.w	r3, [sp, #18]
9001f26c:	4b77      	ldr	r3, [pc, #476]	; (9001f44c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001f26e:	6818      	ldr	r0, [r3, #0]
9001f270:	6803      	ldr	r3, [r0, #0]
9001f272:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f274:	4798      	blx	r3
9001f276:	f8b9 b000 	ldrh.w	fp, [r9]
9001f27a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001f27e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001f282:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001f286:	fb05 f50b 	mul.w	r5, r5, fp
9001f28a:	fb0b 2303 	mla	r3, fp, r3, r2
9001f28e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f292:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001f296:	9300      	str	r3, [sp, #0]
9001f298:	d069      	beq.n	9001f36e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001f29a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001f29e:	4558      	cmp	r0, fp
9001f2a0:	f080 80cc 	bcs.w	9001f43c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001f2a4:	9b00      	ldr	r3, [sp, #0]
9001f2a6:	4631      	mov	r1, r6
9001f2a8:	18c3      	adds	r3, r0, r3
9001f2aa:	9301      	str	r3, [sp, #4]
9001f2ac:	9b01      	ldr	r3, [sp, #4]
9001f2ae:	4298      	cmp	r0, r3
9001f2b0:	d24f      	bcs.n	9001f352 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001f2b2:	f811 2b01 	ldrb.w	r2, [r1], #1
9001f2b6:	2a00      	cmp	r2, #0
9001f2b8:	d048      	beq.n	9001f34c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001f2ba:	fb0a f202 	mul.w	r2, sl, r2
9001f2be:	1c53      	adds	r3, r2, #1
9001f2c0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001f2c4:	121b      	asrs	r3, r3, #8
9001f2c6:	d041      	beq.n	9001f34c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001f2c8:	8802      	ldrh	r2, [r0, #0]
9001f2ca:	b29e      	uxth	r6, r3
9001f2cc:	f8b4 c000 	ldrh.w	ip, [r4]
9001f2d0:	43db      	mvns	r3, r3
9001f2d2:	1215      	asrs	r5, r2, #8
9001f2d4:	b2db      	uxtb	r3, r3
9001f2d6:	ea4f 272c 	mov.w	r7, ip, asr #8
9001f2da:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001f2de:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001f2e2:	fb15 f503 	smulbb	r5, r5, r3
9001f2e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001f2ea:	00d2      	lsls	r2, r2, #3
9001f2ec:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001f2f0:	fb07 5706 	mla	r7, r7, r6, r5
9001f2f4:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001f2f8:	b2d2      	uxtb	r2, r2
9001f2fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f2fe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001f302:	fb1e fe03 	smulbb	lr, lr, r3
9001f306:	b2bf      	uxth	r7, r7
9001f308:	fb12 f203 	smulbb	r2, r2, r3
9001f30c:	fa5f fc8c 	uxtb.w	ip, ip
9001f310:	fb05 e506 	mla	r5, r5, r6, lr
9001f314:	f107 0e01 	add.w	lr, r7, #1
9001f318:	fb0c 2c06 	mla	ip, ip, r6, r2
9001f31c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001f320:	fa1f fc8c 	uxth.w	ip, ip
9001f324:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
9001f328:	b2ad      	uxth	r5, r5
9001f32a:	f10c 0701 	add.w	r7, ip, #1
9001f32e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001f332:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f336:	ea47 070e 	orr.w	r7, r7, lr
9001f33a:	f105 0e01 	add.w	lr, r5, #1
9001f33e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001f342:	096d      	lsrs	r5, r5, #5
9001f344:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f348:	432f      	orrs	r7, r5
9001f34a:	8007      	strh	r7, [r0, #0]
9001f34c:	3002      	adds	r0, #2
9001f34e:	3402      	adds	r4, #2
9001f350:	e7ac      	b.n	9001f2ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001f352:	f8b9 3000 	ldrh.w	r3, [r9]
9001f356:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001f35a:	eba3 0308 	sub.w	r3, r3, r8
9001f35e:	eba6 0608 	sub.w	r6, r6, r8
9001f362:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f366:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001f36a:	440e      	add	r6, r1
9001f36c:	e797      	b.n	9001f29e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001f36e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001f372:	42a8      	cmp	r0, r5
9001f374:	d262      	bcs.n	9001f43c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001f376:	9b00      	ldr	r3, [sp, #0]
9001f378:	4631      	mov	r1, r6
9001f37a:	eb00 0b03 	add.w	fp, r0, r3
9001f37e:	4558      	cmp	r0, fp
9001f380:	d24e      	bcs.n	9001f420 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001f382:	f811 3b01 	ldrb.w	r3, [r1], #1
9001f386:	b12b      	cbz	r3, 9001f394 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001f388:	2bff      	cmp	r3, #255	; 0xff
9001f38a:	f8b4 e000 	ldrh.w	lr, [r4]
9001f38e:	d104      	bne.n	9001f39a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001f390:	f8a0 e000 	strh.w	lr, [r0]
9001f394:	3002      	adds	r0, #2
9001f396:	3402      	adds	r4, #2
9001f398:	e7f1      	b.n	9001f37e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001f39a:	8802      	ldrh	r2, [r0, #0]
9001f39c:	b29f      	uxth	r7, r3
9001f39e:	43db      	mvns	r3, r3
9001f3a0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001f3a4:	1216      	asrs	r6, r2, #8
9001f3a6:	b2db      	uxtb	r3, r3
9001f3a8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001f3ac:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001f3b0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001f3b4:	00d2      	lsls	r2, r2, #3
9001f3b6:	fb16 f603 	smulbb	r6, r6, r3
9001f3ba:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001f3be:	b2d2      	uxtb	r2, r2
9001f3c0:	fb0c 6c07 	mla	ip, ip, r7, r6
9001f3c4:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001f3c8:	fb1a fa03 	smulbb	sl, sl, r3
9001f3cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001f3d0:	fa1f fc8c 	uxth.w	ip, ip
9001f3d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001f3d8:	fb12 f303 	smulbb	r3, r2, r3
9001f3dc:	fa5f fe8e 	uxtb.w	lr, lr
9001f3e0:	fb06 a607 	mla	r6, r6, r7, sl
9001f3e4:	f10c 0201 	add.w	r2, ip, #1
9001f3e8:	fb0e 3307 	mla	r3, lr, r7, r3
9001f3ec:	b2b6      	uxth	r6, r6
9001f3ee:	b29b      	uxth	r3, r3
9001f3f0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001f3f4:	f106 0a01 	add.w	sl, r6, #1
9001f3f8:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
9001f3fc:	f103 0c01 	add.w	ip, r3, #1
9001f400:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001f404:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001f408:	0976      	lsrs	r6, r6, #5
9001f40a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001f40e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001f412:	ea4c 0c02 	orr.w	ip, ip, r2
9001f416:	ea4c 0c06 	orr.w	ip, ip, r6
9001f41a:	f8a0 c000 	strh.w	ip, [r0]
9001f41e:	e7b9      	b.n	9001f394 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001f420:	f8b9 3000 	ldrh.w	r3, [r9]
9001f424:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001f428:	eba3 0308 	sub.w	r3, r3, r8
9001f42c:	eba6 0608 	sub.w	r6, r6, r8
9001f430:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f434:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001f438:	440e      	add	r6, r1
9001f43a:	e79a      	b.n	9001f372 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001f43c:	4b03      	ldr	r3, [pc, #12]	; (9001f44c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001f43e:	6818      	ldr	r0, [r3, #0]
9001f440:	6803      	ldr	r3, [r0, #0]
9001f442:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f444:	4798      	blx	r3
9001f446:	b007      	add	sp, #28
9001f448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f44c:	2403989c 	.word	0x2403989c
9001f450:	24039896 	.word	0x24039896

9001f454 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001f454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f458:	b089      	sub	sp, #36	; 0x24
9001f45a:	4682      	mov	sl, r0
9001f45c:	460f      	mov	r7, r1
9001f45e:	4691      	mov	r9, r2
9001f460:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
9001f464:	4698      	mov	r8, r3
9001f466:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001f468:	2e00      	cmp	r6, #0
9001f46a:	d03d      	beq.n	9001f4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f46c:	4608      	mov	r0, r1
9001f46e:	f7fa fe4d 	bl	9001a10c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001f472:	4605      	mov	r5, r0
9001f474:	4638      	mov	r0, r7
9001f476:	f7fa fe7d 	bl	9001a174 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001f47a:	f8ad 000e 	strh.w	r0, [sp, #14]
9001f47e:	4638      	mov	r0, r7
9001f480:	f8ad 9008 	strh.w	r9, [sp, #8]
9001f484:	f8ad 500c 	strh.w	r5, [sp, #12]
9001f488:	f8ad 800a 	strh.w	r8, [sp, #10]
9001f48c:	f7fa ff2a 	bl	9001a2e4 <_ZNK8touchgfx6Bitmap7getDataEv>
9001f490:	4605      	mov	r5, r0
9001f492:	4638      	mov	r0, r7
9001f494:	f7fa ff56 	bl	9001a344 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001f498:	4681      	mov	r9, r0
9001f49a:	4638      	mov	r0, r7
9001f49c:	f7fa ffa6 	bl	9001a3ec <_ZNK8touchgfx6Bitmap9getFormatEv>
9001f4a0:	280b      	cmp	r0, #11
9001f4a2:	d821      	bhi.n	9001f4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f4a4:	e8df f000 	tbb	[pc, r0]
9001f4a8:	2006aebe 	.word	0x2006aebe
9001f4ac:	20202020 	.word	0x20202020
9001f4b0:	b5202020 	.word	0xb5202020
9001f4b4:	4bb0      	ldr	r3, [pc, #704]	; (9001f778 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
9001f4b6:	6818      	ldr	r0, [r3, #0]
9001f4b8:	6803      	ldr	r3, [r0, #0]
9001f4ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001f4bc:	4798      	blx	r3
9001f4be:	2eff      	cmp	r6, #255	; 0xff
9001f4c0:	d101      	bne.n	9001f4c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001f4c2:	0683      	lsls	r3, r0, #26
9001f4c4:	d506      	bpl.n	9001f4d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
9001f4c6:	4633      	mov	r3, r6
9001f4c8:	4622      	mov	r2, r4
9001f4ca:	a902      	add	r1, sp, #8
9001f4cc:	4628      	mov	r0, r5
9001f4ce:	f7ff f909 	bl	9001e6e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f4d2:	e009      	b.n	9001f4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f4d4:	4638      	mov	r0, r7
9001f4d6:	f7fa fecd 	bl	9001a274 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001f4da:	b940      	cbnz	r0, 9001f4ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
9001f4dc:	4623      	mov	r3, r4
9001f4de:	aa02      	add	r2, sp, #8
9001f4e0:	4629      	mov	r1, r5
9001f4e2:	4650      	mov	r0, sl
9001f4e4:	f7ff f9e4 	bl	9001e8b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001f4e8:	b009      	add	sp, #36	; 0x24
9001f4ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f4ee:	f10d 0818 	add.w	r8, sp, #24
9001f4f2:	4639      	mov	r1, r7
9001f4f4:	af04      	add	r7, sp, #16
9001f4f6:	4640      	mov	r0, r8
9001f4f8:	f7fa fe70 	bl	9001a1dc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001f4fc:	e898 0003 	ldmia.w	r8, {r0, r1}
9001f500:	e887 0003 	stmia.w	r7, {r0, r1}
9001f504:	4638      	mov	r0, r7
9001f506:	4621      	mov	r1, r4
9001f508:	f7f2 f982 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
9001f50c:	4638      	mov	r0, r7
9001f50e:	f7f2 f9c2 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
9001f512:	2800      	cmp	r0, #0
9001f514:	d1d7      	bne.n	9001f4c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001f516:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001f51a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001f51e:	4293      	cmp	r3, r2
9001f520:	dd12      	ble.n	9001f548 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
9001f522:	1a9b      	subs	r3, r3, r2
9001f524:	f9b4 0000 	ldrsh.w	r0, [r4]
9001f528:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001f52c:	f8ad 0018 	strh.w	r0, [sp, #24]
9001f530:	4628      	mov	r0, r5
9001f532:	f8ad 201a 	strh.w	r2, [sp, #26]
9001f536:	4642      	mov	r2, r8
9001f538:	f8ad 101c 	strh.w	r1, [sp, #28]
9001f53c:	a902      	add	r1, sp, #8
9001f53e:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f542:	4633      	mov	r3, r6
9001f544:	f7ff f8ce 	bl	9001e6e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f548:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001f54c:	f9b4 2000 	ldrsh.w	r2, [r4]
9001f550:	4293      	cmp	r3, r2
9001f552:	dd12      	ble.n	9001f57a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
9001f554:	1a9b      	subs	r3, r3, r2
9001f556:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001f55a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001f55e:	f8ad 2018 	strh.w	r2, [sp, #24]
9001f562:	4642      	mov	r2, r8
9001f564:	f8ad 001a 	strh.w	r0, [sp, #26]
9001f568:	4628      	mov	r0, r5
9001f56a:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f56e:	23ff      	movs	r3, #255	; 0xff
9001f570:	f8ad 101e 	strh.w	r1, [sp, #30]
9001f574:	a902      	add	r1, sp, #8
9001f576:	f7ff f8b5 	bl	9001e6e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f57a:	463b      	mov	r3, r7
9001f57c:	aa02      	add	r2, sp, #8
9001f57e:	4629      	mov	r1, r5
9001f580:	4650      	mov	r0, sl
9001f582:	f7ff f995 	bl	9001e8b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001f586:	88a2      	ldrh	r2, [r4, #4]
9001f588:	8823      	ldrh	r3, [r4, #0]
9001f58a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001f58e:	4413      	add	r3, r2
9001f590:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f594:	440a      	add	r2, r1
9001f596:	b29b      	uxth	r3, r3
9001f598:	b292      	uxth	r2, r2
9001f59a:	b218      	sxth	r0, r3
9001f59c:	b211      	sxth	r1, r2
9001f59e:	4288      	cmp	r0, r1
9001f5a0:	dd12      	ble.n	9001f5c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
9001f5a2:	1a9b      	subs	r3, r3, r2
9001f5a4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001f5a8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001f5ac:	4642      	mov	r2, r8
9001f5ae:	f8ad 1018 	strh.w	r1, [sp, #24]
9001f5b2:	a902      	add	r1, sp, #8
9001f5b4:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f5b8:	23ff      	movs	r3, #255	; 0xff
9001f5ba:	f8ad 001e 	strh.w	r0, [sp, #30]
9001f5be:	4628      	mov	r0, r5
9001f5c0:	f8ad 601a 	strh.w	r6, [sp, #26]
9001f5c4:	f7ff f88e 	bl	9001e6e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f5c8:	88e2      	ldrh	r2, [r4, #6]
9001f5ca:	8863      	ldrh	r3, [r4, #2]
9001f5cc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001f5d0:	4413      	add	r3, r2
9001f5d2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001f5d6:	440a      	add	r2, r1
9001f5d8:	b29b      	uxth	r3, r3
9001f5da:	b292      	uxth	r2, r2
9001f5dc:	b218      	sxth	r0, r3
9001f5de:	b211      	sxth	r1, r2
9001f5e0:	4288      	cmp	r0, r1
9001f5e2:	dd81      	ble.n	9001f4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f5e4:	1a9b      	subs	r3, r3, r2
9001f5e6:	f9b4 6000 	ldrsh.w	r6, [r4]
9001f5ea:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001f5ee:	4642      	mov	r2, r8
9001f5f0:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f5f4:	23ff      	movs	r3, #255	; 0xff
9001f5f6:	f8ad 6018 	strh.w	r6, [sp, #24]
9001f5fa:	f8ad 101a 	strh.w	r1, [sp, #26]
9001f5fe:	f8ad 001c 	strh.w	r0, [sp, #28]
9001f602:	e762      	b.n	9001f4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
9001f604:	4633      	mov	r3, r6
9001f606:	4622      	mov	r2, r4
9001f608:	a902      	add	r1, sp, #8
9001f60a:	4628      	mov	r0, r5
9001f60c:	f7ff f9c0 	bl	9001e990 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001f610:	e76a      	b.n	9001f4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f612:	e9cd 4600 	strd	r4, r6, [sp]
9001f616:	ab02      	add	r3, sp, #8
9001f618:	464a      	mov	r2, r9
9001f61a:	4629      	mov	r1, r5
9001f61c:	4650      	mov	r0, sl
9001f61e:	f7ff fd97 	bl	9001f150 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001f622:	e761      	b.n	9001f4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f624:	4638      	mov	r0, r7
9001f626:	f7fa fe25 	bl	9001a274 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001f62a:	b950      	cbnz	r0, 9001f642 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
9001f62c:	f8da 3000 	ldr.w	r3, [sl]
9001f630:	aa02      	add	r2, sp, #8
9001f632:	4629      	mov	r1, r5
9001f634:	e9cd 6000 	strd	r6, r0, [sp]
9001f638:	4650      	mov	r0, sl
9001f63a:	68de      	ldr	r6, [r3, #12]
9001f63c:	4623      	mov	r3, r4
9001f63e:	47b0      	blx	r6
9001f640:	e752      	b.n	9001f4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f642:	f10d 0818 	add.w	r8, sp, #24
9001f646:	4639      	mov	r1, r7
9001f648:	af04      	add	r7, sp, #16
9001f64a:	4640      	mov	r0, r8
9001f64c:	f7fa fdc6 	bl	9001a1dc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001f650:	e898 0003 	ldmia.w	r8, {r0, r1}
9001f654:	e887 0003 	stmia.w	r7, {r0, r1}
9001f658:	4638      	mov	r0, r7
9001f65a:	4621      	mov	r1, r4
9001f65c:	f7f2 f8d8 	bl	90011810 <_ZN8touchgfx4RectaNERKS0_>
9001f660:	4638      	mov	r0, r7
9001f662:	f7f2 f918 	bl	90011896 <_ZNK8touchgfx4Rect7isEmptyEv>
9001f666:	b138      	cbz	r0, 9001f678 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
9001f668:	4623      	mov	r3, r4
9001f66a:	9600      	str	r6, [sp, #0]
9001f66c:	aa02      	add	r2, sp, #8
9001f66e:	4649      	mov	r1, r9
9001f670:	4628      	mov	r0, r5
9001f672:	f7ff fdc9 	bl	9001f208 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f676:	e737      	b.n	9001f4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f678:	f8da 3000 	ldr.w	r3, [sl]
9001f67c:	aa02      	add	r2, sp, #8
9001f67e:	4629      	mov	r1, r5
9001f680:	e9cd 6000 	strd	r6, r0, [sp]
9001f684:	4650      	mov	r0, sl
9001f686:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001f68a:	463b      	mov	r3, r7
9001f68c:	47d8      	blx	fp
9001f68e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001f692:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001f696:	4293      	cmp	r3, r2
9001f698:	dd13      	ble.n	9001f6c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
9001f69a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001f69e:	1a9b      	subs	r3, r3, r2
9001f6a0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001f6a4:	f8ad 0018 	strh.w	r0, [sp, #24]
9001f6a8:	4628      	mov	r0, r5
9001f6aa:	f8ad 201a 	strh.w	r2, [sp, #26]
9001f6ae:	aa02      	add	r2, sp, #8
9001f6b0:	f8ad 101c 	strh.w	r1, [sp, #28]
9001f6b4:	4649      	mov	r1, r9
9001f6b6:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f6ba:	4643      	mov	r3, r8
9001f6bc:	9600      	str	r6, [sp, #0]
9001f6be:	f7ff fda3 	bl	9001f208 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f6c2:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001f6c6:	f9b4 2000 	ldrsh.w	r2, [r4]
9001f6ca:	4293      	cmp	r3, r2
9001f6cc:	dd13      	ble.n	9001f6f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
9001f6ce:	1a9b      	subs	r3, r3, r2
9001f6d0:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001f6d4:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001f6d8:	f8ad 2018 	strh.w	r2, [sp, #24]
9001f6dc:	aa02      	add	r2, sp, #8
9001f6de:	f8ad 001a 	strh.w	r0, [sp, #26]
9001f6e2:	4628      	mov	r0, r5
9001f6e4:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f6e8:	4643      	mov	r3, r8
9001f6ea:	f8ad 101e 	strh.w	r1, [sp, #30]
9001f6ee:	4649      	mov	r1, r9
9001f6f0:	9600      	str	r6, [sp, #0]
9001f6f2:	f7ff fd89 	bl	9001f208 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f6f6:	88a2      	ldrh	r2, [r4, #4]
9001f6f8:	8823      	ldrh	r3, [r4, #0]
9001f6fa:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001f6fe:	4413      	add	r3, r2
9001f700:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f704:	440a      	add	r2, r1
9001f706:	b29b      	uxth	r3, r3
9001f708:	b292      	uxth	r2, r2
9001f70a:	b218      	sxth	r0, r3
9001f70c:	b211      	sxth	r1, r2
9001f70e:	4288      	cmp	r0, r1
9001f710:	dd13      	ble.n	9001f73a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
9001f712:	1a9b      	subs	r3, r3, r2
9001f714:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001f718:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001f71c:	aa02      	add	r2, sp, #8
9001f71e:	f8ad 1018 	strh.w	r1, [sp, #24]
9001f722:	4649      	mov	r1, r9
9001f724:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f728:	4643      	mov	r3, r8
9001f72a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001f72e:	4628      	mov	r0, r5
9001f730:	9600      	str	r6, [sp, #0]
9001f732:	f8ad 701a 	strh.w	r7, [sp, #26]
9001f736:	f7ff fd67 	bl	9001f208 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f73a:	88e2      	ldrh	r2, [r4, #6]
9001f73c:	8863      	ldrh	r3, [r4, #2]
9001f73e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001f742:	4413      	add	r3, r2
9001f744:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001f748:	440a      	add	r2, r1
9001f74a:	b29b      	uxth	r3, r3
9001f74c:	b292      	uxth	r2, r2
9001f74e:	b218      	sxth	r0, r3
9001f750:	b211      	sxth	r1, r2
9001f752:	4288      	cmp	r0, r1
9001f754:	f77f aec8 	ble.w	9001f4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f758:	f9b4 7000 	ldrsh.w	r7, [r4]
9001f75c:	1a9b      	subs	r3, r3, r2
9001f75e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001f762:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f766:	4643      	mov	r3, r8
9001f768:	f8ad 7018 	strh.w	r7, [sp, #24]
9001f76c:	f8ad 101a 	strh.w	r1, [sp, #26]
9001f770:	f8ad 001c 	strh.w	r0, [sp, #28]
9001f774:	9600      	str	r6, [sp, #0]
9001f776:	e779      	b.n	9001f66c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
9001f778:	2403989c 	.word	0x2403989c

9001f77c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001f77c:	b180      	cbz	r0, 9001f7a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001f77e:	2903      	cmp	r1, #3
9001f780:	d81c      	bhi.n	9001f7bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001f782:	e8df f001 	tbb	[pc, r1]
9001f786:	1d02      	.short	0x1d02
9001f788:	1f08      	.short	0x1f08
9001f78a:	4b10      	ldr	r3, [pc, #64]	; (9001f7cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001f78c:	8818      	ldrh	r0, [r3, #0]
9001f78e:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f792:	4240      	negs	r0, r0
9001f794:	4770      	bx	lr
9001f796:	4b0d      	ldr	r3, [pc, #52]	; (9001f7cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001f798:	8818      	ldrh	r0, [r3, #0]
9001f79a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f79e:	4770      	bx	lr
9001f7a0:	2903      	cmp	r1, #3
9001f7a2:	d80b      	bhi.n	9001f7bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001f7a4:	a301      	add	r3, pc, #4	; (adr r3, 9001f7ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001f7a6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001f7aa:	bf00      	nop
9001f7ac:	9001f7c1 	.word	0x9001f7c1
9001f7b0:	9001f797 	.word	0x9001f797
9001f7b4:	9001f7c5 	.word	0x9001f7c5
9001f7b8:	9001f78b 	.word	0x9001f78b
9001f7bc:	2000      	movs	r0, #0
9001f7be:	4770      	bx	lr
9001f7c0:	2001      	movs	r0, #1
9001f7c2:	4770      	bx	lr
9001f7c4:	f04f 30ff 	mov.w	r0, #4294967295
9001f7c8:	4770      	bx	lr
9001f7ca:	bf00      	nop
9001f7cc:	24039896 	.word	0x24039896

9001f7d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001f7d0:	b180      	cbz	r0, 9001f7f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001f7d2:	2903      	cmp	r1, #3
9001f7d4:	d81c      	bhi.n	9001f810 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001f7d6:	e8df f001 	tbb	[pc, r1]
9001f7da:	021d      	.short	0x021d
9001f7dc:	071f      	.short	0x071f
9001f7de:	4b10      	ldr	r3, [pc, #64]	; (9001f820 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001f7e0:	8818      	ldrh	r0, [r3, #0]
9001f7e2:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f7e6:	4770      	bx	lr
9001f7e8:	4b0d      	ldr	r3, [pc, #52]	; (9001f820 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001f7ea:	8818      	ldrh	r0, [r3, #0]
9001f7ec:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f7f0:	4240      	negs	r0, r0
9001f7f2:	4770      	bx	lr
9001f7f4:	2903      	cmp	r1, #3
9001f7f6:	d80b      	bhi.n	9001f810 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001f7f8:	a301      	add	r3, pc, #4	; (adr r3, 9001f800 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001f7fa:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001f7fe:	bf00      	nop
9001f800:	9001f7df 	.word	0x9001f7df
9001f804:	9001f819 	.word	0x9001f819
9001f808:	9001f7e9 	.word	0x9001f7e9
9001f80c:	9001f815 	.word	0x9001f815
9001f810:	2000      	movs	r0, #0
9001f812:	4770      	bx	lr
9001f814:	2001      	movs	r0, #1
9001f816:	4770      	bx	lr
9001f818:	f04f 30ff 	mov.w	r0, #4294967295
9001f81c:	4770      	bx	lr
9001f81e:	bf00      	nop
9001f820:	24039896 	.word	0x24039896

9001f824 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001f824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f828:	b099      	sub	sp, #100	; 0x64
9001f82a:	910b      	str	r1, [sp, #44]	; 0x2c
9001f82c:	a914      	add	r1, sp, #80	; 0x50
9001f82e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
9001f832:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
9001f836:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
9001f83a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
9001f83e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
9001f842:	e881 000c 	stmia.w	r1, {r2, r3}
9001f846:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
9001f84a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
9001f84e:	9309      	str	r3, [sp, #36]	; 0x24
9001f850:	f891 900d 	ldrb.w	r9, [r1, #13]
9001f854:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
9001f858:	ea4f 1749 	mov.w	r7, r9, lsl #5
9001f85c:	9310      	str	r3, [sp, #64]	; 0x40
9001f85e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
9001f862:	930c      	str	r3, [sp, #48]	; 0x30
9001f864:	f407 7380 	and.w	r3, r7, #256	; 0x100
9001f868:	798f      	ldrb	r7, [r1, #6]
9001f86a:	431f      	orrs	r7, r3
9001f86c:	f000 8195 	beq.w	9001fb9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f870:	ea4f 1909 	mov.w	r9, r9, lsl #4
9001f874:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001f878:	f891 9007 	ldrb.w	r9, [r1, #7]
9001f87c:	ea59 0903 	orrs.w	r9, r9, r3
9001f880:	f000 818b 	beq.w	9001fb9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f884:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001f888:	b29b      	uxth	r3, r3
9001f88a:	2d00      	cmp	r5, #0
9001f88c:	f000 812e 	beq.w	9001faec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9001f890:	1aed      	subs	r5, r5, r3
9001f892:	b2ad      	uxth	r5, r5
9001f894:	042b      	lsls	r3, r5, #16
9001f896:	d502      	bpl.n	9001f89e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001f898:	1b64      	subs	r4, r4, r5
9001f89a:	2500      	movs	r5, #0
9001f89c:	b224      	sxth	r4, r4
9001f89e:	f9b2 1000 	ldrsh.w	r1, [r2]
9001f8a2:	a814      	add	r0, sp, #80	; 0x50
9001f8a4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9001f8a8:	428c      	cmp	r4, r1
9001f8aa:	b28b      	uxth	r3, r1
9001f8ac:	bfbf      	itttt	lt
9001f8ae:	18ed      	addlt	r5, r5, r3
9001f8b0:	1b2c      	sublt	r4, r5, r4
9001f8b2:	b2a5      	uxthlt	r5, r4
9001f8b4:	460c      	movlt	r4, r1
9001f8b6:	8891      	ldrh	r1, [r2, #4]
9001f8b8:	440b      	add	r3, r1
9001f8ba:	4621      	mov	r1, r4
9001f8bc:	b21b      	sxth	r3, r3
9001f8be:	930f      	str	r3, [sp, #60]	; 0x3c
9001f8c0:	88d3      	ldrh	r3, [r2, #6]
9001f8c2:	8852      	ldrh	r2, [r2, #2]
9001f8c4:	4413      	add	r3, r2
9001f8c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f8c8:	b21b      	sxth	r3, r3
9001f8ca:	930d      	str	r3, [sp, #52]	; 0x34
9001f8cc:	4bbd      	ldr	r3, [pc, #756]	; (9001fbc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9001f8ce:	f893 b000 	ldrb.w	fp, [r3]
9001f8d2:	f10b 3cff 	add.w	ip, fp, #4294967295
9001f8d6:	f1dc 0300 	rsbs	r3, ip, #0
9001f8da:	eb43 030c 	adc.w	r3, r3, ip
9001f8de:	930e      	str	r3, [sp, #56]	; 0x38
9001f8e0:	4653      	mov	r3, sl
9001f8e2:	f7f6 ff28 	bl	90016736 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001f8e6:	4621      	mov	r1, r4
9001f8e8:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
9001f8ec:	4653      	mov	r3, sl
9001f8ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f8f0:	a814      	add	r0, sp, #80	; 0x50
9001f8f2:	f7f6 ff3d 	bl	90016770 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001f8f6:	a918      	add	r1, sp, #96	; 0x60
9001f8f8:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001f8fc:	a817      	add	r0, sp, #92	; 0x5c
9001f8fe:	f7f7 f863 	bl	900169c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001f902:	f1ba 0f00 	cmp.w	sl, #0
9001f906:	f040 80f4 	bne.w	9001faf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
9001f90a:	f1bb 0f01 	cmp.w	fp, #1
9001f90e:	f040 80f8 	bne.w	9001fb02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001f912:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f914:	2b00      	cmp	r3, #0
9001f916:	f040 8145 	bne.w	9001fba4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
9001f91a:	b2ba      	uxth	r2, r7
9001f91c:	b905      	cbnz	r5, 9001f920 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001f91e:	b16e      	cbz	r6, 9001f93c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9001f920:	fb06 5302 	mla	r3, r6, r2, r5
9001f924:	9828      	ldr	r0, [sp, #160]	; 0xa0
9001f926:	4631      	mov	r1, r6
9001f928:	fb08 f303 	mul.w	r3, r8, r3
9001f92c:	f003 0607 	and.w	r6, r3, #7
9001f930:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
9001f934:	9328      	str	r3, [sp, #160]	; 0xa0
9001f936:	eba9 0301 	sub.w	r3, r9, r1
9001f93a:	930a      	str	r3, [sp, #40]	; 0x28
9001f93c:	4651      	mov	r1, sl
9001f93e:	980e      	ldr	r0, [sp, #56]	; 0x38
9001f940:	f7ff ff1c 	bl	9001f77c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001f944:	4681      	mov	r9, r0
9001f946:	980e      	ldr	r0, [sp, #56]	; 0x38
9001f948:	f7ff ff42 	bl	9001f7d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001f94c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f94e:	9909      	ldr	r1, [sp, #36]	; 0x24
9001f950:	4683      	mov	fp, r0
9001f952:	eba3 0a01 	sub.w	sl, r3, r1
9001f956:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f958:	459a      	cmp	sl, r3
9001f95a:	bfa8      	it	ge
9001f95c:	469a      	movge	sl, r3
9001f95e:	f1ba 0f00 	cmp.w	sl, #0
9001f962:	f340 811a 	ble.w	9001fb9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f966:	1b64      	subs	r4, r4, r5
9001f968:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001f96a:	1b1c      	subs	r4, r3, r4
9001f96c:	42bc      	cmp	r4, r7
9001f96e:	bfd4      	ite	le
9001f970:	ebc5 0504 	rsble	r5, r5, r4
9001f974:	ebc5 0507 	rsbgt	r5, r5, r7
9001f978:	2d00      	cmp	r5, #0
9001f97a:	f340 810e 	ble.w	9001fb9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f97e:	1b52      	subs	r2, r2, r5
9001f980:	fb08 f302 	mul.w	r3, r8, r2
9001f984:	930f      	str	r3, [sp, #60]	; 0x3c
9001f986:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f988:	2b00      	cmp	r3, #0
9001f98a:	f040 8116 	bne.w	9001fbba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9001f98e:	4b8e      	ldr	r3, [pc, #568]	; (9001fbc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9001f990:	6818      	ldr	r0, [r3, #0]
9001f992:	6803      	ldr	r3, [r0, #0]
9001f994:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f996:	4798      	blx	r3
9001f998:	2301      	movs	r3, #1
9001f99a:	4a8c      	ldr	r2, [pc, #560]	; (9001fbcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9001f99c:	fa03 f308 	lsl.w	r3, r3, r8
9001f9a0:	8811      	ldrh	r1, [r2, #0]
9001f9a2:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
9001f9a6:	3b01      	subs	r3, #1
9001f9a8:	b2db      	uxtb	r3, r3
9001f9aa:	930e      	str	r3, [sp, #56]	; 0x38
9001f9ac:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
9001f9b0:	fb01 2303 	mla	r3, r1, r3, r2
9001f9b4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f9b8:	930a      	str	r3, [sp, #40]	; 0x28
9001f9ba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f9bc:	f3c3 4307 	ubfx	r3, r3, #16, #8
9001f9c0:	9313      	str	r3, [sp, #76]	; 0x4c
9001f9c2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f9c4:	0a19      	lsrs	r1, r3, #8
9001f9c6:	b2cb      	uxtb	r3, r1
9001f9c8:	9312      	str	r3, [sp, #72]	; 0x48
9001f9ca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f9cc:	b2db      	uxtb	r3, r3
9001f9ce:	9311      	str	r3, [sp, #68]	; 0x44
9001f9d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f9d2:	095a      	lsrs	r2, r3, #5
9001f9d4:	4b7e      	ldr	r3, [pc, #504]	; (9001fbd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9001f9d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f9da:	400b      	ands	r3, r1
9001f9dc:	4313      	orrs	r3, r2
9001f9de:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001f9e0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001f9e4:	4313      	orrs	r3, r2
9001f9e6:	b29b      	uxth	r3, r3
9001f9e8:	9310      	str	r3, [sp, #64]	; 0x40
9001f9ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001f9ec:	781a      	ldrb	r2, [r3, #0]
9001f9ee:	ea4f 0349 	mov.w	r3, r9, lsl #1
9001f9f2:	fb05 b919 	mls	r9, r5, r9, fp
9001f9f6:	4132      	asrs	r2, r6
9001f9f8:	fb03 fb05 	mul.w	fp, r3, r5
9001f9fc:	930d      	str	r3, [sp, #52]	; 0x34
9001f9fe:	b2d2      	uxtb	r2, r2
9001fa00:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9001fa04:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001fa08:	f0c0 80f5 	bcc.w	9001fbf6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
9001fa0c:	46ae      	mov	lr, r5
9001fa0e:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
9001fa12:	f11e 3eff 	adds.w	lr, lr, #4294967295
9001fa16:	f0c0 80dd 	bcc.w	9001fbd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
9001fa1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001fa1c:	4013      	ands	r3, r2
9001fa1e:	d055      	beq.n	9001facc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9001fa20:	20ff      	movs	r0, #255	; 0xff
9001fa22:	990e      	ldr	r1, [sp, #56]	; 0x38
9001fa24:	fb90 f1f1 	sdiv	r1, r0, r1
9001fa28:	434b      	muls	r3, r1
9001fa2a:	2bfe      	cmp	r3, #254	; 0xfe
9001fa2c:	dd03      	ble.n	9001fa36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9001fa2e:	990c      	ldr	r1, [sp, #48]	; 0x30
9001fa30:	4281      	cmp	r1, r0
9001fa32:	f000 80c4 	beq.w	9001fbbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001fa36:	990c      	ldr	r1, [sp, #48]	; 0x30
9001fa38:	f8bc 4000 	ldrh.w	r4, [ip]
9001fa3c:	fb11 f303 	smulbb	r3, r1, r3
9001fa40:	1220      	asrs	r0, r4, #8
9001fa42:	b29b      	uxth	r3, r3
9001fa44:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001fa48:	1c59      	adds	r1, r3, #1
9001fa4a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9001fa4e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001fa52:	10e1      	asrs	r1, r4, #3
9001fa54:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001fa58:	00e4      	lsls	r4, r4, #3
9001fa5a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001fa5e:	b29f      	uxth	r7, r3
9001fa60:	43db      	mvns	r3, r3
9001fa62:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001fa66:	b2db      	uxtb	r3, r3
9001fa68:	b2e4      	uxtb	r4, r4
9001fa6a:	9309      	str	r3, [sp, #36]	; 0x24
9001fa6c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001fa6e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001fa72:	fb13 f907 	smulbb	r9, r3, r7
9001fa76:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fa78:	fb00 9003 	mla	r0, r0, r3, r9
9001fa7c:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001fa7e:	fb13 f907 	smulbb	r9, r3, r7
9001fa82:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fa84:	b280      	uxth	r0, r0
9001fa86:	fb01 9103 	mla	r1, r1, r3, r9
9001fa8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001fa8c:	fb13 f707 	smulbb	r7, r3, r7
9001fa90:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fa92:	b289      	uxth	r1, r1
9001fa94:	fb04 7403 	mla	r4, r4, r3, r7
9001fa98:	1c43      	adds	r3, r0, #1
9001fa9a:	b2a4      	uxth	r4, r4
9001fa9c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001faa0:	f104 0901 	add.w	r9, r4, #1
9001faa4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001faa8:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9001faac:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9001fab0:	ea49 0000 	orr.w	r0, r9, r0
9001fab4:	f101 0901 	add.w	r9, r1, #1
9001fab8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9001fabc:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001fac0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001fac4:	ea40 0009 	orr.w	r0, r0, r9
9001fac8:	f8ac 0000 	strh.w	r0, [ip]
9001facc:	4446      	add	r6, r8
9001face:	b2b6      	uxth	r6, r6
9001fad0:	2e07      	cmp	r6, #7
9001fad2:	bf89      	itett	hi
9001fad4:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
9001fad6:	fa42 f208 	asrls.w	r2, r2, r8
9001fada:	2600      	movhi	r6, #0
9001fadc:	785a      	ldrbhi	r2, [r3, #1]
9001fade:	bf8a      	itet	hi
9001fae0:	3301      	addhi	r3, #1
9001fae2:	b2d2      	uxtbls	r2, r2
9001fae4:	9328      	strhi	r3, [sp, #160]	; 0xa0
9001fae6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001fae8:	449c      	add	ip, r3
9001faea:	e792      	b.n	9001fa12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9001faec:	441c      	add	r4, r3
9001faee:	b224      	sxth	r4, r4
9001faf0:	e6d5      	b.n	9001f89e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001faf2:	f1ba 0f01 	cmp.w	sl, #1
9001faf6:	f47f af0c 	bne.w	9001f912 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001fafa:	f1bb 0f01 	cmp.w	fp, #1
9001fafe:	f47f af08 	bne.w	9001f912 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001fb02:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 9001fbc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9001fb06:	f8db 0000 	ldr.w	r0, [fp]
9001fb0a:	6803      	ldr	r3, [r0, #0]
9001fb0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001fb0e:	4798      	blx	r3
9001fb10:	f410 7380 	ands.w	r3, r0, #256	; 0x100
9001fb14:	465a      	mov	r2, fp
9001fb16:	d006      	beq.n	9001fb26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001fb18:	f1b8 0f04 	cmp.w	r8, #4
9001fb1c:	d140      	bne.n	9001fba0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9001fb1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001fb20:	3300      	adds	r3, #0
9001fb22:	bf18      	it	ne
9001fb24:	2301      	movne	r3, #1
9001fb26:	0580      	lsls	r0, r0, #22
9001fb28:	d56e      	bpl.n	9001fc08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001fb2a:	f1b8 0f08 	cmp.w	r8, #8
9001fb2e:	d16b      	bne.n	9001fc08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001fb30:	2b00      	cmp	r3, #0
9001fb32:	bf0c      	ite	eq
9001fb34:	f44f 7100 	moveq.w	r1, #512	; 0x200
9001fb38:	f44f 7180 	movne.w	r1, #256	; 0x100
9001fb3c:	2d00      	cmp	r5, #0
9001fb3e:	f47f aee8 	bne.w	9001f912 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001fb42:	2e00      	cmp	r6, #0
9001fb44:	f47f aee5 	bne.w	9001f912 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001fb48:	19e3      	adds	r3, r4, r7
9001fb4a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001fb4c:	4283      	cmp	r3, r0
9001fb4e:	f73f aee0 	bgt.w	9001f912 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001fb52:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fb54:	980d      	ldr	r0, [sp, #52]	; 0x34
9001fb56:	444b      	add	r3, r9
9001fb58:	4283      	cmp	r3, r0
9001fb5a:	f73f aeda 	bgt.w	9001f912 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001fb5e:	b2bf      	uxth	r7, r7
9001fb60:	f1b8 0f08 	cmp.w	r8, #8
9001fb64:	6810      	ldr	r0, [r2, #0]
9001fb66:	f04f 0500 	mov.w	r5, #0
9001fb6a:	bf18      	it	ne
9001fb6c:	3701      	addne	r7, #1
9001fb6e:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
9001fb72:	6804      	ldr	r4, [r0, #0]
9001fb74:	bf18      	it	ne
9001fb76:	f027 0701 	bicne.w	r7, r7, #1
9001fb7a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001fb7e:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001fb82:	990c      	ldr	r1, [sp, #48]	; 0x30
9001fb84:	bf18      	it	ne
9001fb86:	b2bf      	uxthne	r7, r7
9001fb88:	9104      	str	r1, [sp, #16]
9001fb8a:	992a      	ldr	r1, [sp, #168]	; 0xa8
9001fb8c:	e9cd 7900 	strd	r7, r9, [sp]
9001fb90:	e9cd 7102 	strd	r7, r1, [sp, #8]
9001fb94:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001fb96:	6d64      	ldr	r4, [r4, #84]	; 0x54
9001fb98:	47a0      	blx	r4
9001fb9a:	b019      	add	sp, #100	; 0x64
9001fb9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fba0:	2300      	movs	r3, #0
9001fba2:	e7c0      	b.n	9001fb26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001fba4:	2208      	movs	r2, #8
9001fba6:	fb92 f3f8 	sdiv	r3, r2, r8
9001fbaa:	1e5a      	subs	r2, r3, #1
9001fbac:	443a      	add	r2, r7
9001fbae:	fb92 f2f3 	sdiv	r2, r2, r3
9001fbb2:	fb12 f203 	smulbb	r2, r2, r3
9001fbb6:	b292      	uxth	r2, r2
9001fbb8:	e6b0      	b.n	9001f91c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001fbba:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001fbbc:	e6ec      	b.n	9001f998 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9001fbbe:	9810      	ldr	r0, [sp, #64]	; 0x40
9001fbc0:	e782      	b.n	9001fac8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9001fbc2:	bf00      	nop
9001fbc4:	24039894 	.word	0x24039894
9001fbc8:	2403989c 	.word	0x2403989c
9001fbcc:	24039896 	.word	0x24039896
9001fbd0:	00fff800 	.word	0x00fff800
9001fbd4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001fbd6:	b153      	cbz	r3, 9001fbee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
9001fbd8:	441e      	add	r6, r3
9001fbda:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001fbdc:	b2b6      	uxth	r6, r6
9001fbde:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9001fbe2:	f006 0607 	and.w	r6, r6, #7
9001fbe6:	781a      	ldrb	r2, [r3, #0]
9001fbe8:	9328      	str	r3, [sp, #160]	; 0xa0
9001fbea:	4132      	asrs	r2, r6
9001fbec:	b2d2      	uxtb	r2, r2
9001fbee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001fbf0:	445b      	add	r3, fp
9001fbf2:	930a      	str	r3, [sp, #40]	; 0x28
9001fbf4:	e706      	b.n	9001fa04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9001fbf6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001fbf8:	2b00      	cmp	r3, #0
9001fbfa:	d1ce      	bne.n	9001fb9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001fbfc:	4b05      	ldr	r3, [pc, #20]	; (9001fc14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9001fbfe:	6818      	ldr	r0, [r3, #0]
9001fc00:	6803      	ldr	r3, [r0, #0]
9001fc02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001fc04:	4798      	blx	r3
9001fc06:	e7c8      	b.n	9001fb9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001fc08:	2b00      	cmp	r3, #0
9001fc0a:	f43f ae82 	beq.w	9001f912 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001fc0e:	f44f 7180 	mov.w	r1, #256	; 0x100
9001fc12:	e793      	b.n	9001fb3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
9001fc14:	2403989c 	.word	0x2403989c

9001fc18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001fc18:	b538      	push	{r3, r4, r5, lr}
9001fc1a:	4c15      	ldr	r4, [pc, #84]	; (9001fc70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001fc1c:	4605      	mov	r5, r0
9001fc1e:	7823      	ldrb	r3, [r4, #0]
9001fc20:	f3bf 8f5b 	dmb	ish
9001fc24:	07da      	lsls	r2, r3, #31
9001fc26:	d40b      	bmi.n	9001fc40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001fc28:	4620      	mov	r0, r4
9001fc2a:	f008 fa05 	bl	90028038 <__cxa_guard_acquire>
9001fc2e:	b138      	cbz	r0, 9001fc40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001fc30:	4620      	mov	r0, r4
9001fc32:	f008 fa0d 	bl	90028050 <__cxa_guard_release>
9001fc36:	4a0f      	ldr	r2, [pc, #60]	; (9001fc74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001fc38:	490f      	ldr	r1, [pc, #60]	; (9001fc78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001fc3a:	4810      	ldr	r0, [pc, #64]	; (9001fc7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001fc3c:	f008 f9f5 	bl	9002802a <__aeabi_atexit>
9001fc40:	4c0f      	ldr	r4, [pc, #60]	; (9001fc80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001fc42:	7823      	ldrb	r3, [r4, #0]
9001fc44:	f3bf 8f5b 	dmb	ish
9001fc48:	07db      	lsls	r3, r3, #31
9001fc4a:	d40b      	bmi.n	9001fc64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001fc4c:	4620      	mov	r0, r4
9001fc4e:	f008 f9f3 	bl	90028038 <__cxa_guard_acquire>
9001fc52:	b138      	cbz	r0, 9001fc64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001fc54:	4620      	mov	r0, r4
9001fc56:	f008 f9fb 	bl	90028050 <__cxa_guard_release>
9001fc5a:	4a06      	ldr	r2, [pc, #24]	; (9001fc74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001fc5c:	4909      	ldr	r1, [pc, #36]	; (9001fc84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001fc5e:	480a      	ldr	r0, [pc, #40]	; (9001fc88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001fc60:	f008 f9e3 	bl	9002802a <__aeabi_atexit>
9001fc64:	4b05      	ldr	r3, [pc, #20]	; (9001fc7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001fc66:	612b      	str	r3, [r5, #16]
9001fc68:	4b07      	ldr	r3, [pc, #28]	; (9001fc88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001fc6a:	616b      	str	r3, [r5, #20]
9001fc6c:	bd38      	pop	{r3, r4, r5, pc}
9001fc6e:	bf00      	nop
9001fc70:	2403997c 	.word	0x2403997c
9001fc74:	24000000 	.word	0x24000000
9001fc78:	9001c9ff 	.word	0x9001c9ff
9001fc7c:	240000cc 	.word	0x240000cc
9001fc80:	24039980 	.word	0x24039980
9001fc84:	9001c9fd 	.word	0x9001c9fd
9001fc88:	240000d0 	.word	0x240000d0

9001fc8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001fc8c:	b538      	push	{r3, r4, r5, lr}
9001fc8e:	4c15      	ldr	r4, [pc, #84]	; (9001fce4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001fc90:	4605      	mov	r5, r0
9001fc92:	7823      	ldrb	r3, [r4, #0]
9001fc94:	f3bf 8f5b 	dmb	ish
9001fc98:	07da      	lsls	r2, r3, #31
9001fc9a:	d40b      	bmi.n	9001fcb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001fc9c:	4620      	mov	r0, r4
9001fc9e:	f008 f9cb 	bl	90028038 <__cxa_guard_acquire>
9001fca2:	b138      	cbz	r0, 9001fcb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001fca4:	4620      	mov	r0, r4
9001fca6:	f008 f9d3 	bl	90028050 <__cxa_guard_release>
9001fcaa:	4a0f      	ldr	r2, [pc, #60]	; (9001fce8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001fcac:	490f      	ldr	r1, [pc, #60]	; (9001fcec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001fcae:	4810      	ldr	r0, [pc, #64]	; (9001fcf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001fcb0:	f008 f9bb 	bl	9002802a <__aeabi_atexit>
9001fcb4:	4c0f      	ldr	r4, [pc, #60]	; (9001fcf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001fcb6:	7823      	ldrb	r3, [r4, #0]
9001fcb8:	f3bf 8f5b 	dmb	ish
9001fcbc:	07db      	lsls	r3, r3, #31
9001fcbe:	d40b      	bmi.n	9001fcd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001fcc0:	4620      	mov	r0, r4
9001fcc2:	f008 f9b9 	bl	90028038 <__cxa_guard_acquire>
9001fcc6:	b138      	cbz	r0, 9001fcd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001fcc8:	4620      	mov	r0, r4
9001fcca:	f008 f9c1 	bl	90028050 <__cxa_guard_release>
9001fcce:	4a06      	ldr	r2, [pc, #24]	; (9001fce8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001fcd0:	4909      	ldr	r1, [pc, #36]	; (9001fcf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001fcd2:	480a      	ldr	r0, [pc, #40]	; (9001fcfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001fcd4:	f008 f9a9 	bl	9002802a <__aeabi_atexit>
9001fcd8:	4b05      	ldr	r3, [pc, #20]	; (9001fcf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001fcda:	60ab      	str	r3, [r5, #8]
9001fcdc:	4b07      	ldr	r3, [pc, #28]	; (9001fcfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001fcde:	60eb      	str	r3, [r5, #12]
9001fce0:	bd38      	pop	{r3, r4, r5, pc}
9001fce2:	bf00      	nop
9001fce4:	24039954 	.word	0x24039954
9001fce8:	24000000 	.word	0x24000000
9001fcec:	9001ca03 	.word	0x9001ca03
9001fcf0:	240000a4 	.word	0x240000a4
9001fcf4:	24039958 	.word	0x24039958
9001fcf8:	9001ca01 	.word	0x9001ca01
9001fcfc:	240000a8 	.word	0x240000a8

9001fd00 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001fd00:	b510      	push	{r4, lr}
9001fd02:	4604      	mov	r4, r0
9001fd04:	f7ff ff88 	bl	9001fc18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001fd08:	4620      	mov	r0, r4
9001fd0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fd0e:	f7ff bfbd 	b.w	9001fc8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001fd14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001fd14:	b538      	push	{r3, r4, r5, lr}
9001fd16:	4c15      	ldr	r4, [pc, #84]	; (9001fd6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001fd18:	4605      	mov	r5, r0
9001fd1a:	7823      	ldrb	r3, [r4, #0]
9001fd1c:	f3bf 8f5b 	dmb	ish
9001fd20:	07da      	lsls	r2, r3, #31
9001fd22:	d40b      	bmi.n	9001fd3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001fd24:	4620      	mov	r0, r4
9001fd26:	f008 f987 	bl	90028038 <__cxa_guard_acquire>
9001fd2a:	b138      	cbz	r0, 9001fd3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001fd2c:	4620      	mov	r0, r4
9001fd2e:	f008 f98f 	bl	90028050 <__cxa_guard_release>
9001fd32:	4a0f      	ldr	r2, [pc, #60]	; (9001fd70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001fd34:	490f      	ldr	r1, [pc, #60]	; (9001fd74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001fd36:	4810      	ldr	r0, [pc, #64]	; (9001fd78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001fd38:	f008 f977 	bl	9002802a <__aeabi_atexit>
9001fd3c:	4c0f      	ldr	r4, [pc, #60]	; (9001fd7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001fd3e:	7823      	ldrb	r3, [r4, #0]
9001fd40:	f3bf 8f5b 	dmb	ish
9001fd44:	07db      	lsls	r3, r3, #31
9001fd46:	d40b      	bmi.n	9001fd60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001fd48:	4620      	mov	r0, r4
9001fd4a:	f008 f975 	bl	90028038 <__cxa_guard_acquire>
9001fd4e:	b138      	cbz	r0, 9001fd60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001fd50:	4620      	mov	r0, r4
9001fd52:	f008 f97d 	bl	90028050 <__cxa_guard_release>
9001fd56:	4a06      	ldr	r2, [pc, #24]	; (9001fd70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001fd58:	4909      	ldr	r1, [pc, #36]	; (9001fd80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001fd5a:	480a      	ldr	r0, [pc, #40]	; (9001fd84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001fd5c:	f008 f965 	bl	9002802a <__aeabi_atexit>
9001fd60:	4b05      	ldr	r3, [pc, #20]	; (9001fd78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001fd62:	622b      	str	r3, [r5, #32]
9001fd64:	4b07      	ldr	r3, [pc, #28]	; (9001fd84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001fd66:	626b      	str	r3, [r5, #36]	; 0x24
9001fd68:	bd38      	pop	{r3, r4, r5, pc}
9001fd6a:	bf00      	nop
9001fd6c:	24039984 	.word	0x24039984
9001fd70:	24000000 	.word	0x24000000
9001fd74:	9001c9f7 	.word	0x9001c9f7
9001fd78:	240000d4 	.word	0x240000d4
9001fd7c:	24039988 	.word	0x24039988
9001fd80:	9001c9f5 	.word	0x9001c9f5
9001fd84:	240000d8 	.word	0x240000d8

9001fd88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001fd88:	b538      	push	{r3, r4, r5, lr}
9001fd8a:	4c15      	ldr	r4, [pc, #84]	; (9001fde0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001fd8c:	4605      	mov	r5, r0
9001fd8e:	7823      	ldrb	r3, [r4, #0]
9001fd90:	f3bf 8f5b 	dmb	ish
9001fd94:	07da      	lsls	r2, r3, #31
9001fd96:	d40b      	bmi.n	9001fdb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001fd98:	4620      	mov	r0, r4
9001fd9a:	f008 f94d 	bl	90028038 <__cxa_guard_acquire>
9001fd9e:	b138      	cbz	r0, 9001fdb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001fda0:	4620      	mov	r0, r4
9001fda2:	f008 f955 	bl	90028050 <__cxa_guard_release>
9001fda6:	4a0f      	ldr	r2, [pc, #60]	; (9001fde4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001fda8:	490f      	ldr	r1, [pc, #60]	; (9001fde8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001fdaa:	4810      	ldr	r0, [pc, #64]	; (9001fdec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001fdac:	f008 f93d 	bl	9002802a <__aeabi_atexit>
9001fdb0:	4c0f      	ldr	r4, [pc, #60]	; (9001fdf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001fdb2:	7823      	ldrb	r3, [r4, #0]
9001fdb4:	f3bf 8f5b 	dmb	ish
9001fdb8:	07db      	lsls	r3, r3, #31
9001fdba:	d40b      	bmi.n	9001fdd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001fdbc:	4620      	mov	r0, r4
9001fdbe:	f008 f93b 	bl	90028038 <__cxa_guard_acquire>
9001fdc2:	b138      	cbz	r0, 9001fdd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001fdc4:	4620      	mov	r0, r4
9001fdc6:	f008 f943 	bl	90028050 <__cxa_guard_release>
9001fdca:	4a06      	ldr	r2, [pc, #24]	; (9001fde4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001fdcc:	4909      	ldr	r1, [pc, #36]	; (9001fdf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001fdce:	480a      	ldr	r0, [pc, #40]	; (9001fdf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001fdd0:	f008 f92b 	bl	9002802a <__aeabi_atexit>
9001fdd4:	4b05      	ldr	r3, [pc, #20]	; (9001fdec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001fdd6:	61ab      	str	r3, [r5, #24]
9001fdd8:	4b07      	ldr	r3, [pc, #28]	; (9001fdf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001fdda:	61eb      	str	r3, [r5, #28]
9001fddc:	bd38      	pop	{r3, r4, r5, pc}
9001fdde:	bf00      	nop
9001fde0:	2403995c 	.word	0x2403995c
9001fde4:	24000000 	.word	0x24000000
9001fde8:	9001c9fb 	.word	0x9001c9fb
9001fdec:	240000ac 	.word	0x240000ac
9001fdf0:	24039960 	.word	0x24039960
9001fdf4:	9001c9f9 	.word	0x9001c9f9
9001fdf8:	240000b0 	.word	0x240000b0

9001fdfc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001fdfc:	b510      	push	{r4, lr}
9001fdfe:	4604      	mov	r4, r0
9001fe00:	f7ff ff88 	bl	9001fd14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001fe04:	4620      	mov	r0, r4
9001fe06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fe0a:	f7ff bfbd 	b.w	9001fd88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001fe10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001fe10:	b538      	push	{r3, r4, r5, lr}
9001fe12:	4c15      	ldr	r4, [pc, #84]	; (9001fe68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001fe14:	4605      	mov	r5, r0
9001fe16:	7823      	ldrb	r3, [r4, #0]
9001fe18:	f3bf 8f5b 	dmb	ish
9001fe1c:	07da      	lsls	r2, r3, #31
9001fe1e:	d40b      	bmi.n	9001fe38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001fe20:	4620      	mov	r0, r4
9001fe22:	f008 f909 	bl	90028038 <__cxa_guard_acquire>
9001fe26:	b138      	cbz	r0, 9001fe38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001fe28:	4620      	mov	r0, r4
9001fe2a:	f008 f911 	bl	90028050 <__cxa_guard_release>
9001fe2e:	4a0f      	ldr	r2, [pc, #60]	; (9001fe6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001fe30:	490f      	ldr	r1, [pc, #60]	; (9001fe70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001fe32:	4810      	ldr	r0, [pc, #64]	; (9001fe74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001fe34:	f008 f8f9 	bl	9002802a <__aeabi_atexit>
9001fe38:	4c0f      	ldr	r4, [pc, #60]	; (9001fe78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001fe3a:	7823      	ldrb	r3, [r4, #0]
9001fe3c:	f3bf 8f5b 	dmb	ish
9001fe40:	07db      	lsls	r3, r3, #31
9001fe42:	d40b      	bmi.n	9001fe5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001fe44:	4620      	mov	r0, r4
9001fe46:	f008 f8f7 	bl	90028038 <__cxa_guard_acquire>
9001fe4a:	b138      	cbz	r0, 9001fe5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001fe4c:	4620      	mov	r0, r4
9001fe4e:	f008 f8ff 	bl	90028050 <__cxa_guard_release>
9001fe52:	4a06      	ldr	r2, [pc, #24]	; (9001fe6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001fe54:	4909      	ldr	r1, [pc, #36]	; (9001fe7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001fe56:	480a      	ldr	r0, [pc, #40]	; (9001fe80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001fe58:	f008 f8e7 	bl	9002802a <__aeabi_atexit>
9001fe5c:	4b05      	ldr	r3, [pc, #20]	; (9001fe74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001fe5e:	632b      	str	r3, [r5, #48]	; 0x30
9001fe60:	4b07      	ldr	r3, [pc, #28]	; (9001fe80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001fe62:	636b      	str	r3, [r5, #52]	; 0x34
9001fe64:	bd38      	pop	{r3, r4, r5, pc}
9001fe66:	bf00      	nop
9001fe68:	24039994 	.word	0x24039994
9001fe6c:	24000000 	.word	0x24000000
9001fe70:	9001c9ef 	.word	0x9001c9ef
9001fe74:	240000e4 	.word	0x240000e4
9001fe78:	24039998 	.word	0x24039998
9001fe7c:	9001c9ed 	.word	0x9001c9ed
9001fe80:	240000e8 	.word	0x240000e8

9001fe84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001fe84:	b538      	push	{r3, r4, r5, lr}
9001fe86:	4c15      	ldr	r4, [pc, #84]	; (9001fedc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001fe88:	4605      	mov	r5, r0
9001fe8a:	7823      	ldrb	r3, [r4, #0]
9001fe8c:	f3bf 8f5b 	dmb	ish
9001fe90:	07da      	lsls	r2, r3, #31
9001fe92:	d40b      	bmi.n	9001feac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001fe94:	4620      	mov	r0, r4
9001fe96:	f008 f8cf 	bl	90028038 <__cxa_guard_acquire>
9001fe9a:	b138      	cbz	r0, 9001feac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001fe9c:	4620      	mov	r0, r4
9001fe9e:	f008 f8d7 	bl	90028050 <__cxa_guard_release>
9001fea2:	4a0f      	ldr	r2, [pc, #60]	; (9001fee0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001fea4:	490f      	ldr	r1, [pc, #60]	; (9001fee4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001fea6:	4810      	ldr	r0, [pc, #64]	; (9001fee8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001fea8:	f008 f8bf 	bl	9002802a <__aeabi_atexit>
9001feac:	4c0f      	ldr	r4, [pc, #60]	; (9001feec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001feae:	7823      	ldrb	r3, [r4, #0]
9001feb0:	f3bf 8f5b 	dmb	ish
9001feb4:	07db      	lsls	r3, r3, #31
9001feb6:	d40b      	bmi.n	9001fed0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001feb8:	4620      	mov	r0, r4
9001feba:	f008 f8bd 	bl	90028038 <__cxa_guard_acquire>
9001febe:	b138      	cbz	r0, 9001fed0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001fec0:	4620      	mov	r0, r4
9001fec2:	f008 f8c5 	bl	90028050 <__cxa_guard_release>
9001fec6:	4a06      	ldr	r2, [pc, #24]	; (9001fee0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001fec8:	4909      	ldr	r1, [pc, #36]	; (9001fef0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001feca:	480a      	ldr	r0, [pc, #40]	; (9001fef4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001fecc:	f008 f8ad 	bl	9002802a <__aeabi_atexit>
9001fed0:	4b05      	ldr	r3, [pc, #20]	; (9001fee8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001fed2:	62ab      	str	r3, [r5, #40]	; 0x28
9001fed4:	4b07      	ldr	r3, [pc, #28]	; (9001fef4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001fed6:	62eb      	str	r3, [r5, #44]	; 0x2c
9001fed8:	bd38      	pop	{r3, r4, r5, pc}
9001feda:	bf00      	nop
9001fedc:	24039964 	.word	0x24039964
9001fee0:	24000000 	.word	0x24000000
9001fee4:	9001c9f3 	.word	0x9001c9f3
9001fee8:	240000b4 	.word	0x240000b4
9001feec:	24039968 	.word	0x24039968
9001fef0:	9001c9f1 	.word	0x9001c9f1
9001fef4:	240000b8 	.word	0x240000b8

9001fef8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001fef8:	b510      	push	{r4, lr}
9001fefa:	4604      	mov	r4, r0
9001fefc:	f7ff ff88 	bl	9001fe10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001ff00:	4620      	mov	r0, r4
9001ff02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001ff06:	f7ff bfbd 	b.w	9001fe84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001ff0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001ff0c:	b538      	push	{r3, r4, r5, lr}
9001ff0e:	4c15      	ldr	r4, [pc, #84]	; (9001ff64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001ff10:	4605      	mov	r5, r0
9001ff12:	7823      	ldrb	r3, [r4, #0]
9001ff14:	f3bf 8f5b 	dmb	ish
9001ff18:	07da      	lsls	r2, r3, #31
9001ff1a:	d40b      	bmi.n	9001ff34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001ff1c:	4620      	mov	r0, r4
9001ff1e:	f008 f88b 	bl	90028038 <__cxa_guard_acquire>
9001ff22:	b138      	cbz	r0, 9001ff34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001ff24:	4620      	mov	r0, r4
9001ff26:	f008 f893 	bl	90028050 <__cxa_guard_release>
9001ff2a:	4a0f      	ldr	r2, [pc, #60]	; (9001ff68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001ff2c:	490f      	ldr	r1, [pc, #60]	; (9001ff6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001ff2e:	4810      	ldr	r0, [pc, #64]	; (9001ff70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001ff30:	f008 f87b 	bl	9002802a <__aeabi_atexit>
9001ff34:	4c0f      	ldr	r4, [pc, #60]	; (9001ff74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001ff36:	7823      	ldrb	r3, [r4, #0]
9001ff38:	f3bf 8f5b 	dmb	ish
9001ff3c:	07db      	lsls	r3, r3, #31
9001ff3e:	d40b      	bmi.n	9001ff58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001ff40:	4620      	mov	r0, r4
9001ff42:	f008 f879 	bl	90028038 <__cxa_guard_acquire>
9001ff46:	b138      	cbz	r0, 9001ff58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001ff48:	4620      	mov	r0, r4
9001ff4a:	f008 f881 	bl	90028050 <__cxa_guard_release>
9001ff4e:	4a06      	ldr	r2, [pc, #24]	; (9001ff68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001ff50:	4909      	ldr	r1, [pc, #36]	; (9001ff78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001ff52:	480a      	ldr	r0, [pc, #40]	; (9001ff7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001ff54:	f008 f869 	bl	9002802a <__aeabi_atexit>
9001ff58:	4b05      	ldr	r3, [pc, #20]	; (9001ff70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001ff5a:	652b      	str	r3, [r5, #80]	; 0x50
9001ff5c:	4b07      	ldr	r3, [pc, #28]	; (9001ff7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001ff5e:	656b      	str	r3, [r5, #84]	; 0x54
9001ff60:	bd38      	pop	{r3, r4, r5, pc}
9001ff62:	bf00      	nop
9001ff64:	2403999c 	.word	0x2403999c
9001ff68:	24000000 	.word	0x24000000
9001ff6c:	9001c9df 	.word	0x9001c9df
9001ff70:	240000ec 	.word	0x240000ec
9001ff74:	240399a0 	.word	0x240399a0
9001ff78:	9001c9dd 	.word	0x9001c9dd
9001ff7c:	240000f0 	.word	0x240000f0

9001ff80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001ff80:	b538      	push	{r3, r4, r5, lr}
9001ff82:	4c15      	ldr	r4, [pc, #84]	; (9001ffd8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001ff84:	4605      	mov	r5, r0
9001ff86:	7823      	ldrb	r3, [r4, #0]
9001ff88:	f3bf 8f5b 	dmb	ish
9001ff8c:	07da      	lsls	r2, r3, #31
9001ff8e:	d40b      	bmi.n	9001ffa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001ff90:	4620      	mov	r0, r4
9001ff92:	f008 f851 	bl	90028038 <__cxa_guard_acquire>
9001ff96:	b138      	cbz	r0, 9001ffa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001ff98:	4620      	mov	r0, r4
9001ff9a:	f008 f859 	bl	90028050 <__cxa_guard_release>
9001ff9e:	4a0f      	ldr	r2, [pc, #60]	; (9001ffdc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001ffa0:	490f      	ldr	r1, [pc, #60]	; (9001ffe0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001ffa2:	4810      	ldr	r0, [pc, #64]	; (9001ffe4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001ffa4:	f008 f841 	bl	9002802a <__aeabi_atexit>
9001ffa8:	4c0f      	ldr	r4, [pc, #60]	; (9001ffe8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001ffaa:	7823      	ldrb	r3, [r4, #0]
9001ffac:	f3bf 8f5b 	dmb	ish
9001ffb0:	07db      	lsls	r3, r3, #31
9001ffb2:	d40b      	bmi.n	9001ffcc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001ffb4:	4620      	mov	r0, r4
9001ffb6:	f008 f83f 	bl	90028038 <__cxa_guard_acquire>
9001ffba:	b138      	cbz	r0, 9001ffcc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001ffbc:	4620      	mov	r0, r4
9001ffbe:	f008 f847 	bl	90028050 <__cxa_guard_release>
9001ffc2:	4a06      	ldr	r2, [pc, #24]	; (9001ffdc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001ffc4:	4909      	ldr	r1, [pc, #36]	; (9001ffec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001ffc6:	480a      	ldr	r0, [pc, #40]	; (9001fff0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001ffc8:	f008 f82f 	bl	9002802a <__aeabi_atexit>
9001ffcc:	4b05      	ldr	r3, [pc, #20]	; (9001ffe4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001ffce:	64ab      	str	r3, [r5, #72]	; 0x48
9001ffd0:	4b07      	ldr	r3, [pc, #28]	; (9001fff0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001ffd2:	64eb      	str	r3, [r5, #76]	; 0x4c
9001ffd4:	bd38      	pop	{r3, r4, r5, pc}
9001ffd6:	bf00      	nop
9001ffd8:	240399a4 	.word	0x240399a4
9001ffdc:	24000000 	.word	0x24000000
9001ffe0:	9001c9e3 	.word	0x9001c9e3
9001ffe4:	240000f4 	.word	0x240000f4
9001ffe8:	240399a8 	.word	0x240399a8
9001ffec:	9001c9e1 	.word	0x9001c9e1
9001fff0:	240000f8 	.word	0x240000f8

9001fff4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001fff4:	b538      	push	{r3, r4, r5, lr}
9001fff6:	4c15      	ldr	r4, [pc, #84]	; (9002004c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001fff8:	4605      	mov	r5, r0
9001fffa:	7823      	ldrb	r3, [r4, #0]
9001fffc:	f3bf 8f5b 	dmb	ish
90020000:	07da      	lsls	r2, r3, #31
90020002:	d40b      	bmi.n	9002001c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90020004:	4620      	mov	r0, r4
90020006:	f008 f817 	bl	90028038 <__cxa_guard_acquire>
9002000a:	b138      	cbz	r0, 9002001c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9002000c:	4620      	mov	r0, r4
9002000e:	f008 f81f 	bl	90028050 <__cxa_guard_release>
90020012:	4a0f      	ldr	r2, [pc, #60]	; (90020050 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90020014:	490f      	ldr	r1, [pc, #60]	; (90020054 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90020016:	4810      	ldr	r0, [pc, #64]	; (90020058 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90020018:	f008 f807 	bl	9002802a <__aeabi_atexit>
9002001c:	4c0f      	ldr	r4, [pc, #60]	; (9002005c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9002001e:	7823      	ldrb	r3, [r4, #0]
90020020:	f3bf 8f5b 	dmb	ish
90020024:	07db      	lsls	r3, r3, #31
90020026:	d40b      	bmi.n	90020040 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90020028:	4620      	mov	r0, r4
9002002a:	f008 f805 	bl	90028038 <__cxa_guard_acquire>
9002002e:	b138      	cbz	r0, 90020040 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90020030:	4620      	mov	r0, r4
90020032:	f008 f80d 	bl	90028050 <__cxa_guard_release>
90020036:	4a06      	ldr	r2, [pc, #24]	; (90020050 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90020038:	4909      	ldr	r1, [pc, #36]	; (90020060 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9002003a:	480a      	ldr	r0, [pc, #40]	; (90020064 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9002003c:	f007 fff5 	bl	9002802a <__aeabi_atexit>
90020040:	4b05      	ldr	r3, [pc, #20]	; (90020058 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90020042:	642b      	str	r3, [r5, #64]	; 0x40
90020044:	4b07      	ldr	r3, [pc, #28]	; (90020064 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90020046:	646b      	str	r3, [r5, #68]	; 0x44
90020048:	bd38      	pop	{r3, r4, r5, pc}
9002004a:	bf00      	nop
9002004c:	2403996c 	.word	0x2403996c
90020050:	24000000 	.word	0x24000000
90020054:	9001c9e7 	.word	0x9001c9e7
90020058:	240000bc 	.word	0x240000bc
9002005c:	24039970 	.word	0x24039970
90020060:	9001c9e5 	.word	0x9001c9e5
90020064:	240000c0 	.word	0x240000c0

90020068 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90020068:	b538      	push	{r3, r4, r5, lr}
9002006a:	4c15      	ldr	r4, [pc, #84]	; (900200c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9002006c:	4605      	mov	r5, r0
9002006e:	7823      	ldrb	r3, [r4, #0]
90020070:	f3bf 8f5b 	dmb	ish
90020074:	07da      	lsls	r2, r3, #31
90020076:	d40b      	bmi.n	90020090 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90020078:	4620      	mov	r0, r4
9002007a:	f007 ffdd 	bl	90028038 <__cxa_guard_acquire>
9002007e:	b138      	cbz	r0, 90020090 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90020080:	4620      	mov	r0, r4
90020082:	f007 ffe5 	bl	90028050 <__cxa_guard_release>
90020086:	4a0f      	ldr	r2, [pc, #60]	; (900200c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90020088:	490f      	ldr	r1, [pc, #60]	; (900200c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9002008a:	4810      	ldr	r0, [pc, #64]	; (900200cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9002008c:	f007 ffcd 	bl	9002802a <__aeabi_atexit>
90020090:	4c0f      	ldr	r4, [pc, #60]	; (900200d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
90020092:	7823      	ldrb	r3, [r4, #0]
90020094:	f3bf 8f5b 	dmb	ish
90020098:	07db      	lsls	r3, r3, #31
9002009a:	d40b      	bmi.n	900200b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9002009c:	4620      	mov	r0, r4
9002009e:	f007 ffcb 	bl	90028038 <__cxa_guard_acquire>
900200a2:	b138      	cbz	r0, 900200b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
900200a4:	4620      	mov	r0, r4
900200a6:	f007 ffd3 	bl	90028050 <__cxa_guard_release>
900200aa:	4a06      	ldr	r2, [pc, #24]	; (900200c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
900200ac:	4909      	ldr	r1, [pc, #36]	; (900200d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
900200ae:	480a      	ldr	r0, [pc, #40]	; (900200d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
900200b0:	f007 ffbb 	bl	9002802a <__aeabi_atexit>
900200b4:	4b05      	ldr	r3, [pc, #20]	; (900200cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
900200b6:	63ab      	str	r3, [r5, #56]	; 0x38
900200b8:	4b07      	ldr	r3, [pc, #28]	; (900200d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
900200ba:	63eb      	str	r3, [r5, #60]	; 0x3c
900200bc:	bd38      	pop	{r3, r4, r5, pc}
900200be:	bf00      	nop
900200c0:	2403998c 	.word	0x2403998c
900200c4:	24000000 	.word	0x24000000
900200c8:	9001c9eb 	.word	0x9001c9eb
900200cc:	240000dc 	.word	0x240000dc
900200d0:	24039990 	.word	0x24039990
900200d4:	9001c9e9 	.word	0x9001c9e9
900200d8:	240000e0 	.word	0x240000e0

900200dc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
900200dc:	b510      	push	{r4, lr}
900200de:	4604      	mov	r4, r0
900200e0:	f7ff ff14 	bl	9001ff0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
900200e4:	4620      	mov	r0, r4
900200e6:	f7ff ff85 	bl	9001fff4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
900200ea:	4620      	mov	r0, r4
900200ec:	f7ff ff48 	bl	9001ff80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
900200f0:	4620      	mov	r0, r4
900200f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900200f6:	f7ff bfb7 	b.w	90020068 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

900200fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
900200fc:	b538      	push	{r3, r4, r5, lr}
900200fe:	4c15      	ldr	r4, [pc, #84]	; (90020154 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90020100:	4605      	mov	r5, r0
90020102:	7823      	ldrb	r3, [r4, #0]
90020104:	f3bf 8f5b 	dmb	ish
90020108:	07da      	lsls	r2, r3, #31
9002010a:	d40b      	bmi.n	90020124 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9002010c:	4620      	mov	r0, r4
9002010e:	f007 ff93 	bl	90028038 <__cxa_guard_acquire>
90020112:	b138      	cbz	r0, 90020124 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90020114:	4620      	mov	r0, r4
90020116:	f007 ff9b 	bl	90028050 <__cxa_guard_release>
9002011a:	4a0f      	ldr	r2, [pc, #60]	; (90020158 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9002011c:	490f      	ldr	r1, [pc, #60]	; (9002015c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9002011e:	4810      	ldr	r0, [pc, #64]	; (90020160 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90020120:	f007 ff83 	bl	9002802a <__aeabi_atexit>
90020124:	4c0f      	ldr	r4, [pc, #60]	; (90020164 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90020126:	7823      	ldrb	r3, [r4, #0]
90020128:	f3bf 8f5b 	dmb	ish
9002012c:	07db      	lsls	r3, r3, #31
9002012e:	d40b      	bmi.n	90020148 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90020130:	4620      	mov	r0, r4
90020132:	f007 ff81 	bl	90028038 <__cxa_guard_acquire>
90020136:	b138      	cbz	r0, 90020148 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90020138:	4620      	mov	r0, r4
9002013a:	f007 ff89 	bl	90028050 <__cxa_guard_release>
9002013e:	4a06      	ldr	r2, [pc, #24]	; (90020158 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90020140:	4909      	ldr	r1, [pc, #36]	; (90020168 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90020142:	480a      	ldr	r0, [pc, #40]	; (9002016c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90020144:	f007 ff71 	bl	9002802a <__aeabi_atexit>
90020148:	4b05      	ldr	r3, [pc, #20]	; (90020160 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9002014a:	662b      	str	r3, [r5, #96]	; 0x60
9002014c:	4b07      	ldr	r3, [pc, #28]	; (9002016c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9002014e:	666b      	str	r3, [r5, #100]	; 0x64
90020150:	bd38      	pop	{r3, r4, r5, pc}
90020152:	bf00      	nop
90020154:	24039974 	.word	0x24039974
90020158:	24000000 	.word	0x24000000
9002015c:	9001c9d7 	.word	0x9001c9d7
90020160:	240000c4 	.word	0x240000c4
90020164:	24039978 	.word	0x24039978
90020168:	9001c9d5 	.word	0x9001c9d5
9002016c:	240000c8 	.word	0x240000c8

90020170 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90020170:	b538      	push	{r3, r4, r5, lr}
90020172:	4c15      	ldr	r4, [pc, #84]	; (900201c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90020174:	4605      	mov	r5, r0
90020176:	7823      	ldrb	r3, [r4, #0]
90020178:	f3bf 8f5b 	dmb	ish
9002017c:	07da      	lsls	r2, r3, #31
9002017e:	d40b      	bmi.n	90020198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90020180:	4620      	mov	r0, r4
90020182:	f007 ff59 	bl	90028038 <__cxa_guard_acquire>
90020186:	b138      	cbz	r0, 90020198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90020188:	4620      	mov	r0, r4
9002018a:	f007 ff61 	bl	90028050 <__cxa_guard_release>
9002018e:	4a0f      	ldr	r2, [pc, #60]	; (900201cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90020190:	490f      	ldr	r1, [pc, #60]	; (900201d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
90020192:	4810      	ldr	r0, [pc, #64]	; (900201d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90020194:	f007 ff49 	bl	9002802a <__aeabi_atexit>
90020198:	4c0f      	ldr	r4, [pc, #60]	; (900201d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9002019a:	7823      	ldrb	r3, [r4, #0]
9002019c:	f3bf 8f5b 	dmb	ish
900201a0:	07db      	lsls	r3, r3, #31
900201a2:	d40b      	bmi.n	900201bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
900201a4:	4620      	mov	r0, r4
900201a6:	f007 ff47 	bl	90028038 <__cxa_guard_acquire>
900201aa:	b138      	cbz	r0, 900201bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
900201ac:	4620      	mov	r0, r4
900201ae:	f007 ff4f 	bl	90028050 <__cxa_guard_release>
900201b2:	4a06      	ldr	r2, [pc, #24]	; (900201cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
900201b4:	4909      	ldr	r1, [pc, #36]	; (900201dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
900201b6:	480a      	ldr	r0, [pc, #40]	; (900201e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
900201b8:	f007 ff37 	bl	9002802a <__aeabi_atexit>
900201bc:	4b05      	ldr	r3, [pc, #20]	; (900201d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
900201be:	65ab      	str	r3, [r5, #88]	; 0x58
900201c0:	4b07      	ldr	r3, [pc, #28]	; (900201e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
900201c2:	65eb      	str	r3, [r5, #92]	; 0x5c
900201c4:	bd38      	pop	{r3, r4, r5, pc}
900201c6:	bf00      	nop
900201c8:	2403994c 	.word	0x2403994c
900201cc:	24000000 	.word	0x24000000
900201d0:	9001c9db 	.word	0x9001c9db
900201d4:	2400009c 	.word	0x2400009c
900201d8:	24039950 	.word	0x24039950
900201dc:	9001c9d9 	.word	0x9001c9d9
900201e0:	240000a0 	.word	0x240000a0

900201e4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
900201e4:	b510      	push	{r4, lr}
900201e6:	4604      	mov	r4, r0
900201e8:	f7ff ff88 	bl	900200fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
900201ec:	4620      	mov	r0, r4
900201ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900201f2:	f7ff bfbd 	b.w	90020170 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

900201f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
900201f8:	b538      	push	{r3, r4, r5, lr}
900201fa:	4c15      	ldr	r4, [pc, #84]	; (90020250 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
900201fc:	4605      	mov	r5, r0
900201fe:	7823      	ldrb	r3, [r4, #0]
90020200:	f3bf 8f5b 	dmb	ish
90020204:	07da      	lsls	r2, r3, #31
90020206:	d40b      	bmi.n	90020220 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90020208:	4620      	mov	r0, r4
9002020a:	f007 ff15 	bl	90028038 <__cxa_guard_acquire>
9002020e:	b138      	cbz	r0, 90020220 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90020210:	4620      	mov	r0, r4
90020212:	f007 ff1d 	bl	90028050 <__cxa_guard_release>
90020216:	4a0f      	ldr	r2, [pc, #60]	; (90020254 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90020218:	490f      	ldr	r1, [pc, #60]	; (90020258 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9002021a:	4810      	ldr	r0, [pc, #64]	; (9002025c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9002021c:	f007 ff05 	bl	9002802a <__aeabi_atexit>
90020220:	4c0f      	ldr	r4, [pc, #60]	; (90020260 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90020222:	7823      	ldrb	r3, [r4, #0]
90020224:	f3bf 8f5b 	dmb	ish
90020228:	07db      	lsls	r3, r3, #31
9002022a:	d40b      	bmi.n	90020244 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9002022c:	4620      	mov	r0, r4
9002022e:	f007 ff03 	bl	90028038 <__cxa_guard_acquire>
90020232:	b138      	cbz	r0, 90020244 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90020234:	4620      	mov	r0, r4
90020236:	f007 ff0b 	bl	90028050 <__cxa_guard_release>
9002023a:	4a06      	ldr	r2, [pc, #24]	; (90020254 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9002023c:	4909      	ldr	r1, [pc, #36]	; (90020264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9002023e:	480a      	ldr	r0, [pc, #40]	; (90020268 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90020240:	f007 fef3 	bl	9002802a <__aeabi_atexit>
90020244:	4b05      	ldr	r3, [pc, #20]	; (9002025c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90020246:	672b      	str	r3, [r5, #112]	; 0x70
90020248:	4b07      	ldr	r3, [pc, #28]	; (90020268 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9002024a:	676b      	str	r3, [r5, #116]	; 0x74
9002024c:	bd38      	pop	{r3, r4, r5, pc}
9002024e:	bf00      	nop
90020250:	24039944 	.word	0x24039944
90020254:	24000000 	.word	0x24000000
90020258:	9001c9cf 	.word	0x9001c9cf
9002025c:	24000094 	.word	0x24000094
90020260:	24039948 	.word	0x24039948
90020264:	9001c9cd 	.word	0x9001c9cd
90020268:	24000098 	.word	0x24000098

9002026c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9002026c:	b538      	push	{r3, r4, r5, lr}
9002026e:	4c15      	ldr	r4, [pc, #84]	; (900202c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90020270:	4605      	mov	r5, r0
90020272:	7823      	ldrb	r3, [r4, #0]
90020274:	f3bf 8f5b 	dmb	ish
90020278:	07da      	lsls	r2, r3, #31
9002027a:	d40b      	bmi.n	90020294 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9002027c:	4620      	mov	r0, r4
9002027e:	f007 fedb 	bl	90028038 <__cxa_guard_acquire>
90020282:	b138      	cbz	r0, 90020294 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90020284:	4620      	mov	r0, r4
90020286:	f007 fee3 	bl	90028050 <__cxa_guard_release>
9002028a:	4a0f      	ldr	r2, [pc, #60]	; (900202c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9002028c:	490f      	ldr	r1, [pc, #60]	; (900202cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9002028e:	4810      	ldr	r0, [pc, #64]	; (900202d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90020290:	f007 fecb 	bl	9002802a <__aeabi_atexit>
90020294:	4c0f      	ldr	r4, [pc, #60]	; (900202d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90020296:	7823      	ldrb	r3, [r4, #0]
90020298:	f3bf 8f5b 	dmb	ish
9002029c:	07db      	lsls	r3, r3, #31
9002029e:	d40b      	bmi.n	900202b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
900202a0:	4620      	mov	r0, r4
900202a2:	f007 fec9 	bl	90028038 <__cxa_guard_acquire>
900202a6:	b138      	cbz	r0, 900202b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
900202a8:	4620      	mov	r0, r4
900202aa:	f007 fed1 	bl	90028050 <__cxa_guard_release>
900202ae:	4a06      	ldr	r2, [pc, #24]	; (900202c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
900202b0:	4909      	ldr	r1, [pc, #36]	; (900202d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
900202b2:	480a      	ldr	r0, [pc, #40]	; (900202dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
900202b4:	f007 feb9 	bl	9002802a <__aeabi_atexit>
900202b8:	4b05      	ldr	r3, [pc, #20]	; (900202d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
900202ba:	66ab      	str	r3, [r5, #104]	; 0x68
900202bc:	4b07      	ldr	r3, [pc, #28]	; (900202dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
900202be:	66eb      	str	r3, [r5, #108]	; 0x6c
900202c0:	bd38      	pop	{r3, r4, r5, pc}
900202c2:	bf00      	nop
900202c4:	2403993c 	.word	0x2403993c
900202c8:	24000000 	.word	0x24000000
900202cc:	9001c9d3 	.word	0x9001c9d3
900202d0:	2400008c 	.word	0x2400008c
900202d4:	24039940 	.word	0x24039940
900202d8:	9001c9d1 	.word	0x9001c9d1
900202dc:	24000090 	.word	0x24000090

900202e0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
900202e0:	b510      	push	{r4, lr}
900202e2:	4604      	mov	r4, r0
900202e4:	f7ff ff88 	bl	900201f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
900202e8:	4620      	mov	r0, r4
900202ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900202ee:	f7ff bfbd 	b.w	9002026c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

900202f2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
900202f2:	b510      	push	{r4, lr}
900202f4:	4604      	mov	r4, r0
900202f6:	f7ff fff3 	bl	900202e0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
900202fa:	4620      	mov	r0, r4
900202fc:	f7ff ff72 	bl	900201e4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90020300:	4620      	mov	r0, r4
90020302:	f7ff fdf9 	bl	9001fef8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90020306:	4620      	mov	r0, r4
90020308:	f7ff fcfa 	bl	9001fd00 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9002030c:	4620      	mov	r0, r4
9002030e:	f7ff fd75 	bl	9001fdfc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90020312:	4620      	mov	r0, r4
90020314:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020318:	f7ff bee0 	b.w	900200dc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9002031c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9002031c:	b538      	push	{r3, r4, r5, lr}
9002031e:	4c0b      	ldr	r4, [pc, #44]	; (9002034c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90020320:	4605      	mov	r5, r0
90020322:	7823      	ldrb	r3, [r4, #0]
90020324:	f3bf 8f5b 	dmb	ish
90020328:	07db      	lsls	r3, r3, #31
9002032a:	d40b      	bmi.n	90020344 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9002032c:	4620      	mov	r0, r4
9002032e:	f007 fe83 	bl	90028038 <__cxa_guard_acquire>
90020332:	b138      	cbz	r0, 90020344 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90020334:	4620      	mov	r0, r4
90020336:	f007 fe8b 	bl	90028050 <__cxa_guard_release>
9002033a:	4a05      	ldr	r2, [pc, #20]	; (90020350 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9002033c:	4905      	ldr	r1, [pc, #20]	; (90020354 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9002033e:	4806      	ldr	r0, [pc, #24]	; (90020358 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90020340:	f007 fe73 	bl	9002802a <__aeabi_atexit>
90020344:	4b04      	ldr	r3, [pc, #16]	; (90020358 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90020346:	67ab      	str	r3, [r5, #120]	; 0x78
90020348:	bd38      	pop	{r3, r4, r5, pc}
9002034a:	bf00      	nop
9002034c:	24039930 	.word	0x24039930
90020350:	24000000 	.word	0x24000000
90020354:	9001c9cb 	.word	0x9001c9cb
90020358:	24000084 	.word	0x24000084

9002035c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9002035c:	b538      	push	{r3, r4, r5, lr}
9002035e:	4c0b      	ldr	r4, [pc, #44]	; (9002038c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90020360:	4605      	mov	r5, r0
90020362:	7823      	ldrb	r3, [r4, #0]
90020364:	f3bf 8f5b 	dmb	ish
90020368:	07db      	lsls	r3, r3, #31
9002036a:	d40b      	bmi.n	90020384 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9002036c:	4620      	mov	r0, r4
9002036e:	f007 fe63 	bl	90028038 <__cxa_guard_acquire>
90020372:	b138      	cbz	r0, 90020384 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90020374:	4620      	mov	r0, r4
90020376:	f007 fe6b 	bl	90028050 <__cxa_guard_release>
9002037a:	4a05      	ldr	r2, [pc, #20]	; (90020390 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9002037c:	4905      	ldr	r1, [pc, #20]	; (90020394 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9002037e:	4806      	ldr	r0, [pc, #24]	; (90020398 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90020380:	f007 fe53 	bl	9002802a <__aeabi_atexit>
90020384:	4b04      	ldr	r3, [pc, #16]	; (90020398 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90020386:	67eb      	str	r3, [r5, #124]	; 0x7c
90020388:	bd38      	pop	{r3, r4, r5, pc}
9002038a:	bf00      	nop
9002038c:	24039934 	.word	0x24039934
90020390:	24000000 	.word	0x24000000
90020394:	9001c9c9 	.word	0x9001c9c9
90020398:	24000088 	.word	0x24000088

9002039c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9002039c:	b570      	push	{r4, r5, r6, lr}
9002039e:	4d0d      	ldr	r5, [pc, #52]	; (900203d4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
900203a0:	4606      	mov	r6, r0
900203a2:	4c0d      	ldr	r4, [pc, #52]	; (900203d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
900203a4:	782b      	ldrb	r3, [r5, #0]
900203a6:	f3bf 8f5b 	dmb	ish
900203aa:	f013 0f01 	tst.w	r3, #1
900203ae:	d10d      	bne.n	900203cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
900203b0:	4628      	mov	r0, r5
900203b2:	f007 fe41 	bl	90028038 <__cxa_guard_acquire>
900203b6:	b148      	cbz	r0, 900203cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
900203b8:	4b08      	ldr	r3, [pc, #32]	; (900203dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
900203ba:	4628      	mov	r0, r5
900203bc:	6023      	str	r3, [r4, #0]
900203be:	f007 fe47 	bl	90028050 <__cxa_guard_release>
900203c2:	4a07      	ldr	r2, [pc, #28]	; (900203e0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
900203c4:	4620      	mov	r0, r4
900203c6:	4907      	ldr	r1, [pc, #28]	; (900203e4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
900203c8:	f007 fe2f 	bl	9002802a <__aeabi_atexit>
900203cc:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
900203d0:	bd70      	pop	{r4, r5, r6, pc}
900203d2:	bf00      	nop
900203d4:	24039938 	.word	0x24039938
900203d8:	240399ac 	.word	0x240399ac
900203dc:	9002c6b4 	.word	0x9002c6b4
900203e0:	24000000 	.word	0x24000000
900203e4:	9001c9c7 	.word	0x9001c9c7

900203e8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
900203e8:	b510      	push	{r4, lr}
900203ea:	4604      	mov	r4, r0
900203ec:	f7ff ff96 	bl	9002031c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
900203f0:	4620      	mov	r0, r4
900203f2:	f7ff ffb3 	bl	9002035c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
900203f6:	4620      	mov	r0, r4
900203f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900203fc:	f7ff bfce 	b.w	9002039c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90020400 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90020400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020404:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
90020408:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
9002040c:	2d00      	cmp	r5, #0
9002040e:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
90020412:	fb05 4c0e 	mla	ip, r5, lr, r4
90020416:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
9002041a:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
9002041e:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
90020422:	eb02 0a0c 	add.w	sl, r2, ip
90020426:	8808      	ldrh	r0, [r1, #0]
90020428:	f2c0 80b0 	blt.w	9002058c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9002042c:	45ab      	cmp	fp, r5
9002042e:	f340 80ad 	ble.w	9002058c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90020432:	2c00      	cmp	r4, #0
90020434:	f2c0 80a8 	blt.w	90020588 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90020438:	45a6      	cmp	lr, r4
9002043a:	f340 80a5 	ble.w	90020588 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9002043e:	f812 200c 	ldrb.w	r2, [r2, ip]
90020442:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90020446:	1c62      	adds	r2, r4, #1
90020448:	f100 80a3 	bmi.w	90020592 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9002044c:	4596      	cmp	lr, r2
9002044e:	f340 80a0 	ble.w	90020592 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90020452:	f1b9 0f00 	cmp.w	r9, #0
90020456:	f000 809c 	beq.w	90020592 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9002045a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002045e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90020462:	3501      	adds	r5, #1
90020464:	f100 8099 	bmi.w	9002059a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90020468:	45ab      	cmp	fp, r5
9002046a:	f340 8096 	ble.w	9002059a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9002046e:	2f00      	cmp	r7, #0
90020470:	f000 8093 	beq.w	9002059a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90020474:	2c00      	cmp	r4, #0
90020476:	f2c0 808e 	blt.w	90020596 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9002047a:	45a6      	cmp	lr, r4
9002047c:	f340 808b 	ble.w	90020596 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90020480:	f81a 200e 	ldrb.w	r2, [sl, lr]
90020484:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90020488:	3401      	adds	r4, #1
9002048a:	f100 8089 	bmi.w	900205a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9002048e:	45a6      	cmp	lr, r4
90020490:	f340 8086 	ble.w	900205a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90020494:	f1b9 0f00 	cmp.w	r9, #0
90020498:	f000 8082 	beq.w	900205a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9002049c:	44d6      	add	lr, sl
9002049e:	f89e 2001 	ldrb.w	r2, [lr, #1]
900204a2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
900204a6:	ea4f 4408 	mov.w	r4, r8, lsl #16
900204aa:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
900204ae:	fb19 fe07 	smulbb	lr, r9, r7
900204b2:	f1c7 0210 	rsb	r2, r7, #16
900204b6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900204ba:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
900204be:	eba2 0209 	sub.w	r2, r2, r9
900204c2:	ea44 0808 	orr.w	r8, r4, r8
900204c6:	ea4f 440c 	mov.w	r4, ip, lsl #16
900204ca:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900204ce:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
900204d2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900204d6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
900204da:	ea44 0c0c 	orr.w	ip, r4, ip
900204de:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900204e2:	fb04 f40c 	mul.w	r4, r4, ip
900204e6:	fb02 4808 	mla	r8, r2, r8, r4
900204ea:	041a      	lsls	r2, r3, #16
900204ec:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900204f0:	b2b4      	uxth	r4, r6
900204f2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900204f6:	43f6      	mvns	r6, r6
900204f8:	4313      	orrs	r3, r2
900204fa:	042a      	lsls	r2, r5, #16
900204fc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90020500:	b2f6      	uxtb	r6, r6
90020502:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90020506:	fb0e 8303 	mla	r3, lr, r3, r8
9002050a:	432a      	orrs	r2, r5
9002050c:	fb07 3202 	mla	r2, r7, r2, r3
90020510:	10c7      	asrs	r7, r0, #3
90020512:	0d53      	lsrs	r3, r2, #21
90020514:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90020518:	0952      	lsrs	r2, r2, #5
9002051a:	fb17 f706 	smulbb	r7, r7, r6
9002051e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020522:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90020526:	431a      	orrs	r2, r3
90020528:	b293      	uxth	r3, r2
9002052a:	1202      	asrs	r2, r0, #8
9002052c:	121d      	asrs	r5, r3, #8
9002052e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90020532:	00c0      	lsls	r0, r0, #3
90020534:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90020538:	fb12 f206 	smulbb	r2, r2, r6
9002053c:	b2c0      	uxtb	r0, r0
9002053e:	fb05 2504 	mla	r5, r5, r4, r2
90020542:	10da      	asrs	r2, r3, #3
90020544:	fb10 f006 	smulbb	r0, r0, r6
90020548:	00db      	lsls	r3, r3, #3
9002054a:	b2ad      	uxth	r5, r5
9002054c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90020550:	b2db      	uxtb	r3, r3
90020552:	fb02 7204 	mla	r2, r2, r4, r7
90020556:	fb03 0004 	mla	r0, r3, r4, r0
9002055a:	1c6b      	adds	r3, r5, #1
9002055c:	b292      	uxth	r2, r2
9002055e:	b280      	uxth	r0, r0
90020560:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90020564:	1c43      	adds	r3, r0, #1
90020566:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002056a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002056e:	1c50      	adds	r0, r2, #1
90020570:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90020574:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90020578:	0952      	lsrs	r2, r2, #5
9002057a:	432b      	orrs	r3, r5
9002057c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90020580:	4313      	orrs	r3, r2
90020582:	800b      	strh	r3, [r1, #0]
90020584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020588:	4680      	mov	r8, r0
9002058a:	e75c      	b.n	90020446 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
9002058c:	4684      	mov	ip, r0
9002058e:	4680      	mov	r8, r0
90020590:	e767      	b.n	90020462 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90020592:	4684      	mov	ip, r0
90020594:	e765      	b.n	90020462 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90020596:	4605      	mov	r5, r0
90020598:	e776      	b.n	90020488 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
9002059a:	4603      	mov	r3, r0
9002059c:	4605      	mov	r5, r0
9002059e:	e782      	b.n	900204a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
900205a0:	4603      	mov	r3, r0
900205a2:	e780      	b.n	900204a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

900205a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900205a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900205a8:	b099      	sub	sp, #100	; 0x64
900205aa:	9215      	str	r2, [sp, #84]	; 0x54
900205ac:	9309      	str	r3, [sp, #36]	; 0x24
900205ae:	9a27      	ldr	r2, [sp, #156]	; 0x9c
900205b0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
900205b4:	9016      	str	r0, [sp, #88]	; 0x58
900205b6:	930d      	str	r3, [sp, #52]	; 0x34
900205b8:	6850      	ldr	r0, [r2, #4]
900205ba:	910c      	str	r1, [sp, #48]	; 0x30
900205bc:	6812      	ldr	r2, [r2, #0]
900205be:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
900205c2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
900205c6:	fb00 1303 	mla	r3, r0, r3, r1
900205ca:	eb02 0843 	add.w	r8, r2, r3, lsl #1
900205ce:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900205d0:	681b      	ldr	r3, [r3, #0]
900205d2:	930b      	str	r3, [sp, #44]	; 0x2c
900205d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900205d6:	685e      	ldr	r6, [r3, #4]
900205d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900205da:	3604      	adds	r6, #4
900205dc:	43db      	mvns	r3, r3
900205de:	b2db      	uxtb	r3, r3
900205e0:	930a      	str	r3, [sp, #40]	; 0x28
900205e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900205e4:	2b00      	cmp	r3, #0
900205e6:	dc03      	bgt.n	900205f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900205e8:	9b15      	ldr	r3, [sp, #84]	; 0x54
900205ea:	2b00      	cmp	r3, #0
900205ec:	f340 8225 	ble.w	90020a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900205f0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900205f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900205f6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900205fa:	1e48      	subs	r0, r1, #1
900205fc:	1e57      	subs	r7, r2, #1
900205fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020600:	2b00      	cmp	r3, #0
90020602:	f340 80e3 	ble.w	900207cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90020606:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9002060a:	ea4f 4325 	mov.w	r3, r5, asr #16
9002060e:	d406      	bmi.n	9002061e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020610:	4584      	cmp	ip, r0
90020612:	da04      	bge.n	9002061e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020614:	2b00      	cmp	r3, #0
90020616:	db02      	blt.n	9002061e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020618:	42bb      	cmp	r3, r7
9002061a:	f2c0 80d8 	blt.w	900207ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002061e:	f11c 0c01 	adds.w	ip, ip, #1
90020622:	f100 80c9 	bmi.w	900207b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90020626:	4561      	cmp	r1, ip
90020628:	f2c0 80c6 	blt.w	900207b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9002062c:	3301      	adds	r3, #1
9002062e:	f100 80c3 	bmi.w	900207b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90020632:	429a      	cmp	r2, r3
90020634:	f2c0 80c0 	blt.w	900207b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90020638:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9002063c:	4647      	mov	r7, r8
9002063e:	f1bb 0f00 	cmp.w	fp, #0
90020642:	f340 80e3 	ble.w	9002080c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90020646:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90020648:	ea4f 4c25 	mov.w	ip, r5, asr #16
9002064c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002064e:	f3ca 3003 	ubfx	r0, sl, #12, #4
90020652:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90020656:	ea5f 422a 	movs.w	r2, sl, asr #16
9002065a:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002065e:	689b      	ldr	r3, [r3, #8]
90020660:	f100 8121 	bmi.w	900208a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90020664:	f103 39ff 	add.w	r9, r3, #4294967295
90020668:	454a      	cmp	r2, r9
9002066a:	f280 811c 	bge.w	900208a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002066e:	f1bc 0f00 	cmp.w	ip, #0
90020672:	f2c0 8118 	blt.w	900208a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90020676:	f10e 39ff 	add.w	r9, lr, #4294967295
9002067a:	45cc      	cmp	ip, r9
9002067c:	f280 8113 	bge.w	900208a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90020680:	b21b      	sxth	r3, r3
90020682:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020684:	fb0c 2203 	mla	r2, ip, r3, r2
90020688:	eb04 0902 	add.w	r9, r4, r2
9002068c:	5ca2      	ldrb	r2, [r4, r2]
9002068e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
90020692:	2800      	cmp	r0, #0
90020694:	f000 80fe 	beq.w	90020894 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90020698:	f899 2001 	ldrb.w	r2, [r9, #1]
9002069c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
900206a0:	9211      	str	r2, [sp, #68]	; 0x44
900206a2:	b151      	cbz	r1, 900206ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900206a4:	eb09 0203 	add.w	r2, r9, r3
900206a8:	f819 3003 	ldrb.w	r3, [r9, r3]
900206ac:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900206b0:	930f      	str	r3, [sp, #60]	; 0x3c
900206b2:	7853      	ldrb	r3, [r2, #1]
900206b4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900206b8:	9312      	str	r3, [sp, #72]	; 0x48
900206ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
900206bc:	fb10 f201 	smulbb	r2, r0, r1
900206c0:	9c12      	ldr	r4, [sp, #72]	; 0x48
900206c2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900206c6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900206ca:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
900206ce:	10d2      	asrs	r2, r2, #3
900206d0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900206d4:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
900206d8:	ea4c 0c03 	orr.w	ip, ip, r3
900206dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
900206de:	041b      	lsls	r3, r3, #16
900206e0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900206e4:	4323      	orrs	r3, r4
900206e6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900206e8:	4353      	muls	r3, r2
900206ea:	fb09 330c 	mla	r3, r9, ip, r3
900206ee:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
900206f2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900206f6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900206fa:	ea4c 0e0e 	orr.w	lr, ip, lr
900206fe:	f1c1 0c10 	rsb	ip, r1, #16
90020702:	ebac 0c00 	sub.w	ip, ip, r0
90020706:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002070a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9002070e:	fb0c 3c0e 	mla	ip, ip, lr, r3
90020712:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90020714:	0418      	lsls	r0, r3, #16
90020716:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002071a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002071e:	4318      	orrs	r0, r3
90020720:	fb02 c200 	mla	r2, r2, r0, ip
90020724:	8838      	ldrh	r0, [r7, #0]
90020726:	0d53      	lsrs	r3, r2, #21
90020728:	0952      	lsrs	r2, r2, #5
9002072a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002072e:	1201      	asrs	r1, r0, #8
90020730:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90020734:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90020738:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002073c:	00c0      	lsls	r0, r0, #3
9002073e:	431a      	orrs	r2, r3
90020740:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
90020744:	fb11 f104 	smulbb	r1, r1, r4
90020748:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9002074c:	b292      	uxth	r2, r2
9002074e:	fb1e fe04 	smulbb	lr, lr, r4
90020752:	b2c0      	uxtb	r0, r0
90020754:	ea4f 2c22 	mov.w	ip, r2, asr #8
90020758:	fb10 f004 	smulbb	r0, r0, r4
9002075c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90020760:	fb0c 1c03 	mla	ip, ip, r3, r1
90020764:	10d1      	asrs	r1, r2, #3
90020766:	00d2      	lsls	r2, r2, #3
90020768:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9002076c:	fa1f fc8c 	uxth.w	ip, ip
90020770:	b2d2      	uxtb	r2, r2
90020772:	fb01 e103 	mla	r1, r1, r3, lr
90020776:	fb02 0303 	mla	r3, r2, r3, r0
9002077a:	b289      	uxth	r1, r1
9002077c:	b29a      	uxth	r2, r3
9002077e:	f10c 0301 	add.w	r3, ip, #1
90020782:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90020786:	1c53      	adds	r3, r2, #1
90020788:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002078c:	1c4a      	adds	r2, r1, #1
9002078e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90020792:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020796:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002079a:	0949      	lsrs	r1, r1, #5
9002079c:	ea43 030c 	orr.w	r3, r3, ip
900207a0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900207a4:	430b      	orrs	r3, r1
900207a6:	803b      	strh	r3, [r7, #0]
900207a8:	9b25      	ldr	r3, [sp, #148]	; 0x94
900207aa:	3702      	adds	r7, #2
900207ac:	f10b 3bff 	add.w	fp, fp, #4294967295
900207b0:	449a      	add	sl, r3
900207b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
900207b4:	441d      	add	r5, r3
900207b6:	e742      	b.n	9002063e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900207b8:	9b25      	ldr	r3, [sp, #148]	; 0x94
900207ba:	f108 0802 	add.w	r8, r8, #2
900207be:	449a      	add	sl, r3
900207c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
900207c2:	441d      	add	r5, r3
900207c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900207c6:	3b01      	subs	r3, #1
900207c8:	9309      	str	r3, [sp, #36]	; 0x24
900207ca:	e718      	b.n	900205fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
900207cc:	d023      	beq.n	90020816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900207ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
900207d0:	9825      	ldr	r0, [sp, #148]	; 0x94
900207d2:	3b01      	subs	r3, #1
900207d4:	fb00 a003 	mla	r0, r0, r3, sl
900207d8:	1400      	asrs	r0, r0, #16
900207da:	f53f af2d 	bmi.w	90020638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900207de:	3901      	subs	r1, #1
900207e0:	4288      	cmp	r0, r1
900207e2:	f6bf af29 	bge.w	90020638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900207e6:	9926      	ldr	r1, [sp, #152]	; 0x98
900207e8:	fb01 5303 	mla	r3, r1, r3, r5
900207ec:	141b      	asrs	r3, r3, #16
900207ee:	f53f af23 	bmi.w	90020638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900207f2:	3a01      	subs	r2, #1
900207f4:	4293      	cmp	r3, r2
900207f6:	f6bf af1f 	bge.w	90020638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900207fa:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
900207fe:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
90020802:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
90020806:	f1be 0f00 	cmp.w	lr, #0
9002080a:	dc6c      	bgt.n	900208e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002080c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002080e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90020812:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90020816:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020818:	2b00      	cmp	r3, #0
9002081a:	f340 810e 	ble.w	90020a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9002081e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90020822:	9b22      	ldr	r3, [sp, #136]	; 0x88
90020824:	ee30 0a04 	vadd.f32	s0, s0, s8
90020828:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002082c:	eef0 6a62 	vmov.f32	s13, s5
90020830:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020834:	ee31 1a05 	vadd.f32	s2, s2, s10
90020838:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002083c:	ee16 aa90 	vmov	sl, s13
90020840:	eef0 6a43 	vmov.f32	s13, s6
90020844:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020848:	ee16 5a90 	vmov	r5, s13
9002084c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020850:	ee61 7a27 	vmul.f32	s15, s2, s15
90020854:	ee77 2a62 	vsub.f32	s5, s14, s5
90020858:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002085c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020860:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020864:	ee12 2a90 	vmov	r2, s5
90020868:	eef0 2a47 	vmov.f32	s5, s14
9002086c:	fb92 f3f3 	sdiv	r3, r2, r3
90020870:	ee13 2a10 	vmov	r2, s6
90020874:	9325      	str	r3, [sp, #148]	; 0x94
90020876:	9b22      	ldr	r3, [sp, #136]	; 0x88
90020878:	eeb0 3a67 	vmov.f32	s6, s15
9002087c:	fb92 f3f3 	sdiv	r3, r2, r3
90020880:	9326      	str	r3, [sp, #152]	; 0x98
90020882:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020884:	9a15      	ldr	r2, [sp, #84]	; 0x54
90020886:	3b01      	subs	r3, #1
90020888:	930c      	str	r3, [sp, #48]	; 0x30
9002088a:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002088c:	bf08      	it	eq
9002088e:	4613      	moveq	r3, r2
90020890:	9309      	str	r3, [sp, #36]	; 0x24
90020892:	e6a6      	b.n	900205e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90020894:	2900      	cmp	r1, #0
90020896:	f43f af10 	beq.w	900206ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002089a:	f819 3003 	ldrb.w	r3, [r9, r3]
9002089e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900208a2:	930f      	str	r3, [sp, #60]	; 0x3c
900208a4:	e709      	b.n	900206ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900208a6:	f112 0901 	adds.w	r9, r2, #1
900208aa:	f53f af7d 	bmi.w	900207a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900208ae:	454b      	cmp	r3, r9
900208b0:	f6ff af7a 	blt.w	900207a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900208b4:	f11c 0901 	adds.w	r9, ip, #1
900208b8:	f53f af76 	bmi.w	900207a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900208bc:	45ce      	cmp	lr, r9
900208be:	f6ff af73 	blt.w	900207a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900208c2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900208c4:	b21b      	sxth	r3, r3
900208c6:	9202      	str	r2, [sp, #8]
900208c8:	fa0f f28e 	sxth.w	r2, lr
900208cc:	9300      	str	r3, [sp, #0]
900208ce:	4633      	mov	r3, r6
900208d0:	9201      	str	r2, [sp, #4]
900208d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900208d4:	e9cd 1405 	strd	r1, r4, [sp, #20]
900208d8:	e9cd c003 	strd	ip, r0, [sp, #12]
900208dc:	4639      	mov	r1, r7
900208de:	9816      	ldr	r0, [sp, #88]	; 0x58
900208e0:	f7ff fd8e 	bl	90020400 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
900208e4:	e760      	b.n	900207a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900208e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900208e8:	ea4f 422a 	mov.w	r2, sl, asr #16
900208ec:	1429      	asrs	r1, r5, #16
900208ee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900208f0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900208f4:	f3ca 3c03 	ubfx	ip, sl, #12, #4
900208f8:	f3c5 3003 	ubfx	r0, r5, #12, #4
900208fc:	fb03 2101 	mla	r1, r3, r1, r2
90020900:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90020902:	440a      	add	r2, r1
90020904:	5c61      	ldrb	r1, [r4, r1]
90020906:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
9002090a:	f1bc 0f00 	cmp.w	ip, #0
9002090e:	f000 808c 	beq.w	90020a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
90020912:	7857      	ldrb	r7, [r2, #1]
90020914:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90020918:	9413      	str	r4, [sp, #76]	; 0x4c
9002091a:	b140      	cbz	r0, 9002092e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002091c:	18d7      	adds	r7, r2, r3
9002091e:	5cd3      	ldrb	r3, [r2, r3]
90020920:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90020924:	9310      	str	r3, [sp, #64]	; 0x40
90020926:	787b      	ldrb	r3, [r7, #1]
90020928:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002092c:	9314      	str	r3, [sp, #80]	; 0x50
9002092e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90020930:	fb1c f200 	smulbb	r2, ip, r0
90020934:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020936:	f10e 3eff 	add.w	lr, lr, #4294967295
9002093a:	041f      	lsls	r7, r3, #16
9002093c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90020940:	10d2      	asrs	r2, r2, #3
90020942:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
90020946:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
9002094a:	431f      	orrs	r7, r3
9002094c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90020950:	9317      	str	r3, [sp, #92]	; 0x5c
90020952:	9b14      	ldr	r3, [sp, #80]	; 0x50
90020954:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90020956:	041b      	lsls	r3, r3, #16
90020958:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9002095c:	ea43 030b 	orr.w	r3, r3, fp
90020960:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90020964:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90020968:	4353      	muls	r3, r2
9002096a:	fb04 3707 	mla	r7, r4, r7, r3
9002096e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
90020972:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90020974:	ea43 0b01 	orr.w	fp, r3, r1
90020978:	f1c0 0110 	rsb	r1, r0, #16
9002097c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9002097e:	eba1 0c0c 	sub.w	ip, r1, ip
90020982:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90020986:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9002098a:	fb0c 770b 	mla	r7, ip, fp, r7
9002098e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90020992:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
90020996:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9002099a:	ea4c 0c0b 	orr.w	ip, ip, fp
9002099e:	fb02 770c 	mla	r7, r2, ip, r7
900209a2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900209a4:	0d79      	lsrs	r1, r7, #21
900209a6:	8812      	ldrh	r2, [r2, #0]
900209a8:	097f      	lsrs	r7, r7, #5
900209aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900209ae:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900209b2:	430f      	orrs	r7, r1
900209b4:	1211      	asrs	r1, r2, #8
900209b6:	b2bb      	uxth	r3, r7
900209b8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900209bc:	10d7      	asrs	r7, r2, #3
900209be:	fb11 f104 	smulbb	r1, r1, r4
900209c2:	1218      	asrs	r0, r3, #8
900209c4:	00d2      	lsls	r2, r2, #3
900209c6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900209ca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900209ce:	fb17 f704 	smulbb	r7, r7, r4
900209d2:	b2d2      	uxtb	r2, r2
900209d4:	fb00 1009 	mla	r0, r0, r9, r1
900209d8:	10d9      	asrs	r1, r3, #3
900209da:	fb12 f204 	smulbb	r2, r2, r4
900209de:	00db      	lsls	r3, r3, #3
900209e0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900209e4:	b280      	uxth	r0, r0
900209e6:	b2db      	uxtb	r3, r3
900209e8:	fb01 7109 	mla	r1, r1, r9, r7
900209ec:	fb03 2309 	mla	r3, r3, r9, r2
900209f0:	1c42      	adds	r2, r0, #1
900209f2:	b289      	uxth	r1, r1
900209f4:	b29b      	uxth	r3, r3
900209f6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900209fa:	1c4f      	adds	r7, r1, #1
900209fc:	1c5a      	adds	r2, r3, #1
900209fe:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90020a02:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90020a06:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90020a0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020a0c:	0949      	lsrs	r1, r1, #5
90020a0e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020a12:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90020a16:	4310      	orrs	r0, r2
90020a18:	4308      	orrs	r0, r1
90020a1a:	f823 0b02 	strh.w	r0, [r3], #2
90020a1e:	930e      	str	r3, [sp, #56]	; 0x38
90020a20:	9b25      	ldr	r3, [sp, #148]	; 0x94
90020a22:	449a      	add	sl, r3
90020a24:	9b26      	ldr	r3, [sp, #152]	; 0x98
90020a26:	441d      	add	r5, r3
90020a28:	e6ed      	b.n	90020806 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90020a2a:	2800      	cmp	r0, #0
90020a2c:	f43f af7f 	beq.w	9002092e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90020a30:	5cd3      	ldrb	r3, [r2, r3]
90020a32:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90020a36:	9310      	str	r3, [sp, #64]	; 0x40
90020a38:	e779      	b.n	9002092e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90020a3a:	b019      	add	sp, #100	; 0x64
90020a3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020a40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90020a40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90020a44:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
90020a48:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90020a4c:	f1b8 0f00 	cmp.w	r8, #0
90020a50:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
90020a54:	fb08 470e 	mla	r7, r8, lr, r4
90020a58:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
90020a5c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90020a60:	eb02 0907 	add.w	r9, r2, r7
90020a64:	8808      	ldrh	r0, [r1, #0]
90020a66:	db67      	blt.n	90020b38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90020a68:	45c2      	cmp	sl, r8
90020a6a:	dd65      	ble.n	90020b38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90020a6c:	2c00      	cmp	r4, #0
90020a6e:	db61      	blt.n	90020b34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90020a70:	45a6      	cmp	lr, r4
90020a72:	dd5f      	ble.n	90020b34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90020a74:	5dd2      	ldrb	r2, [r2, r7]
90020a76:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90020a7a:	1c62      	adds	r2, r4, #1
90020a7c:	d45f      	bmi.n	90020b3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90020a7e:	4596      	cmp	lr, r2
90020a80:	dd5d      	ble.n	90020b3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90020a82:	2d00      	cmp	r5, #0
90020a84:	d05b      	beq.n	90020b3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90020a86:	f899 2001 	ldrb.w	r2, [r9, #1]
90020a8a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90020a8e:	f118 0801 	adds.w	r8, r8, #1
90020a92:	d458      	bmi.n	90020b46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020a94:	45c2      	cmp	sl, r8
90020a96:	dd56      	ble.n	90020b46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020a98:	2e00      	cmp	r6, #0
90020a9a:	d054      	beq.n	90020b46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020a9c:	2c00      	cmp	r4, #0
90020a9e:	db50      	blt.n	90020b42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90020aa0:	45a6      	cmp	lr, r4
90020aa2:	dd4e      	ble.n	90020b42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90020aa4:	f819 200e 	ldrb.w	r2, [r9, lr]
90020aa8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90020aac:	3401      	adds	r4, #1
90020aae:	d407      	bmi.n	90020ac0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90020ab0:	45a6      	cmp	lr, r4
90020ab2:	dd05      	ble.n	90020ac0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90020ab4:	b125      	cbz	r5, 90020ac0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90020ab6:	44ce      	add	lr, r9
90020ab8:	f89e 0001 	ldrb.w	r0, [lr, #1]
90020abc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90020ac0:	fb15 f406 	smulbb	r4, r5, r6
90020ac4:	ea4f 430c 	mov.w	r3, ip, lsl #16
90020ac8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90020acc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90020ad0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020ad4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90020ad8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90020adc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90020ae0:	ea43 0c0c 	orr.w	ip, r3, ip
90020ae4:	f1c6 0310 	rsb	r3, r6, #16
90020ae8:	ea4e 0707 	orr.w	r7, lr, r7
90020aec:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90020af0:	1b5b      	subs	r3, r3, r5
90020af2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90020af6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90020afa:	437d      	muls	r5, r7
90020afc:	fb03 5c0c 	mla	ip, r3, ip, r5
90020b00:	0403      	lsls	r3, r0, #16
90020b02:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90020b06:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020b0a:	4318      	orrs	r0, r3
90020b0c:	0413      	lsls	r3, r2, #16
90020b0e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90020b12:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020b16:	fb04 c000 	mla	r0, r4, r0, ip
90020b1a:	4313      	orrs	r3, r2
90020b1c:	fb06 0003 	mla	r0, r6, r3, r0
90020b20:	0d43      	lsrs	r3, r0, #21
90020b22:	0940      	lsrs	r0, r0, #5
90020b24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020b28:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90020b2c:	4318      	orrs	r0, r3
90020b2e:	8008      	strh	r0, [r1, #0]
90020b30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020b34:	4684      	mov	ip, r0
90020b36:	e7a0      	b.n	90020a7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90020b38:	4607      	mov	r7, r0
90020b3a:	4684      	mov	ip, r0
90020b3c:	e7a7      	b.n	90020a8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90020b3e:	4607      	mov	r7, r0
90020b40:	e7a5      	b.n	90020a8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90020b42:	4602      	mov	r2, r0
90020b44:	e7b2      	b.n	90020aac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90020b46:	4602      	mov	r2, r0
90020b48:	e7ba      	b.n	90020ac0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90020b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020b4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020b4e:	b093      	sub	sp, #76	; 0x4c
90020b50:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90020b54:	920f      	str	r2, [sp, #60]	; 0x3c
90020b56:	9a21      	ldr	r2, [sp, #132]	; 0x84
90020b58:	9010      	str	r0, [sp, #64]	; 0x40
90020b5a:	9108      	str	r1, [sp, #32]
90020b5c:	6850      	ldr	r0, [r2, #4]
90020b5e:	9306      	str	r3, [sp, #24]
90020b60:	6812      	ldr	r2, [r2, #0]
90020b62:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90020b66:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90020b6a:	fb00 1303 	mla	r3, r0, r3, r1
90020b6e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90020b72:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020b74:	681b      	ldr	r3, [r3, #0]
90020b76:	9307      	str	r3, [sp, #28]
90020b78:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020b7a:	685f      	ldr	r7, [r3, #4]
90020b7c:	3704      	adds	r7, #4
90020b7e:	9b08      	ldr	r3, [sp, #32]
90020b80:	2b00      	cmp	r3, #0
90020b82:	dc03      	bgt.n	90020b8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90020b84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90020b86:	2b00      	cmp	r3, #0
90020b88:	f340 81b2 	ble.w	90020ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90020b8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020b8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020b92:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020b96:	1e48      	subs	r0, r1, #1
90020b98:	f102 3cff 	add.w	ip, r2, #4294967295
90020b9c:	9b06      	ldr	r3, [sp, #24]
90020b9e:	2b00      	cmp	r3, #0
90020ba0:	f340 80a9 	ble.w	90020cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020ba4:	ea5f 4e24 	movs.w	lr, r4, asr #16
90020ba8:	ea4f 4326 	mov.w	r3, r6, asr #16
90020bac:	d406      	bmi.n	90020bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90020bae:	4586      	cmp	lr, r0
90020bb0:	da04      	bge.n	90020bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90020bb2:	2b00      	cmp	r3, #0
90020bb4:	db02      	blt.n	90020bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90020bb6:	4563      	cmp	r3, ip
90020bb8:	f2c0 809e 	blt.w	90020cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90020bbc:	f11e 0e01 	adds.w	lr, lr, #1
90020bc0:	f100 808f 	bmi.w	90020ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90020bc4:	4571      	cmp	r1, lr
90020bc6:	f2c0 808c 	blt.w	90020ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90020bca:	3301      	adds	r3, #1
90020bcc:	f100 8089 	bmi.w	90020ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90020bd0:	429a      	cmp	r2, r3
90020bd2:	f2c0 8086 	blt.w	90020ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90020bd6:	f8dd b018 	ldr.w	fp, [sp, #24]
90020bda:	46c8      	mov	r8, r9
90020bdc:	f1bb 0f00 	cmp.w	fp, #0
90020be0:	f340 80a6 	ble.w	90020d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90020be4:	9a24      	ldr	r2, [sp, #144]	; 0x90
90020be6:	ea4f 4c26 	mov.w	ip, r6, asr #16
90020bea:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020bec:	f3c4 3003 	ubfx	r0, r4, #12, #4
90020bf0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90020bf4:	1422      	asrs	r2, r4, #16
90020bf6:	f3c6 3103 	ubfx	r1, r6, #12, #4
90020bfa:	689b      	ldr	r3, [r3, #8]
90020bfc:	f100 80e3 	bmi.w	90020dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90020c00:	f103 3aff 	add.w	sl, r3, #4294967295
90020c04:	4552      	cmp	r2, sl
90020c06:	f280 80de 	bge.w	90020dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90020c0a:	f1bc 0f00 	cmp.w	ip, #0
90020c0e:	f2c0 80da 	blt.w	90020dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90020c12:	f10e 3aff 	add.w	sl, lr, #4294967295
90020c16:	45d4      	cmp	ip, sl
90020c18:	f280 80d5 	bge.w	90020dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90020c1c:	b21b      	sxth	r3, r3
90020c1e:	9d07      	ldr	r5, [sp, #28]
90020c20:	fb0c 2203 	mla	r2, ip, r3, r2
90020c24:	eb05 0a02 	add.w	sl, r5, r2
90020c28:	5caa      	ldrb	r2, [r5, r2]
90020c2a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
90020c2e:	2800      	cmp	r0, #0
90020c30:	f000 80c0 	beq.w	90020db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
90020c34:	f89a 2001 	ldrb.w	r2, [sl, #1]
90020c38:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90020c3c:	920b      	str	r2, [sp, #44]	; 0x2c
90020c3e:	b151      	cbz	r1, 90020c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90020c40:	eb0a 0203 	add.w	r2, sl, r3
90020c44:	f81a 3003 	ldrb.w	r3, [sl, r3]
90020c48:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020c4c:	9309      	str	r3, [sp, #36]	; 0x24
90020c4e:	7853      	ldrb	r3, [r2, #1]
90020c50:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020c54:	930c      	str	r3, [sp, #48]	; 0x30
90020c56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020c58:	fb10 f201 	smulbb	r2, r0, r1
90020c5c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90020c5e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90020c62:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90020c66:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90020c6a:	10d2      	asrs	r2, r2, #3
90020c6c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90020c70:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90020c74:	ea4c 0c03 	orr.w	ip, ip, r3
90020c78:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020c7a:	041b      	lsls	r3, r3, #16
90020c7c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020c80:	432b      	orrs	r3, r5
90020c82:	4353      	muls	r3, r2
90020c84:	fb0a 330c 	mla	r3, sl, ip, r3
90020c88:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90020c8c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90020c90:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90020c94:	ea4c 0e0e 	orr.w	lr, ip, lr
90020c98:	f1c1 0c10 	rsb	ip, r1, #16
90020c9c:	ebac 0c00 	sub.w	ip, ip, r0
90020ca0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90020ca4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90020ca8:	fb0c 3c0e 	mla	ip, ip, lr, r3
90020cac:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020cae:	0418      	lsls	r0, r3, #16
90020cb0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90020cb4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90020cb8:	4318      	orrs	r0, r3
90020cba:	fb02 c200 	mla	r2, r2, r0, ip
90020cbe:	0d53      	lsrs	r3, r2, #21
90020cc0:	0952      	lsrs	r2, r2, #5
90020cc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020cc6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90020cca:	431a      	orrs	r2, r3
90020ccc:	f8a8 2000 	strh.w	r2, [r8]
90020cd0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020cd2:	f108 0802 	add.w	r8, r8, #2
90020cd6:	f10b 3bff 	add.w	fp, fp, #4294967295
90020cda:	441c      	add	r4, r3
90020cdc:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020cde:	441e      	add	r6, r3
90020ce0:	e77c      	b.n	90020bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020ce2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020ce4:	f109 0902 	add.w	r9, r9, #2
90020ce8:	441c      	add	r4, r3
90020cea:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020cec:	441e      	add	r6, r3
90020cee:	9b06      	ldr	r3, [sp, #24]
90020cf0:	3b01      	subs	r3, #1
90020cf2:	9306      	str	r3, [sp, #24]
90020cf4:	e752      	b.n	90020b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90020cf6:	d020      	beq.n	90020d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90020cf8:	9b06      	ldr	r3, [sp, #24]
90020cfa:	981f      	ldr	r0, [sp, #124]	; 0x7c
90020cfc:	3b01      	subs	r3, #1
90020cfe:	fb00 4003 	mla	r0, r0, r3, r4
90020d02:	1400      	asrs	r0, r0, #16
90020d04:	f53f af67 	bmi.w	90020bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020d08:	3901      	subs	r1, #1
90020d0a:	4288      	cmp	r0, r1
90020d0c:	f6bf af63 	bge.w	90020bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020d10:	9920      	ldr	r1, [sp, #128]	; 0x80
90020d12:	fb01 6303 	mla	r3, r1, r3, r6
90020d16:	141b      	asrs	r3, r3, #16
90020d18:	f53f af5d 	bmi.w	90020bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020d1c:	3a01      	subs	r2, #1
90020d1e:	4293      	cmp	r3, r2
90020d20:	f6bf af59 	bge.w	90020bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020d24:	f8dd 8018 	ldr.w	r8, [sp, #24]
90020d28:	46ca      	mov	sl, r9
90020d2a:	f1b8 0f00 	cmp.w	r8, #0
90020d2e:	dc67      	bgt.n	90020e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90020d30:	9b06      	ldr	r3, [sp, #24]
90020d32:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90020d36:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90020d3a:	9b08      	ldr	r3, [sp, #32]
90020d3c:	2b00      	cmp	r3, #0
90020d3e:	f340 80d7 	ble.w	90020ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90020d42:	ee30 0a04 	vadd.f32	s0, s0, s8
90020d46:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020d48:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020d4c:	eeb0 6a62 	vmov.f32	s12, s5
90020d50:	eec6 7a80 	vdiv.f32	s15, s13, s0
90020d54:	ee31 1a05 	vadd.f32	s2, s2, s10
90020d58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020d5c:	ee16 4a10 	vmov	r4, s12
90020d60:	eeb0 6a43 	vmov.f32	s12, s6
90020d64:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020d68:	ee16 6a10 	vmov	r6, s12
90020d6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020d70:	ee61 7a27 	vmul.f32	s15, s2, s15
90020d74:	ee77 2a62 	vsub.f32	s5, s14, s5
90020d78:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020d7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020d80:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020d84:	ee12 2a90 	vmov	r2, s5
90020d88:	eef0 2a47 	vmov.f32	s5, s14
90020d8c:	fb92 f3f3 	sdiv	r3, r2, r3
90020d90:	ee13 2a10 	vmov	r2, s6
90020d94:	931f      	str	r3, [sp, #124]	; 0x7c
90020d96:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020d98:	eeb0 3a67 	vmov.f32	s6, s15
90020d9c:	fb92 f3f3 	sdiv	r3, r2, r3
90020da0:	9320      	str	r3, [sp, #128]	; 0x80
90020da2:	9b08      	ldr	r3, [sp, #32]
90020da4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90020da6:	3b01      	subs	r3, #1
90020da8:	9308      	str	r3, [sp, #32]
90020daa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020dac:	bf08      	it	eq
90020dae:	4613      	moveq	r3, r2
90020db0:	9306      	str	r3, [sp, #24]
90020db2:	e6e4      	b.n	90020b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90020db4:	2900      	cmp	r1, #0
90020db6:	f43f af4e 	beq.w	90020c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90020dba:	f81a 3003 	ldrb.w	r3, [sl, r3]
90020dbe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020dc2:	9309      	str	r3, [sp, #36]	; 0x24
90020dc4:	e747      	b.n	90020c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90020dc6:	f112 0a01 	adds.w	sl, r2, #1
90020dca:	d481      	bmi.n	90020cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020dcc:	4553      	cmp	r3, sl
90020dce:	f6ff af7f 	blt.w	90020cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020dd2:	f11c 0a01 	adds.w	sl, ip, #1
90020dd6:	f53f af7b 	bmi.w	90020cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020dda:	45d6      	cmp	lr, sl
90020ddc:	f6ff af78 	blt.w	90020cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020de0:	b21b      	sxth	r3, r3
90020de2:	e9cd 2c02 	strd	r2, ip, [sp, #8]
90020de6:	fa0f f28e 	sxth.w	r2, lr
90020dea:	9300      	str	r3, [sp, #0]
90020dec:	463b      	mov	r3, r7
90020dee:	9201      	str	r2, [sp, #4]
90020df0:	9a07      	ldr	r2, [sp, #28]
90020df2:	e9cd 0104 	strd	r0, r1, [sp, #16]
90020df6:	4641      	mov	r1, r8
90020df8:	9810      	ldr	r0, [sp, #64]	; 0x40
90020dfa:	f7ff fe21 	bl	90020a40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90020dfe:	e767      	b.n	90020cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020e00:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020e02:	1422      	asrs	r2, r4, #16
90020e04:	1431      	asrs	r1, r6, #16
90020e06:	9d07      	ldr	r5, [sp, #28]
90020e08:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90020e0c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
90020e10:	f3c6 3003 	ubfx	r0, r6, #12, #4
90020e14:	fb03 2101 	mla	r1, r3, r1, r2
90020e18:	9a07      	ldr	r2, [sp, #28]
90020e1a:	440a      	add	r2, r1
90020e1c:	5c69      	ldrb	r1, [r5, r1]
90020e1e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
90020e22:	f1be 0f00 	cmp.w	lr, #0
90020e26:	d05c      	beq.n	90020ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90020e28:	f892 c001 	ldrb.w	ip, [r2, #1]
90020e2c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
90020e30:	950d      	str	r5, [sp, #52]	; 0x34
90020e32:	b150      	cbz	r0, 90020e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90020e34:	eb02 0c03 	add.w	ip, r2, r3
90020e38:	5cd3      	ldrb	r3, [r2, r3]
90020e3a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020e3e:	930a      	str	r3, [sp, #40]	; 0x28
90020e40:	f89c 3001 	ldrb.w	r3, [ip, #1]
90020e44:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020e48:	930e      	str	r3, [sp, #56]	; 0x38
90020e4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020e4c:	fb1e f200 	smulbb	r2, lr, r0
90020e50:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90020e52:	f108 38ff 	add.w	r8, r8, #4294967295
90020e56:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90020e5a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90020e5e:	10d2      	asrs	r2, r2, #3
90020e60:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
90020e64:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90020e68:	ea4c 0c03 	orr.w	ip, ip, r3
90020e6c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90020e70:	9311      	str	r3, [sp, #68]	; 0x44
90020e72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020e74:	9d11      	ldr	r5, [sp, #68]	; 0x44
90020e76:	041b      	lsls	r3, r3, #16
90020e78:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020e7c:	ea43 030b 	orr.w	r3, r3, fp
90020e80:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90020e84:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90020e88:	4353      	muls	r3, r2
90020e8a:	fb05 3c0c 	mla	ip, r5, ip, r3
90020e8e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
90020e92:	ea43 0b01 	orr.w	fp, r3, r1
90020e96:	f1c0 0110 	rsb	r1, r0, #16
90020e9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020e9c:	eba1 0e0e 	sub.w	lr, r1, lr
90020ea0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90020ea4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90020ea8:	fb0e cc0b 	mla	ip, lr, fp, ip
90020eac:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90020eb0:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
90020eb4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90020eb8:	ea4b 0e0e 	orr.w	lr, fp, lr
90020ebc:	fb02 cc0e 	mla	ip, r2, lr, ip
90020ec0:	ea4f 535c 	mov.w	r3, ip, lsr #21
90020ec4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90020ec8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020ecc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90020ed0:	ea43 0c0c 	orr.w	ip, r3, ip
90020ed4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020ed6:	441c      	add	r4, r3
90020ed8:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020eda:	f82a cb02 	strh.w	ip, [sl], #2
90020ede:	441e      	add	r6, r3
90020ee0:	e723      	b.n	90020d2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90020ee2:	2800      	cmp	r0, #0
90020ee4:	d0b1      	beq.n	90020e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90020ee6:	5cd3      	ldrb	r3, [r2, r3]
90020ee8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020eec:	930a      	str	r3, [sp, #40]	; 0x28
90020eee:	e7ac      	b.n	90020e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90020ef0:	b013      	add	sp, #76	; 0x4c
90020ef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020ef6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
90020ef6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020efa:	880d      	ldrh	r5, [r1, #0]
90020efc:	b087      	sub	sp, #28
90020efe:	10ef      	asrs	r7, r5, #3
90020f00:	9103      	str	r1, [sp, #12]
90020f02:	ea4f 2a25 	mov.w	sl, r5, asr #8
90020f06:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
90020f0a:	00ed      	lsls	r5, r5, #3
90020f0c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90020f10:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
90020f14:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
90020f18:	b2ed      	uxtb	r5, r5
90020f1a:	9701      	str	r7, [sp, #4]
90020f1c:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
90020f20:	9502      	str	r5, [sp, #8]
90020f22:	9d01      	ldr	r5, [sp, #4]
90020f24:	9902      	ldr	r1, [sp, #8]
90020f26:	022d      	lsls	r5, r5, #8
90020f28:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
90020f2c:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
90020f30:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90020f34:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
90020f38:	430d      	orrs	r5, r1
90020f3a:	fb06 0709 	mla	r7, r6, r9, r0
90020f3e:	2e00      	cmp	r6, #0
90020f40:	9505      	str	r5, [sp, #20]
90020f42:	eb02 0c07 	add.w	ip, r2, r7
90020f46:	f2c0 80b6 	blt.w	900210b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90020f4a:	45b3      	cmp	fp, r6
90020f4c:	f340 80b3 	ble.w	900210b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90020f50:	2800      	cmp	r0, #0
90020f52:	f2c0 80ae 	blt.w	900210b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90020f56:	4581      	cmp	r9, r0
90020f58:	f340 80ab 	ble.w	900210b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90020f5c:	5dd7      	ldrb	r7, [r2, r7]
90020f5e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020f62:	441f      	add	r7, r3
90020f64:	1c42      	adds	r2, r0, #1
90020f66:	f100 80a9 	bmi.w	900210bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020f6a:	4591      	cmp	r9, r2
90020f6c:	f340 80a6 	ble.w	900210bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020f70:	2c00      	cmp	r4, #0
90020f72:	f000 80a3 	beq.w	900210bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020f76:	f89c 5001 	ldrb.w	r5, [ip, #1]
90020f7a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90020f7e:	441d      	add	r5, r3
90020f80:	3601      	adds	r6, #1
90020f82:	f100 809f 	bmi.w	900210c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020f86:	45b3      	cmp	fp, r6
90020f88:	f340 809c 	ble.w	900210c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020f8c:	f1be 0f00 	cmp.w	lr, #0
90020f90:	f000 8098 	beq.w	900210c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020f94:	2800      	cmp	r0, #0
90020f96:	f2c0 8093 	blt.w	900210c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90020f9a:	4581      	cmp	r9, r0
90020f9c:	f340 8090 	ble.w	900210c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90020fa0:	f81c 6009 	ldrb.w	r6, [ip, r9]
90020fa4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020fa8:	441e      	add	r6, r3
90020faa:	3001      	adds	r0, #1
90020fac:	f100 808d 	bmi.w	900210ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020fb0:	4581      	cmp	r9, r0
90020fb2:	f340 808a 	ble.w	900210ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020fb6:	2c00      	cmp	r4, #0
90020fb8:	f000 8087 	beq.w	900210ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020fbc:	44e1      	add	r9, ip
90020fbe:	f899 2001 	ldrb.w	r2, [r9, #1]
90020fc2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020fc6:	4413      	add	r3, r2
90020fc8:	b2a4      	uxth	r4, r4
90020fca:	f897 c002 	ldrb.w	ip, [r7, #2]
90020fce:	fa1f fe8e 	uxth.w	lr, lr
90020fd2:	9901      	ldr	r1, [sp, #4]
90020fd4:	fb04 fb0e 	mul.w	fp, r4, lr
90020fd8:	0124      	lsls	r4, r4, #4
90020fda:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90020fde:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
90020fe2:	eba4 040b 	sub.w	r4, r4, fp
90020fe6:	fa1f f08e 	uxth.w	r0, lr
90020fea:	b2a2      	uxth	r2, r4
90020fec:	78ac      	ldrb	r4, [r5, #2]
90020fee:	eba9 0900 	sub.w	r9, r9, r0
90020ff2:	fa1f fe88 	uxth.w	lr, r8
90020ff6:	4354      	muls	r4, r2
90020ff8:	ea6f 0808 	mvn.w	r8, r8
90020ffc:	fa1f f989 	uxth.w	r9, r9
90021000:	fa5f f888 	uxtb.w	r8, r8
90021004:	fb09 440c 	mla	r4, r9, ip, r4
90021008:	f896 c002 	ldrb.w	ip, [r6, #2]
9002100c:	fb1a fa08 	smulbb	sl, sl, r8
90021010:	fb00 440c 	mla	r4, r0, ip, r4
90021014:	f893 c002 	ldrb.w	ip, [r3, #2]
90021018:	fb0b 4c0c 	mla	ip, fp, ip, r4
9002101c:	787c      	ldrb	r4, [r7, #1]
9002101e:	783f      	ldrb	r7, [r7, #0]
90021020:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90021024:	fb0c ac0e 	mla	ip, ip, lr, sl
90021028:	f895 a001 	ldrb.w	sl, [r5, #1]
9002102c:	782d      	ldrb	r5, [r5, #0]
9002102e:	fb02 fa0a 	mul.w	sl, r2, sl
90021032:	fa1f fc8c 	uxth.w	ip, ip
90021036:	436a      	muls	r2, r5
90021038:	7835      	ldrb	r5, [r6, #0]
9002103a:	fb09 aa04 	mla	sl, r9, r4, sl
9002103e:	7874      	ldrb	r4, [r6, #1]
90021040:	fb09 2207 	mla	r2, r9, r7, r2
90021044:	fb00 aa04 	mla	sl, r0, r4, sl
90021048:	785c      	ldrb	r4, [r3, #1]
9002104a:	fb00 2005 	mla	r0, r0, r5, r2
9002104e:	781b      	ldrb	r3, [r3, #0]
90021050:	fb0b a404 	mla	r4, fp, r4, sl
90021054:	fb11 fa08 	smulbb	sl, r1, r8
90021058:	fb0b 0b03 	mla	fp, fp, r3, r0
9002105c:	9b02      	ldr	r3, [sp, #8]
9002105e:	f3c4 2407 	ubfx	r4, r4, #8, #8
90021062:	fb13 f808 	smulbb	r8, r3, r8
90021066:	f3cb 2b07 	ubfx	fp, fp, #8, #8
9002106a:	fb04 a40e 	mla	r4, r4, lr, sl
9002106e:	f10c 0301 	add.w	r3, ip, #1
90021072:	fb0b 8e0e 	mla	lr, fp, lr, r8
90021076:	b2a4      	uxth	r4, r4
90021078:	fa1f fe8e 	uxth.w	lr, lr
9002107c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90021080:	f104 0a01 	add.w	sl, r4, #1
90021084:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
90021088:	f10e 0c01 	add.w	ip, lr, #1
9002108c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90021090:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90021094:	0964      	lsrs	r4, r4, #5
90021096:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002109a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002109e:	ea4c 0c03 	orr.w	ip, ip, r3
900210a2:	9b03      	ldr	r3, [sp, #12]
900210a4:	ea4c 0c04 	orr.w	ip, ip, r4
900210a8:	f8a3 c000 	strh.w	ip, [r3]
900210ac:	b007      	add	sp, #28
900210ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900210b2:	af05      	add	r7, sp, #20
900210b4:	e756      	b.n	90020f64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
900210b6:	ad05      	add	r5, sp, #20
900210b8:	462f      	mov	r7, r5
900210ba:	e761      	b.n	90020f80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900210bc:	ad05      	add	r5, sp, #20
900210be:	e75f      	b.n	90020f80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900210c0:	ae05      	add	r6, sp, #20
900210c2:	e772      	b.n	90020faa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
900210c4:	ab05      	add	r3, sp, #20
900210c6:	461e      	mov	r6, r3
900210c8:	e77e      	b.n	90020fc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
900210ca:	ab05      	add	r3, sp, #20
900210cc:	e77c      	b.n	90020fc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

900210ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900210ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900210d2:	b095      	sub	sp, #84	; 0x54
900210d4:	9212      	str	r2, [sp, #72]	; 0x48
900210d6:	9309      	str	r3, [sp, #36]	; 0x24
900210d8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
900210da:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
900210de:	9013      	str	r0, [sp, #76]	; 0x4c
900210e0:	930f      	str	r3, [sp, #60]	; 0x3c
900210e2:	6850      	ldr	r0, [r2, #4]
900210e4:	910e      	str	r1, [sp, #56]	; 0x38
900210e6:	6812      	ldr	r2, [r2, #0]
900210e8:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
900210ec:	fb00 1303 	mla	r3, r0, r3, r1
900210f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900210f4:	930a      	str	r3, [sp, #40]	; 0x28
900210f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
900210f8:	681b      	ldr	r3, [r3, #0]
900210fa:	930d      	str	r3, [sp, #52]	; 0x34
900210fc:	9b26      	ldr	r3, [sp, #152]	; 0x98
900210fe:	685c      	ldr	r4, [r3, #4]
90021100:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021102:	3404      	adds	r4, #4
90021104:	43db      	mvns	r3, r3
90021106:	b2db      	uxtb	r3, r3
90021108:	930b      	str	r3, [sp, #44]	; 0x2c
9002110a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002110c:	2b00      	cmp	r3, #0
9002110e:	dc03      	bgt.n	90021118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90021110:	9b12      	ldr	r3, [sp, #72]	; 0x48
90021112:	2b00      	cmp	r3, #0
90021114:	f340 8255 	ble.w	900215c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90021118:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002111a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002111e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021122:	1e48      	subs	r0, r1, #1
90021124:	1e55      	subs	r5, r2, #1
90021126:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021128:	2b00      	cmp	r3, #0
9002112a:	f340 80f9 	ble.w	90021320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9002112e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90021130:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021132:	1436      	asrs	r6, r6, #16
90021134:	ea4f 4323 	mov.w	r3, r3, asr #16
90021138:	d406      	bmi.n	90021148 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002113a:	4286      	cmp	r6, r0
9002113c:	da04      	bge.n	90021148 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002113e:	2b00      	cmp	r3, #0
90021140:	db02      	blt.n	90021148 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021142:	42ab      	cmp	r3, r5
90021144:	f2c0 80ed 	blt.w	90021322 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90021148:	3601      	adds	r6, #1
9002114a:	f100 80da 	bmi.w	90021302 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002114e:	42b1      	cmp	r1, r6
90021150:	f2c0 80d7 	blt.w	90021302 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90021154:	3301      	adds	r3, #1
90021156:	f100 80d4 	bmi.w	90021302 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002115a:	429a      	cmp	r2, r3
9002115c:	f2c0 80d1 	blt.w	90021302 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90021160:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021162:	9311      	str	r3, [sp, #68]	; 0x44
90021164:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90021166:	930c      	str	r3, [sp, #48]	; 0x30
90021168:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002116a:	2b00      	cmp	r3, #0
9002116c:	f340 80fa 	ble.w	90021364 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90021170:	9826      	ldr	r0, [sp, #152]	; 0x98
90021172:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021174:	9a20      	ldr	r2, [sp, #128]	; 0x80
90021176:	68c6      	ldr	r6, [r0, #12]
90021178:	141d      	asrs	r5, r3, #16
9002117a:	981f      	ldr	r0, [sp, #124]	; 0x7c
9002117c:	f3c2 3103 	ubfx	r1, r2, #12, #4
90021180:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90021182:	9a26      	ldr	r2, [sp, #152]	; 0x98
90021184:	1400      	asrs	r0, r0, #16
90021186:	f3c3 3303 	ubfx	r3, r3, #12, #4
9002118a:	6892      	ldr	r2, [r2, #8]
9002118c:	f100 813e 	bmi.w	9002140c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90021190:	1e57      	subs	r7, r2, #1
90021192:	42b8      	cmp	r0, r7
90021194:	f280 813a 	bge.w	9002140c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90021198:	2d00      	cmp	r5, #0
9002119a:	f2c0 8137 	blt.w	9002140c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002119e:	1e77      	subs	r7, r6, #1
900211a0:	42bd      	cmp	r5, r7
900211a2:	f280 8133 	bge.w	9002140c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900211a6:	b212      	sxth	r2, r2
900211a8:	fb05 0002 	mla	r0, r5, r2, r0
900211ac:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900211ae:	f815 a000 	ldrb.w	sl, [r5, r0]
900211b2:	182e      	adds	r6, r5, r0
900211b4:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
900211b8:	eb04 050a 	add.w	r5, r4, sl
900211bc:	2b00      	cmp	r3, #0
900211be:	f000 8117 	beq.w	900213f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
900211c2:	f896 c001 	ldrb.w	ip, [r6, #1]
900211c6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900211ca:	44a4      	add	ip, r4
900211cc:	2900      	cmp	r1, #0
900211ce:	f000 8117 	beq.w	90021400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
900211d2:	18b0      	adds	r0, r6, r2
900211d4:	5cb2      	ldrb	r2, [r6, r2]
900211d6:	7840      	ldrb	r0, [r0, #1]
900211d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900211dc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900211e0:	4422      	add	r2, r4
900211e2:	4420      	add	r0, r4
900211e4:	b29b      	uxth	r3, r3
900211e6:	f89c 7002 	ldrb.w	r7, [ip, #2]
900211ea:	b289      	uxth	r1, r1
900211ec:	f895 b002 	ldrb.w	fp, [r5, #2]
900211f0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
900211f2:	fb03 f901 	mul.w	r9, r3, r1
900211f6:	011b      	lsls	r3, r3, #4
900211f8:	f8b6 e000 	ldrh.w	lr, [r6]
900211fc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90021200:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
90021204:	eba3 0309 	sub.w	r3, r3, r9
90021208:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
9002120c:	b289      	uxth	r1, r1
9002120e:	f814 a00a 	ldrb.w	sl, [r4, sl]
90021212:	b29b      	uxth	r3, r3
90021214:	eba8 0801 	sub.w	r8, r8, r1
90021218:	435f      	muls	r7, r3
9002121a:	fa1f f888 	uxth.w	r8, r8
9002121e:	9310      	str	r3, [sp, #64]	; 0x40
90021220:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90021222:	fb08 770b 	mla	r7, r8, fp, r7
90021226:	f892 b002 	ldrb.w	fp, [r2, #2]
9002122a:	fb01 770b 	mla	r7, r1, fp, r7
9002122e:	f890 b002 	ldrb.w	fp, [r0, #2]
90021232:	fb09 770b 	mla	r7, r9, fp, r7
90021236:	ea4f 2b2e 	mov.w	fp, lr, asr #8
9002123a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9002123e:	f3c7 2707 	ubfx	r7, r7, #8, #8
90021242:	fb1b fb03 	smulbb	fp, fp, r3
90021246:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021248:	fb07 b706 	mla	r7, r7, r6, fp
9002124c:	f895 b001 	ldrb.w	fp, [r5, #1]
90021250:	f89c 5001 	ldrb.w	r5, [ip, #1]
90021254:	f89c c000 	ldrb.w	ip, [ip]
90021258:	b2bf      	uxth	r7, r7
9002125a:	435d      	muls	r5, r3
9002125c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002125e:	fb08 550b 	mla	r5, r8, fp, r5
90021262:	f892 b001 	ldrb.w	fp, [r2, #1]
90021266:	fb01 550b 	mla	r5, r1, fp, r5
9002126a:	f890 b001 	ldrb.w	fp, [r0, #1]
9002126e:	fb09 550b 	mla	r5, r9, fp, r5
90021272:	ea4f 0bee 	mov.w	fp, lr, asr #3
90021276:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002127a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9002127e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90021282:	fa5f fe8e 	uxtb.w	lr, lr
90021286:	fb1b fb03 	smulbb	fp, fp, r3
9002128a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9002128c:	fb03 f30c 	mul.w	r3, r3, ip
90021290:	f892 c000 	ldrb.w	ip, [r2]
90021294:	fb05 b506 	mla	r5, r5, r6, fp
90021298:	fb08 330a 	mla	r3, r8, sl, r3
9002129c:	b2ad      	uxth	r5, r5
9002129e:	fb01 330c 	mla	r3, r1, ip, r3
900212a2:	f890 c000 	ldrb.w	ip, [r0]
900212a6:	f105 0b01 	add.w	fp, r5, #1
900212aa:	fb09 3c0c 	mla	ip, r9, ip, r3
900212ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900212b0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
900212b4:	fb1e fe03 	smulbb	lr, lr, r3
900212b8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900212bc:	1c7b      	adds	r3, r7, #1
900212be:	096d      	lsrs	r5, r5, #5
900212c0:	fb0c e606 	mla	r6, ip, r6, lr
900212c4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900212c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900212cc:	b2b6      	uxth	r6, r6
900212ce:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
900212d2:	1c77      	adds	r7, r6, #1
900212d4:	eb07 2716 	add.w	r7, r7, r6, lsr #8
900212d8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900212dc:	431f      	orrs	r7, r3
900212de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900212e0:	433d      	orrs	r5, r7
900212e2:	801d      	strh	r5, [r3, #0]
900212e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900212e6:	9a21      	ldr	r2, [sp, #132]	; 0x84
900212e8:	3302      	adds	r3, #2
900212ea:	930c      	str	r3, [sp, #48]	; 0x30
900212ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900212ee:	4413      	add	r3, r2
900212f0:	9a22      	ldr	r2, [sp, #136]	; 0x88
900212f2:	931f      	str	r3, [sp, #124]	; 0x7c
900212f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900212f6:	4413      	add	r3, r2
900212f8:	9320      	str	r3, [sp, #128]	; 0x80
900212fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
900212fc:	3b01      	subs	r3, #1
900212fe:	9311      	str	r3, [sp, #68]	; 0x44
90021300:	e732      	b.n	90021168 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021302:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90021304:	9e21      	ldr	r6, [sp, #132]	; 0x84
90021306:	4433      	add	r3, r6
90021308:	9e22      	ldr	r6, [sp, #136]	; 0x88
9002130a:	931f      	str	r3, [sp, #124]	; 0x7c
9002130c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002130e:	4433      	add	r3, r6
90021310:	9320      	str	r3, [sp, #128]	; 0x80
90021312:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021314:	3b01      	subs	r3, #1
90021316:	9309      	str	r3, [sp, #36]	; 0x24
90021318:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002131a:	3302      	adds	r3, #2
9002131c:	930a      	str	r3, [sp, #40]	; 0x28
9002131e:	e702      	b.n	90021126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90021320:	d027      	beq.n	90021372 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90021322:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021324:	9821      	ldr	r0, [sp, #132]	; 0x84
90021326:	3b01      	subs	r3, #1
90021328:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9002132a:	fb00 5003 	mla	r0, r0, r3, r5
9002132e:	1400      	asrs	r0, r0, #16
90021330:	f53f af16 	bmi.w	90021160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021334:	3901      	subs	r1, #1
90021336:	4288      	cmp	r0, r1
90021338:	f6bf af12 	bge.w	90021160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002133c:	9922      	ldr	r1, [sp, #136]	; 0x88
9002133e:	9820      	ldr	r0, [sp, #128]	; 0x80
90021340:	fb01 0303 	mla	r3, r1, r3, r0
90021344:	141b      	asrs	r3, r3, #16
90021346:	f53f af0b 	bmi.w	90021160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002134a:	3a01      	subs	r2, #1
9002134c:	4293      	cmp	r3, r2
9002134e:	f6bf af07 	bge.w	90021160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021352:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021354:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
90021358:	9311      	str	r3, [sp, #68]	; 0x44
9002135a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002135c:	930c      	str	r3, [sp, #48]	; 0x30
9002135e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90021360:	2b00      	cmp	r3, #0
90021362:	dc70      	bgt.n	90021446 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90021364:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021366:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90021368:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002136c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021370:	930a      	str	r3, [sp, #40]	; 0x28
90021372:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021374:	2b00      	cmp	r3, #0
90021376:	f340 8124 	ble.w	900215c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9002137a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002137e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021380:	ee30 0a04 	vadd.f32	s0, s0, s8
90021384:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021388:	eef0 6a62 	vmov.f32	s13, s5
9002138c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021390:	ee31 1a05 	vadd.f32	s2, s2, s10
90021394:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021398:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
9002139c:	eef0 6a43 	vmov.f32	s13, s6
900213a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900213a4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
900213a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
900213ac:	ee61 7a27 	vmul.f32	s15, s2, s15
900213b0:	ee77 2a62 	vsub.f32	s5, s14, s5
900213b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
900213b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900213bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900213c0:	ee12 2a90 	vmov	r2, s5
900213c4:	eef0 2a47 	vmov.f32	s5, s14
900213c8:	fb92 f3f3 	sdiv	r3, r2, r3
900213cc:	ee13 2a10 	vmov	r2, s6
900213d0:	9321      	str	r3, [sp, #132]	; 0x84
900213d2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900213d4:	eeb0 3a67 	vmov.f32	s6, s15
900213d8:	fb92 f3f3 	sdiv	r3, r2, r3
900213dc:	9322      	str	r3, [sp, #136]	; 0x88
900213de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900213e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
900213e2:	3b01      	subs	r3, #1
900213e4:	930e      	str	r3, [sp, #56]	; 0x38
900213e6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900213e8:	bf08      	it	eq
900213ea:	4613      	moveq	r3, r2
900213ec:	9309      	str	r3, [sp, #36]	; 0x24
900213ee:	e68c      	b.n	9002110a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900213f0:	b149      	cbz	r1, 90021406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
900213f2:	5cb2      	ldrb	r2, [r6, r2]
900213f4:	4628      	mov	r0, r5
900213f6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900213fa:	4422      	add	r2, r4
900213fc:	46ac      	mov	ip, r5
900213fe:	e6f1      	b.n	900211e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021400:	4628      	mov	r0, r5
90021402:	462a      	mov	r2, r5
90021404:	e6ee      	b.n	900211e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021406:	4628      	mov	r0, r5
90021408:	462a      	mov	r2, r5
9002140a:	e7f7      	b.n	900213fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
9002140c:	1c47      	adds	r7, r0, #1
9002140e:	f53f af69 	bmi.w	900212e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021412:	42ba      	cmp	r2, r7
90021414:	f6ff af66 	blt.w	900212e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021418:	1c6f      	adds	r7, r5, #1
9002141a:	f53f af63 	bmi.w	900212e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002141e:	42be      	cmp	r6, r7
90021420:	f6ff af60 	blt.w	900212e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021424:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90021426:	b236      	sxth	r6, r6
90021428:	b212      	sxth	r2, r2
9002142a:	9002      	str	r0, [sp, #8]
9002142c:	9601      	str	r6, [sp, #4]
9002142e:	9200      	str	r2, [sp, #0]
90021430:	9813      	ldr	r0, [sp, #76]	; 0x4c
90021432:	e9cd 1705 	strd	r1, r7, [sp, #20]
90021436:	e9cd 5303 	strd	r5, r3, [sp, #12]
9002143a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
9002143e:	4623      	mov	r3, r4
90021440:	f7ff fd59 	bl	90020ef6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90021444:	e74e      	b.n	900212e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021446:	9a20      	ldr	r2, [sp, #128]	; 0x80
90021448:	9820      	ldr	r0, [sp, #128]	; 0x80
9002144a:	f3c2 3103 	ubfx	r1, r2, #12, #4
9002144e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
90021450:	9a26      	ldr	r2, [sp, #152]	; 0x98
90021452:	1400      	asrs	r0, r0, #16
90021454:	142d      	asrs	r5, r5, #16
90021456:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90021458:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9002145c:	f3c3 3303 	ubfx	r3, r3, #12, #4
90021460:	fb02 5000 	mla	r0, r2, r0, r5
90021464:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90021466:	f815 9000 	ldrb.w	r9, [r5, r0]
9002146a:	182e      	adds	r6, r5, r0
9002146c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90021470:	eb04 0509 	add.w	r5, r4, r9
90021474:	2b00      	cmp	r3, #0
90021476:	f000 8096 	beq.w	900215a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9002147a:	7877      	ldrb	r7, [r6, #1]
9002147c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90021480:	4427      	add	r7, r4
90021482:	2900      	cmp	r1, #0
90021484:	f000 8097 	beq.w	900215b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90021488:	18b0      	adds	r0, r6, r2
9002148a:	5cb2      	ldrb	r2, [r6, r2]
9002148c:	7840      	ldrb	r0, [r0, #1]
9002148e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021492:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90021496:	4422      	add	r2, r4
90021498:	4420      	add	r0, r4
9002149a:	b29b      	uxth	r3, r3
9002149c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9002149e:	b289      	uxth	r1, r1
900214a0:	f895 b002 	ldrb.w	fp, [r5, #2]
900214a4:	f8b6 c000 	ldrh.w	ip, [r6]
900214a8:	fb03 f801 	mul.w	r8, r3, r1
900214ac:	011b      	lsls	r3, r3, #4
900214ae:	78be      	ldrb	r6, [r7, #2]
900214b0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
900214b4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
900214b8:	eba3 0308 	sub.w	r3, r3, r8
900214bc:	f814 9009 	ldrb.w	r9, [r4, r9]
900214c0:	b289      	uxth	r1, r1
900214c2:	b29b      	uxth	r3, r3
900214c4:	ebae 0e01 	sub.w	lr, lr, r1
900214c8:	435e      	muls	r6, r3
900214ca:	fa1f fe8e 	uxth.w	lr, lr
900214ce:	9310      	str	r3, [sp, #64]	; 0x40
900214d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900214d2:	fb0e 660b 	mla	r6, lr, fp, r6
900214d6:	f892 b002 	ldrb.w	fp, [r2, #2]
900214da:	fb01 660b 	mla	r6, r1, fp, r6
900214de:	f890 b002 	ldrb.w	fp, [r0, #2]
900214e2:	fb08 660b 	mla	r6, r8, fp, r6
900214e6:	ea4f 2b2c 	mov.w	fp, ip, asr #8
900214ea:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
900214ee:	f3c6 2607 	ubfx	r6, r6, #8, #8
900214f2:	fb1b fb03 	smulbb	fp, fp, r3
900214f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
900214f8:	fb06 b60a 	mla	r6, r6, sl, fp
900214fc:	f895 b001 	ldrb.w	fp, [r5, #1]
90021500:	787d      	ldrb	r5, [r7, #1]
90021502:	783f      	ldrb	r7, [r7, #0]
90021504:	b2b6      	uxth	r6, r6
90021506:	435d      	muls	r5, r3
90021508:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002150a:	fb0e 550b 	mla	r5, lr, fp, r5
9002150e:	f892 b001 	ldrb.w	fp, [r2, #1]
90021512:	fb01 550b 	mla	r5, r1, fp, r5
90021516:	f890 b001 	ldrb.w	fp, [r0, #1]
9002151a:	fb08 550b 	mla	r5, r8, fp, r5
9002151e:	ea4f 0bec 	mov.w	fp, ip, asr #3
90021522:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90021526:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9002152a:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002152e:	fa5f fc8c 	uxtb.w	ip, ip
90021532:	fb1b fb03 	smulbb	fp, fp, r3
90021536:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021538:	437b      	muls	r3, r7
9002153a:	7817      	ldrb	r7, [r2, #0]
9002153c:	fb05 b50a 	mla	r5, r5, sl, fp
90021540:	fb0e 3309 	mla	r3, lr, r9, r3
90021544:	b2ad      	uxth	r5, r5
90021546:	fb01 3307 	mla	r3, r1, r7, r3
9002154a:	7807      	ldrb	r7, [r0, #0]
9002154c:	f105 0b01 	add.w	fp, r5, #1
90021550:	fb08 3707 	mla	r7, r8, r7, r3
90021554:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90021556:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9002155a:	fb1c fc03 	smulbb	ip, ip, r3
9002155e:	f3c7 2707 	ubfx	r7, r7, #8, #8
90021562:	1c73      	adds	r3, r6, #1
90021564:	096d      	lsrs	r5, r5, #5
90021566:	fb07 c70a 	mla	r7, r7, sl, ip
9002156a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002156e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021572:	b2bf      	uxth	r7, r7
90021574:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021576:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9002157a:	1c7a      	adds	r2, r7, #1
9002157c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90021580:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021584:	4316      	orrs	r6, r2
90021586:	9a21      	ldr	r2, [sp, #132]	; 0x84
90021588:	432e      	orrs	r6, r5
9002158a:	f823 6b02 	strh.w	r6, [r3], #2
9002158e:	930c      	str	r3, [sp, #48]	; 0x30
90021590:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90021592:	4413      	add	r3, r2
90021594:	9a22      	ldr	r2, [sp, #136]	; 0x88
90021596:	931f      	str	r3, [sp, #124]	; 0x7c
90021598:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002159a:	4413      	add	r3, r2
9002159c:	9320      	str	r3, [sp, #128]	; 0x80
9002159e:	9b11      	ldr	r3, [sp, #68]	; 0x44
900215a0:	3b01      	subs	r3, #1
900215a2:	9311      	str	r3, [sp, #68]	; 0x44
900215a4:	e6db      	b.n	9002135e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
900215a6:	b149      	cbz	r1, 900215bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
900215a8:	5cb2      	ldrb	r2, [r6, r2]
900215aa:	4628      	mov	r0, r5
900215ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900215b0:	4422      	add	r2, r4
900215b2:	462f      	mov	r7, r5
900215b4:	e771      	b.n	9002149a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900215b6:	4628      	mov	r0, r5
900215b8:	462a      	mov	r2, r5
900215ba:	e76e      	b.n	9002149a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900215bc:	4628      	mov	r0, r5
900215be:	462a      	mov	r2, r5
900215c0:	e7f7      	b.n	900215b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900215c2:	b015      	add	sp, #84	; 0x54
900215c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900215c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
900215c8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900215cc:	880f      	ldrh	r7, [r1, #0]
900215ce:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
900215d2:	023c      	lsls	r4, r7, #8
900215d4:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
900215d8:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
900215dc:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
900215e0:	017c      	lsls	r4, r7, #5
900215e2:	00ff      	lsls	r7, r7, #3
900215e4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
900215e8:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
900215ec:	b2ff      	uxtb	r7, r7
900215ee:	ea4b 0404 	orr.w	r4, fp, r4
900215f2:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
900215f6:	4327      	orrs	r7, r4
900215f8:	fb05 ca0e 	mla	sl, r5, lr, ip
900215fc:	2d00      	cmp	r5, #0
900215fe:	9701      	str	r7, [sp, #4]
90021600:	eb02 080a 	add.w	r8, r2, sl
90021604:	db7e      	blt.n	90021704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90021606:	45a9      	cmp	r9, r5
90021608:	dd7c      	ble.n	90021704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9002160a:	f1bc 0f00 	cmp.w	ip, #0
9002160e:	db77      	blt.n	90021700 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90021610:	45e6      	cmp	lr, ip
90021612:	dd75      	ble.n	90021700 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90021614:	f812 700a 	ldrb.w	r7, [r2, sl]
90021618:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9002161c:	441f      	add	r7, r3
9002161e:	f11c 0201 	adds.w	r2, ip, #1
90021622:	d472      	bmi.n	9002170a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90021624:	4596      	cmp	lr, r2
90021626:	dd70      	ble.n	9002170a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90021628:	2800      	cmp	r0, #0
9002162a:	d06e      	beq.n	9002170a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9002162c:	f898 4001 	ldrb.w	r4, [r8, #1]
90021630:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90021634:	441c      	add	r4, r3
90021636:	3501      	adds	r5, #1
90021638:	d46b      	bmi.n	90021712 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9002163a:	45a9      	cmp	r9, r5
9002163c:	dd69      	ble.n	90021712 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9002163e:	2e00      	cmp	r6, #0
90021640:	d067      	beq.n	90021712 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90021642:	f1bc 0f00 	cmp.w	ip, #0
90021646:	db62      	blt.n	9002170e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90021648:	45e6      	cmp	lr, ip
9002164a:	dd60      	ble.n	9002170e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9002164c:	f818 500e 	ldrb.w	r5, [r8, lr]
90021650:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90021654:	441d      	add	r5, r3
90021656:	f11c 0201 	adds.w	r2, ip, #1
9002165a:	d45d      	bmi.n	90021718 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9002165c:	4596      	cmp	lr, r2
9002165e:	dd5b      	ble.n	90021718 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90021660:	2800      	cmp	r0, #0
90021662:	d059      	beq.n	90021718 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90021664:	44c6      	add	lr, r8
90021666:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002166a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002166e:	4413      	add	r3, r2
90021670:	b280      	uxth	r0, r0
90021672:	f897 e002 	ldrb.w	lr, [r7, #2]
90021676:	b2b2      	uxth	r2, r6
90021678:	f897 9000 	ldrb.w	r9, [r7]
9002167c:	787f      	ldrb	r7, [r7, #1]
9002167e:	fb00 f602 	mul.w	r6, r0, r2
90021682:	0100      	lsls	r0, r0, #4
90021684:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90021688:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
9002168c:	1b80      	subs	r0, r0, r6
9002168e:	fa1f fc82 	uxth.w	ip, r2
90021692:	b282      	uxth	r2, r0
90021694:	78a0      	ldrb	r0, [r4, #2]
90021696:	eba8 080c 	sub.w	r8, r8, ip
9002169a:	4350      	muls	r0, r2
9002169c:	fa1f f888 	uxth.w	r8, r8
900216a0:	fb08 0e0e 	mla	lr, r8, lr, r0
900216a4:	78a8      	ldrb	r0, [r5, #2]
900216a6:	fb0c e000 	mla	r0, ip, r0, lr
900216aa:	f893 e002 	ldrb.w	lr, [r3, #2]
900216ae:	fb06 0e0e 	mla	lr, r6, lr, r0
900216b2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
900216b6:	f894 e000 	ldrb.w	lr, [r4]
900216ba:	fb02 fe0e 	mul.w	lr, r2, lr
900216be:	fb08 e909 	mla	r9, r8, r9, lr
900216c2:	f895 e000 	ldrb.w	lr, [r5]
900216c6:	fb0c 990e 	mla	r9, ip, lr, r9
900216ca:	f893 e000 	ldrb.w	lr, [r3]
900216ce:	785b      	ldrb	r3, [r3, #1]
900216d0:	fb06 9e0e 	mla	lr, r6, lr, r9
900216d4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900216d8:	ea4e 0e00 	orr.w	lr, lr, r0
900216dc:	7860      	ldrb	r0, [r4, #1]
900216de:	4350      	muls	r0, r2
900216e0:	786a      	ldrb	r2, [r5, #1]
900216e2:	fb08 0007 	mla	r0, r8, r7, r0
900216e6:	fb0c 0202 	mla	r2, ip, r2, r0
900216ea:	fb06 2303 	mla	r3, r6, r3, r2
900216ee:	095b      	lsrs	r3, r3, #5
900216f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900216f4:	ea4e 0303 	orr.w	r3, lr, r3
900216f8:	800b      	strh	r3, [r1, #0]
900216fa:	b003      	add	sp, #12
900216fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021700:	af01      	add	r7, sp, #4
90021702:	e78c      	b.n	9002161e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90021704:	ac01      	add	r4, sp, #4
90021706:	4627      	mov	r7, r4
90021708:	e795      	b.n	90021636 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9002170a:	ac01      	add	r4, sp, #4
9002170c:	e793      	b.n	90021636 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9002170e:	ad01      	add	r5, sp, #4
90021710:	e7a1      	b.n	90021656 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90021712:	ab01      	add	r3, sp, #4
90021714:	461d      	mov	r5, r3
90021716:	e7ab      	b.n	90021670 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90021718:	ab01      	add	r3, sp, #4
9002171a:	e7a9      	b.n	90021670 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

9002171c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002171c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021720:	b08f      	sub	sp, #60	; 0x3c
90021722:	920c      	str	r2, [sp, #48]	; 0x30
90021724:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90021726:	900d      	str	r0, [sp, #52]	; 0x34
90021728:	910a      	str	r1, [sp, #40]	; 0x28
9002172a:	6850      	ldr	r0, [r2, #4]
9002172c:	9306      	str	r3, [sp, #24]
9002172e:	6812      	ldr	r2, [r2, #0]
90021730:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
90021734:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
90021738:	fb00 1303 	mla	r3, r0, r3, r1
9002173c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021740:	9307      	str	r3, [sp, #28]
90021742:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021744:	681b      	ldr	r3, [r3, #0]
90021746:	9308      	str	r3, [sp, #32]
90021748:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002174a:	685c      	ldr	r4, [r3, #4]
9002174c:	3404      	adds	r4, #4
9002174e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90021750:	2b00      	cmp	r3, #0
90021752:	dc03      	bgt.n	9002175c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90021754:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021756:	2b00      	cmp	r3, #0
90021758:	f340 81d5 	ble.w	90021b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9002175c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002175e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021762:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021766:	1e48      	subs	r0, r1, #1
90021768:	1e56      	subs	r6, r2, #1
9002176a:	9b06      	ldr	r3, [sp, #24]
9002176c:	2b00      	cmp	r3, #0
9002176e:	f340 80b6 	ble.w	900218de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90021772:	ea5f 472b 	movs.w	r7, fp, asr #16
90021776:	ea4f 4325 	mov.w	r3, r5, asr #16
9002177a:	d406      	bmi.n	9002178a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9002177c:	4287      	cmp	r7, r0
9002177e:	da04      	bge.n	9002178a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90021780:	2b00      	cmp	r3, #0
90021782:	db02      	blt.n	9002178a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90021784:	42b3      	cmp	r3, r6
90021786:	f2c0 80ab 	blt.w	900218e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
9002178a:	3701      	adds	r7, #1
9002178c:	f100 809c 	bmi.w	900218c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90021790:	42b9      	cmp	r1, r7
90021792:	f2c0 8099 	blt.w	900218c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90021796:	3301      	adds	r3, #1
90021798:	f100 8096 	bmi.w	900218c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002179c:	429a      	cmp	r2, r3
9002179e:	f2c0 8093 	blt.w	900218c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
900217a2:	9b06      	ldr	r3, [sp, #24]
900217a4:	930b      	str	r3, [sp, #44]	; 0x2c
900217a6:	9b07      	ldr	r3, [sp, #28]
900217a8:	9309      	str	r3, [sp, #36]	; 0x24
900217aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900217ac:	2b00      	cmp	r3, #0
900217ae:	f340 80b4 	ble.w	9002191a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
900217b2:	9820      	ldr	r0, [sp, #128]	; 0x80
900217b4:	142e      	asrs	r6, r5, #16
900217b6:	9a20      	ldr	r2, [sp, #128]	; 0x80
900217b8:	f3cb 3303 	ubfx	r3, fp, #12, #4
900217bc:	68c7      	ldr	r7, [r0, #12]
900217be:	ea5f 402b 	movs.w	r0, fp, asr #16
900217c2:	f3c5 3103 	ubfx	r1, r5, #12, #4
900217c6:	6892      	ldr	r2, [r2, #8]
900217c8:	f100 80fb 	bmi.w	900219c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900217cc:	f102 3cff 	add.w	ip, r2, #4294967295
900217d0:	4560      	cmp	r0, ip
900217d2:	f280 80f6 	bge.w	900219c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900217d6:	2e00      	cmp	r6, #0
900217d8:	f2c0 80f3 	blt.w	900219c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900217dc:	f107 3cff 	add.w	ip, r7, #4294967295
900217e0:	4566      	cmp	r6, ip
900217e2:	f280 80ee 	bge.w	900219c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900217e6:	b212      	sxth	r2, r2
900217e8:	fb06 0002 	mla	r0, r6, r2, r0
900217ec:	9e08      	ldr	r6, [sp, #32]
900217ee:	1837      	adds	r7, r6, r0
900217f0:	5c30      	ldrb	r0, [r6, r0]
900217f2:	eb00 0840 	add.w	r8, r0, r0, lsl #1
900217f6:	eb04 0c08 	add.w	ip, r4, r8
900217fa:	2b00      	cmp	r3, #0
900217fc:	f000 80d3 	beq.w	900219a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90021800:	787e      	ldrb	r6, [r7, #1]
90021802:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90021806:	4426      	add	r6, r4
90021808:	2900      	cmp	r1, #0
9002180a:	f000 80d4 	beq.w	900219b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9002180e:	18b8      	adds	r0, r7, r2
90021810:	5cba      	ldrb	r2, [r7, r2]
90021812:	7840      	ldrb	r0, [r0, #1]
90021814:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021818:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002181c:	4422      	add	r2, r4
9002181e:	4420      	add	r0, r4
90021820:	b29b      	uxth	r3, r3
90021822:	78b7      	ldrb	r7, [r6, #2]
90021824:	b289      	uxth	r1, r1
90021826:	f89c a002 	ldrb.w	sl, [ip, #2]
9002182a:	f89c c001 	ldrb.w	ip, [ip, #1]
9002182e:	fb03 f901 	mul.w	r9, r3, r1
90021832:	011b      	lsls	r3, r3, #4
90021834:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90021838:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9002183c:	eba3 0309 	sub.w	r3, r3, r9
90021840:	b289      	uxth	r1, r1
90021842:	b29b      	uxth	r3, r3
90021844:	ebae 0e01 	sub.w	lr, lr, r1
90021848:	435f      	muls	r7, r3
9002184a:	fa1f fe8e 	uxth.w	lr, lr
9002184e:	fb0e 770a 	mla	r7, lr, sl, r7
90021852:	f892 a002 	ldrb.w	sl, [r2, #2]
90021856:	fb01 770a 	mla	r7, r1, sl, r7
9002185a:	f890 a002 	ldrb.w	sl, [r0, #2]
9002185e:	fb09 7a0a 	mla	sl, r9, sl, r7
90021862:	f814 7008 	ldrb.w	r7, [r4, r8]
90021866:	f896 8000 	ldrb.w	r8, [r6]
9002186a:	7876      	ldrb	r6, [r6, #1]
9002186c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90021870:	fb03 f808 	mul.w	r8, r3, r8
90021874:	4373      	muls	r3, r6
90021876:	fb0e 8807 	mla	r8, lr, r7, r8
9002187a:	7817      	ldrb	r7, [r2, #0]
9002187c:	fb0e 330c 	mla	r3, lr, ip, r3
90021880:	fb01 8807 	mla	r8, r1, r7, r8
90021884:	7807      	ldrb	r7, [r0, #0]
90021886:	fb09 8707 	mla	r7, r9, r7, r8
9002188a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002188e:	ea47 070a 	orr.w	r7, r7, sl
90021892:	f892 a001 	ldrb.w	sl, [r2, #1]
90021896:	fb01 310a 	mla	r1, r1, sl, r3
9002189a:	f890 a001 	ldrb.w	sl, [r0, #1]
9002189e:	9b09      	ldr	r3, [sp, #36]	; 0x24
900218a0:	fb09 1a0a 	mla	sl, r9, sl, r1
900218a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900218a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900218ac:	ea47 070a 	orr.w	r7, r7, sl
900218b0:	801f      	strh	r7, [r3, #0]
900218b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900218b4:	3302      	adds	r3, #2
900218b6:	9309      	str	r3, [sp, #36]	; 0x24
900218b8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900218ba:	449b      	add	fp, r3
900218bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900218be:	441d      	add	r5, r3
900218c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900218c2:	3b01      	subs	r3, #1
900218c4:	930b      	str	r3, [sp, #44]	; 0x2c
900218c6:	e770      	b.n	900217aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900218c8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900218ca:	449b      	add	fp, r3
900218cc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900218ce:	441d      	add	r5, r3
900218d0:	9b06      	ldr	r3, [sp, #24]
900218d2:	3b01      	subs	r3, #1
900218d4:	9306      	str	r3, [sp, #24]
900218d6:	9b07      	ldr	r3, [sp, #28]
900218d8:	3302      	adds	r3, #2
900218da:	9307      	str	r3, [sp, #28]
900218dc:	e745      	b.n	9002176a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
900218de:	d023      	beq.n	90021928 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
900218e0:	9b06      	ldr	r3, [sp, #24]
900218e2:	981b      	ldr	r0, [sp, #108]	; 0x6c
900218e4:	3b01      	subs	r3, #1
900218e6:	fb00 b003 	mla	r0, r0, r3, fp
900218ea:	1400      	asrs	r0, r0, #16
900218ec:	f53f af59 	bmi.w	900217a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900218f0:	3901      	subs	r1, #1
900218f2:	4288      	cmp	r0, r1
900218f4:	f6bf af55 	bge.w	900217a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900218f8:	991c      	ldr	r1, [sp, #112]	; 0x70
900218fa:	fb01 5303 	mla	r3, r1, r3, r5
900218fe:	141b      	asrs	r3, r3, #16
90021900:	f53f af4f 	bmi.w	900217a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90021904:	3a01      	subs	r2, #1
90021906:	4293      	cmp	r3, r2
90021908:	f6bf af4b 	bge.w	900217a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002190c:	9b06      	ldr	r3, [sp, #24]
9002190e:	9309      	str	r3, [sp, #36]	; 0x24
90021910:	9b07      	ldr	r3, [sp, #28]
90021912:	930b      	str	r3, [sp, #44]	; 0x2c
90021914:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021916:	2b00      	cmp	r3, #0
90021918:	dc70      	bgt.n	900219fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
9002191a:	9b06      	ldr	r3, [sp, #24]
9002191c:	9a07      	ldr	r2, [sp, #28]
9002191e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90021922:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021926:	9307      	str	r3, [sp, #28]
90021928:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002192a:	2b00      	cmp	r3, #0
9002192c:	f340 80eb 	ble.w	90021b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90021930:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90021934:	9b18      	ldr	r3, [sp, #96]	; 0x60
90021936:	ee30 0a04 	vadd.f32	s0, s0, s8
9002193a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002193e:	eef0 6a62 	vmov.f32	s13, s5
90021942:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021946:	ee31 1a05 	vadd.f32	s2, s2, s10
9002194a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002194e:	ee16 ba90 	vmov	fp, s13
90021952:	eef0 6a43 	vmov.f32	s13, s6
90021956:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002195a:	ee16 5a90 	vmov	r5, s13
9002195e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021962:	ee61 7a27 	vmul.f32	s15, s2, s15
90021966:	ee77 2a62 	vsub.f32	s5, s14, s5
9002196a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002196e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021972:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021976:	ee12 2a90 	vmov	r2, s5
9002197a:	eef0 2a47 	vmov.f32	s5, s14
9002197e:	fb92 f3f3 	sdiv	r3, r2, r3
90021982:	ee13 2a10 	vmov	r2, s6
90021986:	931b      	str	r3, [sp, #108]	; 0x6c
90021988:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002198a:	eeb0 3a67 	vmov.f32	s6, s15
9002198e:	fb92 f3f3 	sdiv	r3, r2, r3
90021992:	931c      	str	r3, [sp, #112]	; 0x70
90021994:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90021996:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90021998:	3b01      	subs	r3, #1
9002199a:	930a      	str	r3, [sp, #40]	; 0x28
9002199c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002199e:	bf08      	it	eq
900219a0:	4613      	moveq	r3, r2
900219a2:	9306      	str	r3, [sp, #24]
900219a4:	e6d3      	b.n	9002174e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
900219a6:	b149      	cbz	r1, 900219bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
900219a8:	5cba      	ldrb	r2, [r7, r2]
900219aa:	4660      	mov	r0, ip
900219ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900219b0:	4422      	add	r2, r4
900219b2:	4666      	mov	r6, ip
900219b4:	e734      	b.n	90021820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
900219b6:	4660      	mov	r0, ip
900219b8:	4662      	mov	r2, ip
900219ba:	e731      	b.n	90021820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
900219bc:	4660      	mov	r0, ip
900219be:	4662      	mov	r2, ip
900219c0:	e7f7      	b.n	900219b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
900219c2:	f110 0c01 	adds.w	ip, r0, #1
900219c6:	f53f af74 	bmi.w	900218b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900219ca:	4562      	cmp	r2, ip
900219cc:	f6ff af71 	blt.w	900218b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900219d0:	f116 0c01 	adds.w	ip, r6, #1
900219d4:	f53f af6d 	bmi.w	900218b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900219d8:	4567      	cmp	r7, ip
900219da:	f6ff af6a 	blt.w	900218b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900219de:	b23f      	sxth	r7, r7
900219e0:	b212      	sxth	r2, r2
900219e2:	9701      	str	r7, [sp, #4]
900219e4:	9200      	str	r2, [sp, #0]
900219e6:	e9cd 3104 	strd	r3, r1, [sp, #16]
900219ea:	e9cd 0602 	strd	r0, r6, [sp, #8]
900219ee:	4623      	mov	r3, r4
900219f0:	980d      	ldr	r0, [sp, #52]	; 0x34
900219f2:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900219f6:	f7ff fde7 	bl	900215c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
900219fa:	e75a      	b.n	900218b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900219fc:	9a20      	ldr	r2, [sp, #128]	; 0x80
900219fe:	ea4f 462b 	mov.w	r6, fp, asr #16
90021a02:	1428      	asrs	r0, r5, #16
90021a04:	f3cb 3303 	ubfx	r3, fp, #12, #4
90021a08:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90021a0c:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021a10:	fb02 6000 	mla	r0, r2, r0, r6
90021a14:	9e08      	ldr	r6, [sp, #32]
90021a16:	f816 8000 	ldrb.w	r8, [r6, r0]
90021a1a:	1837      	adds	r7, r6, r0
90021a1c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90021a20:	eb04 0c08 	add.w	ip, r4, r8
90021a24:	2b00      	cmp	r3, #0
90021a26:	d060      	beq.n	90021aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90021a28:	787e      	ldrb	r6, [r7, #1]
90021a2a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90021a2e:	4426      	add	r6, r4
90021a30:	2900      	cmp	r1, #0
90021a32:	d062      	beq.n	90021afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90021a34:	18b8      	adds	r0, r7, r2
90021a36:	5cba      	ldrb	r2, [r7, r2]
90021a38:	7840      	ldrb	r0, [r0, #1]
90021a3a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021a3e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90021a42:	4422      	add	r2, r4
90021a44:	4420      	add	r0, r4
90021a46:	b29b      	uxth	r3, r3
90021a48:	78b7      	ldrb	r7, [r6, #2]
90021a4a:	b289      	uxth	r1, r1
90021a4c:	f89c a002 	ldrb.w	sl, [ip, #2]
90021a50:	f89c c001 	ldrb.w	ip, [ip, #1]
90021a54:	fb03 f901 	mul.w	r9, r3, r1
90021a58:	011b      	lsls	r3, r3, #4
90021a5a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90021a5e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90021a62:	eba3 0309 	sub.w	r3, r3, r9
90021a66:	b289      	uxth	r1, r1
90021a68:	b29b      	uxth	r3, r3
90021a6a:	ebae 0e01 	sub.w	lr, lr, r1
90021a6e:	435f      	muls	r7, r3
90021a70:	fa1f fe8e 	uxth.w	lr, lr
90021a74:	fb0e 770a 	mla	r7, lr, sl, r7
90021a78:	f892 a002 	ldrb.w	sl, [r2, #2]
90021a7c:	fb01 770a 	mla	r7, r1, sl, r7
90021a80:	f890 a002 	ldrb.w	sl, [r0, #2]
90021a84:	fb09 7a0a 	mla	sl, r9, sl, r7
90021a88:	f814 7008 	ldrb.w	r7, [r4, r8]
90021a8c:	f896 8000 	ldrb.w	r8, [r6]
90021a90:	7876      	ldrb	r6, [r6, #1]
90021a92:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90021a96:	fb03 f808 	mul.w	r8, r3, r8
90021a9a:	4373      	muls	r3, r6
90021a9c:	7856      	ldrb	r6, [r2, #1]
90021a9e:	fb0e 8807 	mla	r8, lr, r7, r8
90021aa2:	7817      	ldrb	r7, [r2, #0]
90021aa4:	fb0e 330c 	mla	r3, lr, ip, r3
90021aa8:	fb01 8807 	mla	r8, r1, r7, r8
90021aac:	7807      	ldrb	r7, [r0, #0]
90021aae:	fb01 3306 	mla	r3, r1, r6, r3
90021ab2:	fb09 8707 	mla	r7, r9, r7, r8
90021ab6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021aba:	ea47 070a 	orr.w	r7, r7, sl
90021abe:	f890 a001 	ldrb.w	sl, [r0, #1]
90021ac2:	fb09 3a0a 	mla	sl, r9, sl, r3
90021ac6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90021ac8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90021acc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90021ad0:	ea47 070a 	orr.w	r7, r7, sl
90021ad4:	f823 7b02 	strh.w	r7, [r3], #2
90021ad8:	930b      	str	r3, [sp, #44]	; 0x2c
90021ada:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90021adc:	449b      	add	fp, r3
90021ade:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90021ae0:	441d      	add	r5, r3
90021ae2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021ae4:	3b01      	subs	r3, #1
90021ae6:	9309      	str	r3, [sp, #36]	; 0x24
90021ae8:	e714      	b.n	90021914 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90021aea:	b149      	cbz	r1, 90021b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90021aec:	5cba      	ldrb	r2, [r7, r2]
90021aee:	4660      	mov	r0, ip
90021af0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021af4:	4422      	add	r2, r4
90021af6:	4666      	mov	r6, ip
90021af8:	e7a5      	b.n	90021a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90021afa:	4660      	mov	r0, ip
90021afc:	4662      	mov	r2, ip
90021afe:	e7a2      	b.n	90021a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90021b00:	4660      	mov	r0, ip
90021b02:	4662      	mov	r2, ip
90021b04:	e7f7      	b.n	90021af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90021b06:	b00f      	add	sp, #60	; 0x3c
90021b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021b0c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90021b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021b10:	b085      	sub	sp, #20
90021b12:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
90021b16:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
90021b1a:	9102      	str	r1, [sp, #8]
90021b1c:	2c00      	cmp	r4, #0
90021b1e:	fb04 710c 	mla	r1, r4, ip, r7
90021b22:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
90021b26:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
90021b2a:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90021b2e:	eb02 0e01 	add.w	lr, r2, r1
90021b32:	f2c0 8122 	blt.w	90021d7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90021b36:	45a0      	cmp	r8, r4
90021b38:	f340 811f 	ble.w	90021d7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90021b3c:	2f00      	cmp	r7, #0
90021b3e:	f2c0 811a 	blt.w	90021d76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90021b42:	45bc      	cmp	ip, r7
90021b44:	f340 8117 	ble.w	90021d76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90021b48:	5c52      	ldrb	r2, [r2, r1]
90021b4a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90021b4e:	1c7a      	adds	r2, r7, #1
90021b50:	f100 8116 	bmi.w	90021d80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90021b54:	4594      	cmp	ip, r2
90021b56:	f340 8113 	ble.w	90021d80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90021b5a:	2e00      	cmp	r6, #0
90021b5c:	f000 8112 	beq.w	90021d84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90021b60:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021b64:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90021b68:	3401      	adds	r4, #1
90021b6a:	f100 810f 	bmi.w	90021d8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90021b6e:	45a0      	cmp	r8, r4
90021b70:	f340 810c 	ble.w	90021d8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90021b74:	2800      	cmp	r0, #0
90021b76:	f000 810c 	beq.w	90021d92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90021b7a:	2f00      	cmp	r7, #0
90021b7c:	f2c0 8104 	blt.w	90021d88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90021b80:	45bc      	cmp	ip, r7
90021b82:	f340 8101 	ble.w	90021d88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90021b86:	f81e 200c 	ldrb.w	r2, [lr, ip]
90021b8a:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90021b8e:	3701      	adds	r7, #1
90021b90:	f100 8102 	bmi.w	90021d98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90021b94:	45bc      	cmp	ip, r7
90021b96:	f340 80ff 	ble.w	90021d98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90021b9a:	2e00      	cmp	r6, #0
90021b9c:	f000 80fe 	beq.w	90021d9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90021ba0:	44f4      	add	ip, lr
90021ba2:	f89c 2001 	ldrb.w	r2, [ip, #1]
90021ba6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90021baa:	b2b6      	uxth	r6, r6
90021bac:	b280      	uxth	r0, r0
90021bae:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90021bb2:	fb00 fe06 	mul.w	lr, r0, r6
90021bb6:	0136      	lsls	r6, r6, #4
90021bb8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90021bbc:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90021bc0:	eba6 070e 	sub.w	r7, r6, lr
90021bc4:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90021bc8:	ea4f 6914 	mov.w	r9, r4, lsr #24
90021bcc:	b280      	uxth	r0, r0
90021bce:	b2bf      	uxth	r7, r7
90021bd0:	1a1b      	subs	r3, r3, r0
90021bd2:	ea4f 6812 	mov.w	r8, r2, lsr #24
90021bd6:	fb0a f607 	mul.w	r6, sl, r7
90021bda:	b29b      	uxth	r3, r3
90021bdc:	fb0b 6603 	mla	r6, fp, r3, r6
90021be0:	fb00 6609 	mla	r6, r0, r9, r6
90021be4:	fb0e 6608 	mla	r6, lr, r8, r6
90021be8:	f3c6 2607 	ubfx	r6, r6, #8, #8
90021bec:	9600      	str	r6, [sp, #0]
90021bee:	2e00      	cmp	r6, #0
90021bf0:	f000 80be 	beq.w	90021d70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
90021bf4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90021bf8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90021bfc:	9e02      	ldr	r6, [sp, #8]
90021bfe:	fb0b fc0c 	mul.w	ip, fp, ip
90021c02:	fb0b f505 	mul.w	r5, fp, r5
90021c06:	8836      	ldrh	r6, [r6, #0]
90021c08:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90021c0c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90021c10:	9501      	str	r5, [sp, #4]
90021c12:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90021c16:	44dc      	add	ip, fp
90021c18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021c1c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90021c20:	9503      	str	r5, [sp, #12]
90021c22:	9d01      	ldr	r5, [sp, #4]
90021c24:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90021c28:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90021c2c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90021c30:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90021c34:	fb0a fc0c 	mul.w	ip, sl, ip
90021c38:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90021c3c:	fb0a fa01 	mul.w	sl, sl, r1
90021c40:	ea4f 251c 	mov.w	r5, ip, lsr #8
90021c44:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90021c48:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90021c4c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90021c50:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90021c54:	4465      	add	r5, ip
90021c56:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90021c5a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90021c5e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021c62:	fb09 fc0c 	mul.w	ip, r9, ip
90021c66:	0a2d      	lsrs	r5, r5, #8
90021c68:	fb09 f904 	mul.w	r9, r9, r4
90021c6c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021c70:	ea4f 211c 	mov.w	r1, ip, lsr #8
90021c74:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90021c78:	f509 7480 	add.w	r4, r9, #256	; 0x100
90021c7c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90021c80:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90021c84:	437d      	muls	r5, r7
90021c86:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90021c8a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90021c8e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90021c92:	4461      	add	r1, ip
90021c94:	fb08 f404 	mul.w	r4, r8, r4
90021c98:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021c9c:	fb08 f802 	mul.w	r8, r8, r2
90021ca0:	0a09      	lsrs	r1, r1, #8
90021ca2:	0a22      	lsrs	r2, r4, #8
90021ca4:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90021ca8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90021cac:	fb07 f70a 	mul.w	r7, r7, sl
90021cb0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90021cb4:	4414      	add	r4, r2
90021cb6:	f508 7280 	add.w	r2, r8, #256	; 0x100
90021cba:	0a24      	lsrs	r4, r4, #8
90021cbc:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90021cc0:	9a03      	ldr	r2, [sp, #12]
90021cc2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90021cc6:	fb02 5503 	mla	r5, r2, r3, r5
90021cca:	ea4f 2818 	mov.w	r8, r8, lsr #8
90021cce:	9a00      	ldr	r2, [sp, #0]
90021cd0:	fb04 540e 	mla	r4, r4, lr, r5
90021cd4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90021cd8:	1235      	asrs	r5, r6, #8
90021cda:	fb01 4100 	mla	r1, r1, r0, r4
90021cde:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90021ce2:	0a09      	lsrs	r1, r1, #8
90021ce4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90021ce8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90021cec:	fb03 7101 	mla	r1, r3, r1, r7
90021cf0:	fb0e 1e08 	mla	lr, lr, r8, r1
90021cf4:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90021cf8:	fb00 e101 	mla	r1, r0, r1, lr
90021cfc:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
90021d00:	b287      	uxth	r7, r0
90021d02:	0a09      	lsrs	r1, r1, #8
90021d04:	437a      	muls	r2, r7
90021d06:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90021d0a:	1c53      	adds	r3, r2, #1
90021d0c:	4321      	orrs	r1, r4
90021d0e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021d12:	0c0a      	lsrs	r2, r1, #16
90021d14:	f3c1 2407 	ubfx	r4, r1, #8, #8
90021d18:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90021d1c:	b2c8      	uxtb	r0, r1
90021d1e:	fb12 f207 	smulbb	r2, r2, r7
90021d22:	fb14 f407 	smulbb	r4, r4, r7
90021d26:	b2db      	uxtb	r3, r3
90021d28:	fb10 f007 	smulbb	r0, r0, r7
90021d2c:	fb05 2503 	mla	r5, r5, r3, r2
90021d30:	10f2      	asrs	r2, r6, #3
90021d32:	00f6      	lsls	r6, r6, #3
90021d34:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90021d38:	b2ad      	uxth	r5, r5
90021d3a:	b2f6      	uxtb	r6, r6
90021d3c:	fb02 4203 	mla	r2, r2, r3, r4
90021d40:	fb06 0303 	mla	r3, r6, r3, r0
90021d44:	b294      	uxth	r4, r2
90021d46:	b299      	uxth	r1, r3
90021d48:	1c6b      	adds	r3, r5, #1
90021d4a:	1c62      	adds	r2, r4, #1
90021d4c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021d50:	1c4b      	adds	r3, r1, #1
90021d52:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90021d56:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90021d5a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90021d5e:	0952      	lsrs	r2, r2, #5
90021d60:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021d64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021d68:	432b      	orrs	r3, r5
90021d6a:	4313      	orrs	r3, r2
90021d6c:	9a02      	ldr	r2, [sp, #8]
90021d6e:	8013      	strh	r3, [r2, #0]
90021d70:	b005      	add	sp, #20
90021d72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021d76:	2500      	movs	r5, #0
90021d78:	e6e9      	b.n	90021b4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90021d7a:	2100      	movs	r1, #0
90021d7c:	460d      	mov	r5, r1
90021d7e:	e6f3      	b.n	90021b68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021d80:	2100      	movs	r1, #0
90021d82:	e6f1      	b.n	90021b68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021d84:	4631      	mov	r1, r6
90021d86:	e6ef      	b.n	90021b68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021d88:	2400      	movs	r4, #0
90021d8a:	e700      	b.n	90021b8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90021d8c:	2200      	movs	r2, #0
90021d8e:	4614      	mov	r4, r2
90021d90:	e70b      	b.n	90021baa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021d92:	4602      	mov	r2, r0
90021d94:	4604      	mov	r4, r0
90021d96:	e708      	b.n	90021baa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021d98:	2200      	movs	r2, #0
90021d9a:	e706      	b.n	90021baa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021d9c:	4632      	mov	r2, r6
90021d9e:	e704      	b.n	90021baa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90021da0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021da4:	b09f      	sub	sp, #124	; 0x7c
90021da6:	921b      	str	r2, [sp, #108]	; 0x6c
90021da8:	9309      	str	r3, [sp, #36]	; 0x24
90021daa:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90021dac:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
90021db0:	901d      	str	r0, [sp, #116]	; 0x74
90021db2:	931c      	str	r3, [sp, #112]	; 0x70
90021db4:	6850      	ldr	r0, [r2, #4]
90021db6:	9119      	str	r1, [sp, #100]	; 0x64
90021db8:	6812      	ldr	r2, [r2, #0]
90021dba:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90021dbc:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
90021dc0:	fb00 1303 	mla	r3, r0, r3, r1
90021dc4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021dc8:	930c      	str	r3, [sp, #48]	; 0x30
90021dca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90021dcc:	681b      	ldr	r3, [r3, #0]
90021dce:	9312      	str	r3, [sp, #72]	; 0x48
90021dd0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90021dd2:	685e      	ldr	r6, [r3, #4]
90021dd4:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
90021dd8:	3604      	adds	r6, #4
90021dda:	930d      	str	r3, [sp, #52]	; 0x34
90021ddc:	9b19      	ldr	r3, [sp, #100]	; 0x64
90021dde:	2b00      	cmp	r3, #0
90021de0:	dc03      	bgt.n	90021dea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90021de2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90021de4:	2b00      	cmp	r3, #0
90021de6:	f340 8387 	ble.w	900224f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90021dea:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90021dec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021df0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021df4:	1e48      	subs	r0, r1, #1
90021df6:	1e57      	subs	r7, r2, #1
90021df8:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021dfa:	2b00      	cmp	r3, #0
90021dfc:	f340 8194 	ble.w	90022128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90021e00:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90021e02:	142b      	asrs	r3, r5, #16
90021e04:	ea5f 4c24 	movs.w	ip, r4, asr #16
90021e08:	d406      	bmi.n	90021e18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90021e0a:	4584      	cmp	ip, r0
90021e0c:	da04      	bge.n	90021e18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90021e0e:	2b00      	cmp	r3, #0
90021e10:	db02      	blt.n	90021e18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90021e12:	42bb      	cmp	r3, r7
90021e14:	f2c0 8189 	blt.w	9002212a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021e18:	f11c 0c01 	adds.w	ip, ip, #1
90021e1c:	f100 8177 	bmi.w	9002210e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90021e20:	4561      	cmp	r1, ip
90021e22:	f2c0 8174 	blt.w	9002210e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90021e26:	3301      	adds	r3, #1
90021e28:	f100 8171 	bmi.w	9002210e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90021e2c:	429a      	cmp	r2, r3
90021e2e:	f2c0 816e 	blt.w	9002210e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90021e32:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021e34:	9f0c      	ldr	r7, [sp, #48]	; 0x30
90021e36:	931a      	str	r3, [sp, #104]	; 0x68
90021e38:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90021e3a:	2b00      	cmp	r3, #0
90021e3c:	f340 8193 	ble.w	90022166 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90021e40:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90021e42:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021e46:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021e4a:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021e4e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90021e50:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90021e54:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90021e56:	141b      	asrs	r3, r3, #16
90021e58:	f100 81d6 	bmi.w	90022208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021e5c:	f100 38ff 	add.w	r8, r0, #4294967295
90021e60:	4543      	cmp	r3, r8
90021e62:	f280 81d1 	bge.w	90022208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021e66:	f1bc 0f00 	cmp.w	ip, #0
90021e6a:	f2c0 81cd 	blt.w	90022208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021e6e:	f10e 38ff 	add.w	r8, lr, #4294967295
90021e72:	45c4      	cmp	ip, r8
90021e74:	f280 81c8 	bge.w	90022208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021e78:	b200      	sxth	r0, r0
90021e7a:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021e7c:	fb0c 3300 	mla	r3, ip, r0, r3
90021e80:	eb04 0803 	add.w	r8, r4, r3
90021e84:	5ce3      	ldrb	r3, [r4, r3]
90021e86:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021e8a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90021e8e:	2a00      	cmp	r2, #0
90021e90:	f000 81af 	beq.w	900221f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021e94:	f898 c001 	ldrb.w	ip, [r8, #1]
90021e98:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90021e9c:	940e      	str	r4, [sp, #56]	; 0x38
90021e9e:	0e24      	lsrs	r4, r4, #24
90021ea0:	9415      	str	r4, [sp, #84]	; 0x54
90021ea2:	b179      	cbz	r1, 90021ec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021ea4:	eb08 0c00 	add.w	ip, r8, r0
90021ea8:	f818 0000 	ldrb.w	r0, [r8, r0]
90021eac:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90021eb0:	900a      	str	r0, [sp, #40]	; 0x28
90021eb2:	0e00      	lsrs	r0, r0, #24
90021eb4:	9013      	str	r0, [sp, #76]	; 0x4c
90021eb6:	f89c 0001 	ldrb.w	r0, [ip, #1]
90021eba:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90021ebe:	900f      	str	r0, [sp, #60]	; 0x3c
90021ec0:	0e00      	lsrs	r0, r0, #24
90021ec2:	9016      	str	r0, [sp, #88]	; 0x58
90021ec4:	b292      	uxth	r2, r2
90021ec6:	9815      	ldr	r0, [sp, #84]	; 0x54
90021ec8:	b289      	uxth	r1, r1
90021eca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021ecc:	fb02 f901 	mul.w	r9, r2, r1
90021ed0:	0112      	lsls	r2, r2, #4
90021ed2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90021ed6:	eba2 0809 	sub.w	r8, r2, r9
90021eda:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90021ede:	b289      	uxth	r1, r1
90021ee0:	fa1f f888 	uxth.w	r8, r8
90021ee4:	1a52      	subs	r2, r2, r1
90021ee6:	fb08 f000 	mul.w	r0, r8, r0
90021eea:	b292      	uxth	r2, r2
90021eec:	fb02 000e 	mla	r0, r2, lr, r0
90021ef0:	fb01 0004 	mla	r0, r1, r4, r0
90021ef4:	9c16      	ldr	r4, [sp, #88]	; 0x58
90021ef6:	fb09 0004 	mla	r0, r9, r4, r0
90021efa:	f3c0 2007 	ubfx	r0, r0, #8, #8
90021efe:	2800      	cmp	r0, #0
90021f00:	f000 80fa 	beq.w	900220f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021f04:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90021f08:	d01b      	beq.n	90021f42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90021f0a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90021f0e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90021f12:	fb0e fa0a 	mul.w	sl, lr, sl
90021f16:	fb0e fe03 	mul.w	lr, lr, r3
90021f1a:	ea4f 231a 	mov.w	r3, sl, lsr #8
90021f1e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90021f22:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90021f26:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021f2a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90021f2e:	4453      	add	r3, sl
90021f30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021f34:	0a1b      	lsrs	r3, r3, #8
90021f36:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90021f3a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021f3e:	ea43 030c 	orr.w	r3, r3, ip
90021f42:	9c15      	ldr	r4, [sp, #84]	; 0x54
90021f44:	2cff      	cmp	r4, #255	; 0xff
90021f46:	d021      	beq.n	90021f8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90021f48:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021f4a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021f4e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90021f50:	fb04 fb0b 	mul.w	fp, r4, fp
90021f54:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021f56:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021f5a:	9c15      	ldr	r4, [sp, #84]	; 0x54
90021f5c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021f60:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021f64:	fb04 fa0a 	mul.w	sl, r4, sl
90021f68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021f6c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90021f70:	44de      	add	lr, fp
90021f72:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021f76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021f7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021f7e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021f82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021f86:	ea4e 040a 	orr.w	r4, lr, sl
90021f8a:	940e      	str	r4, [sp, #56]	; 0x38
90021f8c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021f8e:	2cff      	cmp	r4, #255	; 0xff
90021f90:	d021      	beq.n	90021fd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90021f92:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021f94:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021f98:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021f9a:	fb04 fb0b 	mul.w	fp, r4, fp
90021f9e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021fa0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021fa4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021fa6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021faa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021fae:	fb04 fa0a 	mul.w	sl, r4, sl
90021fb2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021fb6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90021fba:	44de      	add	lr, fp
90021fbc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021fc0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021fc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021fc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021fcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021fd0:	ea4e 040a 	orr.w	r4, lr, sl
90021fd4:	940a      	str	r4, [sp, #40]	; 0x28
90021fd6:	9c16      	ldr	r4, [sp, #88]	; 0x58
90021fd8:	2cff      	cmp	r4, #255	; 0xff
90021fda:	d021      	beq.n	90022020 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90021fdc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90021fde:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021fe2:	9c16      	ldr	r4, [sp, #88]	; 0x58
90021fe4:	fb04 fb0b 	mul.w	fp, r4, fp
90021fe8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90021fea:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021fee:	9c16      	ldr	r4, [sp, #88]	; 0x58
90021ff0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021ff4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021ff8:	fb04 fa0a 	mul.w	sl, r4, sl
90021ffc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90022000:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90022004:	44de      	add	lr, fp
90022006:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002200a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002200e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022012:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90022016:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002201a:	ea4e 040a 	orr.w	r4, lr, sl
9002201e:	940f      	str	r4, [sp, #60]	; 0x3c
90022020:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022022:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90022026:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002202a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002202e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90022030:	fb08 fc0c 	mul.w	ip, r8, ip
90022034:	fb02 cc0e 	mla	ip, r2, lr, ip
90022038:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9002203c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002203e:	fb01 cc0e 	mla	ip, r1, lr, ip
90022042:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90022046:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022048:	fb09 cc0e 	mla	ip, r9, lr, ip
9002204c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90022050:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022052:	fb08 f80e 	mul.w	r8, r8, lr
90022056:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002205a:	fb02 8303 	mla	r3, r2, r3, r8
9002205e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90022060:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022064:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90022068:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002206a:	fb01 330a 	mla	r3, r1, sl, r3
9002206e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
90022072:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90022074:	fb09 3901 	mla	r9, r9, r1, r3
90022078:	883b      	ldrh	r3, [r7, #0]
9002207a:	4342      	muls	r2, r0
9002207c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022080:	1c50      	adds	r0, r2, #1
90022082:	1219      	asrs	r1, r3, #8
90022084:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90022088:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9002208c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90022090:	ea4c 0c09 	orr.w	ip, ip, r9
90022094:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90022098:	ea4f 421c 	mov.w	r2, ip, lsr #16
9002209c:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900220a0:	b2c0      	uxtb	r0, r0
900220a2:	fb12 f204 	smulbb	r2, r2, r4
900220a6:	fa5f fc8c 	uxtb.w	ip, ip
900220aa:	fb1e fe04 	smulbb	lr, lr, r4
900220ae:	fb01 2100 	mla	r1, r1, r0, r2
900220b2:	10da      	asrs	r2, r3, #3
900220b4:	fb1c fc04 	smulbb	ip, ip, r4
900220b8:	00db      	lsls	r3, r3, #3
900220ba:	b289      	uxth	r1, r1
900220bc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900220c0:	b2db      	uxtb	r3, r3
900220c2:	fb02 e200 	mla	r2, r2, r0, lr
900220c6:	fb03 c300 	mla	r3, r3, r0, ip
900220ca:	b292      	uxth	r2, r2
900220cc:	fa1f fc83 	uxth.w	ip, r3
900220d0:	1c4b      	adds	r3, r1, #1
900220d2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900220d6:	f10c 0301 	add.w	r3, ip, #1
900220da:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900220de:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900220e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900220e6:	430b      	orrs	r3, r1
900220e8:	1c51      	adds	r1, r2, #1
900220ea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900220ee:	0952      	lsrs	r2, r2, #5
900220f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900220f4:	4313      	orrs	r3, r2
900220f6:	803b      	strh	r3, [r7, #0]
900220f8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900220fa:	3702      	adds	r7, #2
900220fc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900220fe:	441a      	add	r2, r3
90022100:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90022102:	441d      	add	r5, r3
90022104:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90022106:	9229      	str	r2, [sp, #164]	; 0xa4
90022108:	3b01      	subs	r3, #1
9002210a:	931a      	str	r3, [sp, #104]	; 0x68
9002210c:	e694      	b.n	90021e38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9002210e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90022110:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90022112:	441c      	add	r4, r3
90022114:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90022116:	441d      	add	r5, r3
90022118:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002211a:	9429      	str	r4, [sp, #164]	; 0xa4
9002211c:	3b01      	subs	r3, #1
9002211e:	9309      	str	r3, [sp, #36]	; 0x24
90022120:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022122:	3302      	adds	r3, #2
90022124:	930c      	str	r3, [sp, #48]	; 0x30
90022126:	e667      	b.n	90021df8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022128:	d024      	beq.n	90022174 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
9002212a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002212c:	982b      	ldr	r0, [sp, #172]	; 0xac
9002212e:	3b01      	subs	r3, #1
90022130:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90022132:	fb00 4003 	mla	r0, r0, r3, r4
90022136:	1400      	asrs	r0, r0, #16
90022138:	f53f ae7b 	bmi.w	90021e32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002213c:	3901      	subs	r1, #1
9002213e:	4288      	cmp	r0, r1
90022140:	f6bf ae77 	bge.w	90021e32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022144:	992c      	ldr	r1, [sp, #176]	; 0xb0
90022146:	fb01 5303 	mla	r3, r1, r3, r5
9002214a:	141b      	asrs	r3, r3, #16
9002214c:	f53f ae71 	bmi.w	90021e32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022150:	3a01      	subs	r2, #1
90022152:	4293      	cmp	r3, r2
90022154:	f6bf ae6d 	bge.w	90021e32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022158:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9002215c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
90022160:	f1bb 0f00 	cmp.w	fp, #0
90022164:	dc70      	bgt.n	90022248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90022166:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022168:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002216c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002216e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90022172:	930c      	str	r3, [sp, #48]	; 0x30
90022174:	9b19      	ldr	r3, [sp, #100]	; 0x64
90022176:	2b00      	cmp	r3, #0
90022178:	f340 81be 	ble.w	900224f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9002217c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022180:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022182:	ee30 0a04 	vadd.f32	s0, s0, s8
90022186:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002218a:	eef0 6a62 	vmov.f32	s13, s5
9002218e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022192:	ee31 1a05 	vadd.f32	s2, s2, s10
90022196:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002219a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
9002219e:	eef0 6a43 	vmov.f32	s13, s6
900221a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900221a6:	ee16 5a90 	vmov	r5, s13
900221aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
900221ae:	ee61 7a27 	vmul.f32	s15, s2, s15
900221b2:	ee77 2a62 	vsub.f32	s5, s14, s5
900221b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900221ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900221be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900221c2:	ee12 2a90 	vmov	r2, s5
900221c6:	eef0 2a47 	vmov.f32	s5, s14
900221ca:	fb92 f3f3 	sdiv	r3, r2, r3
900221ce:	ee13 2a10 	vmov	r2, s6
900221d2:	932b      	str	r3, [sp, #172]	; 0xac
900221d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900221d6:	eeb0 3a67 	vmov.f32	s6, s15
900221da:	fb92 f3f3 	sdiv	r3, r2, r3
900221de:	932c      	str	r3, [sp, #176]	; 0xb0
900221e0:	9b19      	ldr	r3, [sp, #100]	; 0x64
900221e2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
900221e4:	3b01      	subs	r3, #1
900221e6:	9319      	str	r3, [sp, #100]	; 0x64
900221e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900221ea:	bf08      	it	eq
900221ec:	4613      	moveq	r3, r2
900221ee:	9309      	str	r3, [sp, #36]	; 0x24
900221f0:	e5f4      	b.n	90021ddc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900221f2:	2900      	cmp	r1, #0
900221f4:	f43f ae66 	beq.w	90021ec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900221f8:	f818 0000 	ldrb.w	r0, [r8, r0]
900221fc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90022200:	900a      	str	r0, [sp, #40]	; 0x28
90022202:	0e00      	lsrs	r0, r0, #24
90022204:	9013      	str	r0, [sp, #76]	; 0x4c
90022206:	e65d      	b.n	90021ec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90022208:	f113 0801 	adds.w	r8, r3, #1
9002220c:	f53f af74 	bmi.w	900220f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022210:	4540      	cmp	r0, r8
90022212:	f6ff af71 	blt.w	900220f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022216:	f11c 0801 	adds.w	r8, ip, #1
9002221a:	f53f af6d 	bmi.w	900220f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002221e:	45c6      	cmp	lr, r8
90022220:	f6ff af6a 	blt.w	900220f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022224:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90022226:	b200      	sxth	r0, r0
90022228:	9302      	str	r3, [sp, #8]
9002222a:	fa0f f38e 	sxth.w	r3, lr
9002222e:	9000      	str	r0, [sp, #0]
90022230:	9301      	str	r3, [sp, #4]
90022232:	4633      	mov	r3, r6
90022234:	981d      	ldr	r0, [sp, #116]	; 0x74
90022236:	e9cd 1405 	strd	r1, r4, [sp, #20]
9002223a:	e9cd c203 	strd	ip, r2, [sp, #12]
9002223e:	4639      	mov	r1, r7
90022240:	9a12      	ldr	r2, [sp, #72]	; 0x48
90022242:	f7ff fc63 	bl	90021b0c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90022246:	e757      	b.n	900220f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022248:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002224a:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002224e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90022250:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022254:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90022256:	1427      	asrs	r7, r4, #16
90022258:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002225a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002225e:	142b      	asrs	r3, r5, #16
90022260:	fb01 7303 	mla	r3, r1, r3, r7
90022264:	18e7      	adds	r7, r4, r3
90022266:	5ce3      	ldrb	r3, [r4, r3]
90022268:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002226c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90022270:	2a00      	cmp	r2, #0
90022272:	f000 8137 	beq.w	900224e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90022276:	f897 e001 	ldrb.w	lr, [r7, #1]
9002227a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002227e:	9410      	str	r4, [sp, #64]	; 0x40
90022280:	0e24      	lsrs	r4, r4, #24
90022282:	9417      	str	r4, [sp, #92]	; 0x5c
90022284:	b170      	cbz	r0, 900222a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90022286:	eb07 0e01 	add.w	lr, r7, r1
9002228a:	5c79      	ldrb	r1, [r7, r1]
9002228c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022290:	910b      	str	r1, [sp, #44]	; 0x2c
90022292:	0e09      	lsrs	r1, r1, #24
90022294:	9114      	str	r1, [sp, #80]	; 0x50
90022296:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002229a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002229e:	9111      	str	r1, [sp, #68]	; 0x44
900222a0:	0e09      	lsrs	r1, r1, #24
900222a2:	9118      	str	r1, [sp, #96]	; 0x60
900222a4:	b292      	uxth	r2, r2
900222a6:	9917      	ldr	r1, [sp, #92]	; 0x5c
900222a8:	b280      	uxth	r0, r0
900222aa:	9c14      	ldr	r4, [sp, #80]	; 0x50
900222ac:	fb02 f800 	mul.w	r8, r2, r0
900222b0:	0112      	lsls	r2, r2, #4
900222b2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900222b6:	eba2 0e08 	sub.w	lr, r2, r8
900222ba:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900222be:	b280      	uxth	r0, r0
900222c0:	fa1f fe8e 	uxth.w	lr, lr
900222c4:	1a12      	subs	r2, r2, r0
900222c6:	fb0e f101 	mul.w	r1, lr, r1
900222ca:	b292      	uxth	r2, r2
900222cc:	fb02 110c 	mla	r1, r2, ip, r1
900222d0:	fb00 1104 	mla	r1, r0, r4, r1
900222d4:	9c18      	ldr	r4, [sp, #96]	; 0x60
900222d6:	fb08 1104 	mla	r1, r8, r4, r1
900222da:	f3c1 2107 	ubfx	r1, r1, #8, #8
900222de:	2900      	cmp	r1, #0
900222e0:	f000 80f5 	beq.w	900224ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
900222e4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
900222e8:	d019      	beq.n	9002231e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
900222ea:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900222ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900222f2:	fb0c fa0a 	mul.w	sl, ip, sl
900222f6:	fb0c fc03 	mul.w	ip, ip, r3
900222fa:	ea4f 231a 	mov.w	r3, sl, lsr #8
900222fe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90022302:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90022306:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002230a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002230e:	4453      	add	r3, sl
90022310:	0a3f      	lsrs	r7, r7, #8
90022312:	0a1b      	lsrs	r3, r3, #8
90022314:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90022318:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002231c:	433b      	orrs	r3, r7
9002231e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90022320:	2cff      	cmp	r4, #255	; 0xff
90022322:	d020      	beq.n	90022366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90022324:	9c10      	ldr	r4, [sp, #64]	; 0x40
90022326:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002232a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002232c:	4367      	muls	r7, r4
9002232e:	9c10      	ldr	r4, [sp, #64]	; 0x40
90022330:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022334:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90022338:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002233a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002233e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022342:	fb04 fa0a 	mul.w	sl, r4, sl
90022346:	44bc      	add	ip, r7
90022348:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002234c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022350:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022354:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022358:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002235c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022360:	ea4c 040a 	orr.w	r4, ip, sl
90022364:	9410      	str	r4, [sp, #64]	; 0x40
90022366:	9c14      	ldr	r4, [sp, #80]	; 0x50
90022368:	2cff      	cmp	r4, #255	; 0xff
9002236a:	d020      	beq.n	900223ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
9002236c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002236e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90022372:	9c14      	ldr	r4, [sp, #80]	; 0x50
90022374:	4367      	muls	r7, r4
90022376:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022378:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002237c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90022380:	9c14      	ldr	r4, [sp, #80]	; 0x50
90022382:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90022386:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002238a:	fb04 fa0a 	mul.w	sl, r4, sl
9002238e:	44bc      	add	ip, r7
90022390:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022394:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022398:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002239c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900223a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900223a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900223a8:	ea4c 040a 	orr.w	r4, ip, sl
900223ac:	940b      	str	r4, [sp, #44]	; 0x2c
900223ae:	9c18      	ldr	r4, [sp, #96]	; 0x60
900223b0:	2cff      	cmp	r4, #255	; 0xff
900223b2:	d020      	beq.n	900223f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
900223b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
900223b6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900223ba:	9c18      	ldr	r4, [sp, #96]	; 0x60
900223bc:	4367      	muls	r7, r4
900223be:	9c11      	ldr	r4, [sp, #68]	; 0x44
900223c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900223c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900223c8:	9c18      	ldr	r4, [sp, #96]	; 0x60
900223ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900223ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900223d2:	fb04 fa0a 	mul.w	sl, r4, sl
900223d6:	44bc      	add	ip, r7
900223d8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900223dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900223e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900223e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900223e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900223ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900223f0:	ea4c 040a 	orr.w	r4, ip, sl
900223f4:	9411      	str	r4, [sp, #68]	; 0x44
900223f6:	9c10      	ldr	r4, [sp, #64]	; 0x40
900223f8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900223fc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90022400:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90022404:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022406:	fb0e f707 	mul.w	r7, lr, r7
9002240a:	fb02 770c 	mla	r7, r2, ip, r7
9002240e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90022412:	9c11      	ldr	r4, [sp, #68]	; 0x44
90022414:	fb00 770c 	mla	r7, r0, ip, r7
90022418:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002241c:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002241e:	fb08 770c 	mla	r7, r8, ip, r7
90022422:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90022426:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022428:	fb0e fe0c 	mul.w	lr, lr, ip
9002242c:	0a3f      	lsrs	r7, r7, #8
9002242e:	fb02 e303 	mla	r3, r2, r3, lr
90022432:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90022434:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90022438:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9002243c:	9a11      	ldr	r2, [sp, #68]	; 0x44
9002243e:	fb00 330a 	mla	r3, r0, sl, r3
90022442:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90022446:	f8b9 0000 	ldrh.w	r0, [r9]
9002244a:	fb08 3c0c 	mla	ip, r8, ip, r3
9002244e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90022450:	1202      	asrs	r2, r0, #8
90022452:	434b      	muls	r3, r1
90022454:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022458:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002245c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90022460:	1c59      	adds	r1, r3, #1
90022462:	ea47 070c 	orr.w	r7, r7, ip
90022466:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002246a:	0c3b      	lsrs	r3, r7, #16
9002246c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90022470:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90022474:	b2ff      	uxtb	r7, r7
90022476:	fb13 f304 	smulbb	r3, r3, r4
9002247a:	b2c9      	uxtb	r1, r1
9002247c:	fb1c fc04 	smulbb	ip, ip, r4
90022480:	fb02 3201 	mla	r2, r2, r1, r3
90022484:	10c3      	asrs	r3, r0, #3
90022486:	fb17 f704 	smulbb	r7, r7, r4
9002248a:	00c0      	lsls	r0, r0, #3
9002248c:	b292      	uxth	r2, r2
9002248e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90022492:	b2c0      	uxtb	r0, r0
90022494:	fb03 c301 	mla	r3, r3, r1, ip
90022498:	f102 0c01 	add.w	ip, r2, #1
9002249c:	fb00 7001 	mla	r0, r0, r1, r7
900224a0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
900224a4:	b280      	uxth	r0, r0
900224a6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
900224aa:	b29b      	uxth	r3, r3
900224ac:	1c42      	adds	r2, r0, #1
900224ae:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900224b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900224b6:	ea42 020c 	orr.w	r2, r2, ip
900224ba:	f103 0c01 	add.w	ip, r3, #1
900224be:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900224c2:	095b      	lsrs	r3, r3, #5
900224c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900224c8:	431a      	orrs	r2, r3
900224ca:	f8a9 2000 	strh.w	r2, [r9]
900224ce:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900224d0:	f109 0902 	add.w	r9, r9, #2
900224d4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900224d6:	f10b 3bff 	add.w	fp, fp, #4294967295
900224da:	441a      	add	r2, r3
900224dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900224de:	9229      	str	r2, [sp, #164]	; 0xa4
900224e0:	441d      	add	r5, r3
900224e2:	e63d      	b.n	90022160 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
900224e4:	2800      	cmp	r0, #0
900224e6:	f43f aedd 	beq.w	900222a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900224ea:	5c79      	ldrb	r1, [r7, r1]
900224ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900224f0:	910b      	str	r1, [sp, #44]	; 0x2c
900224f2:	0e09      	lsrs	r1, r1, #24
900224f4:	9114      	str	r1, [sp, #80]	; 0x50
900224f6:	e6d5      	b.n	900222a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900224f8:	b01f      	add	sp, #124	; 0x7c
900224fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900224fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
900224fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022502:	b089      	sub	sp, #36	; 0x24
90022504:	9101      	str	r1, [sp, #4]
90022506:	9801      	ldr	r0, [sp, #4]
90022508:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
9002250c:	8800      	ldrh	r0, [r0, #0]
9002250e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
90022512:	1206      	asrs	r6, r0, #8
90022514:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90022518:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
9002251c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90022520:	9602      	str	r6, [sp, #8]
90022522:	10c6      	asrs	r6, r0, #3
90022524:	00c0      	lsls	r0, r0, #3
90022526:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9002252a:	b2c0      	uxtb	r0, r0
9002252c:	9603      	str	r6, [sp, #12]
9002252e:	9004      	str	r0, [sp, #16]
90022530:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
90022534:	fb07 100c 	mla	r0, r7, ip, r1
90022538:	2f00      	cmp	r7, #0
9002253a:	eb02 0e00 	add.w	lr, r2, r0
9002253e:	f2c0 810a 	blt.w	90022756 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90022542:	45b8      	cmp	r8, r7
90022544:	f340 8107 	ble.w	90022756 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90022548:	2900      	cmp	r1, #0
9002254a:	f2c0 8102 	blt.w	90022752 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002254e:	458c      	cmp	ip, r1
90022550:	f340 80ff 	ble.w	90022752 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90022554:	5c12      	ldrb	r2, [r2, r0]
90022556:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
9002255a:	1c4a      	adds	r2, r1, #1
9002255c:	f100 80fe 	bmi.w	9002275c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90022560:	4594      	cmp	ip, r2
90022562:	f340 80fb 	ble.w	9002275c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90022566:	2d00      	cmp	r5, #0
90022568:	f000 80fa 	beq.w	90022760 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
9002256c:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022570:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90022574:	3701      	adds	r7, #1
90022576:	f100 80f7 	bmi.w	90022768 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
9002257a:	45b8      	cmp	r8, r7
9002257c:	f340 80f4 	ble.w	90022768 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90022580:	2c00      	cmp	r4, #0
90022582:	f000 80f4 	beq.w	9002276e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90022586:	2900      	cmp	r1, #0
90022588:	eb0e 020c 	add.w	r2, lr, ip
9002258c:	f2c0 80ea 	blt.w	90022764 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90022590:	458c      	cmp	ip, r1
90022592:	f340 80e7 	ble.w	90022764 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90022596:	f81e 700c 	ldrb.w	r7, [lr, ip]
9002259a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
9002259e:	3101      	adds	r1, #1
900225a0:	f100 80e8 	bmi.w	90022774 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900225a4:	458c      	cmp	ip, r1
900225a6:	f340 80e5 	ble.w	90022774 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900225aa:	2d00      	cmp	r5, #0
900225ac:	f000 80e4 	beq.w	90022778 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
900225b0:	7852      	ldrb	r2, [r2, #1]
900225b2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900225b6:	0e0b      	lsrs	r3, r1, #24
900225b8:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
900225bc:	ea4f 6a10 	mov.w	sl, r0, lsr #24
900225c0:	9300      	str	r3, [sp, #0]
900225c2:	b2a4      	uxth	r4, r4
900225c4:	b2ab      	uxth	r3, r5
900225c6:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
900225ca:	ea4f 6b16 	mov.w	fp, r6, lsr #24
900225ce:	fb03 f904 	mul.w	r9, r3, r4
900225d2:	011b      	lsls	r3, r3, #4
900225d4:	fb0a f505 	mul.w	r5, sl, r5
900225d8:	ea4f 6817 	mov.w	r8, r7, lsr #24
900225dc:	eba3 0e09 	sub.w	lr, r3, r9
900225e0:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
900225e4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
900225e8:	0a28      	lsrs	r0, r5, #8
900225ea:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
900225ee:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900225f2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
900225f6:	fb0a f303 	mul.w	r3, sl, r3
900225fa:	fb08 f707 	mul.w	r7, r8, r7
900225fe:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90022602:	4405      	add	r5, r0
90022604:	fb08 fc0c 	mul.w	ip, r8, ip
90022608:	b2a4      	uxth	r4, r4
9002260a:	0a2d      	lsrs	r5, r5, #8
9002260c:	fa1f fe8e 	uxth.w	lr, lr
90022610:	1b12      	subs	r2, r2, r4
90022612:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
90022616:	b292      	uxth	r2, r2
90022618:	9005      	str	r0, [sp, #20]
9002261a:	f503 7080 	add.w	r0, r3, #256	; 0x100
9002261e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90022622:	ea4f 201c 	mov.w	r0, ip, lsr #8
90022626:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002262a:	0a1b      	lsrs	r3, r3, #8
9002262c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90022630:	9306      	str	r3, [sp, #24]
90022632:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90022636:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9002263a:	4460      	add	r0, ip
9002263c:	fb0b f303 	mul.w	r3, fp, r3
90022640:	fb0b f606 	mul.w	r6, fp, r6
90022644:	0a00      	lsrs	r0, r0, #8
90022646:	0a1d      	lsrs	r5, r3, #8
90022648:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
9002264c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90022650:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90022654:	441d      	add	r5, r3
90022656:	f506 7380 	add.w	r3, r6, #256	; 0x100
9002265a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002265e:	f507 7380 	add.w	r3, r7, #256	; 0x100
90022662:	0a2d      	lsrs	r5, r5, #8
90022664:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90022668:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
9002266c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90022670:	0a36      	lsrs	r6, r6, #8
90022672:	0a1b      	lsrs	r3, r3, #8
90022674:	fb05 f50e 	mul.w	r5, r5, lr
90022678:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9002267c:	9307      	str	r3, [sp, #28]
9002267e:	0e0b      	lsrs	r3, r1, #24
90022680:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90022684:	fb0e f606 	mul.w	r6, lr, r6
90022688:	435f      	muls	r7, r3
9002268a:	4359      	muls	r1, r3
9002268c:	9b05      	ldr	r3, [sp, #20]
9002268e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022692:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90022696:	fb03 5502 	mla	r5, r3, r2, r5
9002269a:	9b06      	ldr	r3, [sp, #24]
9002269c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900226a0:	fb0e fe0b 	mul.w	lr, lr, fp
900226a4:	44bc      	add	ip, r7
900226a6:	f501 7780 	add.w	r7, r1, #256	; 0x100
900226aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900226ae:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900226b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900226b6:	0a09      	lsrs	r1, r1, #8
900226b8:	fb0c 5509 	mla	r5, ip, r9, r5
900226bc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900226c0:	fb00 5504 	mla	r5, r0, r4, r5
900226c4:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
900226c8:	9b07      	ldr	r3, [sp, #28]
900226ca:	fb02 6000 	mla	r0, r2, r0, r6
900226ce:	0a2d      	lsrs	r5, r5, #8
900226d0:	fb02 e20a 	mla	r2, r2, sl, lr
900226d4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900226d8:	fb09 0001 	mla	r0, r9, r1, r0
900226dc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900226e0:	fb04 0003 	mla	r0, r4, r3, r0
900226e4:	9b00      	ldr	r3, [sp, #0]
900226e6:	fb04 2408 	mla	r4, r4, r8, r2
900226ea:	9a04      	ldr	r2, [sp, #16]
900226ec:	0a00      	lsrs	r0, r0, #8
900226ee:	fb09 4903 	mla	r9, r9, r3, r4
900226f2:	9b02      	ldr	r3, [sp, #8]
900226f4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
900226f8:	ea6f 2929 	mvn.w	r9, r9, asr #8
900226fc:	4305      	orrs	r5, r0
900226fe:	fa5f f989 	uxtb.w	r9, r9
90022702:	fb03 f109 	mul.w	r1, r3, r9
90022706:	9b03      	ldr	r3, [sp, #12]
90022708:	fb03 f309 	mul.w	r3, r3, r9
9002270c:	fb02 f909 	mul.w	r9, r2, r9
90022710:	1c4a      	adds	r2, r1, #1
90022712:	1c58      	adds	r0, r3, #1
90022714:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022718:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002271c:	0c2a      	lsrs	r2, r5, #16
9002271e:	0a2b      	lsrs	r3, r5, #8
90022720:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90022724:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90022728:	0212      	lsls	r2, r2, #8
9002272a:	00db      	lsls	r3, r3, #3
9002272c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90022730:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022734:	4313      	orrs	r3, r2
90022736:	f109 0201 	add.w	r2, r9, #1
9002273a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
9002273e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90022742:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90022746:	431d      	orrs	r5, r3
90022748:	9b01      	ldr	r3, [sp, #4]
9002274a:	801d      	strh	r5, [r3, #0]
9002274c:	b009      	add	sp, #36	; 0x24
9002274e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022752:	2000      	movs	r0, #0
90022754:	e701      	b.n	9002255a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90022756:	2600      	movs	r6, #0
90022758:	4630      	mov	r0, r6
9002275a:	e70b      	b.n	90022574 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
9002275c:	2600      	movs	r6, #0
9002275e:	e709      	b.n	90022574 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90022760:	462e      	mov	r6, r5
90022762:	e707      	b.n	90022574 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90022764:	2700      	movs	r7, #0
90022766:	e71a      	b.n	9002259e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90022768:	2100      	movs	r1, #0
9002276a:	460f      	mov	r7, r1
9002276c:	e723      	b.n	900225b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
9002276e:	4621      	mov	r1, r4
90022770:	4627      	mov	r7, r4
90022772:	e720      	b.n	900225b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90022774:	2100      	movs	r1, #0
90022776:	e71e      	b.n	900225b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90022778:	4629      	mov	r1, r5
9002277a:	e71c      	b.n	900225b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

9002277c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002277c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022780:	b09b      	sub	sp, #108	; 0x6c
90022782:	9218      	str	r2, [sp, #96]	; 0x60
90022784:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90022786:	9019      	str	r0, [sp, #100]	; 0x64
90022788:	9116      	str	r1, [sp, #88]	; 0x58
9002278a:	6850      	ldr	r0, [r2, #4]
9002278c:	9307      	str	r3, [sp, #28]
9002278e:	6812      	ldr	r2, [r2, #0]
90022790:	9d26      	ldr	r5, [sp, #152]	; 0x98
90022792:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90022796:	fb00 1303 	mla	r3, r0, r3, r1
9002279a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002279e:	930a      	str	r3, [sp, #40]	; 0x28
900227a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900227a2:	681b      	ldr	r3, [r3, #0]
900227a4:	930f      	str	r3, [sp, #60]	; 0x3c
900227a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900227a8:	685e      	ldr	r6, [r3, #4]
900227aa:	3604      	adds	r6, #4
900227ac:	9b16      	ldr	r3, [sp, #88]	; 0x58
900227ae:	2b00      	cmp	r3, #0
900227b0:	dc03      	bgt.n	900227ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900227b2:	9b18      	ldr	r3, [sp, #96]	; 0x60
900227b4:	2b00      	cmp	r3, #0
900227b6:	f340 8373 	ble.w	90022ea0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900227ba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900227bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900227c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900227c4:	1e48      	subs	r0, r1, #1
900227c6:	1e57      	subs	r7, r2, #1
900227c8:	9b07      	ldr	r3, [sp, #28]
900227ca:	2b00      	cmp	r3, #0
900227cc:	f340 818f 	ble.w	90022aee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
900227d0:	9c25      	ldr	r4, [sp, #148]	; 0x94
900227d2:	142b      	asrs	r3, r5, #16
900227d4:	ea5f 4c24 	movs.w	ip, r4, asr #16
900227d8:	d406      	bmi.n	900227e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900227da:	4584      	cmp	ip, r0
900227dc:	da04      	bge.n	900227e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900227de:	2b00      	cmp	r3, #0
900227e0:	db02      	blt.n	900227e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900227e2:	42bb      	cmp	r3, r7
900227e4:	f2c0 8184 	blt.w	90022af0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
900227e8:	f11c 0c01 	adds.w	ip, ip, #1
900227ec:	f100 8172 	bmi.w	90022ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900227f0:	4561      	cmp	r1, ip
900227f2:	f2c0 816f 	blt.w	90022ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900227f6:	3301      	adds	r3, #1
900227f8:	f100 816c 	bmi.w	90022ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900227fc:	429a      	cmp	r2, r3
900227fe:	f2c0 8169 	blt.w	90022ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022802:	9b07      	ldr	r3, [sp, #28]
90022804:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90022806:	9317      	str	r3, [sp, #92]	; 0x5c
90022808:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002280a:	2b00      	cmp	r3, #0
9002280c:	f340 818e 	ble.w	90022b2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90022810:	9b25      	ldr	r3, [sp, #148]	; 0x94
90022812:	ea4f 4c25 	mov.w	ip, r5, asr #16
90022816:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002281a:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002281e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90022820:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90022824:	9b25      	ldr	r3, [sp, #148]	; 0x94
90022826:	141b      	asrs	r3, r3, #16
90022828:	f100 81d1 	bmi.w	90022bce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002282c:	f101 38ff 	add.w	r8, r1, #4294967295
90022830:	4543      	cmp	r3, r8
90022832:	f280 81cc 	bge.w	90022bce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022836:	f1bc 0f00 	cmp.w	ip, #0
9002283a:	f2c0 81c8 	blt.w	90022bce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002283e:	f10e 38ff 	add.w	r8, lr, #4294967295
90022842:	45c4      	cmp	ip, r8
90022844:	f280 81c3 	bge.w	90022bce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022848:	b209      	sxth	r1, r1
9002284a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002284c:	fb0c 3301 	mla	r3, ip, r1, r3
90022850:	eb04 0803 	add.w	r8, r4, r3
90022854:	5ce3      	ldrb	r3, [r4, r3]
90022856:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002285a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002285e:	2a00      	cmp	r2, #0
90022860:	f000 81aa 	beq.w	90022bb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90022864:	f898 c001 	ldrb.w	ip, [r8, #1]
90022868:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
9002286c:	940b      	str	r4, [sp, #44]	; 0x2c
9002286e:	0e24      	lsrs	r4, r4, #24
90022870:	9412      	str	r4, [sp, #72]	; 0x48
90022872:	b178      	cbz	r0, 90022894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90022874:	eb08 0c01 	add.w	ip, r8, r1
90022878:	f818 1001 	ldrb.w	r1, [r8, r1]
9002287c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022880:	9108      	str	r1, [sp, #32]
90022882:	0e09      	lsrs	r1, r1, #24
90022884:	9110      	str	r1, [sp, #64]	; 0x40
90022886:	f89c 1001 	ldrb.w	r1, [ip, #1]
9002288a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002288e:	910c      	str	r1, [sp, #48]	; 0x30
90022890:	0e09      	lsrs	r1, r1, #24
90022892:	9113      	str	r1, [sp, #76]	; 0x4c
90022894:	b292      	uxth	r2, r2
90022896:	9912      	ldr	r1, [sp, #72]	; 0x48
90022898:	b280      	uxth	r0, r0
9002289a:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002289c:	fb02 f900 	mul.w	r9, r2, r0
900228a0:	0112      	lsls	r2, r2, #4
900228a2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900228a6:	eba2 0809 	sub.w	r8, r2, r9
900228aa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900228ae:	b280      	uxth	r0, r0
900228b0:	fa1f f888 	uxth.w	r8, r8
900228b4:	1a12      	subs	r2, r2, r0
900228b6:	fb08 f101 	mul.w	r1, r8, r1
900228ba:	b292      	uxth	r2, r2
900228bc:	fb02 110e 	mla	r1, r2, lr, r1
900228c0:	fb00 1104 	mla	r1, r0, r4, r1
900228c4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900228c6:	fb09 1104 	mla	r1, r9, r4, r1
900228ca:	f3c1 2107 	ubfx	r1, r1, #8, #8
900228ce:	2900      	cmp	r1, #0
900228d0:	f000 80f5 	beq.w	90022abe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900228d4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900228d8:	d01b      	beq.n	90022912 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900228da:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900228de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900228e2:	fb0e fa0a 	mul.w	sl, lr, sl
900228e6:	fb0e fe03 	mul.w	lr, lr, r3
900228ea:	ea4f 231a 	mov.w	r3, sl, lsr #8
900228ee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900228f2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900228f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900228fa:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900228fe:	4453      	add	r3, sl
90022900:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022904:	0a1b      	lsrs	r3, r3, #8
90022906:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9002290a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002290e:	ea43 030c 	orr.w	r3, r3, ip
90022912:	9c12      	ldr	r4, [sp, #72]	; 0x48
90022914:	2cff      	cmp	r4, #255	; 0xff
90022916:	d021      	beq.n	9002295c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90022918:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002291a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002291e:	9c12      	ldr	r4, [sp, #72]	; 0x48
90022920:	fb04 fb0b 	mul.w	fp, r4, fp
90022924:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022926:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002292a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002292c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022930:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90022934:	fb04 fa0a 	mul.w	sl, r4, sl
90022938:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002293c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90022940:	44de      	add	lr, fp
90022942:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022946:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002294a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002294e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90022952:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022956:	ea4e 040a 	orr.w	r4, lr, sl
9002295a:	940b      	str	r4, [sp, #44]	; 0x2c
9002295c:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002295e:	2cff      	cmp	r4, #255	; 0xff
90022960:	d021      	beq.n	900229a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90022962:	9c08      	ldr	r4, [sp, #32]
90022964:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90022968:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002296a:	fb04 fb0b 	mul.w	fp, r4, fp
9002296e:	9c08      	ldr	r4, [sp, #32]
90022970:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90022974:	9c10      	ldr	r4, [sp, #64]	; 0x40
90022976:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002297a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002297e:	fb04 fa0a 	mul.w	sl, r4, sl
90022982:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90022986:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002298a:	44de      	add	lr, fp
9002298c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022990:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022994:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022998:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002299c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900229a0:	ea4e 040a 	orr.w	r4, lr, sl
900229a4:	9408      	str	r4, [sp, #32]
900229a6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900229a8:	2cff      	cmp	r4, #255	; 0xff
900229aa:	d021      	beq.n	900229f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
900229ac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900229ae:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900229b2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900229b4:	fb04 fb0b 	mul.w	fp, r4, fp
900229b8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900229ba:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900229be:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900229c0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900229c4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900229c8:	fb04 fa0a 	mul.w	sl, r4, sl
900229cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900229d0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900229d4:	44de      	add	lr, fp
900229d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900229da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900229de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900229e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900229e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900229ea:	ea4e 040a 	orr.w	r4, lr, sl
900229ee:	940c      	str	r4, [sp, #48]	; 0x30
900229f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900229f2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
900229f6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900229fa:	43c9      	mvns	r1, r1
900229fc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90022a00:	9c08      	ldr	r4, [sp, #32]
90022a02:	fb08 fc0c 	mul.w	ip, r8, ip
90022a06:	fb02 cc0e 	mla	ip, r2, lr, ip
90022a0a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90022a0e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90022a10:	fb00 cc0e 	mla	ip, r0, lr, ip
90022a14:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90022a18:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022a1a:	fb09 cc0e 	mla	ip, r9, lr, ip
90022a1e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90022a22:	fb08 f80e 	mul.w	r8, r8, lr
90022a26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022a2a:	fa5f fe81 	uxtb.w	lr, r1
90022a2e:	fb02 8303 	mla	r3, r2, r3, r8
90022a32:	9a08      	ldr	r2, [sp, #32]
90022a34:	f8b7 8000 	ldrh.w	r8, [r7]
90022a38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022a3c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90022a40:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90022a42:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90022a46:	fb00 330a 	mla	r3, r0, sl, r3
90022a4a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
90022a4e:	ea4f 2228 	mov.w	r2, r8, asr #8
90022a52:	fb09 3900 	mla	r9, r9, r0, r3
90022a56:	ea4f 00e8 	mov.w	r0, r8, asr #3
90022a5a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90022a5e:	b2c9      	uxtb	r1, r1
90022a60:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022a64:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90022a68:	fb02 f20e 	mul.w	r2, r2, lr
90022a6c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90022a70:	fb00 f00e 	mul.w	r0, r0, lr
90022a74:	1c53      	adds	r3, r2, #1
90022a76:	fb01 f10e 	mul.w	r1, r1, lr
90022a7a:	ea4c 0c09 	orr.w	ip, ip, r9
90022a7e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90022a82:	ea4f 431c 	mov.w	r3, ip, lsr #16
90022a86:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022a8a:	4a60      	ldr	r2, [pc, #384]	; (90022c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90022a8c:	b2db      	uxtb	r3, r3
90022a8e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90022a92:	1c43      	adds	r3, r0, #1
90022a94:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90022a98:	ea4f 231c 	mov.w	r3, ip, lsr #8
90022a9c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90022aa0:	00db      	lsls	r3, r3, #3
90022aa2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022aa6:	4313      	orrs	r3, r2
90022aa8:	1c4a      	adds	r2, r1, #1
90022aaa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022aae:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90022ab2:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90022ab6:	ea4c 0c03 	orr.w	ip, ip, r3
90022aba:	f8a7 c000 	strh.w	ip, [r7]
90022abe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90022ac0:	3702      	adds	r7, #2
90022ac2:	9a25      	ldr	r2, [sp, #148]	; 0x94
90022ac4:	441a      	add	r2, r3
90022ac6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022ac8:	441d      	add	r5, r3
90022aca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90022acc:	9225      	str	r2, [sp, #148]	; 0x94
90022ace:	3b01      	subs	r3, #1
90022ad0:	9317      	str	r3, [sp, #92]	; 0x5c
90022ad2:	e699      	b.n	90022808 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022ad4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90022ad6:	9c25      	ldr	r4, [sp, #148]	; 0x94
90022ad8:	441c      	add	r4, r3
90022ada:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022adc:	441d      	add	r5, r3
90022ade:	9b07      	ldr	r3, [sp, #28]
90022ae0:	9425      	str	r4, [sp, #148]	; 0x94
90022ae2:	3b01      	subs	r3, #1
90022ae4:	9307      	str	r3, [sp, #28]
90022ae6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022ae8:	3302      	adds	r3, #2
90022aea:	930a      	str	r3, [sp, #40]	; 0x28
90022aec:	e66c      	b.n	900227c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90022aee:	d024      	beq.n	90022b3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90022af0:	9b07      	ldr	r3, [sp, #28]
90022af2:	9827      	ldr	r0, [sp, #156]	; 0x9c
90022af4:	3b01      	subs	r3, #1
90022af6:	9c25      	ldr	r4, [sp, #148]	; 0x94
90022af8:	fb00 4003 	mla	r0, r0, r3, r4
90022afc:	1400      	asrs	r0, r0, #16
90022afe:	f53f ae80 	bmi.w	90022802 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022b02:	3901      	subs	r1, #1
90022b04:	4288      	cmp	r0, r1
90022b06:	f6bf ae7c 	bge.w	90022802 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022b0a:	9928      	ldr	r1, [sp, #160]	; 0xa0
90022b0c:	fb01 5303 	mla	r3, r1, r3, r5
90022b10:	141b      	asrs	r3, r3, #16
90022b12:	f53f ae76 	bmi.w	90022802 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022b16:	3a01      	subs	r2, #1
90022b18:	4293      	cmp	r3, r2
90022b1a:	f6bf ae72 	bge.w	90022802 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022b1e:	f8dd b01c 	ldr.w	fp, [sp, #28]
90022b22:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90022b26:	f1bb 0f00 	cmp.w	fp, #0
90022b2a:	dc71      	bgt.n	90022c10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90022b2c:	9b07      	ldr	r3, [sp, #28]
90022b2e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90022b32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022b34:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90022b38:	930a      	str	r3, [sp, #40]	; 0x28
90022b3a:	9b16      	ldr	r3, [sp, #88]	; 0x58
90022b3c:	2b00      	cmp	r3, #0
90022b3e:	f340 81af 	ble.w	90022ea0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90022b42:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022b46:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022b48:	ee30 0a04 	vadd.f32	s0, s0, s8
90022b4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022b50:	eef0 6a62 	vmov.f32	s13, s5
90022b54:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022b58:	ee31 1a05 	vadd.f32	s2, s2, s10
90022b5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022b60:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90022b64:	eef0 6a43 	vmov.f32	s13, s6
90022b68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022b6c:	ee16 5a90 	vmov	r5, s13
90022b70:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022b74:	ee61 7a27 	vmul.f32	s15, s2, s15
90022b78:	ee77 2a62 	vsub.f32	s5, s14, s5
90022b7c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022b80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022b84:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022b88:	ee12 2a90 	vmov	r2, s5
90022b8c:	eef0 2a47 	vmov.f32	s5, s14
90022b90:	fb92 f3f3 	sdiv	r3, r2, r3
90022b94:	ee13 2a10 	vmov	r2, s6
90022b98:	9327      	str	r3, [sp, #156]	; 0x9c
90022b9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022b9c:	eeb0 3a67 	vmov.f32	s6, s15
90022ba0:	fb92 f3f3 	sdiv	r3, r2, r3
90022ba4:	9328      	str	r3, [sp, #160]	; 0xa0
90022ba6:	9b16      	ldr	r3, [sp, #88]	; 0x58
90022ba8:	9a18      	ldr	r2, [sp, #96]	; 0x60
90022baa:	3b01      	subs	r3, #1
90022bac:	9316      	str	r3, [sp, #88]	; 0x58
90022bae:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022bb0:	bf08      	it	eq
90022bb2:	4613      	moveq	r3, r2
90022bb4:	9307      	str	r3, [sp, #28]
90022bb6:	e5f9      	b.n	900227ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90022bb8:	2800      	cmp	r0, #0
90022bba:	f43f ae6b 	beq.w	90022894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90022bbe:	f818 1001 	ldrb.w	r1, [r8, r1]
90022bc2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022bc6:	9108      	str	r1, [sp, #32]
90022bc8:	0e09      	lsrs	r1, r1, #24
90022bca:	9110      	str	r1, [sp, #64]	; 0x40
90022bcc:	e662      	b.n	90022894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90022bce:	f113 0801 	adds.w	r8, r3, #1
90022bd2:	f53f af74 	bmi.w	90022abe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022bd6:	4541      	cmp	r1, r8
90022bd8:	f6ff af71 	blt.w	90022abe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022bdc:	f11c 0801 	adds.w	r8, ip, #1
90022be0:	f53f af6d 	bmi.w	90022abe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022be4:	45c6      	cmp	lr, r8
90022be6:	f6ff af6a 	blt.w	90022abe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022bea:	b209      	sxth	r1, r1
90022bec:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90022bf0:	fa0f f38e 	sxth.w	r3, lr
90022bf4:	9100      	str	r1, [sp, #0]
90022bf6:	4639      	mov	r1, r7
90022bf8:	9301      	str	r3, [sp, #4]
90022bfa:	4633      	mov	r3, r6
90022bfc:	e9cd 2004 	strd	r2, r0, [sp, #16]
90022c00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90022c02:	9819      	ldr	r0, [sp, #100]	; 0x64
90022c04:	f7ff fc7b 	bl	900224fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90022c08:	e759      	b.n	90022abe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022c0a:	bf00      	nop
90022c0c:	fffff800 	.word	0xfffff800
90022c10:	9b25      	ldr	r3, [sp, #148]	; 0x94
90022c12:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022c16:	9c25      	ldr	r4, [sp, #148]	; 0x94
90022c18:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022c1c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90022c1e:	1427      	asrs	r7, r4, #16
90022c20:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90022c22:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022c26:	142b      	asrs	r3, r5, #16
90022c28:	fb01 7303 	mla	r3, r1, r3, r7
90022c2c:	18e7      	adds	r7, r4, r3
90022c2e:	5ce3      	ldrb	r3, [r4, r3]
90022c30:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90022c34:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90022c38:	2a00      	cmp	r2, #0
90022c3a:	f000 8127 	beq.w	90022e8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90022c3e:	f897 e001 	ldrb.w	lr, [r7, #1]
90022c42:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90022c46:	940d      	str	r4, [sp, #52]	; 0x34
90022c48:	0e24      	lsrs	r4, r4, #24
90022c4a:	9414      	str	r4, [sp, #80]	; 0x50
90022c4c:	b170      	cbz	r0, 90022c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90022c4e:	eb07 0e01 	add.w	lr, r7, r1
90022c52:	5c79      	ldrb	r1, [r7, r1]
90022c54:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022c58:	9109      	str	r1, [sp, #36]	; 0x24
90022c5a:	0e09      	lsrs	r1, r1, #24
90022c5c:	9111      	str	r1, [sp, #68]	; 0x44
90022c5e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90022c62:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022c66:	910e      	str	r1, [sp, #56]	; 0x38
90022c68:	0e09      	lsrs	r1, r1, #24
90022c6a:	9115      	str	r1, [sp, #84]	; 0x54
90022c6c:	b292      	uxth	r2, r2
90022c6e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90022c70:	b280      	uxth	r0, r0
90022c72:	fb02 f800 	mul.w	r8, r2, r0
90022c76:	0112      	lsls	r2, r2, #4
90022c78:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90022c7c:	eba2 0e08 	sub.w	lr, r2, r8
90022c80:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90022c84:	9a14      	ldr	r2, [sp, #80]	; 0x50
90022c86:	b280      	uxth	r0, r0
90022c88:	fa1f fe8e 	uxth.w	lr, lr
90022c8c:	1a09      	subs	r1, r1, r0
90022c8e:	fb0e f202 	mul.w	r2, lr, r2
90022c92:	b289      	uxth	r1, r1
90022c94:	fb01 220c 	mla	r2, r1, ip, r2
90022c98:	fb00 2204 	mla	r2, r0, r4, r2
90022c9c:	9c15      	ldr	r4, [sp, #84]	; 0x54
90022c9e:	fb08 2204 	mla	r2, r8, r4, r2
90022ca2:	f3c2 2207 	ubfx	r2, r2, #8, #8
90022ca6:	2a00      	cmp	r2, #0
90022ca8:	f000 80e5 	beq.w	90022e76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90022cac:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90022cb0:	d019      	beq.n	90022ce6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90022cb2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90022cb6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90022cba:	fb0c fa0a 	mul.w	sl, ip, sl
90022cbe:	fb0c fc03 	mul.w	ip, ip, r3
90022cc2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90022cc6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90022cca:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90022cce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90022cd2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90022cd6:	4453      	add	r3, sl
90022cd8:	0a3f      	lsrs	r7, r7, #8
90022cda:	0a1b      	lsrs	r3, r3, #8
90022cdc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90022ce0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90022ce4:	433b      	orrs	r3, r7
90022ce6:	9c14      	ldr	r4, [sp, #80]	; 0x50
90022ce8:	2cff      	cmp	r4, #255	; 0xff
90022cea:	d020      	beq.n	90022d2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90022cec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022cee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90022cf2:	9c14      	ldr	r4, [sp, #80]	; 0x50
90022cf4:	4367      	muls	r7, r4
90022cf6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022cf8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022cfc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90022d00:	9c14      	ldr	r4, [sp, #80]	; 0x50
90022d02:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90022d06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022d0a:	fb04 fa0a 	mul.w	sl, r4, sl
90022d0e:	44bc      	add	ip, r7
90022d10:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022d14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022d18:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022d1c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022d20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022d24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022d28:	ea4c 040a 	orr.w	r4, ip, sl
90022d2c:	940d      	str	r4, [sp, #52]	; 0x34
90022d2e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90022d30:	2cff      	cmp	r4, #255	; 0xff
90022d32:	d020      	beq.n	90022d76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90022d34:	9c09      	ldr	r4, [sp, #36]	; 0x24
90022d36:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90022d3a:	9c11      	ldr	r4, [sp, #68]	; 0x44
90022d3c:	4367      	muls	r7, r4
90022d3e:	9c09      	ldr	r4, [sp, #36]	; 0x24
90022d40:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022d44:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90022d48:	9c11      	ldr	r4, [sp, #68]	; 0x44
90022d4a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90022d4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022d52:	fb04 fa0a 	mul.w	sl, r4, sl
90022d56:	44bc      	add	ip, r7
90022d58:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022d5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022d60:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022d64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022d68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022d6c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022d70:	ea4c 040a 	orr.w	r4, ip, sl
90022d74:	9409      	str	r4, [sp, #36]	; 0x24
90022d76:	9c15      	ldr	r4, [sp, #84]	; 0x54
90022d78:	2cff      	cmp	r4, #255	; 0xff
90022d7a:	d020      	beq.n	90022dbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90022d7c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022d7e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90022d82:	9c15      	ldr	r4, [sp, #84]	; 0x54
90022d84:	4367      	muls	r7, r4
90022d86:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022d88:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022d8c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90022d90:	9c15      	ldr	r4, [sp, #84]	; 0x54
90022d92:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90022d96:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022d9a:	fb04 fa0a 	mul.w	sl, r4, sl
90022d9e:	44bc      	add	ip, r7
90022da0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022da4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022da8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022dac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022db0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022db4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022db8:	ea4c 040a 	orr.w	r4, ip, sl
90022dbc:	940e      	str	r4, [sp, #56]	; 0x38
90022dbe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022dc0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90022dc4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90022dc8:	43d2      	mvns	r2, r2
90022dca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90022dce:	9c09      	ldr	r4, [sp, #36]	; 0x24
90022dd0:	b2d2      	uxtb	r2, r2
90022dd2:	fb0e f707 	mul.w	r7, lr, r7
90022dd6:	fb01 770c 	mla	r7, r1, ip, r7
90022dda:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90022dde:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022de0:	fb00 770c 	mla	r7, r0, ip, r7
90022de4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90022de8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022dea:	fb08 770c 	mla	r7, r8, ip, r7
90022dee:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90022df2:	fb0e fe0c 	mul.w	lr, lr, ip
90022df6:	0a3f      	lsrs	r7, r7, #8
90022df8:	fb01 e303 	mla	r3, r1, r3, lr
90022dfc:	9909      	ldr	r1, [sp, #36]	; 0x24
90022dfe:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90022e02:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90022e06:	990e      	ldr	r1, [sp, #56]	; 0x38
90022e08:	fb00 330a 	mla	r3, r0, sl, r3
90022e0c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90022e10:	fb08 3c0c 	mla	ip, r8, ip, r3
90022e14:	f8b9 3000 	ldrh.w	r3, [r9]
90022e18:	1218      	asrs	r0, r3, #8
90022e1a:	10d9      	asrs	r1, r3, #3
90022e1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022e20:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90022e24:	00db      	lsls	r3, r3, #3
90022e26:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022e2a:	4350      	muls	r0, r2
90022e2c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90022e30:	b2db      	uxtb	r3, r3
90022e32:	4351      	muls	r1, r2
90022e34:	ea47 070c 	orr.w	r7, r7, ip
90022e38:	4353      	muls	r3, r2
90022e3a:	1c42      	adds	r2, r0, #1
90022e3c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022e40:	0c3a      	lsrs	r2, r7, #16
90022e42:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022e46:	4a18      	ldr	r2, [pc, #96]	; (90022ea8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90022e48:	b2c0      	uxtb	r0, r0
90022e4a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90022e4e:	1c4a      	adds	r2, r1, #1
90022e50:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022e54:	0a3a      	lsrs	r2, r7, #8
90022e56:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022e5a:	00c9      	lsls	r1, r1, #3
90022e5c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022e60:	4301      	orrs	r1, r0
90022e62:	1c58      	adds	r0, r3, #1
90022e64:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90022e68:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90022e6c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90022e70:	4308      	orrs	r0, r1
90022e72:	f8a9 0000 	strh.w	r0, [r9]
90022e76:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90022e78:	f109 0902 	add.w	r9, r9, #2
90022e7c:	9a25      	ldr	r2, [sp, #148]	; 0x94
90022e7e:	f10b 3bff 	add.w	fp, fp, #4294967295
90022e82:	441a      	add	r2, r3
90022e84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022e86:	9225      	str	r2, [sp, #148]	; 0x94
90022e88:	441d      	add	r5, r3
90022e8a:	e64c      	b.n	90022b26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90022e8c:	2800      	cmp	r0, #0
90022e8e:	f43f aeed 	beq.w	90022c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90022e92:	5c79      	ldrb	r1, [r7, r1]
90022e94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022e98:	9109      	str	r1, [sp, #36]	; 0x24
90022e9a:	0e09      	lsrs	r1, r1, #24
90022e9c:	9111      	str	r1, [sp, #68]	; 0x44
90022e9e:	e6e5      	b.n	90022c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90022ea0:	b01b      	add	sp, #108	; 0x6c
90022ea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022ea6:	bf00      	nop
90022ea8:	fffff800 	.word	0xfffff800

90022eac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90022eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022eb0:	b085      	sub	sp, #20
90022eb2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90022eb6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90022eba:	2800      	cmp	r0, #0
90022ebc:	9103      	str	r1, [sp, #12]
90022ebe:	fb00 7406 	mla	r4, r0, r6, r7
90022ec2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90022ec6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90022eca:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90022ece:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90022ed2:	eb03 0904 	add.w	r9, r3, r4
90022ed6:	9501      	str	r5, [sp, #4]
90022ed8:	f2c0 8150 	blt.w	9002317c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90022edc:	4583      	cmp	fp, r0
90022ede:	f340 814d 	ble.w	9002317c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90022ee2:	2f00      	cmp	r7, #0
90022ee4:	f2c0 8146 	blt.w	90023174 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90022ee8:	42be      	cmp	r6, r7
90022eea:	f340 8143 	ble.w	90023174 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90022eee:	f813 c004 	ldrb.w	ip, [r3, r4]
90022ef2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90022ef6:	f64f 041f 	movw	r4, #63519	; 0xf81f
90022efa:	ea4f 02ec 	mov.w	r2, ip, asr #3
90022efe:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90022f02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022f06:	4355      	muls	r5, r2
90022f08:	fb0c f203 	mul.w	r2, ip, r3
90022f0c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90022f10:	f605 0501 	addw	r5, r5, #2049	; 0x801
90022f14:	441d      	add	r5, r3
90022f16:	f102 0320 	add.w	r3, r2, #32
90022f1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022f1e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90022f22:	0a1b      	lsrs	r3, r3, #8
90022f24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022f28:	431c      	orrs	r4, r3
90022f2a:	1c7b      	adds	r3, r7, #1
90022f2c:	f100 812b 	bmi.w	90023186 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90022f30:	429e      	cmp	r6, r3
90022f32:	f340 8128 	ble.w	90023186 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90022f36:	2900      	cmp	r1, #0
90022f38:	f000 8128 	beq.w	9002318c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90022f3c:	9a01      	ldr	r2, [sp, #4]
90022f3e:	f899 3001 	ldrb.w	r3, [r9, #1]
90022f42:	8855      	ldrh	r5, [r2, #2]
90022f44:	ea4f 08e3 	mov.w	r8, r3, asr #3
90022f48:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90022f4c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022f50:	fb08 f802 	mul.w	r8, r8, r2
90022f54:	f64f 021f 	movw	r2, #63519	; 0xf81f
90022f58:	435d      	muls	r5, r3
90022f5a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90022f5e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022f62:	44d0      	add	r8, sl
90022f64:	f105 0a20 	add.w	sl, r5, #32
90022f68:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90022f6c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90022f70:	0a2d      	lsrs	r5, r5, #8
90022f72:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022f76:	432a      	orrs	r2, r5
90022f78:	3001      	adds	r0, #1
90022f7a:	f100 810d 	bmi.w	90023198 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90022f7e:	4583      	cmp	fp, r0
90022f80:	f340 810a 	ble.w	90023198 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90022f84:	f1be 0f00 	cmp.w	lr, #0
90022f88:	f000 810b 	beq.w	900231a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90022f8c:	2f00      	cmp	r7, #0
90022f8e:	f2c0 8100 	blt.w	90023192 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90022f92:	42be      	cmp	r6, r7
90022f94:	f340 80fd 	ble.w	90023192 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90022f98:	9801      	ldr	r0, [sp, #4]
90022f9a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90022f9e:	f819 5006 	ldrb.w	r5, [r9, r6]
90022fa2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90022fa6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90022faa:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90022fae:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90022fb2:	fb0a fa00 	mul.w	sl, sl, r0
90022fb6:	fb05 f808 	mul.w	r8, r5, r8
90022fba:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90022fbe:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90022fc2:	4482      	add	sl, r0
90022fc4:	f108 0020 	add.w	r0, r8, #32
90022fc8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022fcc:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90022fd0:	0a00      	lsrs	r0, r0, #8
90022fd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022fd6:	ea4b 0b00 	orr.w	fp, fp, r0
90022fda:	3701      	adds	r7, #1
90022fdc:	f100 80e6 	bmi.w	900231ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90022fe0:	42be      	cmp	r6, r7
90022fe2:	f340 80e3 	ble.w	900231ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90022fe6:	2900      	cmp	r1, #0
90022fe8:	f000 80e3 	beq.w	900231b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90022fec:	3601      	adds	r6, #1
90022fee:	9801      	ldr	r0, [sp, #4]
90022ff0:	f819 7006 	ldrb.w	r7, [r9, r6]
90022ff4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90022ff8:	ea4f 09e7 	mov.w	r9, r7, asr #3
90022ffc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90023000:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023004:	fb09 f906 	mul.w	r9, r9, r6
90023008:	fb07 f800 	mul.w	r8, r7, r0
9002300c:	f64f 001f 	movw	r0, #63519	; 0xf81f
90023010:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90023014:	f609 0901 	addw	r9, r9, #2049	; 0x801
90023018:	44d1      	add	r9, sl
9002301a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002301e:	f108 0020 	add.w	r0, r8, #32
90023022:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023026:	0a00      	lsrs	r0, r0, #8
90023028:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002302c:	4330      	orrs	r0, r6
9002302e:	b28e      	uxth	r6, r1
90023030:	fa1f f98e 	uxth.w	r9, lr
90023034:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90023038:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9002303c:	fb06 f809 	mul.w	r8, r6, r9
90023040:	0136      	lsls	r6, r6, #4
90023042:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023046:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9002304a:	9601      	str	r6, [sp, #4]
9002304c:	ea4a 0404 	orr.w	r4, sl, r4
90023050:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023054:	fa1f f689 	uxth.w	r6, r9
90023058:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002305c:	fb11 f90e 	smulbb	r9, r1, lr
90023060:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023064:	9602      	str	r6, [sp, #8]
90023066:	4626      	mov	r6, r4
90023068:	f3c9 09c7 	ubfx	r9, r9, #3, #8
9002306c:	f1ce 0410 	rsb	r4, lr, #16
90023070:	ea4a 0202 	orr.w	r2, sl, r2
90023074:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023078:	1a64      	subs	r4, r4, r1
9002307a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002307e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023082:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023086:	434a      	muls	r2, r1
90023088:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002308c:	ea4a 0000 	orr.w	r0, sl, r0
90023090:	9903      	ldr	r1, [sp, #12]
90023092:	fb04 2406 	mla	r4, r4, r6, r2
90023096:	9e02      	ldr	r6, [sp, #8]
90023098:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
9002309c:	fb09 4200 	mla	r2, r9, r0, r4
900230a0:	ea4f 440b 	mov.w	r4, fp, lsl #16
900230a4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
900230a8:	8808      	ldrh	r0, [r1, #0]
900230aa:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900230ae:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
900230b2:	ea44 0b0b 	orr.w	fp, r4, fp
900230b6:	9c01      	ldr	r4, [sp, #4]
900230b8:	b289      	uxth	r1, r1
900230ba:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
900230be:	fb0e 2e0b 	mla	lr, lr, fp, r2
900230c2:	1ba4      	subs	r4, r4, r6
900230c4:	9e01      	ldr	r6, [sp, #4]
900230c6:	ea4f 525e 	mov.w	r2, lr, lsr #21
900230ca:	eba6 0608 	sub.w	r6, r6, r8
900230ce:	b2a4      	uxth	r4, r4
900230d0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900230d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900230d8:	b2b6      	uxth	r6, r6
900230da:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900230de:	4373      	muls	r3, r6
900230e0:	ea42 0e0e 	orr.w	lr, r2, lr
900230e4:	fb0c 3304 	mla	r3, ip, r4, r3
900230e8:	9c02      	ldr	r4, [sp, #8]
900230ea:	fa1f f28e 	uxth.w	r2, lr
900230ee:	fb04 3505 	mla	r5, r4, r5, r3
900230f2:	10d4      	asrs	r4, r2, #3
900230f4:	fb08 5707 	mla	r7, r8, r7, r5
900230f8:	1215      	asrs	r5, r2, #8
900230fa:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
900230fe:	00d2      	lsls	r2, r2, #3
90023100:	f3c7 2707 	ubfx	r7, r7, #8, #8
90023104:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90023108:	b2d2      	uxtb	r2, r2
9002310a:	434f      	muls	r7, r1
9002310c:	1c7b      	adds	r3, r7, #1
9002310e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90023112:	1203      	asrs	r3, r0, #8
90023114:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90023118:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
9002311c:	b2ff      	uxtb	r7, r7
9002311e:	fb13 f307 	smulbb	r3, r3, r7
90023122:	fb05 3501 	mla	r5, r5, r1, r3
90023126:	10c3      	asrs	r3, r0, #3
90023128:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9002312c:	b2ad      	uxth	r5, r5
9002312e:	fb13 f307 	smulbb	r3, r3, r7
90023132:	fb04 3401 	mla	r4, r4, r1, r3
90023136:	00c3      	lsls	r3, r0, #3
90023138:	b2db      	uxtb	r3, r3
9002313a:	b2a4      	uxth	r4, r4
9002313c:	fb13 f307 	smulbb	r3, r3, r7
90023140:	fb02 3101 	mla	r1, r2, r1, r3
90023144:	1c6b      	adds	r3, r5, #1
90023146:	1c62      	adds	r2, r4, #1
90023148:	b289      	uxth	r1, r1
9002314a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002314e:	1c4b      	adds	r3, r1, #1
90023150:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90023154:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90023158:	9a03      	ldr	r2, [sp, #12]
9002315a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002315e:	0964      	lsrs	r4, r4, #5
90023160:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023164:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90023168:	432b      	orrs	r3, r5
9002316a:	4323      	orrs	r3, r4
9002316c:	8013      	strh	r3, [r2, #0]
9002316e:	b005      	add	sp, #20
90023170:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023174:	f04f 0c00 	mov.w	ip, #0
90023178:	4664      	mov	r4, ip
9002317a:	e6d6      	b.n	90022f2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
9002317c:	2300      	movs	r3, #0
9002317e:	469c      	mov	ip, r3
90023180:	461a      	mov	r2, r3
90023182:	461c      	mov	r4, r3
90023184:	e6f8      	b.n	90022f78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90023186:	2300      	movs	r3, #0
90023188:	461a      	mov	r2, r3
9002318a:	e6f5      	b.n	90022f78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002318c:	460b      	mov	r3, r1
9002318e:	460a      	mov	r2, r1
90023190:	e6f2      	b.n	90022f78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90023192:	2500      	movs	r5, #0
90023194:	46ab      	mov	fp, r5
90023196:	e720      	b.n	90022fda <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90023198:	2700      	movs	r7, #0
9002319a:	463d      	mov	r5, r7
9002319c:	4638      	mov	r0, r7
9002319e:	46bb      	mov	fp, r7
900231a0:	e745      	b.n	9002302e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900231a2:	4677      	mov	r7, lr
900231a4:	4675      	mov	r5, lr
900231a6:	4670      	mov	r0, lr
900231a8:	46f3      	mov	fp, lr
900231aa:	e740      	b.n	9002302e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900231ac:	2700      	movs	r7, #0
900231ae:	4638      	mov	r0, r7
900231b0:	e73d      	b.n	9002302e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900231b2:	460f      	mov	r7, r1
900231b4:	4608      	mov	r0, r1
900231b6:	e73a      	b.n	9002302e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

900231b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900231b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900231bc:	b097      	sub	sp, #92	; 0x5c
900231be:	9214      	str	r2, [sp, #80]	; 0x50
900231c0:	9308      	str	r3, [sp, #32]
900231c2:	9a25      	ldr	r2, [sp, #148]	; 0x94
900231c4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
900231c8:	9015      	str	r0, [sp, #84]	; 0x54
900231ca:	9312      	str	r3, [sp, #72]	; 0x48
900231cc:	6850      	ldr	r0, [r2, #4]
900231ce:	9111      	str	r1, [sp, #68]	; 0x44
900231d0:	6812      	ldr	r2, [r2, #0]
900231d2:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
900231d6:	fb00 1303 	mla	r3, r0, r3, r1
900231da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900231de:	9309      	str	r3, [sp, #36]	; 0x24
900231e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900231e2:	681b      	ldr	r3, [r3, #0]
900231e4:	930b      	str	r3, [sp, #44]	; 0x2c
900231e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900231e8:	685b      	ldr	r3, [r3, #4]
900231ea:	930c      	str	r3, [sp, #48]	; 0x30
900231ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900231f0:	930a      	str	r3, [sp, #40]	; 0x28
900231f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
900231f4:	2b00      	cmp	r3, #0
900231f6:	dc03      	bgt.n	90023200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900231f8:	9b14      	ldr	r3, [sp, #80]	; 0x50
900231fa:	2b00      	cmp	r3, #0
900231fc:	f340 83cd 	ble.w	9002399a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90023200:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023202:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023206:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002320a:	1e48      	subs	r0, r1, #1
9002320c:	1e55      	subs	r5, r2, #1
9002320e:	9b08      	ldr	r3, [sp, #32]
90023210:	2b00      	cmp	r3, #0
90023212:	f340 81a5 	ble.w	90023560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90023216:	9e21      	ldr	r6, [sp, #132]	; 0x84
90023218:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002321a:	1436      	asrs	r6, r6, #16
9002321c:	ea4f 4323 	mov.w	r3, r3, asr #16
90023220:	d406      	bmi.n	90023230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023222:	4286      	cmp	r6, r0
90023224:	da04      	bge.n	90023230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023226:	2b00      	cmp	r3, #0
90023228:	db02      	blt.n	90023230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002322a:	42ab      	cmp	r3, r5
9002322c:	f2c0 8199 	blt.w	90023562 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90023230:	3601      	adds	r6, #1
90023232:	f100 8186 	bmi.w	90023542 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023236:	42b1      	cmp	r1, r6
90023238:	f2c0 8183 	blt.w	90023542 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002323c:	3301      	adds	r3, #1
9002323e:	f100 8180 	bmi.w	90023542 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023242:	429a      	cmp	r2, r3
90023244:	f2c0 817d 	blt.w	90023542 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023248:	9b08      	ldr	r3, [sp, #32]
9002324a:	f64f 061f 	movw	r6, #63519	; 0xf81f
9002324e:	9f09      	ldr	r7, [sp, #36]	; 0x24
90023250:	9313      	str	r3, [sp, #76]	; 0x4c
90023252:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90023254:	2b00      	cmp	r3, #0
90023256:	f340 81a6 	ble.w	900235a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
9002325a:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002325c:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002325e:	1418      	asrs	r0, r3, #16
90023260:	9b21      	ldr	r3, [sp, #132]	; 0x84
90023262:	142d      	asrs	r5, r5, #16
90023264:	f3c3 3103 	ubfx	r1, r3, #12, #4
90023268:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002326a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9002326e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023270:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90023274:	f100 81fa 	bmi.w	9002366c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023278:	f102 3eff 	add.w	lr, r2, #4294967295
9002327c:	4575      	cmp	r5, lr
9002327e:	f280 81f5 	bge.w	9002366c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023282:	2800      	cmp	r0, #0
90023284:	f2c0 81f2 	blt.w	9002366c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023288:	f103 3eff 	add.w	lr, r3, #4294967295
9002328c:	4570      	cmp	r0, lr
9002328e:	f280 81ed 	bge.w	9002366c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023292:	b212      	sxth	r2, r2
90023294:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90023296:	fa1f fe81 	uxth.w	lr, r1
9002329a:	fb00 5002 	mla	r0, r0, r2, r5
9002329e:	ea4f 150e 	mov.w	r5, lr, lsl #4
900232a2:	eb03 0a00 	add.w	sl, r3, r0
900232a6:	f813 9000 	ldrb.w	r9, [r3, r0]
900232aa:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
900232ae:	f89a 8001 	ldrb.w	r8, [sl, #1]
900232b2:	b29b      	uxth	r3, r3
900232b4:	f1bc 0f00 	cmp.w	ip, #0
900232b8:	f000 81bb 	beq.w	90023632 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
900232bc:	f81a 4002 	ldrb.w	r4, [sl, r2]
900232c0:	eb0a 0b02 	add.w	fp, sl, r2
900232c4:	fa1f fa8c 	uxth.w	sl, ip
900232c8:	940d      	str	r4, [sp, #52]	; 0x34
900232ca:	fb0a fe0e 	mul.w	lr, sl, lr
900232ce:	f89b 4001 	ldrb.w	r4, [fp, #1]
900232d2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
900232d6:	eba5 050e 	sub.w	r5, r5, lr
900232da:	940e      	str	r4, [sp, #56]	; 0x38
900232dc:	fa1f fa8a 	uxth.w	sl, sl
900232e0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900232e2:	b2ad      	uxth	r5, r5
900232e4:	eba3 030a 	sub.w	r3, r3, sl
900232e8:	fb08 f505 	mul.w	r5, r8, r5
900232ec:	b29b      	uxth	r3, r3
900232ee:	fb09 5303 	mla	r3, r9, r3, r5
900232f2:	fb0a 3304 	mla	r3, sl, r4, r3
900232f6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900232f8:	fb0e 3304 	mla	r3, lr, r4, r3
900232fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023300:	2b00      	cmp	r3, #0
90023302:	f000 8111 	beq.w	90023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023306:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023308:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002330c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90023310:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90023314:	f000 8192 	beq.w	9002363c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90023318:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002331c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90023320:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023324:	fb0a fe0e 	mul.w	lr, sl, lr
90023328:	fb09 f000 	mul.w	r0, r9, r0
9002332c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90023330:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90023334:	f100 0b20 	add.w	fp, r0, #32
90023338:	44ce      	add	lr, r9
9002333a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9002333e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90023342:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023346:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002334a:	ea4e 0909 	orr.w	r9, lr, r9
9002334e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90023352:	8868      	ldrh	r0, [r5, #2]
90023354:	d019      	beq.n	9002338a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90023356:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002335a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002335e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023362:	fb0a fe0e 	mul.w	lr, sl, lr
90023366:	fb08 f800 	mul.w	r8, r8, r0
9002336a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9002336e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90023372:	f108 0b20 	add.w	fp, r8, #32
90023376:	4486      	add	lr, r0
90023378:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
9002337c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90023380:	0a00      	lsrs	r0, r0, #8
90023382:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023386:	ea4e 0000 	orr.w	r0, lr, r0
9002338a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002338e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90023392:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023396:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002339a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9002339e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900233a2:	ea4e 0909 	orr.w	r9, lr, r9
900233a6:	ea4a 0000 	orr.w	r0, sl, r0
900233aa:	f1bc 0f00 	cmp.w	ip, #0
900233ae:	f000 8147 	beq.w	90023640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
900233b2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
900233b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900233b8:	3a01      	subs	r2, #1
900233ba:	2cff      	cmp	r4, #255	; 0xff
900233bc:	ea4f 0242 	mov.w	r2, r2, lsl #1
900233c0:	f102 0202 	add.w	r2, r2, #2
900233c4:	eb05 0e02 	add.w	lr, r5, r2
900233c8:	5aaa      	ldrh	r2, [r5, r2]
900233ca:	d018      	beq.n	900233fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
900233cc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
900233d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900233d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
900233d8:	fb04 fa02 	mul.w	sl, r4, r2
900233dc:	fb08 f805 	mul.w	r8, r8, r5
900233e0:	f10a 0520 	add.w	r5, sl, #32
900233e4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900233e8:	f608 0801 	addw	r8, r8, #2049	; 0x801
900233ec:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900233f0:	4442      	add	r2, r8
900233f2:	0a2d      	lsrs	r5, r5, #8
900233f4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900233f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900233fc:	432a      	orrs	r2, r5
900233fe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023400:	f8be 5002 	ldrh.w	r5, [lr, #2]
90023404:	2cff      	cmp	r4, #255	; 0xff
90023406:	d01a      	beq.n	9002343e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90023408:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
9002340c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90023410:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023414:	fb04 fa05 	mul.w	sl, r4, r5
90023418:	fb08 f80e 	mul.w	r8, r8, lr
9002341c:	f10a 0e20 	add.w	lr, sl, #32
90023420:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90023424:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023428:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
9002342c:	4445      	add	r5, r8
9002342e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023432:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90023436:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
9002343a:	ea45 050e 	orr.w	r5, r5, lr
9002343e:	fb1c fe01 	smulbb	lr, ip, r1
90023442:	f1cc 0810 	rsb	r8, ip, #16
90023446:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002344a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002344e:	ea4f 0eee 	mov.w	lr, lr, asr #3
90023452:	eba8 0801 	sub.w	r8, r8, r1
90023456:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9002345a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002345e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90023462:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90023466:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9002346a:	ea4a 0202 	orr.w	r2, sl, r2
9002346e:	4341      	muls	r1, r0
90023470:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90023474:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90023478:	fb09 1108 	mla	r1, r9, r8, r1
9002347c:	ea4b 0505 	orr.w	r5, fp, r5
90023480:	fb0c 1102 	mla	r1, ip, r2, r1
90023484:	fb0e 1e05 	mla	lr, lr, r5, r1
90023488:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002348c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023490:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023494:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90023498:	ea42 0e0e 	orr.w	lr, r2, lr
9002349c:	fa1f f28e 	uxth.w	r2, lr
900234a0:	2bff      	cmp	r3, #255	; 0xff
900234a2:	d103      	bne.n	900234ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900234a4:	9912      	ldr	r1, [sp, #72]	; 0x48
900234a6:	29ff      	cmp	r1, #255	; 0xff
900234a8:	f000 80de 	beq.w	90023668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
900234ac:	990a      	ldr	r1, [sp, #40]	; 0x28
900234ae:	1215      	asrs	r5, r2, #8
900234b0:	8838      	ldrh	r0, [r7, #0]
900234b2:	434b      	muls	r3, r1
900234b4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900234b8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900234ba:	f103 0c01 	add.w	ip, r3, #1
900234be:	eb0c 2323 	add.w	r3, ip, r3, asr #8
900234c2:	ea6f 2323 	mvn.w	r3, r3, asr #8
900234c6:	fa5f fc83 	uxtb.w	ip, r3
900234ca:	1203      	asrs	r3, r0, #8
900234cc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900234d0:	fb13 f30c 	smulbb	r3, r3, ip
900234d4:	fb05 3501 	mla	r5, r5, r1, r3
900234d8:	10c3      	asrs	r3, r0, #3
900234da:	10d1      	asrs	r1, r2, #3
900234dc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900234e0:	00d2      	lsls	r2, r2, #3
900234e2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900234e6:	b2ad      	uxth	r5, r5
900234e8:	fb13 f30c 	smulbb	r3, r3, ip
900234ec:	b2d2      	uxtb	r2, r2
900234ee:	fb01 3104 	mla	r1, r1, r4, r3
900234f2:	00c3      	lsls	r3, r0, #3
900234f4:	b2db      	uxtb	r3, r3
900234f6:	b289      	uxth	r1, r1
900234f8:	fb13 f30c 	smulbb	r3, r3, ip
900234fc:	fb02 3304 	mla	r3, r2, r4, r3
90023500:	b29a      	uxth	r2, r3
90023502:	1c6b      	adds	r3, r5, #1
90023504:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023508:	1c53      	adds	r3, r2, #1
9002350a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002350e:	1c4a      	adds	r2, r1, #1
90023510:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90023514:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023518:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002351c:	0949      	lsrs	r1, r1, #5
9002351e:	432b      	orrs	r3, r5
90023520:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90023524:	430b      	orrs	r3, r1
90023526:	803b      	strh	r3, [r7, #0]
90023528:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002352a:	3702      	adds	r7, #2
9002352c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002352e:	4413      	add	r3, r2
90023530:	9a22      	ldr	r2, [sp, #136]	; 0x88
90023532:	9321      	str	r3, [sp, #132]	; 0x84
90023534:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023536:	441a      	add	r2, r3
90023538:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002353a:	3b01      	subs	r3, #1
9002353c:	9222      	str	r2, [sp, #136]	; 0x88
9002353e:	9313      	str	r3, [sp, #76]	; 0x4c
90023540:	e687      	b.n	90023252 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90023542:	9b21      	ldr	r3, [sp, #132]	; 0x84
90023544:	9e23      	ldr	r6, [sp, #140]	; 0x8c
90023546:	9c22      	ldr	r4, [sp, #136]	; 0x88
90023548:	4433      	add	r3, r6
9002354a:	9321      	str	r3, [sp, #132]	; 0x84
9002354c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002354e:	441c      	add	r4, r3
90023550:	9b08      	ldr	r3, [sp, #32]
90023552:	3b01      	subs	r3, #1
90023554:	9422      	str	r4, [sp, #136]	; 0x88
90023556:	9308      	str	r3, [sp, #32]
90023558:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002355a:	3302      	adds	r3, #2
9002355c:	9309      	str	r3, [sp, #36]	; 0x24
9002355e:	e656      	b.n	9002320e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90023560:	d028      	beq.n	900235b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90023562:	9b08      	ldr	r3, [sp, #32]
90023564:	9823      	ldr	r0, [sp, #140]	; 0x8c
90023566:	3b01      	subs	r3, #1
90023568:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002356a:	fb00 5003 	mla	r0, r0, r3, r5
9002356e:	1400      	asrs	r0, r0, #16
90023570:	f53f ae6a 	bmi.w	90023248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023574:	3901      	subs	r1, #1
90023576:	4288      	cmp	r0, r1
90023578:	f6bf ae66 	bge.w	90023248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002357c:	9924      	ldr	r1, [sp, #144]	; 0x90
9002357e:	9822      	ldr	r0, [sp, #136]	; 0x88
90023580:	fb01 0303 	mla	r3, r1, r3, r0
90023584:	141b      	asrs	r3, r3, #16
90023586:	f53f ae5f 	bmi.w	90023248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002358a:	3a01      	subs	r2, #1
9002358c:	4293      	cmp	r3, r2
9002358e:	f6bf ae5b 	bge.w	90023248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023592:	9b08      	ldr	r3, [sp, #32]
90023594:	f64f 061f 	movw	r6, #63519	; 0xf81f
90023598:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9002359c:	9313      	str	r3, [sp, #76]	; 0x4c
9002359e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900235a0:	2b00      	cmp	r3, #0
900235a2:	f300 8082 	bgt.w	900236aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
900235a6:	9b08      	ldr	r3, [sp, #32]
900235a8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900235ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
900235ae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900235b2:	9309      	str	r3, [sp, #36]	; 0x24
900235b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
900235b6:	2b00      	cmp	r3, #0
900235b8:	f340 81ef 	ble.w	9002399a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900235bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900235c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900235c2:	ee30 0a04 	vadd.f32	s0, s0, s8
900235c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900235ca:	eef0 6a62 	vmov.f32	s13, s5
900235ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
900235d2:	ee31 1a05 	vadd.f32	s2, s2, s10
900235d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900235da:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
900235de:	eef0 6a43 	vmov.f32	s13, s6
900235e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900235e6:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
900235ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
900235ee:	ee61 7a27 	vmul.f32	s15, s2, s15
900235f2:	ee77 2a62 	vsub.f32	s5, s14, s5
900235f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900235fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900235fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023602:	ee12 2a90 	vmov	r2, s5
90023606:	eef0 2a47 	vmov.f32	s5, s14
9002360a:	fb92 f3f3 	sdiv	r3, r2, r3
9002360e:	ee13 2a10 	vmov	r2, s6
90023612:	9323      	str	r3, [sp, #140]	; 0x8c
90023614:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023616:	eeb0 3a67 	vmov.f32	s6, s15
9002361a:	fb92 f3f3 	sdiv	r3, r2, r3
9002361e:	9324      	str	r3, [sp, #144]	; 0x90
90023620:	9b11      	ldr	r3, [sp, #68]	; 0x44
90023622:	9a14      	ldr	r2, [sp, #80]	; 0x50
90023624:	3b01      	subs	r3, #1
90023626:	9311      	str	r3, [sp, #68]	; 0x44
90023628:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002362a:	bf08      	it	eq
9002362c:	4613      	moveq	r3, r2
9002362e:	9308      	str	r3, [sp, #32]
90023630:	e5df      	b.n	900231f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90023632:	fb08 f505 	mul.w	r5, r8, r5
90023636:	fb09 5303 	mla	r3, r9, r3, r5
9002363a:	e65f      	b.n	900232fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
9002363c:	4681      	mov	r9, r0
9002363e:	e686      	b.n	9002334e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023640:	f1c1 0210 	rsb	r2, r1, #16
90023644:	4341      	muls	r1, r0
90023646:	fb09 1902 	mla	r9, r9, r2, r1
9002364a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002364e:	ea4f 5259 	mov.w	r2, r9, lsr #21
90023652:	ea4f 1959 	mov.w	r9, r9, lsr #5
90023656:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002365a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002365e:	ea42 0909 	orr.w	r9, r2, r9
90023662:	fa1f f289 	uxth.w	r2, r9
90023666:	e71b      	b.n	900234a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90023668:	803a      	strh	r2, [r7, #0]
9002366a:	e75d      	b.n	90023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002366c:	f115 0e01 	adds.w	lr, r5, #1
90023670:	f53f af5a 	bmi.w	90023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023674:	4572      	cmp	r2, lr
90023676:	f6ff af57 	blt.w	90023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002367a:	f110 0e01 	adds.w	lr, r0, #1
9002367e:	f53f af53 	bmi.w	90023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023682:	4573      	cmp	r3, lr
90023684:	f6ff af50 	blt.w	90023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023688:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002368a:	b21b      	sxth	r3, r3
9002368c:	b212      	sxth	r2, r2
9002368e:	9502      	str	r5, [sp, #8]
90023690:	9301      	str	r3, [sp, #4]
90023692:	9200      	str	r2, [sp, #0]
90023694:	e9cd 0103 	strd	r0, r1, [sp, #12]
90023698:	e9cd c405 	strd	ip, r4, [sp, #20]
9002369c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
900236a0:	4639      	mov	r1, r7
900236a2:	9815      	ldr	r0, [sp, #84]	; 0x54
900236a4:	f7ff fc02 	bl	90022eac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
900236a8:	e73e      	b.n	90023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900236aa:	9b21      	ldr	r3, [sp, #132]	; 0x84
900236ac:	f3c3 3203 	ubfx	r2, r3, #12, #4
900236b0:	9b22      	ldr	r3, [sp, #136]	; 0x88
900236b2:	f3c3 3503 	ubfx	r5, r3, #12, #4
900236b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900236b8:	fa1f fc82 	uxth.w	ip, r2
900236bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900236c0:	9b22      	ldr	r3, [sp, #136]	; 0x88
900236c2:	ea4f 100c 	mov.w	r0, ip, lsl #4
900236c6:	141f      	asrs	r7, r3, #16
900236c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
900236ca:	141b      	asrs	r3, r3, #16
900236cc:	fb01 3707 	mla	r7, r1, r7, r3
900236d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900236d2:	eb03 0a07 	add.w	sl, r3, r7
900236d6:	f813 9007 	ldrb.w	r9, [r3, r7]
900236da:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900236de:	f89a 8001 	ldrb.w	r8, [sl, #1]
900236e2:	b29b      	uxth	r3, r3
900236e4:	2d00      	cmp	r5, #0
900236e6:	f000 813d 	beq.w	90023964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
900236ea:	f81a 4001 	ldrb.w	r4, [sl, r1]
900236ee:	eb0a 0b01 	add.w	fp, sl, r1
900236f2:	fa1f fa85 	uxth.w	sl, r5
900236f6:	940f      	str	r4, [sp, #60]	; 0x3c
900236f8:	fb0a fc0c 	mul.w	ip, sl, ip
900236fc:	f89b 4001 	ldrb.w	r4, [fp, #1]
90023700:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90023704:	eba0 000c 	sub.w	r0, r0, ip
90023708:	9410      	str	r4, [sp, #64]	; 0x40
9002370a:	fa1f fa8a 	uxth.w	sl, sl
9002370e:	b280      	uxth	r0, r0
90023710:	eba3 030a 	sub.w	r3, r3, sl
90023714:	fb08 f000 	mul.w	r0, r8, r0
90023718:	b29b      	uxth	r3, r3
9002371a:	fb09 0303 	mla	r3, r9, r3, r0
9002371e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90023720:	fb0a 3300 	mla	r3, sl, r0, r3
90023724:	fb0c 3304 	mla	r3, ip, r4, r3
90023728:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002372c:	2b00      	cmp	r3, #0
9002372e:	f000 810b 	beq.w	90023948 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90023732:	980b      	ldr	r0, [sp, #44]	; 0x2c
90023734:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90023738:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002373a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002373e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90023742:	f000 8114 	beq.w	9002396e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90023746:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002374a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002374e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90023752:	fb0a fc0c 	mul.w	ip, sl, ip
90023756:	fb09 f707 	mul.w	r7, r9, r7
9002375a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002375e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90023762:	f107 0b20 	add.w	fp, r7, #32
90023766:	44cc      	add	ip, r9
90023768:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
9002376c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90023770:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023774:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90023778:	ea4c 0909 	orr.w	r9, ip, r9
9002377c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90023780:	8847      	ldrh	r7, [r0, #2]
90023782:	d019      	beq.n	900237b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90023784:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90023788:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002378c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90023790:	fb0a fc0c 	mul.w	ip, sl, ip
90023794:	fb08 f807 	mul.w	r8, r8, r7
90023798:	ea06 175c 	and.w	r7, r6, ip, lsr #5
9002379c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
900237a0:	f108 0b20 	add.w	fp, r8, #32
900237a4:	44bc      	add	ip, r7
900237a6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
900237aa:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900237ae:	0a3f      	lsrs	r7, r7, #8
900237b0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900237b4:	ea4c 0707 	orr.w	r7, ip, r7
900237b8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900237bc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900237c0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900237c4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900237c8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900237cc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900237d0:	ea4c 0909 	orr.w	r9, ip, r9
900237d4:	ea4a 0707 	orr.w	r7, sl, r7
900237d8:	2d00      	cmp	r5, #0
900237da:	f000 80ca 	beq.w	90023972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
900237de:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
900237e2:	3901      	subs	r1, #1
900237e4:	0049      	lsls	r1, r1, #1
900237e6:	3102      	adds	r1, #2
900237e8:	eb00 0c01 	add.w	ip, r0, r1
900237ec:	5a41      	ldrh	r1, [r0, r1]
900237ee:	980f      	ldr	r0, [sp, #60]	; 0x3c
900237f0:	28ff      	cmp	r0, #255	; 0xff
900237f2:	d019      	beq.n	90023828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
900237f4:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
900237f8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900237fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900237fe:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023802:	fb04 fa01 	mul.w	sl, r4, r1
90023806:	fb08 f800 	mul.w	r8, r8, r0
9002380a:	f10a 0020 	add.w	r0, sl, #32
9002380e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90023812:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023816:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002381a:	4441      	add	r1, r8
9002381c:	0a00      	lsrs	r0, r0, #8
9002381e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90023822:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023826:	4301      	orrs	r1, r0
90023828:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002382a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002382e:	2cff      	cmp	r4, #255	; 0xff
90023830:	d01a      	beq.n	90023868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90023832:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90023836:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002383a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002383e:	fb04 fa00 	mul.w	sl, r4, r0
90023842:	fb08 f80c 	mul.w	r8, r8, ip
90023846:	f10a 0c20 	add.w	ip, sl, #32
9002384a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002384e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023852:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90023856:	4440      	add	r0, r8
90023858:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002385c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90023860:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90023864:	ea40 000c 	orr.w	r0, r0, ip
90023868:	fb15 fc02 	smulbb	ip, r5, r2
9002386c:	f1c5 0810 	rsb	r8, r5, #16
90023870:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90023874:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90023878:	ea4f 0cec 	mov.w	ip, ip, asr #3
9002387c:	eba8 0802 	sub.w	r8, r8, r2
90023880:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90023884:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023888:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
9002388c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023890:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90023894:	ea4a 0101 	orr.w	r1, sl, r1
90023898:	437a      	muls	r2, r7
9002389a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002389e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900238a2:	fb09 2208 	mla	r2, r9, r8, r2
900238a6:	ea4b 0000 	orr.w	r0, fp, r0
900238aa:	fb05 2201 	mla	r2, r5, r1, r2
900238ae:	fb0c 2200 	mla	r2, ip, r0, r2
900238b2:	0d57      	lsrs	r7, r2, #21
900238b4:	0952      	lsrs	r2, r2, #5
900238b6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900238ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900238be:	433a      	orrs	r2, r7
900238c0:	2bff      	cmp	r3, #255	; 0xff
900238c2:	b292      	uxth	r2, r2
900238c4:	d102      	bne.n	900238cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900238c6:	9912      	ldr	r1, [sp, #72]	; 0x48
900238c8:	29ff      	cmp	r1, #255	; 0xff
900238ca:	d063      	beq.n	90023994 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
900238cc:	980a      	ldr	r0, [sp, #40]	; 0x28
900238ce:	1215      	asrs	r5, r2, #8
900238d0:	f8be 1000 	ldrh.w	r1, [lr]
900238d4:	4343      	muls	r3, r0
900238d6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900238d8:	10cf      	asrs	r7, r1, #3
900238da:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900238de:	1c58      	adds	r0, r3, #1
900238e0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900238e4:	eb00 2323 	add.w	r3, r0, r3, asr #8
900238e8:	1208      	asrs	r0, r1, #8
900238ea:	ea6f 2323 	mvn.w	r3, r3, asr #8
900238ee:	00c9      	lsls	r1, r1, #3
900238f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900238f4:	b2db      	uxtb	r3, r3
900238f6:	b2c9      	uxtb	r1, r1
900238f8:	fb10 f003 	smulbb	r0, r0, r3
900238fc:	fb11 f103 	smulbb	r1, r1, r3
90023900:	fb05 0504 	mla	r5, r5, r4, r0
90023904:	10d0      	asrs	r0, r2, #3
90023906:	fb17 f703 	smulbb	r7, r7, r3
9002390a:	00d2      	lsls	r2, r2, #3
9002390c:	b2ad      	uxth	r5, r5
9002390e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023912:	b2d2      	uxtb	r2, r2
90023914:	fb00 7004 	mla	r0, r0, r4, r7
90023918:	1c6b      	adds	r3, r5, #1
9002391a:	fb02 1204 	mla	r2, r2, r4, r1
9002391e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023922:	b292      	uxth	r2, r2
90023924:	b280      	uxth	r0, r0
90023926:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002392a:	1c57      	adds	r7, r2, #1
9002392c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90023930:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90023934:	433d      	orrs	r5, r7
90023936:	1c47      	adds	r7, r0, #1
90023938:	eb07 2710 	add.w	r7, r7, r0, lsr #8
9002393c:	097f      	lsrs	r7, r7, #5
9002393e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90023942:	433d      	orrs	r5, r7
90023944:	f8ae 5000 	strh.w	r5, [lr]
90023948:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002394a:	f10e 0e02 	add.w	lr, lr, #2
9002394e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90023950:	4413      	add	r3, r2
90023952:	9a22      	ldr	r2, [sp, #136]	; 0x88
90023954:	9321      	str	r3, [sp, #132]	; 0x84
90023956:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023958:	441a      	add	r2, r3
9002395a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002395c:	3b01      	subs	r3, #1
9002395e:	9222      	str	r2, [sp, #136]	; 0x88
90023960:	9313      	str	r3, [sp, #76]	; 0x4c
90023962:	e61c      	b.n	9002359e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90023964:	fb08 f000 	mul.w	r0, r8, r0
90023968:	fb09 0303 	mla	r3, r9, r3, r0
9002396c:	e6dc      	b.n	90023728 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
9002396e:	46b9      	mov	r9, r7
90023970:	e704      	b.n	9002377c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90023972:	f1c2 0110 	rsb	r1, r2, #16
90023976:	437a      	muls	r2, r7
90023978:	fb09 2901 	mla	r9, r9, r1, r2
9002397c:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023980:	ea4f 5059 	mov.w	r0, r9, lsr #21
90023984:	ea4f 1259 	mov.w	r2, r9, lsr #5
90023988:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002398c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023990:	4302      	orrs	r2, r0
90023992:	e795      	b.n	900238c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90023994:	f8ae 2000 	strh.w	r2, [lr]
90023998:	e7d6      	b.n	90023948 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
9002399a:	b017      	add	sp, #92	; 0x5c
9002399c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900239a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900239a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900239a4:	b085      	sub	sp, #20
900239a6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
900239aa:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
900239ae:	2800      	cmp	r0, #0
900239b0:	9103      	str	r1, [sp, #12]
900239b2:	fb00 7406 	mla	r4, r0, r6, r7
900239b6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
900239ba:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
900239be:	eb03 0544 	add.w	r5, r3, r4, lsl #1
900239c2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
900239c6:	eb02 0904 	add.w	r9, r2, r4
900239ca:	9501      	str	r5, [sp, #4]
900239cc:	f2c0 8141 	blt.w	90023c52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900239d0:	4583      	cmp	fp, r0
900239d2:	f340 813e 	ble.w	90023c52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900239d6:	2f00      	cmp	r7, #0
900239d8:	f2c0 8137 	blt.w	90023c4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900239dc:	42be      	cmp	r6, r7
900239de:	f340 8134 	ble.w	90023c4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900239e2:	f812 c004 	ldrb.w	ip, [r2, r4]
900239e6:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
900239ea:	f64f 041f 	movw	r4, #63519	; 0xf81f
900239ee:	ea4f 02ec 	mov.w	r2, ip, asr #3
900239f2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
900239f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900239fa:	4355      	muls	r5, r2
900239fc:	fb0c f203 	mul.w	r2, ip, r3
90023a00:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90023a04:	f605 0501 	addw	r5, r5, #2049	; 0x801
90023a08:	441d      	add	r5, r3
90023a0a:	f102 0320 	add.w	r3, r2, #32
90023a0e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023a12:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90023a16:	0a1b      	lsrs	r3, r3, #8
90023a18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023a1c:	431c      	orrs	r4, r3
90023a1e:	1c7b      	adds	r3, r7, #1
90023a20:	f100 811c 	bmi.w	90023c5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90023a24:	429e      	cmp	r6, r3
90023a26:	f340 8119 	ble.w	90023c5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90023a2a:	2900      	cmp	r1, #0
90023a2c:	f000 8119 	beq.w	90023c62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90023a30:	9a01      	ldr	r2, [sp, #4]
90023a32:	f899 3001 	ldrb.w	r3, [r9, #1]
90023a36:	8855      	ldrh	r5, [r2, #2]
90023a38:	ea4f 08e3 	mov.w	r8, r3, asr #3
90023a3c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90023a40:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90023a44:	fb08 f802 	mul.w	r8, r8, r2
90023a48:	f64f 021f 	movw	r2, #63519	; 0xf81f
90023a4c:	435d      	muls	r5, r3
90023a4e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90023a52:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023a56:	44d0      	add	r8, sl
90023a58:	f105 0a20 	add.w	sl, r5, #32
90023a5c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90023a60:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90023a64:	0a2d      	lsrs	r5, r5, #8
90023a66:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90023a6a:	432a      	orrs	r2, r5
90023a6c:	3001      	adds	r0, #1
90023a6e:	f100 80fe 	bmi.w	90023c6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90023a72:	4583      	cmp	fp, r0
90023a74:	f340 80fb 	ble.w	90023c6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90023a78:	f1be 0f00 	cmp.w	lr, #0
90023a7c:	f000 80fc 	beq.w	90023c78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90023a80:	2f00      	cmp	r7, #0
90023a82:	f2c0 80f1 	blt.w	90023c68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90023a86:	42be      	cmp	r6, r7
90023a88:	f340 80ee 	ble.w	90023c68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90023a8c:	9801      	ldr	r0, [sp, #4]
90023a8e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90023a92:	f819 5006 	ldrb.w	r5, [r9, r6]
90023a96:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90023a9a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90023a9e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90023aa2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90023aa6:	fb0a fa00 	mul.w	sl, sl, r0
90023aaa:	fb05 f808 	mul.w	r8, r5, r8
90023aae:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90023ab2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90023ab6:	4482      	add	sl, r0
90023ab8:	f108 0020 	add.w	r0, r8, #32
90023abc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023ac0:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90023ac4:	0a00      	lsrs	r0, r0, #8
90023ac6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023aca:	ea4b 0b00 	orr.w	fp, fp, r0
90023ace:	3701      	adds	r7, #1
90023ad0:	f100 80d7 	bmi.w	90023c82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90023ad4:	42be      	cmp	r6, r7
90023ad6:	f340 80d4 	ble.w	90023c82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90023ada:	2900      	cmp	r1, #0
90023adc:	f000 80d4 	beq.w	90023c88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90023ae0:	3601      	adds	r6, #1
90023ae2:	9801      	ldr	r0, [sp, #4]
90023ae4:	f819 7006 	ldrb.w	r7, [r9, r6]
90023ae8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90023aec:	ea4f 09e7 	mov.w	r9, r7, asr #3
90023af0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90023af4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023af8:	fb09 f906 	mul.w	r9, r9, r6
90023afc:	fb07 f800 	mul.w	r8, r7, r0
90023b00:	f64f 001f 	movw	r0, #63519	; 0xf81f
90023b04:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90023b08:	f609 0901 	addw	r9, r9, #2049	; 0x801
90023b0c:	44d1      	add	r9, sl
90023b0e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90023b12:	f108 0020 	add.w	r0, r8, #32
90023b16:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023b1a:	0a00      	lsrs	r0, r0, #8
90023b1c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023b20:	4330      	orrs	r0, r6
90023b22:	b28e      	uxth	r6, r1
90023b24:	fa1f f98e 	uxth.w	r9, lr
90023b28:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90023b2c:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90023b30:	fb06 f809 	mul.w	r8, r6, r9
90023b34:	0136      	lsls	r6, r6, #4
90023b36:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023b3a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90023b3e:	9601      	str	r6, [sp, #4]
90023b40:	ea4a 0404 	orr.w	r4, sl, r4
90023b44:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023b48:	fa1f f689 	uxth.w	r6, r9
90023b4c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023b50:	fb11 f90e 	smulbb	r9, r1, lr
90023b54:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023b58:	9602      	str	r6, [sp, #8]
90023b5a:	4626      	mov	r6, r4
90023b5c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90023b60:	f1ce 0410 	rsb	r4, lr, #16
90023b64:	ea4a 0202 	orr.w	r2, sl, r2
90023b68:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023b6c:	1a64      	subs	r4, r4, r1
90023b6e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90023b72:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023b76:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023b7a:	434a      	muls	r2, r1
90023b7c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90023b80:	ea4a 0000 	orr.w	r0, sl, r0
90023b84:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90023b88:	fb04 2406 	mla	r4, r4, r6, r2
90023b8c:	9903      	ldr	r1, [sp, #12]
90023b8e:	fb09 4200 	mla	r2, r9, r0, r4
90023b92:	ea4f 440b 	mov.w	r4, fp, lsl #16
90023b96:	9801      	ldr	r0, [sp, #4]
90023b98:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90023b9c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90023ba0:	8809      	ldrh	r1, [r1, #0]
90023ba2:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
90023ba6:	ea44 0b0b 	orr.w	fp, r4, fp
90023baa:	9c02      	ldr	r4, [sp, #8]
90023bac:	1b00      	subs	r0, r0, r4
90023bae:	9c01      	ldr	r4, [sp, #4]
90023bb0:	fb0e 2e0b 	mla	lr, lr, fp, r2
90023bb4:	eba4 0608 	sub.w	r6, r4, r8
90023bb8:	b280      	uxth	r0, r0
90023bba:	ea4f 525e 	mov.w	r2, lr, lsr #21
90023bbe:	b2b6      	uxth	r6, r6
90023bc0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023bc4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023bc8:	4373      	muls	r3, r6
90023bca:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90023bce:	fb0c 3300 	mla	r3, ip, r0, r3
90023bd2:	9802      	ldr	r0, [sp, #8]
90023bd4:	ea42 0e0e 	orr.w	lr, r2, lr
90023bd8:	fb00 3505 	mla	r5, r0, r5, r3
90023bdc:	120b      	asrs	r3, r1, #8
90023bde:	10c8      	asrs	r0, r1, #3
90023be0:	fb08 5707 	mla	r7, r8, r7, r5
90023be4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90023be8:	00c9      	lsls	r1, r1, #3
90023bea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023bee:	ea6f 2727 	mvn.w	r7, r7, asr #8
90023bf2:	fa1f f28e 	uxth.w	r2, lr
90023bf6:	b2c9      	uxtb	r1, r1
90023bf8:	b2ff      	uxtb	r7, r7
90023bfa:	437b      	muls	r3, r7
90023bfc:	4378      	muls	r0, r7
90023bfe:	434f      	muls	r7, r1
90023c00:	1c59      	adds	r1, r3, #1
90023c02:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90023c06:	1213      	asrs	r3, r2, #8
90023c08:	f023 0307 	bic.w	r3, r3, #7
90023c0c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90023c10:	1c41      	adds	r1, r0, #1
90023c12:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90023c16:	10d1      	asrs	r1, r2, #3
90023c18:	021b      	lsls	r3, r3, #8
90023c1a:	f021 0103 	bic.w	r1, r1, #3
90023c1e:	00d2      	lsls	r2, r2, #3
90023c20:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90023c24:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90023c28:	00c9      	lsls	r1, r1, #3
90023c2a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90023c2e:	430b      	orrs	r3, r1
90023c30:	1c79      	adds	r1, r7, #1
90023c32:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90023c36:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90023c3a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90023c3e:	431a      	orrs	r2, r3
90023c40:	9b03      	ldr	r3, [sp, #12]
90023c42:	801a      	strh	r2, [r3, #0]
90023c44:	b005      	add	sp, #20
90023c46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023c4a:	f04f 0c00 	mov.w	ip, #0
90023c4e:	4664      	mov	r4, ip
90023c50:	e6e5      	b.n	90023a1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90023c52:	2300      	movs	r3, #0
90023c54:	469c      	mov	ip, r3
90023c56:	461a      	mov	r2, r3
90023c58:	461c      	mov	r4, r3
90023c5a:	e707      	b.n	90023a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90023c5c:	2300      	movs	r3, #0
90023c5e:	461a      	mov	r2, r3
90023c60:	e704      	b.n	90023a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90023c62:	460b      	mov	r3, r1
90023c64:	460a      	mov	r2, r1
90023c66:	e701      	b.n	90023a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90023c68:	2500      	movs	r5, #0
90023c6a:	46ab      	mov	fp, r5
90023c6c:	e72f      	b.n	90023ace <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90023c6e:	2700      	movs	r7, #0
90023c70:	463d      	mov	r5, r7
90023c72:	4638      	mov	r0, r7
90023c74:	46bb      	mov	fp, r7
90023c76:	e754      	b.n	90023b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90023c78:	4677      	mov	r7, lr
90023c7a:	4675      	mov	r5, lr
90023c7c:	4670      	mov	r0, lr
90023c7e:	46f3      	mov	fp, lr
90023c80:	e74f      	b.n	90023b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90023c82:	2700      	movs	r7, #0
90023c84:	4638      	mov	r0, r7
90023c86:	e74c      	b.n	90023b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90023c88:	460f      	mov	r7, r1
90023c8a:	4608      	mov	r0, r1
90023c8c:	e749      	b.n	90023b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90023c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023c94:	b093      	sub	sp, #76	; 0x4c
90023c96:	9210      	str	r2, [sp, #64]	; 0x40
90023c98:	9a21      	ldr	r2, [sp, #132]	; 0x84
90023c9a:	9011      	str	r0, [sp, #68]	; 0x44
90023c9c:	910e      	str	r1, [sp, #56]	; 0x38
90023c9e:	6850      	ldr	r0, [r2, #4]
90023ca0:	9306      	str	r3, [sp, #24]
90023ca2:	6812      	ldr	r2, [r2, #0]
90023ca4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90023ca8:	fb00 1303 	mla	r3, r0, r3, r1
90023cac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023cb0:	9307      	str	r3, [sp, #28]
90023cb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023cb4:	681b      	ldr	r3, [r3, #0]
90023cb6:	9308      	str	r3, [sp, #32]
90023cb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023cba:	685b      	ldr	r3, [r3, #4]
90023cbc:	9309      	str	r3, [sp, #36]	; 0x24
90023cbe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90023cc0:	2b00      	cmp	r3, #0
90023cc2:	dc03      	bgt.n	90023ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90023cc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
90023cc6:	2b00      	cmp	r3, #0
90023cc8:	f340 83b6 	ble.w	90024438 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90023ccc:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023cce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023cd2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023cd6:	1e48      	subs	r0, r1, #1
90023cd8:	1e55      	subs	r5, r2, #1
90023cda:	9b06      	ldr	r3, [sp, #24]
90023cdc:	2b00      	cmp	r3, #0
90023cde:	f340 8165 	ble.w	90023fac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90023ce2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
90023ce4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023ce6:	1436      	asrs	r6, r6, #16
90023ce8:	ea4f 4323 	mov.w	r3, r3, asr #16
90023cec:	d406      	bmi.n	90023cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023cee:	4286      	cmp	r6, r0
90023cf0:	da04      	bge.n	90023cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023cf2:	2b00      	cmp	r3, #0
90023cf4:	db02      	blt.n	90023cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023cf6:	42ab      	cmp	r3, r5
90023cf8:	f2c0 8159 	blt.w	90023fae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90023cfc:	3601      	adds	r6, #1
90023cfe:	f100 8146 	bmi.w	90023f8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90023d02:	42b1      	cmp	r1, r6
90023d04:	f2c0 8143 	blt.w	90023f8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90023d08:	3301      	adds	r3, #1
90023d0a:	f100 8140 	bmi.w	90023f8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90023d0e:	429a      	cmp	r2, r3
90023d10:	f2c0 813d 	blt.w	90023f8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90023d14:	9b06      	ldr	r3, [sp, #24]
90023d16:	f64f 061f 	movw	r6, #63519	; 0xf81f
90023d1a:	9f07      	ldr	r7, [sp, #28]
90023d1c:	930f      	str	r3, [sp, #60]	; 0x3c
90023d1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90023d20:	2b00      	cmp	r3, #0
90023d22:	f340 8166 	ble.w	90023ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90023d26:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023d28:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90023d2a:	1418      	asrs	r0, r3, #16
90023d2c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90023d2e:	142d      	asrs	r5, r5, #16
90023d30:	f3c3 3103 	ubfx	r1, r3, #12, #4
90023d34:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023d36:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90023d3a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023d3c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90023d40:	f100 81f0 	bmi.w	90024124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023d44:	f102 3eff 	add.w	lr, r2, #4294967295
90023d48:	4575      	cmp	r5, lr
90023d4a:	f280 81eb 	bge.w	90024124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023d4e:	2800      	cmp	r0, #0
90023d50:	f2c0 81e8 	blt.w	90024124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023d54:	f103 3eff 	add.w	lr, r3, #4294967295
90023d58:	4570      	cmp	r0, lr
90023d5a:	f280 81e3 	bge.w	90024124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023d5e:	b212      	sxth	r2, r2
90023d60:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023d62:	fa1f fe81 	uxth.w	lr, r1
90023d66:	fb00 5002 	mla	r0, r0, r2, r5
90023d6a:	ea4f 150e 	mov.w	r5, lr, lsl #4
90023d6e:	eb03 0a00 	add.w	sl, r3, r0
90023d72:	f813 9000 	ldrb.w	r9, [r3, r0]
90023d76:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
90023d7a:	f89a 8001 	ldrb.w	r8, [sl, #1]
90023d7e:	b29b      	uxth	r3, r3
90023d80:	f1bc 0f00 	cmp.w	ip, #0
90023d84:	f000 817b 	beq.w	9002407e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90023d88:	f81a 4002 	ldrb.w	r4, [sl, r2]
90023d8c:	eb0a 0b02 	add.w	fp, sl, r2
90023d90:	fa1f fa8c 	uxth.w	sl, ip
90023d94:	940a      	str	r4, [sp, #40]	; 0x28
90023d96:	fb0a fe0e 	mul.w	lr, sl, lr
90023d9a:	f89b 4001 	ldrb.w	r4, [fp, #1]
90023d9e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90023da2:	eba5 050e 	sub.w	r5, r5, lr
90023da6:	940b      	str	r4, [sp, #44]	; 0x2c
90023da8:	fa1f fa8a 	uxth.w	sl, sl
90023dac:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023dae:	b2ad      	uxth	r5, r5
90023db0:	eba3 030a 	sub.w	r3, r3, sl
90023db4:	fb08 f505 	mul.w	r5, r8, r5
90023db8:	b29b      	uxth	r3, r3
90023dba:	fb09 5303 	mla	r3, r9, r3, r5
90023dbe:	fb0a 3304 	mla	r3, sl, r4, r3
90023dc2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023dc4:	fb0e 3304 	mla	r3, lr, r4, r3
90023dc8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023dcc:	2b00      	cmp	r3, #0
90023dce:	f000 80d1 	beq.w	90023f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023dd2:	9c08      	ldr	r4, [sp, #32]
90023dd4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90023dd8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90023ddc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90023de0:	f000 8152 	beq.w	90024088 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90023de4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90023de8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90023dec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023df0:	fb0a fe0e 	mul.w	lr, sl, lr
90023df4:	fb09 f000 	mul.w	r0, r9, r0
90023df8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90023dfc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90023e00:	f100 0b20 	add.w	fp, r0, #32
90023e04:	44ce      	add	lr, r9
90023e06:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90023e0a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90023e0e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023e12:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90023e16:	ea4e 0909 	orr.w	r9, lr, r9
90023e1a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90023e1e:	8868      	ldrh	r0, [r5, #2]
90023e20:	d019      	beq.n	90023e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90023e22:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90023e26:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90023e2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023e2e:	fb0a fe0e 	mul.w	lr, sl, lr
90023e32:	fb08 f800 	mul.w	r8, r8, r0
90023e36:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90023e3a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90023e3e:	f108 0b20 	add.w	fp, r8, #32
90023e42:	4486      	add	lr, r0
90023e44:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90023e48:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90023e4c:	0a00      	lsrs	r0, r0, #8
90023e4e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023e52:	ea4e 0000 	orr.w	r0, lr, r0
90023e56:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90023e5a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90023e5e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023e62:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023e66:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90023e6a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023e6e:	ea4e 0909 	orr.w	r9, lr, r9
90023e72:	ea4a 0000 	orr.w	r0, sl, r0
90023e76:	f1bc 0f00 	cmp.w	ip, #0
90023e7a:	f000 8107 	beq.w	9002408c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90023e7e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90023e82:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023e84:	3a01      	subs	r2, #1
90023e86:	2cff      	cmp	r4, #255	; 0xff
90023e88:	ea4f 0242 	mov.w	r2, r2, lsl #1
90023e8c:	f102 0202 	add.w	r2, r2, #2
90023e90:	eb05 0e02 	add.w	lr, r5, r2
90023e94:	5aaa      	ldrh	r2, [r5, r2]
90023e96:	d018      	beq.n	90023eca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90023e98:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90023e9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023ea0:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023ea4:	fb04 fa02 	mul.w	sl, r4, r2
90023ea8:	fb08 f805 	mul.w	r8, r8, r5
90023eac:	f10a 0520 	add.w	r5, sl, #32
90023eb0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90023eb4:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023eb8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90023ebc:	4442      	add	r2, r8
90023ebe:	0a2d      	lsrs	r5, r5, #8
90023ec0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90023ec4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90023ec8:	432a      	orrs	r2, r5
90023eca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023ecc:	f8be 5002 	ldrh.w	r5, [lr, #2]
90023ed0:	2cff      	cmp	r4, #255	; 0xff
90023ed2:	d01a      	beq.n	90023f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90023ed4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90023ed8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90023edc:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023ee0:	fb04 fa05 	mul.w	sl, r4, r5
90023ee4:	fb08 f80e 	mul.w	r8, r8, lr
90023ee8:	f10a 0e20 	add.w	lr, sl, #32
90023eec:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90023ef0:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023ef4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90023ef8:	4445      	add	r5, r8
90023efa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023efe:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90023f02:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90023f06:	ea45 050e 	orr.w	r5, r5, lr
90023f0a:	fb1c fe01 	smulbb	lr, ip, r1
90023f0e:	f1cc 0810 	rsb	r8, ip, #16
90023f12:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023f16:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023f1a:	ea4f 0eee 	mov.w	lr, lr, asr #3
90023f1e:	eba8 0801 	sub.w	r8, r8, r1
90023f22:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90023f26:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023f2a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90023f2e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90023f32:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90023f36:	ea4a 0202 	orr.w	r2, sl, r2
90023f3a:	4341      	muls	r1, r0
90023f3c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90023f40:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90023f44:	fb09 1108 	mla	r1, r9, r8, r1
90023f48:	ea4b 0505 	orr.w	r5, fp, r5
90023f4c:	fb0c 1102 	mla	r1, ip, r2, r1
90023f50:	fb0e 1e05 	mla	lr, lr, r5, r1
90023f54:	ea4f 525e 	mov.w	r2, lr, lsr #21
90023f58:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023f5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023f60:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90023f64:	ea42 0e0e 	orr.w	lr, r2, lr
90023f68:	fa1f f28e 	uxth.w	r2, lr
90023f6c:	2bff      	cmp	r3, #255	; 0xff
90023f6e:	f040 80a1 	bne.w	900240b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90023f72:	803a      	strh	r2, [r7, #0]
90023f74:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90023f76:	3702      	adds	r7, #2
90023f78:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90023f7a:	4413      	add	r3, r2
90023f7c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90023f7e:	931d      	str	r3, [sp, #116]	; 0x74
90023f80:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023f82:	441a      	add	r2, r3
90023f84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90023f86:	3b01      	subs	r3, #1
90023f88:	921e      	str	r2, [sp, #120]	; 0x78
90023f8a:	930f      	str	r3, [sp, #60]	; 0x3c
90023f8c:	e6c7      	b.n	90023d1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023f8e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90023f90:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90023f92:	9c1e      	ldr	r4, [sp, #120]	; 0x78
90023f94:	4433      	add	r3, r6
90023f96:	931d      	str	r3, [sp, #116]	; 0x74
90023f98:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023f9a:	441c      	add	r4, r3
90023f9c:	9b06      	ldr	r3, [sp, #24]
90023f9e:	3b01      	subs	r3, #1
90023fa0:	941e      	str	r4, [sp, #120]	; 0x78
90023fa2:	9306      	str	r3, [sp, #24]
90023fa4:	9b07      	ldr	r3, [sp, #28]
90023fa6:	3302      	adds	r3, #2
90023fa8:	9307      	str	r3, [sp, #28]
90023faa:	e696      	b.n	90023cda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023fac:	d028      	beq.n	90024000 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023fae:	9b06      	ldr	r3, [sp, #24]
90023fb0:	981f      	ldr	r0, [sp, #124]	; 0x7c
90023fb2:	3b01      	subs	r3, #1
90023fb4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90023fb6:	fb00 5003 	mla	r0, r0, r3, r5
90023fba:	1400      	asrs	r0, r0, #16
90023fbc:	f53f aeaa 	bmi.w	90023d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023fc0:	3901      	subs	r1, #1
90023fc2:	4288      	cmp	r0, r1
90023fc4:	f6bf aea6 	bge.w	90023d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023fc8:	9920      	ldr	r1, [sp, #128]	; 0x80
90023fca:	981e      	ldr	r0, [sp, #120]	; 0x78
90023fcc:	fb01 0303 	mla	r3, r1, r3, r0
90023fd0:	141b      	asrs	r3, r3, #16
90023fd2:	f53f ae9f 	bmi.w	90023d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023fd6:	3a01      	subs	r2, #1
90023fd8:	4293      	cmp	r3, r2
90023fda:	f6bf ae9b 	bge.w	90023d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023fde:	9b06      	ldr	r3, [sp, #24]
90023fe0:	f64f 061f 	movw	r6, #63519	; 0xf81f
90023fe4:	f8dd e01c 	ldr.w	lr, [sp, #28]
90023fe8:	930f      	str	r3, [sp, #60]	; 0x3c
90023fea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90023fec:	2b00      	cmp	r3, #0
90023fee:	f300 80b6 	bgt.w	9002415e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90023ff2:	9b06      	ldr	r3, [sp, #24]
90023ff4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023ff8:	9b07      	ldr	r3, [sp, #28]
90023ffa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023ffe:	9307      	str	r3, [sp, #28]
90024000:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90024002:	2b00      	cmp	r3, #0
90024004:	f340 8218 	ble.w	90024438 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90024008:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002400c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002400e:	ee30 0a04 	vadd.f32	s0, s0, s8
90024012:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024016:	eef0 6a62 	vmov.f32	s13, s5
9002401a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002401e:	ee31 1a05 	vadd.f32	s2, s2, s10
90024022:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024026:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
9002402a:	eef0 6a43 	vmov.f32	s13, s6
9002402e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024032:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
90024036:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002403a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002403e:	ee77 2a62 	vsub.f32	s5, s14, s5
90024042:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024046:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002404a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002404e:	ee12 2a90 	vmov	r2, s5
90024052:	eef0 2a47 	vmov.f32	s5, s14
90024056:	fb92 f3f3 	sdiv	r3, r2, r3
9002405a:	ee13 2a10 	vmov	r2, s6
9002405e:	931f      	str	r3, [sp, #124]	; 0x7c
90024060:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024062:	eeb0 3a67 	vmov.f32	s6, s15
90024066:	fb92 f3f3 	sdiv	r3, r2, r3
9002406a:	9320      	str	r3, [sp, #128]	; 0x80
9002406c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002406e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90024070:	3b01      	subs	r3, #1
90024072:	930e      	str	r3, [sp, #56]	; 0x38
90024074:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024076:	bf08      	it	eq
90024078:	4613      	moveq	r3, r2
9002407a:	9306      	str	r3, [sp, #24]
9002407c:	e61f      	b.n	90023cbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9002407e:	fb08 f505 	mul.w	r5, r8, r5
90024082:	fb09 5303 	mla	r3, r9, r3, r5
90024086:	e69f      	b.n	90023dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90024088:	4681      	mov	r9, r0
9002408a:	e6c6      	b.n	90023e1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
9002408c:	f1c1 0210 	rsb	r2, r1, #16
90024090:	4341      	muls	r1, r0
90024092:	fb09 1902 	mla	r9, r9, r2, r1
90024096:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002409a:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002409e:	ea4f 1959 	mov.w	r9, r9, lsr #5
900240a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900240a6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900240aa:	ea42 0909 	orr.w	r9, r2, r9
900240ae:	fa1f f289 	uxth.w	r2, r9
900240b2:	e75b      	b.n	90023f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
900240b4:	f8b7 c000 	ldrh.w	ip, [r7]
900240b8:	43db      	mvns	r3, r3
900240ba:	ea4f 202c 	mov.w	r0, ip, asr #8
900240be:	fa5f fe83 	uxtb.w	lr, r3
900240c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900240c6:	ea4f 05ec 	mov.w	r5, ip, asr #3
900240ca:	ea4f 03cc 	mov.w	r3, ip, lsl #3
900240ce:	fb00 f00e 	mul.w	r0, r0, lr
900240d2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
900240d6:	b2db      	uxtb	r3, r3
900240d8:	1c41      	adds	r1, r0, #1
900240da:	fb05 f50e 	mul.w	r5, r5, lr
900240de:	fb03 f30e 	mul.w	r3, r3, lr
900240e2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900240e6:	1211      	asrs	r1, r2, #8
900240e8:	f021 0107 	bic.w	r1, r1, #7
900240ec:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900240f0:	48d3      	ldr	r0, [pc, #844]	; (90024440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900240f2:	b2c9      	uxtb	r1, r1
900240f4:	ea00 2001 	and.w	r0, r0, r1, lsl #8
900240f8:	1c69      	adds	r1, r5, #1
900240fa:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900240fe:	10d1      	asrs	r1, r2, #3
90024100:	00d2      	lsls	r2, r2, #3
90024102:	f021 0103 	bic.w	r1, r1, #3
90024106:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002410a:	00c9      	lsls	r1, r1, #3
9002410c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024110:	4301      	orrs	r1, r0
90024112:	1c58      	adds	r0, r3, #1
90024114:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90024118:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9002411c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024120:	430a      	orrs	r2, r1
90024122:	e726      	b.n	90023f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90024124:	f115 0e01 	adds.w	lr, r5, #1
90024128:	f53f af24 	bmi.w	90023f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002412c:	4572      	cmp	r2, lr
9002412e:	f6ff af21 	blt.w	90023f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024132:	f110 0e01 	adds.w	lr, r0, #1
90024136:	f53f af1d 	bmi.w	90023f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002413a:	4573      	cmp	r3, lr
9002413c:	f6ff af1a 	blt.w	90023f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024140:	b21b      	sxth	r3, r3
90024142:	b212      	sxth	r2, r2
90024144:	9301      	str	r3, [sp, #4]
90024146:	9200      	str	r2, [sp, #0]
90024148:	e9cd 1c04 	strd	r1, ip, [sp, #16]
9002414c:	e9cd 5002 	strd	r5, r0, [sp, #8]
90024150:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90024154:	4639      	mov	r1, r7
90024156:	9811      	ldr	r0, [sp, #68]	; 0x44
90024158:	f7ff fc22 	bl	900239a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9002415c:	e70a      	b.n	90023f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002415e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90024160:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024164:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90024166:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002416a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002416c:	fa1f fc82 	uxth.w	ip, r2
90024170:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024174:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90024176:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002417a:	141f      	asrs	r7, r3, #16
9002417c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002417e:	141b      	asrs	r3, r3, #16
90024180:	fb01 3707 	mla	r7, r1, r7, r3
90024184:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024186:	eb03 0a07 	add.w	sl, r3, r7
9002418a:	f813 9007 	ldrb.w	r9, [r3, r7]
9002418e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90024192:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024196:	b29b      	uxth	r3, r3
90024198:	2d00      	cmp	r5, #0
9002419a:	f000 80fe 	beq.w	9002439a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
9002419e:	f81a 4001 	ldrb.w	r4, [sl, r1]
900241a2:	eb0a 0b01 	add.w	fp, sl, r1
900241a6:	fa1f fa85 	uxth.w	sl, r5
900241aa:	940c      	str	r4, [sp, #48]	; 0x30
900241ac:	fb0a fc0c 	mul.w	ip, sl, ip
900241b0:	f89b 4001 	ldrb.w	r4, [fp, #1]
900241b4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900241b8:	eba0 000c 	sub.w	r0, r0, ip
900241bc:	940d      	str	r4, [sp, #52]	; 0x34
900241be:	fa1f fa8a 	uxth.w	sl, sl
900241c2:	b280      	uxth	r0, r0
900241c4:	eba3 030a 	sub.w	r3, r3, sl
900241c8:	fb08 f000 	mul.w	r0, r8, r0
900241cc:	b29b      	uxth	r3, r3
900241ce:	fb09 0303 	mla	r3, r9, r3, r0
900241d2:	980c      	ldr	r0, [sp, #48]	; 0x30
900241d4:	fb0a 3300 	mla	r3, sl, r0, r3
900241d8:	fb0c 3304 	mla	r3, ip, r4, r3
900241dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
900241e0:	2b00      	cmp	r3, #0
900241e2:	f000 80cc 	beq.w	9002437e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900241e6:	9808      	ldr	r0, [sp, #32]
900241e8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900241ec:	9c08      	ldr	r4, [sp, #32]
900241ee:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900241f2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900241f6:	f000 80d5 	beq.w	900243a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900241fa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
900241fe:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024202:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024206:	fb0a fc0c 	mul.w	ip, sl, ip
9002420a:	fb09 f707 	mul.w	r7, r9, r7
9002420e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90024212:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90024216:	f107 0b20 	add.w	fp, r7, #32
9002421a:	44cc      	add	ip, r9
9002421c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90024220:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024224:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024228:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002422c:	ea4c 0909 	orr.w	r9, ip, r9
90024230:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90024234:	8847      	ldrh	r7, [r0, #2]
90024236:	d019      	beq.n	9002426c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90024238:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002423c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024240:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024244:	fb0a fc0c 	mul.w	ip, sl, ip
90024248:	fb08 f807 	mul.w	r8, r8, r7
9002424c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024250:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90024254:	f108 0b20 	add.w	fp, r8, #32
90024258:	44bc      	add	ip, r7
9002425a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002425e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024262:	0a3f      	lsrs	r7, r7, #8
90024264:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024268:	ea4c 0707 	orr.w	r7, ip, r7
9002426c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024270:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90024274:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90024278:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9002427c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90024280:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024284:	ea4c 0909 	orr.w	r9, ip, r9
90024288:	ea4a 0707 	orr.w	r7, sl, r7
9002428c:	2d00      	cmp	r5, #0
9002428e:	f000 808b 	beq.w	900243a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90024292:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90024296:	3901      	subs	r1, #1
90024298:	0049      	lsls	r1, r1, #1
9002429a:	3102      	adds	r1, #2
9002429c:	eb00 0c01 	add.w	ip, r0, r1
900242a0:	5a41      	ldrh	r1, [r0, r1]
900242a2:	980c      	ldr	r0, [sp, #48]	; 0x30
900242a4:	28ff      	cmp	r0, #255	; 0xff
900242a6:	d019      	beq.n	900242dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
900242a8:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
900242ac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900242ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900242b2:	ea4f 08e4 	mov.w	r8, r4, asr #3
900242b6:	fb04 fa01 	mul.w	sl, r4, r1
900242ba:	fb08 f800 	mul.w	r8, r8, r0
900242be:	f10a 0020 	add.w	r0, sl, #32
900242c2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900242c6:	f608 0801 	addw	r8, r8, #2049	; 0x801
900242ca:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900242ce:	4441      	add	r1, r8
900242d0:	0a00      	lsrs	r0, r0, #8
900242d2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900242d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900242da:	4301      	orrs	r1, r0
900242dc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900242de:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900242e2:	2cff      	cmp	r4, #255	; 0xff
900242e4:	d01a      	beq.n	9002431c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
900242e6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
900242ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900242ee:	ea4f 08e4 	mov.w	r8, r4, asr #3
900242f2:	fb04 fa00 	mul.w	sl, r4, r0
900242f6:	fb08 f80c 	mul.w	r8, r8, ip
900242fa:	f10a 0c20 	add.w	ip, sl, #32
900242fe:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90024302:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024306:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9002430a:	4440      	add	r0, r8
9002430c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024310:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90024314:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024318:	ea40 000c 	orr.w	r0, r0, ip
9002431c:	fb15 fc02 	smulbb	ip, r5, r2
90024320:	f1c5 0810 	rsb	r8, r5, #16
90024324:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90024328:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002432c:	ea4f 0cec 	mov.w	ip, ip, asr #3
90024330:	eba8 0802 	sub.w	r8, r8, r2
90024334:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90024338:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002433c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90024340:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024344:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90024348:	ea4a 0101 	orr.w	r1, sl, r1
9002434c:	437a      	muls	r2, r7
9002434e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90024352:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024356:	fb09 2208 	mla	r2, r9, r8, r2
9002435a:	ea4b 0000 	orr.w	r0, fp, r0
9002435e:	fb05 2201 	mla	r2, r5, r1, r2
90024362:	fb0c 2200 	mla	r2, ip, r0, r2
90024366:	0d57      	lsrs	r7, r2, #21
90024368:	0952      	lsrs	r2, r2, #5
9002436a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002436e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024372:	433a      	orrs	r2, r7
90024374:	2bff      	cmp	r3, #255	; 0xff
90024376:	b292      	uxth	r2, r2
90024378:	d127      	bne.n	900243ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
9002437a:	f8ae 2000 	strh.w	r2, [lr]
9002437e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90024380:	f10e 0e02 	add.w	lr, lr, #2
90024384:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90024386:	4413      	add	r3, r2
90024388:	9a1e      	ldr	r2, [sp, #120]	; 0x78
9002438a:	931d      	str	r3, [sp, #116]	; 0x74
9002438c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002438e:	441a      	add	r2, r3
90024390:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90024392:	3b01      	subs	r3, #1
90024394:	921e      	str	r2, [sp, #120]	; 0x78
90024396:	930f      	str	r3, [sp, #60]	; 0x3c
90024398:	e627      	b.n	90023fea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
9002439a:	fb08 f000 	mul.w	r0, r8, r0
9002439e:	fb09 0303 	mla	r3, r9, r3, r0
900243a2:	e71b      	b.n	900241dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
900243a4:	46b9      	mov	r9, r7
900243a6:	e743      	b.n	90024230 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
900243a8:	f1c2 0110 	rsb	r1, r2, #16
900243ac:	437a      	muls	r2, r7
900243ae:	fb09 2901 	mla	r9, r9, r1, r2
900243b2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900243b6:	ea4f 5059 	mov.w	r0, r9, lsr #21
900243ba:	ea4f 1259 	mov.w	r2, r9, lsr #5
900243be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900243c2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900243c6:	4302      	orrs	r2, r0
900243c8:	e7d4      	b.n	90024374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
900243ca:	f8be 7000 	ldrh.w	r7, [lr]
900243ce:	43db      	mvns	r3, r3
900243d0:	4c1b      	ldr	r4, [pc, #108]	; (90024440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900243d2:	1238      	asrs	r0, r7, #8
900243d4:	fa5f fc83 	uxtb.w	ip, r3
900243d8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900243dc:	10fd      	asrs	r5, r7, #3
900243de:	00fb      	lsls	r3, r7, #3
900243e0:	fb00 f00c 	mul.w	r0, r0, ip
900243e4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
900243e8:	b2db      	uxtb	r3, r3
900243ea:	fb05 f10c 	mul.w	r1, r5, ip
900243ee:	1c45      	adds	r5, r0, #1
900243f0:	fb03 f30c 	mul.w	r3, r3, ip
900243f4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900243f8:	1215      	asrs	r5, r2, #8
900243fa:	f025 0507 	bic.w	r5, r5, #7
900243fe:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90024402:	1c4d      	adds	r5, r1, #1
90024404:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90024408:	10d1      	asrs	r1, r2, #3
9002440a:	b2c0      	uxtb	r0, r0
9002440c:	f021 0103 	bic.w	r1, r1, #3
90024410:	00d2      	lsls	r2, r2, #3
90024412:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90024416:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002441a:	00c9      	lsls	r1, r1, #3
9002441c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024420:	4308      	orrs	r0, r1
90024422:	1c59      	adds	r1, r3, #1
90024424:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90024428:	eb02 2313 	add.w	r3, r2, r3, lsr #8
9002442c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90024430:	4318      	orrs	r0, r3
90024432:	f8ae 0000 	strh.w	r0, [lr]
90024436:	e7a2      	b.n	9002437e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90024438:	b013      	add	sp, #76	; 0x4c
9002443a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002443e:	bf00      	nop
90024440:	fffff800 	.word	0xfffff800

90024444 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90024444:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90024448:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
9002444c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90024450:	fb05 4c03 	mla	ip, r5, r3, r4
90024454:	2d00      	cmp	r5, #0
90024456:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
9002445a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002445e:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90024462:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90024466:	8808      	ldrh	r0, [r1, #0]
90024468:	f2c0 80a7 	blt.w	900245ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
9002446c:	45aa      	cmp	sl, r5
9002446e:	f340 80a4 	ble.w	900245ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90024472:	2c00      	cmp	r4, #0
90024474:	f2c0 809f 	blt.w	900245b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90024478:	42a3      	cmp	r3, r4
9002447a:	f340 809c 	ble.w	900245b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
9002447e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90024482:	1c62      	adds	r2, r4, #1
90024484:	f100 809c 	bmi.w	900245c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90024488:	4293      	cmp	r3, r2
9002448a:	f340 8099 	ble.w	900245c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002448e:	f1b9 0f00 	cmp.w	r9, #0
90024492:	f000 8095 	beq.w	900245c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90024496:	f8be c002 	ldrh.w	ip, [lr, #2]
9002449a:	3501      	adds	r5, #1
9002449c:	f100 8094 	bmi.w	900245c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900244a0:	45aa      	cmp	sl, r5
900244a2:	f340 8091 	ble.w	900245c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900244a6:	2f00      	cmp	r7, #0
900244a8:	f000 808e 	beq.w	900245c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900244ac:	2c00      	cmp	r4, #0
900244ae:	f2c0 8089 	blt.w	900245c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900244b2:	42a3      	cmp	r3, r4
900244b4:	f340 8086 	ble.w	900245c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900244b8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
900244bc:	3401      	adds	r4, #1
900244be:	f100 8086 	bmi.w	900245ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900244c2:	42a3      	cmp	r3, r4
900244c4:	f340 8083 	ble.w	900245ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900244c8:	f1b9 0f00 	cmp.w	r9, #0
900244cc:	d07f      	beq.n	900245ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900244ce:	3301      	adds	r3, #1
900244d0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
900244d4:	ea4f 4408 	mov.w	r4, r8, lsl #16
900244d8:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
900244dc:	fb19 fe07 	smulbb	lr, r9, r7
900244e0:	f1c7 0210 	rsb	r2, r7, #16
900244e4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900244e8:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
900244ec:	eba2 0209 	sub.w	r2, r2, r9
900244f0:	ea44 0808 	orr.w	r8, r4, r8
900244f4:	ea4f 440c 	mov.w	r4, ip, lsl #16
900244f8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900244fc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90024500:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90024504:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90024508:	ea44 0c0c 	orr.w	ip, r4, ip
9002450c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90024510:	fb04 f40c 	mul.w	r4, r4, ip
90024514:	fb02 4808 	mla	r8, r2, r8, r4
90024518:	041a      	lsls	r2, r3, #16
9002451a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002451e:	b2b4      	uxth	r4, r6
90024520:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024524:	43f6      	mvns	r6, r6
90024526:	4313      	orrs	r3, r2
90024528:	042a      	lsls	r2, r5, #16
9002452a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002452e:	b2f6      	uxtb	r6, r6
90024530:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024534:	fb0e 8303 	mla	r3, lr, r3, r8
90024538:	432a      	orrs	r2, r5
9002453a:	fb07 3202 	mla	r2, r7, r2, r3
9002453e:	10c7      	asrs	r7, r0, #3
90024540:	0d53      	lsrs	r3, r2, #21
90024542:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90024546:	0952      	lsrs	r2, r2, #5
90024548:	fb17 f706 	smulbb	r7, r7, r6
9002454c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024550:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024554:	431a      	orrs	r2, r3
90024556:	b293      	uxth	r3, r2
90024558:	1202      	asrs	r2, r0, #8
9002455a:	121d      	asrs	r5, r3, #8
9002455c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90024560:	00c0      	lsls	r0, r0, #3
90024562:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024566:	fb12 f206 	smulbb	r2, r2, r6
9002456a:	b2c0      	uxtb	r0, r0
9002456c:	fb05 2504 	mla	r5, r5, r4, r2
90024570:	10da      	asrs	r2, r3, #3
90024572:	fb10 f006 	smulbb	r0, r0, r6
90024576:	00db      	lsls	r3, r3, #3
90024578:	b2ad      	uxth	r5, r5
9002457a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002457e:	b2db      	uxtb	r3, r3
90024580:	fb02 7204 	mla	r2, r2, r4, r7
90024584:	fb03 0004 	mla	r0, r3, r4, r0
90024588:	1c6b      	adds	r3, r5, #1
9002458a:	b292      	uxth	r2, r2
9002458c:	b280      	uxth	r0, r0
9002458e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024592:	1c43      	adds	r3, r0, #1
90024594:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024598:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002459c:	1c50      	adds	r0, r2, #1
9002459e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
900245a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900245a6:	0952      	lsrs	r2, r2, #5
900245a8:	432b      	orrs	r3, r5
900245aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900245ae:	4313      	orrs	r3, r2
900245b0:	800b      	strh	r3, [r1, #0]
900245b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900245b6:	4680      	mov	r8, r0
900245b8:	e763      	b.n	90024482 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
900245ba:	4684      	mov	ip, r0
900245bc:	4680      	mov	r8, r0
900245be:	e76c      	b.n	9002449a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900245c0:	4684      	mov	ip, r0
900245c2:	e76a      	b.n	9002449a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900245c4:	4605      	mov	r5, r0
900245c6:	e779      	b.n	900244bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
900245c8:	4603      	mov	r3, r0
900245ca:	4605      	mov	r5, r0
900245cc:	e782      	b.n	900244d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
900245ce:	4603      	mov	r3, r0
900245d0:	e780      	b.n	900244d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

900245d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900245d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900245d6:	b093      	sub	sp, #76	; 0x4c
900245d8:	461d      	mov	r5, r3
900245da:	9210      	str	r2, [sp, #64]	; 0x40
900245dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
900245de:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
900245e2:	910a      	str	r1, [sp, #40]	; 0x28
900245e4:	920b      	str	r2, [sp, #44]	; 0x2c
900245e6:	6859      	ldr	r1, [r3, #4]
900245e8:	681b      	ldr	r3, [r3, #0]
900245ea:	9011      	str	r0, [sp, #68]	; 0x44
900245ec:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
900245f0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
900245f4:	fb01 2707 	mla	r7, r1, r7, r2
900245f8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
900245fc:	9307      	str	r3, [sp, #28]
900245fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024600:	681b      	ldr	r3, [r3, #0]
90024602:	9309      	str	r3, [sp, #36]	; 0x24
90024604:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90024606:	43db      	mvns	r3, r3
90024608:	b2db      	uxtb	r3, r3
9002460a:	9308      	str	r3, [sp, #32]
9002460c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002460e:	2b00      	cmp	r3, #0
90024610:	dc03      	bgt.n	9002461a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024612:	9b10      	ldr	r3, [sp, #64]	; 0x40
90024614:	2b00      	cmp	r3, #0
90024616:	f340 8205 	ble.w	90024a24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002461a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002461c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024620:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024624:	1e48      	subs	r0, r1, #1
90024626:	f102 3cff 	add.w	ip, r2, #4294967295
9002462a:	2d00      	cmp	r5, #0
9002462c:	f340 80da 	ble.w	900247e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90024630:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024634:	ea4f 4326 	mov.w	r3, r6, asr #16
90024638:	d406      	bmi.n	90024648 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002463a:	4586      	cmp	lr, r0
9002463c:	da04      	bge.n	90024648 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002463e:	2b00      	cmp	r3, #0
90024640:	db02      	blt.n	90024648 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90024642:	4563      	cmp	r3, ip
90024644:	f2c0 80cf 	blt.w	900247e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90024648:	f11e 0e01 	adds.w	lr, lr, #1
9002464c:	f100 80c1 	bmi.w	900247d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90024650:	4571      	cmp	r1, lr
90024652:	f2c0 80be 	blt.w	900247d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90024656:	3301      	adds	r3, #1
90024658:	f100 80bb 	bmi.w	900247d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002465c:	429a      	cmp	r2, r3
9002465e:	f2c0 80b8 	blt.w	900247d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90024662:	46a9      	mov	r9, r5
90024664:	f8dd 801c 	ldr.w	r8, [sp, #28]
90024668:	f1b9 0f00 	cmp.w	r9, #0
9002466c:	f340 80d8 	ble.w	90024820 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90024670:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024672:	1421      	asrs	r1, r4, #16
90024674:	ea4f 4026 	mov.w	r0, r6, asr #16
90024678:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002467c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90024680:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90024684:	f100 8112 	bmi.w	900248ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90024688:	f10e 3aff 	add.w	sl, lr, #4294967295
9002468c:	4551      	cmp	r1, sl
9002468e:	f280 810d 	bge.w	900248ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90024692:	2800      	cmp	r0, #0
90024694:	f2c0 810a 	blt.w	900248ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90024698:	f103 3aff 	add.w	sl, r3, #4294967295
9002469c:	4550      	cmp	r0, sl
9002469e:	f280 8105 	bge.w	900248ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900246a2:	fa0f f38e 	sxth.w	r3, lr
900246a6:	fb00 1103 	mla	r1, r0, r3, r1
900246aa:	9809      	ldr	r0, [sp, #36]	; 0x24
900246ac:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
900246b0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
900246b4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
900246b8:	f1bc 0f00 	cmp.w	ip, #0
900246bc:	d007      	beq.n	900246ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
900246be:	005b      	lsls	r3, r3, #1
900246c0:	eb0a 0003 	add.w	r0, sl, r3
900246c4:	f83a 3003 	ldrh.w	r3, [sl, r3]
900246c8:	930c      	str	r3, [sp, #48]	; 0x30
900246ca:	8843      	ldrh	r3, [r0, #2]
900246cc:	930d      	str	r3, [sp, #52]	; 0x34
900246ce:	ea4f 400e 	mov.w	r0, lr, lsl #16
900246d2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900246d6:	fb12 f30c 	smulbb	r3, r2, ip
900246da:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900246de:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900246e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900246e6:	10db      	asrs	r3, r3, #3
900246e8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900246ec:	ea40 000e 	orr.w	r0, r0, lr
900246f0:	f1cc 0e10 	rsb	lr, ip, #16
900246f4:	ea4a 0101 	orr.w	r1, sl, r1
900246f8:	9f08      	ldr	r7, [sp, #32]
900246fa:	ebae 0e02 	sub.w	lr, lr, r2
900246fe:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90024702:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90024706:	4351      	muls	r1, r2
90024708:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9002470a:	fb0e 1e00 	mla	lr, lr, r0, r1
9002470e:	990c      	ldr	r1, [sp, #48]	; 0x30
90024710:	0410      	lsls	r0, r2, #16
90024712:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024716:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002471a:	4310      	orrs	r0, r2
9002471c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9002471e:	0412      	lsls	r2, r2, #16
90024720:	fb03 e000 	mla	r0, r3, r0, lr
90024724:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90024728:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
9002472c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024730:	ea42 020e 	orr.w	r2, r2, lr
90024734:	fb03 0302 	mla	r3, r3, r2, r0
90024738:	f8b8 0000 	ldrh.w	r0, [r8]
9002473c:	0d5a      	lsrs	r2, r3, #21
9002473e:	095b      	lsrs	r3, r3, #5
90024740:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024744:	1201      	asrs	r1, r0, #8
90024746:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002474a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9002474e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024752:	00c0      	lsls	r0, r0, #3
90024754:	4313      	orrs	r3, r2
90024756:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
9002475a:	fb11 f107 	smulbb	r1, r1, r7
9002475e:	b2c0      	uxtb	r0, r0
90024760:	b29b      	uxth	r3, r3
90024762:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90024766:	fb10 f007 	smulbb	r0, r0, r7
9002476a:	fb1e fe07 	smulbb	lr, lr, r7
9002476e:	ea4f 2c23 	mov.w	ip, r3, asr #8
90024772:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90024776:	fb0c 1c02 	mla	ip, ip, r2, r1
9002477a:	10d9      	asrs	r1, r3, #3
9002477c:	00db      	lsls	r3, r3, #3
9002477e:	fa1f fc8c 	uxth.w	ip, ip
90024782:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024786:	b2db      	uxtb	r3, r3
90024788:	fb01 e102 	mla	r1, r1, r2, lr
9002478c:	fb03 0302 	mla	r3, r3, r2, r0
90024790:	b289      	uxth	r1, r1
90024792:	b29a      	uxth	r2, r3
90024794:	f10c 0301 	add.w	r3, ip, #1
90024798:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9002479c:	1c53      	adds	r3, r2, #1
9002479e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900247a2:	1c4a      	adds	r2, r1, #1
900247a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900247a8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900247ac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900247b0:	0949      	lsrs	r1, r1, #5
900247b2:	ea43 030c 	orr.w	r3, r3, ip
900247b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900247ba:	430b      	orrs	r3, r1
900247bc:	f8a8 3000 	strh.w	r3, [r8]
900247c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900247c2:	f108 0802 	add.w	r8, r8, #2
900247c6:	f109 39ff 	add.w	r9, r9, #4294967295
900247ca:	441c      	add	r4, r3
900247cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
900247ce:	441e      	add	r6, r3
900247d0:	e74a      	b.n	90024668 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900247d2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900247d4:	3d01      	subs	r5, #1
900247d6:	441c      	add	r4, r3
900247d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900247da:	441e      	add	r6, r3
900247dc:	9b07      	ldr	r3, [sp, #28]
900247de:	3302      	adds	r3, #2
900247e0:	9307      	str	r3, [sp, #28]
900247e2:	e722      	b.n	9002462a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900247e4:	d022      	beq.n	9002482c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
900247e6:	1e6b      	subs	r3, r5, #1
900247e8:	981f      	ldr	r0, [sp, #124]	; 0x7c
900247ea:	fb00 4003 	mla	r0, r0, r3, r4
900247ee:	1400      	asrs	r0, r0, #16
900247f0:	f53f af37 	bmi.w	90024662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900247f4:	3901      	subs	r1, #1
900247f6:	4288      	cmp	r0, r1
900247f8:	f6bf af33 	bge.w	90024662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900247fc:	9920      	ldr	r1, [sp, #128]	; 0x80
900247fe:	fb01 6303 	mla	r3, r1, r3, r6
90024802:	141b      	asrs	r3, r3, #16
90024804:	f53f af2d 	bmi.w	90024662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024808:	3a01      	subs	r2, #1
9002480a:	4293      	cmp	r3, r2
9002480c:	f6bf af29 	bge.w	90024662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024810:	46a8      	mov	r8, r5
90024812:	f8dd 901c 	ldr.w	r9, [sp, #28]
90024816:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
9002481a:	f1b8 0f00 	cmp.w	r8, #0
9002481e:	dc60      	bgt.n	900248e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90024820:	9b07      	ldr	r3, [sp, #28]
90024822:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90024826:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002482a:	9307      	str	r3, [sp, #28]
9002482c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002482e:	2b00      	cmp	r3, #0
90024830:	f340 80f8 	ble.w	90024a24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024834:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024838:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002483a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002483e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024842:	eef0 6a62 	vmov.f32	s13, s5
90024846:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002484a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002484e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024852:	ee16 4a90 	vmov	r4, s13
90024856:	eef0 6a43 	vmov.f32	s13, s6
9002485a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002485e:	ee16 6a90 	vmov	r6, s13
90024862:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024866:	ee61 7a27 	vmul.f32	s15, s2, s15
9002486a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002486e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024872:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024876:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002487a:	ee12 2a90 	vmov	r2, s5
9002487e:	eef0 2a47 	vmov.f32	s5, s14
90024882:	fb92 f3f3 	sdiv	r3, r2, r3
90024886:	ee13 2a10 	vmov	r2, s6
9002488a:	931f      	str	r3, [sp, #124]	; 0x7c
9002488c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002488e:	eeb0 3a67 	vmov.f32	s6, s15
90024892:	fb92 f3f3 	sdiv	r3, r2, r3
90024896:	9320      	str	r3, [sp, #128]	; 0x80
90024898:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002489a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9002489c:	3b01      	subs	r3, #1
9002489e:	930a      	str	r3, [sp, #40]	; 0x28
900248a0:	bf08      	it	eq
900248a2:	4615      	moveq	r5, r2
900248a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900248a6:	bf18      	it	ne
900248a8:	461d      	movne	r5, r3
900248aa:	e6af      	b.n	9002460c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900248ac:	f111 0a01 	adds.w	sl, r1, #1
900248b0:	d486      	bmi.n	900247c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900248b2:	45d6      	cmp	lr, sl
900248b4:	db84      	blt.n	900247c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900248b6:	f110 0a01 	adds.w	sl, r0, #1
900248ba:	d481      	bmi.n	900247c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900248bc:	4553      	cmp	r3, sl
900248be:	f6ff af7f 	blt.w	900247c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900248c2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
900248c4:	b21b      	sxth	r3, r3
900248c6:	9101      	str	r1, [sp, #4]
900248c8:	4641      	mov	r1, r8
900248ca:	9300      	str	r3, [sp, #0]
900248cc:	fa0f f38e 	sxth.w	r3, lr
900248d0:	e9cd 0202 	strd	r0, r2, [sp, #8]
900248d4:	e9cd c704 	strd	ip, r7, [sp, #16]
900248d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
900248da:	9811      	ldr	r0, [sp, #68]	; 0x44
900248dc:	f7ff fdb2 	bl	90024444 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
900248e0:	e76e      	b.n	900247c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900248e2:	9b24      	ldr	r3, [sp, #144]	; 0x90
900248e4:	1430      	asrs	r0, r6, #16
900248e6:	9f09      	ldr	r7, [sp, #36]	; 0x24
900248e8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900248ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900248f0:	1423      	asrs	r3, r4, #16
900248f2:	f3c4 3203 	ubfx	r2, r4, #12, #4
900248f6:	fb01 3000 	mla	r0, r1, r0, r3
900248fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
900248fc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90024900:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90024904:	8858      	ldrh	r0, [r3, #2]
90024906:	f1be 0f00 	cmp.w	lr, #0
9002490a:	d00b      	beq.n	90024924 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
9002490c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90024910:	3901      	subs	r1, #1
90024912:	0049      	lsls	r1, r1, #1
90024914:	3102      	adds	r1, #2
90024916:	eb03 0b01 	add.w	fp, r3, r1
9002491a:	5a5b      	ldrh	r3, [r3, r1]
9002491c:	930e      	str	r3, [sp, #56]	; 0x38
9002491e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90024922:	930f      	str	r3, [sp, #60]	; 0x3c
90024924:	ea4f 410c 	mov.w	r1, ip, lsl #16
90024928:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002492c:	fb12 f30e 	smulbb	r3, r2, lr
90024930:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90024934:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90024938:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002493c:	10db      	asrs	r3, r3, #3
9002493e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024942:	ea41 010c 	orr.w	r1, r1, ip
90024946:	f1ce 0c10 	rsb	ip, lr, #16
9002494a:	ea4b 0000 	orr.w	r0, fp, r0
9002494e:	9f08      	ldr	r7, [sp, #32]
90024950:	ebac 0c02 	sub.w	ip, ip, r2
90024954:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90024958:	f108 38ff 	add.w	r8, r8, #4294967295
9002495c:	4350      	muls	r0, r2
9002495e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90024962:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90024964:	fb0c 0c01 	mla	ip, ip, r1, r0
90024968:	980e      	ldr	r0, [sp, #56]	; 0x38
9002496a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9002496e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
90024972:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90024974:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024978:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002497c:	0412      	lsls	r2, r2, #16
9002497e:	ea4b 0101 	orr.w	r1, fp, r1
90024982:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024986:	fb03 c101 	mla	r1, r3, r1, ip
9002498a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002498e:	4302      	orrs	r2, r0
90024990:	fb03 1202 	mla	r2, r3, r2, r1
90024994:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90024998:	0952      	lsrs	r2, r2, #5
9002499a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9002499e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
900249a2:	f8b9 2000 	ldrh.w	r2, [r9]
900249a6:	ea4b 0303 	orr.w	r3, fp, r3
900249aa:	1211      	asrs	r1, r2, #8
900249ac:	ea4f 0ce2 	mov.w	ip, r2, asr #3
900249b0:	b29b      	uxth	r3, r3
900249b2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900249b6:	00d2      	lsls	r2, r2, #3
900249b8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
900249bc:	fb11 f107 	smulbb	r1, r1, r7
900249c0:	1218      	asrs	r0, r3, #8
900249c2:	fb1c fc07 	smulbb	ip, ip, r7
900249c6:	b2d2      	uxtb	r2, r2
900249c8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900249cc:	fb12 f207 	smulbb	r2, r2, r7
900249d0:	fb00 100a 	mla	r0, r0, sl, r1
900249d4:	10d9      	asrs	r1, r3, #3
900249d6:	00db      	lsls	r3, r3, #3
900249d8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900249dc:	b280      	uxth	r0, r0
900249de:	b2db      	uxtb	r3, r3
900249e0:	fb01 c10a 	mla	r1, r1, sl, ip
900249e4:	fb03 230a 	mla	r3, r3, sl, r2
900249e8:	1c42      	adds	r2, r0, #1
900249ea:	b289      	uxth	r1, r1
900249ec:	b29b      	uxth	r3, r3
900249ee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900249f2:	f101 0c01 	add.w	ip, r1, #1
900249f6:	1c5a      	adds	r2, r3, #1
900249f8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900249fc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90024a00:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90024a04:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024a06:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90024a0a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90024a0e:	441c      	add	r4, r3
90024a10:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024a14:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024a16:	4310      	orrs	r0, r2
90024a18:	441e      	add	r6, r3
90024a1a:	ea40 000c 	orr.w	r0, r0, ip
90024a1e:	f829 0b02 	strh.w	r0, [r9], #2
90024a22:	e6fa      	b.n	9002481a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90024a24:	b013      	add	sp, #76	; 0x4c
90024a26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024a2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90024a2a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90024a2e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90024a32:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90024a36:	fb0e 4703 	mla	r7, lr, r3, r4
90024a3a:	f1be 0f00 	cmp.w	lr, #0
90024a3e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
90024a42:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90024a46:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90024a4a:	8808      	ldrh	r0, [r1, #0]
90024a4c:	db60      	blt.n	90024b10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90024a4e:	45f1      	cmp	r9, lr
90024a50:	dd5e      	ble.n	90024b10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90024a52:	2c00      	cmp	r4, #0
90024a54:	db5a      	blt.n	90024b0c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90024a56:	42a3      	cmp	r3, r4
90024a58:	dd58      	ble.n	90024b0c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90024a5a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90024a5e:	1c62      	adds	r2, r4, #1
90024a60:	d459      	bmi.n	90024b16 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90024a62:	4293      	cmp	r3, r2
90024a64:	dd57      	ble.n	90024b16 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90024a66:	2d00      	cmp	r5, #0
90024a68:	d055      	beq.n	90024b16 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90024a6a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90024a6e:	f11e 0e01 	adds.w	lr, lr, #1
90024a72:	d454      	bmi.n	90024b1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90024a74:	45f1      	cmp	r9, lr
90024a76:	dd52      	ble.n	90024b1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90024a78:	2e00      	cmp	r6, #0
90024a7a:	d050      	beq.n	90024b1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90024a7c:	2c00      	cmp	r4, #0
90024a7e:	db4c      	blt.n	90024b1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90024a80:	42a3      	cmp	r3, r4
90024a82:	dd4a      	ble.n	90024b1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90024a84:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90024a88:	3401      	adds	r4, #1
90024a8a:	d405      	bmi.n	90024a98 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90024a8c:	42a3      	cmp	r3, r4
90024a8e:	dd03      	ble.n	90024a98 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90024a90:	b115      	cbz	r5, 90024a98 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90024a92:	3301      	adds	r3, #1
90024a94:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90024a98:	fb15 f406 	smulbb	r4, r5, r6
90024a9c:	ea4f 430c 	mov.w	r3, ip, lsl #16
90024aa0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90024aa4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90024aa8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90024aac:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90024ab0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90024ab4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90024ab8:	ea43 0c0c 	orr.w	ip, r3, ip
90024abc:	f1c6 0310 	rsb	r3, r6, #16
90024ac0:	ea4e 0707 	orr.w	r7, lr, r7
90024ac4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90024ac8:	1b5b      	subs	r3, r3, r5
90024aca:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90024ace:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90024ad2:	437d      	muls	r5, r7
90024ad4:	fb03 5c0c 	mla	ip, r3, ip, r5
90024ad8:	0403      	lsls	r3, r0, #16
90024ada:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024ade:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90024ae2:	4318      	orrs	r0, r3
90024ae4:	0413      	lsls	r3, r2, #16
90024ae6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024aea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90024aee:	fb04 c000 	mla	r0, r4, r0, ip
90024af2:	4313      	orrs	r3, r2
90024af4:	fb06 0003 	mla	r0, r6, r3, r0
90024af8:	0d43      	lsrs	r3, r0, #21
90024afa:	0940      	lsrs	r0, r0, #5
90024afc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024b00:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024b04:	4318      	orrs	r0, r3
90024b06:	8008      	strh	r0, [r1, #0]
90024b08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90024b0c:	4684      	mov	ip, r0
90024b0e:	e7a6      	b.n	90024a5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90024b10:	4607      	mov	r7, r0
90024b12:	4684      	mov	ip, r0
90024b14:	e7ab      	b.n	90024a6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90024b16:	4607      	mov	r7, r0
90024b18:	e7a9      	b.n	90024a6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90024b1a:	4602      	mov	r2, r0
90024b1c:	e7b4      	b.n	90024a88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90024b1e:	4602      	mov	r2, r0
90024b20:	e7ba      	b.n	90024a98 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90024b22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024b22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024b26:	b08f      	sub	sp, #60	; 0x3c
90024b28:	461d      	mov	r5, r3
90024b2a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90024b2c:	9107      	str	r1, [sp, #28]
90024b2e:	920c      	str	r2, [sp, #48]	; 0x30
90024b30:	6859      	ldr	r1, [r3, #4]
90024b32:	681b      	ldr	r3, [r3, #0]
90024b34:	900d      	str	r0, [sp, #52]	; 0x34
90024b36:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
90024b3a:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
90024b3e:	fb01 2707 	mla	r7, r1, r7, r2
90024b42:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90024b46:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024b48:	f8d3 8000 	ldr.w	r8, [r3]
90024b4c:	9b07      	ldr	r3, [sp, #28]
90024b4e:	2b00      	cmp	r3, #0
90024b50:	dc03      	bgt.n	90024b5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90024b52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024b54:	2b00      	cmp	r3, #0
90024b56:	f340 8182 	ble.w	90024e5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90024b5a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024b5c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024b60:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024b64:	1e48      	subs	r0, r1, #1
90024b66:	f102 3cff 	add.w	ip, r2, #4294967295
90024b6a:	2d00      	cmp	r5, #0
90024b6c:	f340 809b 	ble.w	90024ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90024b70:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024b74:	ea4f 4326 	mov.w	r3, r6, asr #16
90024b78:	d406      	bmi.n	90024b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90024b7a:	4586      	cmp	lr, r0
90024b7c:	da04      	bge.n	90024b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90024b7e:	2b00      	cmp	r3, #0
90024b80:	db02      	blt.n	90024b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90024b82:	4563      	cmp	r3, ip
90024b84:	f2c0 8090 	blt.w	90024ca8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90024b88:	f11e 0e01 	adds.w	lr, lr, #1
90024b8c:	f100 8084 	bmi.w	90024c98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024b90:	4571      	cmp	r1, lr
90024b92:	f2c0 8081 	blt.w	90024c98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024b96:	3301      	adds	r3, #1
90024b98:	d47e      	bmi.n	90024c98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024b9a:	429a      	cmp	r2, r3
90024b9c:	db7c      	blt.n	90024c98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024b9e:	46aa      	mov	sl, r5
90024ba0:	46b9      	mov	r9, r7
90024ba2:	f1ba 0f00 	cmp.w	sl, #0
90024ba6:	f340 8099 	ble.w	90024cdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90024baa:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024bac:	1421      	asrs	r1, r4, #16
90024bae:	ea4f 4026 	mov.w	r0, r6, asr #16
90024bb2:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024bb6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90024bba:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90024bbe:	f100 80d1 	bmi.w	90024d64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90024bc2:	f10e 3bff 	add.w	fp, lr, #4294967295
90024bc6:	4559      	cmp	r1, fp
90024bc8:	f280 80cc 	bge.w	90024d64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90024bcc:	2800      	cmp	r0, #0
90024bce:	f2c0 80c9 	blt.w	90024d64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90024bd2:	f103 3bff 	add.w	fp, r3, #4294967295
90024bd6:	4558      	cmp	r0, fp
90024bd8:	f280 80c4 	bge.w	90024d64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90024bdc:	fa0f fe8e 	sxth.w	lr, lr
90024be0:	fb00 110e 	mla	r1, r0, lr, r1
90024be4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90024be8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90024bec:	8841      	ldrh	r1, [r0, #2]
90024bee:	f1bc 0f00 	cmp.w	ip, #0
90024bf2:	d00b      	beq.n	90024c0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90024bf4:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
90024bf8:	3b01      	subs	r3, #1
90024bfa:	005b      	lsls	r3, r3, #1
90024bfc:	3302      	adds	r3, #2
90024bfe:	eb00 0e03 	add.w	lr, r0, r3
90024c02:	5ac3      	ldrh	r3, [r0, r3]
90024c04:	9308      	str	r3, [sp, #32]
90024c06:	f8be 3002 	ldrh.w	r3, [lr, #2]
90024c0a:	9309      	str	r3, [sp, #36]	; 0x24
90024c0c:	ea4f 400b 	mov.w	r0, fp, lsl #16
90024c10:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90024c14:	fb12 f30c 	smulbb	r3, r2, ip
90024c18:	f1cc 0e10 	rsb	lr, ip, #16
90024c1c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90024c20:	10db      	asrs	r3, r3, #3
90024c22:	ebae 0e02 	sub.w	lr, lr, r2
90024c26:	ea40 000b 	orr.w	r0, r0, fp
90024c2a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90024c2e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90024c32:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90024c36:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024c3a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90024c3e:	ea4b 0101 	orr.w	r1, fp, r1
90024c42:	4351      	muls	r1, r2
90024c44:	9a09      	ldr	r2, [sp, #36]	; 0x24
90024c46:	fb0e 1e00 	mla	lr, lr, r0, r1
90024c4a:	0410      	lsls	r0, r2, #16
90024c4c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024c50:	9908      	ldr	r1, [sp, #32]
90024c52:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90024c56:	4310      	orrs	r0, r2
90024c58:	9a08      	ldr	r2, [sp, #32]
90024c5a:	0412      	lsls	r2, r2, #16
90024c5c:	fb03 e000 	mla	r0, r3, r0, lr
90024c60:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90024c64:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90024c68:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024c6c:	ea42 020e 	orr.w	r2, r2, lr
90024c70:	fb03 0302 	mla	r3, r3, r2, r0
90024c74:	0d5a      	lsrs	r2, r3, #21
90024c76:	095b      	lsrs	r3, r3, #5
90024c78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024c7c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90024c80:	4313      	orrs	r3, r2
90024c82:	f8a9 3000 	strh.w	r3, [r9]
90024c86:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90024c88:	f109 0902 	add.w	r9, r9, #2
90024c8c:	f10a 3aff 	add.w	sl, sl, #4294967295
90024c90:	441c      	add	r4, r3
90024c92:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024c94:	441e      	add	r6, r3
90024c96:	e784      	b.n	90024ba2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90024c98:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90024c9a:	3d01      	subs	r5, #1
90024c9c:	3702      	adds	r7, #2
90024c9e:	441c      	add	r4, r3
90024ca0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024ca2:	441e      	add	r6, r3
90024ca4:	e761      	b.n	90024b6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024ca6:	d01d      	beq.n	90024ce4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024ca8:	1e6b      	subs	r3, r5, #1
90024caa:	981b      	ldr	r0, [sp, #108]	; 0x6c
90024cac:	fb00 4003 	mla	r0, r0, r3, r4
90024cb0:	1400      	asrs	r0, r0, #16
90024cb2:	f53f af74 	bmi.w	90024b9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90024cb6:	3901      	subs	r1, #1
90024cb8:	4288      	cmp	r0, r1
90024cba:	f6bf af70 	bge.w	90024b9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90024cbe:	991c      	ldr	r1, [sp, #112]	; 0x70
90024cc0:	fb01 6303 	mla	r3, r1, r3, r6
90024cc4:	141b      	asrs	r3, r3, #16
90024cc6:	f53f af6a 	bmi.w	90024b9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90024cca:	3a01      	subs	r2, #1
90024ccc:	4293      	cmp	r3, r2
90024cce:	f6bf af66 	bge.w	90024b9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90024cd2:	46a9      	mov	r9, r5
90024cd4:	46ba      	mov	sl, r7
90024cd6:	f1b9 0f00 	cmp.w	r9, #0
90024cda:	dc5b      	bgt.n	90024d94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90024cdc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90024ce0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90024ce4:	9b07      	ldr	r3, [sp, #28]
90024ce6:	2b00      	cmp	r3, #0
90024ce8:	f340 80b9 	ble.w	90024e5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90024cec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024cf0:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024cf2:	ee30 0a04 	vadd.f32	s0, s0, s8
90024cf6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024cfa:	eef0 6a62 	vmov.f32	s13, s5
90024cfe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024d02:	ee31 1a05 	vadd.f32	s2, s2, s10
90024d06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d0a:	ee16 4a90 	vmov	r4, s13
90024d0e:	eef0 6a43 	vmov.f32	s13, s6
90024d12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d16:	ee16 6a90 	vmov	r6, s13
90024d1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024d1e:	ee61 7a27 	vmul.f32	s15, s2, s15
90024d22:	ee77 2a62 	vsub.f32	s5, s14, s5
90024d26:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024d2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024d2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024d32:	ee12 2a90 	vmov	r2, s5
90024d36:	eef0 2a47 	vmov.f32	s5, s14
90024d3a:	fb92 f3f3 	sdiv	r3, r2, r3
90024d3e:	ee13 2a10 	vmov	r2, s6
90024d42:	931b      	str	r3, [sp, #108]	; 0x6c
90024d44:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024d46:	eeb0 3a67 	vmov.f32	s6, s15
90024d4a:	fb92 f3f3 	sdiv	r3, r2, r3
90024d4e:	931c      	str	r3, [sp, #112]	; 0x70
90024d50:	9b07      	ldr	r3, [sp, #28]
90024d52:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90024d54:	3b01      	subs	r3, #1
90024d56:	9307      	str	r3, [sp, #28]
90024d58:	bf08      	it	eq
90024d5a:	4615      	moveq	r5, r2
90024d5c:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024d5e:	bf18      	it	ne
90024d60:	461d      	movne	r5, r3
90024d62:	e6f3      	b.n	90024b4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90024d64:	f111 0b01 	adds.w	fp, r1, #1
90024d68:	d48d      	bmi.n	90024c86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024d6a:	45de      	cmp	lr, fp
90024d6c:	db8b      	blt.n	90024c86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024d6e:	f110 0b01 	adds.w	fp, r0, #1
90024d72:	d488      	bmi.n	90024c86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024d74:	455b      	cmp	r3, fp
90024d76:	db86      	blt.n	90024c86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024d78:	b21b      	sxth	r3, r3
90024d7a:	e9cd 1001 	strd	r1, r0, [sp, #4]
90024d7e:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90024d82:	9300      	str	r3, [sp, #0]
90024d84:	4642      	mov	r2, r8
90024d86:	fa0f f38e 	sxth.w	r3, lr
90024d8a:	4649      	mov	r1, r9
90024d8c:	980d      	ldr	r0, [sp, #52]	; 0x34
90024d8e:	f7ff fe4c 	bl	90024a2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90024d92:	e778      	b.n	90024c86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024d94:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024d96:	1420      	asrs	r0, r4, #16
90024d98:	1431      	asrs	r1, r6, #16
90024d9a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90024d9e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90024da2:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024da6:	fb03 0101 	mla	r1, r3, r1, r0
90024daa:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90024dae:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90024db2:	8841      	ldrh	r1, [r0, #2]
90024db4:	f1be 0f00 	cmp.w	lr, #0
90024db8:	d00b      	beq.n	90024dd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90024dba:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
90024dbe:	3b01      	subs	r3, #1
90024dc0:	005b      	lsls	r3, r3, #1
90024dc2:	3302      	adds	r3, #2
90024dc4:	eb00 0b03 	add.w	fp, r0, r3
90024dc8:	5ac3      	ldrh	r3, [r0, r3]
90024dca:	930a      	str	r3, [sp, #40]	; 0x28
90024dcc:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90024dd0:	930b      	str	r3, [sp, #44]	; 0x2c
90024dd2:	ea4f 400c 	mov.w	r0, ip, lsl #16
90024dd6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90024dda:	fb12 f30e 	smulbb	r3, r2, lr
90024dde:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90024de2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90024de6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90024dea:	10db      	asrs	r3, r3, #3
90024dec:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024df0:	ea40 000c 	orr.w	r0, r0, ip
90024df4:	f1ce 0c10 	rsb	ip, lr, #16
90024df8:	ea4b 0101 	orr.w	r1, fp, r1
90024dfc:	f109 39ff 	add.w	r9, r9, #4294967295
90024e00:	ebac 0c02 	sub.w	ip, ip, r2
90024e04:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90024e08:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90024e0c:	4351      	muls	r1, r2
90024e0e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90024e10:	fb0c 1c00 	mla	ip, ip, r0, r1
90024e14:	990a      	ldr	r1, [sp, #40]	; 0x28
90024e16:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90024e1a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
90024e1e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90024e20:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024e24:	0412      	lsls	r2, r2, #16
90024e26:	ea4b 0000 	orr.w	r0, fp, r0
90024e2a:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
90024e2e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024e32:	fb03 c000 	mla	r0, r3, r0, ip
90024e36:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90024e3a:	ea42 0b0b 	orr.w	fp, r2, fp
90024e3e:	fb03 000b 	mla	r0, r3, fp, r0
90024e42:	0d43      	lsrs	r3, r0, #21
90024e44:	0940      	lsrs	r0, r0, #5
90024e46:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024e4a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024e4e:	4318      	orrs	r0, r3
90024e50:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90024e52:	441c      	add	r4, r3
90024e54:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024e56:	f82a 0b02 	strh.w	r0, [sl], #2
90024e5a:	441e      	add	r6, r3
90024e5c:	e73b      	b.n	90024cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90024e5e:	b00f      	add	sp, #60	; 0x3c
90024e60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90024e64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024e68:	b085      	sub	sp, #20
90024e6a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90024e6e:	9102      	str	r1, [sp, #8]
90024e70:	2c00      	cmp	r4, #0
90024e72:	fb04 7103 	mla	r1, r4, r3, r7
90024e76:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90024e7a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90024e7e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90024e82:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90024e86:	f2c0 811b 	blt.w	900250c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90024e8a:	45a6      	cmp	lr, r4
90024e8c:	f340 8118 	ble.w	900250c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90024e90:	2f00      	cmp	r7, #0
90024e92:	f2c0 8113 	blt.w	900250bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90024e96:	42bb      	cmp	r3, r7
90024e98:	f340 8110 	ble.w	900250bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90024e9c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90024ea0:	1c7a      	adds	r2, r7, #1
90024ea2:	f100 8110 	bmi.w	900250c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90024ea6:	4293      	cmp	r3, r2
90024ea8:	f340 810d 	ble.w	900250c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90024eac:	2e00      	cmp	r6, #0
90024eae:	f000 810c 	beq.w	900250ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90024eb2:	f8dc 1004 	ldr.w	r1, [ip, #4]
90024eb6:	3401      	adds	r4, #1
90024eb8:	f100 810b 	bmi.w	900250d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90024ebc:	45a6      	cmp	lr, r4
90024ebe:	f340 8108 	ble.w	900250d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90024ec2:	2800      	cmp	r0, #0
90024ec4:	f000 8108 	beq.w	900250d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90024ec8:	2f00      	cmp	r7, #0
90024eca:	f2c0 8100 	blt.w	900250ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90024ece:	42bb      	cmp	r3, r7
90024ed0:	f340 80fd 	ble.w	900250ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90024ed4:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90024ed8:	3701      	adds	r7, #1
90024eda:	f100 8100 	bmi.w	900250de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90024ede:	42bb      	cmp	r3, r7
90024ee0:	f340 80fd 	ble.w	900250de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90024ee4:	2e00      	cmp	r6, #0
90024ee6:	f000 80fc 	beq.w	900250e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90024eea:	3301      	adds	r3, #1
90024eec:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90024ef0:	b2b6      	uxth	r6, r6
90024ef2:	b280      	uxth	r0, r0
90024ef4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90024ef8:	fb00 fe06 	mul.w	lr, r0, r6
90024efc:	0136      	lsls	r6, r6, #4
90024efe:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90024f02:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90024f06:	eba6 070e 	sub.w	r7, r6, lr
90024f0a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90024f0e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90024f12:	b280      	uxth	r0, r0
90024f14:	b2bf      	uxth	r7, r7
90024f16:	1a1b      	subs	r3, r3, r0
90024f18:	ea4f 6812 	mov.w	r8, r2, lsr #24
90024f1c:	fb0a f607 	mul.w	r6, sl, r7
90024f20:	b29b      	uxth	r3, r3
90024f22:	fb0b 6603 	mla	r6, fp, r3, r6
90024f26:	fb00 6609 	mla	r6, r0, r9, r6
90024f2a:	fb0e 6608 	mla	r6, lr, r8, r6
90024f2e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90024f32:	9600      	str	r6, [sp, #0]
90024f34:	2e00      	cmp	r6, #0
90024f36:	f000 80be 	beq.w	900250b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90024f3a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024f3e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90024f42:	9e02      	ldr	r6, [sp, #8]
90024f44:	fb0b fc0c 	mul.w	ip, fp, ip
90024f48:	fb0b f505 	mul.w	r5, fp, r5
90024f4c:	8836      	ldrh	r6, [r6, #0]
90024f4e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90024f52:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024f56:	9501      	str	r5, [sp, #4]
90024f58:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90024f5c:	44dc      	add	ip, fp
90024f5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024f62:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90024f66:	9503      	str	r5, [sp, #12]
90024f68:	9d01      	ldr	r5, [sp, #4]
90024f6a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90024f6e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90024f72:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90024f76:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90024f7a:	fb0a fc0c 	mul.w	ip, sl, ip
90024f7e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90024f82:	fb0a fa01 	mul.w	sl, sl, r1
90024f86:	ea4f 251c 	mov.w	r5, ip, lsr #8
90024f8a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024f8e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90024f92:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024f96:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90024f9a:	4465      	add	r5, ip
90024f9c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90024fa0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90024fa4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024fa8:	fb09 fc0c 	mul.w	ip, r9, ip
90024fac:	0a2d      	lsrs	r5, r5, #8
90024fae:	fb09 f904 	mul.w	r9, r9, r4
90024fb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024fb6:	ea4f 211c 	mov.w	r1, ip, lsr #8
90024fba:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024fbe:	f509 7480 	add.w	r4, r9, #256	; 0x100
90024fc2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024fc6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90024fca:	437d      	muls	r5, r7
90024fcc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90024fd0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90024fd4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90024fd8:	4461      	add	r1, ip
90024fda:	fb08 f404 	mul.w	r4, r8, r4
90024fde:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024fe2:	fb08 f802 	mul.w	r8, r8, r2
90024fe6:	0a09      	lsrs	r1, r1, #8
90024fe8:	0a22      	lsrs	r2, r4, #8
90024fea:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90024fee:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90024ff2:	fb07 f70a 	mul.w	r7, r7, sl
90024ff6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90024ffa:	4414      	add	r4, r2
90024ffc:	f508 7280 	add.w	r2, r8, #256	; 0x100
90025000:	0a24      	lsrs	r4, r4, #8
90025002:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90025006:	9a03      	ldr	r2, [sp, #12]
90025008:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9002500c:	fb02 5503 	mla	r5, r2, r3, r5
90025010:	ea4f 2818 	mov.w	r8, r8, lsr #8
90025014:	9a00      	ldr	r2, [sp, #0]
90025016:	fb04 540e 	mla	r4, r4, lr, r5
9002501a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
9002501e:	1235      	asrs	r5, r6, #8
90025020:	fb01 4100 	mla	r1, r1, r0, r4
90025024:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90025028:	0a09      	lsrs	r1, r1, #8
9002502a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
9002502e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90025032:	fb03 7101 	mla	r1, r3, r1, r7
90025036:	fb0e 1e08 	mla	lr, lr, r8, r1
9002503a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
9002503e:	fb00 e101 	mla	r1, r0, r1, lr
90025042:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90025046:	b287      	uxth	r7, r0
90025048:	0a09      	lsrs	r1, r1, #8
9002504a:	437a      	muls	r2, r7
9002504c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90025050:	1c53      	adds	r3, r2, #1
90025052:	4321      	orrs	r1, r4
90025054:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025058:	0c0a      	lsrs	r2, r1, #16
9002505a:	f3c1 2407 	ubfx	r4, r1, #8, #8
9002505e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90025062:	b2c8      	uxtb	r0, r1
90025064:	fb12 f207 	smulbb	r2, r2, r7
90025068:	fb14 f407 	smulbb	r4, r4, r7
9002506c:	b2db      	uxtb	r3, r3
9002506e:	fb10 f007 	smulbb	r0, r0, r7
90025072:	fb05 2503 	mla	r5, r5, r3, r2
90025076:	10f2      	asrs	r2, r6, #3
90025078:	00f6      	lsls	r6, r6, #3
9002507a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002507e:	b2ad      	uxth	r5, r5
90025080:	b2f6      	uxtb	r6, r6
90025082:	fb02 4203 	mla	r2, r2, r3, r4
90025086:	fb06 0303 	mla	r3, r6, r3, r0
9002508a:	b294      	uxth	r4, r2
9002508c:	b299      	uxth	r1, r3
9002508e:	1c6b      	adds	r3, r5, #1
90025090:	1c62      	adds	r2, r4, #1
90025092:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025096:	1c4b      	adds	r3, r1, #1
90025098:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9002509c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900250a0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900250a4:	0952      	lsrs	r2, r2, #5
900250a6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900250aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900250ae:	432b      	orrs	r3, r5
900250b0:	4313      	orrs	r3, r2
900250b2:	9a02      	ldr	r2, [sp, #8]
900250b4:	8013      	strh	r3, [r2, #0]
900250b6:	b005      	add	sp, #20
900250b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900250bc:	2500      	movs	r5, #0
900250be:	e6ef      	b.n	90024ea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
900250c0:	2100      	movs	r1, #0
900250c2:	460d      	mov	r5, r1
900250c4:	e6f7      	b.n	90024eb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900250c6:	2100      	movs	r1, #0
900250c8:	e6f5      	b.n	90024eb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900250ca:	4631      	mov	r1, r6
900250cc:	e6f3      	b.n	90024eb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900250ce:	2400      	movs	r4, #0
900250d0:	e702      	b.n	90024ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
900250d2:	2200      	movs	r2, #0
900250d4:	4614      	mov	r4, r2
900250d6:	e70b      	b.n	90024ef0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900250d8:	4602      	mov	r2, r0
900250da:	4604      	mov	r4, r0
900250dc:	e708      	b.n	90024ef0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900250de:	2200      	movs	r2, #0
900250e0:	e706      	b.n	90024ef0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900250e2:	4632      	mov	r2, r6
900250e4:	e704      	b.n	90024ef0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

900250e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900250e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900250ea:	b09d      	sub	sp, #116	; 0x74
900250ec:	9219      	str	r2, [sp, #100]	; 0x64
900250ee:	9307      	str	r3, [sp, #28]
900250f0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
900250f2:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
900250f6:	901b      	str	r0, [sp, #108]	; 0x6c
900250f8:	931a      	str	r3, [sp, #104]	; 0x68
900250fa:	6850      	ldr	r0, [r2, #4]
900250fc:	9117      	str	r1, [sp, #92]	; 0x5c
900250fe:	6812      	ldr	r2, [r2, #0]
90025100:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90025104:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
90025108:	fb00 1303 	mla	r3, r0, r3, r1
9002510c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025110:	930a      	str	r3, [sp, #40]	; 0x28
90025112:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90025114:	681b      	ldr	r3, [r3, #0]
90025116:	9310      	str	r3, [sp, #64]	; 0x40
90025118:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9002511c:	930b      	str	r3, [sp, #44]	; 0x2c
9002511e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90025120:	2b00      	cmp	r3, #0
90025122:	dc03      	bgt.n	9002512c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90025124:	9b19      	ldr	r3, [sp, #100]	; 0x64
90025126:	2b00      	cmp	r3, #0
90025128:	f340 8375 	ble.w	90025816 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
9002512c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9002512e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025132:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025136:	1e48      	subs	r0, r1, #1
90025138:	1e57      	subs	r7, r2, #1
9002513a:	9b07      	ldr	r3, [sp, #28]
9002513c:	2b00      	cmp	r3, #0
9002513e:	f340 818e 	ble.w	9002545e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90025142:	ea5f 4c24 	movs.w	ip, r4, asr #16
90025146:	ea4f 4326 	mov.w	r3, r6, asr #16
9002514a:	d406      	bmi.n	9002515a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9002514c:	4584      	cmp	ip, r0
9002514e:	da04      	bge.n	9002515a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90025150:	2b00      	cmp	r3, #0
90025152:	db02      	blt.n	9002515a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90025154:	42bb      	cmp	r3, r7
90025156:	f2c0 8183 	blt.w	90025460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
9002515a:	f11c 0c01 	adds.w	ip, ip, #1
9002515e:	f100 8173 	bmi.w	90025448 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025162:	4561      	cmp	r1, ip
90025164:	f2c0 8170 	blt.w	90025448 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025168:	3301      	adds	r3, #1
9002516a:	f100 816d 	bmi.w	90025448 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002516e:	429a      	cmp	r2, r3
90025170:	f2c0 816a 	blt.w	90025448 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025174:	9b07      	ldr	r3, [sp, #28]
90025176:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90025178:	9318      	str	r3, [sp, #96]	; 0x60
9002517a:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002517c:	2b00      	cmp	r3, #0
9002517e:	f340 818c 	ble.w	9002549a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90025182:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
90025184:	ea4f 4c26 	mov.w	ip, r6, asr #16
90025188:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9002518a:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002518e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90025192:	1422      	asrs	r2, r4, #16
90025194:	f3c6 3103 	ubfx	r1, r6, #12, #4
90025198:	689b      	ldr	r3, [r3, #8]
9002519a:	f100 81cd 	bmi.w	90025538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002519e:	f103 38ff 	add.w	r8, r3, #4294967295
900251a2:	4542      	cmp	r2, r8
900251a4:	f280 81c8 	bge.w	90025538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900251a8:	f1bc 0f00 	cmp.w	ip, #0
900251ac:	f2c0 81c4 	blt.w	90025538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900251b0:	f10e 38ff 	add.w	r8, lr, #4294967295
900251b4:	45c4      	cmp	ip, r8
900251b6:	f280 81bf 	bge.w	90025538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900251ba:	b21b      	sxth	r3, r3
900251bc:	9d10      	ldr	r5, [sp, #64]	; 0x40
900251be:	fb0c 2203 	mla	r2, ip, r3, r2
900251c2:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900251c6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900251ca:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900251ce:	2800      	cmp	r0, #0
900251d0:	f000 81a9 	beq.w	90025526 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
900251d4:	f8d8 5004 	ldr.w	r5, [r8, #4]
900251d8:	950c      	str	r5, [sp, #48]	; 0x30
900251da:	0e2d      	lsrs	r5, r5, #24
900251dc:	9513      	str	r5, [sp, #76]	; 0x4c
900251de:	b181      	cbz	r1, 90025202 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900251e0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
900251e4:	3b01      	subs	r3, #1
900251e6:	009b      	lsls	r3, r3, #2
900251e8:	3304      	adds	r3, #4
900251ea:	eb08 0c03 	add.w	ip, r8, r3
900251ee:	f858 3003 	ldr.w	r3, [r8, r3]
900251f2:	9308      	str	r3, [sp, #32]
900251f4:	0e1b      	lsrs	r3, r3, #24
900251f6:	9311      	str	r3, [sp, #68]	; 0x44
900251f8:	f8dc 3004 	ldr.w	r3, [ip, #4]
900251fc:	930d      	str	r3, [sp, #52]	; 0x34
900251fe:	0e1b      	lsrs	r3, r3, #24
90025200:	9314      	str	r3, [sp, #80]	; 0x50
90025202:	b280      	uxth	r0, r0
90025204:	9d11      	ldr	r5, [sp, #68]	; 0x44
90025206:	b289      	uxth	r1, r1
90025208:	fb00 f901 	mul.w	r9, r0, r1
9002520c:	0100      	lsls	r0, r0, #4
9002520e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90025212:	eba0 0809 	sub.w	r8, r0, r9
90025216:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9002521a:	9813      	ldr	r0, [sp, #76]	; 0x4c
9002521c:	b289      	uxth	r1, r1
9002521e:	fa1f f888 	uxth.w	r8, r8
90025222:	1a5b      	subs	r3, r3, r1
90025224:	fb08 f000 	mul.w	r0, r8, r0
90025228:	b29b      	uxth	r3, r3
9002522a:	fb03 000e 	mla	r0, r3, lr, r0
9002522e:	fb01 0005 	mla	r0, r1, r5, r0
90025232:	9d14      	ldr	r5, [sp, #80]	; 0x50
90025234:	fb09 0005 	mla	r0, r9, r5, r0
90025238:	f3c0 2007 	ubfx	r0, r0, #8, #8
9002523c:	2800      	cmp	r0, #0
9002523e:	f000 80fa 	beq.w	90025436 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025242:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90025246:	d01b      	beq.n	90025280 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90025248:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
9002524c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90025250:	fb0e fa0a 	mul.w	sl, lr, sl
90025254:	fb0e fe02 	mul.w	lr, lr, r2
90025258:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002525c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90025260:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90025264:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90025268:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002526c:	4452      	add	r2, sl
9002526e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025272:	0a12      	lsrs	r2, r2, #8
90025274:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90025278:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002527c:	ea42 020c 	orr.w	r2, r2, ip
90025280:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90025282:	2dff      	cmp	r5, #255	; 0xff
90025284:	d021      	beq.n	900252ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90025286:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025288:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002528c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002528e:	fb05 fb0b 	mul.w	fp, r5, fp
90025292:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025294:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025298:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002529a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002529e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900252a2:	fb05 fa0a 	mul.w	sl, r5, sl
900252a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900252aa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900252ae:	44de      	add	lr, fp
900252b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900252b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900252b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900252bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900252c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900252c4:	ea4e 050a 	orr.w	r5, lr, sl
900252c8:	950c      	str	r5, [sp, #48]	; 0x30
900252ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
900252cc:	2dff      	cmp	r5, #255	; 0xff
900252ce:	d021      	beq.n	90025314 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
900252d0:	9d08      	ldr	r5, [sp, #32]
900252d2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900252d6:	9d11      	ldr	r5, [sp, #68]	; 0x44
900252d8:	fb05 fb0b 	mul.w	fp, r5, fp
900252dc:	9d08      	ldr	r5, [sp, #32]
900252de:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900252e2:	9d11      	ldr	r5, [sp, #68]	; 0x44
900252e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900252e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900252ec:	fb05 fa0a 	mul.w	sl, r5, sl
900252f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900252f4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900252f8:	44de      	add	lr, fp
900252fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900252fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025302:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025306:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002530a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002530e:	ea4e 050a 	orr.w	r5, lr, sl
90025312:	9508      	str	r5, [sp, #32]
90025314:	9d14      	ldr	r5, [sp, #80]	; 0x50
90025316:	2dff      	cmp	r5, #255	; 0xff
90025318:	d021      	beq.n	9002535e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
9002531a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002531c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90025320:	9d14      	ldr	r5, [sp, #80]	; 0x50
90025322:	fb05 fb0b 	mul.w	fp, r5, fp
90025326:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90025328:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002532c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002532e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025332:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90025336:	fb05 fa0a 	mul.w	sl, r5, sl
9002533a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002533e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90025342:	44de      	add	lr, fp
90025344:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025348:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002534c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025350:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025354:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025358:	ea4e 050a 	orr.w	r5, lr, sl
9002535c:	950d      	str	r5, [sp, #52]	; 0x34
9002535e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025360:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90025364:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90025368:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002536c:	9d08      	ldr	r5, [sp, #32]
9002536e:	fb08 fc0c 	mul.w	ip, r8, ip
90025372:	fb03 cc0e 	mla	ip, r3, lr, ip
90025376:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9002537a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002537c:	fb01 cc0e 	mla	ip, r1, lr, ip
90025380:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90025384:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025386:	fb09 cc0e 	mla	ip, r9, lr, ip
9002538a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002538e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025390:	fb08 f80e 	mul.w	r8, r8, lr
90025394:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025398:	fb03 8202 	mla	r2, r3, r2, r8
9002539c:	9b08      	ldr	r3, [sp, #32]
9002539e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900253a2:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
900253a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900253a8:	fb01 220a 	mla	r2, r1, sl, r2
900253ac:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
900253b0:	883b      	ldrh	r3, [r7, #0]
900253b2:	fb09 2901 	mla	r9, r9, r1, r2
900253b6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900253b8:	1219      	asrs	r1, r3, #8
900253ba:	4342      	muls	r2, r0
900253bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
900253c0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900253c4:	1c50      	adds	r0, r2, #1
900253c6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900253ca:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900253ce:	ea4c 0c09 	orr.w	ip, ip, r9
900253d2:	ea6f 2010 	mvn.w	r0, r0, lsr #8
900253d6:	ea4f 421c 	mov.w	r2, ip, lsr #16
900253da:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900253de:	fa5f fc8c 	uxtb.w	ip, ip
900253e2:	fb12 f205 	smulbb	r2, r2, r5
900253e6:	b2c0      	uxtb	r0, r0
900253e8:	fb1c fc05 	smulbb	ip, ip, r5
900253ec:	fb01 2100 	mla	r1, r1, r0, r2
900253f0:	10da      	asrs	r2, r3, #3
900253f2:	fb1e fe05 	smulbb	lr, lr, r5
900253f6:	00db      	lsls	r3, r3, #3
900253f8:	b289      	uxth	r1, r1
900253fa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900253fe:	b2db      	uxtb	r3, r3
90025400:	fb02 e200 	mla	r2, r2, r0, lr
90025404:	fb03 c300 	mla	r3, r3, r0, ip
90025408:	b292      	uxth	r2, r2
9002540a:	fa1f fc83 	uxth.w	ip, r3
9002540e:	1c4b      	adds	r3, r1, #1
90025410:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90025414:	f10c 0301 	add.w	r3, ip, #1
90025418:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002541c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90025420:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025424:	430b      	orrs	r3, r1
90025426:	1c51      	adds	r1, r2, #1
90025428:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002542c:	0952      	lsrs	r2, r2, #5
9002542e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025432:	4313      	orrs	r3, r2
90025434:	803b      	strh	r3, [r7, #0]
90025436:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90025438:	3702      	adds	r7, #2
9002543a:	441c      	add	r4, r3
9002543c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002543e:	441e      	add	r6, r3
90025440:	9b18      	ldr	r3, [sp, #96]	; 0x60
90025442:	3b01      	subs	r3, #1
90025444:	9318      	str	r3, [sp, #96]	; 0x60
90025446:	e698      	b.n	9002517a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90025448:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002544a:	441c      	add	r4, r3
9002544c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002544e:	441e      	add	r6, r3
90025450:	9b07      	ldr	r3, [sp, #28]
90025452:	3b01      	subs	r3, #1
90025454:	9307      	str	r3, [sp, #28]
90025456:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025458:	3302      	adds	r3, #2
9002545a:	930a      	str	r3, [sp, #40]	; 0x28
9002545c:	e66d      	b.n	9002513a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9002545e:	d023      	beq.n	900254a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90025460:	9b07      	ldr	r3, [sp, #28]
90025462:	9829      	ldr	r0, [sp, #164]	; 0xa4
90025464:	3b01      	subs	r3, #1
90025466:	fb00 4003 	mla	r0, r0, r3, r4
9002546a:	1400      	asrs	r0, r0, #16
9002546c:	f53f ae82 	bmi.w	90025174 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025470:	3901      	subs	r1, #1
90025472:	4288      	cmp	r0, r1
90025474:	f6bf ae7e 	bge.w	90025174 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025478:	992a      	ldr	r1, [sp, #168]	; 0xa8
9002547a:	fb01 6303 	mla	r3, r1, r3, r6
9002547e:	141b      	asrs	r3, r3, #16
90025480:	f53f ae78 	bmi.w	90025174 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025484:	3a01      	subs	r2, #1
90025486:	4293      	cmp	r3, r2
90025488:	f6bf ae74 	bge.w	90025174 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002548c:	f8dd b01c 	ldr.w	fp, [sp, #28]
90025490:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90025494:	f1bb 0f00 	cmp.w	fp, #0
90025498:	dc6c      	bgt.n	90025574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002549a:	9b07      	ldr	r3, [sp, #28]
9002549c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900254a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900254a2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900254a6:	930a      	str	r3, [sp, #40]	; 0x28
900254a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900254aa:	2b00      	cmp	r3, #0
900254ac:	f340 81b3 	ble.w	90025816 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900254b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900254b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
900254b6:	ee30 0a04 	vadd.f32	s0, s0, s8
900254ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
900254be:	eef0 6a62 	vmov.f32	s13, s5
900254c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900254c6:	ee31 1a05 	vadd.f32	s2, s2, s10
900254ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900254ce:	ee16 4a90 	vmov	r4, s13
900254d2:	eef0 6a43 	vmov.f32	s13, s6
900254d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900254da:	ee16 6a90 	vmov	r6, s13
900254de:	ee20 7aa7 	vmul.f32	s14, s1, s15
900254e2:	ee61 7a27 	vmul.f32	s15, s2, s15
900254e6:	ee77 2a62 	vsub.f32	s5, s14, s5
900254ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
900254ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900254f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900254f6:	ee12 2a90 	vmov	r2, s5
900254fa:	eef0 2a47 	vmov.f32	s5, s14
900254fe:	fb92 f3f3 	sdiv	r3, r2, r3
90025502:	ee13 2a10 	vmov	r2, s6
90025506:	9329      	str	r3, [sp, #164]	; 0xa4
90025508:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002550a:	eeb0 3a67 	vmov.f32	s6, s15
9002550e:	fb92 f3f3 	sdiv	r3, r2, r3
90025512:	932a      	str	r3, [sp, #168]	; 0xa8
90025514:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90025516:	9a19      	ldr	r2, [sp, #100]	; 0x64
90025518:	3b01      	subs	r3, #1
9002551a:	9317      	str	r3, [sp, #92]	; 0x5c
9002551c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002551e:	bf08      	it	eq
90025520:	4613      	moveq	r3, r2
90025522:	9307      	str	r3, [sp, #28]
90025524:	e5fb      	b.n	9002511e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90025526:	2900      	cmp	r1, #0
90025528:	f43f ae6b 	beq.w	90025202 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9002552c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90025530:	9308      	str	r3, [sp, #32]
90025532:	0e1b      	lsrs	r3, r3, #24
90025534:	9311      	str	r3, [sp, #68]	; 0x44
90025536:	e664      	b.n	90025202 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90025538:	f112 0801 	adds.w	r8, r2, #1
9002553c:	f53f af7b 	bmi.w	90025436 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025540:	4543      	cmp	r3, r8
90025542:	f6ff af78 	blt.w	90025436 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025546:	f11c 0801 	adds.w	r8, ip, #1
9002554a:	f53f af74 	bmi.w	90025436 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002554e:	45c6      	cmp	lr, r8
90025550:	f6ff af71 	blt.w	90025436 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025554:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90025556:	b21b      	sxth	r3, r3
90025558:	9201      	str	r2, [sp, #4]
9002555a:	fa0f f28e 	sxth.w	r2, lr
9002555e:	e9cd 1504 	strd	r1, r5, [sp, #16]
90025562:	e9cd c002 	strd	ip, r0, [sp, #8]
90025566:	9200      	str	r2, [sp, #0]
90025568:	4639      	mov	r1, r7
9002556a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9002556c:	981b      	ldr	r0, [sp, #108]	; 0x6c
9002556e:	f7ff fc79 	bl	90024e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90025572:	e760      	b.n	90025436 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025574:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90025576:	1427      	asrs	r7, r4, #16
90025578:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002557a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002557e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025582:	1433      	asrs	r3, r6, #16
90025584:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025588:	fb01 7303 	mla	r3, r1, r3, r7
9002558c:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90025590:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90025594:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025598:	2a00      	cmp	r2, #0
9002559a:	f000 8133 	beq.w	90025804 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
9002559e:	687d      	ldr	r5, [r7, #4]
900255a0:	950e      	str	r5, [sp, #56]	; 0x38
900255a2:	0e2d      	lsrs	r5, r5, #24
900255a4:	9515      	str	r5, [sp, #84]	; 0x54
900255a6:	b178      	cbz	r0, 900255c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900255a8:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
900255ac:	3901      	subs	r1, #1
900255ae:	0089      	lsls	r1, r1, #2
900255b0:	3104      	adds	r1, #4
900255b2:	eb07 0e01 	add.w	lr, r7, r1
900255b6:	5879      	ldr	r1, [r7, r1]
900255b8:	9109      	str	r1, [sp, #36]	; 0x24
900255ba:	0e09      	lsrs	r1, r1, #24
900255bc:	9112      	str	r1, [sp, #72]	; 0x48
900255be:	f8de 1004 	ldr.w	r1, [lr, #4]
900255c2:	910f      	str	r1, [sp, #60]	; 0x3c
900255c4:	0e09      	lsrs	r1, r1, #24
900255c6:	9116      	str	r1, [sp, #88]	; 0x58
900255c8:	b292      	uxth	r2, r2
900255ca:	9915      	ldr	r1, [sp, #84]	; 0x54
900255cc:	b280      	uxth	r0, r0
900255ce:	9d12      	ldr	r5, [sp, #72]	; 0x48
900255d0:	fb02 f800 	mul.w	r8, r2, r0
900255d4:	0112      	lsls	r2, r2, #4
900255d6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900255da:	eba2 0e08 	sub.w	lr, r2, r8
900255de:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900255e2:	b280      	uxth	r0, r0
900255e4:	fa1f fe8e 	uxth.w	lr, lr
900255e8:	1a12      	subs	r2, r2, r0
900255ea:	fb0e f101 	mul.w	r1, lr, r1
900255ee:	b292      	uxth	r2, r2
900255f0:	fb02 110c 	mla	r1, r2, ip, r1
900255f4:	fb00 1105 	mla	r1, r0, r5, r1
900255f8:	9d16      	ldr	r5, [sp, #88]	; 0x58
900255fa:	fb08 1105 	mla	r1, r8, r5, r1
900255fe:	f3c1 2107 	ubfx	r1, r1, #8, #8
90025602:	2900      	cmp	r1, #0
90025604:	f000 80f5 	beq.w	900257f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90025608:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9002560c:	d019      	beq.n	90025642 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
9002560e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90025612:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90025616:	fb0c fa0a 	mul.w	sl, ip, sl
9002561a:	fb0c fc03 	mul.w	ip, ip, r3
9002561e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025622:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90025626:	f50c 7780 	add.w	r7, ip, #256	; 0x100
9002562a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002562e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90025632:	4453      	add	r3, sl
90025634:	0a3f      	lsrs	r7, r7, #8
90025636:	0a1b      	lsrs	r3, r3, #8
90025638:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
9002563c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90025640:	433b      	orrs	r3, r7
90025642:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025644:	2dff      	cmp	r5, #255	; 0xff
90025646:	d020      	beq.n	9002568a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90025648:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002564a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002564e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025650:	436f      	muls	r7, r5
90025652:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025654:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025658:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002565c:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002565e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90025662:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025666:	fb05 fa0a 	mul.w	sl, r5, sl
9002566a:	44bc      	add	ip, r7
9002566c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90025670:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025674:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025678:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002567c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025680:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025684:	ea4c 050a 	orr.w	r5, ip, sl
90025688:	950e      	str	r5, [sp, #56]	; 0x38
9002568a:	9d12      	ldr	r5, [sp, #72]	; 0x48
9002568c:	2dff      	cmp	r5, #255	; 0xff
9002568e:	d020      	beq.n	900256d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90025690:	9d09      	ldr	r5, [sp, #36]	; 0x24
90025692:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025696:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025698:	436f      	muls	r7, r5
9002569a:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002569c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900256a0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900256a4:	9d12      	ldr	r5, [sp, #72]	; 0x48
900256a6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900256aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900256ae:	fb05 fa0a 	mul.w	sl, r5, sl
900256b2:	44bc      	add	ip, r7
900256b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900256b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900256bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900256c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900256c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900256c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900256cc:	ea4c 050a 	orr.w	r5, ip, sl
900256d0:	9509      	str	r5, [sp, #36]	; 0x24
900256d2:	9d16      	ldr	r5, [sp, #88]	; 0x58
900256d4:	2dff      	cmp	r5, #255	; 0xff
900256d6:	d020      	beq.n	9002571a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
900256d8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900256da:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900256de:	9d16      	ldr	r5, [sp, #88]	; 0x58
900256e0:	436f      	muls	r7, r5
900256e2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900256e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900256e8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900256ec:	9d16      	ldr	r5, [sp, #88]	; 0x58
900256ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900256f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900256f6:	fb05 fa0a 	mul.w	sl, r5, sl
900256fa:	44bc      	add	ip, r7
900256fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90025700:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025704:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025708:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002570c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025710:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025714:	ea4c 050a 	orr.w	r5, ip, sl
90025718:	950f      	str	r5, [sp, #60]	; 0x3c
9002571a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002571c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90025720:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90025724:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025728:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002572a:	fb0e f707 	mul.w	r7, lr, r7
9002572e:	fb02 770c 	mla	r7, r2, ip, r7
90025732:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90025736:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90025738:	fb00 770c 	mla	r7, r0, ip, r7
9002573c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90025740:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025742:	fb08 770c 	mla	r7, r8, ip, r7
90025746:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9002574a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002574c:	fb0e fe0c 	mul.w	lr, lr, ip
90025750:	0a3f      	lsrs	r7, r7, #8
90025752:	fb02 e303 	mla	r3, r2, r3, lr
90025756:	9a09      	ldr	r2, [sp, #36]	; 0x24
90025758:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9002575c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90025760:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90025762:	fb00 330a 	mla	r3, r0, sl, r3
90025766:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
9002576a:	f8b9 0000 	ldrh.w	r0, [r9]
9002576e:	fb08 3c0c 	mla	ip, r8, ip, r3
90025772:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90025774:	1202      	asrs	r2, r0, #8
90025776:	4359      	muls	r1, r3
90025778:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002577c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90025780:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90025784:	1c4b      	adds	r3, r1, #1
90025786:	ea47 070c 	orr.w	r7, r7, ip
9002578a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002578e:	0c3b      	lsrs	r3, r7, #16
90025790:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90025794:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90025798:	b2ff      	uxtb	r7, r7
9002579a:	fb13 f305 	smulbb	r3, r3, r5
9002579e:	b2c9      	uxtb	r1, r1
900257a0:	fb17 f705 	smulbb	r7, r7, r5
900257a4:	fb02 3201 	mla	r2, r2, r1, r3
900257a8:	10c3      	asrs	r3, r0, #3
900257aa:	fb1c fc05 	smulbb	ip, ip, r5
900257ae:	00c0      	lsls	r0, r0, #3
900257b0:	b292      	uxth	r2, r2
900257b2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900257b6:	b2c0      	uxtb	r0, r0
900257b8:	fb03 c301 	mla	r3, r3, r1, ip
900257bc:	fb00 7001 	mla	r0, r0, r1, r7
900257c0:	1c51      	adds	r1, r2, #1
900257c2:	b29b      	uxth	r3, r3
900257c4:	b280      	uxth	r0, r0
900257c6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900257ca:	f100 0c01 	add.w	ip, r0, #1
900257ce:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
900257d2:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
900257d6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900257da:	ea4c 0202 	orr.w	r2, ip, r2
900257de:	f103 0c01 	add.w	ip, r3, #1
900257e2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900257e6:	095b      	lsrs	r3, r3, #5
900257e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900257ec:	431a      	orrs	r2, r3
900257ee:	f8a9 2000 	strh.w	r2, [r9]
900257f2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900257f4:	f109 0902 	add.w	r9, r9, #2
900257f8:	f10b 3bff 	add.w	fp, fp, #4294967295
900257fc:	441c      	add	r4, r3
900257fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90025800:	441e      	add	r6, r3
90025802:	e647      	b.n	90025494 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90025804:	2800      	cmp	r0, #0
90025806:	f43f aedf 	beq.w	900255c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
9002580a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
9002580e:	9109      	str	r1, [sp, #36]	; 0x24
90025810:	0e09      	lsrs	r1, r1, #24
90025812:	9112      	str	r1, [sp, #72]	; 0x48
90025814:	e6d8      	b.n	900255c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90025816:	b01d      	add	sp, #116	; 0x74
90025818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002581c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
9002581c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025820:	b085      	sub	sp, #20
90025822:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90025826:	9102      	str	r1, [sp, #8]
90025828:	2c00      	cmp	r4, #0
9002582a:	fb04 7103 	mla	r1, r4, r3, r7
9002582e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90025832:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90025836:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002583a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
9002583e:	f2c0 810c 	blt.w	90025a5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90025842:	45a6      	cmp	lr, r4
90025844:	f340 8109 	ble.w	90025a5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90025848:	2f00      	cmp	r7, #0
9002584a:	f2c0 8104 	blt.w	90025a56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
9002584e:	42bb      	cmp	r3, r7
90025850:	f340 8101 	ble.w	90025a56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90025854:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90025858:	1c7a      	adds	r2, r7, #1
9002585a:	f100 8101 	bmi.w	90025a60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002585e:	4293      	cmp	r3, r2
90025860:	f340 80fe 	ble.w	90025a60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90025864:	2e00      	cmp	r6, #0
90025866:	f000 80fd 	beq.w	90025a64 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
9002586a:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002586e:	3401      	adds	r4, #1
90025870:	f100 80fc 	bmi.w	90025a6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90025874:	45a6      	cmp	lr, r4
90025876:	f340 80f9 	ble.w	90025a6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
9002587a:	2800      	cmp	r0, #0
9002587c:	f000 80f9 	beq.w	90025a72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90025880:	2f00      	cmp	r7, #0
90025882:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90025886:	f2c0 80ef 	blt.w	90025a68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
9002588a:	42bb      	cmp	r3, r7
9002588c:	f340 80ec 	ble.w	90025a68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90025890:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90025894:	3701      	adds	r7, #1
90025896:	f100 80ef 	bmi.w	90025a78 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002589a:	42bb      	cmp	r3, r7
9002589c:	f340 80ec 	ble.w	90025a78 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
900258a0:	2e00      	cmp	r6, #0
900258a2:	f000 80eb 	beq.w	90025a7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
900258a6:	6852      	ldr	r2, [r2, #4]
900258a8:	b2b6      	uxth	r6, r6
900258aa:	b280      	uxth	r0, r0
900258ac:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900258b0:	fb00 fe06 	mul.w	lr, r0, r6
900258b4:	0136      	lsls	r6, r6, #4
900258b6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900258ba:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900258be:	eba6 070e 	sub.w	r7, r6, lr
900258c2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
900258c6:	ea4f 6914 	mov.w	r9, r4, lsr #24
900258ca:	b280      	uxth	r0, r0
900258cc:	b2bf      	uxth	r7, r7
900258ce:	1a1b      	subs	r3, r3, r0
900258d0:	ea4f 6812 	mov.w	r8, r2, lsr #24
900258d4:	fb07 f60a 	mul.w	r6, r7, sl
900258d8:	b29b      	uxth	r3, r3
900258da:	fb0b 6603 	mla	r6, fp, r3, r6
900258de:	fb00 6609 	mla	r6, r0, r9, r6
900258e2:	fb0e 6608 	mla	r6, lr, r8, r6
900258e6:	f3c6 2607 	ubfx	r6, r6, #8, #8
900258ea:	9600      	str	r6, [sp, #0]
900258ec:	2e00      	cmp	r6, #0
900258ee:	f000 80af 	beq.w	90025a50 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
900258f2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900258f6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900258fa:	9e02      	ldr	r6, [sp, #8]
900258fc:	fb0b fc0c 	mul.w	ip, fp, ip
90025900:	fb0b f505 	mul.w	r5, fp, r5
90025904:	8836      	ldrh	r6, [r6, #0]
90025906:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002590a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002590e:	9501      	str	r5, [sp, #4]
90025910:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90025914:	44dc      	add	ip, fp
90025916:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002591a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9002591e:	9503      	str	r5, [sp, #12]
90025920:	9d01      	ldr	r5, [sp, #4]
90025922:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90025926:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002592a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9002592e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90025932:	fb0a fc0c 	mul.w	ip, sl, ip
90025936:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9002593a:	fb0a fa01 	mul.w	sl, sl, r1
9002593e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90025942:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90025946:	f50a 7180 	add.w	r1, sl, #256	; 0x100
9002594a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002594e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90025952:	4465      	add	r5, ip
90025954:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90025958:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9002595c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025960:	fb09 fc0c 	mul.w	ip, r9, ip
90025964:	0a2d      	lsrs	r5, r5, #8
90025966:	fb09 f904 	mul.w	r9, r9, r4
9002596a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002596e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90025972:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90025976:	f509 7480 	add.w	r4, r9, #256	; 0x100
9002597a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002597e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90025982:	437d      	muls	r5, r7
90025984:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90025988:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
9002598c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90025990:	4461      	add	r1, ip
90025992:	fb08 f404 	mul.w	r4, r8, r4
90025996:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002599a:	fb08 f802 	mul.w	r8, r8, r2
9002599e:	0a09      	lsrs	r1, r1, #8
900259a0:	0a22      	lsrs	r2, r4, #8
900259a2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
900259a6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900259aa:	fb07 f70a 	mul.w	r7, r7, sl
900259ae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900259b2:	4414      	add	r4, r2
900259b4:	f508 7280 	add.w	r2, r8, #256	; 0x100
900259b8:	0a24      	lsrs	r4, r4, #8
900259ba:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900259be:	9a03      	ldr	r2, [sp, #12]
900259c0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900259c4:	fb02 5503 	mla	r5, r2, r3, r5
900259c8:	ea4f 2818 	mov.w	r8, r8, lsr #8
900259cc:	fb04 540e 	mla	r4, r4, lr, r5
900259d0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
900259d4:	fb01 4100 	mla	r1, r1, r0, r4
900259d8:	0a09      	lsrs	r1, r1, #8
900259da:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900259de:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900259e2:	fb03 7101 	mla	r1, r3, r1, r7
900259e6:	9b00      	ldr	r3, [sp, #0]
900259e8:	fb0e 1e08 	mla	lr, lr, r8, r1
900259ec:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900259f0:	43da      	mvns	r2, r3
900259f2:	1233      	asrs	r3, r6, #8
900259f4:	fb00 e101 	mla	r1, r0, r1, lr
900259f8:	10f0      	asrs	r0, r6, #3
900259fa:	b2d2      	uxtb	r2, r2
900259fc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90025a00:	0a09      	lsrs	r1, r1, #8
90025a02:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025a06:	00f6      	lsls	r6, r6, #3
90025a08:	4353      	muls	r3, r2
90025a0a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90025a0e:	4350      	muls	r0, r2
90025a10:	b2f6      	uxtb	r6, r6
90025a12:	4321      	orrs	r1, r4
90025a14:	4356      	muls	r6, r2
90025a16:	1c5a      	adds	r2, r3, #1
90025a18:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025a1c:	0c0b      	lsrs	r3, r1, #16
90025a1e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025a22:	1c42      	adds	r2, r0, #1
90025a24:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025a28:	0a0a      	lsrs	r2, r1, #8
90025a2a:	021b      	lsls	r3, r3, #8
90025a2c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90025a30:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90025a34:	00d2      	lsls	r2, r2, #3
90025a36:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025a3a:	4313      	orrs	r3, r2
90025a3c:	1c72      	adds	r2, r6, #1
90025a3e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90025a42:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90025a46:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90025a4a:	4319      	orrs	r1, r3
90025a4c:	9b02      	ldr	r3, [sp, #8]
90025a4e:	8019      	strh	r1, [r3, #0]
90025a50:	b005      	add	sp, #20
90025a52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025a56:	2500      	movs	r5, #0
90025a58:	e6fe      	b.n	90025858 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90025a5a:	2100      	movs	r1, #0
90025a5c:	460d      	mov	r5, r1
90025a5e:	e706      	b.n	9002586e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90025a60:	2100      	movs	r1, #0
90025a62:	e704      	b.n	9002586e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90025a64:	4631      	mov	r1, r6
90025a66:	e702      	b.n	9002586e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90025a68:	2400      	movs	r4, #0
90025a6a:	e713      	b.n	90025894 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90025a6c:	2200      	movs	r2, #0
90025a6e:	4614      	mov	r4, r2
90025a70:	e71a      	b.n	900258a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90025a72:	4602      	mov	r2, r0
90025a74:	4604      	mov	r4, r0
90025a76:	e717      	b.n	900258a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90025a78:	2200      	movs	r2, #0
90025a7a:	e715      	b.n	900258a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90025a7c:	4632      	mov	r2, r6
90025a7e:	e713      	b.n	900258a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90025a80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025a84:	b09b      	sub	sp, #108	; 0x6c
90025a86:	9218      	str	r2, [sp, #96]	; 0x60
90025a88:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90025a8a:	9019      	str	r0, [sp, #100]	; 0x64
90025a8c:	9116      	str	r1, [sp, #88]	; 0x58
90025a8e:	6850      	ldr	r0, [r2, #4]
90025a90:	9307      	str	r3, [sp, #28]
90025a92:	6812      	ldr	r2, [r2, #0]
90025a94:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90025a98:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
90025a9c:	fb00 1303 	mla	r3, r0, r3, r1
90025aa0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025aa4:	930a      	str	r3, [sp, #40]	; 0x28
90025aa6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90025aa8:	681b      	ldr	r3, [r3, #0]
90025aaa:	930f      	str	r3, [sp, #60]	; 0x3c
90025aac:	9b16      	ldr	r3, [sp, #88]	; 0x58
90025aae:	2b00      	cmp	r3, #0
90025ab0:	dc03      	bgt.n	90025aba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025ab2:	9b18      	ldr	r3, [sp, #96]	; 0x60
90025ab4:	2b00      	cmp	r3, #0
90025ab6:	f340 8387 	ble.w	900261c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90025aba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90025abc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025ac0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025ac4:	1e48      	subs	r0, r1, #1
90025ac6:	1e57      	subs	r7, r2, #1
90025ac8:	9b07      	ldr	r3, [sp, #28]
90025aca:	2b00      	cmp	r3, #0
90025acc:	f340 8166 	ble.w	90025d9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90025ad0:	ea5f 4c24 	movs.w	ip, r4, asr #16
90025ad4:	ea4f 4326 	mov.w	r3, r6, asr #16
90025ad8:	d406      	bmi.n	90025ae8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90025ada:	4584      	cmp	ip, r0
90025adc:	da04      	bge.n	90025ae8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90025ade:	2b00      	cmp	r3, #0
90025ae0:	db02      	blt.n	90025ae8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90025ae2:	42bb      	cmp	r3, r7
90025ae4:	f2c0 815b 	blt.w	90025d9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90025ae8:	f11c 0c01 	adds.w	ip, ip, #1
90025aec:	f100 814b 	bmi.w	90025d86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90025af0:	4561      	cmp	r1, ip
90025af2:	f2c0 8148 	blt.w	90025d86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90025af6:	3301      	adds	r3, #1
90025af8:	f100 8145 	bmi.w	90025d86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90025afc:	429a      	cmp	r2, r3
90025afe:	f2c0 8142 	blt.w	90025d86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90025b02:	9b07      	ldr	r3, [sp, #28]
90025b04:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90025b06:	9317      	str	r3, [sp, #92]	; 0x5c
90025b08:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90025b0a:	2b00      	cmp	r3, #0
90025b0c:	f340 8165 	ble.w	90025dda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90025b10:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
90025b12:	ea4f 4c26 	mov.w	ip, r6, asr #16
90025b16:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90025b18:	f3c4 3103 	ubfx	r1, r4, #12, #4
90025b1c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90025b20:	1422      	asrs	r2, r4, #16
90025b22:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025b26:	689b      	ldr	r3, [r3, #8]
90025b28:	f100 81d5 	bmi.w	90025ed6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025b2c:	f103 38ff 	add.w	r8, r3, #4294967295
90025b30:	4542      	cmp	r2, r8
90025b32:	f280 81d0 	bge.w	90025ed6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025b36:	f1bc 0f00 	cmp.w	ip, #0
90025b3a:	f2c0 81cc 	blt.w	90025ed6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025b3e:	f10e 38ff 	add.w	r8, lr, #4294967295
90025b42:	45c4      	cmp	ip, r8
90025b44:	f280 81c7 	bge.w	90025ed6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025b48:	b21b      	sxth	r3, r3
90025b4a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90025b4c:	fb0c 2203 	mla	r2, ip, r3, r2
90025b50:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90025b54:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90025b58:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90025b5c:	2900      	cmp	r1, #0
90025b5e:	f000 8182 	beq.w	90025e66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90025b62:	f8d8 5004 	ldr.w	r5, [r8, #4]
90025b66:	950b      	str	r5, [sp, #44]	; 0x2c
90025b68:	0e2d      	lsrs	r5, r5, #24
90025b6a:	9512      	str	r5, [sp, #72]	; 0x48
90025b6c:	b180      	cbz	r0, 90025b90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90025b6e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90025b72:	3b01      	subs	r3, #1
90025b74:	009b      	lsls	r3, r3, #2
90025b76:	3304      	adds	r3, #4
90025b78:	eb08 0c03 	add.w	ip, r8, r3
90025b7c:	f858 3003 	ldr.w	r3, [r8, r3]
90025b80:	9308      	str	r3, [sp, #32]
90025b82:	0e1b      	lsrs	r3, r3, #24
90025b84:	9310      	str	r3, [sp, #64]	; 0x40
90025b86:	f8dc 3004 	ldr.w	r3, [ip, #4]
90025b8a:	930c      	str	r3, [sp, #48]	; 0x30
90025b8c:	0e1b      	lsrs	r3, r3, #24
90025b8e:	9313      	str	r3, [sp, #76]	; 0x4c
90025b90:	b289      	uxth	r1, r1
90025b92:	9b12      	ldr	r3, [sp, #72]	; 0x48
90025b94:	b280      	uxth	r0, r0
90025b96:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025b98:	fb01 f900 	mul.w	r9, r1, r0
90025b9c:	0109      	lsls	r1, r1, #4
90025b9e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90025ba2:	eba1 0809 	sub.w	r8, r1, r9
90025ba6:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
90025baa:	b280      	uxth	r0, r0
90025bac:	fa1f f888 	uxth.w	r8, r8
90025bb0:	1a09      	subs	r1, r1, r0
90025bb2:	fb08 f303 	mul.w	r3, r8, r3
90025bb6:	b289      	uxth	r1, r1
90025bb8:	fb01 330e 	mla	r3, r1, lr, r3
90025bbc:	fb00 3305 	mla	r3, r0, r5, r3
90025bc0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90025bc2:	fb09 3305 	mla	r3, r9, r5, r3
90025bc6:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025bca:	2b00      	cmp	r3, #0
90025bcc:	f000 80d2 	beq.w	90025d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025bd0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90025bd4:	d01b      	beq.n	90025c0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90025bd6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
90025bda:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90025bde:	fb0e fa0a 	mul.w	sl, lr, sl
90025be2:	fb0e fe02 	mul.w	lr, lr, r2
90025be6:	ea4f 221a 	mov.w	r2, sl, lsr #8
90025bea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90025bee:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90025bf2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90025bf6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90025bfa:	4452      	add	r2, sl
90025bfc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025c00:	0a12      	lsrs	r2, r2, #8
90025c02:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90025c06:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90025c0a:	ea42 020c 	orr.w	r2, r2, ip
90025c0e:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025c10:	2dff      	cmp	r5, #255	; 0xff
90025c12:	d021      	beq.n	90025c58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90025c14:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025c16:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90025c1a:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025c1c:	fb05 fb0b 	mul.w	fp, r5, fp
90025c20:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025c22:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025c26:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025c28:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025c2c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90025c30:	fb05 fa0a 	mul.w	sl, r5, sl
90025c34:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025c38:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90025c3c:	44de      	add	lr, fp
90025c3e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025c42:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025c46:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025c4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025c4e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025c52:	ea4e 050a 	orr.w	r5, lr, sl
90025c56:	950b      	str	r5, [sp, #44]	; 0x2c
90025c58:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025c5a:	2dff      	cmp	r5, #255	; 0xff
90025c5c:	d021      	beq.n	90025ca2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90025c5e:	9d08      	ldr	r5, [sp, #32]
90025c60:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90025c64:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025c66:	fb05 fb0b 	mul.w	fp, r5, fp
90025c6a:	9d08      	ldr	r5, [sp, #32]
90025c6c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90025c70:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025c72:	fb05 fa0e 	mul.w	sl, r5, lr
90025c76:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025c7a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90025c7e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025c82:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90025c86:	44de      	add	lr, fp
90025c88:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025c8c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025c90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025c94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025c98:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025c9c:	ea4e 050a 	orr.w	r5, lr, sl
90025ca0:	9508      	str	r5, [sp, #32]
90025ca2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90025ca4:	2dff      	cmp	r5, #255	; 0xff
90025ca6:	d021      	beq.n	90025cec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90025ca8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025caa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90025cae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90025cb0:	fb05 fb0b 	mul.w	fp, r5, fp
90025cb4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025cb6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025cba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90025cbc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025cc0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90025cc4:	fb05 fa0a 	mul.w	sl, r5, sl
90025cc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025ccc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90025cd0:	44de      	add	lr, fp
90025cd2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025cd6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025cda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025cde:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025ce2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025ce6:	ea4e 050a 	orr.w	r5, lr, sl
90025cea:	950c      	str	r5, [sp, #48]	; 0x30
90025cec:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025cee:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90025cf2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90025cf6:	2bff      	cmp	r3, #255	; 0xff
90025cf8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90025cfc:	9d08      	ldr	r5, [sp, #32]
90025cfe:	fb08 fc0c 	mul.w	ip, r8, ip
90025d02:	fb01 cc0e 	mla	ip, r1, lr, ip
90025d06:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90025d0a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025d0c:	fb00 cc0e 	mla	ip, r0, lr, ip
90025d10:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90025d14:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025d16:	fb09 cc0e 	mla	ip, r9, lr, ip
90025d1a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90025d1e:	fb08 f80e 	mul.w	r8, r8, lr
90025d22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025d26:	fb01 8202 	mla	r2, r1, r2, r8
90025d2a:	9908      	ldr	r1, [sp, #32]
90025d2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025d30:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90025d34:	990c      	ldr	r1, [sp, #48]	; 0x30
90025d36:	fb00 220a 	mla	r2, r0, sl, r2
90025d3a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
90025d3e:	fb09 2900 	mla	r9, r9, r0, r2
90025d42:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025d46:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90025d4a:	ea4c 0c09 	orr.w	ip, ip, r9
90025d4e:	ea4f 221c 	mov.w	r2, ip, lsr #8
90025d52:	f040 8091 	bne.w	90025e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90025d56:	ea4f 135c 	mov.w	r3, ip, lsr #5
90025d5a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
90025d5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025d62:	f022 0207 	bic.w	r2, r2, #7
90025d66:	431a      	orrs	r2, r3
90025d68:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90025d6c:	ea4c 0c02 	orr.w	ip, ip, r2
90025d70:	f8a7 c000 	strh.w	ip, [r7]
90025d74:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90025d76:	3702      	adds	r7, #2
90025d78:	441c      	add	r4, r3
90025d7a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025d7c:	441e      	add	r6, r3
90025d7e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90025d80:	3b01      	subs	r3, #1
90025d82:	9317      	str	r3, [sp, #92]	; 0x5c
90025d84:	e6c0      	b.n	90025b08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90025d86:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90025d88:	441c      	add	r4, r3
90025d8a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025d8c:	441e      	add	r6, r3
90025d8e:	9b07      	ldr	r3, [sp, #28]
90025d90:	3b01      	subs	r3, #1
90025d92:	9307      	str	r3, [sp, #28]
90025d94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025d96:	3302      	adds	r3, #2
90025d98:	930a      	str	r3, [sp, #40]	; 0x28
90025d9a:	e695      	b.n	90025ac8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025d9c:	d024      	beq.n	90025de8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90025d9e:	9b07      	ldr	r3, [sp, #28]
90025da0:	9827      	ldr	r0, [sp, #156]	; 0x9c
90025da2:	3b01      	subs	r3, #1
90025da4:	fb00 4003 	mla	r0, r0, r3, r4
90025da8:	1400      	asrs	r0, r0, #16
90025daa:	f53f aeaa 	bmi.w	90025b02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90025dae:	3901      	subs	r1, #1
90025db0:	4288      	cmp	r0, r1
90025db2:	f6bf aea6 	bge.w	90025b02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90025db6:	9928      	ldr	r1, [sp, #160]	; 0xa0
90025db8:	fb01 6303 	mla	r3, r1, r3, r6
90025dbc:	141b      	asrs	r3, r3, #16
90025dbe:	f53f aea0 	bmi.w	90025b02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90025dc2:	3a01      	subs	r2, #1
90025dc4:	4293      	cmp	r3, r2
90025dc6:	f6bf ae9c 	bge.w	90025b02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90025dca:	f8dd b01c 	ldr.w	fp, [sp, #28]
90025dce:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
90025dd2:	f1bb 0f00 	cmp.w	fp, #0
90025dd6:	f300 809a 	bgt.w	90025f0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90025dda:	9b07      	ldr	r3, [sp, #28]
90025ddc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90025de0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025de2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025de6:	930a      	str	r3, [sp, #40]	; 0x28
90025de8:	9b16      	ldr	r3, [sp, #88]	; 0x58
90025dea:	2b00      	cmp	r3, #0
90025dec:	f340 81ec 	ble.w	900261c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90025df0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90025df4:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025df6:	ee30 0a04 	vadd.f32	s0, s0, s8
90025dfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025dfe:	eef0 6a62 	vmov.f32	s13, s5
90025e02:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025e06:	ee31 1a05 	vadd.f32	s2, s2, s10
90025e0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025e0e:	ee16 4a90 	vmov	r4, s13
90025e12:	eef0 6a43 	vmov.f32	s13, s6
90025e16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025e1a:	ee16 6a90 	vmov	r6, s13
90025e1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025e22:	ee61 7a27 	vmul.f32	s15, s2, s15
90025e26:	ee77 2a62 	vsub.f32	s5, s14, s5
90025e2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025e2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025e32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025e36:	ee12 2a90 	vmov	r2, s5
90025e3a:	eef0 2a47 	vmov.f32	s5, s14
90025e3e:	fb92 f3f3 	sdiv	r3, r2, r3
90025e42:	ee13 2a10 	vmov	r2, s6
90025e46:	9327      	str	r3, [sp, #156]	; 0x9c
90025e48:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025e4a:	eeb0 3a67 	vmov.f32	s6, s15
90025e4e:	fb92 f3f3 	sdiv	r3, r2, r3
90025e52:	9328      	str	r3, [sp, #160]	; 0xa0
90025e54:	9b16      	ldr	r3, [sp, #88]	; 0x58
90025e56:	9a18      	ldr	r2, [sp, #96]	; 0x60
90025e58:	3b01      	subs	r3, #1
90025e5a:	9316      	str	r3, [sp, #88]	; 0x58
90025e5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025e5e:	bf08      	it	eq
90025e60:	4613      	moveq	r3, r2
90025e62:	9307      	str	r3, [sp, #28]
90025e64:	e622      	b.n	90025aac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90025e66:	2800      	cmp	r0, #0
90025e68:	f43f ae92 	beq.w	90025b90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90025e6c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90025e70:	9308      	str	r3, [sp, #32]
90025e72:	0e1b      	lsrs	r3, r3, #24
90025e74:	9310      	str	r3, [sp, #64]	; 0x40
90025e76:	e68b      	b.n	90025b90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90025e78:	8839      	ldrh	r1, [r7, #0]
90025e7a:	43db      	mvns	r3, r3
90025e7c:	4dd4      	ldr	r5, [pc, #848]	; (900261d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90025e7e:	ea4f 2e21 	mov.w	lr, r1, asr #8
90025e82:	fa5f f883 	uxtb.w	r8, r3
90025e86:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90025e8a:	10c8      	asrs	r0, r1, #3
90025e8c:	00cb      	lsls	r3, r1, #3
90025e8e:	fb0e fe08 	mul.w	lr, lr, r8
90025e92:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025e96:	b2db      	uxtb	r3, r3
90025e98:	f10e 0101 	add.w	r1, lr, #1
90025e9c:	fb00 f008 	mul.w	r0, r0, r8
90025ea0:	fb03 f308 	mul.w	r3, r3, r8
90025ea4:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90025ea8:	ea4f 411c 	mov.w	r1, ip, lsr #16
90025eac:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90025eb0:	f100 0e01 	add.w	lr, r0, #1
90025eb4:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90025eb8:	b2c9      	uxtb	r1, r1
90025eba:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90025ebe:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90025ec2:	00d2      	lsls	r2, r2, #3
90025ec4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025ec8:	430a      	orrs	r2, r1
90025eca:	1c59      	adds	r1, r3, #1
90025ecc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90025ed0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90025ed4:	e748      	b.n	90025d68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90025ed6:	f112 0801 	adds.w	r8, r2, #1
90025eda:	f53f af4b 	bmi.w	90025d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025ede:	4543      	cmp	r3, r8
90025ee0:	f6ff af48 	blt.w	90025d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025ee4:	f11c 0801 	adds.w	r8, ip, #1
90025ee8:	f53f af44 	bmi.w	90025d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025eec:	45c6      	cmp	lr, r8
90025eee:	f6ff af41 	blt.w	90025d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025ef2:	b21b      	sxth	r3, r3
90025ef4:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90025ef8:	fa0f f28e 	sxth.w	r2, lr
90025efc:	e9cd 1003 	strd	r1, r0, [sp, #12]
90025f00:	9200      	str	r2, [sp, #0]
90025f02:	4639      	mov	r1, r7
90025f04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90025f06:	9819      	ldr	r0, [sp, #100]	; 0x64
90025f08:	f7ff fc88 	bl	9002581c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90025f0c:	e732      	b.n	90025d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025f0e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90025f10:	1421      	asrs	r1, r4, #16
90025f12:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90025f14:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025f18:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90025f1c:	1433      	asrs	r3, r6, #16
90025f1e:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025f22:	fb07 1303 	mla	r3, r7, r3, r1
90025f26:	990f      	ldr	r1, [sp, #60]	; 0x3c
90025f28:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90025f2c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90025f30:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025f34:	2a00      	cmp	r2, #0
90025f36:	f000 8108 	beq.w	9002614a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90025f3a:	684d      	ldr	r5, [r1, #4]
90025f3c:	950d      	str	r5, [sp, #52]	; 0x34
90025f3e:	0e2d      	lsrs	r5, r5, #24
90025f40:	9514      	str	r5, [sp, #80]	; 0x50
90025f42:	b178      	cbz	r0, 90025f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025f44:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
90025f48:	3f01      	subs	r7, #1
90025f4a:	00bf      	lsls	r7, r7, #2
90025f4c:	3704      	adds	r7, #4
90025f4e:	eb01 0e07 	add.w	lr, r1, r7
90025f52:	59c9      	ldr	r1, [r1, r7]
90025f54:	9109      	str	r1, [sp, #36]	; 0x24
90025f56:	0e09      	lsrs	r1, r1, #24
90025f58:	9111      	str	r1, [sp, #68]	; 0x44
90025f5a:	f8de 1004 	ldr.w	r1, [lr, #4]
90025f5e:	910e      	str	r1, [sp, #56]	; 0x38
90025f60:	0e09      	lsrs	r1, r1, #24
90025f62:	9115      	str	r1, [sp, #84]	; 0x54
90025f64:	b292      	uxth	r2, r2
90025f66:	9d11      	ldr	r5, [sp, #68]	; 0x44
90025f68:	b280      	uxth	r0, r0
90025f6a:	fb02 f900 	mul.w	r9, r2, r0
90025f6e:	0112      	lsls	r2, r2, #4
90025f70:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90025f74:	eba2 0e09 	sub.w	lr, r2, r9
90025f78:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90025f7c:	9a14      	ldr	r2, [sp, #80]	; 0x50
90025f7e:	b280      	uxth	r0, r0
90025f80:	fa1f fe8e 	uxth.w	lr, lr
90025f84:	1a09      	subs	r1, r1, r0
90025f86:	fb0e f202 	mul.w	r2, lr, r2
90025f8a:	b289      	uxth	r1, r1
90025f8c:	fb01 220c 	mla	r2, r1, ip, r2
90025f90:	fb00 2205 	mla	r2, r0, r5, r2
90025f94:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025f96:	fb09 2205 	mla	r2, r9, r5, r2
90025f9a:	f3c2 2207 	ubfx	r2, r2, #8, #8
90025f9e:	2a00      	cmp	r2, #0
90025fa0:	f000 80ca 	beq.w	90026138 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90025fa4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90025fa8:	d019      	beq.n	90025fde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90025faa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90025fae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90025fb2:	fb0c fa0a 	mul.w	sl, ip, sl
90025fb6:	fb0c fc03 	mul.w	ip, ip, r3
90025fba:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025fbe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90025fc2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90025fc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90025fca:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90025fce:	4453      	add	r3, sl
90025fd0:	0a3f      	lsrs	r7, r7, #8
90025fd2:	0a1b      	lsrs	r3, r3, #8
90025fd4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90025fd8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90025fdc:	433b      	orrs	r3, r7
90025fde:	9d14      	ldr	r5, [sp, #80]	; 0x50
90025fe0:	2dff      	cmp	r5, #255	; 0xff
90025fe2:	d020      	beq.n	90026026 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90025fe4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90025fe6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025fea:	9d14      	ldr	r5, [sp, #80]	; 0x50
90025fec:	436f      	muls	r7, r5
90025fee:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90025ff0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025ff4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025ff8:	9d14      	ldr	r5, [sp, #80]	; 0x50
90025ffa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90025ffe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026002:	fb05 fa0a 	mul.w	sl, r5, sl
90026006:	44bc      	add	ip, r7
90026008:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002600c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026010:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026014:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026018:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002601c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026020:	ea4c 050a 	orr.w	r5, ip, sl
90026024:	950d      	str	r5, [sp, #52]	; 0x34
90026026:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026028:	2dff      	cmp	r5, #255	; 0xff
9002602a:	d020      	beq.n	9002606e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
9002602c:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002602e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90026032:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026034:	436f      	muls	r7, r5
90026036:	9d09      	ldr	r5, [sp, #36]	; 0x24
90026038:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9002603c:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002603e:	fb05 fa0c 	mul.w	sl, r5, ip
90026042:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026046:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002604a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002604e:	44bc      	add	ip, r7
90026050:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90026054:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026058:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002605c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026060:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026064:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026068:	ea4c 050a 	orr.w	r5, ip, sl
9002606c:	9509      	str	r5, [sp, #36]	; 0x24
9002606e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90026070:	2dff      	cmp	r5, #255	; 0xff
90026072:	d020      	beq.n	900260b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90026074:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026076:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002607a:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002607c:	436f      	muls	r7, r5
9002607e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026080:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026084:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026088:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002608a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002608e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026092:	fb05 fa0a 	mul.w	sl, r5, sl
90026096:	44bc      	add	ip, r7
90026098:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002609c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900260a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900260a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900260a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900260ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900260b0:	ea4c 050a 	orr.w	r5, ip, sl
900260b4:	950e      	str	r5, [sp, #56]	; 0x38
900260b6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900260b8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900260bc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900260c0:	2aff      	cmp	r2, #255	; 0xff
900260c2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900260c6:	9d09      	ldr	r5, [sp, #36]	; 0x24
900260c8:	fb0e f707 	mul.w	r7, lr, r7
900260cc:	fb01 770c 	mla	r7, r1, ip, r7
900260d0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900260d4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900260d6:	fb00 770c 	mla	r7, r0, ip, r7
900260da:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900260de:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900260e0:	fb09 770c 	mla	r7, r9, ip, r7
900260e4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
900260e8:	fb0e fe0c 	mul.w	lr, lr, ip
900260ec:	ea4f 2717 	mov.w	r7, r7, lsr #8
900260f0:	fb01 e303 	mla	r3, r1, r3, lr
900260f4:	9909      	ldr	r1, [sp, #36]	; 0x24
900260f6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900260fa:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
900260fe:	990e      	ldr	r1, [sp, #56]	; 0x38
90026100:	fb00 330a 	mla	r3, r0, sl, r3
90026104:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90026108:	fb09 3c0c 	mla	ip, r9, ip, r3
9002610c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026110:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90026114:	ea47 070c 	orr.w	r7, r7, ip
90026118:	ea4f 2317 	mov.w	r3, r7, lsr #8
9002611c:	d11e      	bne.n	9002615c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
9002611e:	097a      	lsrs	r2, r7, #5
90026120:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
90026124:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90026128:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002612c:	f023 0307 	bic.w	r3, r3, #7
90026130:	4313      	orrs	r3, r2
90026132:	431f      	orrs	r7, r3
90026134:	f8a8 7000 	strh.w	r7, [r8]
90026138:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9002613a:	f108 0802 	add.w	r8, r8, #2
9002613e:	f10b 3bff 	add.w	fp, fp, #4294967295
90026142:	441c      	add	r4, r3
90026144:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90026146:	441e      	add	r6, r3
90026148:	e643      	b.n	90025dd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
9002614a:	2800      	cmp	r0, #0
9002614c:	f43f af0a 	beq.w	90025f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90026150:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90026154:	9109      	str	r1, [sp, #36]	; 0x24
90026156:	0e09      	lsrs	r1, r1, #24
90026158:	9111      	str	r1, [sp, #68]	; 0x44
9002615a:	e703      	b.n	90025f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002615c:	f8b8 1000 	ldrh.w	r1, [r8]
90026160:	43d2      	mvns	r2, r2
90026162:	ea4f 2c21 	mov.w	ip, r1, asr #8
90026166:	fa5f fe82 	uxtb.w	lr, r2
9002616a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9002616e:	10c8      	asrs	r0, r1, #3
90026170:	00ca      	lsls	r2, r1, #3
90026172:	fb0c fc0e 	mul.w	ip, ip, lr
90026176:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002617a:	b2d2      	uxtb	r2, r2
9002617c:	f10c 0101 	add.w	r1, ip, #1
90026180:	fb00 f00e 	mul.w	r0, r0, lr
90026184:	fb02 f20e 	mul.w	r2, r2, lr
90026188:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002618c:	0c39      	lsrs	r1, r7, #16
9002618e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90026192:	490f      	ldr	r1, [pc, #60]	; (900261d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90026194:	fa5f fc8c 	uxtb.w	ip, ip
90026198:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
9002619c:	1c41      	adds	r1, r0, #1
9002619e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900261a2:	1c51      	adds	r1, r2, #1
900261a4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900261a8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900261ac:	00c0      	lsls	r0, r0, #3
900261ae:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900261b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900261b6:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900261ba:	ea4c 0c00 	orr.w	ip, ip, r0
900261be:	ea47 0c0c 	orr.w	ip, r7, ip
900261c2:	f8a8 c000 	strh.w	ip, [r8]
900261c6:	e7b7      	b.n	90026138 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900261c8:	b01b      	add	sp, #108	; 0x6c
900261ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900261ce:	bf00      	nop
900261d0:	fffff800 	.word	0xfffff800

900261d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
900261d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900261d8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
900261dc:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900261e0:	2d00      	cmp	r5, #0
900261e2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
900261e6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
900261ea:	fb05 0e03 	mla	lr, r5, r3, r0
900261ee:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
900261f2:	f2c0 808c 	blt.w	9002630e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900261f6:	45a9      	cmp	r9, r5
900261f8:	f340 8089 	ble.w	9002630e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900261fc:	2800      	cmp	r0, #0
900261fe:	f2c0 8084 	blt.w	9002630a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90026202:	4580      	cmp	r8, r0
90026204:	f340 8081 	ble.w	9002630a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90026208:	ea4f 045e 	mov.w	r4, lr, lsr #1
9002620c:	f01e 0f01 	tst.w	lr, #1
90026210:	5d16      	ldrb	r6, [r2, r4]
90026212:	bf0c      	ite	eq
90026214:	f006 060f 	andeq.w	r6, r6, #15
90026218:	1136      	asrne	r6, r6, #4
9002621a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002621e:	b2f6      	uxtb	r6, r6
90026220:	1c44      	adds	r4, r0, #1
90026222:	d477      	bmi.n	90026314 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90026224:	45a0      	cmp	r8, r4
90026226:	dd75      	ble.n	90026314 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90026228:	2f00      	cmp	r7, #0
9002622a:	d075      	beq.n	90026318 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
9002622c:	f10e 0a01 	add.w	sl, lr, #1
90026230:	ea4f 045a 	mov.w	r4, sl, lsr #1
90026234:	f01a 0f01 	tst.w	sl, #1
90026238:	5d14      	ldrb	r4, [r2, r4]
9002623a:	bf0c      	ite	eq
9002623c:	f004 040f 	andeq.w	r4, r4, #15
90026240:	1124      	asrne	r4, r4, #4
90026242:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90026246:	b2e4      	uxtb	r4, r4
90026248:	3501      	adds	r5, #1
9002624a:	d469      	bmi.n	90026320 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
9002624c:	45a9      	cmp	r9, r5
9002624e:	dd67      	ble.n	90026320 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90026250:	f1bc 0f00 	cmp.w	ip, #0
90026254:	d067      	beq.n	90026326 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90026256:	2800      	cmp	r0, #0
90026258:	db60      	blt.n	9002631c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002625a:	4580      	cmp	r8, r0
9002625c:	dd5e      	ble.n	9002631c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002625e:	eb03 090e 	add.w	r9, r3, lr
90026262:	ea4f 0559 	mov.w	r5, r9, lsr #1
90026266:	f019 0f01 	tst.w	r9, #1
9002626a:	5d55      	ldrb	r5, [r2, r5]
9002626c:	bf0c      	ite	eq
9002626e:	f005 050f 	andeq.w	r5, r5, #15
90026272:	112d      	asrne	r5, r5, #4
90026274:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90026278:	b2ed      	uxtb	r5, r5
9002627a:	3001      	adds	r0, #1
9002627c:	d456      	bmi.n	9002632c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002627e:	4580      	cmp	r8, r0
90026280:	dd54      	ble.n	9002632c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90026282:	2f00      	cmp	r7, #0
90026284:	d054      	beq.n	90026330 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90026286:	3301      	adds	r3, #1
90026288:	449e      	add	lr, r3
9002628a:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002628e:	f01e 0f01 	tst.w	lr, #1
90026292:	5cd0      	ldrb	r0, [r2, r3]
90026294:	bf0c      	ite	eq
90026296:	f000 000f 	andeq.w	r0, r0, #15
9002629a:	1100      	asrne	r0, r0, #4
9002629c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900262a0:	b2c3      	uxtb	r3, r0
900262a2:	b2ba      	uxth	r2, r7
900262a4:	fa1f fc8c 	uxth.w	ip, ip
900262a8:	fb02 f00c 	mul.w	r0, r2, ip
900262ac:	0112      	lsls	r2, r2, #4
900262ae:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900262b2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
900262b6:	1a12      	subs	r2, r2, r0
900262b8:	fa1f fc8c 	uxth.w	ip, ip
900262bc:	b292      	uxth	r2, r2
900262be:	eba7 070c 	sub.w	r7, r7, ip
900262c2:	4362      	muls	r2, r4
900262c4:	b2bf      	uxth	r7, r7
900262c6:	fb06 2207 	mla	r2, r6, r7, r2
900262ca:	fb0c 2505 	mla	r5, ip, r5, r2
900262ce:	fb00 5303 	mla	r3, r0, r3, r5
900262d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
900262d6:	b1b3      	cbz	r3, 90026306 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
900262d8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
900262dc:	435a      	muls	r2, r3
900262de:	1c53      	adds	r3, r2, #1
900262e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900262e4:	4a2d      	ldr	r2, [pc, #180]	; (9002639c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
900262e6:	121b      	asrs	r3, r3, #8
900262e8:	6812      	ldr	r2, [r2, #0]
900262ea:	2bff      	cmp	r3, #255	; 0xff
900262ec:	ea4f 2612 	mov.w	r6, r2, lsr #8
900262f0:	d120      	bne.n	90026334 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
900262f2:	0950      	lsrs	r0, r2, #5
900262f4:	4b2a      	ldr	r3, [pc, #168]	; (900263a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
900262f6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900262fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900262fe:	4033      	ands	r3, r6
90026300:	4318      	orrs	r0, r3
90026302:	4302      	orrs	r2, r0
90026304:	800a      	strh	r2, [r1, #0]
90026306:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002630a:	2600      	movs	r6, #0
9002630c:	e788      	b.n	90026220 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
9002630e:	2400      	movs	r4, #0
90026310:	4626      	mov	r6, r4
90026312:	e799      	b.n	90026248 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90026314:	2400      	movs	r4, #0
90026316:	e797      	b.n	90026248 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90026318:	463c      	mov	r4, r7
9002631a:	e795      	b.n	90026248 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
9002631c:	2500      	movs	r5, #0
9002631e:	e7ac      	b.n	9002627a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90026320:	2300      	movs	r3, #0
90026322:	461d      	mov	r5, r3
90026324:	e7bd      	b.n	900262a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90026326:	4663      	mov	r3, ip
90026328:	4665      	mov	r5, ip
9002632a:	e7ba      	b.n	900262a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
9002632c:	2300      	movs	r3, #0
9002632e:	e7b8      	b.n	900262a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90026330:	463b      	mov	r3, r7
90026332:	e7b6      	b.n	900262a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90026334:	880d      	ldrh	r5, [r1, #0]
90026336:	b29f      	uxth	r7, r3
90026338:	f3c2 4007 	ubfx	r0, r2, #16, #8
9002633c:	43db      	mvns	r3, r3
9002633e:	122c      	asrs	r4, r5, #8
90026340:	fb10 f007 	smulbb	r0, r0, r7
90026344:	b2db      	uxtb	r3, r3
90026346:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9002634a:	b2f6      	uxtb	r6, r6
9002634c:	b2d2      	uxtb	r2, r2
9002634e:	fb04 0403 	mla	r4, r4, r3, r0
90026352:	10e8      	asrs	r0, r5, #3
90026354:	fb12 f207 	smulbb	r2, r2, r7
90026358:	00ed      	lsls	r5, r5, #3
9002635a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002635e:	b2a4      	uxth	r4, r4
90026360:	fb16 f607 	smulbb	r6, r6, r7
90026364:	b2ed      	uxtb	r5, r5
90026366:	fb00 6603 	mla	r6, r0, r3, r6
9002636a:	fb05 2303 	mla	r3, r5, r3, r2
9002636e:	b2b0      	uxth	r0, r6
90026370:	b29a      	uxth	r2, r3
90026372:	1c63      	adds	r3, r4, #1
90026374:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90026378:	1c53      	adds	r3, r2, #1
9002637a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002637e:	1c42      	adds	r2, r0, #1
90026380:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90026384:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026388:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002638c:	0940      	lsrs	r0, r0, #5
9002638e:	4323      	orrs	r3, r4
90026390:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90026394:	4303      	orrs	r3, r0
90026396:	800b      	strh	r3, [r1, #0]
90026398:	e7b5      	b.n	90026306 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
9002639a:	bf00      	nop
9002639c:	240398ac 	.word	0x240398ac
900263a0:	00fff800 	.word	0x00fff800

900263a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900263a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900263a8:	b097      	sub	sp, #92	; 0x5c
900263aa:	9214      	str	r2, [sp, #80]	; 0x50
900263ac:	9309      	str	r3, [sp, #36]	; 0x24
900263ae:	9a25      	ldr	r2, [sp, #148]	; 0x94
900263b0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
900263b4:	9015      	str	r0, [sp, #84]	; 0x54
900263b6:	910d      	str	r1, [sp, #52]	; 0x34
900263b8:	6850      	ldr	r0, [r2, #4]
900263ba:	930f      	str	r3, [sp, #60]	; 0x3c
900263bc:	6812      	ldr	r2, [r2, #0]
900263be:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
900263c2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
900263c6:	fb00 1303 	mla	r3, r0, r3, r1
900263ca:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900263ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900263d0:	689b      	ldr	r3, [r3, #8]
900263d2:	3301      	adds	r3, #1
900263d4:	f023 0301 	bic.w	r3, r3, #1
900263d8:	930a      	str	r3, [sp, #40]	; 0x28
900263da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900263dc:	681f      	ldr	r7, [r3, #0]
900263de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900263e0:	2b00      	cmp	r3, #0
900263e2:	dc03      	bgt.n	900263ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900263e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
900263e6:	2b00      	cmp	r3, #0
900263e8:	f340 8289 	ble.w	900268fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900263ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900263ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900263f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900263f6:	1e48      	subs	r0, r1, #1
900263f8:	f102 3cff 	add.w	ip, r2, #4294967295
900263fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900263fe:	2b00      	cmp	r3, #0
90026400:	f340 80c5 	ble.w	9002658e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90026404:	ea5f 4e24 	movs.w	lr, r4, asr #16
90026408:	ea4f 4326 	mov.w	r3, r6, asr #16
9002640c:	d406      	bmi.n	9002641c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002640e:	4586      	cmp	lr, r0
90026410:	da04      	bge.n	9002641c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026412:	2b00      	cmp	r3, #0
90026414:	db02      	blt.n	9002641c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026416:	4563      	cmp	r3, ip
90026418:	f2c0 80ba 	blt.w	90026590 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
9002641c:	f11e 0e01 	adds.w	lr, lr, #1
90026420:	f100 80ab 	bmi.w	9002657a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90026424:	4571      	cmp	r1, lr
90026426:	f2c0 80a8 	blt.w	9002657a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
9002642a:	3301      	adds	r3, #1
9002642c:	f100 80a5 	bmi.w	9002657a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90026430:	429a      	cmp	r2, r3
90026432:	f2c0 80a2 	blt.w	9002657a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90026436:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026438:	46c8      	mov	r8, r9
9002643a:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
9002643e:	930e      	str	r3, [sp, #56]	; 0x38
90026440:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90026442:	2b00      	cmp	r3, #0
90026444:	f340 80c4 	ble.w	900265d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90026448:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002644a:	1430      	asrs	r0, r6, #16
9002644c:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026450:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026454:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90026458:	1423      	asrs	r3, r4, #16
9002645a:	f100 814f 	bmi.w	900266fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002645e:	f10c 3bff 	add.w	fp, ip, #4294967295
90026462:	455b      	cmp	r3, fp
90026464:	f280 814a 	bge.w	900266fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026468:	2800      	cmp	r0, #0
9002646a:	f2c0 8147 	blt.w	900266fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002646e:	f10e 3bff 	add.w	fp, lr, #4294967295
90026472:	4558      	cmp	r0, fp
90026474:	f280 8142 	bge.w	900266fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026478:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9002647a:	fb00 3305 	mla	r3, r0, r5, r3
9002647e:	0858      	lsrs	r0, r3, #1
90026480:	07dd      	lsls	r5, r3, #31
90026482:	f817 c000 	ldrb.w	ip, [r7, r0]
90026486:	bf54      	ite	pl
90026488:	f00c 0c0f 	andpl.w	ip, ip, #15
9002648c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026490:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026494:	fa5f fc8c 	uxtb.w	ip, ip
90026498:	2a00      	cmp	r2, #0
9002649a:	f000 80dd 	beq.w	90026658 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
9002649e:	1c58      	adds	r0, r3, #1
900264a0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
900264a4:	07c0      	lsls	r0, r0, #31
900264a6:	f817 e00e 	ldrb.w	lr, [r7, lr]
900264aa:	bf54      	ite	pl
900264ac:	f00e 0e0f 	andpl.w	lr, lr, #15
900264b0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900264b4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900264b8:	fa5f f08e 	uxtb.w	r0, lr
900264bc:	9010      	str	r0, [sp, #64]	; 0x40
900264be:	b1d9      	cbz	r1, 900264f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900264c0:	4453      	add	r3, sl
900264c2:	0858      	lsrs	r0, r3, #1
900264c4:	07dd      	lsls	r5, r3, #31
900264c6:	f103 0301 	add.w	r3, r3, #1
900264ca:	5c38      	ldrb	r0, [r7, r0]
900264cc:	bf54      	ite	pl
900264ce:	f000 000f 	andpl.w	r0, r0, #15
900264d2:	1100      	asrmi	r0, r0, #4
900264d4:	07dd      	lsls	r5, r3, #31
900264d6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900264da:	b2c0      	uxtb	r0, r0
900264dc:	900b      	str	r0, [sp, #44]	; 0x2c
900264de:	ea4f 0053 	mov.w	r0, r3, lsr #1
900264e2:	f817 e000 	ldrb.w	lr, [r7, r0]
900264e6:	bf54      	ite	pl
900264e8:	f00e 030f 	andpl.w	r3, lr, #15
900264ec:	ea4f 132e 	movmi.w	r3, lr, asr #4
900264f0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900264f4:	b2db      	uxtb	r3, r3
900264f6:	9311      	str	r3, [sp, #68]	; 0x44
900264f8:	b292      	uxth	r2, r2
900264fa:	9d10      	ldr	r5, [sp, #64]	; 0x40
900264fc:	b289      	uxth	r1, r1
900264fe:	fb02 f301 	mul.w	r3, r2, r1
90026502:	0112      	lsls	r2, r2, #4
90026504:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90026508:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
9002650c:	1ad2      	subs	r2, r2, r3
9002650e:	b289      	uxth	r1, r1
90026510:	b292      	uxth	r2, r2
90026512:	1a40      	subs	r0, r0, r1
90026514:	436a      	muls	r2, r5
90026516:	b280      	uxth	r0, r0
90026518:	fb0c 2c00 	mla	ip, ip, r0, r2
9002651c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9002651e:	fb01 c102 	mla	r1, r1, r2, ip
90026522:	9a11      	ldr	r2, [sp, #68]	; 0x44
90026524:	fb03 1302 	mla	r3, r3, r2, r1
90026528:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002652c:	b1db      	cbz	r3, 90026566 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002652e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90026530:	4353      	muls	r3, r2
90026532:	1c5a      	adds	r2, r3, #1
90026534:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90026538:	4ac6      	ldr	r2, [pc, #792]	; (90026854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
9002653a:	121b      	asrs	r3, r3, #8
9002653c:	6812      	ldr	r2, [r2, #0]
9002653e:	2bff      	cmp	r3, #255	; 0xff
90026540:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90026544:	f040 8099 	bne.w	9002667a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90026548:	0953      	lsrs	r3, r2, #5
9002654a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9002654e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026552:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90026556:	f02c 0c07 	bic.w	ip, ip, #7
9002655a:	ea43 0c0c 	orr.w	ip, r3, ip
9002655e:	ea4c 0202 	orr.w	r2, ip, r2
90026562:	f8a8 2000 	strh.w	r2, [r8]
90026566:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90026568:	f108 0802 	add.w	r8, r8, #2
9002656c:	441c      	add	r4, r3
9002656e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026570:	441e      	add	r6, r3
90026572:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90026574:	3b01      	subs	r3, #1
90026576:	930e      	str	r3, [sp, #56]	; 0x38
90026578:	e762      	b.n	90026440 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9002657a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
9002657c:	f109 0902 	add.w	r9, r9, #2
90026580:	441c      	add	r4, r3
90026582:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026584:	441e      	add	r6, r3
90026586:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026588:	3b01      	subs	r3, #1
9002658a:	9309      	str	r3, [sp, #36]	; 0x24
9002658c:	e736      	b.n	900263fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002658e:	d024      	beq.n	900265da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90026590:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026592:	9823      	ldr	r0, [sp, #140]	; 0x8c
90026594:	3b01      	subs	r3, #1
90026596:	fb00 4003 	mla	r0, r0, r3, r4
9002659a:	1400      	asrs	r0, r0, #16
9002659c:	f53f af4b 	bmi.w	90026436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900265a0:	3901      	subs	r1, #1
900265a2:	4288      	cmp	r0, r1
900265a4:	f6bf af47 	bge.w	90026436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900265a8:	9924      	ldr	r1, [sp, #144]	; 0x90
900265aa:	fb01 6303 	mla	r3, r1, r3, r6
900265ae:	141b      	asrs	r3, r3, #16
900265b0:	f53f af41 	bmi.w	90026436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900265b4:	3a01      	subs	r2, #1
900265b6:	4293      	cmp	r3, r2
900265b8:	f6bf af3d 	bge.w	90026436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900265bc:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
900265c0:	46c8      	mov	r8, r9
900265c2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
900265c6:	930e      	str	r3, [sp, #56]	; 0x38
900265c8:	f1bb 0f00 	cmp.w	fp, #0
900265cc:	f300 80b7 	bgt.w	9002673e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
900265d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900265d2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900265d6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900265da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900265dc:	2b00      	cmp	r3, #0
900265de:	f340 818e 	ble.w	900268fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900265e2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900265e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
900265e8:	ee30 0a04 	vadd.f32	s0, s0, s8
900265ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
900265f0:	eef0 6a62 	vmov.f32	s13, s5
900265f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
900265f8:	ee31 1a05 	vadd.f32	s2, s2, s10
900265fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026600:	ee16 4a90 	vmov	r4, s13
90026604:	eef0 6a43 	vmov.f32	s13, s6
90026608:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002660c:	ee16 6a90 	vmov	r6, s13
90026610:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026614:	ee61 7a27 	vmul.f32	s15, s2, s15
90026618:	ee77 2a62 	vsub.f32	s5, s14, s5
9002661c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026620:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026624:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026628:	ee12 2a90 	vmov	r2, s5
9002662c:	eef0 2a47 	vmov.f32	s5, s14
90026630:	fb92 f3f3 	sdiv	r3, r2, r3
90026634:	ee13 2a10 	vmov	r2, s6
90026638:	9323      	str	r3, [sp, #140]	; 0x8c
9002663a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002663c:	eeb0 3a67 	vmov.f32	s6, s15
90026640:	fb92 f3f3 	sdiv	r3, r2, r3
90026644:	9324      	str	r3, [sp, #144]	; 0x90
90026646:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90026648:	9a14      	ldr	r2, [sp, #80]	; 0x50
9002664a:	3b01      	subs	r3, #1
9002664c:	930d      	str	r3, [sp, #52]	; 0x34
9002664e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026650:	bf08      	it	eq
90026652:	4613      	moveq	r3, r2
90026654:	9309      	str	r3, [sp, #36]	; 0x24
90026656:	e6c2      	b.n	900263de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026658:	2900      	cmp	r1, #0
9002665a:	f43f af4d 	beq.w	900264f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002665e:	eb0a 0003 	add.w	r0, sl, r3
90026662:	0843      	lsrs	r3, r0, #1
90026664:	07c0      	lsls	r0, r0, #31
90026666:	5cfb      	ldrb	r3, [r7, r3]
90026668:	bf54      	ite	pl
9002666a:	f003 030f 	andpl.w	r3, r3, #15
9002666e:	111b      	asrmi	r3, r3, #4
90026670:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90026674:	b2db      	uxtb	r3, r3
90026676:	930b      	str	r3, [sp, #44]	; 0x2c
90026678:	e73e      	b.n	900264f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002667a:	f8b8 e000 	ldrh.w	lr, [r8]
9002667e:	fa1f fb83 	uxth.w	fp, r3
90026682:	f3c2 4107 	ubfx	r1, r2, #16, #8
90026686:	43db      	mvns	r3, r3
90026688:	ea4f 202e 	mov.w	r0, lr, asr #8
9002668c:	fb11 f10b 	smulbb	r1, r1, fp
90026690:	b2db      	uxtb	r3, r3
90026692:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90026696:	fa5f fc8c 	uxtb.w	ip, ip
9002669a:	b2d2      	uxtb	r2, r2
9002669c:	fb00 1003 	mla	r0, r0, r3, r1
900266a0:	ea4f 01ee 	mov.w	r1, lr, asr #3
900266a4:	fb1c fc0b 	smulbb	ip, ip, fp
900266a8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900266ac:	b280      	uxth	r0, r0
900266ae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900266b2:	fb12 fb0b 	smulbb	fp, r2, fp
900266b6:	fa5f fe8e 	uxtb.w	lr, lr
900266ba:	fb01 cc03 	mla	ip, r1, r3, ip
900266be:	fb0e bb03 	mla	fp, lr, r3, fp
900266c2:	1c43      	adds	r3, r0, #1
900266c4:	fa1f fc8c 	uxth.w	ip, ip
900266c8:	fa1f fb8b 	uxth.w	fp, fp
900266cc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900266d0:	f10c 0101 	add.w	r1, ip, #1
900266d4:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
900266d8:	f10b 0001 	add.w	r0, fp, #1
900266dc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900266e0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
900266e4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900266e8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900266ec:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900266f0:	4318      	orrs	r0, r3
900266f2:	ea40 000c 	orr.w	r0, r0, ip
900266f6:	f8a8 0000 	strh.w	r0, [r8]
900266fa:	e734      	b.n	90026566 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900266fc:	f113 0b01 	adds.w	fp, r3, #1
90026700:	f53f af31 	bmi.w	90026566 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026704:	45dc      	cmp	ip, fp
90026706:	f6ff af2e 	blt.w	90026566 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002670a:	f110 0b01 	adds.w	fp, r0, #1
9002670e:	f53f af2a 	bmi.w	90026566 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026712:	45de      	cmp	lr, fp
90026714:	f6ff af27 	blt.w	90026566 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026718:	9302      	str	r3, [sp, #8]
9002671a:	fa0f f38e 	sxth.w	r3, lr
9002671e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026720:	9301      	str	r3, [sp, #4]
90026722:	fa0f f38c 	sxth.w	r3, ip
90026726:	e9cd 0203 	strd	r0, r2, [sp, #12]
9002672a:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002672e:	9300      	str	r3, [sp, #0]
90026730:	463a      	mov	r2, r7
90026732:	4653      	mov	r3, sl
90026734:	4641      	mov	r1, r8
90026736:	9815      	ldr	r0, [sp, #84]	; 0x54
90026738:	f7ff fd4c 	bl	900261d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
9002673c:	e713      	b.n	90026566 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002673e:	1422      	asrs	r2, r4, #16
90026740:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90026742:	1433      	asrs	r3, r6, #16
90026744:	f3c4 3103 	ubfx	r1, r4, #12, #4
90026748:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002674c:	fb05 2303 	mla	r3, r5, r3, r2
90026750:	085a      	lsrs	r2, r3, #1
90026752:	07dd      	lsls	r5, r3, #31
90026754:	5cba      	ldrb	r2, [r7, r2]
90026756:	bf54      	ite	pl
90026758:	f002 020f 	andpl.w	r2, r2, #15
9002675c:	1112      	asrmi	r2, r2, #4
9002675e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90026762:	b2d2      	uxtb	r2, r2
90026764:	2900      	cmp	r1, #0
90026766:	d077      	beq.n	90026858 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90026768:	f103 0e01 	add.w	lr, r3, #1
9002676c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90026770:	f01e 0f01 	tst.w	lr, #1
90026774:	f817 c00c 	ldrb.w	ip, [r7, ip]
90026778:	bf0c      	ite	eq
9002677a:	f00c 0c0f 	andeq.w	ip, ip, #15
9002677e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90026782:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026786:	fa5f f58c 	uxtb.w	r5, ip
9002678a:	9512      	str	r5, [sp, #72]	; 0x48
9002678c:	b308      	cbz	r0, 900267d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002678e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026790:	442b      	add	r3, r5
90026792:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90026796:	07dd      	lsls	r5, r3, #31
90026798:	f103 0301 	add.w	r3, r3, #1
9002679c:	f817 c00c 	ldrb.w	ip, [r7, ip]
900267a0:	bf54      	ite	pl
900267a2:	f00c 0c0f 	andpl.w	ip, ip, #15
900267a6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900267aa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900267ae:	fa5f f58c 	uxtb.w	r5, ip
900267b2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900267b6:	950c      	str	r5, [sp, #48]	; 0x30
900267b8:	07dd      	lsls	r5, r3, #31
900267ba:	f817 c00c 	ldrb.w	ip, [r7, ip]
900267be:	bf54      	ite	pl
900267c0:	f00c 0c0f 	andpl.w	ip, ip, #15
900267c4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900267c8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900267cc:	fa5f f38c 	uxtb.w	r3, ip
900267d0:	9313      	str	r3, [sp, #76]	; 0x4c
900267d2:	b289      	uxth	r1, r1
900267d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
900267d6:	b280      	uxth	r0, r0
900267d8:	fb01 f300 	mul.w	r3, r1, r0
900267dc:	0109      	lsls	r1, r1, #4
900267de:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
900267e2:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
900267e6:	1ac9      	subs	r1, r1, r3
900267e8:	b280      	uxth	r0, r0
900267ea:	b289      	uxth	r1, r1
900267ec:	ebac 0c00 	sub.w	ip, ip, r0
900267f0:	4369      	muls	r1, r5
900267f2:	fa1f fc8c 	uxth.w	ip, ip
900267f6:	fb02 120c 	mla	r2, r2, ip, r1
900267fa:	990c      	ldr	r1, [sp, #48]	; 0x30
900267fc:	fb00 2001 	mla	r0, r0, r1, r2
90026800:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90026802:	fb03 0302 	mla	r3, r3, r2, r0
90026806:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002680a:	b1d3      	cbz	r3, 90026842 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002680c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002680e:	4353      	muls	r3, r2
90026810:	1c5a      	adds	r2, r3, #1
90026812:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90026816:	4a0f      	ldr	r2, [pc, #60]	; (90026854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90026818:	121b      	asrs	r3, r3, #8
9002681a:	6812      	ldr	r2, [r2, #0]
9002681c:	2bff      	cmp	r3, #255	; 0xff
9002681e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90026822:	d12d      	bne.n	90026880 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90026824:	0953      	lsrs	r3, r2, #5
90026826:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9002682a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002682e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90026832:	f02c 0c07 	bic.w	ip, ip, #7
90026836:	ea43 0c0c 	orr.w	ip, r3, ip
9002683a:	ea4c 0202 	orr.w	r2, ip, r2
9002683e:	f8a8 2000 	strh.w	r2, [r8]
90026842:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90026844:	f108 0802 	add.w	r8, r8, #2
90026848:	f10b 3bff 	add.w	fp, fp, #4294967295
9002684c:	441c      	add	r4, r3
9002684e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026850:	441e      	add	r6, r3
90026852:	e6b9      	b.n	900265c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90026854:	240398ac 	.word	0x240398ac
90026858:	2800      	cmp	r0, #0
9002685a:	d0ba      	beq.n	900267d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002685c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002685e:	442b      	add	r3, r5
90026860:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90026864:	07db      	lsls	r3, r3, #31
90026866:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002686a:	bf54      	ite	pl
9002686c:	f00c 0c0f 	andpl.w	ip, ip, #15
90026870:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026874:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026878:	fa5f f38c 	uxtb.w	r3, ip
9002687c:	930c      	str	r3, [sp, #48]	; 0x30
9002687e:	e7a8      	b.n	900267d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90026880:	f8b8 e000 	ldrh.w	lr, [r8]
90026884:	fa1f fa83 	uxth.w	sl, r3
90026888:	f3c2 4107 	ubfx	r1, r2, #16, #8
9002688c:	43db      	mvns	r3, r3
9002688e:	ea4f 202e 	mov.w	r0, lr, asr #8
90026892:	fb11 f10a 	smulbb	r1, r1, sl
90026896:	b2db      	uxtb	r3, r3
90026898:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002689c:	b2d2      	uxtb	r2, r2
9002689e:	fa5f fc8c 	uxtb.w	ip, ip
900268a2:	fb00 1003 	mla	r0, r0, r3, r1
900268a6:	ea4f 01ee 	mov.w	r1, lr, asr #3
900268aa:	fb12 f20a 	smulbb	r2, r2, sl
900268ae:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900268b2:	b280      	uxth	r0, r0
900268b4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900268b8:	fb1c fc0a 	smulbb	ip, ip, sl
900268bc:	fa5f fe8e 	uxtb.w	lr, lr
900268c0:	fb0e 2203 	mla	r2, lr, r3, r2
900268c4:	fb01 cc03 	mla	ip, r1, r3, ip
900268c8:	1c43      	adds	r3, r0, #1
900268ca:	b292      	uxth	r2, r2
900268cc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900268d0:	1c51      	adds	r1, r2, #1
900268d2:	fa1f fc8c 	uxth.w	ip, ip
900268d6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
900268da:	eb01 2112 	add.w	r1, r1, r2, lsr #8
900268de:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900268e2:	4308      	orrs	r0, r1
900268e4:	f10c 0101 	add.w	r1, ip, #1
900268e8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900268ec:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900268f0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900268f4:	ea40 000c 	orr.w	r0, r0, ip
900268f8:	f8a8 0000 	strh.w	r0, [r8]
900268fc:	e7a1      	b.n	90026842 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900268fe:	b017      	add	sp, #92	; 0x5c
90026900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026904 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90026904:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90026908:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
9002690c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90026910:	2d00      	cmp	r5, #0
90026912:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90026916:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002691a:	fb05 0e03 	mla	lr, r5, r3, r0
9002691e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90026922:	f2c0 80b0 	blt.w	90026a86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90026926:	45a9      	cmp	r9, r5
90026928:	f340 80ad 	ble.w	90026a86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
9002692c:	2800      	cmp	r0, #0
9002692e:	f2c0 80a8 	blt.w	90026a82 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90026932:	4580      	cmp	r8, r0
90026934:	f340 80a5 	ble.w	90026a82 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90026938:	ea4f 045e 	mov.w	r4, lr, lsr #1
9002693c:	f01e 0f01 	tst.w	lr, #1
90026940:	5d16      	ldrb	r6, [r2, r4]
90026942:	bf0c      	ite	eq
90026944:	f006 060f 	andeq.w	r6, r6, #15
90026948:	1136      	asrne	r6, r6, #4
9002694a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002694e:	b2f6      	uxtb	r6, r6
90026950:	1c44      	adds	r4, r0, #1
90026952:	f100 809b 	bmi.w	90026a8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90026956:	45a0      	cmp	r8, r4
90026958:	f340 8098 	ble.w	90026a8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
9002695c:	2f00      	cmp	r7, #0
9002695e:	f000 8097 	beq.w	90026a90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90026962:	f10e 0a01 	add.w	sl, lr, #1
90026966:	ea4f 045a 	mov.w	r4, sl, lsr #1
9002696a:	f01a 0f01 	tst.w	sl, #1
9002696e:	5d14      	ldrb	r4, [r2, r4]
90026970:	bf0c      	ite	eq
90026972:	f004 040f 	andeq.w	r4, r4, #15
90026976:	1124      	asrne	r4, r4, #4
90026978:	eb04 1404 	add.w	r4, r4, r4, lsl #4
9002697c:	b2e4      	uxtb	r4, r4
9002697e:	3501      	adds	r5, #1
90026980:	f100 808a 	bmi.w	90026a98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90026984:	45a9      	cmp	r9, r5
90026986:	f340 8087 	ble.w	90026a98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
9002698a:	f1bc 0f00 	cmp.w	ip, #0
9002698e:	f000 8086 	beq.w	90026a9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90026992:	2800      	cmp	r0, #0
90026994:	db7e      	blt.n	90026a94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90026996:	4580      	cmp	r8, r0
90026998:	dd7c      	ble.n	90026a94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002699a:	eb03 090e 	add.w	r9, r3, lr
9002699e:	ea4f 0559 	mov.w	r5, r9, lsr #1
900269a2:	f019 0f01 	tst.w	r9, #1
900269a6:	5d55      	ldrb	r5, [r2, r5]
900269a8:	bf0c      	ite	eq
900269aa:	f005 050f 	andeq.w	r5, r5, #15
900269ae:	112d      	asrne	r5, r5, #4
900269b0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900269b4:	b2ed      	uxtb	r5, r5
900269b6:	3001      	adds	r0, #1
900269b8:	d474      	bmi.n	90026aa4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900269ba:	4580      	cmp	r8, r0
900269bc:	dd72      	ble.n	90026aa4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900269be:	2f00      	cmp	r7, #0
900269c0:	d072      	beq.n	90026aa8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
900269c2:	3301      	adds	r3, #1
900269c4:	449e      	add	lr, r3
900269c6:	ea4f 035e 	mov.w	r3, lr, lsr #1
900269ca:	f01e 0f01 	tst.w	lr, #1
900269ce:	5cd0      	ldrb	r0, [r2, r3]
900269d0:	bf0c      	ite	eq
900269d2:	f000 000f 	andeq.w	r0, r0, #15
900269d6:	1100      	asrne	r0, r0, #4
900269d8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900269dc:	b2c3      	uxtb	r3, r0
900269de:	b2ba      	uxth	r2, r7
900269e0:	fa1f fc8c 	uxth.w	ip, ip
900269e4:	fb02 f00c 	mul.w	r0, r2, ip
900269e8:	0112      	lsls	r2, r2, #4
900269ea:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900269ee:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
900269f2:	1a12      	subs	r2, r2, r0
900269f4:	fa1f fc8c 	uxth.w	ip, ip
900269f8:	b292      	uxth	r2, r2
900269fa:	eba7 070c 	sub.w	r7, r7, ip
900269fe:	4362      	muls	r2, r4
90026a00:	b2bf      	uxth	r7, r7
90026a02:	fb06 2207 	mla	r2, r6, r7, r2
90026a06:	fb0c 2505 	mla	r5, ip, r5, r2
90026a0a:	fb00 5303 	mla	r3, r0, r3, r5
90026a0e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026a12:	b3a3      	cbz	r3, 90026a7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90026a14:	4a25      	ldr	r2, [pc, #148]	; (90026aac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90026a16:	880e      	ldrh	r6, [r1, #0]
90026a18:	6815      	ldr	r5, [r2, #0]
90026a1a:	b29a      	uxth	r2, r3
90026a1c:	1234      	asrs	r4, r6, #8
90026a1e:	43db      	mvns	r3, r3
90026a20:	f3c5 4007 	ubfx	r0, r5, #16, #8
90026a24:	f3c5 2707 	ubfx	r7, r5, #8, #8
90026a28:	b2db      	uxtb	r3, r3
90026a2a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90026a2e:	fb10 f002 	smulbb	r0, r0, r2
90026a32:	b2ed      	uxtb	r5, r5
90026a34:	fb17 f702 	smulbb	r7, r7, r2
90026a38:	fb04 0403 	mla	r4, r4, r3, r0
90026a3c:	10f0      	asrs	r0, r6, #3
90026a3e:	fb15 f202 	smulbb	r2, r5, r2
90026a42:	00f6      	lsls	r6, r6, #3
90026a44:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90026a48:	b2a4      	uxth	r4, r4
90026a4a:	b2f6      	uxtb	r6, r6
90026a4c:	fb00 7003 	mla	r0, r0, r3, r7
90026a50:	fb06 2303 	mla	r3, r6, r3, r2
90026a54:	b280      	uxth	r0, r0
90026a56:	b29a      	uxth	r2, r3
90026a58:	1c63      	adds	r3, r4, #1
90026a5a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90026a5e:	1c53      	adds	r3, r2, #1
90026a60:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026a64:	1c42      	adds	r2, r0, #1
90026a66:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90026a6a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026a6e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026a72:	0940      	lsrs	r0, r0, #5
90026a74:	4323      	orrs	r3, r4
90026a76:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90026a7a:	4303      	orrs	r3, r0
90026a7c:	800b      	strh	r3, [r1, #0]
90026a7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026a82:	2600      	movs	r6, #0
90026a84:	e764      	b.n	90026950 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90026a86:	2400      	movs	r4, #0
90026a88:	4626      	mov	r6, r4
90026a8a:	e778      	b.n	9002697e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026a8c:	2400      	movs	r4, #0
90026a8e:	e776      	b.n	9002697e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026a90:	463c      	mov	r4, r7
90026a92:	e774      	b.n	9002697e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026a94:	2500      	movs	r5, #0
90026a96:	e78e      	b.n	900269b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90026a98:	2300      	movs	r3, #0
90026a9a:	461d      	mov	r5, r3
90026a9c:	e79f      	b.n	900269de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026a9e:	4663      	mov	r3, ip
90026aa0:	4665      	mov	r5, ip
90026aa2:	e79c      	b.n	900269de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026aa4:	2300      	movs	r3, #0
90026aa6:	e79a      	b.n	900269de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026aa8:	463b      	mov	r3, r7
90026aaa:	e798      	b.n	900269de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026aac:	240398ac 	.word	0x240398ac

90026ab0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026ab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026ab4:	b093      	sub	sp, #76	; 0x4c
90026ab6:	461d      	mov	r5, r3
90026ab8:	920c      	str	r2, [sp, #48]	; 0x30
90026aba:	9a21      	ldr	r2, [sp, #132]	; 0x84
90026abc:	9011      	str	r0, [sp, #68]	; 0x44
90026abe:	9107      	str	r1, [sp, #28]
90026ac0:	6850      	ldr	r0, [r2, #4]
90026ac2:	6812      	ldr	r2, [r2, #0]
90026ac4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90026ac8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90026acc:	fb00 1303 	mla	r3, r0, r3, r1
90026ad0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90026ad4:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026ad6:	689b      	ldr	r3, [r3, #8]
90026ad8:	3301      	adds	r3, #1
90026ada:	f023 0301 	bic.w	r3, r3, #1
90026ade:	9306      	str	r3, [sp, #24]
90026ae0:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026ae2:	681f      	ldr	r7, [r3, #0]
90026ae4:	9b07      	ldr	r3, [sp, #28]
90026ae6:	2b00      	cmp	r3, #0
90026ae8:	dc03      	bgt.n	90026af2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90026aea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90026aec:	2b00      	cmp	r3, #0
90026aee:	f340 8267 	ble.w	90026fc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90026af2:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026af4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026af8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026afc:	1e48      	subs	r0, r1, #1
90026afe:	f102 3cff 	add.w	ip, r2, #4294967295
90026b02:	2d00      	cmp	r5, #0
90026b04:	f340 80b7 	ble.w	90026c76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90026b08:	ea5f 4e24 	movs.w	lr, r4, asr #16
90026b0c:	ea4f 4326 	mov.w	r3, r6, asr #16
90026b10:	d406      	bmi.n	90026b20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90026b12:	4586      	cmp	lr, r0
90026b14:	da04      	bge.n	90026b20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90026b16:	2b00      	cmp	r3, #0
90026b18:	db02      	blt.n	90026b20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90026b1a:	4563      	cmp	r3, ip
90026b1c:	f2c0 80ac 	blt.w	90026c78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90026b20:	f11e 0e01 	adds.w	lr, lr, #1
90026b24:	f100 809f 	bmi.w	90026c66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026b28:	4571      	cmp	r1, lr
90026b2a:	f2c0 809c 	blt.w	90026c66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026b2e:	3301      	adds	r3, #1
90026b30:	f100 8099 	bmi.w	90026c66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026b34:	429a      	cmp	r2, r3
90026b36:	f2c0 8096 	blt.w	90026c66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026b3a:	46c8      	mov	r8, r9
90026b3c:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90026b40:	9509      	str	r5, [sp, #36]	; 0x24
90026b42:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026b44:	2b00      	cmp	r3, #0
90026b46:	f340 80b5 	ble.w	90026cb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90026b4a:	f3c4 3303 	ubfx	r3, r4, #12, #4
90026b4e:	1430      	asrs	r0, r6, #16
90026b50:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026b54:	9308      	str	r3, [sp, #32]
90026b56:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026b58:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90026b5c:	1423      	asrs	r3, r4, #16
90026b5e:	f100 813f 	bmi.w	90026de0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026b62:	f10c 3bff 	add.w	fp, ip, #4294967295
90026b66:	455b      	cmp	r3, fp
90026b68:	f280 813a 	bge.w	90026de0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026b6c:	2800      	cmp	r0, #0
90026b6e:	f2c0 8137 	blt.w	90026de0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026b72:	f10e 3bff 	add.w	fp, lr, #4294967295
90026b76:	4558      	cmp	r0, fp
90026b78:	f280 8132 	bge.w	90026de0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026b7c:	9a06      	ldr	r2, [sp, #24]
90026b7e:	fb00 3302 	mla	r3, r0, r2, r3
90026b82:	0858      	lsrs	r0, r3, #1
90026b84:	07da      	lsls	r2, r3, #31
90026b86:	9a08      	ldr	r2, [sp, #32]
90026b88:	f817 c000 	ldrb.w	ip, [r7, r0]
90026b8c:	bf54      	ite	pl
90026b8e:	f00c 0c0f 	andpl.w	ip, ip, #15
90026b92:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026b96:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026b9a:	fa5f fc8c 	uxtb.w	ip, ip
90026b9e:	2a00      	cmp	r2, #0
90026ba0:	f000 80cc 	beq.w	90026d3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90026ba4:	1c58      	adds	r0, r3, #1
90026ba6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90026baa:	07c0      	lsls	r0, r0, #31
90026bac:	f817 e00e 	ldrb.w	lr, [r7, lr]
90026bb0:	bf54      	ite	pl
90026bb2:	f00e 0e0f 	andpl.w	lr, lr, #15
90026bb6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90026bba:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90026bbe:	fa5f fe8e 	uxtb.w	lr, lr
90026bc2:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90026bc6:	b1b9      	cbz	r1, 90026bf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90026bc8:	4453      	add	r3, sl
90026bca:	0858      	lsrs	r0, r3, #1
90026bcc:	07da      	lsls	r2, r3, #31
90026bce:	5c38      	ldrb	r0, [r7, r0]
90026bd0:	bf54      	ite	pl
90026bd2:	f000 000f 	andpl.w	r0, r0, #15
90026bd6:	1100      	asrmi	r0, r0, #4
90026bd8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90026bdc:	b2c0      	uxtb	r0, r0
90026bde:	900a      	str	r0, [sp, #40]	; 0x28
90026be0:	1c58      	adds	r0, r3, #1
90026be2:	0843      	lsrs	r3, r0, #1
90026be4:	07c2      	lsls	r2, r0, #31
90026be6:	5cfb      	ldrb	r3, [r7, r3]
90026be8:	bf54      	ite	pl
90026bea:	f003 030f 	andpl.w	r3, r3, #15
90026bee:	111b      	asrmi	r3, r3, #4
90026bf0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90026bf4:	b2db      	uxtb	r3, r3
90026bf6:	930e      	str	r3, [sp, #56]	; 0x38
90026bf8:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90026bfc:	b289      	uxth	r1, r1
90026bfe:	fb02 f301 	mul.w	r3, r2, r1
90026c02:	0112      	lsls	r2, r2, #4
90026c04:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90026c08:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
90026c0c:	1ad2      	subs	r2, r2, r3
90026c0e:	b289      	uxth	r1, r1
90026c10:	b292      	uxth	r2, r2
90026c12:	1a40      	subs	r0, r0, r1
90026c14:	fa1f fe80 	uxth.w	lr, r0
90026c18:	980d      	ldr	r0, [sp, #52]	; 0x34
90026c1a:	4342      	muls	r2, r0
90026c1c:	fb0c 2c0e 	mla	ip, ip, lr, r2
90026c20:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90026c22:	fb01 c102 	mla	r1, r1, r2, ip
90026c26:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90026c28:	fb03 1302 	mla	r3, r3, r2, r1
90026c2c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026c30:	2bff      	cmp	r3, #255	; 0xff
90026c32:	f040 8094 	bne.w	90026d5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90026c36:	4bbf      	ldr	r3, [pc, #764]	; (90026f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90026c38:	681a      	ldr	r2, [r3, #0]
90026c3a:	4bbf      	ldr	r3, [pc, #764]	; (90026f38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90026c3c:	0951      	lsrs	r1, r2, #5
90026c3e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90026c42:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026c46:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90026c4a:	430b      	orrs	r3, r1
90026c4c:	4313      	orrs	r3, r2
90026c4e:	f8a8 3000 	strh.w	r3, [r8]
90026c52:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90026c54:	f108 0802 	add.w	r8, r8, #2
90026c58:	441c      	add	r4, r3
90026c5a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026c5c:	441e      	add	r6, r3
90026c5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026c60:	3b01      	subs	r3, #1
90026c62:	9309      	str	r3, [sp, #36]	; 0x24
90026c64:	e76d      	b.n	90026b42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90026c66:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90026c68:	3d01      	subs	r5, #1
90026c6a:	f109 0902 	add.w	r9, r9, #2
90026c6e:	441c      	add	r4, r3
90026c70:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026c72:	441e      	add	r6, r3
90026c74:	e745      	b.n	90026b02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90026c76:	d021      	beq.n	90026cbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90026c78:	1e6b      	subs	r3, r5, #1
90026c7a:	981f      	ldr	r0, [sp, #124]	; 0x7c
90026c7c:	fb00 4003 	mla	r0, r0, r3, r4
90026c80:	1400      	asrs	r0, r0, #16
90026c82:	f53f af5a 	bmi.w	90026b3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026c86:	3901      	subs	r1, #1
90026c88:	4288      	cmp	r0, r1
90026c8a:	f6bf af56 	bge.w	90026b3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026c8e:	9920      	ldr	r1, [sp, #128]	; 0x80
90026c90:	fb01 6303 	mla	r3, r1, r3, r6
90026c94:	141b      	asrs	r3, r3, #16
90026c96:	f53f af50 	bmi.w	90026b3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026c9a:	3a01      	subs	r2, #1
90026c9c:	4293      	cmp	r3, r2
90026c9e:	f6bf af4c 	bge.w	90026b3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026ca2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90026ca6:	46a8      	mov	r8, r5
90026ca8:	46ce      	mov	lr, r9
90026caa:	9308      	str	r3, [sp, #32]
90026cac:	f1b8 0f00 	cmp.w	r8, #0
90026cb0:	f300 80b6 	bgt.w	90026e20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026cb4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026cb8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90026cbc:	9b07      	ldr	r3, [sp, #28]
90026cbe:	2b00      	cmp	r3, #0
90026cc0:	f340 817e 	ble.w	90026fc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90026cc4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90026cc8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026cca:	ee30 0a04 	vadd.f32	s0, s0, s8
90026cce:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026cd2:	eef0 6a62 	vmov.f32	s13, s5
90026cd6:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026cda:	ee31 1a05 	vadd.f32	s2, s2, s10
90026cde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026ce2:	ee16 4a90 	vmov	r4, s13
90026ce6:	eef0 6a43 	vmov.f32	s13, s6
90026cea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026cee:	ee16 6a90 	vmov	r6, s13
90026cf2:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026cf6:	ee61 7a27 	vmul.f32	s15, s2, s15
90026cfa:	ee77 2a62 	vsub.f32	s5, s14, s5
90026cfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026d02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026d06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026d0a:	ee12 2a90 	vmov	r2, s5
90026d0e:	eef0 2a47 	vmov.f32	s5, s14
90026d12:	fb92 f3f3 	sdiv	r3, r2, r3
90026d16:	ee13 2a10 	vmov	r2, s6
90026d1a:	931f      	str	r3, [sp, #124]	; 0x7c
90026d1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026d1e:	eeb0 3a67 	vmov.f32	s6, s15
90026d22:	fb92 f3f3 	sdiv	r3, r2, r3
90026d26:	9320      	str	r3, [sp, #128]	; 0x80
90026d28:	9b07      	ldr	r3, [sp, #28]
90026d2a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90026d2c:	3b01      	subs	r3, #1
90026d2e:	9307      	str	r3, [sp, #28]
90026d30:	bf08      	it	eq
90026d32:	4615      	moveq	r5, r2
90026d34:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026d36:	bf18      	it	ne
90026d38:	461d      	movne	r5, r3
90026d3a:	e6d3      	b.n	90026ae4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90026d3c:	2900      	cmp	r1, #0
90026d3e:	f43f af5b 	beq.w	90026bf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90026d42:	eb0a 0003 	add.w	r0, sl, r3
90026d46:	0843      	lsrs	r3, r0, #1
90026d48:	07c0      	lsls	r0, r0, #31
90026d4a:	5cfb      	ldrb	r3, [r7, r3]
90026d4c:	bf54      	ite	pl
90026d4e:	f003 030f 	andpl.w	r3, r3, #15
90026d52:	111b      	asrmi	r3, r3, #4
90026d54:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90026d58:	b2db      	uxtb	r3, r3
90026d5a:	930a      	str	r3, [sp, #40]	; 0x28
90026d5c:	e74c      	b.n	90026bf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90026d5e:	2b00      	cmp	r3, #0
90026d60:	f43f af77 	beq.w	90026c52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026d64:	4a73      	ldr	r2, [pc, #460]	; (90026f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90026d66:	fa1f fe83 	uxth.w	lr, r3
90026d6a:	f8b8 c000 	ldrh.w	ip, [r8]
90026d6e:	43db      	mvns	r3, r3
90026d70:	6810      	ldr	r0, [r2, #0]
90026d72:	ea4f 212c 	mov.w	r1, ip, asr #8
90026d76:	f3c0 4207 	ubfx	r2, r0, #16, #8
90026d7a:	b2db      	uxtb	r3, r3
90026d7c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90026d80:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90026d84:	fb12 f20e 	smulbb	r2, r2, lr
90026d88:	b2c0      	uxtb	r0, r0
90026d8a:	fb1b fb0e 	smulbb	fp, fp, lr
90026d8e:	fb01 2103 	mla	r1, r1, r3, r2
90026d92:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026d96:	fb10 fe0e 	smulbb	lr, r0, lr
90026d9a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90026d9e:	b289      	uxth	r1, r1
90026da0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90026da4:	fa5f fc8c 	uxtb.w	ip, ip
90026da8:	fb02 b203 	mla	r2, r2, r3, fp
90026dac:	1c48      	adds	r0, r1, #1
90026dae:	fb0c e303 	mla	r3, ip, r3, lr
90026db2:	b292      	uxth	r2, r2
90026db4:	b29b      	uxth	r3, r3
90026db6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90026dba:	f102 0b01 	add.w	fp, r2, #1
90026dbe:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
90026dc2:	1c59      	adds	r1, r3, #1
90026dc4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90026dc8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90026dcc:	0952      	lsrs	r2, r2, #5
90026dce:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90026dd2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026dd6:	4301      	orrs	r1, r0
90026dd8:	4311      	orrs	r1, r2
90026dda:	f8a8 1000 	strh.w	r1, [r8]
90026dde:	e738      	b.n	90026c52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026de0:	f113 0b01 	adds.w	fp, r3, #1
90026de4:	f53f af35 	bmi.w	90026c52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026de8:	45dc      	cmp	ip, fp
90026dea:	f6ff af32 	blt.w	90026c52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026dee:	f110 0b01 	adds.w	fp, r0, #1
90026df2:	f53f af2e 	bmi.w	90026c52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026df6:	45de      	cmp	lr, fp
90026df8:	f6ff af2b 	blt.w	90026c52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026dfc:	9302      	str	r3, [sp, #8]
90026dfe:	fa0f f38e 	sxth.w	r3, lr
90026e02:	9a08      	ldr	r2, [sp, #32]
90026e04:	9301      	str	r3, [sp, #4]
90026e06:	fa0f f38c 	sxth.w	r3, ip
90026e0a:	9105      	str	r1, [sp, #20]
90026e0c:	4641      	mov	r1, r8
90026e0e:	9300      	str	r3, [sp, #0]
90026e10:	4653      	mov	r3, sl
90026e12:	e9cd 0203 	strd	r0, r2, [sp, #12]
90026e16:	463a      	mov	r2, r7
90026e18:	9811      	ldr	r0, [sp, #68]	; 0x44
90026e1a:	f7ff fd73 	bl	90026904 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
90026e1e:	e718      	b.n	90026c52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026e20:	1422      	asrs	r2, r4, #16
90026e22:	9906      	ldr	r1, [sp, #24]
90026e24:	1433      	asrs	r3, r6, #16
90026e26:	f3c4 3003 	ubfx	r0, r4, #12, #4
90026e2a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90026e2e:	fb01 2303 	mla	r3, r1, r3, r2
90026e32:	085a      	lsrs	r2, r3, #1
90026e34:	07d9      	lsls	r1, r3, #31
90026e36:	5cba      	ldrb	r2, [r7, r2]
90026e38:	bf54      	ite	pl
90026e3a:	f002 020f 	andpl.w	r2, r2, #15
90026e3e:	1112      	asrmi	r2, r2, #4
90026e40:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90026e44:	b2d2      	uxtb	r2, r2
90026e46:	2800      	cmp	r0, #0
90026e48:	d063      	beq.n	90026f12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90026e4a:	f103 0a01 	add.w	sl, r3, #1
90026e4e:	ea4f 015a 	mov.w	r1, sl, lsr #1
90026e52:	f01a 0f01 	tst.w	sl, #1
90026e56:	5c79      	ldrb	r1, [r7, r1]
90026e58:	bf0c      	ite	eq
90026e5a:	f001 010f 	andeq.w	r1, r1, #15
90026e5e:	1109      	asrne	r1, r1, #4
90026e60:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026e64:	b2c9      	uxtb	r1, r1
90026e66:	910f      	str	r1, [sp, #60]	; 0x3c
90026e68:	f1bc 0f00 	cmp.w	ip, #0
90026e6c:	d01a      	beq.n	90026ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026e6e:	9908      	ldr	r1, [sp, #32]
90026e70:	440b      	add	r3, r1
90026e72:	0859      	lsrs	r1, r3, #1
90026e74:	f013 0f01 	tst.w	r3, #1
90026e78:	f103 0301 	add.w	r3, r3, #1
90026e7c:	5c79      	ldrb	r1, [r7, r1]
90026e7e:	bf0c      	ite	eq
90026e80:	f001 010f 	andeq.w	r1, r1, #15
90026e84:	1109      	asrne	r1, r1, #4
90026e86:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026e8a:	b2c9      	uxtb	r1, r1
90026e8c:	910b      	str	r1, [sp, #44]	; 0x2c
90026e8e:	0859      	lsrs	r1, r3, #1
90026e90:	07db      	lsls	r3, r3, #31
90026e92:	5c79      	ldrb	r1, [r7, r1]
90026e94:	bf54      	ite	pl
90026e96:	f001 010f 	andpl.w	r1, r1, #15
90026e9a:	1109      	asrmi	r1, r1, #4
90026e9c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026ea0:	b2c9      	uxtb	r1, r1
90026ea2:	9110      	str	r1, [sp, #64]	; 0x40
90026ea4:	b280      	uxth	r0, r0
90026ea6:	fa1f fc8c 	uxth.w	ip, ip
90026eaa:	fb00 f30c 	mul.w	r3, r0, ip
90026eae:	0100      	lsls	r0, r0, #4
90026eb0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90026eb4:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
90026eb8:	1ac0      	subs	r0, r0, r3
90026eba:	fa1f fc8c 	uxth.w	ip, ip
90026ebe:	b280      	uxth	r0, r0
90026ec0:	eba1 010c 	sub.w	r1, r1, ip
90026ec4:	fa1f fa81 	uxth.w	sl, r1
90026ec8:	990f      	ldr	r1, [sp, #60]	; 0x3c
90026eca:	4348      	muls	r0, r1
90026ecc:	990b      	ldr	r1, [sp, #44]	; 0x2c
90026ece:	fb02 020a 	mla	r2, r2, sl, r0
90026ed2:	fb0c 2c01 	mla	ip, ip, r1, r2
90026ed6:	9a10      	ldr	r2, [sp, #64]	; 0x40
90026ed8:	fb03 c302 	mla	r3, r3, r2, ip
90026edc:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026ee0:	2bff      	cmp	r3, #255	; 0xff
90026ee2:	d12b      	bne.n	90026f3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90026ee4:	4b13      	ldr	r3, [pc, #76]	; (90026f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90026ee6:	681a      	ldr	r2, [r3, #0]
90026ee8:	4b13      	ldr	r3, [pc, #76]	; (90026f38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90026eea:	0951      	lsrs	r1, r2, #5
90026eec:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90026ef0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026ef4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90026ef8:	430b      	orrs	r3, r1
90026efa:	4313      	orrs	r3, r2
90026efc:	f8ae 3000 	strh.w	r3, [lr]
90026f00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90026f02:	f10e 0e02 	add.w	lr, lr, #2
90026f06:	f108 38ff 	add.w	r8, r8, #4294967295
90026f0a:	441c      	add	r4, r3
90026f0c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026f0e:	441e      	add	r6, r3
90026f10:	e6cc      	b.n	90026cac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90026f12:	f1bc 0f00 	cmp.w	ip, #0
90026f16:	d0c5      	beq.n	90026ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026f18:	9908      	ldr	r1, [sp, #32]
90026f1a:	440b      	add	r3, r1
90026f1c:	0859      	lsrs	r1, r3, #1
90026f1e:	07db      	lsls	r3, r3, #31
90026f20:	5c79      	ldrb	r1, [r7, r1]
90026f22:	bf54      	ite	pl
90026f24:	f001 010f 	andpl.w	r1, r1, #15
90026f28:	1109      	asrmi	r1, r1, #4
90026f2a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026f2e:	b2c9      	uxtb	r1, r1
90026f30:	910b      	str	r1, [sp, #44]	; 0x2c
90026f32:	e7b7      	b.n	90026ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026f34:	240398ac 	.word	0x240398ac
90026f38:	fffff800 	.word	0xfffff800
90026f3c:	2b00      	cmp	r3, #0
90026f3e:	d0df      	beq.n	90026f00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90026f40:	4a21      	ldr	r2, [pc, #132]	; (90026fc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90026f42:	fa1f fa83 	uxth.w	sl, r3
90026f46:	f8be c000 	ldrh.w	ip, [lr]
90026f4a:	43db      	mvns	r3, r3
90026f4c:	6810      	ldr	r0, [r2, #0]
90026f4e:	ea4f 212c 	mov.w	r1, ip, asr #8
90026f52:	f3c0 4207 	ubfx	r2, r0, #16, #8
90026f56:	b2db      	uxtb	r3, r3
90026f58:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90026f5c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90026f60:	fb12 f20a 	smulbb	r2, r2, sl
90026f64:	b2c0      	uxtb	r0, r0
90026f66:	fb1b fb0a 	smulbb	fp, fp, sl
90026f6a:	fb01 2103 	mla	r1, r1, r3, r2
90026f6e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026f72:	fb10 f00a 	smulbb	r0, r0, sl
90026f76:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90026f7a:	b289      	uxth	r1, r1
90026f7c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90026f80:	fa5f fc8c 	uxtb.w	ip, ip
90026f84:	fb02 b203 	mla	r2, r2, r3, fp
90026f88:	fb0c 0003 	mla	r0, ip, r3, r0
90026f8c:	1c4b      	adds	r3, r1, #1
90026f8e:	b292      	uxth	r2, r2
90026f90:	b280      	uxth	r0, r0
90026f92:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026f96:	f100 0b01 	add.w	fp, r0, #1
90026f9a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90026f9e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90026fa2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90026fa6:	ea4b 0101 	orr.w	r1, fp, r1
90026faa:	f102 0b01 	add.w	fp, r2, #1
90026fae:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90026fb2:	0952      	lsrs	r2, r2, #5
90026fb4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026fb8:	4311      	orrs	r1, r2
90026fba:	f8ae 1000 	strh.w	r1, [lr]
90026fbe:	e79f      	b.n	90026f00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90026fc0:	b013      	add	sp, #76	; 0x4c
90026fc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026fc6:	bf00      	nop
90026fc8:	240398ac 	.word	0x240398ac

90026fcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90026fcc:	b570      	push	{r4, r5, r6, lr}
90026fce:	1208      	asrs	r0, r1, #8
90026fd0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90026fd4:	b29e      	uxth	r6, r3
90026fd6:	1213      	asrs	r3, r2, #8
90026fd8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90026fdc:	10cc      	asrs	r4, r1, #3
90026fde:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90026fe2:	00c9      	lsls	r1, r1, #3
90026fe4:	fb10 f006 	smulbb	r0, r0, r6
90026fe8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90026fec:	fb13 f305 	smulbb	r3, r3, r5
90026ff0:	fb14 f406 	smulbb	r4, r4, r6
90026ff4:	4418      	add	r0, r3
90026ff6:	10d3      	asrs	r3, r2, #3
90026ff8:	00d2      	lsls	r2, r2, #3
90026ffa:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90026ffe:	b280      	uxth	r0, r0
90027000:	b2d2      	uxtb	r2, r2
90027002:	fb13 f305 	smulbb	r3, r3, r5
90027006:	fb12 f205 	smulbb	r2, r2, r5
9002700a:	441c      	add	r4, r3
9002700c:	b2cb      	uxtb	r3, r1
9002700e:	fb13 f306 	smulbb	r3, r3, r6
90027012:	b2a4      	uxth	r4, r4
90027014:	4413      	add	r3, r2
90027016:	1c42      	adds	r2, r0, #1
90027018:	b29b      	uxth	r3, r3
9002701a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002701e:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
90027022:	1c58      	adds	r0, r3, #1
90027024:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90027028:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002702c:	4310      	orrs	r0, r2
9002702e:	1c62      	adds	r2, r4, #1
90027030:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90027034:	0964      	lsrs	r4, r4, #5
90027036:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002703a:	4320      	orrs	r0, r4
9002703c:	bd70      	pop	{r4, r5, r6, pc}
	...

90027040 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90027040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027044:	b08f      	sub	sp, #60	; 0x3c
90027046:	461c      	mov	r4, r3
90027048:	460d      	mov	r5, r1
9002704a:	4616      	mov	r6, r2
9002704c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90027050:	9004      	str	r0, [sp, #16]
90027052:	9b18      	ldr	r3, [sp, #96]	; 0x60
90027054:	2f00      	cmp	r7, #0
90027056:	f000 80f6 	beq.w	90027246 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9002705a:	6820      	ldr	r0, [r4, #0]
9002705c:	aa0a      	add	r2, sp, #40	; 0x28
9002705e:	6861      	ldr	r1, [r4, #4]
90027060:	f04f 0802 	mov.w	r8, #2
90027064:	3604      	adds	r6, #4
90027066:	c203      	stmia	r2!, {r0, r1}
90027068:	6818      	ldr	r0, [r3, #0]
9002706a:	aa0c      	add	r2, sp, #48	; 0x30
9002706c:	6859      	ldr	r1, [r3, #4]
9002706e:	c203      	stmia	r2!, {r0, r1}
90027070:	a80a      	add	r0, sp, #40	; 0x28
90027072:	f7ef fceb 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027076:	4621      	mov	r1, r4
90027078:	a80c      	add	r0, sp, #48	; 0x30
9002707a:	f7ef fd2b 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002707e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90027082:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90027086:	f002 0301 	and.w	r3, r2, #1
9002708a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9002708e:	9306      	str	r3, [sp, #24]
90027090:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90027094:	f003 0101 	and.w	r1, r3, #1
90027098:	9105      	str	r1, [sp, #20]
9002709a:	9805      	ldr	r0, [sp, #20]
9002709c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
900270a0:	4403      	add	r3, r0
900270a2:	fb01 2303 	mla	r3, r1, r3, r2
900270a6:	fb93 f3f8 	sdiv	r3, r3, r8
900270aa:	441d      	add	r5, r3
900270ac:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
900270b0:	441a      	add	r2, r3
900270b2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
900270b6:	4419      	add	r1, r3
900270b8:	4b64      	ldr	r3, [pc, #400]	; (9002724c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900270ba:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
900270be:	6818      	ldr	r0, [r3, #0]
900270c0:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
900270c4:	6803      	ldr	r3, [r0, #0]
900270c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900270c8:	4798      	blx	r3
900270ca:	4a61      	ldr	r2, [pc, #388]	; (90027250 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
900270cc:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
900270d0:	2fff      	cmp	r7, #255	; 0xff
900270d2:	8813      	ldrh	r3, [r2, #0]
900270d4:	4611      	mov	r1, r2
900270d6:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
900270da:	fb03 fb0b 	mul.w	fp, r3, fp
900270de:	fb03 a404 	mla	r4, r3, r4, sl
900270e2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900270e6:	d06b      	beq.n	900271c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
900270e8:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
900270ec:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
900270f0:	9303      	str	r3, [sp, #12]
900270f2:	eb04 034b 	add.w	r3, r4, fp, lsl #1
900270f6:	e9cd 3207 	strd	r3, r2, [sp, #28]
900270fa:	9b07      	ldr	r3, [sp, #28]
900270fc:	42a3      	cmp	r3, r4
900270fe:	f240 809d 	bls.w	9002723c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90027102:	9b06      	ldr	r3, [sp, #24]
90027104:	2b00      	cmp	r3, #0
90027106:	d039      	beq.n	9002717c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90027108:	782b      	ldrb	r3, [r5, #0]
9002710a:	f105 0801 	add.w	r8, r5, #1
9002710e:	f109 3bff 	add.w	fp, r9, #4294967295
90027112:	8822      	ldrh	r2, [r4, #0]
90027114:	f003 030f 	and.w	r3, r3, #15
90027118:	9804      	ldr	r0, [sp, #16]
9002711a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002711e:	9b03      	ldr	r3, [sp, #12]
90027120:	9300      	str	r3, [sp, #0]
90027122:	463b      	mov	r3, r7
90027124:	f7ff ff52 	bl	90026fcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90027128:	f824 0b02 	strh.w	r0, [r4], #2
9002712c:	f1bb 0f01 	cmp.w	fp, #1
90027130:	46a2      	mov	sl, r4
90027132:	f104 0404 	add.w	r4, r4, #4
90027136:	dd24      	ble.n	90027182 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90027138:	f898 3000 	ldrb.w	r3, [r8]
9002713c:	f1ab 0b02 	sub.w	fp, fp, #2
90027140:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90027144:	091b      	lsrs	r3, r3, #4
90027146:	9804      	ldr	r0, [sp, #16]
90027148:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002714c:	9b03      	ldr	r3, [sp, #12]
9002714e:	9300      	str	r3, [sp, #0]
90027150:	463b      	mov	r3, r7
90027152:	f7ff ff3b 	bl	90026fcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90027156:	f824 0c04 	strh.w	r0, [r4, #-4]
9002715a:	f818 3b01 	ldrb.w	r3, [r8], #1
9002715e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90027162:	f003 030f 	and.w	r3, r3, #15
90027166:	9804      	ldr	r0, [sp, #16]
90027168:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002716c:	9b03      	ldr	r3, [sp, #12]
9002716e:	9300      	str	r3, [sp, #0]
90027170:	463b      	mov	r3, r7
90027172:	f7ff ff2b 	bl	90026fcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90027176:	f824 0c02 	strh.w	r0, [r4, #-2]
9002717a:	e7d7      	b.n	9002712c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002717c:	46a8      	mov	r8, r5
9002717e:	46cb      	mov	fp, r9
90027180:	e7d4      	b.n	9002712c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90027182:	d10e      	bne.n	900271a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90027184:	f898 3000 	ldrb.w	r3, [r8]
90027188:	f8ba 2000 	ldrh.w	r2, [sl]
9002718c:	091b      	lsrs	r3, r3, #4
9002718e:	9804      	ldr	r0, [sp, #16]
90027190:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90027194:	9b03      	ldr	r3, [sp, #12]
90027196:	9300      	str	r3, [sp, #0]
90027198:	463b      	mov	r3, r7
9002719a:	f7ff ff17 	bl	90026fcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002719e:	f82a 0b02 	strh.w	r0, [sl], #2
900271a2:	9b08      	ldr	r3, [sp, #32]
900271a4:	9a05      	ldr	r2, [sp, #20]
900271a6:	881c      	ldrh	r4, [r3, #0]
900271a8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900271ac:	eba4 0409 	sub.w	r4, r4, r9
900271b0:	4413      	add	r3, r2
900271b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
900271b4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
900271b8:	fb93 f3f2 	sdiv	r3, r3, r2
900271bc:	441d      	add	r5, r3
900271be:	e79c      	b.n	900270fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
900271c0:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
900271c4:	45a3      	cmp	fp, r4
900271c6:	d939      	bls.n	9002723c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
900271c8:	9b06      	ldr	r3, [sp, #24]
900271ca:	b1fb      	cbz	r3, 9002720c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
900271cc:	782b      	ldrb	r3, [r5, #0]
900271ce:	1c6a      	adds	r2, r5, #1
900271d0:	f109 30ff 	add.w	r0, r9, #4294967295
900271d4:	3402      	adds	r4, #2
900271d6:	f003 030f 	and.w	r3, r3, #15
900271da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900271de:	f824 3c02 	strh.w	r3, [r4, #-2]
900271e2:	2801      	cmp	r0, #1
900271e4:	4623      	mov	r3, r4
900271e6:	f104 0404 	add.w	r4, r4, #4
900271ea:	dd12      	ble.n	90027212 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
900271ec:	7813      	ldrb	r3, [r2, #0]
900271ee:	3802      	subs	r0, #2
900271f0:	091b      	lsrs	r3, r3, #4
900271f2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900271f6:	f824 3c04 	strh.w	r3, [r4, #-4]
900271fa:	f812 3b01 	ldrb.w	r3, [r2], #1
900271fe:	f003 030f 	and.w	r3, r3, #15
90027202:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90027206:	f824 3c02 	strh.w	r3, [r4, #-2]
9002720a:	e7ea      	b.n	900271e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002720c:	462a      	mov	r2, r5
9002720e:	4648      	mov	r0, r9
90027210:	e7e7      	b.n	900271e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90027212:	d106      	bne.n	90027222 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90027214:	7812      	ldrb	r2, [r2, #0]
90027216:	3302      	adds	r3, #2
90027218:	0912      	lsrs	r2, r2, #4
9002721a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002721e:	f823 2c02 	strh.w	r2, [r3, #-2]
90027222:	880c      	ldrh	r4, [r1, #0]
90027224:	9a05      	ldr	r2, [sp, #20]
90027226:	eba4 0409 	sub.w	r4, r4, r9
9002722a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
9002722e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90027232:	4413      	add	r3, r2
90027234:	fb93 f3f8 	sdiv	r3, r3, r8
90027238:	441d      	add	r5, r3
9002723a:	e7c3      	b.n	900271c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
9002723c:	4b03      	ldr	r3, [pc, #12]	; (9002724c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002723e:	6818      	ldr	r0, [r3, #0]
90027240:	6803      	ldr	r3, [r0, #0]
90027242:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90027244:	4798      	blx	r3
90027246:	b00f      	add	sp, #60	; 0x3c
90027248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002724c:	2403989c 	.word	0x2403989c
90027250:	24039896 	.word	0x24039896

90027254 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90027254:	b5f0      	push	{r4, r5, r6, r7, lr}
90027256:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002725a:	0a0f      	lsrs	r7, r1, #8
9002725c:	2dff      	cmp	r5, #255	; 0xff
9002725e:	d10c      	bne.n	9002727a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90027260:	2bff      	cmp	r3, #255	; 0xff
90027262:	d10a      	bne.n	9002727a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90027264:	0948      	lsrs	r0, r1, #5
90027266:	4b25      	ldr	r3, [pc, #148]	; (900272fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90027268:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002726c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90027270:	403b      	ands	r3, r7
90027272:	4318      	orrs	r0, r3
90027274:	4308      	orrs	r0, r1
90027276:	b280      	uxth	r0, r0
90027278:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002727a:	fb15 f503 	smulbb	r5, r5, r3
9002727e:	1214      	asrs	r4, r2, #8
90027280:	10d6      	asrs	r6, r2, #3
90027282:	b2ab      	uxth	r3, r5
90027284:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90027288:	00d0      	lsls	r0, r2, #3
9002728a:	f3c1 4207 	ubfx	r2, r1, #16, #8
9002728e:	1c5d      	adds	r5, r3, #1
90027290:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90027294:	b2c0      	uxtb	r0, r0
90027296:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9002729a:	eb05 2513 	add.w	r5, r5, r3, lsr #8
9002729e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
900272a2:	f3c5 2507 	ubfx	r5, r5, #8, #8
900272a6:	fa1f fc85 	uxth.w	ip, r5
900272aa:	43ed      	mvns	r5, r5
900272ac:	fb12 f20c 	smulbb	r2, r2, ip
900272b0:	b2eb      	uxtb	r3, r5
900272b2:	b2fd      	uxtb	r5, r7
900272b4:	fb04 2403 	mla	r4, r4, r3, r2
900272b8:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
900272bc:	fb15 f50c 	smulbb	r5, r5, ip
900272c0:	b2c8      	uxtb	r0, r1
900272c2:	b2a4      	uxth	r4, r4
900272c4:	fb10 f00c 	smulbb	r0, r0, ip
900272c8:	fb06 5503 	mla	r5, r6, r3, r5
900272cc:	fb02 0003 	mla	r0, r2, r3, r0
900272d0:	b2ad      	uxth	r5, r5
900272d2:	b283      	uxth	r3, r0
900272d4:	1c60      	adds	r0, r4, #1
900272d6:	eb00 2414 	add.w	r4, r0, r4, lsr #8
900272da:	1c58      	adds	r0, r3, #1
900272dc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900272e0:	1c6b      	adds	r3, r5, #1
900272e2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
900272e6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900272ea:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900272ee:	096d      	lsrs	r5, r5, #5
900272f0:	4320      	orrs	r0, r4
900272f2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900272f6:	4328      	orrs	r0, r5
900272f8:	e7be      	b.n	90027278 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
900272fa:	bf00      	nop
900272fc:	00fff800 	.word	0x00fff800

90027300 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90027300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027304:	461c      	mov	r4, r3
90027306:	b08d      	sub	sp, #52	; 0x34
90027308:	460d      	mov	r5, r1
9002730a:	4616      	mov	r6, r2
9002730c:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002730e:	4680      	mov	r8, r0
90027310:	6861      	ldr	r1, [r4, #4]
90027312:	aa08      	add	r2, sp, #32
90027314:	6820      	ldr	r0, [r4, #0]
90027316:	f04f 0a02 	mov.w	sl, #2
9002731a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
9002731e:	3604      	adds	r6, #4
90027320:	c203      	stmia	r2!, {r0, r1}
90027322:	6818      	ldr	r0, [r3, #0]
90027324:	aa0a      	add	r2, sp, #40	; 0x28
90027326:	6859      	ldr	r1, [r3, #4]
90027328:	c203      	stmia	r2!, {r0, r1}
9002732a:	a808      	add	r0, sp, #32
9002732c:	f7ef fb8e 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027330:	4621      	mov	r1, r4
90027332:	a80a      	add	r0, sp, #40	; 0x28
90027334:	f7ef fbce 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027338:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9002733c:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
90027340:	f002 0301 	and.w	r3, r2, #1
90027344:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
90027348:	9303      	str	r3, [sp, #12]
9002734a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
9002734e:	f003 0101 	and.w	r1, r3, #1
90027352:	9102      	str	r1, [sp, #8]
90027354:	9802      	ldr	r0, [sp, #8]
90027356:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
9002735a:	4403      	add	r3, r0
9002735c:	fb01 2303 	mla	r3, r1, r3, r2
90027360:	fb93 f3fa 	sdiv	r3, r3, sl
90027364:	441d      	add	r5, r3
90027366:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9002736a:	441a      	add	r2, r3
9002736c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
90027370:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90027374:	4419      	add	r1, r3
90027376:	4a3e      	ldr	r2, [pc, #248]	; (90027470 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90027378:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
9002737c:	6810      	ldr	r0, [r2, #0]
9002737e:	9205      	str	r2, [sp, #20]
90027380:	6803      	ldr	r3, [r0, #0]
90027382:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90027384:	4798      	blx	r3
90027386:	4b3b      	ldr	r3, [pc, #236]	; (90027474 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90027388:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
9002738c:	8819      	ldrh	r1, [r3, #0]
9002738e:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
90027392:	434f      	muls	r7, r1
90027394:	fb01 c404 	mla	r4, r1, r4, ip
90027398:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002739c:	eb04 0247 	add.w	r2, r4, r7, lsl #1
900273a0:	e9cd 3a06 	strd	r3, sl, [sp, #24]
900273a4:	9204      	str	r2, [sp, #16]
900273a6:	9b04      	ldr	r3, [sp, #16]
900273a8:	429c      	cmp	r4, r3
900273aa:	d258      	bcs.n	9002745e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
900273ac:	9b03      	ldr	r3, [sp, #12]
900273ae:	2b00      	cmp	r3, #0
900273b0:	d034      	beq.n	9002741c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
900273b2:	782b      	ldrb	r3, [r5, #0]
900273b4:	1c6f      	adds	r7, r5, #1
900273b6:	f003 030f 	and.w	r3, r3, #15
900273ba:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900273be:	0e0b      	lsrs	r3, r1, #24
900273c0:	d006      	beq.n	900273d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
900273c2:	8822      	ldrh	r2, [r4, #0]
900273c4:	4640      	mov	r0, r8
900273c6:	9300      	str	r3, [sp, #0]
900273c8:	464b      	mov	r3, r9
900273ca:	f7ff ff43 	bl	90027254 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900273ce:	8020      	strh	r0, [r4, #0]
900273d0:	3402      	adds	r4, #2
900273d2:	f10b 3aff 	add.w	sl, fp, #4294967295
900273d6:	f1ba 0f01 	cmp.w	sl, #1
900273da:	dd22      	ble.n	90027422 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
900273dc:	783b      	ldrb	r3, [r7, #0]
900273de:	091b      	lsrs	r3, r3, #4
900273e0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900273e4:	0e0b      	lsrs	r3, r1, #24
900273e6:	d006      	beq.n	900273f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
900273e8:	8822      	ldrh	r2, [r4, #0]
900273ea:	4640      	mov	r0, r8
900273ec:	9300      	str	r3, [sp, #0]
900273ee:	464b      	mov	r3, r9
900273f0:	f7ff ff30 	bl	90027254 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900273f4:	8020      	strh	r0, [r4, #0]
900273f6:	f817 3b01 	ldrb.w	r3, [r7], #1
900273fa:	f003 030f 	and.w	r3, r3, #15
900273fe:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90027402:	0e0b      	lsrs	r3, r1, #24
90027404:	d006      	beq.n	90027414 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90027406:	8862      	ldrh	r2, [r4, #2]
90027408:	4640      	mov	r0, r8
9002740a:	9300      	str	r3, [sp, #0]
9002740c:	464b      	mov	r3, r9
9002740e:	f7ff ff21 	bl	90027254 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90027412:	8060      	strh	r0, [r4, #2]
90027414:	3404      	adds	r4, #4
90027416:	f1aa 0a02 	sub.w	sl, sl, #2
9002741a:	e7dc      	b.n	900273d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002741c:	462f      	mov	r7, r5
9002741e:	46da      	mov	sl, fp
90027420:	e7d9      	b.n	900273d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90027422:	d10d      	bne.n	90027440 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90027424:	783b      	ldrb	r3, [r7, #0]
90027426:	091b      	lsrs	r3, r3, #4
90027428:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002742c:	0e0b      	lsrs	r3, r1, #24
9002742e:	d006      	beq.n	9002743e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90027430:	8822      	ldrh	r2, [r4, #0]
90027432:	4640      	mov	r0, r8
90027434:	9300      	str	r3, [sp, #0]
90027436:	464b      	mov	r3, r9
90027438:	f7ff ff0c 	bl	90027254 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002743c:	8020      	strh	r0, [r4, #0]
9002743e:	3402      	adds	r4, #2
90027440:	9b06      	ldr	r3, [sp, #24]
90027442:	9a02      	ldr	r2, [sp, #8]
90027444:	881b      	ldrh	r3, [r3, #0]
90027446:	eba3 030b 	sub.w	r3, r3, fp
9002744a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9002744e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90027452:	4413      	add	r3, r2
90027454:	9a07      	ldr	r2, [sp, #28]
90027456:	fb93 f3f2 	sdiv	r3, r3, r2
9002745a:	441d      	add	r5, r3
9002745c:	e7a3      	b.n	900273a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
9002745e:	9b05      	ldr	r3, [sp, #20]
90027460:	6818      	ldr	r0, [r3, #0]
90027462:	6803      	ldr	r3, [r0, #0]
90027464:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90027466:	4798      	blx	r3
90027468:	b00d      	add	sp, #52	; 0x34
9002746a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002746e:	bf00      	nop
90027470:	2403989c 	.word	0x2403989c
90027474:	24039896 	.word	0x24039896

90027478 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90027478:	b570      	push	{r4, r5, r6, lr}
9002747a:	1214      	asrs	r4, r2, #8
9002747c:	788d      	ldrb	r5, [r1, #2]
9002747e:	f89d 6010 	ldrb.w	r6, [sp, #16]
90027482:	10d0      	asrs	r0, r2, #3
90027484:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90027488:	00d2      	lsls	r2, r2, #3
9002748a:	fb15 f503 	smulbb	r5, r5, r3
9002748e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90027492:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90027496:	b2d2      	uxtb	r2, r2
90027498:	fb04 5506 	mla	r5, r4, r6, r5
9002749c:	784c      	ldrb	r4, [r1, #1]
9002749e:	7809      	ldrb	r1, [r1, #0]
900274a0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
900274a4:	fb14 f403 	smulbb	r4, r4, r3
900274a8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900274ac:	fb11 f303 	smulbb	r3, r1, r3
900274b0:	b2ad      	uxth	r5, r5
900274b2:	fb00 4406 	mla	r4, r0, r6, r4
900274b6:	fb02 3306 	mla	r3, r2, r6, r3
900274ba:	1c68      	adds	r0, r5, #1
900274bc:	b2a4      	uxth	r4, r4
900274be:	b29b      	uxth	r3, r3
900274c0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
900274c4:	1c62      	adds	r2, r4, #1
900274c6:	1c58      	adds	r0, r3, #1
900274c8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900274cc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900274d0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900274d4:	0964      	lsrs	r4, r4, #5
900274d6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900274da:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900274de:	4328      	orrs	r0, r5
900274e0:	4320      	orrs	r0, r4
900274e2:	bd70      	pop	{r4, r5, r6, pc}

900274e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
900274e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900274e8:	b08f      	sub	sp, #60	; 0x3c
900274ea:	461c      	mov	r4, r3
900274ec:	4682      	mov	sl, r0
900274ee:	460e      	mov	r6, r1
900274f0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
900274f4:	4615      	mov	r5, r2
900274f6:	9b18      	ldr	r3, [sp, #96]	; 0x60
900274f8:	2f00      	cmp	r7, #0
900274fa:	f000 8141 	beq.w	90027780 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
900274fe:	6820      	ldr	r0, [r4, #0]
90027500:	aa0a      	add	r2, sp, #40	; 0x28
90027502:	6861      	ldr	r1, [r4, #4]
90027504:	f04f 0802 	mov.w	r8, #2
90027508:	3504      	adds	r5, #4
9002750a:	c203      	stmia	r2!, {r0, r1}
9002750c:	6818      	ldr	r0, [r3, #0]
9002750e:	aa0c      	add	r2, sp, #48	; 0x30
90027510:	6859      	ldr	r1, [r3, #4]
90027512:	c203      	stmia	r2!, {r0, r1}
90027514:	a80a      	add	r0, sp, #40	; 0x28
90027516:	f7ef fa99 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002751a:	4621      	mov	r1, r4
9002751c:	a80c      	add	r0, sp, #48	; 0x30
9002751e:	f7ef fad9 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027522:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90027526:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
9002752a:	f002 0301 	and.w	r3, r2, #1
9002752e:	9306      	str	r3, [sp, #24]
90027530:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90027534:	f003 0101 	and.w	r1, r3, #1
90027538:	9105      	str	r1, [sp, #20]
9002753a:	9805      	ldr	r0, [sp, #20]
9002753c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90027540:	4403      	add	r3, r0
90027542:	fb01 2303 	mla	r3, r1, r3, r2
90027546:	fb93 f3f8 	sdiv	r3, r3, r8
9002754a:	441e      	add	r6, r3
9002754c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90027550:	441a      	add	r2, r3
90027552:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90027556:	4419      	add	r1, r3
90027558:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9002755c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90027560:	9303      	str	r3, [sp, #12]
90027562:	4b89      	ldr	r3, [pc, #548]	; (90027788 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90027564:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90027568:	6818      	ldr	r0, [r3, #0]
9002756a:	6803      	ldr	r3, [r0, #0]
9002756c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9002756e:	4798      	blx	r3
90027570:	4a86      	ldr	r2, [pc, #536]	; (9002778c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90027572:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90027576:	2fff      	cmp	r7, #255	; 0xff
90027578:	8813      	ldrh	r3, [r2, #0]
9002757a:	4694      	mov	ip, r2
9002757c:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
90027580:	fb03 9404 	mla	r4, r3, r4, r9
90027584:	fb03 f30b 	mul.w	r3, r3, fp
90027588:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002758c:	d071      	beq.n	90027672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
9002758e:	43f9      	mvns	r1, r7
90027590:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90027594:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90027598:	b2c9      	uxtb	r1, r1
9002759a:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002759e:	9104      	str	r1, [sp, #16]
900275a0:	9b07      	ldr	r3, [sp, #28]
900275a2:	42a3      	cmp	r3, r4
900275a4:	f240 80e7 	bls.w	90027776 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
900275a8:	9b06      	ldr	r3, [sp, #24]
900275aa:	2b00      	cmp	r3, #0
900275ac:	d03d      	beq.n	9002762a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
900275ae:	7831      	ldrb	r1, [r6, #0]
900275b0:	4650      	mov	r0, sl
900275b2:	9b04      	ldr	r3, [sp, #16]
900275b4:	f106 0801 	add.w	r8, r6, #1
900275b8:	f001 010f 	and.w	r1, r1, #15
900275bc:	8822      	ldrh	r2, [r4, #0]
900275be:	9300      	str	r3, [sp, #0]
900275c0:	463b      	mov	r3, r7
900275c2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900275c6:	4429      	add	r1, r5
900275c8:	f7ff ff56 	bl	90027478 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900275cc:	9b03      	ldr	r3, [sp, #12]
900275ce:	f824 0b02 	strh.w	r0, [r4], #2
900275d2:	f103 3bff 	add.w	fp, r3, #4294967295
900275d6:	f1bb 0f01 	cmp.w	fp, #1
900275da:	46a1      	mov	r9, r4
900275dc:	f104 0404 	add.w	r4, r4, #4
900275e0:	dd27      	ble.n	90027632 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
900275e2:	f898 1000 	ldrb.w	r1, [r8]
900275e6:	4650      	mov	r0, sl
900275e8:	9b04      	ldr	r3, [sp, #16]
900275ea:	f1ab 0b02 	sub.w	fp, fp, #2
900275ee:	0909      	lsrs	r1, r1, #4
900275f0:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900275f4:	9300      	str	r3, [sp, #0]
900275f6:	463b      	mov	r3, r7
900275f8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900275fc:	4429      	add	r1, r5
900275fe:	f7ff ff3b 	bl	90027478 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90027602:	f824 0c04 	strh.w	r0, [r4, #-4]
90027606:	f818 1b01 	ldrb.w	r1, [r8], #1
9002760a:	4650      	mov	r0, sl
9002760c:	9b04      	ldr	r3, [sp, #16]
9002760e:	f001 010f 	and.w	r1, r1, #15
90027612:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90027616:	9300      	str	r3, [sp, #0]
90027618:	463b      	mov	r3, r7
9002761a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002761e:	4429      	add	r1, r5
90027620:	f7ff ff2a 	bl	90027478 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90027624:	f824 0c02 	strh.w	r0, [r4, #-2]
90027628:	e7d5      	b.n	900275d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002762a:	46b0      	mov	r8, r6
9002762c:	f8dd b00c 	ldr.w	fp, [sp, #12]
90027630:	e7d1      	b.n	900275d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90027632:	d10f      	bne.n	90027654 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90027634:	f898 1000 	ldrb.w	r1, [r8]
90027638:	4650      	mov	r0, sl
9002763a:	9b04      	ldr	r3, [sp, #16]
9002763c:	0909      	lsrs	r1, r1, #4
9002763e:	f8b9 2000 	ldrh.w	r2, [r9]
90027642:	9300      	str	r3, [sp, #0]
90027644:	463b      	mov	r3, r7
90027646:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002764a:	4429      	add	r1, r5
9002764c:	f7ff ff14 	bl	90027478 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90027650:	f829 0b02 	strh.w	r0, [r9], #2
90027654:	9b08      	ldr	r3, [sp, #32]
90027656:	9a05      	ldr	r2, [sp, #20]
90027658:	881c      	ldrh	r4, [r3, #0]
9002765a:	9b03      	ldr	r3, [sp, #12]
9002765c:	1ae4      	subs	r4, r4, r3
9002765e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90027662:	4413      	add	r3, r2
90027664:	9a09      	ldr	r2, [sp, #36]	; 0x24
90027666:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002766a:	fb93 f3f2 	sdiv	r3, r3, r2
9002766e:	441e      	add	r6, r3
90027670:	e796      	b.n	900275a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90027672:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90027676:	4f46      	ldr	r7, [pc, #280]	; (90027790 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90027678:	42a3      	cmp	r3, r4
9002767a:	d97c      	bls.n	90027776 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002767c:	9a06      	ldr	r2, [sp, #24]
9002767e:	2a00      	cmp	r2, #0
90027680:	d054      	beq.n	9002772c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90027682:	7830      	ldrb	r0, [r6, #0]
90027684:	1c71      	adds	r1, r6, #1
90027686:	f000 000f 	and.w	r0, r0, #15
9002768a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002768e:	eb05 0e00 	add.w	lr, r5, r0
90027692:	5c28      	ldrb	r0, [r5, r0]
90027694:	f89e 2002 	ldrb.w	r2, [lr, #2]
90027698:	f89e e001 	ldrb.w	lr, [lr, #1]
9002769c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900276a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900276a4:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900276a8:	ea42 020e 	orr.w	r2, r2, lr
900276ac:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
900276b0:	f824 2b02 	strh.w	r2, [r4], #2
900276b4:	9a03      	ldr	r2, [sp, #12]
900276b6:	f102 3eff 	add.w	lr, r2, #4294967295
900276ba:	f1be 0f01 	cmp.w	lr, #1
900276be:	4620      	mov	r0, r4
900276c0:	f104 0404 	add.w	r4, r4, #4
900276c4:	dd36      	ble.n	90027734 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
900276c6:	7808      	ldrb	r0, [r1, #0]
900276c8:	f1ae 0e02 	sub.w	lr, lr, #2
900276cc:	0900      	lsrs	r0, r0, #4
900276ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900276d2:	eb05 0a00 	add.w	sl, r5, r0
900276d6:	f89a 2001 	ldrb.w	r2, [sl, #1]
900276da:	f89a 9002 	ldrb.w	r9, [sl, #2]
900276de:	00d2      	lsls	r2, r2, #3
900276e0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900276e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900276e8:	ea49 0202 	orr.w	r2, r9, r2
900276ec:	f815 9000 	ldrb.w	r9, [r5, r0]
900276f0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900276f4:	f824 2c04 	strh.w	r2, [r4, #-4]
900276f8:	f811 0b01 	ldrb.w	r0, [r1], #1
900276fc:	f000 000f 	and.w	r0, r0, #15
90027700:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90027704:	eb05 0a00 	add.w	sl, r5, r0
90027708:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002770c:	f89a 9002 	ldrb.w	r9, [sl, #2]
90027710:	00d2      	lsls	r2, r2, #3
90027712:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90027716:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002771a:	ea49 0202 	orr.w	r2, r9, r2
9002771e:	f815 9000 	ldrb.w	r9, [r5, r0]
90027722:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90027726:	f824 2c02 	strh.w	r2, [r4, #-2]
9002772a:	e7c6      	b.n	900276ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
9002772c:	4631      	mov	r1, r6
9002772e:	f8dd e00c 	ldr.w	lr, [sp, #12]
90027732:	e7c2      	b.n	900276ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90027734:	d111      	bne.n	9002775a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90027736:	7809      	ldrb	r1, [r1, #0]
90027738:	0909      	lsrs	r1, r1, #4
9002773a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002773e:	186c      	adds	r4, r5, r1
90027740:	5c69      	ldrb	r1, [r5, r1]
90027742:	78a2      	ldrb	r2, [r4, #2]
90027744:	7864      	ldrb	r4, [r4, #1]
90027746:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002774a:	00e4      	lsls	r4, r4, #3
9002774c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90027750:	4322      	orrs	r2, r4
90027752:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90027756:	f820 2b02 	strh.w	r2, [r0], #2
9002775a:	9a03      	ldr	r2, [sp, #12]
9002775c:	f8bc 4000 	ldrh.w	r4, [ip]
90027760:	9905      	ldr	r1, [sp, #20]
90027762:	1aa4      	subs	r4, r4, r2
90027764:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90027768:	440a      	add	r2, r1
9002776a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002776e:	fb92 f2f8 	sdiv	r2, r2, r8
90027772:	4416      	add	r6, r2
90027774:	e780      	b.n	90027678 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90027776:	4b04      	ldr	r3, [pc, #16]	; (90027788 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90027778:	6818      	ldr	r0, [r3, #0]
9002777a:	6803      	ldr	r3, [r0, #0]
9002777c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002777e:	4798      	blx	r3
90027780:	b00f      	add	sp, #60	; 0x3c
90027782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027786:	bf00      	nop
90027788:	2403989c 	.word	0x2403989c
9002778c:	24039896 	.word	0x24039896
90027790:	fffff800 	.word	0xfffff800

90027794 <CRC_Lock>:
90027794:	4a20      	ldr	r2, [pc, #128]	; (90027818 <CRC_Lock+0x84>)
90027796:	b530      	push	{r4, r5, lr}
90027798:	6813      	ldr	r3, [r2, #0]
9002779a:	f64f 74f0 	movw	r4, #65520	; 0xfff0
9002779e:	f24c 2540 	movw	r5, #49728	; 0xc240
900277a2:	f023 0301 	bic.w	r3, r3, #1
900277a6:	6013      	str	r3, [r2, #0]
900277a8:	4b1c      	ldr	r3, [pc, #112]	; (9002781c <CRC_Lock+0x88>)
900277aa:	681a      	ldr	r2, [r3, #0]
900277ac:	4022      	ands	r2, r4
900277ae:	42aa      	cmp	r2, r5
900277b0:	d005      	beq.n	900277be <CRC_Lock+0x2a>
900277b2:	681b      	ldr	r3, [r3, #0]
900277b4:	f24c 2270 	movw	r2, #49776	; 0xc270
900277b8:	4023      	ands	r3, r4
900277ba:	4293      	cmp	r3, r2
900277bc:	d124      	bne.n	90027808 <CRC_Lock+0x74>
900277be:	4b18      	ldr	r3, [pc, #96]	; (90027820 <CRC_Lock+0x8c>)
900277c0:	681b      	ldr	r3, [r3, #0]
900277c2:	bb0b      	cbnz	r3, 90027808 <CRC_Lock+0x74>
900277c4:	4b17      	ldr	r3, [pc, #92]	; (90027824 <CRC_Lock+0x90>)
900277c6:	681a      	ldr	r2, [r3, #0]
900277c8:	f3c2 020b 	ubfx	r2, r2, #0, #12
900277cc:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
900277d0:	d00d      	beq.n	900277ee <CRC_Lock+0x5a>
900277d2:	681a      	ldr	r2, [r3, #0]
900277d4:	f240 4483 	movw	r4, #1155	; 0x483
900277d8:	f3c2 020b 	ubfx	r2, r2, #0, #12
900277dc:	42a2      	cmp	r2, r4
900277de:	d006      	beq.n	900277ee <CRC_Lock+0x5a>
900277e0:	681b      	ldr	r3, [r3, #0]
900277e2:	f240 4285 	movw	r2, #1157	; 0x485
900277e6:	f3c3 030b 	ubfx	r3, r3, #0, #12
900277ea:	4293      	cmp	r3, r2
900277ec:	d10c      	bne.n	90027808 <CRC_Lock+0x74>
900277ee:	4b0e      	ldr	r3, [pc, #56]	; (90027828 <CRC_Lock+0x94>)
900277f0:	2201      	movs	r2, #1
900277f2:	601a      	str	r2, [r3, #0]
900277f4:	681a      	ldr	r2, [r3, #0]
900277f6:	2a00      	cmp	r2, #0
900277f8:	d1fc      	bne.n	900277f4 <CRC_Lock+0x60>
900277fa:	4b0c      	ldr	r3, [pc, #48]	; (9002782c <CRC_Lock+0x98>)
900277fc:	6018      	str	r0, [r3, #0]
900277fe:	6818      	ldr	r0, [r3, #0]
90027800:	1a43      	subs	r3, r0, r1
90027802:	4258      	negs	r0, r3
90027804:	4158      	adcs	r0, r3
90027806:	bd30      	pop	{r4, r5, pc}
90027808:	4b09      	ldr	r3, [pc, #36]	; (90027830 <CRC_Lock+0x9c>)
9002780a:	2201      	movs	r2, #1
9002780c:	601a      	str	r2, [r3, #0]
9002780e:	681a      	ldr	r2, [r3, #0]
90027810:	2a00      	cmp	r2, #0
90027812:	d1fc      	bne.n	9002780e <CRC_Lock+0x7a>
90027814:	4b07      	ldr	r3, [pc, #28]	; (90027834 <CRC_Lock+0xa0>)
90027816:	e7f1      	b.n	900277fc <CRC_Lock+0x68>
90027818:	e0002000 	.word	0xe0002000
9002781c:	e000ed00 	.word	0xe000ed00
90027820:	e0042000 	.word	0xe0042000
90027824:	5c001000 	.word	0x5c001000
90027828:	58024c08 	.word	0x58024c08
9002782c:	58024c00 	.word	0x58024c00
90027830:	40023008 	.word	0x40023008
90027834:	40023000 	.word	0x40023000

90027838 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90027838:	6101      	str	r1, [r0, #16]
9002783a:	4770      	bx	lr

9002783c <_ZN8touchgfx8Gestures4tickEv>:
9002783c:	7b83      	ldrb	r3, [r0, #14]
9002783e:	b14b      	cbz	r3, 90027854 <_ZN8touchgfx8Gestures4tickEv+0x18>
90027840:	8903      	ldrh	r3, [r0, #8]
90027842:	3301      	adds	r3, #1
90027844:	b29b      	uxth	r3, r3
90027846:	2b07      	cmp	r3, #7
90027848:	8103      	strh	r3, [r0, #8]
9002784a:	bf81      	itttt	hi
9002784c:	2300      	movhi	r3, #0
9002784e:	8143      	strhhi	r3, [r0, #10]
90027850:	8183      	strhhi	r3, [r0, #12]
90027852:	7383      	strbhi	r3, [r0, #14]
90027854:	4770      	bx	lr
	...

90027858 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90027858:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9002785c:	4698      	mov	r8, r3
9002785e:	8883      	ldrh	r3, [r0, #4]
90027860:	4604      	mov	r4, r0
90027862:	4617      	mov	r7, r2
90027864:	f8ad 3006 	strh.w	r3, [sp, #6]
90027868:	eba8 0303 	sub.w	r3, r8, r3
9002786c:	4a19      	ldr	r2, [pc, #100]	; (900278d4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002786e:	460e      	mov	r6, r1
90027870:	b21b      	sxth	r3, r3
90027872:	88c1      	ldrh	r1, [r0, #6]
90027874:	9200      	str	r2, [sp, #0]
90027876:	2000      	movs	r0, #0
90027878:	2b00      	cmp	r3, #0
9002787a:	8aa2      	ldrh	r2, [r4, #20]
9002787c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
90027880:	bfb8      	it	lt
90027882:	425b      	neglt	r3, r3
90027884:	f88d 0004 	strb.w	r0, [sp, #4]
90027888:	f8ad 1008 	strh.w	r1, [sp, #8]
9002788c:	b21b      	sxth	r3, r3
9002788e:	f8ad 800a 	strh.w	r8, [sp, #10]
90027892:	f8ad 500c 	strh.w	r5, [sp, #12]
90027896:	4293      	cmp	r3, r2
90027898:	dc07      	bgt.n	900278aa <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
9002789a:	1a69      	subs	r1, r5, r1
9002789c:	b209      	sxth	r1, r1
9002789e:	2900      	cmp	r1, #0
900278a0:	bfb8      	it	lt
900278a2:	4249      	neglt	r1, r1
900278a4:	b209      	sxth	r1, r1
900278a6:	428a      	cmp	r2, r1
900278a8:	da10      	bge.n	900278cc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
900278aa:	6920      	ldr	r0, [r4, #16]
900278ac:	4669      	mov	r1, sp
900278ae:	eba8 0606 	sub.w	r6, r8, r6
900278b2:	1bef      	subs	r7, r5, r7
900278b4:	6803      	ldr	r3, [r0, #0]
900278b6:	685b      	ldr	r3, [r3, #4]
900278b8:	4798      	blx	r3
900278ba:	2300      	movs	r3, #0
900278bc:	2001      	movs	r0, #1
900278be:	8166      	strh	r6, [r4, #10]
900278c0:	8123      	strh	r3, [r4, #8]
900278c2:	81a7      	strh	r7, [r4, #12]
900278c4:	f8a4 8004 	strh.w	r8, [r4, #4]
900278c8:	80e5      	strh	r5, [r4, #6]
900278ca:	73a0      	strb	r0, [r4, #14]
900278cc:	b004      	add	sp, #16
900278ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900278d2:	bf00      	nop
900278d4:	9002c620 	.word	0x9002c620

900278d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900278d8:	b5f0      	push	{r4, r5, r6, r7, lr}
900278da:	461e      	mov	r6, r3
900278dc:	1e4b      	subs	r3, r1, #1
900278de:	b085      	sub	sp, #20
900278e0:	4604      	mov	r4, r0
900278e2:	2b01      	cmp	r3, #1
900278e4:	460d      	mov	r5, r1
900278e6:	4617      	mov	r7, r2
900278e8:	d84b      	bhi.n	90027982 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900278ea:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900278ee:	1cd3      	adds	r3, r2, #3
900278f0:	b29b      	uxth	r3, r3
900278f2:	2b06      	cmp	r3, #6
900278f4:	d916      	bls.n	90027924 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900278f6:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90027998 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900278fa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900278fe:	f8cd c004 	str.w	ip, [sp, #4]
90027902:	f04f 0c00 	mov.w	ip, #0
90027906:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002790a:	6900      	ldr	r0, [r0, #16]
9002790c:	f8ad 100c 	strh.w	r1, [sp, #12]
90027910:	a901      	add	r1, sp, #4
90027912:	f88d c008 	strb.w	ip, [sp, #8]
90027916:	f8ad 200a 	strh.w	r2, [sp, #10]
9002791a:	f8ad 300e 	strh.w	r3, [sp, #14]
9002791e:	6803      	ldr	r3, [r0, #0]
90027920:	689b      	ldr	r3, [r3, #8]
90027922:	4798      	blx	r3
90027924:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90027928:	1cd3      	adds	r3, r2, #3
9002792a:	b29b      	uxth	r3, r3
9002792c:	2b06      	cmp	r3, #6
9002792e:	d916      	bls.n	9002795e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90027930:	f8df c064 	ldr.w	ip, [pc, #100]	; 90027998 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90027934:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90027938:	f8cd c004 	str.w	ip, [sp, #4]
9002793c:	f04f 0c01 	mov.w	ip, #1
90027940:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90027944:	6920      	ldr	r0, [r4, #16]
90027946:	f8ad 100c 	strh.w	r1, [sp, #12]
9002794a:	a901      	add	r1, sp, #4
9002794c:	f88d c008 	strb.w	ip, [sp, #8]
90027950:	f8ad 200a 	strh.w	r2, [sp, #10]
90027954:	f8ad 300e 	strh.w	r3, [sp, #14]
90027958:	6803      	ldr	r3, [r0, #0]
9002795a:	689b      	ldr	r3, [r3, #8]
9002795c:	4798      	blx	r3
9002795e:	4b0d      	ldr	r3, [pc, #52]	; (90027994 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90027960:	a901      	add	r1, sp, #4
90027962:	6920      	ldr	r0, [r4, #16]
90027964:	9301      	str	r3, [sp, #4]
90027966:	2300      	movs	r3, #0
90027968:	f88d 5008 	strb.w	r5, [sp, #8]
9002796c:	f8ad 700a 	strh.w	r7, [sp, #10]
90027970:	f8ad 600c 	strh.w	r6, [sp, #12]
90027974:	f8ad 300e 	strh.w	r3, [sp, #14]
90027978:	6803      	ldr	r3, [r0, #0]
9002797a:	681b      	ldr	r3, [r3, #0]
9002797c:	4798      	blx	r3
9002797e:	b005      	add	sp, #20
90027980:	bdf0      	pop	{r4, r5, r6, r7, pc}
90027982:	2900      	cmp	r1, #0
90027984:	d1eb      	bne.n	9002795e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90027986:	80a2      	strh	r2, [r4, #4]
90027988:	80c6      	strh	r6, [r0, #6]
9002798a:	60a1      	str	r1, [r4, #8]
9002798c:	81a1      	strh	r1, [r4, #12]
9002798e:	73a1      	strb	r1, [r4, #14]
90027990:	e7e5      	b.n	9002795e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90027992:	bf00      	nop
90027994:	9002c60c 	.word	0x9002c60c
90027998:	9002c634 	.word	0x9002c634

9002799c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
9002799c:	10c9      	asrs	r1, r1, #3
9002799e:	2900      	cmp	r1, #0
900279a0:	bfb8      	it	lt
900279a2:	4249      	neglt	r1, r1
900279a4:	2801      	cmp	r0, #1
900279a6:	d108      	bne.n	900279ba <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
900279a8:	f3c1 0008 	ubfx	r0, r1, #0, #9
900279ac:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
900279b0:	4601      	mov	r1, r0
900279b2:	dd02      	ble.n	900279ba <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
900279b4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
900279b8:	4770      	bx	lr
900279ba:	29ff      	cmp	r1, #255	; 0xff
900279bc:	bfa8      	it	ge
900279be:	21ff      	movge	r1, #255	; 0xff
900279c0:	4608      	mov	r0, r1
900279c2:	4770      	bx	lr

900279c4 <_ZN8touchgfx10Rasterizer6lineToEii>:
900279c4:	b410      	push	{r4}
900279c6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900279ca:	429c      	cmp	r4, r3
900279cc:	d803      	bhi.n	900279d6 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
900279ce:	f85d 4b04 	ldr.w	r4, [sp], #4
900279d2:	f7ed bb45 	b.w	90015060 <_ZN8touchgfx7Outline6lineToEii>
900279d6:	f85d 4b04 	ldr.w	r4, [sp], #4
900279da:	4770      	bx	lr

900279dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900279dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900279e0:	b08b      	sub	sp, #44	; 0x2c
900279e2:	4606      	mov	r6, r0
900279e4:	468a      	mov	sl, r1
900279e6:	e9cd 2306 	strd	r2, r3, [sp, #24]
900279ea:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900279ee:	9308      	str	r3, [sp, #32]
900279f0:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900279f4:	9309      	str	r3, [sp, #36]	; 0x24
900279f6:	f7ed fc9e 	bl	90015336 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
900279fa:	68b5      	ldr	r5, [r6, #8]
900279fc:	4604      	mov	r4, r0
900279fe:	2d00      	cmp	r5, #0
90027a00:	d044      	beq.n	90027a8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90027a02:	6873      	ldr	r3, [r6, #4]
90027a04:	42ab      	cmp	r3, r5
90027a06:	d33d      	bcc.n	90027a84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90027a08:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90027a0c:	f04f 0800 	mov.w	r8, #0
90027a10:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90027a14:	eb02 0b03 	add.w	fp, r2, r3
90027a18:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90027a1c:	fb02 1203 	mla	r2, r2, r3, r1
90027a20:	9205      	str	r2, [sp, #20]
90027a22:	1e6a      	subs	r2, r5, #1
90027a24:	9204      	str	r2, [sp, #16]
90027a26:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90027a2a:	f9b4 7000 	ldrsh.w	r7, [r4]
90027a2e:	454b      	cmp	r3, r9
90027a30:	463a      	mov	r2, r7
90027a32:	d008      	beq.n	90027a46 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90027a34:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90027a38:	eb03 0b09 	add.w	fp, r3, r9
90027a3c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90027a40:	fb03 1309 	mla	r3, r3, r9, r1
90027a44:	9305      	str	r3, [sp, #20]
90027a46:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90027a4a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90027a4e:	4498      	add	r8, r3
90027a50:	9b04      	ldr	r3, [sp, #16]
90027a52:	3b01      	subs	r3, #1
90027a54:	9304      	str	r3, [sp, #16]
90027a56:	9b04      	ldr	r3, [sp, #16]
90027a58:	3301      	adds	r3, #1
90027a5a:	d015      	beq.n	90027a88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90027a5c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90027a60:	42bb      	cmp	r3, r7
90027a62:	d117      	bne.n	90027a94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90027a64:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90027a68:	9b04      	ldr	r3, [sp, #16]
90027a6a:	4548      	cmp	r0, r9
90027a6c:	f103 33ff 	add.w	r3, r3, #4294967295
90027a70:	d17d      	bne.n	90027b6e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90027a72:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90027a76:	4401      	add	r1, r0
90027a78:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90027a7c:	4480      	add	r8, r0
90027a7e:	e7e9      	b.n	90027a54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90027a80:	461f      	mov	r7, r3
90027a82:	e042      	b.n	90027b0a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90027a84:	2000      	movs	r0, #0
90027a86:	e002      	b.n	90027a8e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90027a88:	2900      	cmp	r1, #0
90027a8a:	d16d      	bne.n	90027b68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90027a8c:	2001      	movs	r0, #1
90027a8e:	b00b      	add	sp, #44	; 0x2c
90027a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027a94:	b379      	cbz	r1, 90027af6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90027a96:	2f00      	cmp	r7, #0
90027a98:	db29      	blt.n	90027aee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90027a9a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90027a9e:	42bb      	cmp	r3, r7
90027aa0:	dd25      	ble.n	90027aee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90027aa2:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90027aa6:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90027aaa:	f7ff ff77 	bl	9002799c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
90027aae:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027ab0:	fb10 f003 	smulbb	r0, r0, r3
90027ab4:	b280      	uxth	r0, r0
90027ab6:	1c41      	adds	r1, r0, #1
90027ab8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90027abc:	1209      	asrs	r1, r1, #8
90027abe:	f011 0fff 	tst.w	r1, #255	; 0xff
90027ac2:	d014      	beq.n	90027aee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90027ac4:	b2c9      	uxtb	r1, r1
90027ac6:	9808      	ldr	r0, [sp, #32]
90027ac8:	b2ba      	uxth	r2, r7
90027aca:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90027acc:	9102      	str	r1, [sp, #8]
90027ace:	2101      	movs	r1, #1
90027ad0:	4413      	add	r3, r2
90027ad2:	4402      	add	r2, r0
90027ad4:	9101      	str	r1, [sp, #4]
90027ad6:	fa0f f18b 	sxth.w	r1, fp
90027ada:	f8da 0000 	ldr.w	r0, [sl]
90027ade:	b21b      	sxth	r3, r3
90027ae0:	9100      	str	r1, [sp, #0]
90027ae2:	b212      	sxth	r2, r2
90027ae4:	6941      	ldr	r1, [r0, #20]
90027ae6:	4650      	mov	r0, sl
90027ae8:	460d      	mov	r5, r1
90027aea:	9905      	ldr	r1, [sp, #20]
90027aec:	47a8      	blx	r5
90027aee:	9b04      	ldr	r3, [sp, #16]
90027af0:	1c7a      	adds	r2, r7, #1
90027af2:	3301      	adds	r3, #1
90027af4:	d0ca      	beq.n	90027a8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90027af6:	f9b4 7000 	ldrsh.w	r7, [r4]
90027afa:	1abb      	subs	r3, r7, r2
90027afc:	2b00      	cmp	r3, #0
90027afe:	dd31      	ble.n	90027b64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027b00:	2a00      	cmp	r2, #0
90027b02:	dabd      	bge.n	90027a80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90027b04:	2f00      	cmp	r7, #0
90027b06:	dd2d      	ble.n	90027b64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027b08:	2200      	movs	r2, #0
90027b0a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90027b0e:	19d1      	adds	r1, r2, r7
90027b10:	4299      	cmp	r1, r3
90027b12:	db02      	blt.n	90027b1a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90027b14:	1a9f      	subs	r7, r3, r2
90027b16:	2f00      	cmp	r7, #0
90027b18:	dd24      	ble.n	90027b64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027b1a:	ea4f 1188 	mov.w	r1, r8, lsl #6
90027b1e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90027b22:	f7ff ff3b 	bl	9002799c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
90027b26:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027b28:	fb10 f003 	smulbb	r0, r0, r3
90027b2c:	b280      	uxth	r0, r0
90027b2e:	1c41      	adds	r1, r0, #1
90027b30:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90027b34:	1209      	asrs	r1, r1, #8
90027b36:	f011 0fff 	tst.w	r1, #255	; 0xff
90027b3a:	d013      	beq.n	90027b64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027b3c:	b292      	uxth	r2, r2
90027b3e:	9808      	ldr	r0, [sp, #32]
90027b40:	b2c9      	uxtb	r1, r1
90027b42:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90027b44:	b23f      	sxth	r7, r7
90027b46:	4413      	add	r3, r2
90027b48:	9102      	str	r1, [sp, #8]
90027b4a:	4402      	add	r2, r0
90027b4c:	fa0f f18b 	sxth.w	r1, fp
90027b50:	f8da 0000 	ldr.w	r0, [sl]
90027b54:	b21b      	sxth	r3, r3
90027b56:	9100      	str	r1, [sp, #0]
90027b58:	b212      	sxth	r2, r2
90027b5a:	9701      	str	r7, [sp, #4]
90027b5c:	9905      	ldr	r1, [sp, #20]
90027b5e:	6947      	ldr	r7, [r0, #20]
90027b60:	4650      	mov	r0, sl
90027b62:	47b8      	blx	r7
90027b64:	464b      	mov	r3, r9
90027b66:	e75e      	b.n	90027a26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90027b68:	2f00      	cmp	r7, #0
90027b6a:	da96      	bge.n	90027a9a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90027b6c:	e78e      	b.n	90027a8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90027b6e:	2900      	cmp	r1, #0
90027b70:	d0f8      	beq.n	90027b64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027b72:	e790      	b.n	90027a96 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90027b74 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
90027b74:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90027b78:	4b4a      	ldr	r3, [pc, #296]	; (90027ca4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
90027b7a:	2500      	movs	r5, #0
90027b7c:	f100 0620 	add.w	r6, r0, #32
90027b80:	4604      	mov	r4, r0
90027b82:	4690      	mov	r8, r2
90027b84:	f100 0718 	add.w	r7, r0, #24
90027b88:	e9c0 3100 	strd	r3, r1, [r0]
90027b8c:	e9c0 5502 	strd	r5, r5, [r0, #8]
90027b90:	e9c0 5504 	strd	r5, r5, [r0, #16]
90027b94:	e9c0 5506 	strd	r5, r5, [r0, #24]
90027b98:	4630      	mov	r0, r6
90027b9a:	f7ec fda7 	bl	900146ec <_ZN8touchgfx7OutlineC1Ev>
90027b9e:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
90027ba2:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
90027ba6:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
90027baa:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
90027bae:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
90027bb2:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
90027bb6:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
90027bba:	f8d4 c004 	ldr.w	ip, [r4, #4]
90027bbe:	9500      	str	r5, [sp, #0]
90027bc0:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90027bc4:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
90027bc8:	f9b8 2000 	ldrsh.w	r2, [r8]
90027bcc:	f8b8 0004 	ldrh.w	r0, [r8, #4]
90027bd0:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
90027bd4:	4410      	add	r0, r2
90027bd6:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
90027bda:	b280      	uxth	r0, r0
90027bdc:	fa0f fa80 	sxth.w	sl, r0
90027be0:	45aa      	cmp	sl, r5
90027be2:	dd5c      	ble.n	90027c9e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90027be4:	4591      	cmp	r9, r2
90027be6:	dd5a      	ble.n	90027c9e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90027be8:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
90027bec:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90027bf0:	440b      	add	r3, r1
90027bf2:	b29b      	uxth	r3, r3
90027bf4:	b21d      	sxth	r5, r3
90027bf6:	2d00      	cmp	r5, #0
90027bf8:	dd51      	ble.n	90027c9e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90027bfa:	458e      	cmp	lr, r1
90027bfc:	dd4f      	ble.n	90027c9e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90027bfe:	45d1      	cmp	r9, sl
90027c00:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
90027c04:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
90027c08:	bfb8      	it	lt
90027c0a:	fa1f f089 	uxthlt.w	r0, r9
90027c0e:	45ae      	cmp	lr, r5
90027c10:	f8ad 2000 	strh.w	r2, [sp]
90027c14:	bfb8      	it	lt
90027c16:	fa1f f38e 	uxthlt.w	r3, lr
90027c1a:	1a80      	subs	r0, r0, r2
90027c1c:	f8ad 1002 	strh.w	r1, [sp, #2]
90027c20:	1a5b      	subs	r3, r3, r1
90027c22:	f8ad 0004 	strh.w	r0, [sp, #4]
90027c26:	f8ad 3006 	strh.w	r3, [sp, #6]
90027c2a:	466d      	mov	r5, sp
90027c2c:	e895 0003 	ldmia.w	r5, {r0, r1}
90027c30:	e887 0003 	stmia.w	r7, {r0, r1}
90027c34:	f8dc 3000 	ldr.w	r3, [ip]
90027c38:	4660      	mov	r0, ip
90027c3a:	4639      	mov	r1, r7
90027c3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90027c3e:	4798      	blx	r3
90027c40:	6861      	ldr	r1, [r4, #4]
90027c42:	4628      	mov	r0, r5
90027c44:	3104      	adds	r1, #4
90027c46:	f7ee ff45 	bl	90016ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027c4a:	4638      	mov	r0, r7
90027c4c:	f7ee fefe 	bl	90016a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027c50:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90027c54:	f8bd 2000 	ldrh.w	r2, [sp]
90027c58:	4630      	mov	r0, r6
90027c5a:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
90027c5e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
90027c62:	f7ec fd27 	bl	900146b4 <_ZN8touchgfx7Outline5resetEv>
90027c66:	f9bd 3000 	ldrsh.w	r3, [sp]
90027c6a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
90027c6e:	4620      	mov	r0, r4
90027c70:	015b      	lsls	r3, r3, #5
90027c72:	60a3      	str	r3, [r4, #8]
90027c74:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90027c78:	015b      	lsls	r3, r3, #5
90027c7a:	60e3      	str	r3, [r4, #12]
90027c7c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90027c80:	015b      	lsls	r3, r3, #5
90027c82:	6123      	str	r3, [r4, #16]
90027c84:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90027c88:	015b      	lsls	r3, r3, #5
90027c8a:	6163      	str	r3, [r4, #20]
90027c8c:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
90027c90:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
90027c94:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
90027c98:	b002      	add	sp, #8
90027c9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027c9e:	2300      	movs	r3, #0
90027ca0:	9301      	str	r3, [sp, #4]
90027ca2:	e7c2      	b.n	90027c2a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
90027ca4:	9002c958 	.word	0x9002c958

90027ca8 <_ZN8touchgfx6Canvas5closeEv>:
90027ca8:	b538      	push	{r3, r4, r5, lr}
90027caa:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
90027cae:	4604      	mov	r4, r0
90027cb0:	b193      	cbz	r3, 90027cd8 <_ZN8touchgfx6Canvas5closeEv+0x30>
90027cb2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
90027cb6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
90027cba:	4213      	tst	r3, r2
90027cbc:	d10c      	bne.n	90027cd8 <_ZN8touchgfx6Canvas5closeEv+0x30>
90027cbe:	f100 0520 	add.w	r5, r0, #32
90027cc2:	b123      	cbz	r3, 90027cce <_ZN8touchgfx6Canvas5closeEv+0x26>
90027cc4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
90027cc8:	4628      	mov	r0, r5
90027cca:	f7ff fe7b 	bl	900279c4 <_ZN8touchgfx10Rasterizer6lineToEii>
90027cce:	4628      	mov	r0, r5
90027cd0:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
90027cd4:	f7ff fe76 	bl	900279c4 <_ZN8touchgfx10Rasterizer6lineToEii>
90027cd8:	2300      	movs	r3, #0
90027cda:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90027cde:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
90027ce2:	4298      	cmp	r0, r3
90027ce4:	bf34      	ite	cc
90027ce6:	2000      	movcc	r0, #0
90027ce8:	2001      	movcs	r0, #1
90027cea:	bd38      	pop	{r3, r4, r5, pc}

90027cec <_ZN8touchgfx6Canvas6renderEh>:
90027cec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90027cf0:	4604      	mov	r4, r0
90027cf2:	6840      	ldr	r0, [r0, #4]
90027cf4:	460d      	mov	r5, r1
90027cf6:	6803      	ldr	r3, [r0, #0]
90027cf8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90027cfa:	4798      	blx	r3
90027cfc:	fb10 f105 	smulbb	r1, r0, r5
90027d00:	b289      	uxth	r1, r1
90027d02:	1c4d      	adds	r5, r1, #1
90027d04:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90027d08:	122d      	asrs	r5, r5, #8
90027d0a:	f000 809c 	beq.w	90027e46 <_ZN8touchgfx6Canvas6renderEh+0x15a>
90027d0e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
90027d12:	2b00      	cmp	r3, #0
90027d14:	f000 8097 	beq.w	90027e46 <_ZN8touchgfx6Canvas6renderEh+0x15a>
90027d18:	4620      	mov	r0, r4
90027d1a:	f7ff ffc5 	bl	90027ca8 <_ZN8touchgfx6Canvas5closeEv>
90027d1e:	4607      	mov	r7, r0
90027d20:	2800      	cmp	r0, #0
90027d22:	d048      	beq.n	90027db6 <_ZN8touchgfx6Canvas6renderEh+0xca>
90027d24:	6863      	ldr	r3, [r4, #4]
90027d26:	4e49      	ldr	r6, [pc, #292]	; (90027e4c <_ZN8touchgfx6Canvas6renderEh+0x160>)
90027d28:	6a98      	ldr	r0, [r3, #40]	; 0x28
90027d2a:	6837      	ldr	r7, [r6, #0]
90027d2c:	6803      	ldr	r3, [r0, #0]
90027d2e:	689b      	ldr	r3, [r3, #8]
90027d30:	4798      	blx	r3
90027d32:	4601      	mov	r1, r0
90027d34:	4638      	mov	r0, r7
90027d36:	f7ea fc8b 	bl	90012650 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90027d3a:	4607      	mov	r7, r0
90027d3c:	f7ea f84c 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
90027d40:	6803      	ldr	r3, [r0, #0]
90027d42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90027d44:	4798      	blx	r3
90027d46:	4680      	mov	r8, r0
90027d48:	f7ea f846 	bl	90011dd8 <_ZN8touchgfx3HAL3lcdEv>
90027d4c:	6803      	ldr	r3, [r0, #0]
90027d4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90027d50:	4798      	blx	r3
90027d52:	280b      	cmp	r0, #11
90027d54:	d85c      	bhi.n	90027e10 <_ZN8touchgfx6Canvas6renderEh+0x124>
90027d56:	e8df f000 	tbb	[pc, r0]
90027d5a:	5d52      	.short	0x5d52
90027d5c:	325b066d 	.word	0x325b066d
90027d60:	66666642 	.word	0x66666642
90027d64:	6666      	.short	0x6666
90027d66:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90027d6a:	2208      	movs	r2, #8
90027d6c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027d70:	fb91 f2f2 	sdiv	r2, r1, r2
90027d74:	fb08 2303 	mla	r3, r8, r3, r2
90027d78:	441f      	add	r7, r3
90027d7a:	424b      	negs	r3, r1
90027d7c:	f001 0107 	and.w	r1, r1, #7
90027d80:	f003 0307 	and.w	r3, r3, #7
90027d84:	bf58      	it	pl
90027d86:	4259      	negpl	r1, r3
90027d88:	b2c9      	uxtb	r1, r1
90027d8a:	6860      	ldr	r0, [r4, #4]
90027d8c:	b2ed      	uxtb	r5, r5
90027d8e:	463a      	mov	r2, r7
90027d90:	fa0f f388 	sxth.w	r3, r8
90027d94:	e9cd 1500 	strd	r1, r5, [sp]
90027d98:	6a81      	ldr	r1, [r0, #40]	; 0x28
90027d9a:	f104 0020 	add.w	r0, r4, #32
90027d9e:	f7ff fe1d 	bl	900279dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90027da2:	6863      	ldr	r3, [r4, #4]
90027da4:	4607      	mov	r7, r0
90027da6:	6a98      	ldr	r0, [r3, #40]	; 0x28
90027da8:	6803      	ldr	r3, [r0, #0]
90027daa:	691b      	ldr	r3, [r3, #16]
90027dac:	4798      	blx	r3
90027dae:	6830      	ldr	r0, [r6, #0]
90027db0:	6803      	ldr	r3, [r0, #0]
90027db2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90027db4:	4798      	blx	r3
90027db6:	4638      	mov	r0, r7
90027db8:	b002      	add	sp, #8
90027dba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90027dbe:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90027dc2:	2204      	movs	r2, #4
90027dc4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027dc8:	fb91 f2f2 	sdiv	r2, r1, r2
90027dcc:	fb08 2303 	mla	r3, r8, r3, r2
90027dd0:	441f      	add	r7, r3
90027dd2:	424b      	negs	r3, r1
90027dd4:	f001 0103 	and.w	r1, r1, #3
90027dd8:	f003 0303 	and.w	r3, r3, #3
90027ddc:	e7d2      	b.n	90027d84 <_ZN8touchgfx6Canvas6renderEh+0x98>
90027dde:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90027de2:	2202      	movs	r2, #2
90027de4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027de8:	2900      	cmp	r1, #0
90027dea:	fb91 f2f2 	sdiv	r2, r1, r2
90027dee:	f001 0101 	and.w	r1, r1, #1
90027df2:	fb08 2303 	mla	r3, r8, r3, r2
90027df6:	bfb8      	it	lt
90027df8:	4249      	neglt	r1, r1
90027dfa:	441f      	add	r7, r3
90027dfc:	e7c4      	b.n	90027d88 <_ZN8touchgfx6Canvas6renderEh+0x9c>
90027dfe:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027e02:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
90027e06:	fb08 f303 	mul.w	r3, r8, r3
90027e0a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90027e0e:	441f      	add	r7, r3
90027e10:	2100      	movs	r1, #0
90027e12:	e7ba      	b.n	90027d8a <_ZN8touchgfx6Canvas6renderEh+0x9e>
90027e14:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027e18:	2103      	movs	r1, #3
90027e1a:	fb08 f203 	mul.w	r2, r8, r3
90027e1e:	8b23      	ldrh	r3, [r4, #24]
90027e20:	fb13 2301 	smlabb	r3, r3, r1, r2
90027e24:	e7f3      	b.n	90027e0e <_ZN8touchgfx6Canvas6renderEh+0x122>
90027e26:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027e2a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
90027e2e:	fb08 2303 	mla	r3, r8, r3, r2
90027e32:	e7ec      	b.n	90027e0e <_ZN8touchgfx6Canvas6renderEh+0x122>
90027e34:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027e38:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
90027e3c:	fb08 f303 	mul.w	r3, r8, r3
90027e40:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90027e44:	e7e3      	b.n	90027e0e <_ZN8touchgfx6Canvas6renderEh+0x122>
90027e46:	2701      	movs	r7, #1
90027e48:	e7b5      	b.n	90027db6 <_ZN8touchgfx6Canvas6renderEh+0xca>
90027e4a:	bf00      	nop
90027e4c:	2403989c 	.word	0x2403989c

90027e50 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90027e50:	4b07      	ldr	r3, [pc, #28]	; (90027e70 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
90027e52:	b510      	push	{r4, lr}
90027e54:	781b      	ldrb	r3, [r3, #0]
90027e56:	2b01      	cmp	r3, #1
90027e58:	d108      	bne.n	90027e6c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
90027e5a:	6843      	ldr	r3, [r0, #4]
90027e5c:	6814      	ldr	r4, [r2, #0]
90027e5e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90027e62:	680b      	ldr	r3, [r1, #0]
90027e64:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90027e68:	6013      	str	r3, [r2, #0]
90027e6a:	600c      	str	r4, [r1, #0]
90027e6c:	bd10      	pop	{r4, pc}
90027e6e:	bf00      	nop
90027e70:	24039894 	.word	0x24039894

90027e74 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90027e74:	b513      	push	{r0, r1, r4, lr}
90027e76:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
90027e7a:	4604      	mov	r4, r0
90027e7c:	e9cd 2100 	strd	r2, r1, [sp]
90027e80:	b9a3      	cbnz	r3, 90027eac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90027e82:	466a      	mov	r2, sp
90027e84:	a901      	add	r1, sp, #4
90027e86:	4620      	mov	r0, r4
90027e88:	f7ff ffe2 	bl	90027e50 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90027e8c:	68a3      	ldr	r3, [r4, #8]
90027e8e:	9901      	ldr	r1, [sp, #4]
90027e90:	9a00      	ldr	r2, [sp, #0]
90027e92:	1ac9      	subs	r1, r1, r3
90027e94:	68e3      	ldr	r3, [r4, #12]
90027e96:	1ad2      	subs	r2, r2, r3
90027e98:	9101      	str	r1, [sp, #4]
90027e9a:	2a00      	cmp	r2, #0
90027e9c:	9200      	str	r2, [sp, #0]
90027e9e:	da0b      	bge.n	90027eb8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90027ea0:	2301      	movs	r3, #1
90027ea2:	2900      	cmp	r1, #0
90027ea4:	da0e      	bge.n	90027ec4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90027ea6:	f043 0304 	orr.w	r3, r3, #4
90027eaa:	e013      	b.n	90027ed4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90027eac:	f7ff fefc 	bl	90027ca8 <_ZN8touchgfx6Canvas5closeEv>
90027eb0:	2800      	cmp	r0, #0
90027eb2:	d1e6      	bne.n	90027e82 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90027eb4:	b002      	add	sp, #8
90027eb6:	bd10      	pop	{r4, pc}
90027eb8:	6963      	ldr	r3, [r4, #20]
90027eba:	429a      	cmp	r2, r3
90027ebc:	bfac      	ite	ge
90027ebe:	2302      	movge	r3, #2
90027ec0:	2300      	movlt	r3, #0
90027ec2:	e7ee      	b.n	90027ea2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90027ec4:	6920      	ldr	r0, [r4, #16]
90027ec6:	4281      	cmp	r1, r0
90027ec8:	bfac      	ite	ge
90027eca:	2008      	movge	r0, #8
90027ecc:	2000      	movlt	r0, #0
90027ece:	4318      	orrs	r0, r3
90027ed0:	b2c3      	uxtb	r3, r0
90027ed2:	b158      	cbz	r0, 90027eec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90027ed4:	2200      	movs	r2, #0
90027ed6:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
90027eda:	9901      	ldr	r1, [sp, #4]
90027edc:	9a00      	ldr	r2, [sp, #0]
90027ede:	66a1      	str	r1, [r4, #104]	; 0x68
90027ee0:	66e2      	str	r2, [r4, #108]	; 0x6c
90027ee2:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
90027ee6:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
90027eea:	e7e3      	b.n	90027eb4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90027eec:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
90027ef0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
90027ef4:	4298      	cmp	r0, r3
90027ef6:	d803      	bhi.n	90027f00 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90027ef8:	f104 0020 	add.w	r0, r4, #32
90027efc:	f7ed f8ca 	bl	90015094 <_ZN8touchgfx7Outline6moveToEii>
90027f00:	2301      	movs	r3, #1
90027f02:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90027f06:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90027f0a:	2300      	movs	r3, #0
90027f0c:	e7e5      	b.n	90027eda <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90027f0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90027f0e:	b573      	push	{r0, r1, r4, r5, r6, lr}
90027f10:	ab02      	add	r3, sp, #8
90027f12:	4604      	mov	r4, r0
90027f14:	9101      	str	r1, [sp, #4]
90027f16:	a901      	add	r1, sp, #4
90027f18:	f843 2d08 	str.w	r2, [r3, #-8]!
90027f1c:	461a      	mov	r2, r3
90027f1e:	f7ff ff97 	bl	90027e50 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90027f22:	68a3      	ldr	r3, [r4, #8]
90027f24:	9901      	ldr	r1, [sp, #4]
90027f26:	9a00      	ldr	r2, [sp, #0]
90027f28:	1ac9      	subs	r1, r1, r3
90027f2a:	68e3      	ldr	r3, [r4, #12]
90027f2c:	1ad2      	subs	r2, r2, r3
90027f2e:	9101      	str	r1, [sp, #4]
90027f30:	2a00      	cmp	r2, #0
90027f32:	9200      	str	r2, [sp, #0]
90027f34:	db1c      	blt.n	90027f70 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90027f36:	6963      	ldr	r3, [r4, #20]
90027f38:	429a      	cmp	r2, r3
90027f3a:	bfac      	ite	ge
90027f3c:	2002      	movge	r0, #2
90027f3e:	2000      	movlt	r0, #0
90027f40:	2900      	cmp	r1, #0
90027f42:	db17      	blt.n	90027f74 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90027f44:	6923      	ldr	r3, [r4, #16]
90027f46:	4299      	cmp	r1, r3
90027f48:	bfac      	ite	ge
90027f4a:	2308      	movge	r3, #8
90027f4c:	2300      	movlt	r3, #0
90027f4e:	4303      	orrs	r3, r0
90027f50:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
90027f54:	b2dd      	uxtb	r5, r3
90027f56:	b978      	cbnz	r0, 90027f78 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90027f58:	f104 0020 	add.w	r0, r4, #32
90027f5c:	f7ff fd32 	bl	900279c4 <_ZN8touchgfx10Rasterizer6lineToEii>
90027f60:	9b01      	ldr	r3, [sp, #4]
90027f62:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
90027f66:	65e3      	str	r3, [r4, #92]	; 0x5c
90027f68:	9b00      	ldr	r3, [sp, #0]
90027f6a:	6623      	str	r3, [r4, #96]	; 0x60
90027f6c:	b002      	add	sp, #8
90027f6e:	bd70      	pop	{r4, r5, r6, pc}
90027f70:	2001      	movs	r0, #1
90027f72:	e7e5      	b.n	90027f40 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90027f74:	2304      	movs	r3, #4
90027f76:	e7ea      	b.n	90027f4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90027f78:	b113      	cbz	r3, 90027f80 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90027f7a:	ea10 0305 	ands.w	r3, r0, r5
90027f7e:	d11c      	bne.n	90027fba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90027f80:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
90027f84:	f104 0620 	add.w	r6, r4, #32
90027f88:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
90027f8c:	b98b      	cbnz	r3, 90027fb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90027f8e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
90027f92:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
90027f96:	4298      	cmp	r0, r3
90027f98:	d802      	bhi.n	90027fa0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90027f9a:	4630      	mov	r0, r6
90027f9c:	f7ed f87a 	bl	90015094 <_ZN8touchgfx7Outline6moveToEii>
90027fa0:	2301      	movs	r3, #1
90027fa2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90027fa6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90027faa:	4630      	mov	r0, r6
90027fac:	e9dd 2100 	ldrd	r2, r1, [sp]
90027fb0:	e7d4      	b.n	90027f5c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90027fb2:	4630      	mov	r0, r6
90027fb4:	f7ff fd06 	bl	900279c4 <_ZN8touchgfx10Rasterizer6lineToEii>
90027fb8:	e7f7      	b.n	90027faa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90027fba:	461d      	mov	r5, r3
90027fbc:	e7d0      	b.n	90027f60 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90027fc0 <_ZN8touchgfx6CanvasD1Ev>:
90027fc0:	4b04      	ldr	r3, [pc, #16]	; (90027fd4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
90027fc2:	b510      	push	{r4, lr}
90027fc4:	4604      	mov	r4, r0
90027fc6:	f840 3b20 	str.w	r3, [r0], #32
90027fca:	f7ec fb6b 	bl	900146a4 <_ZN8touchgfx7OutlineD1Ev>
90027fce:	4620      	mov	r0, r4
90027fd0:	bd10      	pop	{r4, pc}
90027fd2:	bf00      	nop
90027fd4:	9002c958 	.word	0x9002c958

90027fd8 <_ZN8touchgfx6CanvasD0Ev>:
90027fd8:	b510      	push	{r4, lr}
90027fda:	4604      	mov	r4, r0
90027fdc:	f7ff fff0 	bl	90027fc0 <_ZN8touchgfx6CanvasD1Ev>
90027fe0:	2170      	movs	r1, #112	; 0x70
90027fe2:	4620      	mov	r0, r4
90027fe4:	f000 f826 	bl	90028034 <_ZdlPvj>
90027fe8:	4620      	mov	r0, r4
90027fea:	bd10      	pop	{r4, pc}

90027fec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90027fec:	790b      	ldrb	r3, [r1, #4]
90027fee:	2b00      	cmp	r3, #0
90027ff0:	bf0c      	ite	eq
90027ff2:	2301      	moveq	r3, #1
90027ff4:	2300      	movne	r3, #0
90027ff6:	b570      	push	{r4, r5, r6, lr}
90027ff8:	4604      	mov	r4, r0
90027ffa:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
90027ffe:	460e      	mov	r6, r1
90028000:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
90028004:	d109      	bne.n	9002801a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90028006:	b14d      	cbz	r5, 9002801c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90028008:	7933      	ldrb	r3, [r6, #4]
9002800a:	2b01      	cmp	r3, #1
9002800c:	d10c      	bne.n	90028028 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002800e:	6823      	ldr	r3, [r4, #0]
90028010:	4620      	mov	r0, r4
90028012:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90028014:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90028018:	4718      	bx	r3
9002801a:	b12d      	cbz	r5, 90028028 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002801c:	6823      	ldr	r3, [r4, #0]
9002801e:	4620      	mov	r0, r4
90028020:	695b      	ldr	r3, [r3, #20]
90028022:	4798      	blx	r3
90028024:	2d00      	cmp	r5, #0
90028026:	d1ef      	bne.n	90028008 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90028028:	bd70      	pop	{r4, r5, r6, pc}

9002802a <__aeabi_atexit>:
9002802a:	460b      	mov	r3, r1
9002802c:	4601      	mov	r1, r0
9002802e:	4618      	mov	r0, r3
90028030:	f000 b90e 	b.w	90028250 <__cxa_atexit>

90028034 <_ZdlPvj>:
90028034:	f000 b812 	b.w	9002805c <_ZdlPv>

90028038 <__cxa_guard_acquire>:
90028038:	6803      	ldr	r3, [r0, #0]
9002803a:	07db      	lsls	r3, r3, #31
9002803c:	d406      	bmi.n	9002804c <__cxa_guard_acquire+0x14>
9002803e:	7843      	ldrb	r3, [r0, #1]
90028040:	b103      	cbz	r3, 90028044 <__cxa_guard_acquire+0xc>
90028042:	deff      	udf	#255	; 0xff
90028044:	2301      	movs	r3, #1
90028046:	7043      	strb	r3, [r0, #1]
90028048:	4618      	mov	r0, r3
9002804a:	4770      	bx	lr
9002804c:	2000      	movs	r0, #0
9002804e:	4770      	bx	lr

90028050 <__cxa_guard_release>:
90028050:	2301      	movs	r3, #1
90028052:	6003      	str	r3, [r0, #0]
90028054:	4770      	bx	lr

90028056 <__cxa_pure_virtual>:
90028056:	b508      	push	{r3, lr}
90028058:	f000 f80e 	bl	90028078 <_ZSt9terminatev>

9002805c <_ZdlPv>:
9002805c:	f000 b844 	b.w	900280e8 <free>

90028060 <_ZN10__cxxabiv111__terminateEPFvvE>:
90028060:	b508      	push	{r3, lr}
90028062:	4780      	blx	r0
90028064:	f000 f80d 	bl	90028082 <abort>

90028068 <_ZSt13get_terminatev>:
90028068:	4b02      	ldr	r3, [pc, #8]	; (90028074 <_ZSt13get_terminatev+0xc>)
9002806a:	6818      	ldr	r0, [r3, #0]
9002806c:	f3bf 8f5b 	dmb	ish
90028070:	4770      	bx	lr
90028072:	bf00      	nop
90028074:	240000fc 	.word	0x240000fc

90028078 <_ZSt9terminatev>:
90028078:	b508      	push	{r3, lr}
9002807a:	f7ff fff5 	bl	90028068 <_ZSt13get_terminatev>
9002807e:	f7ff ffef 	bl	90028060 <_ZN10__cxxabiv111__terminateEPFvvE>

90028082 <abort>:
90028082:	b508      	push	{r3, lr}
90028084:	2006      	movs	r0, #6
90028086:	f000 facd 	bl	90028624 <raise>
9002808a:	2001      	movs	r0, #1
9002808c:	f7db fa2e 	bl	900034ec <_exit>

90028090 <__assert_func>:
90028090:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90028092:	4614      	mov	r4, r2
90028094:	461a      	mov	r2, r3
90028096:	4b09      	ldr	r3, [pc, #36]	; (900280bc <__assert_func+0x2c>)
90028098:	681b      	ldr	r3, [r3, #0]
9002809a:	4605      	mov	r5, r0
9002809c:	68d8      	ldr	r0, [r3, #12]
9002809e:	b14c      	cbz	r4, 900280b4 <__assert_func+0x24>
900280a0:	4b07      	ldr	r3, [pc, #28]	; (900280c0 <__assert_func+0x30>)
900280a2:	9100      	str	r1, [sp, #0]
900280a4:	e9cd 3401 	strd	r3, r4, [sp, #4]
900280a8:	4906      	ldr	r1, [pc, #24]	; (900280c4 <__assert_func+0x34>)
900280aa:	462b      	mov	r3, r5
900280ac:	f000 f970 	bl	90028390 <fiprintf>
900280b0:	f7ff ffe7 	bl	90028082 <abort>
900280b4:	4b04      	ldr	r3, [pc, #16]	; (900280c8 <__assert_func+0x38>)
900280b6:	461c      	mov	r4, r3
900280b8:	e7f3      	b.n	900280a2 <__assert_func+0x12>
900280ba:	bf00      	nop
900280bc:	24000158 	.word	0x24000158
900280c0:	9002c964 	.word	0x9002c964
900280c4:	9002c971 	.word	0x9002c971
900280c8:	9002c99f 	.word	0x9002c99f

900280cc <atexit>:
900280cc:	2300      	movs	r3, #0
900280ce:	4601      	mov	r1, r0
900280d0:	461a      	mov	r2, r3
900280d2:	4618      	mov	r0, r3
900280d4:	f000 bb52 	b.w	9002877c <__register_exitproc>

900280d8 <malloc>:
900280d8:	4b02      	ldr	r3, [pc, #8]	; (900280e4 <malloc+0xc>)
900280da:	4601      	mov	r1, r0
900280dc:	6818      	ldr	r0, [r3, #0]
900280de:	f000 b82b 	b.w	90028138 <_malloc_r>
900280e2:	bf00      	nop
900280e4:	24000158 	.word	0x24000158

900280e8 <free>:
900280e8:	4b02      	ldr	r3, [pc, #8]	; (900280f4 <free+0xc>)
900280ea:	4601      	mov	r1, r0
900280ec:	6818      	ldr	r0, [r3, #0]
900280ee:	f000 bba3 	b.w	90028838 <_free_r>
900280f2:	bf00      	nop
900280f4:	24000158 	.word	0x24000158

900280f8 <sbrk_aligned>:
900280f8:	b570      	push	{r4, r5, r6, lr}
900280fa:	4e0e      	ldr	r6, [pc, #56]	; (90028134 <sbrk_aligned+0x3c>)
900280fc:	460c      	mov	r4, r1
900280fe:	6831      	ldr	r1, [r6, #0]
90028100:	4605      	mov	r5, r0
90028102:	b911      	cbnz	r1, 9002810a <sbrk_aligned+0x12>
90028104:	f000 fade 	bl	900286c4 <_sbrk_r>
90028108:	6030      	str	r0, [r6, #0]
9002810a:	4621      	mov	r1, r4
9002810c:	4628      	mov	r0, r5
9002810e:	f000 fad9 	bl	900286c4 <_sbrk_r>
90028112:	1c43      	adds	r3, r0, #1
90028114:	d00a      	beq.n	9002812c <sbrk_aligned+0x34>
90028116:	1cc4      	adds	r4, r0, #3
90028118:	f024 0403 	bic.w	r4, r4, #3
9002811c:	42a0      	cmp	r0, r4
9002811e:	d007      	beq.n	90028130 <sbrk_aligned+0x38>
90028120:	1a21      	subs	r1, r4, r0
90028122:	4628      	mov	r0, r5
90028124:	f000 face 	bl	900286c4 <_sbrk_r>
90028128:	3001      	adds	r0, #1
9002812a:	d101      	bne.n	90028130 <sbrk_aligned+0x38>
9002812c:	f04f 34ff 	mov.w	r4, #4294967295
90028130:	4620      	mov	r0, r4
90028132:	bd70      	pop	{r4, r5, r6, pc}
90028134:	2403a1f4 	.word	0x2403a1f4

90028138 <_malloc_r>:
90028138:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002813c:	1ccd      	adds	r5, r1, #3
9002813e:	f025 0503 	bic.w	r5, r5, #3
90028142:	3508      	adds	r5, #8
90028144:	2d0c      	cmp	r5, #12
90028146:	bf38      	it	cc
90028148:	250c      	movcc	r5, #12
9002814a:	2d00      	cmp	r5, #0
9002814c:	4607      	mov	r7, r0
9002814e:	db01      	blt.n	90028154 <_malloc_r+0x1c>
90028150:	42a9      	cmp	r1, r5
90028152:	d905      	bls.n	90028160 <_malloc_r+0x28>
90028154:	230c      	movs	r3, #12
90028156:	603b      	str	r3, [r7, #0]
90028158:	2600      	movs	r6, #0
9002815a:	4630      	mov	r0, r6
9002815c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90028160:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 90028234 <_malloc_r+0xfc>
90028164:	f000 f868 	bl	90028238 <__malloc_lock>
90028168:	f8d8 3000 	ldr.w	r3, [r8]
9002816c:	461c      	mov	r4, r3
9002816e:	bb5c      	cbnz	r4, 900281c8 <_malloc_r+0x90>
90028170:	4629      	mov	r1, r5
90028172:	4638      	mov	r0, r7
90028174:	f7ff ffc0 	bl	900280f8 <sbrk_aligned>
90028178:	1c43      	adds	r3, r0, #1
9002817a:	4604      	mov	r4, r0
9002817c:	d155      	bne.n	9002822a <_malloc_r+0xf2>
9002817e:	f8d8 4000 	ldr.w	r4, [r8]
90028182:	4626      	mov	r6, r4
90028184:	2e00      	cmp	r6, #0
90028186:	d145      	bne.n	90028214 <_malloc_r+0xdc>
90028188:	2c00      	cmp	r4, #0
9002818a:	d048      	beq.n	9002821e <_malloc_r+0xe6>
9002818c:	6823      	ldr	r3, [r4, #0]
9002818e:	4631      	mov	r1, r6
90028190:	4638      	mov	r0, r7
90028192:	eb04 0903 	add.w	r9, r4, r3
90028196:	f000 fa95 	bl	900286c4 <_sbrk_r>
9002819a:	4581      	cmp	r9, r0
9002819c:	d13f      	bne.n	9002821e <_malloc_r+0xe6>
9002819e:	6821      	ldr	r1, [r4, #0]
900281a0:	1a6d      	subs	r5, r5, r1
900281a2:	4629      	mov	r1, r5
900281a4:	4638      	mov	r0, r7
900281a6:	f7ff ffa7 	bl	900280f8 <sbrk_aligned>
900281aa:	3001      	adds	r0, #1
900281ac:	d037      	beq.n	9002821e <_malloc_r+0xe6>
900281ae:	6823      	ldr	r3, [r4, #0]
900281b0:	442b      	add	r3, r5
900281b2:	6023      	str	r3, [r4, #0]
900281b4:	f8d8 3000 	ldr.w	r3, [r8]
900281b8:	2b00      	cmp	r3, #0
900281ba:	d038      	beq.n	9002822e <_malloc_r+0xf6>
900281bc:	685a      	ldr	r2, [r3, #4]
900281be:	42a2      	cmp	r2, r4
900281c0:	d12b      	bne.n	9002821a <_malloc_r+0xe2>
900281c2:	2200      	movs	r2, #0
900281c4:	605a      	str	r2, [r3, #4]
900281c6:	e00f      	b.n	900281e8 <_malloc_r+0xb0>
900281c8:	6822      	ldr	r2, [r4, #0]
900281ca:	1b52      	subs	r2, r2, r5
900281cc:	d41f      	bmi.n	9002820e <_malloc_r+0xd6>
900281ce:	2a0b      	cmp	r2, #11
900281d0:	d917      	bls.n	90028202 <_malloc_r+0xca>
900281d2:	1961      	adds	r1, r4, r5
900281d4:	42a3      	cmp	r3, r4
900281d6:	6025      	str	r5, [r4, #0]
900281d8:	bf18      	it	ne
900281da:	6059      	strne	r1, [r3, #4]
900281dc:	6863      	ldr	r3, [r4, #4]
900281de:	bf08      	it	eq
900281e0:	f8c8 1000 	streq.w	r1, [r8]
900281e4:	5162      	str	r2, [r4, r5]
900281e6:	604b      	str	r3, [r1, #4]
900281e8:	4638      	mov	r0, r7
900281ea:	f104 060b 	add.w	r6, r4, #11
900281ee:	f000 f829 	bl	90028244 <__malloc_unlock>
900281f2:	f026 0607 	bic.w	r6, r6, #7
900281f6:	1d23      	adds	r3, r4, #4
900281f8:	1af2      	subs	r2, r6, r3
900281fa:	d0ae      	beq.n	9002815a <_malloc_r+0x22>
900281fc:	1b9b      	subs	r3, r3, r6
900281fe:	50a3      	str	r3, [r4, r2]
90028200:	e7ab      	b.n	9002815a <_malloc_r+0x22>
90028202:	42a3      	cmp	r3, r4
90028204:	6862      	ldr	r2, [r4, #4]
90028206:	d1dd      	bne.n	900281c4 <_malloc_r+0x8c>
90028208:	f8c8 2000 	str.w	r2, [r8]
9002820c:	e7ec      	b.n	900281e8 <_malloc_r+0xb0>
9002820e:	4623      	mov	r3, r4
90028210:	6864      	ldr	r4, [r4, #4]
90028212:	e7ac      	b.n	9002816e <_malloc_r+0x36>
90028214:	4634      	mov	r4, r6
90028216:	6876      	ldr	r6, [r6, #4]
90028218:	e7b4      	b.n	90028184 <_malloc_r+0x4c>
9002821a:	4613      	mov	r3, r2
9002821c:	e7cc      	b.n	900281b8 <_malloc_r+0x80>
9002821e:	230c      	movs	r3, #12
90028220:	603b      	str	r3, [r7, #0]
90028222:	4638      	mov	r0, r7
90028224:	f000 f80e 	bl	90028244 <__malloc_unlock>
90028228:	e797      	b.n	9002815a <_malloc_r+0x22>
9002822a:	6025      	str	r5, [r4, #0]
9002822c:	e7dc      	b.n	900281e8 <_malloc_r+0xb0>
9002822e:	605b      	str	r3, [r3, #4]
90028230:	deff      	udf	#255	; 0xff
90028232:	bf00      	nop
90028234:	2403a1f0 	.word	0x2403a1f0

90028238 <__malloc_lock>:
90028238:	4801      	ldr	r0, [pc, #4]	; (90028240 <__malloc_lock+0x8>)
9002823a:	f000 ba8f 	b.w	9002875c <__retarget_lock_acquire_recursive>
9002823e:	bf00      	nop
90028240:	2403a339 	.word	0x2403a339

90028244 <__malloc_unlock>:
90028244:	4801      	ldr	r0, [pc, #4]	; (9002824c <__malloc_unlock+0x8>)
90028246:	f000 ba8a 	b.w	9002875e <__retarget_lock_release_recursive>
9002824a:	bf00      	nop
9002824c:	2403a339 	.word	0x2403a339

90028250 <__cxa_atexit>:
90028250:	b510      	push	{r4, lr}
90028252:	4c05      	ldr	r4, [pc, #20]	; (90028268 <__cxa_atexit+0x18>)
90028254:	4613      	mov	r3, r2
90028256:	b12c      	cbz	r4, 90028264 <__cxa_atexit+0x14>
90028258:	460a      	mov	r2, r1
9002825a:	4601      	mov	r1, r0
9002825c:	2002      	movs	r0, #2
9002825e:	f000 fa8d 	bl	9002877c <__register_exitproc>
90028262:	bd10      	pop	{r4, pc}
90028264:	4620      	mov	r0, r4
90028266:	e7fc      	b.n	90028262 <__cxa_atexit+0x12>
90028268:	9002877d 	.word	0x9002877d

9002826c <std>:
9002826c:	2300      	movs	r3, #0
9002826e:	b510      	push	{r4, lr}
90028270:	4604      	mov	r4, r0
90028272:	e9c0 3300 	strd	r3, r3, [r0]
90028276:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002827a:	6083      	str	r3, [r0, #8]
9002827c:	8181      	strh	r1, [r0, #12]
9002827e:	6643      	str	r3, [r0, #100]	; 0x64
90028280:	81c2      	strh	r2, [r0, #14]
90028282:	6183      	str	r3, [r0, #24]
90028284:	4619      	mov	r1, r3
90028286:	2208      	movs	r2, #8
90028288:	305c      	adds	r0, #92	; 0x5c
9002828a:	f000 f989 	bl	900285a0 <memset>
9002828e:	4b05      	ldr	r3, [pc, #20]	; (900282a4 <std+0x38>)
90028290:	6263      	str	r3, [r4, #36]	; 0x24
90028292:	4b05      	ldr	r3, [pc, #20]	; (900282a8 <std+0x3c>)
90028294:	62a3      	str	r3, [r4, #40]	; 0x28
90028296:	4b05      	ldr	r3, [pc, #20]	; (900282ac <std+0x40>)
90028298:	62e3      	str	r3, [r4, #44]	; 0x2c
9002829a:	4b05      	ldr	r3, [pc, #20]	; (900282b0 <std+0x44>)
9002829c:	6224      	str	r4, [r4, #32]
9002829e:	6323      	str	r3, [r4, #48]	; 0x30
900282a0:	bd10      	pop	{r4, pc}
900282a2:	bf00      	nop
900282a4:	900283f1 	.word	0x900283f1
900282a8:	90028413 	.word	0x90028413
900282ac:	9002844b 	.word	0x9002844b
900282b0:	9002846f 	.word	0x9002846f

900282b4 <stdio_exit_handler>:
900282b4:	4a02      	ldr	r2, [pc, #8]	; (900282c0 <stdio_exit_handler+0xc>)
900282b6:	4903      	ldr	r1, [pc, #12]	; (900282c4 <stdio_exit_handler+0x10>)
900282b8:	4803      	ldr	r0, [pc, #12]	; (900282c8 <stdio_exit_handler+0x14>)
900282ba:	f000 b87b 	b.w	900283b4 <_fwalk_sglue>
900282be:	bf00      	nop
900282c0:	24000100 	.word	0x24000100
900282c4:	90028f85 	.word	0x90028f85
900282c8:	2400010c 	.word	0x2400010c

900282cc <cleanup_stdio>:
900282cc:	6841      	ldr	r1, [r0, #4]
900282ce:	4b0c      	ldr	r3, [pc, #48]	; (90028300 <cleanup_stdio+0x34>)
900282d0:	4299      	cmp	r1, r3
900282d2:	b510      	push	{r4, lr}
900282d4:	4604      	mov	r4, r0
900282d6:	d001      	beq.n	900282dc <cleanup_stdio+0x10>
900282d8:	f000 fe54 	bl	90028f84 <_fflush_r>
900282dc:	68a1      	ldr	r1, [r4, #8]
900282de:	4b09      	ldr	r3, [pc, #36]	; (90028304 <cleanup_stdio+0x38>)
900282e0:	4299      	cmp	r1, r3
900282e2:	d002      	beq.n	900282ea <cleanup_stdio+0x1e>
900282e4:	4620      	mov	r0, r4
900282e6:	f000 fe4d 	bl	90028f84 <_fflush_r>
900282ea:	68e1      	ldr	r1, [r4, #12]
900282ec:	4b06      	ldr	r3, [pc, #24]	; (90028308 <cleanup_stdio+0x3c>)
900282ee:	4299      	cmp	r1, r3
900282f0:	d004      	beq.n	900282fc <cleanup_stdio+0x30>
900282f2:	4620      	mov	r0, r4
900282f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900282f8:	f000 be44 	b.w	90028f84 <_fflush_r>
900282fc:	bd10      	pop	{r4, pc}
900282fe:	bf00      	nop
90028300:	2403a1f8 	.word	0x2403a1f8
90028304:	2403a260 	.word	0x2403a260
90028308:	2403a2c8 	.word	0x2403a2c8

9002830c <global_stdio_init.part.0>:
9002830c:	b510      	push	{r4, lr}
9002830e:	4b0b      	ldr	r3, [pc, #44]	; (9002833c <global_stdio_init.part.0+0x30>)
90028310:	4c0b      	ldr	r4, [pc, #44]	; (90028340 <global_stdio_init.part.0+0x34>)
90028312:	4a0c      	ldr	r2, [pc, #48]	; (90028344 <global_stdio_init.part.0+0x38>)
90028314:	601a      	str	r2, [r3, #0]
90028316:	4620      	mov	r0, r4
90028318:	2200      	movs	r2, #0
9002831a:	2104      	movs	r1, #4
9002831c:	f7ff ffa6 	bl	9002826c <std>
90028320:	f104 0068 	add.w	r0, r4, #104	; 0x68
90028324:	2201      	movs	r2, #1
90028326:	2109      	movs	r1, #9
90028328:	f7ff ffa0 	bl	9002826c <std>
9002832c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
90028330:	2202      	movs	r2, #2
90028332:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90028336:	2112      	movs	r1, #18
90028338:	f7ff bf98 	b.w	9002826c <std>
9002833c:	2403a330 	.word	0x2403a330
90028340:	2403a1f8 	.word	0x2403a1f8
90028344:	900282b5 	.word	0x900282b5

90028348 <__sfp_lock_acquire>:
90028348:	4801      	ldr	r0, [pc, #4]	; (90028350 <__sfp_lock_acquire+0x8>)
9002834a:	f000 ba07 	b.w	9002875c <__retarget_lock_acquire_recursive>
9002834e:	bf00      	nop
90028350:	2403a33a 	.word	0x2403a33a

90028354 <__sfp_lock_release>:
90028354:	4801      	ldr	r0, [pc, #4]	; (9002835c <__sfp_lock_release+0x8>)
90028356:	f000 ba02 	b.w	9002875e <__retarget_lock_release_recursive>
9002835a:	bf00      	nop
9002835c:	2403a33a 	.word	0x2403a33a

90028360 <__sinit>:
90028360:	b510      	push	{r4, lr}
90028362:	4604      	mov	r4, r0
90028364:	f7ff fff0 	bl	90028348 <__sfp_lock_acquire>
90028368:	6a23      	ldr	r3, [r4, #32]
9002836a:	b11b      	cbz	r3, 90028374 <__sinit+0x14>
9002836c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90028370:	f7ff bff0 	b.w	90028354 <__sfp_lock_release>
90028374:	4b04      	ldr	r3, [pc, #16]	; (90028388 <__sinit+0x28>)
90028376:	6223      	str	r3, [r4, #32]
90028378:	4b04      	ldr	r3, [pc, #16]	; (9002838c <__sinit+0x2c>)
9002837a:	681b      	ldr	r3, [r3, #0]
9002837c:	2b00      	cmp	r3, #0
9002837e:	d1f5      	bne.n	9002836c <__sinit+0xc>
90028380:	f7ff ffc4 	bl	9002830c <global_stdio_init.part.0>
90028384:	e7f2      	b.n	9002836c <__sinit+0xc>
90028386:	bf00      	nop
90028388:	900282cd 	.word	0x900282cd
9002838c:	2403a330 	.word	0x2403a330

90028390 <fiprintf>:
90028390:	b40e      	push	{r1, r2, r3}
90028392:	b503      	push	{r0, r1, lr}
90028394:	4601      	mov	r1, r0
90028396:	ab03      	add	r3, sp, #12
90028398:	4805      	ldr	r0, [pc, #20]	; (900283b0 <fiprintf+0x20>)
9002839a:	f853 2b04 	ldr.w	r2, [r3], #4
9002839e:	6800      	ldr	r0, [r0, #0]
900283a0:	9301      	str	r3, [sp, #4]
900283a2:	f000 fabf 	bl	90028924 <_vfiprintf_r>
900283a6:	b002      	add	sp, #8
900283a8:	f85d eb04 	ldr.w	lr, [sp], #4
900283ac:	b003      	add	sp, #12
900283ae:	4770      	bx	lr
900283b0:	24000158 	.word	0x24000158

900283b4 <_fwalk_sglue>:
900283b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900283b8:	4607      	mov	r7, r0
900283ba:	4688      	mov	r8, r1
900283bc:	4614      	mov	r4, r2
900283be:	2600      	movs	r6, #0
900283c0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
900283c4:	f1b9 0901 	subs.w	r9, r9, #1
900283c8:	d505      	bpl.n	900283d6 <_fwalk_sglue+0x22>
900283ca:	6824      	ldr	r4, [r4, #0]
900283cc:	2c00      	cmp	r4, #0
900283ce:	d1f7      	bne.n	900283c0 <_fwalk_sglue+0xc>
900283d0:	4630      	mov	r0, r6
900283d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900283d6:	89ab      	ldrh	r3, [r5, #12]
900283d8:	2b01      	cmp	r3, #1
900283da:	d907      	bls.n	900283ec <_fwalk_sglue+0x38>
900283dc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
900283e0:	3301      	adds	r3, #1
900283e2:	d003      	beq.n	900283ec <_fwalk_sglue+0x38>
900283e4:	4629      	mov	r1, r5
900283e6:	4638      	mov	r0, r7
900283e8:	47c0      	blx	r8
900283ea:	4306      	orrs	r6, r0
900283ec:	3568      	adds	r5, #104	; 0x68
900283ee:	e7e9      	b.n	900283c4 <_fwalk_sglue+0x10>

900283f0 <__sread>:
900283f0:	b510      	push	{r4, lr}
900283f2:	460c      	mov	r4, r1
900283f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900283f8:	f000 f93e 	bl	90028678 <_read_r>
900283fc:	2800      	cmp	r0, #0
900283fe:	bfab      	itete	ge
90028400:	6d63      	ldrge	r3, [r4, #84]	; 0x54
90028402:	89a3      	ldrhlt	r3, [r4, #12]
90028404:	181b      	addge	r3, r3, r0
90028406:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
9002840a:	bfac      	ite	ge
9002840c:	6563      	strge	r3, [r4, #84]	; 0x54
9002840e:	81a3      	strhlt	r3, [r4, #12]
90028410:	bd10      	pop	{r4, pc}

90028412 <__swrite>:
90028412:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90028416:	461f      	mov	r7, r3
90028418:	898b      	ldrh	r3, [r1, #12]
9002841a:	05db      	lsls	r3, r3, #23
9002841c:	4605      	mov	r5, r0
9002841e:	460c      	mov	r4, r1
90028420:	4616      	mov	r6, r2
90028422:	d505      	bpl.n	90028430 <__swrite+0x1e>
90028424:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028428:	2302      	movs	r3, #2
9002842a:	2200      	movs	r2, #0
9002842c:	f000 f912 	bl	90028654 <_lseek_r>
90028430:	89a3      	ldrh	r3, [r4, #12]
90028432:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90028436:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9002843a:	81a3      	strh	r3, [r4, #12]
9002843c:	4632      	mov	r2, r6
9002843e:	463b      	mov	r3, r7
90028440:	4628      	mov	r0, r5
90028442:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90028446:	f000 b94d 	b.w	900286e4 <_write_r>

9002844a <__sseek>:
9002844a:	b510      	push	{r4, lr}
9002844c:	460c      	mov	r4, r1
9002844e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028452:	f000 f8ff 	bl	90028654 <_lseek_r>
90028456:	1c43      	adds	r3, r0, #1
90028458:	89a3      	ldrh	r3, [r4, #12]
9002845a:	bf15      	itete	ne
9002845c:	6560      	strne	r0, [r4, #84]	; 0x54
9002845e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
90028462:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
90028466:	81a3      	strheq	r3, [r4, #12]
90028468:	bf18      	it	ne
9002846a:	81a3      	strhne	r3, [r4, #12]
9002846c:	bd10      	pop	{r4, pc}

9002846e <__sclose>:
9002846e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028472:	f000 b8df 	b.w	90028634 <_close_r>

90028476 <__swbuf_r>:
90028476:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90028478:	460e      	mov	r6, r1
9002847a:	4614      	mov	r4, r2
9002847c:	4605      	mov	r5, r0
9002847e:	b118      	cbz	r0, 90028488 <__swbuf_r+0x12>
90028480:	6a03      	ldr	r3, [r0, #32]
90028482:	b90b      	cbnz	r3, 90028488 <__swbuf_r+0x12>
90028484:	f7ff ff6c 	bl	90028360 <__sinit>
90028488:	69a3      	ldr	r3, [r4, #24]
9002848a:	60a3      	str	r3, [r4, #8]
9002848c:	89a3      	ldrh	r3, [r4, #12]
9002848e:	071a      	lsls	r2, r3, #28
90028490:	d525      	bpl.n	900284de <__swbuf_r+0x68>
90028492:	6923      	ldr	r3, [r4, #16]
90028494:	b31b      	cbz	r3, 900284de <__swbuf_r+0x68>
90028496:	6823      	ldr	r3, [r4, #0]
90028498:	6922      	ldr	r2, [r4, #16]
9002849a:	1a98      	subs	r0, r3, r2
9002849c:	6963      	ldr	r3, [r4, #20]
9002849e:	b2f6      	uxtb	r6, r6
900284a0:	4283      	cmp	r3, r0
900284a2:	4637      	mov	r7, r6
900284a4:	dc04      	bgt.n	900284b0 <__swbuf_r+0x3a>
900284a6:	4621      	mov	r1, r4
900284a8:	4628      	mov	r0, r5
900284aa:	f000 fd6b 	bl	90028f84 <_fflush_r>
900284ae:	b9e0      	cbnz	r0, 900284ea <__swbuf_r+0x74>
900284b0:	68a3      	ldr	r3, [r4, #8]
900284b2:	3b01      	subs	r3, #1
900284b4:	60a3      	str	r3, [r4, #8]
900284b6:	6823      	ldr	r3, [r4, #0]
900284b8:	1c5a      	adds	r2, r3, #1
900284ba:	6022      	str	r2, [r4, #0]
900284bc:	701e      	strb	r6, [r3, #0]
900284be:	6962      	ldr	r2, [r4, #20]
900284c0:	1c43      	adds	r3, r0, #1
900284c2:	429a      	cmp	r2, r3
900284c4:	d004      	beq.n	900284d0 <__swbuf_r+0x5a>
900284c6:	89a3      	ldrh	r3, [r4, #12]
900284c8:	07db      	lsls	r3, r3, #31
900284ca:	d506      	bpl.n	900284da <__swbuf_r+0x64>
900284cc:	2e0a      	cmp	r6, #10
900284ce:	d104      	bne.n	900284da <__swbuf_r+0x64>
900284d0:	4621      	mov	r1, r4
900284d2:	4628      	mov	r0, r5
900284d4:	f000 fd56 	bl	90028f84 <_fflush_r>
900284d8:	b938      	cbnz	r0, 900284ea <__swbuf_r+0x74>
900284da:	4638      	mov	r0, r7
900284dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900284de:	4621      	mov	r1, r4
900284e0:	4628      	mov	r0, r5
900284e2:	f000 f805 	bl	900284f0 <__swsetup_r>
900284e6:	2800      	cmp	r0, #0
900284e8:	d0d5      	beq.n	90028496 <__swbuf_r+0x20>
900284ea:	f04f 37ff 	mov.w	r7, #4294967295
900284ee:	e7f4      	b.n	900284da <__swbuf_r+0x64>

900284f0 <__swsetup_r>:
900284f0:	b538      	push	{r3, r4, r5, lr}
900284f2:	4b2a      	ldr	r3, [pc, #168]	; (9002859c <__swsetup_r+0xac>)
900284f4:	4605      	mov	r5, r0
900284f6:	6818      	ldr	r0, [r3, #0]
900284f8:	460c      	mov	r4, r1
900284fa:	b118      	cbz	r0, 90028504 <__swsetup_r+0x14>
900284fc:	6a03      	ldr	r3, [r0, #32]
900284fe:	b90b      	cbnz	r3, 90028504 <__swsetup_r+0x14>
90028500:	f7ff ff2e 	bl	90028360 <__sinit>
90028504:	89a3      	ldrh	r3, [r4, #12]
90028506:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002850a:	0718      	lsls	r0, r3, #28
9002850c:	d422      	bmi.n	90028554 <__swsetup_r+0x64>
9002850e:	06d9      	lsls	r1, r3, #27
90028510:	d407      	bmi.n	90028522 <__swsetup_r+0x32>
90028512:	2309      	movs	r3, #9
90028514:	602b      	str	r3, [r5, #0]
90028516:	f042 0340 	orr.w	r3, r2, #64	; 0x40
9002851a:	81a3      	strh	r3, [r4, #12]
9002851c:	f04f 30ff 	mov.w	r0, #4294967295
90028520:	e034      	b.n	9002858c <__swsetup_r+0x9c>
90028522:	0758      	lsls	r0, r3, #29
90028524:	d512      	bpl.n	9002854c <__swsetup_r+0x5c>
90028526:	6b61      	ldr	r1, [r4, #52]	; 0x34
90028528:	b141      	cbz	r1, 9002853c <__swsetup_r+0x4c>
9002852a:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002852e:	4299      	cmp	r1, r3
90028530:	d002      	beq.n	90028538 <__swsetup_r+0x48>
90028532:	4628      	mov	r0, r5
90028534:	f000 f980 	bl	90028838 <_free_r>
90028538:	2300      	movs	r3, #0
9002853a:	6363      	str	r3, [r4, #52]	; 0x34
9002853c:	89a3      	ldrh	r3, [r4, #12]
9002853e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
90028542:	81a3      	strh	r3, [r4, #12]
90028544:	2300      	movs	r3, #0
90028546:	6063      	str	r3, [r4, #4]
90028548:	6923      	ldr	r3, [r4, #16]
9002854a:	6023      	str	r3, [r4, #0]
9002854c:	89a3      	ldrh	r3, [r4, #12]
9002854e:	f043 0308 	orr.w	r3, r3, #8
90028552:	81a3      	strh	r3, [r4, #12]
90028554:	6923      	ldr	r3, [r4, #16]
90028556:	b94b      	cbnz	r3, 9002856c <__swsetup_r+0x7c>
90028558:	89a3      	ldrh	r3, [r4, #12]
9002855a:	f403 7320 	and.w	r3, r3, #640	; 0x280
9002855e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90028562:	d003      	beq.n	9002856c <__swsetup_r+0x7c>
90028564:	4621      	mov	r1, r4
90028566:	4628      	mov	r0, r5
90028568:	f000 fd5a 	bl	90029020 <__smakebuf_r>
9002856c:	89a0      	ldrh	r0, [r4, #12]
9002856e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90028572:	f010 0301 	ands.w	r3, r0, #1
90028576:	d00a      	beq.n	9002858e <__swsetup_r+0x9e>
90028578:	2300      	movs	r3, #0
9002857a:	60a3      	str	r3, [r4, #8]
9002857c:	6963      	ldr	r3, [r4, #20]
9002857e:	425b      	negs	r3, r3
90028580:	61a3      	str	r3, [r4, #24]
90028582:	6923      	ldr	r3, [r4, #16]
90028584:	b943      	cbnz	r3, 90028598 <__swsetup_r+0xa8>
90028586:	f010 0080 	ands.w	r0, r0, #128	; 0x80
9002858a:	d1c4      	bne.n	90028516 <__swsetup_r+0x26>
9002858c:	bd38      	pop	{r3, r4, r5, pc}
9002858e:	0781      	lsls	r1, r0, #30
90028590:	bf58      	it	pl
90028592:	6963      	ldrpl	r3, [r4, #20]
90028594:	60a3      	str	r3, [r4, #8]
90028596:	e7f4      	b.n	90028582 <__swsetup_r+0x92>
90028598:	2000      	movs	r0, #0
9002859a:	e7f7      	b.n	9002858c <__swsetup_r+0x9c>
9002859c:	24000158 	.word	0x24000158

900285a0 <memset>:
900285a0:	4402      	add	r2, r0
900285a2:	4603      	mov	r3, r0
900285a4:	4293      	cmp	r3, r2
900285a6:	d100      	bne.n	900285aa <memset+0xa>
900285a8:	4770      	bx	lr
900285aa:	f803 1b01 	strb.w	r1, [r3], #1
900285ae:	e7f9      	b.n	900285a4 <memset+0x4>

900285b0 <strncmp>:
900285b0:	b510      	push	{r4, lr}
900285b2:	b16a      	cbz	r2, 900285d0 <strncmp+0x20>
900285b4:	3901      	subs	r1, #1
900285b6:	1884      	adds	r4, r0, r2
900285b8:	f810 2b01 	ldrb.w	r2, [r0], #1
900285bc:	f811 3f01 	ldrb.w	r3, [r1, #1]!
900285c0:	429a      	cmp	r2, r3
900285c2:	d103      	bne.n	900285cc <strncmp+0x1c>
900285c4:	42a0      	cmp	r0, r4
900285c6:	d001      	beq.n	900285cc <strncmp+0x1c>
900285c8:	2a00      	cmp	r2, #0
900285ca:	d1f5      	bne.n	900285b8 <strncmp+0x8>
900285cc:	1ad0      	subs	r0, r2, r3
900285ce:	bd10      	pop	{r4, pc}
900285d0:	4610      	mov	r0, r2
900285d2:	e7fc      	b.n	900285ce <strncmp+0x1e>

900285d4 <_raise_r>:
900285d4:	291f      	cmp	r1, #31
900285d6:	b538      	push	{r3, r4, r5, lr}
900285d8:	4604      	mov	r4, r0
900285da:	460d      	mov	r5, r1
900285dc:	d904      	bls.n	900285e8 <_raise_r+0x14>
900285de:	2316      	movs	r3, #22
900285e0:	6003      	str	r3, [r0, #0]
900285e2:	f04f 30ff 	mov.w	r0, #4294967295
900285e6:	bd38      	pop	{r3, r4, r5, pc}
900285e8:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
900285ea:	b112      	cbz	r2, 900285f2 <_raise_r+0x1e>
900285ec:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
900285f0:	b94b      	cbnz	r3, 90028606 <_raise_r+0x32>
900285f2:	4620      	mov	r0, r4
900285f4:	f000 f864 	bl	900286c0 <_getpid_r>
900285f8:	462a      	mov	r2, r5
900285fa:	4601      	mov	r1, r0
900285fc:	4620      	mov	r0, r4
900285fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90028602:	f000 b84b 	b.w	9002869c <_kill_r>
90028606:	2b01      	cmp	r3, #1
90028608:	d00a      	beq.n	90028620 <_raise_r+0x4c>
9002860a:	1c59      	adds	r1, r3, #1
9002860c:	d103      	bne.n	90028616 <_raise_r+0x42>
9002860e:	2316      	movs	r3, #22
90028610:	6003      	str	r3, [r0, #0]
90028612:	2001      	movs	r0, #1
90028614:	e7e7      	b.n	900285e6 <_raise_r+0x12>
90028616:	2400      	movs	r4, #0
90028618:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
9002861c:	4628      	mov	r0, r5
9002861e:	4798      	blx	r3
90028620:	2000      	movs	r0, #0
90028622:	e7e0      	b.n	900285e6 <_raise_r+0x12>

90028624 <raise>:
90028624:	4b02      	ldr	r3, [pc, #8]	; (90028630 <raise+0xc>)
90028626:	4601      	mov	r1, r0
90028628:	6818      	ldr	r0, [r3, #0]
9002862a:	f7ff bfd3 	b.w	900285d4 <_raise_r>
9002862e:	bf00      	nop
90028630:	24000158 	.word	0x24000158

90028634 <_close_r>:
90028634:	b538      	push	{r3, r4, r5, lr}
90028636:	4d06      	ldr	r5, [pc, #24]	; (90028650 <_close_r+0x1c>)
90028638:	2300      	movs	r3, #0
9002863a:	4604      	mov	r4, r0
9002863c:	4608      	mov	r0, r1
9002863e:	602b      	str	r3, [r5, #0]
90028640:	f7da ff76 	bl	90003530 <_close>
90028644:	1c43      	adds	r3, r0, #1
90028646:	d102      	bne.n	9002864e <_close_r+0x1a>
90028648:	682b      	ldr	r3, [r5, #0]
9002864a:	b103      	cbz	r3, 9002864e <_close_r+0x1a>
9002864c:	6023      	str	r3, [r4, #0]
9002864e:	bd38      	pop	{r3, r4, r5, pc}
90028650:	2403a334 	.word	0x2403a334

90028654 <_lseek_r>:
90028654:	b538      	push	{r3, r4, r5, lr}
90028656:	4d07      	ldr	r5, [pc, #28]	; (90028674 <_lseek_r+0x20>)
90028658:	4604      	mov	r4, r0
9002865a:	4608      	mov	r0, r1
9002865c:	4611      	mov	r1, r2
9002865e:	2200      	movs	r2, #0
90028660:	602a      	str	r2, [r5, #0]
90028662:	461a      	mov	r2, r3
90028664:	f7da ff70 	bl	90003548 <_lseek>
90028668:	1c43      	adds	r3, r0, #1
9002866a:	d102      	bne.n	90028672 <_lseek_r+0x1e>
9002866c:	682b      	ldr	r3, [r5, #0]
9002866e:	b103      	cbz	r3, 90028672 <_lseek_r+0x1e>
90028670:	6023      	str	r3, [r4, #0]
90028672:	bd38      	pop	{r3, r4, r5, pc}
90028674:	2403a334 	.word	0x2403a334

90028678 <_read_r>:
90028678:	b538      	push	{r3, r4, r5, lr}
9002867a:	4d07      	ldr	r5, [pc, #28]	; (90028698 <_read_r+0x20>)
9002867c:	4604      	mov	r4, r0
9002867e:	4608      	mov	r0, r1
90028680:	4611      	mov	r1, r2
90028682:	2200      	movs	r2, #0
90028684:	602a      	str	r2, [r5, #0]
90028686:	461a      	mov	r2, r3
90028688:	f7da ff36 	bl	900034f8 <_read>
9002868c:	1c43      	adds	r3, r0, #1
9002868e:	d102      	bne.n	90028696 <_read_r+0x1e>
90028690:	682b      	ldr	r3, [r5, #0]
90028692:	b103      	cbz	r3, 90028696 <_read_r+0x1e>
90028694:	6023      	str	r3, [r4, #0]
90028696:	bd38      	pop	{r3, r4, r5, pc}
90028698:	2403a334 	.word	0x2403a334

9002869c <_kill_r>:
9002869c:	b538      	push	{r3, r4, r5, lr}
9002869e:	4d07      	ldr	r5, [pc, #28]	; (900286bc <_kill_r+0x20>)
900286a0:	2300      	movs	r3, #0
900286a2:	4604      	mov	r4, r0
900286a4:	4608      	mov	r0, r1
900286a6:	4611      	mov	r1, r2
900286a8:	602b      	str	r3, [r5, #0]
900286aa:	f7da ff15 	bl	900034d8 <_kill>
900286ae:	1c43      	adds	r3, r0, #1
900286b0:	d102      	bne.n	900286b8 <_kill_r+0x1c>
900286b2:	682b      	ldr	r3, [r5, #0]
900286b4:	b103      	cbz	r3, 900286b8 <_kill_r+0x1c>
900286b6:	6023      	str	r3, [r4, #0]
900286b8:	bd38      	pop	{r3, r4, r5, pc}
900286ba:	bf00      	nop
900286bc:	2403a334 	.word	0x2403a334

900286c0 <_getpid_r>:
900286c0:	f7da bf08 	b.w	900034d4 <_getpid>

900286c4 <_sbrk_r>:
900286c4:	b538      	push	{r3, r4, r5, lr}
900286c6:	4d06      	ldr	r5, [pc, #24]	; (900286e0 <_sbrk_r+0x1c>)
900286c8:	2300      	movs	r3, #0
900286ca:	4604      	mov	r4, r0
900286cc:	4608      	mov	r0, r1
900286ce:	602b      	str	r3, [r5, #0]
900286d0:	f000 fd04 	bl	900290dc <_sbrk>
900286d4:	1c43      	adds	r3, r0, #1
900286d6:	d102      	bne.n	900286de <_sbrk_r+0x1a>
900286d8:	682b      	ldr	r3, [r5, #0]
900286da:	b103      	cbz	r3, 900286de <_sbrk_r+0x1a>
900286dc:	6023      	str	r3, [r4, #0]
900286de:	bd38      	pop	{r3, r4, r5, pc}
900286e0:	2403a334 	.word	0x2403a334

900286e4 <_write_r>:
900286e4:	b538      	push	{r3, r4, r5, lr}
900286e6:	4d07      	ldr	r5, [pc, #28]	; (90028704 <_write_r+0x20>)
900286e8:	4604      	mov	r4, r0
900286ea:	4608      	mov	r0, r1
900286ec:	4611      	mov	r1, r2
900286ee:	2200      	movs	r2, #0
900286f0:	602a      	str	r2, [r5, #0]
900286f2:	461a      	mov	r2, r3
900286f4:	f7da ff0e 	bl	90003514 <_write>
900286f8:	1c43      	adds	r3, r0, #1
900286fa:	d102      	bne.n	90028702 <_write_r+0x1e>
900286fc:	682b      	ldr	r3, [r5, #0]
900286fe:	b103      	cbz	r3, 90028702 <_write_r+0x1e>
90028700:	6023      	str	r3, [r4, #0]
90028702:	bd38      	pop	{r3, r4, r5, pc}
90028704:	2403a334 	.word	0x2403a334

90028708 <__errno>:
90028708:	4b01      	ldr	r3, [pc, #4]	; (90028710 <__errno+0x8>)
9002870a:	6818      	ldr	r0, [r3, #0]
9002870c:	4770      	bx	lr
9002870e:	bf00      	nop
90028710:	24000158 	.word	0x24000158

90028714 <__libc_init_array>:
90028714:	b570      	push	{r4, r5, r6, lr}
90028716:	4d0d      	ldr	r5, [pc, #52]	; (9002874c <__libc_init_array+0x38>)
90028718:	4c0d      	ldr	r4, [pc, #52]	; (90028750 <__libc_init_array+0x3c>)
9002871a:	1b64      	subs	r4, r4, r5
9002871c:	10a4      	asrs	r4, r4, #2
9002871e:	2600      	movs	r6, #0
90028720:	42a6      	cmp	r6, r4
90028722:	d109      	bne.n	90028738 <__libc_init_array+0x24>
90028724:	4d0b      	ldr	r5, [pc, #44]	; (90028754 <__libc_init_array+0x40>)
90028726:	4c0c      	ldr	r4, [pc, #48]	; (90028758 <__libc_init_array+0x44>)
90028728:	f000 fce6 	bl	900290f8 <_init>
9002872c:	1b64      	subs	r4, r4, r5
9002872e:	10a4      	asrs	r4, r4, #2
90028730:	2600      	movs	r6, #0
90028732:	42a6      	cmp	r6, r4
90028734:	d105      	bne.n	90028742 <__libc_init_array+0x2e>
90028736:	bd70      	pop	{r4, r5, r6, pc}
90028738:	f855 3b04 	ldr.w	r3, [r5], #4
9002873c:	4798      	blx	r3
9002873e:	3601      	adds	r6, #1
90028740:	e7ee      	b.n	90028720 <__libc_init_array+0xc>
90028742:	f855 3b04 	ldr.w	r3, [r5], #4
90028746:	4798      	blx	r3
90028748:	3601      	adds	r6, #1
9002874a:	e7f2      	b.n	90028732 <__libc_init_array+0x1e>
9002874c:	9002cae0 	.word	0x9002cae0
90028750:	9002cae0 	.word	0x9002cae0
90028754:	9002cae0 	.word	0x9002cae0
90028758:	9002cafc 	.word	0x9002cafc

9002875c <__retarget_lock_acquire_recursive>:
9002875c:	4770      	bx	lr

9002875e <__retarget_lock_release_recursive>:
9002875e:	4770      	bx	lr

90028760 <memcpy>:
90028760:	440a      	add	r2, r1
90028762:	4291      	cmp	r1, r2
90028764:	f100 33ff 	add.w	r3, r0, #4294967295
90028768:	d100      	bne.n	9002876c <memcpy+0xc>
9002876a:	4770      	bx	lr
9002876c:	b510      	push	{r4, lr}
9002876e:	f811 4b01 	ldrb.w	r4, [r1], #1
90028772:	f803 4f01 	strb.w	r4, [r3, #1]!
90028776:	4291      	cmp	r1, r2
90028778:	d1f9      	bne.n	9002876e <memcpy+0xe>
9002877a:	bd10      	pop	{r4, pc}

9002877c <__register_exitproc>:
9002877c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90028780:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90028834 <__register_exitproc+0xb8>
90028784:	4606      	mov	r6, r0
90028786:	f8d8 0000 	ldr.w	r0, [r8]
9002878a:	461f      	mov	r7, r3
9002878c:	460d      	mov	r5, r1
9002878e:	4691      	mov	r9, r2
90028790:	f7ff ffe4 	bl	9002875c <__retarget_lock_acquire_recursive>
90028794:	4b23      	ldr	r3, [pc, #140]	; (90028824 <__register_exitproc+0xa8>)
90028796:	681c      	ldr	r4, [r3, #0]
90028798:	b934      	cbnz	r4, 900287a8 <__register_exitproc+0x2c>
9002879a:	4c23      	ldr	r4, [pc, #140]	; (90028828 <__register_exitproc+0xac>)
9002879c:	601c      	str	r4, [r3, #0]
9002879e:	4b23      	ldr	r3, [pc, #140]	; (9002882c <__register_exitproc+0xb0>)
900287a0:	b113      	cbz	r3, 900287a8 <__register_exitproc+0x2c>
900287a2:	681b      	ldr	r3, [r3, #0]
900287a4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
900287a8:	6863      	ldr	r3, [r4, #4]
900287aa:	2b1f      	cmp	r3, #31
900287ac:	dd07      	ble.n	900287be <__register_exitproc+0x42>
900287ae:	f8d8 0000 	ldr.w	r0, [r8]
900287b2:	f7ff ffd4 	bl	9002875e <__retarget_lock_release_recursive>
900287b6:	f04f 30ff 	mov.w	r0, #4294967295
900287ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900287be:	b32e      	cbz	r6, 9002880c <__register_exitproc+0x90>
900287c0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
900287c4:	b968      	cbnz	r0, 900287e2 <__register_exitproc+0x66>
900287c6:	4b1a      	ldr	r3, [pc, #104]	; (90028830 <__register_exitproc+0xb4>)
900287c8:	2b00      	cmp	r3, #0
900287ca:	d0f0      	beq.n	900287ae <__register_exitproc+0x32>
900287cc:	f44f 7084 	mov.w	r0, #264	; 0x108
900287d0:	f7ff fc82 	bl	900280d8 <malloc>
900287d4:	2800      	cmp	r0, #0
900287d6:	d0ea      	beq.n	900287ae <__register_exitproc+0x32>
900287d8:	2300      	movs	r3, #0
900287da:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
900287de:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
900287e2:	6863      	ldr	r3, [r4, #4]
900287e4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
900287e8:	2201      	movs	r2, #1
900287ea:	409a      	lsls	r2, r3
900287ec:	eb00 0183 	add.w	r1, r0, r3, lsl #2
900287f0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
900287f4:	4313      	orrs	r3, r2
900287f6:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
900287fa:	2e02      	cmp	r6, #2
900287fc:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
90028800:	bf02      	ittt	eq
90028802:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
90028806:	4313      	orreq	r3, r2
90028808:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
9002880c:	6863      	ldr	r3, [r4, #4]
9002880e:	f8d8 0000 	ldr.w	r0, [r8]
90028812:	1c5a      	adds	r2, r3, #1
90028814:	3302      	adds	r3, #2
90028816:	6062      	str	r2, [r4, #4]
90028818:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
9002881c:	f7ff ff9f 	bl	9002875e <__retarget_lock_release_recursive>
90028820:	2000      	movs	r0, #0
90028822:	e7ca      	b.n	900287ba <__register_exitproc+0x3e>
90028824:	2403a3c8 	.word	0x2403a3c8
90028828:	2403a33c 	.word	0x2403a33c
9002882c:	9002c9a0 	.word	0x9002c9a0
90028830:	900280d9 	.word	0x900280d9
90028834:	2400015c 	.word	0x2400015c

90028838 <_free_r>:
90028838:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002883a:	2900      	cmp	r1, #0
9002883c:	d044      	beq.n	900288c8 <_free_r+0x90>
9002883e:	f851 3c04 	ldr.w	r3, [r1, #-4]
90028842:	9001      	str	r0, [sp, #4]
90028844:	2b00      	cmp	r3, #0
90028846:	f1a1 0404 	sub.w	r4, r1, #4
9002884a:	bfb8      	it	lt
9002884c:	18e4      	addlt	r4, r4, r3
9002884e:	f7ff fcf3 	bl	90028238 <__malloc_lock>
90028852:	4a1e      	ldr	r2, [pc, #120]	; (900288cc <_free_r+0x94>)
90028854:	9801      	ldr	r0, [sp, #4]
90028856:	6813      	ldr	r3, [r2, #0]
90028858:	b933      	cbnz	r3, 90028868 <_free_r+0x30>
9002885a:	6063      	str	r3, [r4, #4]
9002885c:	6014      	str	r4, [r2, #0]
9002885e:	b003      	add	sp, #12
90028860:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90028864:	f7ff bcee 	b.w	90028244 <__malloc_unlock>
90028868:	42a3      	cmp	r3, r4
9002886a:	d908      	bls.n	9002887e <_free_r+0x46>
9002886c:	6825      	ldr	r5, [r4, #0]
9002886e:	1961      	adds	r1, r4, r5
90028870:	428b      	cmp	r3, r1
90028872:	bf01      	itttt	eq
90028874:	6819      	ldreq	r1, [r3, #0]
90028876:	685b      	ldreq	r3, [r3, #4]
90028878:	1949      	addeq	r1, r1, r5
9002887a:	6021      	streq	r1, [r4, #0]
9002887c:	e7ed      	b.n	9002885a <_free_r+0x22>
9002887e:	461a      	mov	r2, r3
90028880:	685b      	ldr	r3, [r3, #4]
90028882:	b10b      	cbz	r3, 90028888 <_free_r+0x50>
90028884:	42a3      	cmp	r3, r4
90028886:	d9fa      	bls.n	9002887e <_free_r+0x46>
90028888:	6811      	ldr	r1, [r2, #0]
9002888a:	1855      	adds	r5, r2, r1
9002888c:	42a5      	cmp	r5, r4
9002888e:	d10b      	bne.n	900288a8 <_free_r+0x70>
90028890:	6824      	ldr	r4, [r4, #0]
90028892:	4421      	add	r1, r4
90028894:	1854      	adds	r4, r2, r1
90028896:	42a3      	cmp	r3, r4
90028898:	6011      	str	r1, [r2, #0]
9002889a:	d1e0      	bne.n	9002885e <_free_r+0x26>
9002889c:	681c      	ldr	r4, [r3, #0]
9002889e:	685b      	ldr	r3, [r3, #4]
900288a0:	6053      	str	r3, [r2, #4]
900288a2:	440c      	add	r4, r1
900288a4:	6014      	str	r4, [r2, #0]
900288a6:	e7da      	b.n	9002885e <_free_r+0x26>
900288a8:	d902      	bls.n	900288b0 <_free_r+0x78>
900288aa:	230c      	movs	r3, #12
900288ac:	6003      	str	r3, [r0, #0]
900288ae:	e7d6      	b.n	9002885e <_free_r+0x26>
900288b0:	6825      	ldr	r5, [r4, #0]
900288b2:	1961      	adds	r1, r4, r5
900288b4:	428b      	cmp	r3, r1
900288b6:	bf04      	itt	eq
900288b8:	6819      	ldreq	r1, [r3, #0]
900288ba:	685b      	ldreq	r3, [r3, #4]
900288bc:	6063      	str	r3, [r4, #4]
900288be:	bf04      	itt	eq
900288c0:	1949      	addeq	r1, r1, r5
900288c2:	6021      	streq	r1, [r4, #0]
900288c4:	6054      	str	r4, [r2, #4]
900288c6:	e7ca      	b.n	9002885e <_free_r+0x26>
900288c8:	b003      	add	sp, #12
900288ca:	bd30      	pop	{r4, r5, pc}
900288cc:	2403a1f0 	.word	0x2403a1f0

900288d0 <__sfputc_r>:
900288d0:	6893      	ldr	r3, [r2, #8]
900288d2:	3b01      	subs	r3, #1
900288d4:	2b00      	cmp	r3, #0
900288d6:	b410      	push	{r4}
900288d8:	6093      	str	r3, [r2, #8]
900288da:	da08      	bge.n	900288ee <__sfputc_r+0x1e>
900288dc:	6994      	ldr	r4, [r2, #24]
900288de:	42a3      	cmp	r3, r4
900288e0:	db01      	blt.n	900288e6 <__sfputc_r+0x16>
900288e2:	290a      	cmp	r1, #10
900288e4:	d103      	bne.n	900288ee <__sfputc_r+0x1e>
900288e6:	f85d 4b04 	ldr.w	r4, [sp], #4
900288ea:	f7ff bdc4 	b.w	90028476 <__swbuf_r>
900288ee:	6813      	ldr	r3, [r2, #0]
900288f0:	1c58      	adds	r0, r3, #1
900288f2:	6010      	str	r0, [r2, #0]
900288f4:	7019      	strb	r1, [r3, #0]
900288f6:	4608      	mov	r0, r1
900288f8:	f85d 4b04 	ldr.w	r4, [sp], #4
900288fc:	4770      	bx	lr

900288fe <__sfputs_r>:
900288fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90028900:	4606      	mov	r6, r0
90028902:	460f      	mov	r7, r1
90028904:	4614      	mov	r4, r2
90028906:	18d5      	adds	r5, r2, r3
90028908:	42ac      	cmp	r4, r5
9002890a:	d101      	bne.n	90028910 <__sfputs_r+0x12>
9002890c:	2000      	movs	r0, #0
9002890e:	e007      	b.n	90028920 <__sfputs_r+0x22>
90028910:	f814 1b01 	ldrb.w	r1, [r4], #1
90028914:	463a      	mov	r2, r7
90028916:	4630      	mov	r0, r6
90028918:	f7ff ffda 	bl	900288d0 <__sfputc_r>
9002891c:	1c43      	adds	r3, r0, #1
9002891e:	d1f3      	bne.n	90028908 <__sfputs_r+0xa>
90028920:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90028924 <_vfiprintf_r>:
90028924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028928:	460d      	mov	r5, r1
9002892a:	b09d      	sub	sp, #116	; 0x74
9002892c:	4614      	mov	r4, r2
9002892e:	4698      	mov	r8, r3
90028930:	4606      	mov	r6, r0
90028932:	b118      	cbz	r0, 9002893c <_vfiprintf_r+0x18>
90028934:	6a03      	ldr	r3, [r0, #32]
90028936:	b90b      	cbnz	r3, 9002893c <_vfiprintf_r+0x18>
90028938:	f7ff fd12 	bl	90028360 <__sinit>
9002893c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002893e:	07d9      	lsls	r1, r3, #31
90028940:	d405      	bmi.n	9002894e <_vfiprintf_r+0x2a>
90028942:	89ab      	ldrh	r3, [r5, #12]
90028944:	059a      	lsls	r2, r3, #22
90028946:	d402      	bmi.n	9002894e <_vfiprintf_r+0x2a>
90028948:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002894a:	f7ff ff07 	bl	9002875c <__retarget_lock_acquire_recursive>
9002894e:	89ab      	ldrh	r3, [r5, #12]
90028950:	071b      	lsls	r3, r3, #28
90028952:	d501      	bpl.n	90028958 <_vfiprintf_r+0x34>
90028954:	692b      	ldr	r3, [r5, #16]
90028956:	b99b      	cbnz	r3, 90028980 <_vfiprintf_r+0x5c>
90028958:	4629      	mov	r1, r5
9002895a:	4630      	mov	r0, r6
9002895c:	f7ff fdc8 	bl	900284f0 <__swsetup_r>
90028960:	b170      	cbz	r0, 90028980 <_vfiprintf_r+0x5c>
90028962:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90028964:	07dc      	lsls	r4, r3, #31
90028966:	d504      	bpl.n	90028972 <_vfiprintf_r+0x4e>
90028968:	f04f 30ff 	mov.w	r0, #4294967295
9002896c:	b01d      	add	sp, #116	; 0x74
9002896e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028972:	89ab      	ldrh	r3, [r5, #12]
90028974:	0598      	lsls	r0, r3, #22
90028976:	d4f7      	bmi.n	90028968 <_vfiprintf_r+0x44>
90028978:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002897a:	f7ff fef0 	bl	9002875e <__retarget_lock_release_recursive>
9002897e:	e7f3      	b.n	90028968 <_vfiprintf_r+0x44>
90028980:	2300      	movs	r3, #0
90028982:	9309      	str	r3, [sp, #36]	; 0x24
90028984:	2320      	movs	r3, #32
90028986:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
9002898a:	f8cd 800c 	str.w	r8, [sp, #12]
9002898e:	2330      	movs	r3, #48	; 0x30
90028990:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 90028b44 <_vfiprintf_r+0x220>
90028994:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
90028998:	f04f 0901 	mov.w	r9, #1
9002899c:	4623      	mov	r3, r4
9002899e:	469a      	mov	sl, r3
900289a0:	f813 2b01 	ldrb.w	r2, [r3], #1
900289a4:	b10a      	cbz	r2, 900289aa <_vfiprintf_r+0x86>
900289a6:	2a25      	cmp	r2, #37	; 0x25
900289a8:	d1f9      	bne.n	9002899e <_vfiprintf_r+0x7a>
900289aa:	ebba 0b04 	subs.w	fp, sl, r4
900289ae:	d00b      	beq.n	900289c8 <_vfiprintf_r+0xa4>
900289b0:	465b      	mov	r3, fp
900289b2:	4622      	mov	r2, r4
900289b4:	4629      	mov	r1, r5
900289b6:	4630      	mov	r0, r6
900289b8:	f7ff ffa1 	bl	900288fe <__sfputs_r>
900289bc:	3001      	adds	r0, #1
900289be:	f000 80a9 	beq.w	90028b14 <_vfiprintf_r+0x1f0>
900289c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
900289c4:	445a      	add	r2, fp
900289c6:	9209      	str	r2, [sp, #36]	; 0x24
900289c8:	f89a 3000 	ldrb.w	r3, [sl]
900289cc:	2b00      	cmp	r3, #0
900289ce:	f000 80a1 	beq.w	90028b14 <_vfiprintf_r+0x1f0>
900289d2:	2300      	movs	r3, #0
900289d4:	f04f 32ff 	mov.w	r2, #4294967295
900289d8:	e9cd 2305 	strd	r2, r3, [sp, #20]
900289dc:	f10a 0a01 	add.w	sl, sl, #1
900289e0:	9304      	str	r3, [sp, #16]
900289e2:	9307      	str	r3, [sp, #28]
900289e4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
900289e8:	931a      	str	r3, [sp, #104]	; 0x68
900289ea:	4654      	mov	r4, sl
900289ec:	2205      	movs	r2, #5
900289ee:	f814 1b01 	ldrb.w	r1, [r4], #1
900289f2:	4854      	ldr	r0, [pc, #336]	; (90028b44 <_vfiprintf_r+0x220>)
900289f4:	f7d7 fc74 	bl	900002e0 <memchr>
900289f8:	9a04      	ldr	r2, [sp, #16]
900289fa:	b9d8      	cbnz	r0, 90028a34 <_vfiprintf_r+0x110>
900289fc:	06d1      	lsls	r1, r2, #27
900289fe:	bf44      	itt	mi
90028a00:	2320      	movmi	r3, #32
90028a02:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90028a06:	0713      	lsls	r3, r2, #28
90028a08:	bf44      	itt	mi
90028a0a:	232b      	movmi	r3, #43	; 0x2b
90028a0c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90028a10:	f89a 3000 	ldrb.w	r3, [sl]
90028a14:	2b2a      	cmp	r3, #42	; 0x2a
90028a16:	d015      	beq.n	90028a44 <_vfiprintf_r+0x120>
90028a18:	9a07      	ldr	r2, [sp, #28]
90028a1a:	4654      	mov	r4, sl
90028a1c:	2000      	movs	r0, #0
90028a1e:	f04f 0c0a 	mov.w	ip, #10
90028a22:	4621      	mov	r1, r4
90028a24:	f811 3b01 	ldrb.w	r3, [r1], #1
90028a28:	3b30      	subs	r3, #48	; 0x30
90028a2a:	2b09      	cmp	r3, #9
90028a2c:	d94d      	bls.n	90028aca <_vfiprintf_r+0x1a6>
90028a2e:	b1b0      	cbz	r0, 90028a5e <_vfiprintf_r+0x13a>
90028a30:	9207      	str	r2, [sp, #28]
90028a32:	e014      	b.n	90028a5e <_vfiprintf_r+0x13a>
90028a34:	eba0 0308 	sub.w	r3, r0, r8
90028a38:	fa09 f303 	lsl.w	r3, r9, r3
90028a3c:	4313      	orrs	r3, r2
90028a3e:	9304      	str	r3, [sp, #16]
90028a40:	46a2      	mov	sl, r4
90028a42:	e7d2      	b.n	900289ea <_vfiprintf_r+0xc6>
90028a44:	9b03      	ldr	r3, [sp, #12]
90028a46:	1d19      	adds	r1, r3, #4
90028a48:	681b      	ldr	r3, [r3, #0]
90028a4a:	9103      	str	r1, [sp, #12]
90028a4c:	2b00      	cmp	r3, #0
90028a4e:	bfbb      	ittet	lt
90028a50:	425b      	neglt	r3, r3
90028a52:	f042 0202 	orrlt.w	r2, r2, #2
90028a56:	9307      	strge	r3, [sp, #28]
90028a58:	9307      	strlt	r3, [sp, #28]
90028a5a:	bfb8      	it	lt
90028a5c:	9204      	strlt	r2, [sp, #16]
90028a5e:	7823      	ldrb	r3, [r4, #0]
90028a60:	2b2e      	cmp	r3, #46	; 0x2e
90028a62:	d10c      	bne.n	90028a7e <_vfiprintf_r+0x15a>
90028a64:	7863      	ldrb	r3, [r4, #1]
90028a66:	2b2a      	cmp	r3, #42	; 0x2a
90028a68:	d134      	bne.n	90028ad4 <_vfiprintf_r+0x1b0>
90028a6a:	9b03      	ldr	r3, [sp, #12]
90028a6c:	1d1a      	adds	r2, r3, #4
90028a6e:	681b      	ldr	r3, [r3, #0]
90028a70:	9203      	str	r2, [sp, #12]
90028a72:	2b00      	cmp	r3, #0
90028a74:	bfb8      	it	lt
90028a76:	f04f 33ff 	movlt.w	r3, #4294967295
90028a7a:	3402      	adds	r4, #2
90028a7c:	9305      	str	r3, [sp, #20]
90028a7e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 90028b54 <_vfiprintf_r+0x230>
90028a82:	7821      	ldrb	r1, [r4, #0]
90028a84:	2203      	movs	r2, #3
90028a86:	4650      	mov	r0, sl
90028a88:	f7d7 fc2a 	bl	900002e0 <memchr>
90028a8c:	b138      	cbz	r0, 90028a9e <_vfiprintf_r+0x17a>
90028a8e:	9b04      	ldr	r3, [sp, #16]
90028a90:	eba0 000a 	sub.w	r0, r0, sl
90028a94:	2240      	movs	r2, #64	; 0x40
90028a96:	4082      	lsls	r2, r0
90028a98:	4313      	orrs	r3, r2
90028a9a:	3401      	adds	r4, #1
90028a9c:	9304      	str	r3, [sp, #16]
90028a9e:	f814 1b01 	ldrb.w	r1, [r4], #1
90028aa2:	4829      	ldr	r0, [pc, #164]	; (90028b48 <_vfiprintf_r+0x224>)
90028aa4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
90028aa8:	2206      	movs	r2, #6
90028aaa:	f7d7 fc19 	bl	900002e0 <memchr>
90028aae:	2800      	cmp	r0, #0
90028ab0:	d03f      	beq.n	90028b32 <_vfiprintf_r+0x20e>
90028ab2:	4b26      	ldr	r3, [pc, #152]	; (90028b4c <_vfiprintf_r+0x228>)
90028ab4:	bb1b      	cbnz	r3, 90028afe <_vfiprintf_r+0x1da>
90028ab6:	9b03      	ldr	r3, [sp, #12]
90028ab8:	3307      	adds	r3, #7
90028aba:	f023 0307 	bic.w	r3, r3, #7
90028abe:	3308      	adds	r3, #8
90028ac0:	9303      	str	r3, [sp, #12]
90028ac2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028ac4:	443b      	add	r3, r7
90028ac6:	9309      	str	r3, [sp, #36]	; 0x24
90028ac8:	e768      	b.n	9002899c <_vfiprintf_r+0x78>
90028aca:	fb0c 3202 	mla	r2, ip, r2, r3
90028ace:	460c      	mov	r4, r1
90028ad0:	2001      	movs	r0, #1
90028ad2:	e7a6      	b.n	90028a22 <_vfiprintf_r+0xfe>
90028ad4:	2300      	movs	r3, #0
90028ad6:	3401      	adds	r4, #1
90028ad8:	9305      	str	r3, [sp, #20]
90028ada:	4619      	mov	r1, r3
90028adc:	f04f 0c0a 	mov.w	ip, #10
90028ae0:	4620      	mov	r0, r4
90028ae2:	f810 2b01 	ldrb.w	r2, [r0], #1
90028ae6:	3a30      	subs	r2, #48	; 0x30
90028ae8:	2a09      	cmp	r2, #9
90028aea:	d903      	bls.n	90028af4 <_vfiprintf_r+0x1d0>
90028aec:	2b00      	cmp	r3, #0
90028aee:	d0c6      	beq.n	90028a7e <_vfiprintf_r+0x15a>
90028af0:	9105      	str	r1, [sp, #20]
90028af2:	e7c4      	b.n	90028a7e <_vfiprintf_r+0x15a>
90028af4:	fb0c 2101 	mla	r1, ip, r1, r2
90028af8:	4604      	mov	r4, r0
90028afa:	2301      	movs	r3, #1
90028afc:	e7f0      	b.n	90028ae0 <_vfiprintf_r+0x1bc>
90028afe:	ab03      	add	r3, sp, #12
90028b00:	9300      	str	r3, [sp, #0]
90028b02:	462a      	mov	r2, r5
90028b04:	4b12      	ldr	r3, [pc, #72]	; (90028b50 <_vfiprintf_r+0x22c>)
90028b06:	a904      	add	r1, sp, #16
90028b08:	4630      	mov	r0, r6
90028b0a:	f3af 8000 	nop.w
90028b0e:	4607      	mov	r7, r0
90028b10:	1c78      	adds	r0, r7, #1
90028b12:	d1d6      	bne.n	90028ac2 <_vfiprintf_r+0x19e>
90028b14:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90028b16:	07d9      	lsls	r1, r3, #31
90028b18:	d405      	bmi.n	90028b26 <_vfiprintf_r+0x202>
90028b1a:	89ab      	ldrh	r3, [r5, #12]
90028b1c:	059a      	lsls	r2, r3, #22
90028b1e:	d402      	bmi.n	90028b26 <_vfiprintf_r+0x202>
90028b20:	6da8      	ldr	r0, [r5, #88]	; 0x58
90028b22:	f7ff fe1c 	bl	9002875e <__retarget_lock_release_recursive>
90028b26:	89ab      	ldrh	r3, [r5, #12]
90028b28:	065b      	lsls	r3, r3, #25
90028b2a:	f53f af1d 	bmi.w	90028968 <_vfiprintf_r+0x44>
90028b2e:	9809      	ldr	r0, [sp, #36]	; 0x24
90028b30:	e71c      	b.n	9002896c <_vfiprintf_r+0x48>
90028b32:	ab03      	add	r3, sp, #12
90028b34:	9300      	str	r3, [sp, #0]
90028b36:	462a      	mov	r2, r5
90028b38:	4b05      	ldr	r3, [pc, #20]	; (90028b50 <_vfiprintf_r+0x22c>)
90028b3a:	a904      	add	r1, sp, #16
90028b3c:	4630      	mov	r0, r6
90028b3e:	f000 f879 	bl	90028c34 <_printf_i>
90028b42:	e7e4      	b.n	90028b0e <_vfiprintf_r+0x1ea>
90028b44:	9002c9a4 	.word	0x9002c9a4
90028b48:	9002c9ae 	.word	0x9002c9ae
90028b4c:	00000000 	.word	0x00000000
90028b50:	900288ff 	.word	0x900288ff
90028b54:	9002c9aa 	.word	0x9002c9aa

90028b58 <_printf_common>:
90028b58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90028b5c:	4616      	mov	r6, r2
90028b5e:	4699      	mov	r9, r3
90028b60:	688a      	ldr	r2, [r1, #8]
90028b62:	690b      	ldr	r3, [r1, #16]
90028b64:	f8dd 8020 	ldr.w	r8, [sp, #32]
90028b68:	4293      	cmp	r3, r2
90028b6a:	bfb8      	it	lt
90028b6c:	4613      	movlt	r3, r2
90028b6e:	6033      	str	r3, [r6, #0]
90028b70:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
90028b74:	4607      	mov	r7, r0
90028b76:	460c      	mov	r4, r1
90028b78:	b10a      	cbz	r2, 90028b7e <_printf_common+0x26>
90028b7a:	3301      	adds	r3, #1
90028b7c:	6033      	str	r3, [r6, #0]
90028b7e:	6823      	ldr	r3, [r4, #0]
90028b80:	0699      	lsls	r1, r3, #26
90028b82:	bf42      	ittt	mi
90028b84:	6833      	ldrmi	r3, [r6, #0]
90028b86:	3302      	addmi	r3, #2
90028b88:	6033      	strmi	r3, [r6, #0]
90028b8a:	6825      	ldr	r5, [r4, #0]
90028b8c:	f015 0506 	ands.w	r5, r5, #6
90028b90:	d106      	bne.n	90028ba0 <_printf_common+0x48>
90028b92:	f104 0a19 	add.w	sl, r4, #25
90028b96:	68e3      	ldr	r3, [r4, #12]
90028b98:	6832      	ldr	r2, [r6, #0]
90028b9a:	1a9b      	subs	r3, r3, r2
90028b9c:	42ab      	cmp	r3, r5
90028b9e:	dc26      	bgt.n	90028bee <_printf_common+0x96>
90028ba0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
90028ba4:	1e13      	subs	r3, r2, #0
90028ba6:	6822      	ldr	r2, [r4, #0]
90028ba8:	bf18      	it	ne
90028baa:	2301      	movne	r3, #1
90028bac:	0692      	lsls	r2, r2, #26
90028bae:	d42b      	bmi.n	90028c08 <_printf_common+0xb0>
90028bb0:	f104 0243 	add.w	r2, r4, #67	; 0x43
90028bb4:	4649      	mov	r1, r9
90028bb6:	4638      	mov	r0, r7
90028bb8:	47c0      	blx	r8
90028bba:	3001      	adds	r0, #1
90028bbc:	d01e      	beq.n	90028bfc <_printf_common+0xa4>
90028bbe:	6823      	ldr	r3, [r4, #0]
90028bc0:	6922      	ldr	r2, [r4, #16]
90028bc2:	f003 0306 	and.w	r3, r3, #6
90028bc6:	2b04      	cmp	r3, #4
90028bc8:	bf02      	ittt	eq
90028bca:	68e5      	ldreq	r5, [r4, #12]
90028bcc:	6833      	ldreq	r3, [r6, #0]
90028bce:	1aed      	subeq	r5, r5, r3
90028bd0:	68a3      	ldr	r3, [r4, #8]
90028bd2:	bf0c      	ite	eq
90028bd4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
90028bd8:	2500      	movne	r5, #0
90028bda:	4293      	cmp	r3, r2
90028bdc:	bfc4      	itt	gt
90028bde:	1a9b      	subgt	r3, r3, r2
90028be0:	18ed      	addgt	r5, r5, r3
90028be2:	2600      	movs	r6, #0
90028be4:	341a      	adds	r4, #26
90028be6:	42b5      	cmp	r5, r6
90028be8:	d11a      	bne.n	90028c20 <_printf_common+0xc8>
90028bea:	2000      	movs	r0, #0
90028bec:	e008      	b.n	90028c00 <_printf_common+0xa8>
90028bee:	2301      	movs	r3, #1
90028bf0:	4652      	mov	r2, sl
90028bf2:	4649      	mov	r1, r9
90028bf4:	4638      	mov	r0, r7
90028bf6:	47c0      	blx	r8
90028bf8:	3001      	adds	r0, #1
90028bfa:	d103      	bne.n	90028c04 <_printf_common+0xac>
90028bfc:	f04f 30ff 	mov.w	r0, #4294967295
90028c00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90028c04:	3501      	adds	r5, #1
90028c06:	e7c6      	b.n	90028b96 <_printf_common+0x3e>
90028c08:	18e1      	adds	r1, r4, r3
90028c0a:	1c5a      	adds	r2, r3, #1
90028c0c:	2030      	movs	r0, #48	; 0x30
90028c0e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
90028c12:	4422      	add	r2, r4
90028c14:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
90028c18:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
90028c1c:	3302      	adds	r3, #2
90028c1e:	e7c7      	b.n	90028bb0 <_printf_common+0x58>
90028c20:	2301      	movs	r3, #1
90028c22:	4622      	mov	r2, r4
90028c24:	4649      	mov	r1, r9
90028c26:	4638      	mov	r0, r7
90028c28:	47c0      	blx	r8
90028c2a:	3001      	adds	r0, #1
90028c2c:	d0e6      	beq.n	90028bfc <_printf_common+0xa4>
90028c2e:	3601      	adds	r6, #1
90028c30:	e7d9      	b.n	90028be6 <_printf_common+0x8e>
	...

90028c34 <_printf_i>:
90028c34:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90028c38:	7e0f      	ldrb	r7, [r1, #24]
90028c3a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90028c3c:	2f78      	cmp	r7, #120	; 0x78
90028c3e:	4691      	mov	r9, r2
90028c40:	4680      	mov	r8, r0
90028c42:	460c      	mov	r4, r1
90028c44:	469a      	mov	sl, r3
90028c46:	f101 0243 	add.w	r2, r1, #67	; 0x43
90028c4a:	d807      	bhi.n	90028c5c <_printf_i+0x28>
90028c4c:	2f62      	cmp	r7, #98	; 0x62
90028c4e:	d80a      	bhi.n	90028c66 <_printf_i+0x32>
90028c50:	2f00      	cmp	r7, #0
90028c52:	f000 80d4 	beq.w	90028dfe <_printf_i+0x1ca>
90028c56:	2f58      	cmp	r7, #88	; 0x58
90028c58:	f000 80c0 	beq.w	90028ddc <_printf_i+0x1a8>
90028c5c:	f104 0542 	add.w	r5, r4, #66	; 0x42
90028c60:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
90028c64:	e03a      	b.n	90028cdc <_printf_i+0xa8>
90028c66:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
90028c6a:	2b15      	cmp	r3, #21
90028c6c:	d8f6      	bhi.n	90028c5c <_printf_i+0x28>
90028c6e:	a101      	add	r1, pc, #4	; (adr r1, 90028c74 <_printf_i+0x40>)
90028c70:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
90028c74:	90028ccd 	.word	0x90028ccd
90028c78:	90028ce1 	.word	0x90028ce1
90028c7c:	90028c5d 	.word	0x90028c5d
90028c80:	90028c5d 	.word	0x90028c5d
90028c84:	90028c5d 	.word	0x90028c5d
90028c88:	90028c5d 	.word	0x90028c5d
90028c8c:	90028ce1 	.word	0x90028ce1
90028c90:	90028c5d 	.word	0x90028c5d
90028c94:	90028c5d 	.word	0x90028c5d
90028c98:	90028c5d 	.word	0x90028c5d
90028c9c:	90028c5d 	.word	0x90028c5d
90028ca0:	90028de5 	.word	0x90028de5
90028ca4:	90028d0d 	.word	0x90028d0d
90028ca8:	90028d9f 	.word	0x90028d9f
90028cac:	90028c5d 	.word	0x90028c5d
90028cb0:	90028c5d 	.word	0x90028c5d
90028cb4:	90028e07 	.word	0x90028e07
90028cb8:	90028c5d 	.word	0x90028c5d
90028cbc:	90028d0d 	.word	0x90028d0d
90028cc0:	90028c5d 	.word	0x90028c5d
90028cc4:	90028c5d 	.word	0x90028c5d
90028cc8:	90028da7 	.word	0x90028da7
90028ccc:	682b      	ldr	r3, [r5, #0]
90028cce:	1d1a      	adds	r2, r3, #4
90028cd0:	681b      	ldr	r3, [r3, #0]
90028cd2:	602a      	str	r2, [r5, #0]
90028cd4:	f104 0542 	add.w	r5, r4, #66	; 0x42
90028cd8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
90028cdc:	2301      	movs	r3, #1
90028cde:	e09f      	b.n	90028e20 <_printf_i+0x1ec>
90028ce0:	6820      	ldr	r0, [r4, #0]
90028ce2:	682b      	ldr	r3, [r5, #0]
90028ce4:	0607      	lsls	r7, r0, #24
90028ce6:	f103 0104 	add.w	r1, r3, #4
90028cea:	6029      	str	r1, [r5, #0]
90028cec:	d501      	bpl.n	90028cf2 <_printf_i+0xbe>
90028cee:	681e      	ldr	r6, [r3, #0]
90028cf0:	e003      	b.n	90028cfa <_printf_i+0xc6>
90028cf2:	0646      	lsls	r6, r0, #25
90028cf4:	d5fb      	bpl.n	90028cee <_printf_i+0xba>
90028cf6:	f9b3 6000 	ldrsh.w	r6, [r3]
90028cfa:	2e00      	cmp	r6, #0
90028cfc:	da03      	bge.n	90028d06 <_printf_i+0xd2>
90028cfe:	232d      	movs	r3, #45	; 0x2d
90028d00:	4276      	negs	r6, r6
90028d02:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
90028d06:	485a      	ldr	r0, [pc, #360]	; (90028e70 <_printf_i+0x23c>)
90028d08:	230a      	movs	r3, #10
90028d0a:	e012      	b.n	90028d32 <_printf_i+0xfe>
90028d0c:	682b      	ldr	r3, [r5, #0]
90028d0e:	6820      	ldr	r0, [r4, #0]
90028d10:	1d19      	adds	r1, r3, #4
90028d12:	6029      	str	r1, [r5, #0]
90028d14:	0605      	lsls	r5, r0, #24
90028d16:	d501      	bpl.n	90028d1c <_printf_i+0xe8>
90028d18:	681e      	ldr	r6, [r3, #0]
90028d1a:	e002      	b.n	90028d22 <_printf_i+0xee>
90028d1c:	0641      	lsls	r1, r0, #25
90028d1e:	d5fb      	bpl.n	90028d18 <_printf_i+0xe4>
90028d20:	881e      	ldrh	r6, [r3, #0]
90028d22:	4853      	ldr	r0, [pc, #332]	; (90028e70 <_printf_i+0x23c>)
90028d24:	2f6f      	cmp	r7, #111	; 0x6f
90028d26:	bf0c      	ite	eq
90028d28:	2308      	moveq	r3, #8
90028d2a:	230a      	movne	r3, #10
90028d2c:	2100      	movs	r1, #0
90028d2e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
90028d32:	6865      	ldr	r5, [r4, #4]
90028d34:	60a5      	str	r5, [r4, #8]
90028d36:	2d00      	cmp	r5, #0
90028d38:	bfa2      	ittt	ge
90028d3a:	6821      	ldrge	r1, [r4, #0]
90028d3c:	f021 0104 	bicge.w	r1, r1, #4
90028d40:	6021      	strge	r1, [r4, #0]
90028d42:	b90e      	cbnz	r6, 90028d48 <_printf_i+0x114>
90028d44:	2d00      	cmp	r5, #0
90028d46:	d04b      	beq.n	90028de0 <_printf_i+0x1ac>
90028d48:	4615      	mov	r5, r2
90028d4a:	fbb6 f1f3 	udiv	r1, r6, r3
90028d4e:	fb03 6711 	mls	r7, r3, r1, r6
90028d52:	5dc7      	ldrb	r7, [r0, r7]
90028d54:	f805 7d01 	strb.w	r7, [r5, #-1]!
90028d58:	4637      	mov	r7, r6
90028d5a:	42bb      	cmp	r3, r7
90028d5c:	460e      	mov	r6, r1
90028d5e:	d9f4      	bls.n	90028d4a <_printf_i+0x116>
90028d60:	2b08      	cmp	r3, #8
90028d62:	d10b      	bne.n	90028d7c <_printf_i+0x148>
90028d64:	6823      	ldr	r3, [r4, #0]
90028d66:	07de      	lsls	r6, r3, #31
90028d68:	d508      	bpl.n	90028d7c <_printf_i+0x148>
90028d6a:	6923      	ldr	r3, [r4, #16]
90028d6c:	6861      	ldr	r1, [r4, #4]
90028d6e:	4299      	cmp	r1, r3
90028d70:	bfde      	ittt	le
90028d72:	2330      	movle	r3, #48	; 0x30
90028d74:	f805 3c01 	strble.w	r3, [r5, #-1]
90028d78:	f105 35ff 	addle.w	r5, r5, #4294967295
90028d7c:	1b52      	subs	r2, r2, r5
90028d7e:	6122      	str	r2, [r4, #16]
90028d80:	f8cd a000 	str.w	sl, [sp]
90028d84:	464b      	mov	r3, r9
90028d86:	aa03      	add	r2, sp, #12
90028d88:	4621      	mov	r1, r4
90028d8a:	4640      	mov	r0, r8
90028d8c:	f7ff fee4 	bl	90028b58 <_printf_common>
90028d90:	3001      	adds	r0, #1
90028d92:	d14a      	bne.n	90028e2a <_printf_i+0x1f6>
90028d94:	f04f 30ff 	mov.w	r0, #4294967295
90028d98:	b004      	add	sp, #16
90028d9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90028d9e:	6823      	ldr	r3, [r4, #0]
90028da0:	f043 0320 	orr.w	r3, r3, #32
90028da4:	6023      	str	r3, [r4, #0]
90028da6:	4833      	ldr	r0, [pc, #204]	; (90028e74 <_printf_i+0x240>)
90028da8:	2778      	movs	r7, #120	; 0x78
90028daa:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
90028dae:	6823      	ldr	r3, [r4, #0]
90028db0:	6829      	ldr	r1, [r5, #0]
90028db2:	061f      	lsls	r7, r3, #24
90028db4:	f851 6b04 	ldr.w	r6, [r1], #4
90028db8:	d402      	bmi.n	90028dc0 <_printf_i+0x18c>
90028dba:	065f      	lsls	r7, r3, #25
90028dbc:	bf48      	it	mi
90028dbe:	b2b6      	uxthmi	r6, r6
90028dc0:	07df      	lsls	r7, r3, #31
90028dc2:	bf48      	it	mi
90028dc4:	f043 0320 	orrmi.w	r3, r3, #32
90028dc8:	6029      	str	r1, [r5, #0]
90028dca:	bf48      	it	mi
90028dcc:	6023      	strmi	r3, [r4, #0]
90028dce:	b91e      	cbnz	r6, 90028dd8 <_printf_i+0x1a4>
90028dd0:	6823      	ldr	r3, [r4, #0]
90028dd2:	f023 0320 	bic.w	r3, r3, #32
90028dd6:	6023      	str	r3, [r4, #0]
90028dd8:	2310      	movs	r3, #16
90028dda:	e7a7      	b.n	90028d2c <_printf_i+0xf8>
90028ddc:	4824      	ldr	r0, [pc, #144]	; (90028e70 <_printf_i+0x23c>)
90028dde:	e7e4      	b.n	90028daa <_printf_i+0x176>
90028de0:	4615      	mov	r5, r2
90028de2:	e7bd      	b.n	90028d60 <_printf_i+0x12c>
90028de4:	682b      	ldr	r3, [r5, #0]
90028de6:	6826      	ldr	r6, [r4, #0]
90028de8:	6961      	ldr	r1, [r4, #20]
90028dea:	1d18      	adds	r0, r3, #4
90028dec:	6028      	str	r0, [r5, #0]
90028dee:	0635      	lsls	r5, r6, #24
90028df0:	681b      	ldr	r3, [r3, #0]
90028df2:	d501      	bpl.n	90028df8 <_printf_i+0x1c4>
90028df4:	6019      	str	r1, [r3, #0]
90028df6:	e002      	b.n	90028dfe <_printf_i+0x1ca>
90028df8:	0670      	lsls	r0, r6, #25
90028dfa:	d5fb      	bpl.n	90028df4 <_printf_i+0x1c0>
90028dfc:	8019      	strh	r1, [r3, #0]
90028dfe:	2300      	movs	r3, #0
90028e00:	6123      	str	r3, [r4, #16]
90028e02:	4615      	mov	r5, r2
90028e04:	e7bc      	b.n	90028d80 <_printf_i+0x14c>
90028e06:	682b      	ldr	r3, [r5, #0]
90028e08:	1d1a      	adds	r2, r3, #4
90028e0a:	602a      	str	r2, [r5, #0]
90028e0c:	681d      	ldr	r5, [r3, #0]
90028e0e:	6862      	ldr	r2, [r4, #4]
90028e10:	2100      	movs	r1, #0
90028e12:	4628      	mov	r0, r5
90028e14:	f7d7 fa64 	bl	900002e0 <memchr>
90028e18:	b108      	cbz	r0, 90028e1e <_printf_i+0x1ea>
90028e1a:	1b40      	subs	r0, r0, r5
90028e1c:	6060      	str	r0, [r4, #4]
90028e1e:	6863      	ldr	r3, [r4, #4]
90028e20:	6123      	str	r3, [r4, #16]
90028e22:	2300      	movs	r3, #0
90028e24:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
90028e28:	e7aa      	b.n	90028d80 <_printf_i+0x14c>
90028e2a:	6923      	ldr	r3, [r4, #16]
90028e2c:	462a      	mov	r2, r5
90028e2e:	4649      	mov	r1, r9
90028e30:	4640      	mov	r0, r8
90028e32:	47d0      	blx	sl
90028e34:	3001      	adds	r0, #1
90028e36:	d0ad      	beq.n	90028d94 <_printf_i+0x160>
90028e38:	6823      	ldr	r3, [r4, #0]
90028e3a:	079b      	lsls	r3, r3, #30
90028e3c:	d413      	bmi.n	90028e66 <_printf_i+0x232>
90028e3e:	68e0      	ldr	r0, [r4, #12]
90028e40:	9b03      	ldr	r3, [sp, #12]
90028e42:	4298      	cmp	r0, r3
90028e44:	bfb8      	it	lt
90028e46:	4618      	movlt	r0, r3
90028e48:	e7a6      	b.n	90028d98 <_printf_i+0x164>
90028e4a:	2301      	movs	r3, #1
90028e4c:	4632      	mov	r2, r6
90028e4e:	4649      	mov	r1, r9
90028e50:	4640      	mov	r0, r8
90028e52:	47d0      	blx	sl
90028e54:	3001      	adds	r0, #1
90028e56:	d09d      	beq.n	90028d94 <_printf_i+0x160>
90028e58:	3501      	adds	r5, #1
90028e5a:	68e3      	ldr	r3, [r4, #12]
90028e5c:	9903      	ldr	r1, [sp, #12]
90028e5e:	1a5b      	subs	r3, r3, r1
90028e60:	42ab      	cmp	r3, r5
90028e62:	dcf2      	bgt.n	90028e4a <_printf_i+0x216>
90028e64:	e7eb      	b.n	90028e3e <_printf_i+0x20a>
90028e66:	2500      	movs	r5, #0
90028e68:	f104 0619 	add.w	r6, r4, #25
90028e6c:	e7f5      	b.n	90028e5a <_printf_i+0x226>
90028e6e:	bf00      	nop
90028e70:	9002c9b5 	.word	0x9002c9b5
90028e74:	9002c9c6 	.word	0x9002c9c6

90028e78 <__sflush_r>:
90028e78:	898a      	ldrh	r2, [r1, #12]
90028e7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90028e7e:	4605      	mov	r5, r0
90028e80:	0710      	lsls	r0, r2, #28
90028e82:	460c      	mov	r4, r1
90028e84:	d458      	bmi.n	90028f38 <__sflush_r+0xc0>
90028e86:	684b      	ldr	r3, [r1, #4]
90028e88:	2b00      	cmp	r3, #0
90028e8a:	dc05      	bgt.n	90028e98 <__sflush_r+0x20>
90028e8c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
90028e8e:	2b00      	cmp	r3, #0
90028e90:	dc02      	bgt.n	90028e98 <__sflush_r+0x20>
90028e92:	2000      	movs	r0, #0
90028e94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028e98:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90028e9a:	2e00      	cmp	r6, #0
90028e9c:	d0f9      	beq.n	90028e92 <__sflush_r+0x1a>
90028e9e:	2300      	movs	r3, #0
90028ea0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
90028ea4:	682f      	ldr	r7, [r5, #0]
90028ea6:	6a21      	ldr	r1, [r4, #32]
90028ea8:	602b      	str	r3, [r5, #0]
90028eaa:	d032      	beq.n	90028f12 <__sflush_r+0x9a>
90028eac:	6d60      	ldr	r0, [r4, #84]	; 0x54
90028eae:	89a3      	ldrh	r3, [r4, #12]
90028eb0:	075a      	lsls	r2, r3, #29
90028eb2:	d505      	bpl.n	90028ec0 <__sflush_r+0x48>
90028eb4:	6863      	ldr	r3, [r4, #4]
90028eb6:	1ac0      	subs	r0, r0, r3
90028eb8:	6b63      	ldr	r3, [r4, #52]	; 0x34
90028eba:	b10b      	cbz	r3, 90028ec0 <__sflush_r+0x48>
90028ebc:	6c23      	ldr	r3, [r4, #64]	; 0x40
90028ebe:	1ac0      	subs	r0, r0, r3
90028ec0:	2300      	movs	r3, #0
90028ec2:	4602      	mov	r2, r0
90028ec4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90028ec6:	6a21      	ldr	r1, [r4, #32]
90028ec8:	4628      	mov	r0, r5
90028eca:	47b0      	blx	r6
90028ecc:	1c43      	adds	r3, r0, #1
90028ece:	89a3      	ldrh	r3, [r4, #12]
90028ed0:	d106      	bne.n	90028ee0 <__sflush_r+0x68>
90028ed2:	6829      	ldr	r1, [r5, #0]
90028ed4:	291d      	cmp	r1, #29
90028ed6:	d82b      	bhi.n	90028f30 <__sflush_r+0xb8>
90028ed8:	4a29      	ldr	r2, [pc, #164]	; (90028f80 <__sflush_r+0x108>)
90028eda:	410a      	asrs	r2, r1
90028edc:	07d6      	lsls	r6, r2, #31
90028ede:	d427      	bmi.n	90028f30 <__sflush_r+0xb8>
90028ee0:	2200      	movs	r2, #0
90028ee2:	6062      	str	r2, [r4, #4]
90028ee4:	04d9      	lsls	r1, r3, #19
90028ee6:	6922      	ldr	r2, [r4, #16]
90028ee8:	6022      	str	r2, [r4, #0]
90028eea:	d504      	bpl.n	90028ef6 <__sflush_r+0x7e>
90028eec:	1c42      	adds	r2, r0, #1
90028eee:	d101      	bne.n	90028ef4 <__sflush_r+0x7c>
90028ef0:	682b      	ldr	r3, [r5, #0]
90028ef2:	b903      	cbnz	r3, 90028ef6 <__sflush_r+0x7e>
90028ef4:	6560      	str	r0, [r4, #84]	; 0x54
90028ef6:	6b61      	ldr	r1, [r4, #52]	; 0x34
90028ef8:	602f      	str	r7, [r5, #0]
90028efa:	2900      	cmp	r1, #0
90028efc:	d0c9      	beq.n	90028e92 <__sflush_r+0x1a>
90028efe:	f104 0344 	add.w	r3, r4, #68	; 0x44
90028f02:	4299      	cmp	r1, r3
90028f04:	d002      	beq.n	90028f0c <__sflush_r+0x94>
90028f06:	4628      	mov	r0, r5
90028f08:	f7ff fc96 	bl	90028838 <_free_r>
90028f0c:	2000      	movs	r0, #0
90028f0e:	6360      	str	r0, [r4, #52]	; 0x34
90028f10:	e7c0      	b.n	90028e94 <__sflush_r+0x1c>
90028f12:	2301      	movs	r3, #1
90028f14:	4628      	mov	r0, r5
90028f16:	47b0      	blx	r6
90028f18:	1c41      	adds	r1, r0, #1
90028f1a:	d1c8      	bne.n	90028eae <__sflush_r+0x36>
90028f1c:	682b      	ldr	r3, [r5, #0]
90028f1e:	2b00      	cmp	r3, #0
90028f20:	d0c5      	beq.n	90028eae <__sflush_r+0x36>
90028f22:	2b1d      	cmp	r3, #29
90028f24:	d001      	beq.n	90028f2a <__sflush_r+0xb2>
90028f26:	2b16      	cmp	r3, #22
90028f28:	d101      	bne.n	90028f2e <__sflush_r+0xb6>
90028f2a:	602f      	str	r7, [r5, #0]
90028f2c:	e7b1      	b.n	90028e92 <__sflush_r+0x1a>
90028f2e:	89a3      	ldrh	r3, [r4, #12]
90028f30:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90028f34:	81a3      	strh	r3, [r4, #12]
90028f36:	e7ad      	b.n	90028e94 <__sflush_r+0x1c>
90028f38:	690f      	ldr	r7, [r1, #16]
90028f3a:	2f00      	cmp	r7, #0
90028f3c:	d0a9      	beq.n	90028e92 <__sflush_r+0x1a>
90028f3e:	0793      	lsls	r3, r2, #30
90028f40:	680e      	ldr	r6, [r1, #0]
90028f42:	bf08      	it	eq
90028f44:	694b      	ldreq	r3, [r1, #20]
90028f46:	600f      	str	r7, [r1, #0]
90028f48:	bf18      	it	ne
90028f4a:	2300      	movne	r3, #0
90028f4c:	eba6 0807 	sub.w	r8, r6, r7
90028f50:	608b      	str	r3, [r1, #8]
90028f52:	f1b8 0f00 	cmp.w	r8, #0
90028f56:	dd9c      	ble.n	90028e92 <__sflush_r+0x1a>
90028f58:	6a21      	ldr	r1, [r4, #32]
90028f5a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
90028f5c:	4643      	mov	r3, r8
90028f5e:	463a      	mov	r2, r7
90028f60:	4628      	mov	r0, r5
90028f62:	47b0      	blx	r6
90028f64:	2800      	cmp	r0, #0
90028f66:	dc06      	bgt.n	90028f76 <__sflush_r+0xfe>
90028f68:	89a3      	ldrh	r3, [r4, #12]
90028f6a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90028f6e:	81a3      	strh	r3, [r4, #12]
90028f70:	f04f 30ff 	mov.w	r0, #4294967295
90028f74:	e78e      	b.n	90028e94 <__sflush_r+0x1c>
90028f76:	4407      	add	r7, r0
90028f78:	eba8 0800 	sub.w	r8, r8, r0
90028f7c:	e7e9      	b.n	90028f52 <__sflush_r+0xda>
90028f7e:	bf00      	nop
90028f80:	dfbffffe 	.word	0xdfbffffe

90028f84 <_fflush_r>:
90028f84:	b538      	push	{r3, r4, r5, lr}
90028f86:	690b      	ldr	r3, [r1, #16]
90028f88:	4605      	mov	r5, r0
90028f8a:	460c      	mov	r4, r1
90028f8c:	b913      	cbnz	r3, 90028f94 <_fflush_r+0x10>
90028f8e:	2500      	movs	r5, #0
90028f90:	4628      	mov	r0, r5
90028f92:	bd38      	pop	{r3, r4, r5, pc}
90028f94:	b118      	cbz	r0, 90028f9e <_fflush_r+0x1a>
90028f96:	6a03      	ldr	r3, [r0, #32]
90028f98:	b90b      	cbnz	r3, 90028f9e <_fflush_r+0x1a>
90028f9a:	f7ff f9e1 	bl	90028360 <__sinit>
90028f9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90028fa2:	2b00      	cmp	r3, #0
90028fa4:	d0f3      	beq.n	90028f8e <_fflush_r+0xa>
90028fa6:	6e62      	ldr	r2, [r4, #100]	; 0x64
90028fa8:	07d0      	lsls	r0, r2, #31
90028faa:	d404      	bmi.n	90028fb6 <_fflush_r+0x32>
90028fac:	0599      	lsls	r1, r3, #22
90028fae:	d402      	bmi.n	90028fb6 <_fflush_r+0x32>
90028fb0:	6da0      	ldr	r0, [r4, #88]	; 0x58
90028fb2:	f7ff fbd3 	bl	9002875c <__retarget_lock_acquire_recursive>
90028fb6:	4628      	mov	r0, r5
90028fb8:	4621      	mov	r1, r4
90028fba:	f7ff ff5d 	bl	90028e78 <__sflush_r>
90028fbe:	6e63      	ldr	r3, [r4, #100]	; 0x64
90028fc0:	07da      	lsls	r2, r3, #31
90028fc2:	4605      	mov	r5, r0
90028fc4:	d4e4      	bmi.n	90028f90 <_fflush_r+0xc>
90028fc6:	89a3      	ldrh	r3, [r4, #12]
90028fc8:	059b      	lsls	r3, r3, #22
90028fca:	d4e1      	bmi.n	90028f90 <_fflush_r+0xc>
90028fcc:	6da0      	ldr	r0, [r4, #88]	; 0x58
90028fce:	f7ff fbc6 	bl	9002875e <__retarget_lock_release_recursive>
90028fd2:	e7dd      	b.n	90028f90 <_fflush_r+0xc>

90028fd4 <__swhatbuf_r>:
90028fd4:	b570      	push	{r4, r5, r6, lr}
90028fd6:	460c      	mov	r4, r1
90028fd8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028fdc:	2900      	cmp	r1, #0
90028fde:	b096      	sub	sp, #88	; 0x58
90028fe0:	4615      	mov	r5, r2
90028fe2:	461e      	mov	r6, r3
90028fe4:	da0d      	bge.n	90029002 <__swhatbuf_r+0x2e>
90028fe6:	89a3      	ldrh	r3, [r4, #12]
90028fe8:	f013 0f80 	tst.w	r3, #128	; 0x80
90028fec:	f04f 0100 	mov.w	r1, #0
90028ff0:	bf0c      	ite	eq
90028ff2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
90028ff6:	2340      	movne	r3, #64	; 0x40
90028ff8:	2000      	movs	r0, #0
90028ffa:	6031      	str	r1, [r6, #0]
90028ffc:	602b      	str	r3, [r5, #0]
90028ffe:	b016      	add	sp, #88	; 0x58
90029000:	bd70      	pop	{r4, r5, r6, pc}
90029002:	466a      	mov	r2, sp
90029004:	f000 f848 	bl	90029098 <_fstat_r>
90029008:	2800      	cmp	r0, #0
9002900a:	dbec      	blt.n	90028fe6 <__swhatbuf_r+0x12>
9002900c:	9901      	ldr	r1, [sp, #4]
9002900e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
90029012:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
90029016:	4259      	negs	r1, r3
90029018:	4159      	adcs	r1, r3
9002901a:	f44f 6380 	mov.w	r3, #1024	; 0x400
9002901e:	e7eb      	b.n	90028ff8 <__swhatbuf_r+0x24>

90029020 <__smakebuf_r>:
90029020:	898b      	ldrh	r3, [r1, #12]
90029022:	b573      	push	{r0, r1, r4, r5, r6, lr}
90029024:	079d      	lsls	r5, r3, #30
90029026:	4606      	mov	r6, r0
90029028:	460c      	mov	r4, r1
9002902a:	d507      	bpl.n	9002903c <__smakebuf_r+0x1c>
9002902c:	f104 0347 	add.w	r3, r4, #71	; 0x47
90029030:	6023      	str	r3, [r4, #0]
90029032:	6123      	str	r3, [r4, #16]
90029034:	2301      	movs	r3, #1
90029036:	6163      	str	r3, [r4, #20]
90029038:	b002      	add	sp, #8
9002903a:	bd70      	pop	{r4, r5, r6, pc}
9002903c:	ab01      	add	r3, sp, #4
9002903e:	466a      	mov	r2, sp
90029040:	f7ff ffc8 	bl	90028fd4 <__swhatbuf_r>
90029044:	9900      	ldr	r1, [sp, #0]
90029046:	4605      	mov	r5, r0
90029048:	4630      	mov	r0, r6
9002904a:	f7ff f875 	bl	90028138 <_malloc_r>
9002904e:	b948      	cbnz	r0, 90029064 <__smakebuf_r+0x44>
90029050:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90029054:	059a      	lsls	r2, r3, #22
90029056:	d4ef      	bmi.n	90029038 <__smakebuf_r+0x18>
90029058:	f023 0303 	bic.w	r3, r3, #3
9002905c:	f043 0302 	orr.w	r3, r3, #2
90029060:	81a3      	strh	r3, [r4, #12]
90029062:	e7e3      	b.n	9002902c <__smakebuf_r+0xc>
90029064:	89a3      	ldrh	r3, [r4, #12]
90029066:	6020      	str	r0, [r4, #0]
90029068:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9002906c:	81a3      	strh	r3, [r4, #12]
9002906e:	9b00      	ldr	r3, [sp, #0]
90029070:	6163      	str	r3, [r4, #20]
90029072:	9b01      	ldr	r3, [sp, #4]
90029074:	6120      	str	r0, [r4, #16]
90029076:	b15b      	cbz	r3, 90029090 <__smakebuf_r+0x70>
90029078:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002907c:	4630      	mov	r0, r6
9002907e:	f000 f81d 	bl	900290bc <_isatty_r>
90029082:	b128      	cbz	r0, 90029090 <__smakebuf_r+0x70>
90029084:	89a3      	ldrh	r3, [r4, #12]
90029086:	f023 0303 	bic.w	r3, r3, #3
9002908a:	f043 0301 	orr.w	r3, r3, #1
9002908e:	81a3      	strh	r3, [r4, #12]
90029090:	89a3      	ldrh	r3, [r4, #12]
90029092:	431d      	orrs	r5, r3
90029094:	81a5      	strh	r5, [r4, #12]
90029096:	e7cf      	b.n	90029038 <__smakebuf_r+0x18>

90029098 <_fstat_r>:
90029098:	b538      	push	{r3, r4, r5, lr}
9002909a:	4d07      	ldr	r5, [pc, #28]	; (900290b8 <_fstat_r+0x20>)
9002909c:	2300      	movs	r3, #0
9002909e:	4604      	mov	r4, r0
900290a0:	4608      	mov	r0, r1
900290a2:	4611      	mov	r1, r2
900290a4:	602b      	str	r3, [r5, #0]
900290a6:	f7da fa47 	bl	90003538 <_fstat>
900290aa:	1c43      	adds	r3, r0, #1
900290ac:	d102      	bne.n	900290b4 <_fstat_r+0x1c>
900290ae:	682b      	ldr	r3, [r5, #0]
900290b0:	b103      	cbz	r3, 900290b4 <_fstat_r+0x1c>
900290b2:	6023      	str	r3, [r4, #0]
900290b4:	bd38      	pop	{r3, r4, r5, pc}
900290b6:	bf00      	nop
900290b8:	2403a334 	.word	0x2403a334

900290bc <_isatty_r>:
900290bc:	b538      	push	{r3, r4, r5, lr}
900290be:	4d06      	ldr	r5, [pc, #24]	; (900290d8 <_isatty_r+0x1c>)
900290c0:	2300      	movs	r3, #0
900290c2:	4604      	mov	r4, r0
900290c4:	4608      	mov	r0, r1
900290c6:	602b      	str	r3, [r5, #0]
900290c8:	f7da fa3c 	bl	90003544 <_isatty>
900290cc:	1c43      	adds	r3, r0, #1
900290ce:	d102      	bne.n	900290d6 <_isatty_r+0x1a>
900290d0:	682b      	ldr	r3, [r5, #0]
900290d2:	b103      	cbz	r3, 900290d6 <_isatty_r+0x1a>
900290d4:	6023      	str	r3, [r4, #0]
900290d6:	bd38      	pop	{r3, r4, r5, pc}
900290d8:	2403a334 	.word	0x2403a334

900290dc <_sbrk>:
900290dc:	4a04      	ldr	r2, [pc, #16]	; (900290f0 <_sbrk+0x14>)
900290de:	6811      	ldr	r1, [r2, #0]
900290e0:	4603      	mov	r3, r0
900290e2:	b909      	cbnz	r1, 900290e8 <_sbrk+0xc>
900290e4:	4903      	ldr	r1, [pc, #12]	; (900290f4 <_sbrk+0x18>)
900290e6:	6011      	str	r1, [r2, #0]
900290e8:	6810      	ldr	r0, [r2, #0]
900290ea:	4403      	add	r3, r0
900290ec:	6013      	str	r3, [r2, #0]
900290ee:	4770      	bx	lr
900290f0:	2403a4d4 	.word	0x2403a4d4
900290f4:	2403a4d8 	.word	0x2403a4d8

900290f8 <_init>:
900290f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900290fa:	bf00      	nop
900290fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
900290fe:	bc08      	pop	{r3}
90029100:	469e      	mov	lr, r3
90029102:	4770      	bx	lr

90029104 <_fini>:
90029104:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029106:	bf00      	nop
90029108:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002910a:	bc08      	pop	{r3}
9002910c:	469e      	mov	lr, r3
9002910e:	4770      	bx	lr
