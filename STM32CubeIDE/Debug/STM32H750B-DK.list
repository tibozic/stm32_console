
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002a420  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00003b08  9002a6c0  9002a6c0  0004a6c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000108  9002e1c8  9002e1c8  0004e1c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002e2d0  9002e2d0  00551b54  2**0
                  CONTENTS
  6 .ARM          00000000  9002e2d0  9002e2d0  00551b54  2**0
                  CONTENTS
  7 .preinit_array 00000000  9002e2d0  9002e2d0  00551b54  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000020  9002e2d0  9002e2d0  0004e2d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000010  9002e2f0  9002e2f0  0004e2f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000164  24000000  9002e300  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 CCMRAM        00005a00  24000164  9002e464  00050164  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00034ba0  24005b68  90033e64  00055b68  2**3
                  ALLOC
 13 ._user_heap_stack 00002000  2403a708  90033e64  0005a708  2**0
                  ALLOC
 14 .ARM.attributes 0000002e  00000000  00000000  00551b54  2**0
                  CONTENTS, READONLY
 15 FontFlashSection 00002210  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 00000134  90202210  90202210  00062210  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 ExtFlashSection 004ef810  90202344  90202344  00062344  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00560000  2**2
                  ALLOC
 19 Video_RGB_Buffer 00043800  d00bf400  d00bf400  00560000  2**2
                  ALLOC
 20 .comment      000000c2  00000000  00000000  00551b82  2**0
                  CONTENTS, READONLY
 21 .debug_line   00083a3f  00000000  00000000  00551c44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005c  00000000  00000000  005d5683  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_info   001428dd  00000000  00000000  005d56df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_abbrev 0001ccfb  00000000  00000000  00717fbc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_aranges 00003868  00000000  00000000  00734cb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_str    001a331c  00000000  00000000  00738520  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_rnglists 0000a2a1  00000000  00000000  008db83c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_macro  0004a3c8  00000000  00000000  008e5add  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_frame  0000b230  00000000  00000000  0092fea8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 0003f52f  00000000  00000000  0093b0d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005b68 	.word	0x24005b68
900002bc:	00000000 	.word	0x00000000
900002c0:	9002a6a8 	.word	0x9002a6a8

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005b6c 	.word	0x24005b6c
900002dc:	9002a6a8 	.word	0x9002a6a8

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 900003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000386:	e003      	b.n	90000390 <LoopCopyDataInit>

90000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000388:	4b0c      	ldr	r3, [pc, #48]	; (900003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9000038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9000038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000038e:	3104      	adds	r1, #4

90000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000390:	480b      	ldr	r0, [pc, #44]	; (900003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000392:	4b0c      	ldr	r3, [pc, #48]	; (900003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000398:	d3f6      	bcc.n	90000388 <CopyDataInit>
  ldr  r2, =_sbss
9000039a:	4a0b      	ldr	r2, [pc, #44]	; (900003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9000039c:	e002      	b.n	900003a4 <LoopFillZerobss>

9000039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
900003a0:	f842 3b04 	str.w	r3, [r2], #4

900003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900003a4:	4b09      	ldr	r3, [pc, #36]	; (900003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
900003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
900003a8:	d3f9      	bcc.n	9000039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900003aa:	f00a fa47 	bl	9000a83c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900003ae:	f029 fc89 	bl	90029cc4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900003b2:	f002 fb55 	bl	90002a60 <main>
  bx  lr    
900003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900003bc:	9002e300 	.word	0x9002e300
  ldr  r0, =_sdata
900003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900003c4:	24000164 	.word	0x24000164
  ldr  r2, =_sbss
900003c8:	24005b68 	.word	0x24005b68
  ldr  r3, = _ebss
900003cc:	2403a708 	.word	0x2403a708

900003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900003d0:	e7fe      	b.n	900003d0 <ADC3_IRQHandler>
	...

900003d4 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900003d4:	4770      	bx	lr
900003d6:	bf00      	nop

900003d8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900003d8:	4770      	bx	lr
900003da:	bf00      	nop

900003dc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900003dc:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
900003de:	f001 fed3 	bl	90002188 <touchgfx_components_init>
  touchgfx_init();
}
900003e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
900003e6:	f001 be53 	b.w	90002090 <touchgfx_init>
900003ea:	bf00      	nop

900003ec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
900003ec:	f001 bece 	b.w	9000218c <touchgfx_taskEntry>

900003f0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900003f0:	6840      	ldr	r0, [r0, #4]
    }
900003f2:	4770      	bx	lr

900003f4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900003f4:	6041      	str	r1, [r0, #4]
    }
900003f6:	4770      	bx	lr

900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900003f8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900003fc:	4b08      	ldr	r3, [pc, #32]	; (90000420 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900003fe:	4a09      	ldr	r2, [pc, #36]	; (90000424 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000400:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000404:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000408:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
9000040c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000410:	430a      	orrs	r2, r1
90000412:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000416:	681a      	ldr	r2, [r3, #0]
90000418:	f042 0201 	orr.w	r2, r2, #1
9000041c:	601a      	str	r2, [r3, #0]
}
9000041e:	4770      	bx	lr
90000420:	e0001000 	.word	0xe0001000
90000424:	c5acce55 	.word	0xc5acce55

90000428 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000428:	1a51      	subs	r1, r2, r1
9000042a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
9000042e:	fbb1 f0f3 	udiv	r0, r1, r3
90000432:	4770      	bx	lr

90000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000434:	4b01      	ldr	r3, [pc, #4]	; (9000043c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000436:	6858      	ldr	r0, [r3, #4]
}
90000438:	4770      	bx	lr
9000043a:	bf00      	nop
9000043c:	e0001000 	.word	0xe0001000

90000440 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000440:	4770      	bx	lr
90000442:	bf00      	nop

90000444 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000444:	b510      	push	{r4, lr}
90000446:	4604      	mov	r4, r0
90000448:	210c      	movs	r1, #12
9000044a:	f029 f8cb 	bl	900295e4 <_ZdlPvj>
9000044e:	4620      	mov	r0, r4
90000450:	bd10      	pop	{r4, pc}
90000452:	bf00      	nop

90000454 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000454:	6803      	ldr	r3, [r0, #0]
90000456:	4a0c      	ldr	r2, [pc, #48]	; (90000488 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000458:	691b      	ldr	r3, [r3, #16]
{
9000045a:	b510      	push	{r4, lr}
9000045c:	4604      	mov	r4, r0
    if (active) //idle task sched out
9000045e:	b149      	cbz	r1, 90000474 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000460:	4293      	cmp	r3, r2
90000462:	d10d      	bne.n	90000480 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000464:	4b09      	ldr	r3, [pc, #36]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000466:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000468:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
9000046a:	6863      	ldr	r3, [r4, #4]
9000046c:	1a9b      	subs	r3, r3, r2
9000046e:	4403      	add	r3, r0
90000470:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000472:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000474:	4293      	cmp	r3, r2
90000476:	d105      	bne.n	90000484 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000478:	4b04      	ldr	r3, [pc, #16]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000047a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
9000047c:	60a0      	str	r0, [r4, #8]
}
9000047e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000480:	4798      	blx	r3
90000482:	e7f1      	b.n	90000468 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000484:	4798      	blx	r3
90000486:	e7f9      	b.n	9000047c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000488:	90000435 	.word	0x90000435
9000048c:	e0001000 	.word	0xe0001000

90000490 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000490:	4770      	bx	lr
90000492:	bf00      	nop
90000494:	0000      	movs	r0, r0
	...

90000498 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000498:	b500      	push	{lr}
9000049a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
9000049c:	2208      	movs	r2, #8
9000049e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900004a0:	2000      	movs	r0, #0
900004a2:	4669      	mov	r1, sp
    hTS.Width = 480;
900004a4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900004c0 <_ZN20STM32TouchController4initEv+0x28>
900004a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
900004ac:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900004b0:	f00a f8d2 	bl	9000a658 <BSP_TS_Init>
}
900004b4:	b005      	add	sp, #20
900004b6:	f85d fb04 	ldr.w	pc, [sp], #4
900004ba:	bf00      	nop
900004bc:	f3af 8000 	nop.w
900004c0:	000001e0 	.word	0x000001e0
900004c4:	00000110 	.word	0x00000110

900004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
900004c8:	b530      	push	{r4, r5, lr}
900004ca:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
900004cc:	2000      	movs	r0, #0
{
900004ce:	460d      	mov	r5, r1
900004d0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
900004d2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
900004d4:	9001      	str	r0, [sp, #4]
900004d6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
900004da:	f00a f94b 	bl	9000a774 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
900004de:	9801      	ldr	r0, [sp, #4]
900004e0:	b120      	cbz	r0, 900004ec <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
900004e2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
900004e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
900004e8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
900004ea:	6023      	str	r3, [r4, #0]
    }

    return false;
}
900004ec:	b005      	add	sp, #20
900004ee:	bd30      	pop	{r4, r5, pc}

900004f0 <_ZN20STM32TouchControllerD0Ev>:
900004f0:	b510      	push	{r4, lr}
900004f2:	4604      	mov	r4, r0
900004f4:	2104      	movs	r1, #4
900004f6:	f029 f875 	bl	900295e4 <_ZdlPvj>
900004fa:	4620      	mov	r0, r4
900004fc:	bd10      	pop	{r4, pc}
900004fe:	bf00      	nop

90000500 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000500:	2108      	movs	r1, #8
90000502:	4810      	ldr	r0, [pc, #64]	; (90000544 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000504:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000506:	f00a fe9b 	bl	9000b240 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000050a:	2801      	cmp	r0, #1
9000050c:	d101      	bne.n	90000512 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
9000050e:	4b0e      	ldr	r3, [pc, #56]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000510:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000512:	2180      	movs	r1, #128	; 0x80
90000514:	480d      	ldr	r0, [pc, #52]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000516:	f00a fe93 	bl	9000b240 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000051a:	2801      	cmp	r0, #1
9000051c:	d101      	bne.n	90000522 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
9000051e:	4b0a      	ldr	r3, [pc, #40]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000520:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000522:	2140      	movs	r1, #64	; 0x40
90000524:	4809      	ldr	r0, [pc, #36]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000526:	f00a fe8b 	bl	9000b240 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000052a:	2801      	cmp	r0, #1
9000052c:	d101      	bne.n	90000532 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
9000052e:	4b06      	ldr	r3, [pc, #24]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000530:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000532:	2140      	movs	r1, #64	; 0x40
90000534:	4806      	ldr	r0, [pc, #24]	; (90000550 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000536:	f00a fe83 	bl	9000b240 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000053a:	2801      	cmp	r0, #1
9000053c:	d101      	bne.n	90000542 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
9000053e:	4b02      	ldr	r3, [pc, #8]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000540:	60d8      	str	r0, [r3, #12]
}
90000542:	bd08      	pop	{r3, pc}
90000544:	58021800 	.word	0x58021800
90000548:	24005b84 	.word	0x24005b84
9000054c:	58020400 	.word	0x58020400
90000550:	58020000 	.word	0x58020000

90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000554:	2803      	cmp	r0, #3
90000556:	d827      	bhi.n	900005a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000558:	e8df f000 	tbb	[pc, r0]
9000055c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000560:	4b12      	ldr	r3, [pc, #72]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000562:	2140      	movs	r1, #64	; 0x40
90000564:	4812      	ldr	r0, [pc, #72]	; (900005b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000566:	68da      	ldr	r2, [r3, #12]
90000568:	fab2 f282 	clz	r2, r2
9000056c:	0952      	lsrs	r2, r2, #5
9000056e:	f00a be6d 	b.w	9000b24c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000572:	4b0e      	ldr	r3, [pc, #56]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000574:	2140      	movs	r1, #64	; 0x40
90000576:	480f      	ldr	r0, [pc, #60]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000578:	689a      	ldr	r2, [r3, #8]
9000057a:	fab2 f282 	clz	r2, r2
9000057e:	0952      	lsrs	r2, r2, #5
90000580:	f00a be64 	b.w	9000b24c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000584:	4b09      	ldr	r3, [pc, #36]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000586:	2180      	movs	r1, #128	; 0x80
90000588:	480a      	ldr	r0, [pc, #40]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
9000058a:	685a      	ldr	r2, [r3, #4]
9000058c:	fab2 f282 	clz	r2, r2
90000590:	0952      	lsrs	r2, r2, #5
90000592:	f00a be5b 	b.w	9000b24c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000596:	4b05      	ldr	r3, [pc, #20]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000598:	2108      	movs	r1, #8
9000059a:	4807      	ldr	r0, [pc, #28]	; (900005b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
9000059c:	681a      	ldr	r2, [r3, #0]
9000059e:	fab2 f282 	clz	r2, r2
900005a2:	0952      	lsrs	r2, r2, #5
900005a4:	f00a be52 	b.w	9000b24c <HAL_GPIO_WritePin>
}
900005a8:	4770      	bx	lr
900005aa:	bf00      	nop
900005ac:	24005b84 	.word	0x24005b84
900005b0:	58020000 	.word	0x58020000
900005b4:	58020400 	.word	0x58020400
900005b8:	58021800 	.word	0x58021800

900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900005bc:	2803      	cmp	r0, #3
900005be:	d827      	bhi.n	90000610 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900005c0:	e8df f000 	tbb	[pc, r0]
900005c4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
900005c8:	4b12      	ldr	r3, [pc, #72]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ca:	2140      	movs	r1, #64	; 0x40
900005cc:	4812      	ldr	r0, [pc, #72]	; (90000618 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
900005ce:	68da      	ldr	r2, [r3, #12]
900005d0:	3a00      	subs	r2, #0
900005d2:	bf18      	it	ne
900005d4:	2201      	movne	r2, #1
900005d6:	f00a be39 	b.w	9000b24c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
900005da:	4b0e      	ldr	r3, [pc, #56]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005dc:	2140      	movs	r1, #64	; 0x40
900005de:	480f      	ldr	r0, [pc, #60]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005e0:	689a      	ldr	r2, [r3, #8]
900005e2:	3a00      	subs	r2, #0
900005e4:	bf18      	it	ne
900005e6:	2201      	movne	r2, #1
900005e8:	f00a be30 	b.w	9000b24c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
900005ec:	4b09      	ldr	r3, [pc, #36]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ee:	2180      	movs	r1, #128	; 0x80
900005f0:	480a      	ldr	r0, [pc, #40]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005f2:	685a      	ldr	r2, [r3, #4]
900005f4:	3a00      	subs	r2, #0
900005f6:	bf18      	it	ne
900005f8:	2201      	movne	r2, #1
900005fa:	f00a be27 	b.w	9000b24c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
900005fe:	4b05      	ldr	r3, [pc, #20]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000600:	2108      	movs	r1, #8
90000602:	4807      	ldr	r0, [pc, #28]	; (90000620 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000604:	681a      	ldr	r2, [r3, #0]
90000606:	3a00      	subs	r2, #0
90000608:	bf18      	it	ne
9000060a:	2201      	movne	r2, #1
9000060c:	f00a be1e 	b.w	9000b24c <HAL_GPIO_WritePin>
}
90000610:	4770      	bx	lr
90000612:	bf00      	nop
90000614:	24005b84 	.word	0x24005b84
90000618:	58020000 	.word	0x58020000
9000061c:	58020400 	.word	0x58020400
90000620:	58021800 	.word	0x58021800

90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000624:	2803      	cmp	r0, #3
90000626:	d813      	bhi.n	90000650 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000628:	e8df f000 	tbb	[pc, r0]
9000062c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000630:	2140      	movs	r1, #64	; 0x40
90000632:	4808      	ldr	r0, [pc, #32]	; (90000654 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000634:	f00a be0e 	b.w	9000b254 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000638:	2140      	movs	r1, #64	; 0x40
9000063a:	4807      	ldr	r0, [pc, #28]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000063c:	f00a be0a 	b.w	9000b254 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000640:	2180      	movs	r1, #128	; 0x80
90000642:	4805      	ldr	r0, [pc, #20]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000644:	f00a be06 	b.w	9000b254 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000648:	2108      	movs	r1, #8
9000064a:	4804      	ldr	r0, [pc, #16]	; (9000065c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
9000064c:	f00a be02 	b.w	9000b254 <HAL_GPIO_TogglePin>
}
90000650:	4770      	bx	lr
90000652:	bf00      	nop
90000654:	58020000 	.word	0x58020000
90000658:	58020400 	.word	0x58020400
9000065c:	58021800 	.word	0x58021800

90000660 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000660:	2000      	movs	r0, #0
90000662:	4770      	bx	lr

90000664 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000664:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000666:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
9000066a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
9000066e:	4770      	bx	lr

90000670 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000670:	2000      	movs	r0, #0
90000672:	4770      	bx	lr

90000674 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000674:	1e0a      	subs	r2, r1, #0
90000676:	4b03      	ldr	r3, [pc, #12]	; (90000684 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000678:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000067a:	bf18      	it	ne
9000067c:	2201      	movne	r2, #1
9000067e:	701a      	strb	r2, [r3, #0]
    }
90000680:	4770      	bx	lr
90000682:	bf00      	nop
90000684:	24039acb 	.word	0x24039acb

90000688 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000688:	2000      	movs	r0, #0
9000068a:	4770      	bx	lr

9000068c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
9000068c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
9000068e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000690:	b103      	cbz	r3, 90000694 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000692:	4718      	bx	r3
        }
    }
90000694:	4770      	bx	lr
90000696:	bf00      	nop

90000698 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000698:	f64f 70ff 	movw	r0, #65535	; 0xffff
9000069c:	4770      	bx	lr
9000069e:	bf00      	nop

900006a0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900006a0:	4770      	bx	lr
900006a2:	bf00      	nop

900006a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900006a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006a6:	4b09      	ldr	r3, [pc, #36]	; (900006cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900006a8:	881b      	ldrh	r3, [r3, #0]
900006aa:	428b      	cmp	r3, r1
900006ac:	d808      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900006ae:	4b08      	ldr	r3, [pc, #32]	; (900006d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900006b0:	881b      	ldrh	r3, [r3, #0]
900006b2:	4293      	cmp	r3, r2
900006b4:	d804      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900006b6:	4807      	ldr	r0, [pc, #28]	; (900006d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900006b8:	4b07      	ldr	r3, [pc, #28]	; (900006d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900006ba:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900006bc:	801a      	strh	r2, [r3, #0]
    }
900006be:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006c0:	4b06      	ldr	r3, [pc, #24]	; (900006dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900006c2:	219e      	movs	r1, #158	; 0x9e
900006c4:	4a06      	ldr	r2, [pc, #24]	; (900006e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900006c6:	4807      	ldr	r0, [pc, #28]	; (900006e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
900006c8:	f028 ffba 	bl	90029640 <__assert_func>
900006cc:	24039ac0 	.word	0x24039ac0
900006d0:	24039ac2 	.word	0x24039ac2
900006d4:	24039ac6 	.word	0x24039ac6
900006d8:	24039ac8 	.word	0x24039ac8
900006dc:	9002a740 	.word	0x9002a740
900006e0:	9002a7a4 	.word	0x9002a7a4
900006e4:	9002a7e8 	.word	0x9002a7e8

900006e8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
900006e8:	b510      	push	{r4, lr}
900006ea:	4604      	mov	r4, r0
        swapFrameBuffers();
900006ec:	f013 fa26 	bl	90013b3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900006f0:	6823      	ldr	r3, [r4, #0]
900006f2:	4620      	mov	r0, r4
900006f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
900006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
900006fc:	4718      	bx	r3
900006fe:	bf00      	nop

90000700 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000700:	f001 be3c 	b.w	9000237c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000704 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000704:	f001 be40 	b.w	90002388 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000708 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000708:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
9000070a:	f001 ff25 	bl	90002558 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000070e:	4812      	ldr	r0, [pc, #72]	; (90000758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000710:	2300      	movs	r3, #0
90000712:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000716:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
9000071a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000071e:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000722:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000726:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000072a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000072e:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000732:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000734:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000738:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000073a:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
9000073e:	1c5a      	adds	r2, r3, #1
90000740:	d1f8      	bne.n	90000734 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000742:	f1ac 0c20 	sub.w	ip, ip, #32
90000746:	f11c 0f20 	cmn.w	ip, #32
9000074a:	d1f0      	bne.n	9000072e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
9000074c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000750:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000754:	bd10      	pop	{r4, pc}
90000756:	bf00      	nop
90000758:	e000ed00 	.word	0xe000ed00

9000075c <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
9000075c:	f001 bdea 	b.w	90002334 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000760 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000760:	f001 bff8 	b.w	90002754 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000764 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000764:	f001 bfe2 	b.w	9000272c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000768 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000768:	f001 bdee 	b.w	90002348 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

9000076c <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
9000076c:	b510      	push	{r4, lr}
9000076e:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
90000770:	f012 fd60 	bl	90013234 <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
90000774:	6860      	ldr	r0, [r4, #4]
90000776:	6803      	ldr	r3, [r0, #0]
    }
90000778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
9000077c:	691b      	ldr	r3, [r3, #16]
9000077e:	4718      	bx	r3

90000780 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000780:	f012 bc2e 	b.w	90012fe0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000784 <_ZN11TouchGFXHALD0Ev>:
90000784:	b510      	push	{r4, lr}
90000786:	4604      	mov	r4, r0
90000788:	2188      	movs	r1, #136	; 0x88
9000078a:	f028 ff2b 	bl	900295e4 <_ZdlPvj>
9000078e:	4620      	mov	r0, r4
90000790:	bd10      	pop	{r4, pc}
90000792:	bf00      	nop

90000794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000794:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
90000798:	b11b      	cbz	r3, 900007a2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
9000079a:	6840      	ldr	r0, [r0, #4]
9000079c:	6803      	ldr	r3, [r0, #0]
9000079e:	681b      	ldr	r3, [r3, #0]
900007a0:	4718      	bx	r3
    }
900007a2:	4618      	mov	r0, r3
900007a4:	4770      	bx	lr
900007a6:	bf00      	nop

900007a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900007a8:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900007ac:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900007b0:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900007b2:	4b0b      	ldr	r3, [pc, #44]	; (900007e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900007b4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900007b6:	d00b      	beq.n	900007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900007b8:	b94a      	cbnz	r2, 900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900007ba:	4a0a      	ldr	r2, [pc, #40]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900007bc:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c0:	4909      	ldr	r1, [pc, #36]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900007c2:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900007c4:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c8:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
900007ca:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007cc:	8013      	strh	r3, [r2, #0]
        }
    }
900007ce:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
900007d0:	2a00      	cmp	r2, #0
900007d2:	d0fc      	beq.n	900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
900007d4:	4a03      	ldr	r2, [pc, #12]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
900007d6:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007da:	4903      	ldr	r1, [pc, #12]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
900007dc:	e7f1      	b.n	900007c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
900007de:	bf00      	nop
900007e0:	24039ac4 	.word	0x24039ac4
900007e4:	24039ac2 	.word	0x24039ac2
900007e8:	24039ac0 	.word	0x24039ac0

900007ec <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
900007ec:	6840      	ldr	r0, [r0, #4]
900007ee:	4a04      	ldr	r2, [pc, #16]	; (90000800 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
900007f0:	6803      	ldr	r3, [r0, #0]
900007f2:	699b      	ldr	r3, [r3, #24]
900007f4:	4293      	cmp	r3, r2
900007f6:	d101      	bne.n	900007fc <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
900007f8:	2000      	movs	r0, #0
900007fa:	4770      	bx	lr
        return dma.getDMAType();
900007fc:	4718      	bx	r3
900007fe:	bf00      	nop
90000800:	90000661 	.word	0x90000661

90000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000804:	b1a9      	cbz	r1, 90000832 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000806:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000808:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000080a:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000080c:	bf18      	it	ne
9000080e:	2201      	movne	r2, #1
90000810:	490c      	ldr	r1, [pc, #48]	; (90000844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000812:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000814:	6802      	ldr	r2, [r0, #0]
90000816:	490c      	ldr	r1, [pc, #48]	; (90000848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000818:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
9000081c:	428a      	cmp	r2, r1
9000081e:	d106      	bne.n	9000082e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000820:	1e19      	subs	r1, r3, #0
90000822:	4a0a      	ldr	r2, [pc, #40]	; (9000084c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000824:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000826:	bf18      	it	ne
90000828:	2101      	movne	r1, #1
9000082a:	7011      	strb	r1, [r2, #0]
9000082c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
9000082e:	4619      	mov	r1, r3
90000830:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000832:	4b07      	ldr	r3, [pc, #28]	; (90000850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000834:	f240 21d2 	movw	r1, #722	; 0x2d2
90000838:	4a06      	ldr	r2, [pc, #24]	; (90000854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
9000083a:	4807      	ldr	r0, [pc, #28]	; (90000858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
9000083c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000083e:	f028 feff 	bl	90029640 <__assert_func>
90000842:	bf00      	nop
90000844:	24039aca 	.word	0x24039aca
90000848:	90000675 	.word	0x90000675
9000084c:	24039acb 	.word	0x24039acb
90000850:	9002a830 	.word	0x9002a830
90000854:	9002a868 	.word	0x9002a868
90000858:	9002a7e8 	.word	0x9002a7e8

9000085c <_ZN11TouchGFXHAL9taskEntryEv>:
{
9000085c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
9000085e:	6803      	ldr	r3, [r0, #0]
{
90000860:	4604      	mov	r4, r0
90000862:	4d17      	ldr	r5, [pc, #92]	; (900008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000864:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000868:	4798      	blx	r3
    enableInterrupts();
9000086a:	6823      	ldr	r3, [r4, #0]
9000086c:	4620      	mov	r0, r4
9000086e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000870:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000872:	f001 f831 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000876:	6823      	ldr	r3, [r4, #0]
90000878:	4620      	mov	r0, r4
9000087a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000087c:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
9000087e:	2201      	movs	r2, #1
90000880:	2104      	movs	r1, #4
90000882:	4810      	ldr	r0, [pc, #64]	; (900008c4 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000884:	f00a fce2 	bl	9000b24c <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000888:	2201      	movs	r2, #1
9000088a:	2180      	movs	r1, #128	; 0x80
9000088c:	480e      	ldr	r0, [pc, #56]	; (900008c8 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
9000088e:	f00a fcdd 	bl	9000b24c <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000892:	2201      	movs	r2, #1
90000894:	480d      	ldr	r0, [pc, #52]	; (900008cc <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000896:	4611      	mov	r1, r2
90000898:	f00a fcd8 	bl	9000b24c <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
9000089c:	f001 f81c 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900008a0:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900008a2:	4620      	mov	r0, r4
900008a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900008a6:	42ab      	cmp	r3, r5
900008a8:	d107      	bne.n	900008ba <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900008aa:	f013 f947 	bl	90013b3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900008ae:	6823      	ldr	r3, [r4, #0]
900008b0:	4620      	mov	r0, r4
900008b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900008b6:	4798      	blx	r3
    }
900008b8:	e7f0      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008ba:	4798      	blx	r3
900008bc:	e7ee      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008be:	bf00      	nop
900008c0:	900006e9 	.word	0x900006e9
900008c4:	58020000 	.word	0x58020000
900008c8:	58020c00 	.word	0x58020c00
900008cc:	58022800 	.word	0x58022800

900008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
900008d0:	b538      	push	{r3, r4, r5, lr}
900008d2:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
900008d4:	f001 ff48 	bl	90002768 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
900008d8:	4817      	ldr	r0, [pc, #92]	; (90000938 <_ZN11TouchGFXHAL10initializeEv+0x68>)
900008da:	6823      	ldr	r3, [r4, #0]
900008dc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900008de:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900008e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
900008e4:	4285      	cmp	r5, r0
900008e6:	d119      	bne.n	9000091c <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
900008e8:	b1f9      	cbz	r1, 9000092a <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008ea:	3a00      	subs	r2, #0
900008ec:	4913      	ldr	r1, [pc, #76]	; (9000093c <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
900008ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008f2:	bf18      	it	ne
900008f4:	2201      	movne	r2, #1
900008f6:	4812      	ldr	r0, [pc, #72]	; (90000940 <_ZN11TouchGFXHAL10initializeEv+0x70>)
900008f8:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900008fa:	4912      	ldr	r1, [pc, #72]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008fc:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
900008fe:	d111      	bne.n	90000924 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000900:	4b11      	ldr	r3, [pc, #68]	; (90000948 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000902:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000904:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000906:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000908:	f104 057c 	add.w	r5, r4, #124	; 0x7c
9000090c:	4628      	mov	r0, r5
9000090e:	f7ff fd73 	bl	900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000912:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000914:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000916:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
9000091a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
9000091c:	4b09      	ldr	r3, [pc, #36]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
9000091e:	4620      	mov	r0, r4
90000920:	47a8      	blx	r5
90000922:	e7f1      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000924:	4620      	mov	r0, r4
90000926:	4798      	blx	r3
90000928:	e7ee      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000092a:	4b08      	ldr	r3, [pc, #32]	; (9000094c <_ZN11TouchGFXHAL10initializeEv+0x7c>)
9000092c:	f240 21d2 	movw	r1, #722	; 0x2d2
90000930:	4a07      	ldr	r2, [pc, #28]	; (90000950 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000932:	4808      	ldr	r0, [pc, #32]	; (90000954 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000934:	f028 fe84 	bl	90029640 <__assert_func>
90000938:	90000805 	.word	0x90000805
9000093c:	90000675 	.word	0x90000675
90000940:	24039aca 	.word	0x24039aca
90000944:	d0000000 	.word	0xd0000000
90000948:	24039acb 	.word	0x24039acb
9000094c:	9002a830 	.word	0x9002a830
90000950:	9002a868 	.word	0x9002a868
90000954:	9002a7e8 	.word	0x9002a7e8

90000958 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000958:	b508      	push	{r3, lr}
        return instance;
9000095a:	4b07      	ldr	r3, [pc, #28]	; (90000978 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
9000095c:	b128      	cbz	r0, 9000096a <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000095e:	6818      	ldr	r0, [r3, #0]
90000960:	2101      	movs	r1, #1
90000962:	f013 f905 	bl	90013b70 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000966:	2001      	movs	r0, #1
90000968:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000096a:	4601      	mov	r1, r0
9000096c:	6818      	ldr	r0, [r3, #0]
9000096e:	f013 f8ff 	bl	90013b70 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000972:	2001      	movs	r0, #1
90000974:	bd08      	pop	{r3, pc}
90000976:	bf00      	nop
90000978:	24039acc 	.word	0x24039acc

9000097c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000097c:	6940      	ldr	r0, [r0, #20]
9000097e:	4770      	bx	lr

90000980 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000980:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000984:	4770      	bx	lr
90000986:	bf00      	nop

90000988 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000988:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000098a:	b10b      	cbz	r3, 90000990 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000098c:	2001      	movs	r0, #1
}
9000098e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000990:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000992:	3800      	subs	r0, #0
90000994:	bf18      	it	ne
90000996:	2001      	movne	r0, #1
90000998:	4770      	bx	lr
9000099a:	bf00      	nop

9000099c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000099c:	6880      	ldr	r0, [r0, #8]
9000099e:	4770      	bx	lr

900009a0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
900009a0:	4770      	bx	lr
900009a2:	bf00      	nop

900009a4 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
900009a4:	3004      	adds	r0, #4
{
900009a6:	468c      	mov	ip, r1
    *data = videoInfo;
900009a8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900009aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
900009ae:	4770      	bx	lr

900009b0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
900009b0:	4770      	bx	lr
900009b2:	bf00      	nop

900009b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
900009b4:	b508      	push	{r3, lr}
    assert(0);
900009b6:	4a03      	ldr	r2, [pc, #12]	; (900009c4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900009b8:	f44f 71de 	mov.w	r1, #444	; 0x1bc
900009bc:	4b02      	ldr	r3, [pc, #8]	; (900009c8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900009be:	4803      	ldr	r0, [pc, #12]	; (900009cc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900009c0:	f028 fe3e 	bl	90029640 <__assert_func>
900009c4:	9002a994 	.word	0x9002a994
900009c8:	9002a990 	.word	0x9002a990
900009cc:	9002a9f0 	.word	0x9002a9f0

900009d0 <_ZN20HardwareMJPEGDecoderD0Ev>:
900009d0:	b510      	push	{r4, lr}
900009d2:	4604      	mov	r4, r0
900009d4:	2148      	movs	r1, #72	; 0x48
900009d6:	f028 fe05 	bl	900295e4 <_ZdlPvj>
900009da:	4620      	mov	r0, r4
900009dc:	bd10      	pop	{r4, pc}
900009de:	bf00      	nop

900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009e4:	4c4a      	ldr	r4, [pc, #296]	; (90000b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e6:	4683      	mov	fp, r0
900009e8:	461d      	mov	r5, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900009ea:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009ec:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009ee:	b083      	sub	sp, #12
      * @retval None
      */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
900009f0:	4f48      	ldr	r7, [pc, #288]	; (90000b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900009f2:	f44f 7c70 	mov.w	ip, #960	; 0x3c0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009f6:	6123      	str	r3, [r4, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900009f8:	0703      	lsls	r3, r0, #28
        JPEG_OUT_Read_BufferIndex = 0;
900009fa:	4b47      	ldr	r3, [pc, #284]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900009fc:	bf18      	it	ne
900009fe:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90000a02:	f8df a140 	ldr.w	sl, [pc, #320]	; 90000b44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a06:	4e45      	ldr	r6, [pc, #276]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a08:	bf18      	it	ne
90000a0a:	3010      	addne	r0, #16
        DMA2D_reference = dma;
90000a0c:	f8df 8138 	ldr.w	r8, [pc, #312]	; 90000b48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
90000a10:	f8df 9138 	ldr.w	r9, [pc, #312]	; 90000b4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a14:	6020      	str	r0, [r4, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a16:	0900      	lsrs	r0, r0, #4
90000a18:	60e0      	str	r0, [r4, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a1a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90000a1e:	01c0      	lsls	r0, r0, #7
90000a20:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90000a22:	2000      	movs	r0, #0
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90000a24:	f8c4 c004 	str.w	ip, [r4, #4]
        JPEG_output_is_paused = 0;
90000a28:	6038      	str	r0, [r7, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90000a2a:	6018      	str	r0, [r3, #0]
        MCU_BlockIndex = 0;
90000a2c:	4b3c      	ldr	r3, [pc, #240]	; (90000b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_OUT_Write_BufferIndex = 0;
90000a2e:	f8ca 0000 	str.w	r0, [sl]
        MCU_BlockIndex = 0;
90000a32:	6018      	str	r0, [r3, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a34:	f8db 3010 	ldr.w	r3, [fp, #16]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a38:	7030      	strb	r0, [r6, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a3a:	f003 030f 	and.w	r3, r3, #15
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a3e:	7430      	strb	r0, [r6, #16]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a40:	f1c3 0310 	rsb	r3, r3, #16
90000a44:	60a3      	str	r3, [r4, #8]
        FrameBufferAddress = output;
90000a46:	4c37      	ldr	r4, [pc, #220]	; (90000b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a48:	f8da 3000 	ldr.w	r3, [sl]
        FrameBufferAddress = output;
90000a4c:	6025      	str	r5, [r4, #0]
        JPEG_InputImageIndex = 0;
90000a4e:	4c36      	ldr	r4, [pc, #216]	; (90000b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a50:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90000a54:	4d35      	ldr	r5, [pc, #212]	; (90000b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        JPEG_InputImageIndex = 0;
90000a56:	6020      	str	r0, [r4, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000a58:	4835      	ldr	r0, [pc, #212]	; (90000b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a5a:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageAddress = (uint32_t)input;
90000a5c:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a5e:	4835      	ldr	r0, [pc, #212]	; (90000b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
90000a60:	4c35      	ldr	r4, [pc, #212]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90000a62:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a64:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000a68:	4834      	ldr	r0, [pc, #208]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000a6a:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90000b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90000a6e:	ed86 7b02 	vstr	d7, [r6, #8]
90000a72:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a76:	f00b fd19 	bl	9000c4ac <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90000a7a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90000a7e:	f8c8 3000 	str.w	r3, [r8]
  * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
  */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000a82:	682b      	ldr	r3, [r5, #0]
90000a84:	b113      	cbz	r3, 90000a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90000a86:	f8d9 3000 	ldr.w	r3, [r9]
90000a8a:	bb63      	cbnz	r3, 90000ae6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000a8c:	f8d8 0000 	ldr.w	r0, [r8]
90000a90:	7a03      	ldrb	r3, [r0, #8]
90000a92:	b92b      	cbnz	r3, 90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90000a94:	4b20      	ldr	r3, [pc, #128]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
90000a96:	681b      	ldr	r3, [r3, #0]
90000a98:	011b      	lsls	r3, r3, #4
90000a9a:	5cf3      	ldrb	r3, [r6, r3]
90000a9c:	2b01      	cmp	r3, #1
90000a9e:	d024      	beq.n	90000aea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000aa0:	683b      	ldr	r3, [r7, #0]
90000aa2:	2b01      	cmp	r3, #1
90000aa4:	d106      	bne.n	90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000aa6:	f8da 3000 	ldr.w	r3, [sl]
90000aaa:	011b      	lsls	r3, r3, #4
90000aac:	5cf3      	ldrb	r3, [r6, r3]
90000aae:	b90b      	cbnz	r3, 90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000ab0:	682b      	ldr	r3, [r5, #0]
90000ab2:	b313      	cbz	r3, 90000afa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90000ab4:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000ab6:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90000ab8:	6823      	ldr	r3, [r4, #0]
90000aba:	2b02      	cmp	r3, #2
90000abc:	d009      	beq.n	90000ad2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90000abe:	6823      	ldr	r3, [r4, #0]
90000ac0:	2b01      	cmp	r3, #1
90000ac2:	d1de      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90000ac4:	2300      	movs	r3, #0
90000ac6:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90000ac8:	f8c9 3000 	str.w	r3, [r9]
}
90000acc:	b003      	add	sp, #12
90000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90000ad2:	4b1b      	ldr	r3, [pc, #108]	; (90000b40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90000ad4:	f04f 31ff 	mov.w	r1, #4294967295
90000ad8:	6818      	ldr	r0, [r3, #0]
90000ada:	f00f f94d 	bl	9000fd78 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90000ade:	6823      	ldr	r3, [r4, #0]
90000ae0:	2b01      	cmp	r3, #1
90000ae2:	d1ce      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90000ae4:	e7ee      	b.n	90000ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90000ae6:	2301      	movs	r3, #1
90000ae8:	e7e5      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000aea:	f8d9 3000 	ldr.w	r3, [r9]
90000aee:	2b00      	cmp	r3, #0
90000af0:	d1d6      	bne.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90000af2:	6803      	ldr	r3, [r0, #0]
90000af4:	691b      	ldr	r3, [r3, #16]
90000af6:	4798      	blx	r3
90000af8:	e7d2      	b.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000afa:	2102      	movs	r1, #2
90000afc:	480f      	ldr	r0, [pc, #60]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
        JPEG_output_is_paused = 0;
90000afe:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000b00:	f00b fe1c 	bl	9000c73c <HAL_JPEG_Resume>
90000b04:	2302      	movs	r3, #2
90000b06:	e7d6      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90000b10:	24005ba0 	.word	0x24005ba0
90000b14:	24005bcc 	.word	0x24005bcc
90000b18:	24005b98 	.word	0x24005b98
90000b1c:	24000008 	.word	0x24000008
90000b20:	24005b9c 	.word	0x24005b9c
90000b24:	24005bbc 	.word	0x24005bbc
90000b28:	24005bc8 	.word	0x24005bc8
90000b2c:	24005bc4 	.word	0x24005bc4
90000b30:	24005bd0 	.word	0x24005bd0
90000b34:	24005bd4 	.word	0x24005bd4
90000b38:	24005bc0 	.word	0x24005bc0
90000b3c:	24009568 	.word	0x24009568
90000b40:	24005bdc 	.word	0x24005bdc
90000b44:	24005bd8 	.word	0x24005bd8
90000b48:	24005bb8 	.word	0x24005bb8
90000b4c:	24005b94 	.word	0x24005b94

90000b50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90000b52:	6803      	ldr	r3, [r0, #0]
90000b54:	2901      	cmp	r1, #1
90000b56:	4e2a      	ldr	r6, [pc, #168]	; (90000c00 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>)
{
90000b58:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90000b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000b5c:	bf38      	it	cc
90000b5e:	2101      	movcc	r1, #1
90000b60:	42b3      	cmp	r3, r6
90000b62:	460d      	mov	r5, r1
90000b64:	d138      	bne.n	90000bd8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x88>
    return videoInfo.number_of_frames;
90000b66:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90000b68:	4299      	cmp	r1, r3
90000b6a:	d82a      	bhi.n	90000bc2 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b6c:	1e6b      	subs	r3, r5, #1
90000b6e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90000b70:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b72:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90000b76:	b350      	cbz	r0, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90000b78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000b7a:	2b0f      	cmp	r3, #15
90000b7c:	d937      	bls.n	90000bee <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9e>
        reader->seek(offset);
90000b7e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b80:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90000b84:	68db      	ldr	r3, [r3, #12]
90000b86:	4631      	mov	r1, r6
90000b88:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000b8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000b8c:	2210      	movs	r2, #16
90000b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000b90:	6803      	ldr	r3, [r0, #0]
90000b92:	691b      	ldr	r3, [r3, #16]
90000b94:	4798      	blx	r3
90000b96:	b1b0      	cbz	r0, 90000bc6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90000b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90000b9a:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000b9c:	b1bb      	cbz	r3, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000b9e:	6b62      	ldr	r2, [r4, #52]	; 0x34
90000ba0:	7a93      	ldrb	r3, [r2, #10]
90000ba2:	7a51      	ldrb	r1, [r2, #9]
90000ba4:	041b      	lsls	r3, r3, #16
90000ba6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90000baa:	7a11      	ldrb	r1, [r2, #8]
90000bac:	7ad2      	ldrb	r2, [r2, #11]
90000bae:	430b      	orrs	r3, r1
90000bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90000bb6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb8:	3a04      	subs	r2, #4
90000bba:	441a      	add	r2, r3
90000bbc:	61a2      	str	r2, [r4, #24]
}
90000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90000bc0:	68a3      	ldr	r3, [r4, #8]
{
90000bc2:	461d      	mov	r5, r3
90000bc4:	e7d2      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90000bc6:	230d      	movs	r3, #13
90000bc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000bcc:	e7e4      	b.n	90000b98 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bce:	f107 0310 	add.w	r3, r7, #16
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000bd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90000bd4:	58d3      	ldr	r3, [r2, r3]
90000bd6:	e7ed      	b.n	90000bb4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90000bd8:	4798      	blx	r3
90000bda:	4285      	cmp	r5, r0
90000bdc:	d9c6      	bls.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90000bde:	6823      	ldr	r3, [r4, #0]
90000be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000be2:	42b3      	cmp	r3, r6
90000be4:	d0ec      	beq.n	90000bc0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90000be6:	4620      	mov	r0, r4
90000be8:	4798      	blx	r3
90000bea:	4605      	mov	r5, r0
90000bec:	e7be      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bee:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000bf0:	4b04      	ldr	r3, [pc, #16]	; (90000c04 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb4>)
90000bf2:	4a05      	ldr	r2, [pc, #20]	; (90000c08 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb8>)
90000bf4:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bf6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000bfa:	4804      	ldr	r0, [pc, #16]	; (90000c0c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xbc>)
90000bfc:	f028 fd20 	bl	90029640 <__assert_func>
90000c00:	9000099d 	.word	0x9000099d
90000c04:	9002aa40 	.word	0x9002aa40
90000c08:	9002aa54 	.word	0x9002aa54
90000c0c:	9002a9f0 	.word	0x9002a9f0

90000c10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90000c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000c14:	4604      	mov	r4, r0
    if (reader != 0)
90000c16:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90000c18:	b083      	sub	sp, #12
90000c1a:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90000c1c:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90000c1e:	2800      	cmp	r0, #0
90000c20:	f000 80ad 	beq.w	90000d7e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90000c24:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000c26:	2b07      	cmp	r3, #7
90000c28:	f240 80b0 	bls.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c2c:	6803      	ldr	r3, [r0, #0]
90000c2e:	4631      	mov	r1, r6
90000c30:	68db      	ldr	r3, [r3, #12]
90000c32:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c34:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c36:	2208      	movs	r2, #8
90000c38:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c3a:	6803      	ldr	r3, [r0, #0]
90000c3c:	691b      	ldr	r3, [r3, #16]
90000c3e:	4798      	blx	r3
90000c40:	2800      	cmp	r0, #0
90000c42:	f000 8091 	beq.w	90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c46:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90000c48:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c4a:	1d3a      	adds	r2, r7, #4
        aviBufferStartOffset = offset;
90000c4c:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000c4e:	2800      	cmp	r0, #0
90000c50:	f000 80a5 	beq.w	90000d9e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        const uint32_t index = offset - aviBufferStartOffset;
90000c54:	1b92      	subs	r2, r2, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000c56:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90000c58:	e9d4 630d 	ldrd	r6, r3, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000c5c:	18b1      	adds	r1, r6, r2
90000c5e:	5cb2      	ldrb	r2, [r6, r2]
90000c60:	788e      	ldrb	r6, [r1, #2]
90000c62:	f891 c001 	ldrb.w	ip, [r1, #1]
90000c66:	0436      	lsls	r6, r6, #16
90000c68:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90000c6c:	4316      	orrs	r6, r2
90000c6e:	78ca      	ldrb	r2, [r1, #3]
90000c70:	ea46 6602 	orr.w	r6, r6, r2, lsl #24
        if (length > aviBufferLength)
90000c74:	42b3      	cmp	r3, r6
90000c76:	f0c0 8089 	bcc.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c7a:	6803      	ldr	r3, [r0, #0]
90000c7c:	4639      	mov	r1, r7
90000c7e:	68db      	ldr	r3, [r3, #12]
90000c80:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c82:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c84:	4632      	mov	r2, r6
90000c86:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c88:	6803      	ldr	r3, [r0, #0]
90000c8a:	691b      	ldr	r3, [r3, #16]
90000c8c:	4798      	blx	r3
90000c8e:	b910      	cbnz	r0, 90000c96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000c90:	230d      	movs	r3, #13
90000c92:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90000c96:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90000c98:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90000c9a:	2d00      	cmp	r5, #0
90000c9c:	d058      	beq.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90000c9e:	4b44      	ldr	r3, [pc, #272]	; (90000db0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>)
        JPEG_output_is_paused = 0;
90000ca0:	2200      	movs	r2, #0
90000ca2:	4f44      	ldr	r7, [pc, #272]	; (90000db4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a4>)
        FrameBufferAddress = output;
90000ca4:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ca6:	4b44      	ldr	r3, [pc, #272]	; (90000db8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>)
        JPEG_output_is_paused = 0;
90000ca8:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000caa:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cac:	4d43      	ldr	r5, [pc, #268]	; (90000dbc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90000cb2:	f8df a134 	ldr.w	sl, [pc, #308]	; 90000de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
        JPEG_OUT_Read_BufferIndex = 0;
90000cb6:	f8df b134 	ldr.w	fp, [pc, #308]	; 90000dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cba:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90000cbc:	4840      	ldr	r0, [pc, #256]	; (90000dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_OUT_Read_BufferIndex = 0;
90000cbe:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc2:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90000cc4:	4b3f      	ldr	r3, [pc, #252]	; (90000dc4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        JPEG_OUT_Write_BufferIndex = 0;
90000cc6:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cca:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90000ccc:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cce:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd0:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90000cd4:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000cd6:	4a3c      	ldr	r2, [pc, #240]	; (90000dc8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd8:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90000cdc:	483b      	ldr	r0, [pc, #236]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_InputImageAddress = (uint32_t)input;
90000cde:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce0:	4a3b      	ldr	r2, [pc, #236]	; (90000dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce2:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce4:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce6:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000cea:	4e3a      	ldr	r6, [pc, #232]	; (90000dd4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
90000cec:	4c3a      	ldr	r4, [pc, #232]	; (90000dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000cee:	f8df 8100 	ldr.w	r8, [pc, #256]	; 90000df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
90000cf2:	f8df 9100 	ldr.w	r9, [pc, #256]	; 90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000cf6:	ed9f 7b2c 	vldr	d7, [pc, #176]	; 90000da8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
90000cfa:	ed85 7b02 	vstr	d7, [r5, #8]
90000cfe:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000d02:	f00b fbd3 	bl	9000c4ac <HAL_JPEG_Decode_DMA>
        return 0;
90000d06:	e017      	b.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d08:	f8d8 0000 	ldr.w	r0, [r8]
90000d0c:	7a03      	ldrb	r3, [r0, #8]
90000d0e:	b92b      	cbnz	r3, 90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90000d10:	f8db 3000 	ldr.w	r3, [fp]
90000d14:	011b      	lsls	r3, r3, #4
90000d16:	5ceb      	ldrb	r3, [r5, r3]
90000d18:	2b01      	cmp	r3, #1
90000d1a:	d01d      	beq.n	90000d58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000d1c:	683b      	ldr	r3, [r7, #0]
90000d1e:	2b01      	cmp	r3, #1
90000d20:	d106      	bne.n	90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d22:	f8da 3000 	ldr.w	r3, [sl]
90000d26:	011b      	lsls	r3, r3, #4
90000d28:	5ceb      	ldrb	r3, [r5, r3]
90000d2a:	b90b      	cbnz	r3, 90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d2c:	6833      	ldr	r3, [r6, #0]
90000d2e:	b1fb      	cbz	r3, 90000d70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90000d30:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d32:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d34:	6823      	ldr	r3, [r4, #0]
90000d36:	b95b      	cbnz	r3, 90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000d38:	6833      	ldr	r3, [r6, #0]
90000d3a:	2b00      	cmp	r3, #0
90000d3c:	d0e4      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90000d3e:	f8d9 3000 	ldr.w	r3, [r9]
90000d42:	2b00      	cmp	r3, #0
90000d44:	d0e0      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90000d46:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d48:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d4a:	6823      	ldr	r3, [r4, #0]
90000d4c:	2b00      	cmp	r3, #0
90000d4e:	d0f3      	beq.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90000d50:	2001      	movs	r0, #1
90000d52:	b003      	add	sp, #12
90000d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d58:	f8d9 3000 	ldr.w	r3, [r9]
90000d5c:	2b00      	cmp	r3, #0
90000d5e:	d1dd      	bne.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90000d60:	6803      	ldr	r3, [r0, #0]
90000d62:	691b      	ldr	r3, [r3, #16]
90000d64:	4798      	blx	r3
90000d66:	e7d9      	b.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90000d68:	230d      	movs	r3, #13
90000d6a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000d6e:	e76a      	b.n	90000c46 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d70:	2102      	movs	r1, #2
90000d72:	4816      	ldr	r0, [pc, #88]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_output_is_paused = 0;
90000d74:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d76:	f00b fce1 	bl	9000c73c <HAL_JPEG_Resume>
90000d7a:	2302      	movs	r3, #2
90000d7c:	e7d9      	b.n	90000d32 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d7e:	1d32      	adds	r2, r6, #4
    if (reader != 0)
90000d80:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000d82:	f106 0308 	add.w	r3, r6, #8
90000d86:	588e      	ldr	r6, [r1, r2]
    return movieData + offset;
90000d88:	4419      	add	r1, r3
90000d8a:	e786      	b.n	90000c9a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d8c:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000d8e:	4b13      	ldr	r3, [pc, #76]	; (90000ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
90000d90:	4a13      	ldr	r2, [pc, #76]	; (90000de0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
90000d92:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d94:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000d98:	4812      	ldr	r0, [pc, #72]	; (90000de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90000d9a:	f028 fc51 	bl	90029640 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d9e:	463e      	mov	r6, r7
90000da0:	e7ee      	b.n	90000d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90000da2:	bf00      	nop
90000da4:	f3af 8000 	nop.w
	...
90000db0:	24005bbc 	.word	0x24005bbc
90000db4:	24005bcc 	.word	0x24005bcc
90000db8:	24005ba0 	.word	0x24005ba0
90000dbc:	24000008 	.word	0x24000008
90000dc0:	24005bc8 	.word	0x24005bc8
90000dc4:	24005b9c 	.word	0x24005b9c
90000dc8:	24005bd0 	.word	0x24005bd0
90000dcc:	24009568 	.word	0x24009568
90000dd0:	24005bd4 	.word	0x24005bd4
90000dd4:	24005bc4 	.word	0x24005bc4
90000dd8:	24005bc0 	.word	0x24005bc0
90000ddc:	9002aa40 	.word	0x9002aa40
90000de0:	9002aa54 	.word	0x9002aa54
90000de4:	9002a9f0 	.word	0x9002a9f0
90000de8:	24005bd8 	.word	0x24005bd8
90000dec:	24005b98 	.word	0x24005b98
90000df0:	24005bb8 	.word	0x24005bb8
90000df4:	24005b94 	.word	0x24005b94

90000df8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000df8:	6943      	ldr	r3, [r0, #20]
{
90000dfa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000dfe:	2b00      	cmp	r3, #0
90000e00:	f000 8098 	beq.w	90000f34 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x13c>
    readData(currentMovieOffset, 8);
90000e04:	4605      	mov	r5, r0
    if (reader != 0)
90000e06:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90000e08:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90000e0a:	2800      	cmp	r0, #0
90000e0c:	f000 8082 	beq.w	90000f14 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x11c>
        if (length > aviBufferLength)
90000e10:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e12:	2b07      	cmp	r3, #7
90000e14:	f240 8083 	bls.w	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e18:	6803      	ldr	r3, [r0, #0]
90000e1a:	4621      	mov	r1, r4
90000e1c:	68db      	ldr	r3, [r3, #12]
90000e1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e20:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e22:	2208      	movs	r2, #8
90000e24:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e26:	6803      	ldr	r3, [r0, #0]
90000e28:	691b      	ldr	r3, [r3, #16]
90000e2a:	4798      	blx	r3
90000e2c:	2800      	cmp	r0, #0
90000e2e:	d06d      	beq.n	90000f0c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x114>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e30:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90000e32:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e34:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90000e36:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e38:	2800      	cmp	r0, #0
90000e3a:	d06d      	beq.n	90000f18 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x120>
        const uint32_t index = offset - aviBufferStartOffset;
90000e3c:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e3e:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90000e40:	18a1      	adds	r1, r4, r2
90000e42:	5ca2      	ldrb	r2, [r4, r2]
90000e44:	788c      	ldrb	r4, [r1, #2]
90000e46:	784e      	ldrb	r6, [r1, #1]
90000e48:	0424      	lsls	r4, r4, #16
90000e4a:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000e4e:	4314      	orrs	r4, r2
90000e50:	78ca      	ldrb	r2, [r1, #3]
90000e52:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90000e56:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000e58:	f243 0630 	movw	r6, #12336	; 0x3030
90000e5c:	e039      	b.n	90000ed2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xda>
        if (length > aviBufferLength)
90000e5e:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e60:	2b07      	cmp	r3, #7
90000e62:	d95c      	bls.n	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e64:	6803      	ldr	r3, [r0, #0]
90000e66:	4621      	mov	r1, r4
90000e68:	68db      	ldr	r3, [r3, #12]
90000e6a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e6c:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e6e:	2208      	movs	r2, #8
90000e70:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e72:	6803      	ldr	r3, [r0, #0]
90000e74:	691b      	ldr	r3, [r3, #16]
90000e76:	4798      	blx	r3
90000e78:	b908      	cbnz	r0, 90000e7e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000e7a:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90000e7e:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90000e80:	69aa      	ldr	r2, [r5, #24]
        aviBufferStartOffset = offset;
90000e82:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e84:	2800      	cmp	r0, #0
90000e86:	d053      	beq.n	90000f30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x138>
        const uint32_t index = offset - aviBufferStartOffset;
90000e88:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e8a:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e8c:	188b      	adds	r3, r1, r2
90000e8e:	5c89      	ldrb	r1, [r1, r2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e90:	799c      	ldrb	r4, [r3, #6]
90000e92:	f893 a005 	ldrb.w	sl, [r3, #5]
90000e96:	0424      	lsls	r4, r4, #16
90000e98:	f893 e004 	ldrb.w	lr, [r3, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e9c:	f893 9001 	ldrb.w	r9, [r3, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ea0:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90000ea4:	f893 c007 	ldrb.w	ip, [r3, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ea8:	f893 8003 	ldrb.w	r8, [r3, #3]
90000eac:	ea41 2109 	orr.w	r1, r1, r9, lsl #8
90000eb0:	789a      	ldrb	r2, [r3, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eb2:	ea44 040e 	orr.w	r4, r4, lr
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eb6:	ea42 2308 	orr.w	r3, r2, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eba:	ea44 640c 	orr.w	r4, r4, ip, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000ebe:	f246 3264 	movw	r2, #25444	; 0x6364
90000ec2:	42b1      	cmp	r1, r6
90000ec4:	bf08      	it	eq
90000ec6:	4293      	cmpeq	r3, r2
90000ec8:	bf0c      	ite	eq
90000eca:	2101      	moveq	r1, #1
90000ecc:	2100      	movne	r1, #0
90000ece:	d01a      	beq.n	90000f06 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x10e>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90000ed0:	69ab      	ldr	r3, [r5, #24]
90000ed2:	441c      	add	r4, r3
90000ed4:	6aab      	ldr	r3, [r5, #40]	; 0x28
90000ed6:	f104 0208 	add.w	r2, r4, #8
90000eda:	429a      	cmp	r2, r3
90000edc:	d20e      	bcs.n	90000efc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x104>
        frameNumber++;
90000ede:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee0:	3409      	adds	r4, #9
        frameNumber++;
90000ee2:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee4:	f024 0401 	bic.w	r4, r4, #1
90000ee8:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90000eec:	2800      	cmp	r0, #0
90000eee:	d1b6      	bne.n	90000e5e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x66>
        const uint8_t* const d = movieData + offset;
90000ef0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        return d[0] | (d[1] << 8);
90000ef2:	191a      	adds	r2, r3, r4
90000ef4:	5b19      	ldrh	r1, [r3, r4]
90000ef6:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000ef8:	6854      	ldr	r4, [r2, #4]
90000efa:	e7e0      	b.n	90000ebe <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xc6>
    frameNumber = 1;
90000efc:	2201      	movs	r2, #1
    currentMovieOffset = firstFrameOffset; /* start over */
90000efe:	6a2b      	ldr	r3, [r5, #32]
    return false;
90000f00:	2100      	movs	r1, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90000f02:	e9c5 2305 	strd	r2, r3, [r5, #20]
}
90000f06:	4608      	mov	r0, r1
90000f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90000f0c:	230d      	movs	r3, #13
90000f0e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90000f12:	e78d      	b.n	90000e30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x38>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f14:	1d22      	adds	r2, r4, #4
90000f16:	4623      	mov	r3, r4
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000f18:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
90000f1a:	588c      	ldr	r4, [r1, r2]
90000f1c:	e79b      	b.n	90000e56 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x5e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f1e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000f20:	4b07      	ldr	r3, [pc, #28]	; (90000f40 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x148>)
90000f22:	4a08      	ldr	r2, [pc, #32]	; (90000f44 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>)
90000f24:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f26:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90000f2a:	4807      	ldr	r0, [pc, #28]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f2c:	f028 fb88 	bl	90029640 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90000f30:	4614      	mov	r4, r2
90000f32:	e7dd      	b.n	90000ef0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xf8>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f34:	4b05      	ldr	r3, [pc, #20]	; (90000f4c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x154>)
90000f36:	21dd      	movs	r1, #221	; 0xdd
90000f38:	4a05      	ldr	r2, [pc, #20]	; (90000f50 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>)
90000f3a:	4803      	ldr	r0, [pc, #12]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f3c:	f028 fb80 	bl	90029640 <__assert_func>
90000f40:	9002aa40 	.word	0x9002aa40
90000f44:	9002aa54 	.word	0x9002aa54
90000f48:	9002a9f0 	.word	0x9002a9f0
90000f4c:	9002aa98 	.word	0x9002aa98
90000f50:	9002aae4 	.word	0x9002aae4

90000f54 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f54:	6943      	ldr	r3, [r0, #20]
{
90000f56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f5a:	2b00      	cmp	r3, #0
90000f5c:	f000 809b 	beq.w	90001096 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x142>
    readData(currentMovieOffset, 8);
90000f60:	4604      	mov	r4, r0
    if (reader != 0)
90000f62:	6b00      	ldr	r0, [r0, #48]	; 0x30
90000f64:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90000f66:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90000f68:	2800      	cmp	r0, #0
90000f6a:	d061      	beq.n	90001030 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xdc>
        if (length > aviBufferLength)
90000f6c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000f6e:	2b07      	cmp	r3, #7
90000f70:	f240 8097 	bls.w	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90000f74:	6803      	ldr	r3, [r0, #0]
90000f76:	4629      	mov	r1, r5
90000f78:	68db      	ldr	r3, [r3, #12]
90000f7a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000f7c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000f7e:	2208      	movs	r2, #8
90000f80:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000f82:	6803      	ldr	r3, [r0, #0]
90000f84:	691b      	ldr	r3, [r3, #16]
90000f86:	4798      	blx	r3
90000f88:	2800      	cmp	r0, #0
90000f8a:	d04c      	beq.n	90001026 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd2>
    if (reader != 0)
90000f8c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
90000f8e:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90000f90:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
90000f92:	2800      	cmp	r0, #0
90000f94:	d04b      	beq.n	9000102e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xda>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f96:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90000f9a:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000f9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90000f9e:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90000fa2:	1b52      	subs	r2, r2, r5
90000fa4:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fa6:	eb03 0e0c 	add.w	lr, r3, ip
90000faa:	f813 700c 	ldrb.w	r7, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fae:	eb03 0805 	add.w	r8, r3, r5
90000fb2:	f813 c005 	ldrb.w	ip, [r3, r5]
90000fb6:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fba:	f89e 8001 	ldrb.w	r8, [lr, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fbe:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fc2:	f89e 5002 	ldrb.w	r5, [lr, #2]
90000fc6:	f89e e003 	ldrb.w	lr, [lr, #3]
90000fca:	042d      	lsls	r5, r5, #16
90000fcc:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90000fd0:	433d      	orrs	r5, r7
90000fd2:	ea45 650e 	orr.w	r5, r5, lr, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fd6:	eb03 0e02 	add.w	lr, r3, r2
90000fda:	5c9b      	ldrb	r3, [r3, r2]
90000fdc:	f89e 2001 	ldrb.w	r2, [lr, #1]
90000fe0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90000fe4:	194a      	adds	r2, r1, r5
90000fe6:	6aa7      	ldr	r7, [r4, #40]	; 0x28
90000fe8:	f102 0e08 	add.w	lr, r2, #8
90000fec:	45be      	cmp	lr, r7
90000fee:	d213      	bcs.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90000ff0:	f243 0730 	movw	r7, #12336	; 0x3030
90000ff4:	45bc      	cmp	ip, r7
90000ff6:	d124      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90000ff8:	f246 3764 	movw	r7, #25444	; 0x6364
90000ffc:	42bb      	cmp	r3, r7
90000ffe:	d120      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90001000:	bb1d      	cbnz	r5, 9000104a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xf6>
            currentMovieOffset += 8;
90001002:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001004:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001006:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001008:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000100c:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000100e:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001010:	d002      	beq.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
90001012:	2001      	movs	r0, #1
}
90001014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001018:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
9000101a:	6a23      	ldr	r3, [r4, #32]
9000101c:	2000      	movs	r0, #0
9000101e:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001022:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001026:	230d      	movs	r3, #13
90001028:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000102c:	e7ae      	b.n	90000f8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
9000102e:	460d      	mov	r5, r1
        const uint8_t* const d = movieData + offset;
90001030:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        const uint8_t* const d = movieData + offset;
90001032:	4629      	mov	r1, r5
90001034:	2000      	movs	r0, #0
        return d[0] | (d[1] << 8);
90001036:	f832 c005 	ldrh.w	ip, [r2, r5]
9000103a:	442a      	add	r2, r5
9000103c:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000103e:	6855      	ldr	r5, [r2, #4]
90001040:	e7d0      	b.n	90000fe4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x90>
        currentMovieOffset += chunkSize;
90001042:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
90001044:	2d00      	cmp	r5, #0
90001046:	d1dd      	bne.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
90001048:	e7db      	b.n	90001002 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xae>
            currentMovieOffset += 8;
9000104a:	f101 0708 	add.w	r7, r1, #8
9000104e:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001050:	b1f0      	cbz	r0, 90001090 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x13c>
        if (length > aviBufferLength)
90001052:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90001054:	429d      	cmp	r5, r3
90001056:	d824      	bhi.n	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90001058:	6803      	ldr	r3, [r0, #0]
9000105a:	4639      	mov	r1, r7
9000105c:	68db      	ldr	r3, [r3, #12]
9000105e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001060:	6b20      	ldr	r0, [r4, #48]	; 0x30
90001062:	462a      	mov	r2, r5
90001064:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001066:	6803      	ldr	r3, [r0, #0]
90001068:	691b      	ldr	r3, [r3, #16]
9000106a:	4798      	blx	r3
9000106c:	b910      	cbnz	r0, 90001074 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
9000106e:	230d      	movs	r3, #13
90001070:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90001074:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001076:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001078:	b126      	cbz	r6, 90001084 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x130>
9000107a:	4633      	mov	r3, r6
9000107c:	462a      	mov	r2, r5
9000107e:	4620      	mov	r0, r4
90001080:	f7ff fcae 	bl	900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001084:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001088:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
9000108a:	442a      	add	r2, r5
            frameNumber++;
9000108c:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
9000108e:	e7b9      	b.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
    return movieData + offset;
90001090:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90001092:	4439      	add	r1, r7
90001094:	e7f0      	b.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x124>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001096:	4b07      	ldr	r3, [pc, #28]	; (900010b4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>)
90001098:	21a9      	movs	r1, #169	; 0xa9
9000109a:	4a07      	ldr	r2, [pc, #28]	; (900010b8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x164>)
9000109c:	4807      	ldr	r0, [pc, #28]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
9000109e:	f028 facf 	bl	90029640 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010a2:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900010a4:	4b06      	ldr	r3, [pc, #24]	; (900010c0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x16c>)
900010a6:	4a07      	ldr	r2, [pc, #28]	; (900010c4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x170>)
900010a8:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010aa:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
900010ae:	4803      	ldr	r0, [pc, #12]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
900010b0:	f028 fac6 	bl	90029640 <__assert_func>
900010b4:	9002aa98 	.word	0x9002aa98
900010b8:	9002ab18 	.word	0x9002ab18
900010bc:	9002a9f0 	.word	0x9002a9f0
900010c0:	9002aa40 	.word	0x9002aa40
900010c4:	9002aa54 	.word	0x9002aa54

900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010c8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010ca:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010cc:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010ce:	4b0e      	ldr	r3, [pc, #56]	; (90001108 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
900010d0:	2001      	movs	r0, #1
900010d2:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010d4:	63e2      	str	r2, [r4, #60]	; 0x3c
900010d6:	6023      	str	r3, [r4, #0]
900010d8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010dc:	e9c4 2205 	strd	r2, r2, [r4, #20]
900010e0:	e9c4 2207 	strd	r2, r2, [r4, #28]
900010e4:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010e8:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
900010ec:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
900010f0:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
900010f4:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
900010f8:	f00e fdee 	bl	9000fcd8 <osSemaphoreNew>
900010fc:	4b03      	ldr	r3, [pc, #12]	; (9000110c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
900010fe:	4602      	mov	r2, r0
}
90001100:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001102:	601a      	str	r2, [r3, #0]
}
90001104:	bd10      	pop	{r4, pc}
90001106:	bf00      	nop
90001108:	9002ac3c 	.word	0x9002ac3c
9000110c:	24005bdc 	.word	0x24005bdc

90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001114:	2100      	movs	r1, #0
    if (reader != 0)
90001116:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
90001118:	b083      	sub	sp, #12
9000111a:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000111c:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000111e:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
90001122:	2e00      	cmp	r6, #0
90001124:	f000 81aa 	beq.w	9000147c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>
        if (length > aviBufferLength)
90001128:	6b83      	ldr	r3, [r0, #56]	; 0x38
9000112a:	2b47      	cmp	r3, #71	; 0x47
9000112c:	f240 8202 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001130:	6833      	ldr	r3, [r6, #0]
90001132:	4630      	mov	r0, r6
90001134:	68db      	ldr	r3, [r3, #12]
90001136:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001138:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000113a:	2248      	movs	r2, #72	; 0x48
9000113c:	6b69      	ldr	r1, [r5, #52]	; 0x34
9000113e:	6803      	ldr	r3, [r0, #0]
90001140:	691b      	ldr	r3, [r3, #16]
90001142:	4798      	blx	r3
90001144:	2800      	cmp	r0, #0
90001146:	f000 80ce 	beq.w	900012e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
9000114a:	2300      	movs	r3, #0
    if (reader != 0)
9000114c:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000114e:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
90001150:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
90001152:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
90001154:	2e00      	cmp	r6, #0
90001156:	f000 8192 	beq.w	9000147e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000115a:	f8d5 8034 	ldr.w	r8, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000115e:	2204      	movs	r2, #4
90001160:	49be      	ldr	r1, [pc, #760]	; (9000145c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x34c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001162:	eb08 0b07 	add.w	fp, r8, r7
    return strncmp(src, str, num);
90001166:	4658      	mov	r0, fp
90001168:	f028 fcfa 	bl	90029b60 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000116c:	2800      	cmp	r0, #0
9000116e:	f040 81ea 	bne.w	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001172:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001176:	2204      	movs	r2, #4
90001178:	49b9      	ldr	r1, [pc, #740]	; (90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>)
    currentMovieOffset += 8;
9000117a:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000117c:	4440      	add	r0, r8
9000117e:	f028 fcef 	bl	90029b60 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001182:	2800      	cmp	r0, #0
90001184:	f040 81fa 	bne.w	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
90001188:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
9000118c:	2204      	movs	r2, #4
9000118e:	49b5      	ldr	r1, [pc, #724]	; (90001464 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x354>)
90001190:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
90001194:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
90001198:	f028 fce2 	bl	90029b60 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000119c:	9001      	str	r0, [sp, #4]
9000119e:	2800      	cmp	r0, #0
900011a0:	f040 81e2 	bne.w	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a4:	f89b 4012 	ldrb.w	r4, [fp, #18]
900011a8:	f89b 2011 	ldrb.w	r2, [fp, #17]
900011ac:	0424      	lsls	r4, r4, #16
900011ae:	f89b 3013 	ldrb.w	r3, [fp, #19]
900011b2:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
900011b6:	f89b 2010 	ldrb.w	r2, [fp, #16]
900011ba:	4314      	orrs	r4, r2
    assert(aviListSize);
900011bc:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
900011c0:	f000 81cb 	beq.w	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900011c4:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900011c8:	2204      	movs	r2, #4
900011ca:	49a7      	ldr	r1, [pc, #668]	; (90001468 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x358>)
900011cc:	4440      	add	r0, r8
900011ce:	f028 fcc7 	bl	90029b60 <strncmp>
    if (compare(offset, "hdrl", 4))
900011d2:	2800      	cmp	r0, #0
900011d4:	f000 808b 	beq.w	900012ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011d8:	2306      	movs	r3, #6
        foundFrame = false;
900011da:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
900011de:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011e2:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011e6:	4440      	add	r0, r8
    return strncmp(src, str, num);
900011e8:	2204      	movs	r2, #4
900011ea:	49a0      	ldr	r1, [pc, #640]	; (9000146c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
900011ec:	f028 fcb8 	bl	90029b60 <strncmp>
    if (compare(offset, "avih", 4))
900011f0:	2800      	cmp	r0, #0
900011f2:	f000 8085 	beq.w	90001300 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1f0>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
900011f6:	2307      	movs	r3, #7
900011f8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900011fc:	4454      	add	r4, sl
900011fe:	3408      	adds	r4, #8
    if (reader != 0)
90001200:	f1b9 0f00 	cmp.w	r9, #0
90001204:	d015      	beq.n	90001232 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
90001206:	6bab      	ldr	r3, [r5, #56]	; 0x38
90001208:	2b0b      	cmp	r3, #11
9000120a:	f240 8193 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
9000120e:	f8d9 3000 	ldr.w	r3, [r9]
90001212:	4621      	mov	r1, r4
90001214:	4648      	mov	r0, r9
90001216:	68db      	ldr	r3, [r3, #12]
90001218:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000121a:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000121c:	220c      	movs	r2, #12
9000121e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001220:	6803      	ldr	r3, [r0, #0]
90001222:	691b      	ldr	r3, [r3, #16]
90001224:	4798      	blx	r3
90001226:	b910      	cbnz	r0, 9000122e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
90001228:	230d      	movs	r3, #13
9000122a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
9000122e:	6b2e      	ldr	r6, [r5, #48]	; 0x30
90001230:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
90001232:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
90001236:	4f8e      	ldr	r7, [pc, #568]	; (90001470 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001238:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
9000123c:	2e00      	cmp	r6, #0
9000123e:	d041      	beq.n	900012c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001240:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
90001242:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001244:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
90001246:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001248:	eba8 0303 	sub.w	r3, r8, r3
9000124c:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000124e:	f028 fc87 	bl	90029b60 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001252:	2800      	cmp	r0, #0
90001254:	d03e      	beq.n	900012d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
90001256:	f1b9 0f00 	cmp.w	r9, #0
9000125a:	d13e      	bne.n	900012da <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
9000125c:	6aab      	ldr	r3, [r5, #40]	; 0x28
9000125e:	42a3      	cmp	r3, r4
90001260:	f240 80a7 	bls.w	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001264:	3404      	adds	r4, #4
    if (reader != 0)
90001266:	2e00      	cmp	r6, #0
90001268:	d046      	beq.n	900012f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
9000126a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
9000126c:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001270:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
90001272:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001274:	eb01 0204 	add.w	r2, r1, r4
90001278:	5d09      	ldrb	r1, [r1, r4]
9000127a:	7894      	ldrb	r4, [r2, #2]
9000127c:	7850      	ldrb	r0, [r2, #1]
9000127e:	ea4f 4404 	mov.w	r4, r4, lsl #16
90001282:	78d2      	ldrb	r2, [r2, #3]
90001284:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001288:	ea44 0401 	orr.w	r4, r4, r1
9000128c:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
90001290:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001292:	f240 814f 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001296:	6833      	ldr	r3, [r6, #0]
90001298:	4621      	mov	r1, r4
9000129a:	4630      	mov	r0, r6
9000129c:	68db      	ldr	r3, [r3, #12]
9000129e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900012a0:	6b28      	ldr	r0, [r5, #48]	; 0x30
900012a2:	220c      	movs	r2, #12
900012a4:	6b69      	ldr	r1, [r5, #52]	; 0x34
900012a6:	6803      	ldr	r3, [r0, #0]
900012a8:	691b      	ldr	r3, [r3, #16]
900012aa:	4798      	blx	r3
900012ac:	b910      	cbnz	r0, 900012b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
900012ae:	230d      	movs	r3, #13
900012b0:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012b4:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012b6:	f104 0808 	add.w	r8, r4, #8
900012ba:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012be:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900012c0:	2e00      	cmp	r6, #0
900012c2:	d1bd      	bne.n	90001240 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
900012c4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
900012c6:	2204      	movs	r2, #4
900012c8:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
900012ca:	4440      	add	r0, r8
    return strncmp(src, str, num);
900012cc:	f028 fc48 	bl	90029b60 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012d0:	2800      	cmp	r0, #0
900012d2:	d1c0      	bne.n	90001256 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
900012d4:	f1b9 0f00 	cmp.w	r9, #0
900012d8:	d06b      	beq.n	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900012da:	230a      	movs	r3, #10
900012dc:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900012e0:	b003      	add	sp, #12
900012e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012e6:	230d      	movs	r3, #13
900012e8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900012ec:	e72d      	b.n	9000114a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
900012ee:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900012f2:	f04f 0b01 	mov.w	fp, #1
900012f6:	e776      	b.n	900011e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        listOffset += listSize;
900012f8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900012fa:	591c      	ldr	r4, [r3, r4]
900012fc:	4444      	add	r4, r8
    return movieData + offset;
900012fe:	e79b      	b.n	90001238 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
90001300:	f1bb 0f00 	cmp.w	fp, #0
90001304:	f43f af7a 	beq.w	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001308:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
9000130c:	f1b9 0f00 	cmp.w	r9, #0
90001310:	f000 80f4 	beq.w	900014fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3ec>
        const uint32_t index = offset - aviBufferStartOffset;
90001314:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001316:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001318:	1ac9      	subs	r1, r1, r3
9000131a:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000131e:	f8df c158 	ldr.w	ip, [pc, #344]	; 90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001322:	f812 8001 	ldrb.w	r8, [r2, r1]
90001326:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
9000132a:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
9000132e:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
90001332:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001334:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
90001338:	4439      	add	r1, r7
9000133a:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000133c:	f89e 3002 	ldrb.w	r3, [lr, #2]
90001340:	f89e e003 	ldrb.w	lr, [lr, #3]
90001344:	041b      	lsls	r3, r3, #16
90001346:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
9000134a:	ea43 0308 	orr.w	r3, r3, r8
9000134e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001352:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001356:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000135a:	099b      	lsrs	r3, r3, #6
9000135c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000135e:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001362:	f89c 8001 	ldrb.w	r8, [ip, #1]
90001366:	041b      	lsls	r3, r3, #16
90001368:	f812 e000 	ldrb.w	lr, [r2, r0]
9000136c:	f89c c003 	ldrb.w	ip, [ip, #3]
90001370:	1850      	adds	r0, r2, r1
90001372:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001376:	ea43 030e 	orr.w	r3, r3, lr
9000137a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000137e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001380:	7883      	ldrb	r3, [r0, #2]
90001382:	f890 c001 	ldrb.w	ip, [r0, #1]
90001386:	041b      	lsls	r3, r3, #16
90001388:	5c51      	ldrb	r1, [r2, r1]
9000138a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000138e:	430b      	orrs	r3, r1
90001390:	78c1      	ldrb	r1, [r0, #3]
90001392:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001396:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001398:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000139a:	788b      	ldrb	r3, [r1, #2]
9000139c:	7848      	ldrb	r0, [r1, #1]
9000139e:	041b      	lsls	r3, r3, #16
900013a0:	5dd2      	ldrb	r2, [r2, r7]
900013a2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900013a6:	4313      	orrs	r3, r2
900013a8:	78ca      	ldrb	r2, [r1, #3]
900013aa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900013ae:	612b      	str	r3, [r5, #16]
900013b0:	e724      	b.n	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b2:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013b6:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b8:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
900013ba:	2e00      	cmp	r6, #0
900013bc:	f000 80b2 	beq.w	90001524 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
        const uint32_t index = offset - aviBufferStartOffset;
900013c0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
900013c2:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
900013c4:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c8:	f104 0c02 	add.w	ip, r4, #2
900013cc:	1c67      	adds	r7, r4, #1
900013ce:	f811 e004 	ldrb.w	lr, [r1, r4]
900013d2:	1ce0      	adds	r0, r4, #3
900013d4:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
900013d8:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013da:	f811 9007 	ldrb.w	r9, [r1, r7]
900013de:	ea4f 4303 	mov.w	r3, r3, lsl #16
900013e2:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900013e6:	ea43 030e 	orr.w	r3, r3, lr
900013ea:	f811 e000 	ldrb.w	lr, [r1, r0]
900013ee:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013f2:	4443      	add	r3, r8
900013f4:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013f6:	f811 300c 	ldrb.w	r3, [r1, ip]
900013fa:	f811 c007 	ldrb.w	ip, [r1, r7]
900013fe:	5d0f      	ldrb	r7, [r1, r4]
90001400:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001404:	5c09      	ldrb	r1, [r1, r0]
90001406:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
9000140a:	ea44 0407 	orr.w	r4, r4, r7
9000140e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001412:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001414:	f240 808e 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001418:	6833      	ldr	r3, [r6, #0]
9000141a:	4621      	mov	r1, r4
9000141c:	4630      	mov	r0, r6
9000141e:	68db      	ldr	r3, [r3, #12]
90001420:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001422:	6b28      	ldr	r0, [r5, #48]	; 0x30
90001424:	2204      	movs	r2, #4
90001426:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001428:	6803      	ldr	r3, [r0, #0]
9000142a:	691b      	ldr	r3, [r3, #16]
9000142c:	4798      	blx	r3
9000142e:	2800      	cmp	r0, #0
90001430:	d05a      	beq.n	900014e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d8>
    if (reader != 0)
90001432:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
90001434:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90001436:	2b00      	cmp	r3, #0
90001438:	f000 80aa 	beq.w	90001590 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x480>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000143c:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000143e:	2204      	movs	r2, #4
90001440:	490c      	ldr	r1, [pc, #48]	; (90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
90001442:	f028 fb8d 	bl	90029b60 <strncmp>
    if (!compare(listOffset, "idx1", 4))
90001446:	2800      	cmp	r0, #0
90001448:	d166      	bne.n	90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
    frameNumber = 1; /* next frame number is 1 */
9000144a:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
9000144c:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
9000144e:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001450:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001452:	622b      	str	r3, [r5, #32]
}
90001454:	b003      	add	sp, #12
90001456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000145a:	bf00      	nop
9000145c:	9002ab74 	.word	0x9002ab74
90001460:	9002ac2c 	.word	0x9002ac2c
90001464:	9002ac24 	.word	0x9002ac24
90001468:	9002ac1c 	.word	0x9002ac1c
9000146c:	9002ac04 	.word	0x9002ac04
90001470:	9002ac0c 	.word	0x9002ac0c
90001474:	9002ac14 	.word	0x9002ac14
90001478:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000147c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000147e:	f8d5 802c 	ldr.w	r8, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001482:	2204      	movs	r2, #4
90001484:	4944      	ldr	r1, [pc, #272]	; (90001598 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x488>)
        src = (const char*)movieData + offset;
90001486:	eb08 0407 	add.w	r4, r8, r7
    return strncmp(src, str, num);
9000148a:	4620      	mov	r0, r4
9000148c:	f028 fb68 	bl	90029b60 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001490:	2800      	cmp	r0, #0
90001492:	d158      	bne.n	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001494:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001498:	2204      	movs	r2, #4
9000149a:	4940      	ldr	r1, [pc, #256]	; (9000159c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x48c>)
    currentMovieOffset += 8;
9000149c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000149e:	4440      	add	r0, r8
900014a0:	f028 fb5e 	bl	90029b60 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900014a4:	2800      	cmp	r0, #0
900014a6:	d169      	bne.n	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
900014a8:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
900014ac:	2204      	movs	r2, #4
900014ae:	493c      	ldr	r1, [pc, #240]	; (900015a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x490>)
900014b0:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
900014b4:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
900014b8:	f028 fb52 	bl	90029b60 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900014bc:	4683      	mov	fp, r0
900014be:	2800      	cmp	r0, #0
900014c0:	d152      	bne.n	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
900014c2:	6924      	ldr	r4, [r4, #16]
    assert(aviListSize);
900014c4:	2c00      	cmp	r4, #0
900014c6:	d048      	beq.n	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900014c8:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900014cc:	2204      	movs	r2, #4
900014ce:	4935      	ldr	r1, [pc, #212]	; (900015a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x494>)
900014d0:	4440      	add	r0, r8
900014d2:	f028 fb45 	bl	90029b60 <strncmp>
    if (compare(offset, "hdrl", 4))
900014d6:	b958      	cbnz	r0, 900014f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3e0>
    offset += 4;
900014d8:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014dc:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900014e0:	4440      	add	r0, r8
900014e2:	f04f 0900 	mov.w	r9, #0
900014e6:	e67f      	b.n	900011e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900014e8:	230d      	movs	r3, #13
900014ea:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900014ee:	e7a0      	b.n	90001432 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x322>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f0:	2306      	movs	r3, #6
    offset += 4;
900014f2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
900014fa:	e7f1      	b.n	900014e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d0>
900014fc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900014fe:	585a      	ldr	r2, [r3, r1]
90001500:	443b      	add	r3, r7
90001502:	4929      	ldr	r1, [pc, #164]	; (900015a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x498>)
90001504:	fba1 1202 	umull	r1, r2, r1, r2
90001508:	0992      	lsrs	r2, r2, #6
9000150a:	606a      	str	r2, [r5, #4]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
        videoInfo.number_of_frames = getU32(offset + 16);
9000150e:	60aa      	str	r2, [r5, #8]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001510:	6c1a      	ldr	r2, [r3, #64]	; 0x40
        videoInfo.frame_width = getU32(offset + 32);
90001512:	60ea      	str	r2, [r5, #12]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001516:	e74a      	b.n	900013ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29e>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001518:	230b      	movs	r3, #11
9000151a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000151e:	b003      	add	sp, #12
90001520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90001524:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001526:	5903      	ldr	r3, [r0, r4]
90001528:	4443      	add	r3, r8
9000152a:	626b      	str	r3, [r5, #36]	; 0x24
    listOffset += listSize;
9000152c:	5904      	ldr	r4, [r0, r4]
9000152e:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
90001530:	4420      	add	r0, r4
90001532:	e784      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001534:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001536:	4b1d      	ldr	r3, [pc, #116]	; (900015ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x49c>)
90001538:	4a1d      	ldr	r2, [pc, #116]	; (900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a0>)
9000153a:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000153c:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90001540:	481c      	ldr	r0, [pc, #112]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001542:	f028 f87d 	bl	90029640 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
90001546:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001548:	4b1b      	ldr	r3, [pc, #108]	; (900015b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
9000154a:	4a1c      	ldr	r2, [pc, #112]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000154c:	f240 1125 	movw	r1, #293	; 0x125
        lastError = AVI_ERROR_NOT_RIFF;
90001550:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
90001554:	4817      	ldr	r0, [pc, #92]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001556:	f028 f873 	bl	90029640 <__assert_func>
    assert(aviListSize);
9000155a:	4b19      	ldr	r3, [pc, #100]	; (900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
9000155c:	f44f 719d 	mov.w	r1, #314	; 0x13a
90001560:	4a16      	ldr	r2, [pc, #88]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001562:	4814      	ldr	r0, [pc, #80]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001564:	f028 f86c 	bl	90029640 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001568:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
9000156a:	4b16      	ldr	r3, [pc, #88]	; (900015c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b4>)
9000156c:	4a13      	ldr	r2, [pc, #76]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000156e:	f44f 719a 	mov.w	r1, #308	; 0x134
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001572:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
90001576:	480f      	ldr	r0, [pc, #60]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001578:	f028 f862 	bl	90029640 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
9000157c:	2004      	movs	r0, #4
        assert(!"AVI header not found");
9000157e:	4b12      	ldr	r3, [pc, #72]	; (900015c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b8>)
90001580:	4a0e      	ldr	r2, [pc, #56]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001582:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001586:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
9000158a:	480a      	ldr	r0, [pc, #40]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
9000158c:	f028 f858 	bl	90029640 <__assert_func>
        src = (const char*)movieData + offset;
90001590:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90001592:	4420      	add	r0, r4
90001594:	e753      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
90001596:	bf00      	nop
90001598:	9002ab74 	.word	0x9002ab74
9000159c:	9002ac2c 	.word	0x9002ac2c
900015a0:	9002ac24 	.word	0x9002ac24
900015a4:	9002ac1c 	.word	0x9002ac1c
900015a8:	10624dd3 	.word	0x10624dd3
900015ac:	9002aa40 	.word	0x9002aa40
900015b0:	9002aa54 	.word	0x9002aa54
900015b4:	9002a9f0 	.word	0x9002a9f0
900015b8:	9002ab7c 	.word	0x9002ab7c
900015bc:	9002ab98 	.word	0x9002ab98
900015c0:	9002abf8 	.word	0x9002abf8
900015c4:	9002abe0 	.word	0x9002abe0
900015c8:	9002abc8 	.word	0x9002abc8

900015cc <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900015cc:	b410      	push	{r4}
    reader = 0; /* not using reader */
900015ce:	2400      	movs	r4, #0
    movieLength = length;
900015d0:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
900015d4:	6304      	str	r4, [r0, #48]	; 0x30
}
900015d6:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900015da:	f7ff bd99 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900015de:	bf00      	nop

900015e0 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900015e0:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900015e2:	680b      	ldr	r3, [r1, #0]
{
900015e4:	4604      	mov	r4, r0
    movieData = 0;
900015e6:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900015e8:	4608      	mov	r0, r1
900015ea:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900015ec:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
900015f0:	4798      	blx	r3
900015f2:	4603      	mov	r3, r0
    readVideoHeader();
900015f4:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900015f6:	62a3      	str	r3, [r4, #40]	; 0x28
}
900015f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
900015fc:	f7ff bd88 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001600 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001600:	684b      	ldr	r3, [r1, #4]
90001602:	2b01      	cmp	r3, #1
90001604:	d015      	beq.n	90001632 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001606:	2b02      	cmp	r3, #2
90001608:	d00b      	beq.n	90001622 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
9000160a:	b94b      	cbnz	r3, 90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
9000160c:	68cb      	ldr	r3, [r1, #12]
9000160e:	0758      	lsls	r0, r3, #29
90001610:	d124      	bne.n	9000165c <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
90001612:	688b      	ldr	r3, [r1, #8]
90001614:	075a      	lsls	r2, r3, #29
90001616:	d003      	beq.n	90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001618:	f023 0307 	bic.w	r3, r3, #7
9000161c:	3308      	adds	r3, #8
9000161e:	608b      	str	r3, [r1, #8]
    }
90001620:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001622:	68cb      	ldr	r3, [r1, #12]
90001624:	071a      	lsls	r2, r3, #28
90001626:	d0f4      	beq.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001628:	f023 030f 	bic.w	r3, r3, #15
9000162c:	3310      	adds	r3, #16
9000162e:	60cb      	str	r3, [r1, #12]
90001630:	e7ef      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001632:	68cb      	ldr	r3, [r1, #12]
90001634:	071a      	lsls	r2, r3, #28
90001636:	d003      	beq.n	90001640 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001638:	f023 030f 	bic.w	r3, r3, #15
9000163c:	3310      	adds	r3, #16
9000163e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001640:	688a      	ldr	r2, [r1, #8]
90001642:	0710      	lsls	r0, r2, #28
90001644:	d003      	beq.n	9000164e <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001646:	f022 020f 	bic.w	r2, r2, #15
9000164a:	3210      	adds	r2, #16
9000164c:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
9000164e:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
90001650:	4905      	ldr	r1, [pc, #20]	; (90001668 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
90001652:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
90001654:	fb02 f303 	mul.w	r3, r2, r3
90001658:	600b      	str	r3, [r1, #0]
9000165a:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
9000165c:	f023 0307 	bic.w	r3, r3, #7
90001660:	3308      	adds	r3, #8
90001662:	60cb      	str	r3, [r1, #12]
90001664:	e7d5      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
90001666:	bf00      	nop
90001668:	24005bb4 	.word	0x24005bb4

9000166c <HAL_JPEG_GetDataCallback>:
    {
9000166c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
9000166e:	4c0c      	ldr	r4, [pc, #48]	; (900016a0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001670:	4a0c      	ldr	r2, [pc, #48]	; (900016a4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001672:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001674:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001676:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001678:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
9000167a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
9000167c:	d302      	bcc.n	90001684 <HAL_JPEG_GetDataCallback+0x18>
    }
9000167e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001682:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001684:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001686:	4b08      	ldr	r3, [pc, #32]	; (900016a8 <HAL_JPEG_GetDataCallback+0x3c>)
90001688:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000168a:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000168e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001690:	bf28      	it	cs
90001692:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
90001696:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000169a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000169c:	f00a bf80 	b.w	9000c5a0 <HAL_JPEG_ConfigInputBuffer>
900016a0:	24005bc8 	.word	0x24005bc8
900016a4:	24005bd4 	.word	0x24005bd4
900016a8:	24005bd0 	.word	0x24005bd0

900016ac <HAL_JPEG_DataReadyCallback>:
    {
900016ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ae:	4c22      	ldr	r4, [pc, #136]	; (90001738 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
900016b0:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016b2:	4d22      	ldr	r5, [pc, #136]	; (9000173c <HAL_JPEG_DataReadyCallback+0x90>)
900016b4:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016b6:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
900016b8:	4921      	ldr	r1, [pc, #132]	; (90001740 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ba:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016bc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016c0:	4f20      	ldr	r7, [pc, #128]	; (90001744 <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
900016c2:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016c6:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016c8:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016ca:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016cc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
900016d0:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016d4:	6808      	ldr	r0, [r1, #0]
900016d6:	4410      	add	r0, r2
900016d8:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
900016da:	6821      	ldr	r1, [r4, #0]
900016dc:	3101      	adds	r1, #1
900016de:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016e0:	2101      	movs	r1, #1
900016e2:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900016e4:	6823      	ldr	r3, [r4, #0]
900016e6:	428b      	cmp	r3, r1
900016e8:	d901      	bls.n	900016ee <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
900016ea:	2300      	movs	r3, #0
900016ec:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
900016ee:	6823      	ldr	r3, [r4, #0]
900016f0:	011b      	lsls	r3, r3, #4
900016f2:	5ceb      	ldrb	r3, [r5, r3]
900016f4:	b983      	cbnz	r3, 90001718 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900016f6:	6823      	ldr	r3, [r4, #0]
900016f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900016fc:	4630      	mov	r0, r6
900016fe:	eb05 1503 	add.w	r5, r5, r3, lsl #4
90001702:	01d2      	lsls	r2, r2, #7
90001704:	6869      	ldr	r1, [r5, #4]
90001706:	f00a ff4f 	bl	9000c5a8 <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
9000170a:	4b0f      	ldr	r3, [pc, #60]	; (90001748 <HAL_JPEG_DataReadyCallback+0x9c>)
9000170c:	681b      	ldr	r3, [r3, #0]
9000170e:	7a1a      	ldrb	r2, [r3, #8]
90001710:	b90a      	cbnz	r2, 90001716 <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
90001712:	7a9b      	ldrb	r3, [r3, #10]
90001714:	b14b      	cbz	r3, 9000172a <HAL_JPEG_DataReadyCallback+0x7e>
    }
90001716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001718:	2102      	movs	r1, #2
9000171a:	4630      	mov	r0, r6
9000171c:	f00a ff08 	bl	9000c530 <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
90001720:	4b0a      	ldr	r3, [pc, #40]	; (9000174c <HAL_JPEG_DataReadyCallback+0xa0>)
90001722:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001724:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
90001726:	6019      	str	r1, [r3, #0]
90001728:	e7e5      	b.n	900016f6 <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
9000172a:	4b09      	ldr	r3, [pc, #36]	; (90001750 <HAL_JPEG_DataReadyCallback+0xa4>)
9000172c:	6818      	ldr	r0, [r3, #0]
    }
9000172e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
90001732:	f00e bb55 	b.w	9000fde0 <osSemaphoreRelease>
90001736:	bf00      	nop
90001738:	24005bd8 	.word	0x24005bd8
9000173c:	24000008 	.word	0x24000008
90001740:	24005b9c 	.word	0x24005b9c
90001744:	24005ba0 	.word	0x24005ba0
90001748:	24005bb8 	.word	0x24005bb8
9000174c:	24005bcc 	.word	0x24005bcc
90001750:	24005bdc 	.word	0x24005bdc

90001754 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90001754:	b672      	cpsid	i
        while (1)
90001756:	e7fe      	b.n	90001756 <HAL_JPEG_ErrorCallback+0x2>

90001758 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90001758:	4b01      	ldr	r3, [pc, #4]	; (90001760 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000175a:	2201      	movs	r2, #1
9000175c:	601a      	str	r2, [r3, #0]
    }
9000175e:	4770      	bx	lr
90001760:	24005bc4 	.word	0x24005bc4

90001764 <DMA2D_CopyBuffer>:
  * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
  * @param job: External job reference
  * @retval None
  */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90001764:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001766:	491b      	ldr	r1, [pc, #108]	; (900017d4 <DMA2D_CopyBuffer+0x70>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001768:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176a:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000176c:	4c1a      	ldr	r4, [pc, #104]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176e:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001770:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001772:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001774:	4e19      	ldr	r6, [pc, #100]	; (900017dc <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001776:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
9000177a:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000177e:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001780:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001782:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001786:	68cb      	ldr	r3, [r1, #12]
90001788:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000178c:	690e      	ldr	r6, [r1, #16]
9000178e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001792:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001794:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001798:	d316      	bcc.n	900017c8 <DMA2D_CopyBuffer+0x64>
    {
        WRITE_REG(DMA2D->NLR, (JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
9000179a:	6889      	ldr	r1, [r1, #8]
9000179c:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
900017a0:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017a2:	490f      	ldr	r1, [pc, #60]	; (900017e0 <DMA2D_CopyBuffer+0x7c>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017a4:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017a8:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
900017aa:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017ac:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017ae:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017b0:	4411      	add	r1, r2
900017b2:	4a09      	ldr	r2, [pc, #36]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
900017b4:	4461      	add	r1, ip
900017b6:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017b8:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017ba:	490a      	ldr	r1, [pc, #40]	; (900017e4 <DMA2D_CopyBuffer+0x80>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017bc:	4b0a      	ldr	r3, [pc, #40]	; (900017e8 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGOR, 0);
900017be:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017c0:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017c2:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017c4:	6013      	str	r3, [r2, #0]
}
900017c6:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
900017c8:	0519      	lsls	r1, r3, #20
900017ca:	f041 0110 	orr.w	r1, r1, #16
900017ce:	6461      	str	r1, [r4, #68]	; 0x44
900017d0:	e7e7      	b.n	900017a2 <DMA2D_CopyBuffer+0x3e>
900017d2:	bf00      	nop
900017d4:	24005ba0 	.word	0x24005ba0
900017d8:	52001000 	.word	0x52001000
900017dc:	24005bb4 	.word	0x24005bb4
900017e0:	24005bbc 	.word	0x24005bbc
900017e4:	ff09000b 	.word	0xff09000b
900017e8:	00010201 	.word	0x00010201

900017ec <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
900017ec:	4b0c      	ldr	r3, [pc, #48]	; (90001820 <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
900017ee:	2100      	movs	r1, #0
900017f0:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
900017f2:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
900017f4:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
900017f6:	3201      	adds	r2, #1
900017f8:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900017fa:	681a      	ldr	r2, [r3, #0]
900017fc:	2a01      	cmp	r2, #1
900017fe:	d900      	bls.n	90001802 <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90001800:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001802:	4b08      	ldr	r3, [pc, #32]	; (90001824 <DMA2D_ExternalJobCompleted+0x38>)
90001804:	4908      	ldr	r1, [pc, #32]	; (90001828 <DMA2D_ExternalJobCompleted+0x3c>)
90001806:	681b      	ldr	r3, [r3, #0]
90001808:	68c9      	ldr	r1, [r1, #12]
9000180a:	68c2      	ldr	r2, [r0, #12]
9000180c:	1a5b      	subs	r3, r3, r1
9000180e:	429a      	cmp	r2, r3
90001810:	d302      	bcc.n	90001818 <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90001812:	4b06      	ldr	r3, [pc, #24]	; (9000182c <DMA2D_ExternalJobCompleted+0x40>)
90001814:	2201      	movs	r2, #1
90001816:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
90001818:	4b05      	ldr	r3, [pc, #20]	; (90001830 <DMA2D_ExternalJobCompleted+0x44>)
9000181a:	6818      	ldr	r0, [r3, #0]
9000181c:	f00e bae0 	b.w	9000fde0 <osSemaphoreRelease>
90001820:	24005b98 	.word	0x24005b98
90001824:	24005bb4 	.word	0x24005bb4
90001828:	24005ba0 	.word	0x24005ba0
9000182c:	24005b94 	.word	0x24005b94
90001830:	24005bdc 	.word	0x24005bdc

90001834 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001834:	2101      	movs	r1, #1
90001836:	2200      	movs	r2, #0
{
90001838:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000183a:	4608      	mov	r0, r1
9000183c:	f00e fa4c 	bl	9000fcd8 <osSemaphoreNew>
90001840:	4b0b      	ldr	r3, [pc, #44]	; (90001870 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90001842:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001844:	b140      	cbz	r0, 90001858 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90001846:	2200      	movs	r2, #0
90001848:	2104      	movs	r1, #4
9000184a:	2001      	movs	r0, #1
9000184c:	f00e faf4 	bl	9000fe38 <osMessageQueueNew>
90001850:	4b08      	ldr	r3, [pc, #32]	; (90001874 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90001852:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001854:	b130      	cbz	r0, 90001864 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90001856:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001858:	4b07      	ldr	r3, [pc, #28]	; (90001878 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000185a:	2128      	movs	r1, #40	; 0x28
9000185c:	4a07      	ldr	r2, [pc, #28]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000185e:	4808      	ldr	r0, [pc, #32]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90001860:	f027 feee 	bl	90029640 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001864:	4b07      	ldr	r3, [pc, #28]	; (90001884 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90001866:	212c      	movs	r1, #44	; 0x2c
90001868:	4a04      	ldr	r2, [pc, #16]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000186a:	4805      	ldr	r0, [pc, #20]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
9000186c:	f027 fee8 	bl	90029640 <__assert_func>
90001870:	24005be4 	.word	0x24005be4
90001874:	24005be0 	.word	0x24005be0
90001878:	9002ac78 	.word	0x9002ac78
9000187c:	9002acc4 	.word	0x9002acc4
90001880:	9002acf4 	.word	0x9002acf4
90001884:	9002ad38 	.word	0x9002ad38

90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90001888:	4b02      	ldr	r3, [pc, #8]	; (90001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000188a:	f04f 31ff 	mov.w	r1, #4294967295
9000188e:	6818      	ldr	r0, [r3, #0]
90001890:	f00e ba72 	b.w	9000fd78 <osSemaphoreAcquire>
90001894:	24005be4 	.word	0x24005be4

90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90001898:	4b01      	ldr	r3, [pc, #4]	; (900018a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000189a:	6818      	ldr	r0, [r3, #0]
9000189c:	f00e baa0 	b.w	9000fde0 <osSemaphoreRelease>
900018a0:	24005be4 	.word	0x24005be4

900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
900018a4:	4b02      	ldr	r3, [pc, #8]	; (900018b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
900018a6:	2100      	movs	r1, #0
900018a8:	6818      	ldr	r0, [r3, #0]
900018aa:	f00e ba65 	b.w	9000fd78 <osSemaphoreAcquire>
900018ae:	bf00      	nop
900018b0:	24005be4 	.word	0x24005be4

900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
900018b4:	4b01      	ldr	r3, [pc, #4]	; (900018bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
900018b6:	6818      	ldr	r0, [r3, #0]
900018b8:	f00e ba92 	b.w	9000fde0 <osSemaphoreRelease>
900018bc:	24005be4 	.word	0x24005be4

900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
900018c0:	4803      	ldr	r0, [pc, #12]	; (900018d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
900018c2:	2300      	movs	r3, #0
900018c4:	4903      	ldr	r1, [pc, #12]	; (900018d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
900018c6:	461a      	mov	r2, r3
900018c8:	6800      	ldr	r0, [r0, #0]
900018ca:	f00e baf3 	b.w	9000feb4 <osMessageQueuePut>
900018ce:	bf00      	nop
900018d0:	24005be0 	.word	0x24005be0
900018d4:	24000028 	.word	0x24000028

900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900018d8:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018da:	2300      	movs	r3, #0
{
900018dc:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018de:	4c07      	ldr	r4, [pc, #28]	; (900018fc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900018e0:	461a      	mov	r2, r3
900018e2:	a901      	add	r1, sp, #4
900018e4:	6820      	ldr	r0, [r4, #0]
900018e6:	f00e fb27 	bl	9000ff38 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900018ea:	f04f 33ff 	mov.w	r3, #4294967295
900018ee:	2200      	movs	r2, #0
900018f0:	a901      	add	r1, sp, #4
900018f2:	6820      	ldr	r0, [r4, #0]
900018f4:	f00e fb20 	bl	9000ff38 <osMessageQueueGet>
}
900018f8:	b002      	add	sp, #8
900018fa:	bd10      	pop	{r4, pc}
900018fc:	24005be0 	.word	0x24005be0

90001900 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90001900:	6803      	ldr	r3, [r0, #0]
90001902:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001904:	4718      	bx	r3
90001906:	bf00      	nop

90001908 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90001908:	2001      	movs	r0, #1
9000190a:	4770      	bx	lr

9000190c <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
9000190c:	4905      	ldr	r1, [pc, #20]	; (90001924 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000190e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001912:	4b05      	ldr	r3, [pc, #20]	; (90001928 <_ZN8STM32DMAD1Ev+0x1c>)
90001914:	6001      	str	r1, [r0, #0]
90001916:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000191a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000191e:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90001922:	4770      	bx	lr
90001924:	9002aed8 	.word	0x9002aed8
90001928:	e000e100 	.word	0xe000e100

9000192c <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000192c:	4b0f      	ldr	r3, [pc, #60]	; (9000196c <_ZN8STM32DMA10initializeEv+0x40>)
{
9000192e:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001930:	490f      	ldr	r1, [pc, #60]	; (90001970 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001932:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001936:	480f      	ldr	r0, [pc, #60]	; (90001974 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001938:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
9000193c:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000193e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90001942:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90001946:	f002 0210 	and.w	r2, r2, #16
9000194a:	9201      	str	r2, [sp, #4]
9000194c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000194e:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001950:	f042 0210 	orr.w	r2, r2, #16
90001954:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001956:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001958:	f022 0210 	bic.w	r2, r2, #16
9000195c:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000195e:	4b06      	ldr	r3, [pc, #24]	; (90001978 <_ZN8STM32DMA10initializeEv+0x4c>)
90001960:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001964:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90001966:	b002      	add	sp, #8
90001968:	4770      	bx	lr
9000196a:	bf00      	nop
9000196c:	58024400 	.word	0x58024400
90001970:	24009500 	.word	0x24009500
90001974:	90001d59 	.word	0x90001d59
90001978:	e000e100 	.word	0xe000e100

9000197c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
9000197c:	f240 30ef 	movw	r0, #1007	; 0x3ef
90001980:	4770      	bx	lr
90001982:	bf00      	nop

90001984 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90001984:	4909      	ldr	r1, [pc, #36]	; (900019ac <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001986:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000198a:	4b09      	ldr	r3, [pc, #36]	; (900019b0 <_ZN8STM32DMAD0Ev+0x2c>)
9000198c:	b510      	push	{r4, lr}
9000198e:	6001      	str	r1, [r0, #0]
90001990:	4604      	mov	r4, r0
90001992:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001996:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000199a:	f3bf 8f6f 	isb	sy
}
9000199e:	f640 51a8 	movw	r1, #3496	; 0xda8
900019a2:	f027 fe1f 	bl	900295e4 <_ZdlPvj>
900019a6:	4620      	mov	r0, r4
900019a8:	bd10      	pop	{r4, pc}
900019aa:	bf00      	nop
900019ac:	9002aed8 	.word	0x9002aed8
900019b0:	e000e100 	.word	0xe000e100

900019b4 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
900019b4:	b510      	push	{r4, lr}
900019b6:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
900019b8:	f04f 31ff 	mov.w	r1, #4294967295
900019bc:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
900019c0:	f00e f944 	bl	9000fc4c <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019c4:	6860      	ldr	r0, [r4, #4]
900019c6:	6803      	ldr	r3, [r0, #0]
900019c8:	681b      	ldr	r3, [r3, #0]
900019ca:	4798      	blx	r3
900019cc:	b908      	cbnz	r0, 900019d2 <_ZN8STM32DMA5startEv+0x1e>
900019ce:	7a63      	ldrb	r3, [r4, #9]
900019d0:	b963      	cbnz	r3, 900019ec <_ZN8STM32DMA5startEv+0x38>
        {
            started_by_external_job = false;
            execute();
        }
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
900019d2:	4915      	ldr	r1, [pc, #84]	; (90001a28 <_ZN8STM32DMA5startEv+0x74>)
900019d4:	4a15      	ldr	r2, [pc, #84]	; (90001a2c <_ZN8STM32DMA5startEv+0x78>)
900019d6:	680b      	ldr	r3, [r1, #0]
900019d8:	011b      	lsls	r3, r3, #4
900019da:	5cd3      	ldrb	r3, [r2, r3]
900019dc:	2b01      	cmp	r3, #1
900019de:	d014      	beq.n	90001a0a <_ZN8STM32DMA5startEv+0x56>
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
900019e0:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
900019e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
900019e8:	f00e b954 	b.w	9000fc94 <osMutexRelease>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019ec:	7a23      	ldrb	r3, [r4, #8]
900019ee:	2b00      	cmp	r3, #0
900019f0:	d1ef      	bne.n	900019d2 <_ZN8STM32DMA5startEv+0x1e>
            execute();
900019f2:	6822      	ldr	r2, [r4, #0]
900019f4:	4620      	mov	r0, r4
            started_by_external_job = false;
900019f6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
900019fa:	6a53      	ldr	r3, [r2, #36]	; 0x24
900019fc:	4798      	blx	r3
        MUTEX_UNLOCK(mutexIsRunning);
900019fe:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90001a02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001a06:	f00e b945 	b.w	9000fc94 <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
90001a0a:	7aa0      	ldrb	r0, [r4, #10]
90001a0c:	2800      	cmp	r0, #0
90001a0e:	d1e7      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a10:	7a20      	ldrb	r0, [r4, #8]
90001a12:	2800      	cmp	r0, #0
90001a14:	d1e4      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a16:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90001a18:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a1c:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90001a20:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a22:	f7ff fe9f 	bl	90001764 <DMA2D_CopyBuffer>
    }
90001a26:	e7db      	b.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a28:	24005b98 	.word	0x24005b98
90001a2c:	24000008 	.word	0x24000008

90001a30 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90001a30:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90001a34:	b510      	push	{r4, lr}
90001a36:	4604      	mov	r4, r0
        if (!started_by_external_job)
90001a38:	b953      	cbnz	r3, 90001a50 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90001a3a:	6803      	ldr	r3, [r0, #0]
90001a3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001a3e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a40:	491c      	ldr	r1, [pc, #112]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90001a42:	4a1d      	ldr	r2, [pc, #116]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001a44:	680b      	ldr	r3, [r1, #0]
90001a46:	011b      	lsls	r3, r3, #4
90001a48:	5cd3      	ldrb	r3, [r2, r3]
90001a4a:	2b01      	cmp	r3, #1
90001a4c:	d014      	beq.n	90001a78 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90001a4e:	bd10      	pop	{r4, pc}
        if (isRunning)
90001a50:	7a03      	ldrb	r3, [r0, #8]
90001a52:	bb2b      	cbnz	r3, 90001aa0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90001a54:	6860      	ldr	r0, [r4, #4]
90001a56:	6803      	ldr	r3, [r0, #0]
90001a58:	681b      	ldr	r3, [r3, #0]
90001a5a:	4798      	blx	r3
90001a5c:	4603      	mov	r3, r0
90001a5e:	2800      	cmp	r0, #0
90001a60:	d1f5      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a62:	7a62      	ldrb	r2, [r4, #9]
90001a64:	2a00      	cmp	r2, #0
90001a66:	d0f2      	beq.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90001a68:	6822      	ldr	r2, [r4, #0]
90001a6a:	4620      	mov	r0, r4
                started_by_external_job = false;
90001a6c:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001a70:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90001a76:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a78:	4810      	ldr	r0, [pc, #64]	; (90001abc <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90001a7a:	6800      	ldr	r0, [r0, #0]
90001a7c:	2800      	cmp	r0, #0
90001a7e:	d1e6      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a80:	7aa0      	ldrb	r0, [r4, #10]
90001a82:	2800      	cmp	r0, #0
90001a84:	d1e3      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a86:	7a20      	ldrb	r0, [r4, #8]
90001a88:	2800      	cmp	r0, #0
90001a8a:	d1e0      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a8c:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001a8e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001a92:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a94:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90001a98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a9c:	f7ff be62 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa0:	4904      	ldr	r1, [pc, #16]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90001aa2:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa4:	4b04      	ldr	r3, [pc, #16]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001aa6:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001aa8:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aaa:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001aae:	f7ff fe9d 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001ab2:	e7cf      	b.n	90001a54 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90001ab4:	24005b98 	.word	0x24005b98
90001ab8:	24000008 	.word	0x24000008
90001abc:	24005b94 	.word	0x24005b94

90001ac0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90001ac0:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90001ac2:	7f8b      	ldrb	r3, [r1, #30]
90001ac4:	2b0a      	cmp	r3, #10
90001ac6:	d83e      	bhi.n	90001b46 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90001ac8:	e8df f003 	tbb	[pc, r3]
90001acc:	3d2a063b 	.word	0x3d2a063b
90001ad0:	063d3d3d 	.word	0x063d3d3d
90001ad4:	0606      	.short	0x0606
90001ad6:	06          	.byte	0x06
90001ad7:	00          	.byte	0x00
90001ad8:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ada:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90001ade:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae0:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001ae2:	4b1c      	ldr	r3, [pc, #112]	; (90001b54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ae4:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae8:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001aec:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001aee:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001af0:	6908      	ldr	r0, [r1, #16]
90001af2:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001af4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001af6:	680d      	ldr	r5, [r1, #0]
90001af8:	2d08      	cmp	r5, #8
90001afa:	d013      	beq.n	90001b24 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90001afc:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001afe:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b00:	4c15      	ldr	r4, [pc, #84]	; (90001b58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90001b02:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90001b04:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001b06:	0a0a      	lsrs	r2, r1, #8
90001b08:	0948      	lsrs	r0, r1, #5
90001b0a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90001b0e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90001b12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90001b16:	4302      	orrs	r2, r0
90001b18:	430a      	orrs	r2, r1
90001b1a:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b1c:	601c      	str	r4, [r3, #0]
    }
}
90001b1e:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001b20:	2400      	movs	r4, #0
90001b22:	e7da      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b24:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b26:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001b28:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b2a:	4a0c      	ldr	r2, [pc, #48]	; (90001b5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90001b2c:	7f0c      	ldrb	r4, [r1, #28]
90001b2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b32:	4c0b      	ldr	r4, [pc, #44]	; (90001b60 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b34:	61da      	str	r2, [r3, #28]
90001b36:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001b38:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3a:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3c:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b3e:	601c      	str	r4, [r3, #0]
}
90001b40:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001b42:	2402      	movs	r4, #2
90001b44:	e7c9      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90001b46:	4b07      	ldr	r3, [pc, #28]	; (90001b64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90001b48:	2187      	movs	r1, #135	; 0x87
90001b4a:	4a07      	ldr	r2, [pc, #28]	; (90001b68 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90001b4c:	4807      	ldr	r0, [pc, #28]	; (90001b6c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90001b4e:	f027 fd77 	bl	90029640 <__assert_func>
90001b52:	bf00      	nop
90001b54:	52001000 	.word	0x52001000
90001b58:	00030201 	.word	0x00030201
90001b5c:	00010009 	.word	0x00010009
90001b60:	00020201 	.word	0x00020201
90001b64:	9002ad7c 	.word	0x9002ad7c
90001b68:	9002ad98 	.word	0x9002ad98
90001b6c:	9002ade4 	.word	0x9002ade4

90001b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90001b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001b72:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90001b76:	f1be 0f0b 	cmp.w	lr, #11
90001b7a:	f200 80c1 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001b7e:	e8df f01e 	tbh	[pc, lr, lsl #1]
90001b82:	0063      	.short	0x0063
90001b84:	004c0065 	.word	0x004c0065
90001b88:	00bf00bf 	.word	0x00bf00bf
90001b8c:	00bf00bf 	.word	0x00bf00bf
90001b90:	000c000c 	.word	0x000c000c
90001b94:	000c000c 	.word	0x000c000c
90001b98:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90001b9a:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001b9c:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90001ba0:	f1bc 0f0b 	cmp.w	ip, #11
90001ba4:	f200 80ac 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001ba8:	e8df f00c 	tbb	[pc, ip]
90001bac:	aa0e4b52 	.word	0xaa0e4b52
90001bb0:	06aaaaaa 	.word	0x06aaaaaa
90001bb4:	06060606 	.word	0x06060606
    switch (format)
90001bb8:	f1ac 0307 	sub.w	r3, ip, #7
90001bbc:	2b03      	cmp	r3, #3
90001bbe:	f200 80a5 	bhi.w	90001d0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90001bc2:	2605      	movs	r6, #5
90001bc4:	2701      	movs	r7, #1
90001bc6:	e001      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001bc8:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001bca:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bcc:	8a8b      	ldrh	r3, [r1, #20]
90001bce:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd0:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd2:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bd4:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd6:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd8:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bdc:	4b52      	ldr	r3, [pc, #328]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001bde:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001be0:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001be2:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001be4:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001be6:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001be8:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001bea:	6908      	ldr	r0, [r1, #16]
90001bec:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001bee:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90001bf0:	680a      	ldr	r2, [r1, #0]
90001bf2:	2a80      	cmp	r2, #128	; 0x80
90001bf4:	d03b      	beq.n	90001c6e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90001bf6:	d812      	bhi.n	90001c1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90001bf8:	2a20      	cmp	r2, #32
90001bfa:	d02c      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001bfc:	2a40      	cmp	r2, #64	; 0x40
90001bfe:	d02a      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001c00:	2a04      	cmp	r2, #4
90001c02:	d169      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c04:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c06:	4949      	ldr	r1, [pc, #292]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c08:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001c0c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90001c10:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c12:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c14:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c16:	6019      	str	r1, [r3, #0]
}
90001c18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001c1a:	2500      	movs	r5, #0
90001c1c:	e7be      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90001c1e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90001c22:	d067      	beq.n	90001cf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90001c24:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90001c28:	d156      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c2a:	7f0c      	ldrb	r4, [r1, #28]
90001c2c:	4a40      	ldr	r2, [pc, #256]	; (90001d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90001c2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90001c32:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c34:	4a3d      	ldr	r2, [pc, #244]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001c36:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001c38:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c3a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c3c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c3e:	601a      	str	r2, [r3, #0]
}
90001c40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90001c42:	2601      	movs	r6, #1
90001c44:	4637      	mov	r7, r6
90001c46:	e7c1      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90001c48:	2502      	movs	r5, #2
90001c4a:	e7a7      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001c4c:	2501      	movs	r5, #1
90001c4e:	e7a5      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001c50:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001c52:	4637      	mov	r7, r6
90001c54:	e7ba      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c56:	7f0b      	ldrb	r3, [r1, #28]
90001c58:	4a33      	ldr	r2, [pc, #204]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c5a:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90001c5e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001c62:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c64:	4b31      	ldr	r3, [pc, #196]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c66:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c68:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c6a:	6013      	str	r3, [r2, #0]
}
90001c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001c6e:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001c70:	1d14      	adds	r4, r2, #4
90001c72:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c74:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90001c76:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c78:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90001c7c:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001c80:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c82:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c84:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001c86:	b9b1      	cbnz	r1, 90001cb6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c88:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90001c8a:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c8c:	69d8      	ldr	r0, [r3, #28]
90001c8e:	4a29      	ldr	r2, [pc, #164]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001c90:	3901      	subs	r1, #1
90001c92:	4002      	ands	r2, r0
90001c94:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001c98:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90001c9a:	4a23      	ldr	r2, [pc, #140]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c9c:	69d3      	ldr	r3, [r2, #28]
90001c9e:	f043 0320 	orr.w	r3, r3, #32
90001ca2:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001ca4:	69d3      	ldr	r3, [r2, #28]
90001ca6:	069b      	lsls	r3, r3, #26
90001ca8:	d4fc      	bmi.n	90001ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001caa:	2310      	movs	r3, #16
90001cac:	6093      	str	r3, [r2, #8]
            if (blend)
90001cae:	b324      	cbz	r4, 90001cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001cb0:	4b1e      	ldr	r3, [pc, #120]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001cb2:	6013      	str	r3, [r2, #0]
}
90001cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90001cb6:	2901      	cmp	r1, #1
90001cb8:	d12e      	bne.n	90001d18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cba:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90001cbc:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cbe:	69d8      	ldr	r0, [r3, #28]
90001cc0:	4a1c      	ldr	r2, [pc, #112]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001cc2:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90001cc6:	bf18      	it	ne
90001cc8:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cca:	4002      	ands	r2, r0
90001ccc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001cd0:	f042 0210 	orr.w	r2, r2, #16
90001cd4:	61da      	str	r2, [r3, #28]
                break;
90001cd6:	e7e0      	b.n	90001c9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cd8:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90001cda:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cdc:	4b12      	ldr	r3, [pc, #72]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001cde:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001ce2:	bf14      	ite	ne
90001ce4:	4a14      	ldrne	r2, [pc, #80]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001ce6:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cea:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001cee:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001cf0:	601a      	str	r2, [r3, #0]
}
90001cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cf4:	7f0c      	ldrb	r4, [r1, #28]
90001cf6:	4a11      	ldr	r2, [pc, #68]	; (90001d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90001cf8:	e799      	b.n	90001c2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001cfa:	4b0f      	ldr	r3, [pc, #60]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90001cfc:	6013      	str	r3, [r2, #0]
}
90001cfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90001d00:	4b0f      	ldr	r3, [pc, #60]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d02:	2166      	movs	r1, #102	; 0x66
90001d04:	4a0f      	ldr	r2, [pc, #60]	; (90001d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90001d06:	4810      	ldr	r0, [pc, #64]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d08:	f027 fc9a 	bl	90029640 <__assert_func>
        assert(0 && "Unsupported Format!");
90001d0c:	4b0c      	ldr	r3, [pc, #48]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d0e:	2187      	movs	r1, #135	; 0x87
90001d10:	4a0e      	ldr	r2, [pc, #56]	; (90001d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90001d12:	480d      	ldr	r0, [pc, #52]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d14:	f027 fc94 	bl	90029640 <__assert_func>
                assert(0 && "Unsupported format");
90001d18:	4b0d      	ldr	r3, [pc, #52]	; (90001d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90001d1a:	f240 1111 	movw	r1, #273	; 0x111
90001d1e:	4a0d      	ldr	r2, [pc, #52]	; (90001d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90001d20:	4809      	ldr	r0, [pc, #36]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d22:	f027 fc8d 	bl	90029640 <__assert_func>
90001d26:	bf00      	nop
90001d28:	52001000 	.word	0x52001000
90001d2c:	00020201 	.word	0x00020201
90001d30:	00020009 	.word	0x00020009
90001d34:	ffff00ef 	.word	0xffff00ef
90001d38:	00010201 	.word	0x00010201
90001d3c:	0002000a 	.word	0x0002000a
90001d40:	9002ad7c 	.word	0x9002ad7c
90001d44:	9002ae28 	.word	0x9002ae28
90001d48:	9002ade4 	.word	0x9002ade4
90001d4c:	9002ad98 	.word	0x9002ad98
90001d50:	9002ae74 	.word	0x9002ae74
90001d54:	9002ae90 	.word	0x9002ae90

90001d58 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90001d58:	4b25      	ldr	r3, [pc, #148]	; (90001df0 <DMA2D_XferCpltCallback+0x98>)
90001d5a:	4926      	ldr	r1, [pc, #152]	; (90001df4 <DMA2D_XferCpltCallback+0x9c>)
90001d5c:	681b      	ldr	r3, [r3, #0]
    {
90001d5e:	b510      	push	{r4, lr}
90001d60:	685c      	ldr	r4, [r3, #4]
90001d62:	6823      	ldr	r3, [r4, #0]
90001d64:	695a      	ldr	r2, [r3, #20]
90001d66:	428a      	cmp	r2, r1
90001d68:	d120      	bne.n	90001dac <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
90001d6a:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
90001d6e:	b192      	cbz	r2, 90001d96 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90001d70:	7a23      	ldrb	r3, [r4, #8]
90001d72:	2b00      	cmp	r3, #0
90001d74:	d132      	bne.n	90001ddc <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90001d76:	6860      	ldr	r0, [r4, #4]
90001d78:	6803      	ldr	r3, [r0, #0]
90001d7a:	681b      	ldr	r3, [r3, #0]
90001d7c:	4798      	blx	r3
90001d7e:	4603      	mov	r3, r0
90001d80:	b998      	cbnz	r0, 90001daa <DMA2D_XferCpltCallback+0x52>
90001d82:	7a62      	ldrb	r2, [r4, #9]
90001d84:	b18a      	cbz	r2, 90001daa <DMA2D_XferCpltCallback+0x52>
                execute();
90001d86:	6822      	ldr	r2, [r4, #0]
90001d88:	4620      	mov	r0, r4
                started_by_external_job = false;
90001d8a:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001d8e:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001d90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001d94:	4718      	bx	r3
            executeCompleted();
90001d96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001d98:	4620      	mov	r0, r4
90001d9a:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001d9c:	4916      	ldr	r1, [pc, #88]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
90001d9e:	4a17      	ldr	r2, [pc, #92]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001da0:	680b      	ldr	r3, [r1, #0]
90001da2:	011b      	lsls	r3, r3, #4
90001da4:	5cd3      	ldrb	r3, [r2, r3]
90001da6:	2b01      	cmp	r3, #1
90001da8:	d004      	beq.n	90001db4 <DMA2D_XferCpltCallback+0x5c>
90001daa:	bd10      	pop	{r4, pc}
90001dac:	4620      	mov	r0, r4
90001dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001db2:	4710      	bx	r2
90001db4:	4812      	ldr	r0, [pc, #72]	; (90001e00 <DMA2D_XferCpltCallback+0xa8>)
90001db6:	6800      	ldr	r0, [r0, #0]
90001db8:	2800      	cmp	r0, #0
90001dba:	d1f6      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dbc:	7aa0      	ldrb	r0, [r4, #10]
90001dbe:	2800      	cmp	r0, #0
90001dc0:	d1f3      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dc2:	7a20      	ldrb	r0, [r4, #8]
90001dc4:	2800      	cmp	r0, #0
90001dc6:	d1f0      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dc8:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001dca:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001dce:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dd0:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90001dd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001dd8:	f7ff bcc4 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001ddc:	4906      	ldr	r1, [pc, #24]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
90001dde:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de0:	4b06      	ldr	r3, [pc, #24]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001de2:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001de4:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de6:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001dea:	f7ff fcff 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001dee:	e7c2      	b.n	90001d76 <DMA2D_XferCpltCallback+0x1e>
90001df0:	24039acc 	.word	0x24039acc
90001df4:	90001a31 	.word	0x90001a31
90001df8:	24005b98 	.word	0x24005b98
90001dfc:	24000008 	.word	0x24000008
90001e00:	24005b94 	.word	0x24005b94

90001e04 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90001e04:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e06:	4b10      	ldr	r3, [pc, #64]	; (90001e48 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90001e08:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e0a:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90001e0c:	2500      	movs	r5, #0
90001e0e:	300c      	adds	r0, #12
90001e10:	2260      	movs	r2, #96	; 0x60
90001e12:	7235      	strb	r5, [r6, #8]
90001e14:	7275      	strb	r5, [r6, #9]
90001e16:	6070      	str	r0, [r6, #4]
90001e18:	f844 3b20 	str.w	r3, [r4], #32
90001e1c:	4621      	mov	r1, r4
90001e1e:	f011 ffeb 	bl	90013df8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90001e22:	4621      	mov	r1, r4
90001e24:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90001e28:	60cd      	str	r5, [r1, #12]
90001e2a:	3124      	adds	r1, #36	; 0x24
90001e2c:	428b      	cmp	r3, r1
90001e2e:	d1fb      	bne.n	90001e28 <_ZN8STM32DMAC1Ev+0x24>
90001e30:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90001e34:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e36:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90001e3a:	f00d fec7 	bl	9000fbcc <osMutexNew>
90001e3e:	4603      	mov	r3, r0
}
90001e40:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
90001e42:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90001e46:	bd70      	pop	{r4, r5, r6, pc}
90001e48:	9002aed8 	.word	0x9002aed8

90001e4c <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e4c:	4a03      	ldr	r2, [pc, #12]	; (90001e5c <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001e4e:	6813      	ldr	r3, [r2, #0]
90001e50:	07db      	lsls	r3, r3, #31
90001e52:	d4fc      	bmi.n	90001e4e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e54:	2323      	movs	r3, #35	; 0x23
90001e56:	6093      	str	r3, [r2, #8]
}
90001e58:	4770      	bx	lr
90001e5a:	bf00      	nop
90001e5c:	52001000 	.word	0x52001000

90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001e60:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e62:	4c11      	ldr	r4, [pc, #68]	; (90001ea8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90001e64:	6825      	ldr	r5, [r4, #0]
90001e66:	07ed      	lsls	r5, r5, #31
90001e68:	d4fc      	bmi.n	90001e64 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e6a:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e6c:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001e6e:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e70:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e72:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001e76:	f04f 0502 	mov.w	r5, #2
90001e7a:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e7c:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001e7e:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90001e80:	d00b      	beq.n	90001e9a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e82:	490a      	ldr	r1, [pc, #40]	; (90001eac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001e84:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e86:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e8a:	4909      	ldr	r1, [pc, #36]	; (90001eb0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e8c:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90001e8e:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001e90:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001e92:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e94:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90001e96:	bc30      	pop	{r4, r5}
90001e98:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001e9a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90001e9c:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001e9e:	4b05      	ldr	r3, [pc, #20]	; (90001eb4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90001ea0:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001ea2:	6023      	str	r3, [r4, #0]
}
90001ea4:	bc30      	pop	{r4, r5}
90001ea6:	4770      	bx	lr
90001ea8:	52001000 	.word	0x52001000
90001eac:	00010009 	.word	0x00010009
90001eb0:	00020001 	.word	0x00020001
90001eb4:	00030001 	.word	0x00030001

90001eb8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90001eb8:	2001      	movs	r0, #1
90001eba:	4770      	bx	lr

90001ebc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90001ebc:	2040      	movs	r0, #64	; 0x40
90001ebe:	4770      	bx	lr

90001ec0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90001ec0:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90001ec4:	3008      	adds	r0, #8
90001ec6:	4770      	bx	lr

90001ec8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90001ec8:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90001ecc:	3008      	adds	r0, #8
90001ece:	4770      	bx	lr

90001ed0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001ed0:	2001      	movs	r0, #1
90001ed2:	4770      	bx	lr

90001ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001ed4:	f242 70bc 	movw	r0, #10172	; 0x27bc
90001ed8:	4770      	bx	lr
90001eda:	bf00      	nop

90001edc <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001edc:	f242 73bc 	movw	r3, #10172	; 0x27bc
90001ee0:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001ee4:	3008      	adds	r0, #8
90001ee6:	4770      	bx	lr

90001ee8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001ee8:	f242 73bc 	movw	r3, #10172	; 0x27bc
90001eec:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001ef0:	3008      	adds	r0, #8
90001ef2:	4770      	bx	lr

90001ef4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001ef4:	2001      	movs	r0, #1
90001ef6:	4770      	bx	lr

90001ef8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001ef8:	2010      	movs	r0, #16
90001efa:	4770      	bx	lr

90001efc <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001efc:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f00:	3008      	adds	r0, #8
90001f02:	4770      	bx	lr

90001f04 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001f04:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f08:	3008      	adds	r0, #8
90001f0a:	4770      	bx	lr

90001f0c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_main_menuScreenNoTransition();
90001f0c:	4608      	mov	r0, r1
90001f0e:	f002 b973 	b.w	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90001f12:	bf00      	nop

90001f14 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90001f14:	4b03      	ldr	r3, [pc, #12]	; (90001f24 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90001f16:	b510      	push	{r4, lr}
90001f18:	4604      	mov	r4, r0
90001f1a:	6003      	str	r3, [r0, #0]
90001f1c:	f010 fdb9 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f20:	4620      	mov	r0, r4
90001f22:	bd10      	pop	{r4, pc}
90001f24:	9002af90 	.word	0x9002af90

90001f28 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90001f28:	4b05      	ldr	r3, [pc, #20]	; (90001f40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90001f2a:	b510      	push	{r4, lr}
90001f2c:	4604      	mov	r4, r0
90001f2e:	6003      	str	r3, [r0, #0]
90001f30:	f010 fdaf 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f34:	2148      	movs	r1, #72	; 0x48
90001f36:	4620      	mov	r0, r4
90001f38:	f027 fb54 	bl	900295e4 <_ZdlPvj>
90001f3c:	4620      	mov	r0, r4
90001f3e:	bd10      	pop	{r4, pc}
90001f40:	9002af90 	.word	0x9002af90

90001f44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f44:	4b03      	ldr	r3, [pc, #12]	; (90001f54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f46:	b510      	push	{r4, lr}
90001f48:	4604      	mov	r4, r0
90001f4a:	6003      	str	r3, [r0, #0]
90001f4c:	f010 fda1 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f50:	4620      	mov	r0, r4
90001f52:	bd10      	pop	{r4, pc}
90001f54:	9002af5c 	.word	0x9002af5c

90001f58 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f58:	4b06      	ldr	r3, [pc, #24]	; (90001f74 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90001f5a:	b510      	push	{r4, lr}
90001f5c:	4604      	mov	r4, r0
90001f5e:	6003      	str	r3, [r0, #0]
90001f60:	f010 fd97 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f64:	f242 71c4 	movw	r1, #10180	; 0x27c4
90001f68:	4620      	mov	r0, r4
90001f6a:	f027 fb3b 	bl	900295e4 <_ZdlPvj>
90001f6e:	4620      	mov	r0, r4
90001f70:	bd10      	pop	{r4, pc}
90001f72:	bf00      	nop
90001f74:	9002af5c 	.word	0x9002af5c

90001f78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f78:	4b03      	ldr	r3, [pc, #12]	; (90001f88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f7a:	b510      	push	{r4, lr}
90001f7c:	4604      	mov	r4, r0
90001f7e:	6003      	str	r3, [r0, #0]
90001f80:	f010 fd87 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f84:	4620      	mov	r0, r4
90001f86:	bd10      	pop	{r4, pc}
90001f88:	9002af28 	.word	0x9002af28

90001f8c <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f8c:	4b05      	ldr	r3, [pc, #20]	; (90001fa4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90001f8e:	b510      	push	{r4, lr}
90001f90:	4604      	mov	r4, r0
90001f92:	6003      	str	r3, [r0, #0]
90001f94:	f010 fd7d 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f98:	2118      	movs	r1, #24
90001f9a:	4620      	mov	r0, r4
90001f9c:	f027 fb22 	bl	900295e4 <_ZdlPvj>
90001fa0:	4620      	mov	r0, r4
90001fa2:	bd10      	pop	{r4, pc}
90001fa4:	9002af28 	.word	0x9002af28

90001fa8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90001fa8:	b510      	push	{r4, lr}
90001faa:	4604      	mov	r4, r0
90001fac:	490c      	ldr	r1, [pc, #48]	; (90001fe0 <_ZN12FrontendHeapD1Ev+0x38>)
90001fae:	4a0d      	ldr	r2, [pc, #52]	; (90001fe4 <_ZN12FrontendHeapD1Ev+0x3c>)
90001fb0:	f242 70f0 	movw	r0, #10224	; 0x27f0
90001fb4:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90001fb8:	6021      	str	r1, [r4, #0]
90001fba:	4420      	add	r0, r4
90001fbc:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90001fc0:	f010 fd67 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fc4:	4620      	mov	r0, r4
90001fc6:	4b08      	ldr	r3, [pc, #32]	; (90001fe8 <_ZN12FrontendHeapD1Ev+0x40>)
90001fc8:	f840 3f2c 	str.w	r3, [r0, #44]!
90001fcc:	f010 fd61 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fd0:	4620      	mov	r0, r4
90001fd2:	4b06      	ldr	r3, [pc, #24]	; (90001fec <_ZN12FrontendHeapD1Ev+0x44>)
90001fd4:	f840 3f14 	str.w	r3, [r0, #20]!
90001fd8:	f010 fd5b 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fdc:	4620      	mov	r0, r4
90001fde:	bd10      	pop	{r4, pc}
90001fe0:	9002afc4 	.word	0x9002afc4
90001fe4:	9002af90 	.word	0x9002af90
90001fe8:	9002af5c 	.word	0x9002af5c
90001fec:	9002af28 	.word	0x9002af28

90001ff0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90001ff0:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90001ff2:	4c0c      	ldr	r4, [pc, #48]	; (90002024 <__tcf_0+0x34>)
90001ff4:	4a0c      	ldr	r2, [pc, #48]	; (90002028 <__tcf_0+0x38>)
90001ff6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90001ffa:	490c      	ldr	r1, [pc, #48]	; (9000202c <__tcf_0+0x3c>)
90001ffc:	480c      	ldr	r0, [pc, #48]	; (90002030 <__tcf_0+0x40>)
90001ffe:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002002:	6021      	str	r1, [r4, #0]
90002004:	f010 fd45 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002008:	4620      	mov	r0, r4
9000200a:	4b0a      	ldr	r3, [pc, #40]	; (90002034 <__tcf_0+0x44>)
9000200c:	f840 3f2c 	str.w	r3, [r0, #44]!
90002010:	f010 fd3f 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002014:	4620      	mov	r0, r4
90002016:	4b08      	ldr	r3, [pc, #32]	; (90002038 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002018:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000201c:	f840 3f14 	str.w	r3, [r0, #20]!
90002020:	f010 bd37 	b.w	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002024:	24005bec 	.word	0x24005bec
90002028:	9002af90 	.word	0x9002af90
9000202c:	9002afc4 	.word	0x9002afc4
90002030:	240083dc 	.word	0x240083dc
90002034:	9002af5c 	.word	0x9002af5c
90002038:	9002af28 	.word	0x9002af28

9000203c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
9000203c:	b510      	push	{r4, lr}
9000203e:	4604      	mov	r4, r0
90002040:	4a0f      	ldr	r2, [pc, #60]	; (90002080 <_ZN12FrontendHeapD0Ev+0x44>)
90002042:	4910      	ldr	r1, [pc, #64]	; (90002084 <_ZN12FrontendHeapD0Ev+0x48>)
90002044:	f242 70f0 	movw	r0, #10224	; 0x27f0
90002048:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
9000204c:	6021      	str	r1, [r4, #0]
9000204e:	4420      	add	r0, r4
90002050:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002054:	f010 fd1d 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002058:	4620      	mov	r0, r4
9000205a:	4b0b      	ldr	r3, [pc, #44]	; (90002088 <_ZN12FrontendHeapD0Ev+0x4c>)
9000205c:	f840 3f2c 	str.w	r3, [r0, #44]!
90002060:	f010 fd17 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002064:	4b09      	ldr	r3, [pc, #36]	; (9000208c <_ZN12FrontendHeapD0Ev+0x50>)
90002066:	4620      	mov	r0, r4
90002068:	f840 3f14 	str.w	r3, [r0, #20]!
9000206c:	f010 fd11 	bl	90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002070:	4620      	mov	r0, r4
90002072:	f642 1198 	movw	r1, #10648	; 0x2998
90002076:	f027 fab5 	bl	900295e4 <_ZdlPvj>
9000207a:	4620      	mov	r0, r4
9000207c:	bd10      	pop	{r4, pc}
9000207e:	bf00      	nop
90002080:	9002af90 	.word	0x9002af90
90002084:	9002afc4 	.word	0x9002afc4
90002088:	9002af5c 	.word	0x9002af5c
9000208c:	9002af28 	.word	0x9002af28

90002090 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002094:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002096:	2400      	movs	r4, #0
90002098:	f001 fa76 	bl	90003588 <_ZN14BitmapDatabase11getInstanceEv>
9000209c:	4605      	mov	r5, r0
9000209e:	f001 fa77 	bl	90003590 <_ZN14BitmapDatabase15getInstanceSizeEv>
900020a2:	4623      	mov	r3, r4
900020a4:	4601      	mov	r1, r0
900020a6:	4622      	mov	r2, r4
900020a8:	4628      	mov	r0, r5
900020aa:	9400      	str	r4, [sp, #0]
900020ac:	f019 faf2 	bl	9001b694 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
900020b0:	4b29      	ldr	r3, [pc, #164]	; (90002158 <touchgfx_init+0xc8>)
900020b2:	4a2a      	ldr	r2, [pc, #168]	; (9000215c <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
900020b4:	4620      	mov	r0, r4
        static FrontendHeap instance;
900020b6:	4c2a      	ldr	r4, [pc, #168]	; (90002160 <touchgfx_init+0xd0>)
900020b8:	601a      	str	r2, [r3, #0]
900020ba:	f002 fa87 	bl	900045cc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
900020be:	4829      	ldr	r0, [pc, #164]	; (90002164 <touchgfx_init+0xd4>)
900020c0:	f019 fa50 	bl	9001b564 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
900020c4:	6823      	ldr	r3, [r4, #0]
900020c6:	f3bf 8f5b 	dmb	ish
900020ca:	07db      	lsls	r3, r3, #31
900020cc:	d505      	bpl.n	900020da <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
900020ce:	4826      	ldr	r0, [pc, #152]	; (90002168 <touchgfx_init+0xd8>)
}
900020d0:	b002      	add	sp, #8
900020d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900020d6:	f7fe bbfb 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
900020da:	4620      	mov	r0, r4
900020dc:	f027 fa84 	bl	900295e8 <__cxa_guard_acquire>
900020e0:	2800      	cmp	r0, #0
900020e2:	d0f4      	beq.n	900020ce <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
900020e4:	4d21      	ldr	r5, [pc, #132]	; (9000216c <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
900020e6:	4f22      	ldr	r7, [pc, #136]	; (90002170 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
900020e8:	4b22      	ldr	r3, [pc, #136]	; (90002174 <touchgfx_init+0xe4>)
        : presenterStorage(pres),
900020ea:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
900020ee:	f107 064c 	add.w	r6, r7, #76	; 0x4c
          screenStorage(scr),
900020f2:	f105 082c 	add.w	r8, r5, #44	; 0x2c
900020f6:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
900020f8:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
900020fa:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
900020fc:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
900020fe:	f8c5 8008 	str.w	r8, [r5, #8]
90002102:	f010 fcc7 	bl	90012a94 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002106:	4b1c      	ldr	r3, [pc, #112]	; (90002178 <touchgfx_init+0xe8>)
90002108:	4640      	mov	r0, r8
9000210a:	616b      	str	r3, [r5, #20]
9000210c:	f010 fcc2 	bl	90012a94 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002110:	4b1a      	ldr	r3, [pc, #104]	; (9000217c <touchgfx_init+0xec>)
90002112:	4638      	mov	r0, r7
90002114:	62eb      	str	r3, [r5, #44]	; 0x2c
90002116:	f010 fcbd 	bl	90012a94 <_ZN8touchgfx17AbstractPartitionC1Ev>
9000211a:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
9000211e:	4a18      	ldr	r2, [pc, #96]	; (90002180 <touchgfx_init+0xf0>)
90002120:	f603 0038 	addw	r0, r3, #2104	; 0x838
90002124:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002128:	f005 fbd0 	bl	900078cc <_ZN5ModelC1Ev>
9000212c:	462a      	mov	r2, r5
9000212e:	f107 0148 	add.w	r1, r7, #72	; 0x48
90002132:	4630      	mov	r0, r6
90002134:	f005 fbc0 	bl	900078b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002138:	4630      	mov	r0, r6
9000213a:	f002 f85d 	bl	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
        static FrontendHeap instance;
9000213e:	4811      	ldr	r0, [pc, #68]	; (90002184 <touchgfx_init+0xf4>)
90002140:	f027 fa9c 	bl	9002967c <atexit>
90002144:	4620      	mov	r0, r4
90002146:	f027 fa5b 	bl	90029600 <__cxa_guard_release>
9000214a:	4807      	ldr	r0, [pc, #28]	; (90002168 <touchgfx_init+0xd8>)
}
9000214c:	b002      	add	sp, #8
9000214e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002152:	f7fe bbbd 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
90002156:	bf00      	nop
90002158:	24039b30 	.word	0x24039b30
9000215c:	240093b8 	.word	0x240093b8
90002160:	24005be8 	.word	0x24005be8
90002164:	2400002c 	.word	0x2400002c
90002168:	24009330 	.word	0x24009330
9000216c:	24005bec 	.word	0x24005bec
90002170:	240083dc 	.word	0x240083dc
90002174:	9002afc4 	.word	0x9002afc4
90002178:	9002af28 	.word	0x9002af28
9000217c:	9002af5c 	.word	0x9002af5c
90002180:	9002af90 	.word	0x9002af90
90002184:	90001ff1 	.word	0x90001ff1

90002188 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002188:	4770      	bx	lr
9000218a:	bf00      	nop

9000218c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
9000218c:	4801      	ldr	r0, [pc, #4]	; (90002194 <touchgfx_taskEntry+0x8>)
9000218e:	f7fe bb65 	b.w	9000085c <_ZN11TouchGFXHAL9taskEntryEv>
90002192:	bf00      	nop
90002194:	24009330 	.word	0x24009330

90002198 <_GLOBAL__sub_I_touchgfx_init>:
}
90002198:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
9000219a:	4b25      	ldr	r3, [pc, #148]	; (90002230 <_GLOBAL__sub_I_touchgfx_init+0x98>)
9000219c:	4c25      	ldr	r4, [pc, #148]	; (90002234 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
9000219e:	4e26      	ldr	r6, [pc, #152]	; (90002238 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
900021a0:	4d26      	ldr	r5, [pc, #152]	; (9000223c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
900021a2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
900021a4:	4630      	mov	r0, r6
900021a6:	f7ff fe2d 	bl	90001e04 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
900021aa:	4628      	mov	r0, r5
900021ac:	f01d fd4a 	bl	9001fc44 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
900021b0:	4b23      	ldr	r3, [pc, #140]	; (90002240 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
900021b2:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021b4:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021b8:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
900021bc:	62da      	str	r2, [r3, #44]	; 0x2c
900021be:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
900021c0:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
900021c2:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
900021c6:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
900021c8:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
900021ca:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
900021ce:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
900021d2:	4c1c      	ldr	r4, [pc, #112]	; (90002244 <_GLOBAL__sub_I_touchgfx_init+0xac>)
900021d4:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
900021d6:	4c1c      	ldr	r4, [pc, #112]	; (90002248 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
900021d8:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021da:	4c1c      	ldr	r4, [pc, #112]	; (9000224c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
900021dc:	8020      	strh	r0, [r4, #0]
900021de:	4c1c      	ldr	r4, [pc, #112]	; (90002250 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
900021e0:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021e2:	4c1c      	ldr	r4, [pc, #112]	; (90002254 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
900021e4:	481c      	ldr	r0, [pc, #112]	; (90002258 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
900021e6:	8021      	strh	r1, [r4, #0]
900021e8:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
900021ea:	4c1c      	ldr	r4, [pc, #112]	; (9000225c <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
900021ec:	491c      	ldr	r1, [pc, #112]	; (90002260 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
900021ee:	481d      	ldr	r0, [pc, #116]	; (90002264 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
900021f0:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900021f4:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
900021f8:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900021fc:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
900021fe:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002202:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
90002206:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
9000220a:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
9000220e:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
90002212:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
90002216:	7022      	strb	r2, [r4, #0]
90002218:	6019      	str	r1, [r3, #0]
9000221a:	4913      	ldr	r1, [pc, #76]	; (90002268 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
9000221c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002220:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
90002224:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
90002228:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
9000222a:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
9000222e:	bd70      	pop	{r4, r5, r6, pc}
90002230:	9002a730 	.word	0x9002a730
90002234:	24008584 	.word	0x24008584
90002238:	24008588 	.word	0x24008588
9000223c:	240093bc 	.word	0x240093bc
90002240:	24009330 	.word	0x24009330
90002244:	01000001 	.word	0x01000001
90002248:	24039acc 	.word	0x24039acc
9000224c:	24039ac0 	.word	0x24039ac0
90002250:	24039ac6 	.word	0x24039ac6
90002254:	24039ac2 	.word	0x24039ac2
90002258:	24039ac8 	.word	0x24039ac8
9000225c:	24039ac4 	.word	0x24039ac4
90002260:	9002a8c0 	.word	0x9002a8c0
90002264:	01010000 	.word	0x01010000
90002268:	9002a708 	.word	0x9002a708

9000226c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
9000226c:	4801      	ldr	r0, [pc, #4]	; (90002274 <_GLOBAL__sub_D_touchgfx_init+0x8>)
9000226e:	f7ff bb4d 	b.w	9000190c <_ZN8STM32DMAD1Ev>
90002272:	bf00      	nop
90002274:	24008588 	.word	0x24008588

90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002278:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
9000227c:	b112      	cbz	r2, 90002284 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
9000227e:	6803      	ldr	r3, [r0, #0]
90002280:	695b      	ldr	r3, [r3, #20]
90002282:	4718      	bx	r3
        }
    }
90002284:	4770      	bx	lr
90002286:	bf00      	nop

90002288 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002288:	2000      	movs	r0, #0
9000228a:	4770      	bx	lr

9000228c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
9000228c:	8081      	strh	r1, [r0, #4]
    }
9000228e:	4770      	bx	lr

90002290 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002290:	80c1      	strh	r1, [r0, #6]
    }
90002292:	4770      	bx	lr

90002294 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002294:	8101      	strh	r1, [r0, #8]
    }
90002296:	4770      	bx	lr

90002298 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002298:	8141      	strh	r1, [r0, #10]
    }
9000229a:	4770      	bx	lr

9000229c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
9000229c:	4770      	bx	lr
9000229e:	bf00      	nop

900022a0 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
900022a0:	4770      	bx	lr
900022a2:	bf00      	nop

900022a4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
900022a4:	4770      	bx	lr
900022a6:	bf00      	nop

900022a8 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
900022a8:	4770      	bx	lr
900022aa:	bf00      	nop

900022ac <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
900022ac:	4770      	bx	lr
900022ae:	bf00      	nop

900022b0 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
900022b0:	f8b0 c006 	ldrh.w	ip, [r0, #6]
900022b4:	6803      	ldr	r3, [r0, #0]
900022b6:	eba2 020c 	sub.w	r2, r2, ip
900022ba:	f8b0 c004 	ldrh.w	ip, [r0, #4]
900022be:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900022c0:	eba1 010c 	sub.w	r1, r1, ip
900022c4:	b212      	sxth	r2, r2
900022c6:	b209      	sxth	r1, r1
900022c8:	4718      	bx	r3
900022ca:	bf00      	nop

900022cc <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
900022cc:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022ce:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
900022d2:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022d6:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
900022da:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
900022de:	6010      	str	r0, [r2, #0]
    }
900022e0:	4770      	bx	lr
900022e2:	bf00      	nop

900022e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
900022e4:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900022e8:	b11a      	cbz	r2, 900022f2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
900022ea:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
900022ee:	b102      	cbz	r2, 900022f2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
900022f0:	6018      	str	r0, [r3, #0]
        }
    }
900022f2:	4770      	bx	lr

900022f4 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
900022f4:	2000      	movs	r0, #0
900022f6:	4770      	bx	lr

900022f8 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
900022f8:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
900022fa:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
900022fc:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
900022fe:	809a      	strh	r2, [r3, #4]
    }
90002300:	4770      	bx	lr
90002302:	bf00      	nop

90002304 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002304:	4770      	bx	lr
90002306:	bf00      	nop

90002308 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002308:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
9000230c:	4770      	bx	lr
9000230e:	bf00      	nop

90002310 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002310:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
90002314:	4770      	bx	lr
90002316:	bf00      	nop

90002318 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002318:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
9000231c:	688a      	ldr	r2, [r1, #8]
9000231e:	f8c0 c000 	str.w	ip, [r0]
90002322:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002324:	4770      	bx	lr
90002326:	bf00      	nop

90002328 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002328:	2200      	movs	r2, #0
9000232a:	6002      	str	r2, [r0, #0]
9000232c:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000232e:	4770      	bx	lr

90002330 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002330:	2000      	movs	r0, #0
90002332:	4770      	bx	lr

90002334 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002334:	4b03      	ldr	r3, [pc, #12]	; (90002344 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002336:	2290      	movs	r2, #144	; 0x90
90002338:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
9000233c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002340:	4770      	bx	lr
90002342:	bf00      	nop
90002344:	e000e100 	.word	0xe000e100

90002348 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002348:	4a09      	ldr	r2, [pc, #36]	; (90002370 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
9000234a:	490a      	ldr	r1, [pc, #40]	; (90002374 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
9000234c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
9000234e:	480a      	ldr	r0, [pc, #40]	; (90002378 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002350:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002354:	3b01      	subs	r3, #1
90002356:	b29b      	uxth	r3, r3
90002358:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
9000235a:	6911      	ldr	r1, [r2, #16]
9000235c:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002360:	3901      	subs	r1, #1
90002362:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002364:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002366:	6b53      	ldr	r3, [r2, #52]	; 0x34
90002368:	f043 0301 	orr.w	r3, r3, #1
9000236c:	6353      	str	r3, [r2, #52]	; 0x34
}
9000236e:	4770      	bx	lr
90002370:	50001000 	.word	0x50001000
90002374:	24009442 	.word	0x24009442
90002378:	24009440 	.word	0x24009440

9000237c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
9000237c:	4b01      	ldr	r3, [pc, #4]	; (90002384 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
9000237e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
90002382:	4770      	bx	lr
90002384:	50001000 	.word	0x50001000

90002388 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002388:	4b02      	ldr	r3, [pc, #8]	; (90002394 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
9000238a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
9000238c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002390:	625a      	str	r2, [r3, #36]	; 0x24
}
90002392:	4770      	bx	lr
90002394:	50001000 	.word	0x50001000

90002398 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
90002398:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
9000239c:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
9000239e:	4770      	bx	lr

900023a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023a0:	4770      	bx	lr
900023a2:	bf00      	nop

900023a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
900023a4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
900023a8:	4611      	mov	r1, r2
900023aa:	6840      	ldr	r0, [r0, #4]
900023ac:	6803      	ldr	r3, [r0, #0]
900023ae:	68db      	ldr	r3, [r3, #12]
900023b0:	4718      	bx	r3
900023b2:	bf00      	nop

900023b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023b4:	b510      	push	{r4, lr}
900023b6:	4604      	mov	r4, r0
900023b8:	2148      	movs	r1, #72	; 0x48
900023ba:	f027 f913 	bl	900295e4 <_ZdlPvj>
900023be:	4620      	mov	r0, r4
900023c0:	bd10      	pop	{r4, pc}
900023c2:	bf00      	nop

900023c4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        mjpegDecoders[handle]->getVideoInfo(data);
    }

    virtual bool getIsPlaying(const Handle handle)
    {
        assert(handle < no_streams);
900023c4:	b911      	cbnz	r1, 900023cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
        Stream& stream = streams[handle];
        return stream.isPlaying;
    }
900023c6:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
900023ca:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
900023cc:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900023ce:	4a03      	ldr	r2, [pc, #12]	; (900023dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
900023d0:	f44f 71b8 	mov.w	r1, #368	; 0x170
900023d4:	4b02      	ldr	r3, [pc, #8]	; (900023e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
900023d6:	4803      	ldr	r0, [pc, #12]	; (900023e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
900023d8:	f027 f932 	bl	90029640 <__assert_func>
900023dc:	9002afe4 	.word	0x9002afe4
900023e0:	9002afd0 	.word	0x9002afd0
900023e4:	9002b170 	.word	0x9002b170

900023e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
900023e8:	b921      	cbnz	r1, 900023f4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
900023ea:	6840      	ldr	r0, [r0, #4]
900023ec:	4611      	mov	r1, r2
900023ee:	6803      	ldr	r3, [r0, #0]
900023f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900023f2:	4718      	bx	r3
        assert(handle < no_streams);
900023f4:	4b03      	ldr	r3, [pc, #12]	; (90002404 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
900023f6:	f44f 71b5 	mov.w	r1, #362	; 0x16a
900023fa:	4a03      	ldr	r2, [pc, #12]	; (90002408 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
900023fc:	4803      	ldr	r0, [pc, #12]	; (9000240c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
900023fe:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002400:	f027 f91e 	bl	90029640 <__assert_func>
90002404:	9002afd0 	.word	0x9002afd0
90002408:	9002b1b4 	.word	0x9002b1b4
9000240c:	9002b170 	.word	0x9002b170

90002410 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002410:	b909      	cbnz	r1, 90002416 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002412:	68c0      	ldr	r0, [r0, #12]
90002414:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002416:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002418:	4a02      	ldr	r2, [pc, #8]	; (90002424 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
9000241a:	2179      	movs	r1, #121	; 0x79
9000241c:	4b02      	ldr	r3, [pc, #8]	; (90002428 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
9000241e:	4803      	ldr	r0, [pc, #12]	; (9000242c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002420:	f027 f90e 	bl	90029640 <__assert_func>
90002424:	9002b364 	.word	0x9002b364
90002428:	9002afd0 	.word	0x9002afd0
9000242c:	9002b170 	.word	0x9002b170

90002430 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90002430:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002432:	460c      	mov	r4, r1
90002434:	b949      	cbnz	r1, 9000244a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
90002436:	4611      	mov	r1, r2
90002438:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
9000243a:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
9000243c:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
9000243e:	681c      	ldr	r4, [r3, #0]
90002440:	4618      	mov	r0, r3
90002442:	68a3      	ldr	r3, [r4, #8]
    }
90002444:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
90002448:	4718      	bx	r3
        assert(handle < no_streams);
9000244a:	4b03      	ldr	r3, [pc, #12]	; (90002458 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
9000244c:	2190      	movs	r1, #144	; 0x90
9000244e:	4a03      	ldr	r2, [pc, #12]	; (9000245c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
90002450:	4803      	ldr	r0, [pc, #12]	; (90002460 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
90002452:	f027 f8f5 	bl	90029640 <__assert_func>
90002456:	bf00      	nop
90002458:	9002afd0 	.word	0x9002afd0
9000245c:	9002b518 	.word	0x9002b518
90002460:	9002b170 	.word	0x9002b170

90002464 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90002464:	b921      	cbnz	r1, 90002470 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
90002466:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
9000246a:	e9c0 3206 	strd	r3, r2, [r0, #24]
9000246e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90002470:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002472:	4a03      	ldr	r2, [pc, #12]	; (90002480 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90002474:	2182      	movs	r1, #130	; 0x82
90002476:	4b03      	ldr	r3, [pc, #12]	; (90002484 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90002478:	4803      	ldr	r0, [pc, #12]	; (90002488 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
9000247a:	f027 f8e1 	bl	90029640 <__assert_func>
9000247e:	bf00      	nop
90002480:	9002b6f4 	.word	0x9002b6f4
90002484:	9002afd0 	.word	0x9002afd0
90002488:	9002b170 	.word	0x9002b170

9000248c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
9000248c:	f010 bde4 	b.w	90013058 <_ZN8touchgfx3HAL10beginFrameEv>

90002490 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002490:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
90002494:	b903      	cbnz	r3, 90002498 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
90002496:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90002498:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
9000249a:	f04f 31ff 	mov.w	r1, #4294967295
9000249e:	4604      	mov	r4, r0
900024a0:	6c40      	ldr	r0, [r0, #68]	; 0x44
900024a2:	f00d fbd3 	bl	9000fc4c <osMutexAcquire>
            firstDrawThisFrame = false;
900024a6:	f44f 7380 	mov.w	r3, #256	; 0x100
900024aa:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
900024ae:	bd10      	pop	{r4, pc}

900024b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
900024b0:	b538      	push	{r3, r4, r5, lr}
900024b2:	460c      	mov	r4, r1
900024b4:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
900024b6:	f04f 31ff 	mov.w	r1, #4294967295
900024ba:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
900024bc:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
900024c0:	f00d fbc4 	bl	9000fc4c <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
900024c4:	6c68      	ldr	r0, [r5, #68]	; 0x44
900024c6:	f00d fbe5 	bl	9000fc94 <osMutexRelease>
        streams[handle].isActive = false;
900024ca:	2300      	movs	r3, #0
900024cc:	eb05 0484 	add.w	r4, r5, r4, lsl #2
900024d0:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
900024d4:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
900024d8:	b90b      	cbnz	r3, 900024de <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
900024da:	6b2b      	ldr	r3, [r5, #48]	; 0x30
900024dc:	63ab      	str	r3, [r5, #56]	; 0x38
    }
900024de:	bd38      	pop	{r3, r4, r5, pc}

900024e0 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
900024e0:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
900024e2:	4c1c      	ldr	r4, [pc, #112]	; (90002554 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
900024e4:	4605      	mov	r5, r0
    HAL::endFrame();
900024e6:	f010 fdc3 	bl	90013070 <_ZN8touchgfx3HAL8endFrameEv>
900024ea:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
900024ee:	b98b      	cbnz	r3, 90002514 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
900024f0:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
900024f4:	b973      	cbnz	r3, 90002514 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
900024f6:	2301      	movs	r3, #1
        SEM_POST(semDecode);
900024f8:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
900024fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
900024fe:	f00d fc6f 	bl	9000fde0 <osSemaphoreRelease>
        if (uiHasMutex)
90002502:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
90002506:	b9f3      	cbnz	r3, 90002546 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
90002508:	6868      	ldr	r0, [r5, #4]
9000250a:	6803      	ldr	r3, [r0, #0]
}
9000250c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
90002510:	691b      	ldr	r3, [r3, #16]
90002512:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
90002514:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002518:	69e1      	ldr	r1, [r4, #28]
9000251a:	6922      	ldr	r2, [r4, #16]
9000251c:	fb00 f303 	mul.w	r3, r0, r3
90002520:	fb01 f202 	mul.w	r2, r1, r2
90002524:	4293      	cmp	r3, r2
90002526:	d3e6      	bcc.n	900024f6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
90002528:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
9000252c:	b138      	cbz	r0, 9000253e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
9000252e:	1a9b      	subs	r3, r3, r2
90002530:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90002534:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
90002536:	bf98      	it	ls
90002538:	f102 32ff 	addls.w	r2, r2, #4294967295
9000253c:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
9000253e:	2301      	movs	r3, #1
90002540:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
90002544:	e7d7      	b.n	900024f6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
90002546:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002548:	f00d fba4 	bl	9000fc94 <osMutexRelease>
            uiHasMutex = false;
9000254c:	2300      	movs	r3, #0
9000254e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
90002552:	e7d9      	b.n	90002508 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
90002554:	2400948c 	.word	0x2400948c

90002558 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90002558:	f010 bd48 	b.w	90012fec <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

9000255c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
9000255c:	f010 bea9 	b.w	900132b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90002560 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002560:	4814      	ldr	r0, [pc, #80]	; (900025b4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
90002562:	6943      	ldr	r3, [r0, #20]
90002564:	03d9      	lsls	r1, r3, #15
90002566:	d523      	bpl.n	900025b0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002568:	2300      	movs	r3, #0
{
9000256a:	b510      	push	{r4, lr}
9000256c:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002570:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002574:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002578:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
9000257c:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002580:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90002584:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002588:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000258c:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000258e:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002592:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002594:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90002598:	1c5a      	adds	r2, r3, #1
9000259a:	d1f8      	bne.n	9000258e <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
9000259c:	f1ac 0c20 	sub.w	ip, ip, #32
900025a0:	f11c 0f20 	cmn.w	ip, #32
900025a4:	d1f0      	bne.n	90002588 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900025a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900025aa:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900025ae:	bd10      	pop	{r4, pc}
900025b0:	4770      	bx	lr
900025b2:	bf00      	nop
900025b4:	e000ed00 	.word	0xe000ed00

900025b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900025b8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900025ba:	2900      	cmp	r1, #0
900025bc:	d133      	bne.n	90002626 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
900025be:	4604      	mov	r4, r0
        switch (cmd)
900025c0:	2a05      	cmp	r2, #5
900025c2:	d809      	bhi.n	900025d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
900025c4:	e8df f002 	tbb	[pc, r2]
900025c8:	27221e0f 	.word	0x27221e0f
900025cc:	0903      	.short	0x0903
            stream.isPlaying = false;
900025ce:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
900025d0:	2301      	movs	r3, #1
            stream.isPlaying = false;
900025d2:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
900025d6:	6203      	str	r3, [r0, #32]
    }
900025d8:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
900025da:	3b00      	subs	r3, #0
900025dc:	bf18      	it	ne
900025de:	2301      	movne	r3, #1
900025e0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
900025e4:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
900025e6:	6840      	ldr	r0, [r0, #4]
900025e8:	6803      	ldr	r3, [r0, #0]
900025ea:	691b      	ldr	r3, [r3, #16]
900025ec:	4798      	blx	r3
900025ee:	2800      	cmp	r0, #0
900025f0:	d0f2      	beq.n	900025d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
900025f2:	2201      	movs	r2, #1
                stream.frameCount = 0;
900025f4:	2300      	movs	r3, #0
                stream.isPlaying = true;
900025f6:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
900025fa:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
900025fe:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
90002602:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
90002604:	2300      	movs	r3, #0
90002606:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
9000260a:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
9000260c:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000260e:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002610:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002614:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002616:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002618:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
9000261a:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
9000261c:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002620:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002624:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002626:	4b03      	ldr	r3, [pc, #12]	; (90002634 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
90002628:	21a2      	movs	r1, #162	; 0xa2
9000262a:	4a03      	ldr	r2, [pc, #12]	; (90002638 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
9000262c:	4803      	ldr	r0, [pc, #12]	; (9000263c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
9000262e:	f027 f807 	bl	90029640 <__assert_func>
90002632:	bf00      	nop
90002634:	9002afd0 	.word	0x9002afd0
90002638:	9002b8b0 	.word	0x9002b8b0
9000263c:	9002b170 	.word	0x9002b170

90002640 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90002640:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002642:	bb39      	cbnz	r1, 90002694 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
90002644:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
90002648:	4604      	mov	r4, r0
9000264a:	b923      	cbnz	r3, 90002656 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
9000264c:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002650:	b963      	cbnz	r3, 9000266c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
90002652:	2001      	movs	r0, #1
    }
90002654:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
90002656:	4912      	ldr	r1, [pc, #72]	; (900026a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90002658:	6943      	ldr	r3, [r0, #20]
9000265a:	6809      	ldr	r1, [r1, #0]
9000265c:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
90002660:	440b      	add	r3, r1
90002662:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
90002664:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002668:	2b00      	cmp	r3, #0
9000266a:	d0f2      	beq.n	90002652 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
9000266c:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
9000266e:	4610      	mov	r0, r2
90002670:	6813      	ldr	r3, [r2, #0]
90002672:	695b      	ldr	r3, [r3, #20]
90002674:	6311      	str	r1, [r2, #48]	; 0x30
90002676:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
90002678:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
9000267a:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
9000267e:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
90002682:	2800      	cmp	r0, #0
90002684:	d1e5      	bne.n	90002652 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
90002686:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
9000268a:	2b00      	cmp	r3, #0
9000268c:	d1e2      	bne.n	90002654 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
9000268e:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
90002692:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002694:	4b03      	ldr	r3, [pc, #12]	; (900026a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
90002696:	21d0      	movs	r1, #208	; 0xd0
90002698:	4a03      	ldr	r2, [pc, #12]	; (900026a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
9000269a:	4804      	ldr	r0, [pc, #16]	; (900026ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
9000269c:	f026 ffd0 	bl	90029640 <__assert_func>
900026a0:	24039acc 	.word	0x24039acc
900026a4:	9002afd0 	.word	0x9002afd0
900026a8:	9002ba84 	.word	0x9002ba84
900026ac:	9002b170 	.word	0x9002b170

900026b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
900026b0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
900026b4:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
900026b6:	b9fb      	cbnz	r3, 900026f8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
900026b8:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026ba:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
900026bc:	60c3      	str	r3, [r0, #12]
900026be:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026c2:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
900026c6:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
900026ca:	6103      	str	r3, [r0, #16]
900026cc:	6143      	str	r3, [r0, #20]
900026ce:	6183      	str	r3, [r0, #24]
900026d0:	61c3      	str	r3, [r0, #28]
900026d2:	6203      	str	r3, [r0, #32]
900026d4:	6243      	str	r3, [r0, #36]	; 0x24
900026d6:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026da:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
900026de:	4432      	add	r2, r6
900026e0:	4294      	cmp	r4, r2
900026e2:	d810      	bhi.n	90002706 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
900026e4:	4a0b      	ldr	r2, [pc, #44]	; (90002714 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
900026e6:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
900026e8:	6384      	str	r4, [r0, #56]	; 0x38
    }
900026ea:	4618      	mov	r0, r3
        format = bufferFormat;
900026ec:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
900026f0:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
900026f4:	630b      	str	r3, [r1, #48]	; 0x30
900026f6:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
900026f8:	4b07      	ldr	r3, [pc, #28]	; (90002718 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
900026fa:	f240 11c5 	movw	r1, #453	; 0x1c5
900026fe:	4a07      	ldr	r2, [pc, #28]	; (9000271c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002700:	4807      	ldr	r0, [pc, #28]	; (90002720 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002702:	f026 ff9d 	bl	90029640 <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
90002706:	4b07      	ldr	r3, [pc, #28]	; (90002724 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002708:	2152      	movs	r1, #82	; 0x52
9000270a:	4a07      	ldr	r2, [pc, #28]	; (90002728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
9000270c:	4804      	ldr	r0, [pc, #16]	; (90002720 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
9000270e:	f026 ff97 	bl	90029640 <__assert_func>
90002712:	bf00      	nop
90002714:	012001e0 	.word	0x012001e0
90002718:	9002bc24 	.word	0x9002bc24
9000271c:	9002bc54 	.word	0x9002bc54
90002720:	9002b170 	.word	0x9002b170
90002724:	9002bddc 	.word	0x9002bddc
90002728:	9002be18 	.word	0x9002be18

9000272c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000272c:	4b08      	ldr	r3, [pc, #32]	; (90002750 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
9000272e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90002732:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002736:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000273a:	f3bf 8f6f 	isb	sy
9000273e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002742:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002746:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000274a:	f3bf 8f6f 	isb	sy
}
9000274e:	4770      	bx	lr
90002750:	e000e100 	.word	0xe000e100

90002754 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002754:	4b03      	ldr	r3, [pc, #12]	; (90002764 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
90002756:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000275a:	609a      	str	r2, [r3, #8]
9000275c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002760:	609a      	str	r2, [r3, #8]
}
90002762:	4770      	bx	lr
90002764:	e000e100 	.word	0xe000e100

90002768 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90002768:	b538      	push	{r3, r4, r5, lr}
9000276a:	4604      	mov	r4, r0
    HAL::initialize();
9000276c:	f010 fc8d 	bl	9001308a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90002770:	6823      	ldr	r3, [r4, #0]
90002772:	6e5d      	ldr	r5, [r3, #100]	; 0x64
90002774:	f015 fdf8 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
90002778:	4601      	mov	r1, r0
9000277a:	4620      	mov	r0, r4
9000277c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
9000277e:	6823      	ldr	r3, [r4, #0]
90002780:	4a16      	ldr	r2, [pc, #88]	; (900027dc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
90002782:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
90002786:	4295      	cmp	r5, r2
90002788:	d11c      	bne.n	900027c4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000278a:	4a15      	ldr	r2, [pc, #84]	; (900027e0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000278c:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
9000278e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90002792:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002796:	4813      	ldr	r0, [pc, #76]	; (900027e4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002798:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
9000279c:	4a12      	ldr	r2, [pc, #72]	; (900027e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000279e:	7005      	strb	r5, [r0, #0]
900027a0:	4293      	cmp	r3, r2
900027a2:	d116      	bne.n	900027d2 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027a4:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027a6:	4a11      	ldr	r2, [pc, #68]	; (900027ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027a8:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027aa:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900027ac:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
900027ae:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
900027b2:	4b0f      	ldr	r3, [pc, #60]	; (900027f0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
900027b4:	490f      	ldr	r1, [pc, #60]	; (900027f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
900027b6:	4a10      	ldr	r2, [pc, #64]	; (900027f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
900027b8:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
900027ba:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
900027bc:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
900027be:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
900027c2:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900027c4:	4a0d      	ldr	r2, [pc, #52]	; (900027fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
900027c6:	2300      	movs	r3, #0
900027c8:	4620      	mov	r0, r4
900027ca:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
900027ce:	47a8      	blx	r5
900027d0:	e7ec      	b.n	900027ac <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900027d2:	2100      	movs	r1, #0
900027d4:	4620      	mov	r0, r4
900027d6:	4798      	blx	r3
900027d8:	e7e8      	b.n	900027ac <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900027da:	bf00      	nop
900027dc:	90000805 	.word	0x90000805
900027e0:	d003fc00 	.word	0xd003fc00
900027e4:	24039aca 	.word	0x24039aca
900027e8:	90000675 	.word	0x90000675
900027ec:	24039acb 	.word	0x24039acb
900027f0:	2400948c 	.word	0x2400948c
900027f4:	24009444 	.word	0x24009444
900027f8:	d00bf400 	.word	0xd00bf400
900027fc:	d007f800 	.word	0xd007f800

90002800 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002800:	b510      	push	{r4, lr}
        return instance;
90002802:	4c14      	ldr	r4, [pc, #80]	; (90002854 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90002804:	6823      	ldr	r3, [r4, #0]
90002806:	b323      	cbz	r3, 90002852 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002808:	4b13      	ldr	r3, [pc, #76]	; (90002858 <HAL_LTDC_LineEventCallback+0x58>)
9000280a:	4a14      	ldr	r2, [pc, #80]	; (9000285c <HAL_LTDC_LineEventCallback+0x5c>)
9000280c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9000280e:	8811      	ldrh	r1, [r2, #0]
90002810:	428b      	cmp	r3, r1
90002812:	d00a      	beq.n	9000282a <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90002814:	f00a fee6 	bl	9000d5e4 <HAL_LTDC_ProgramLineEvent>
90002818:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
9000281a:	6803      	ldr	r3, [r0, #0]
9000281c:	6a1b      	ldr	r3, [r3, #32]
9000281e:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002820:	2000      	movs	r0, #0
        }
    }
90002822:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
90002826:	f7fd bec9 	b.w	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
9000282a:	4b0d      	ldr	r3, [pc, #52]	; (90002860 <HAL_LTDC_LineEventCallback+0x60>)
9000282c:	8819      	ldrh	r1, [r3, #0]
9000282e:	f00a fed9 	bl	9000d5e4 <HAL_LTDC_ProgramLineEvent>
        return instance;
90002832:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
90002834:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
90002838:	3301      	adds	r3, #1
9000283a:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
9000283e:	f7ff f83f 	bl	900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90002842:	6820      	ldr	r0, [r4, #0]
90002844:	f011 f97a 	bl	90013b3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90002848:	2000      	movs	r0, #0
    }
9000284a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
9000284e:	f7fd be81 	b.w	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
90002852:	bd10      	pop	{r4, pc}
90002854:	24039acc 	.word	0x24039acc
90002858:	50001000 	.word	0x50001000
9000285c:	24009442 	.word	0x24009442
90002860:	24009440 	.word	0x24009440

90002864 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
90002864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90002868:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 90002924 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
9000286c:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
9000286e:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002870:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
90002874:	4604      	mov	r4, r0
90002876:	e024      	b.n	900028c2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
90002878:	682b      	ldr	r3, [r5, #0]
9000287a:	4628      	mov	r0, r5
9000287c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000287e:	4798      	blx	r3
                        stream.seek_to_frame = 0;
90002880:	2300      	movs	r3, #0
90002882:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002884:	6829      	ldr	r1, [r5, #0]
90002886:	f44f 7390 	mov.w	r3, #288	; 0x120
9000288a:	9700      	str	r7, [sp, #0]
9000288c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90002890:	f8d1 9014 	ldr.w	r9, [r1, #20]
90002894:	4628      	mov	r0, r5
90002896:	68a1      	ldr	r1, [r4, #8]
90002898:	47c8      	blx	r9
                    stream.frameCount++;
9000289a:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
9000289c:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
900028a0:	3301      	adds	r3, #1
900028a2:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
900028a4:	2800      	cmp	r0, #0
900028a6:	d033      	beq.n	90002910 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028a8:	682b      	ldr	r3, [r5, #0]
900028aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900028ac:	4543      	cmp	r3, r8
900028ae:	d131      	bne.n	90002914 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
900028b0:	6968      	ldr	r0, [r5, #20]
900028b2:	3801      	subs	r0, #1
                    stream.doDecode = false;
900028b4:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028b6:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
900028b8:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
900028bc:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028be:	f00d f9e9 	bl	9000fc94 <osMutexRelease>
            SEM_WAIT(semDecode);
900028c2:	f04f 31ff 	mov.w	r1, #4294967295
900028c6:	6c20      	ldr	r0, [r4, #64]	; 0x40
900028c8:	f00d fa56 	bl	9000fd78 <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
900028cc:	f04f 31ff 	mov.w	r1, #4294967295
900028d0:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028d2:	f00d f9bb 	bl	9000fc4c <osMutexAcquire>
                if (stream.doDecode)
900028d6:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
900028da:	2b00      	cmp	r3, #0
900028dc:	d0ee      	beq.n	900028bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
900028de:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
900028e0:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
900028e2:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
900028e6:	2900      	cmp	r1, #0
900028e8:	d1c6      	bne.n	90002878 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
900028ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
900028ec:	2b00      	cmp	r3, #0
900028ee:	d0c9      	beq.n	90002884 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900028f0:	682a      	ldr	r2, [r5, #0]
900028f2:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
900028f6:	4541      	cmp	r1, r8
900028f8:	d10f      	bne.n	9000291a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
900028fa:	6968      	ldr	r0, [r5, #20]
900028fc:	18c1      	adds	r1, r0, r3
900028fe:	4628      	mov	r0, r5
90002900:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
90002902:	6923      	ldr	r3, [r4, #16]
90002904:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
90002906:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90002908:	440b      	add	r3, r1
                            stream.skip_frames = 0;
9000290a:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
9000290c:	6123      	str	r3, [r4, #16]
9000290e:	e7b9      	b.n	90002884 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90002910:	2001      	movs	r0, #1
90002912:	e7cf      	b.n	900028b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002914:	4628      	mov	r0, r5
90002916:	4798      	blx	r3
90002918:	e7cb      	b.n	900028b2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
9000291a:	4628      	mov	r0, r5
9000291c:	4788      	blx	r1
9000291e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002920:	e7ec      	b.n	900028fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
90002922:	bf00      	nop
90002924:	9000097d 	.word	0x9000097d

90002928 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90002928:	4801      	ldr	r0, [pc, #4]	; (90002930 <videoTaskFunc+0x8>)
{
9000292a:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
9000292c:	f7ff ff9a 	bl	90002864 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90002930:	2400948c 	.word	0x2400948c

90002934 <_GLOBAL__sub_I_mjpegdecoder1>:
}
90002934:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
90002936:	4815      	ldr	r0, [pc, #84]	; (9000298c <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002938:	2500      	movs	r5, #0
9000293a:	f7fe fbc5 	bl	900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000293e:	4c14      	ldr	r4, [pc, #80]	; (90002990 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90002940:	4914      	ldr	r1, [pc, #80]	; (90002994 <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002942:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
90002946:	462a      	mov	r2, r5
90002948:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000294a:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
9000294c:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
9000294e:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002950:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002952:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
90002954:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002956:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
9000295a:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000295c:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002960:	e9c4 5504 	strd	r5, r5, [r4, #16]
90002964:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90002968:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
9000296c:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002970:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
90002974:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90002978:	f00d f9ae 	bl	9000fcd8 <osSemaphoreNew>
9000297c:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
9000297e:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90002980:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
90002982:	f00d f923 	bl	9000fbcc <osMutexNew>
90002986:	6460      	str	r0, [r4, #68]	; 0x44
}
90002988:	bd38      	pop	{r3, r4, r5, pc}
9000298a:	bf00      	nop
9000298c:	24009444 	.word	0x24009444
90002990:	2400948c 	.word	0x2400948c
90002994:	9002bfe4 	.word	0x9002bfe4

90002998 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90002998:	4901      	ldr	r1, [pc, #4]	; (900029a0 <vApplicationIdleHook+0x8>)
9000299a:	2000      	movs	r0, #0
9000299c:	f00f bbbc 	b.w	90012118 <vTaskSetApplicationTaskTag>
900029a0:	90000959 	.word	0x90000959

900029a4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
900029a4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
900029a6:	2064      	movs	r0, #100	; 0x64
900029a8:	f00d f902 	bl	9000fbb0 <osDelay>
  for(;;)
900029ac:	e7fb      	b.n	900029a6 <StartDefaultTask+0x2>
900029ae:	bf00      	nop

900029b0 <SystemClock_Config>:
{
900029b0:	b570      	push	{r4, r5, r6, lr}
900029b2:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
900029b4:	224c      	movs	r2, #76	; 0x4c
900029b6:	2100      	movs	r1, #0
900029b8:	a80a      	add	r0, sp, #40	; 0x28
900029ba:	f027 f8c9 	bl	90029b50 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
900029be:	2220      	movs	r2, #32
900029c0:	2100      	movs	r1, #0
900029c2:	a802      	add	r0, sp, #8
900029c4:	f027 f8c4 	bl	90029b50 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
900029c8:	2002      	movs	r0, #2
900029ca:	f00b f849 	bl	9000da60 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
900029ce:	4b22      	ldr	r3, [pc, #136]	; (90002a58 <SystemClock_Config+0xa8>)
900029d0:	2100      	movs	r1, #0
900029d2:	4a22      	ldr	r2, [pc, #136]	; (90002a5c <SystemClock_Config+0xac>)
900029d4:	9101      	str	r1, [sp, #4]
900029d6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
900029d8:	f021 0101 	bic.w	r1, r1, #1
900029dc:	62d9      	str	r1, [r3, #44]	; 0x2c
900029de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900029e0:	f003 0301 	and.w	r3, r3, #1
900029e4:	9301      	str	r3, [sp, #4]
900029e6:	6993      	ldr	r3, [r2, #24]
900029e8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
900029ec:	6193      	str	r3, [r2, #24]
900029ee:	6993      	ldr	r3, [r2, #24]
900029f0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
900029f4:	9301      	str	r3, [sp, #4]
900029f6:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
900029f8:	6993      	ldr	r3, [r2, #24]
900029fa:	0499      	lsls	r1, r3, #18
900029fc:	d5fc      	bpl.n	900029f8 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900029fe:	2201      	movs	r2, #1
90002a00:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002a04:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a06:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002a08:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a0a:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90002a0c:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002a0e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90002a12:	2205      	movs	r2, #5
90002a14:	23a0      	movs	r3, #160	; 0xa0
90002a16:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a1a:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002a1c:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a20:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a22:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002a26:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a2a:	f00b f8c1 	bl	9000dbb0 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a2e:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a30:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a32:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002a34:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a36:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a3a:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a3c:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002a3e:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90002a40:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a42:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a44:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002a48:	f44f 6380 	mov.w	r3, #1024	; 0x400
90002a4c:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a4e:	f00b fc43 	bl	9000e2d8 <HAL_RCC_ClockConfig>
}
90002a52:	b01e      	add	sp, #120	; 0x78
90002a54:	bd70      	pop	{r4, r5, r6, pc}
90002a56:	bf00      	nop
90002a58:	58000400 	.word	0x58000400
90002a5c:	58024800 	.word	0x58024800

90002a60 <main>:
{
90002a60:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a62:	2400      	movs	r4, #0
{
90002a64:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a66:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002a68:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002a6a:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a6c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002a70:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90002a74:	f007 ffdc 	bl	9000aa30 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a78:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a7c:	49d3      	ldr	r1, [pc, #844]	; (90002dcc <main+0x36c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a7e:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a80:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a82:	4bd3      	ldr	r3, [pc, #844]	; (90002dd0 <main+0x370>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a84:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a88:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a8c:	f007 ffee 	bl	9000aa6c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002a90:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a94:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002a96:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90002a9a:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002a9c:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002aa0:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002aa4:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aa8:	f007 ffe0 	bl	9000aa6c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002aac:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aae:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002ab0:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002ab4:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002ab8:	231a      	movs	r3, #26
90002aba:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002abe:	f240 1301 	movw	r3, #257	; 0x101
90002ac2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ac6:	f007 ffd1 	bl	9000aa6c <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002aca:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ace:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002ad0:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002ad4:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ad6:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ada:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002ade:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ae2:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002ae4:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ae8:	f007 ffc0 	bl	9000aa6c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002aec:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aee:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002af0:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002af4:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002af8:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002afc:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002b00:	f007 ffb4 	bl	9000aa6c <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002b04:	4620      	mov	r0, r4
90002b06:	f007 ffa1 	bl	9000aa4c <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002b0a:	4ab2      	ldr	r2, [pc, #712]	; (90002dd4 <main+0x374>)
90002b0c:	6953      	ldr	r3, [r2, #20]
90002b0e:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90002b12:	d111      	bne.n	90002b38 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90002b14:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b18:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002b1c:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002b20:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b24:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002b28:	6953      	ldr	r3, [r2, #20]
90002b2a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90002b2e:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002b30:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b34:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002b38:	48a6      	ldr	r0, [pc, #664]	; (90002dd4 <main+0x374>)
90002b3a:	6943      	ldr	r3, [r0, #20]
90002b3c:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002b40:	d124      	bne.n	90002b8c <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002b42:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002b46:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002b4a:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b4e:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002b52:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b56:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90002b5a:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b5c:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b60:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b62:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002b66:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b68:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90002b6c:	1c5a      	adds	r2, r3, #1
90002b6e:	d1f8      	bne.n	90002b62 <main+0x102>
    } while(sets-- != 0U);
90002b70:	3c20      	subs	r4, #32
90002b72:	f114 0f20 	cmn.w	r4, #32
90002b76:	d1f1      	bne.n	90002b5c <main+0xfc>
90002b78:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002b7c:	6943      	ldr	r3, [r0, #20]
90002b7e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002b82:	6143      	str	r3, [r0, #20]
90002b84:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b88:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002b8c:	f007 fe98 	bl	9000a8c0 <HAL_Init>
  SystemClock_Config();
90002b90:	f7ff ff0e 	bl	900029b0 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002b94:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002b96:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002b98:	4d8f      	ldr	r5, [pc, #572]	; (90002dd8 <main+0x378>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002b9a:	21c0      	movs	r1, #192	; 0xc0
90002b9c:	488f      	ldr	r0, [pc, #572]	; (90002ddc <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002b9e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002ba0:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002ba2:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ba4:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002ba8:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90002baa:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002bae:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002bb2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002bb6:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002bba:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bbe:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90002bc2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bc6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bca:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90002bce:	9301      	str	r3, [sp, #4]
90002bd0:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90002bd2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bd6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90002bda:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bde:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002be2:	f003 0340 	and.w	r3, r3, #64	; 0x40
90002be6:	9302      	str	r3, [sp, #8]
90002be8:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002bea:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90002bf2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bf6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bfa:	f403 7380 	and.w	r3, r3, #256	; 0x100
90002bfe:	9303      	str	r3, [sp, #12]
90002c00:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002c02:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c06:	f043 0310 	orr.w	r3, r3, #16
90002c0a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c0e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c12:	f003 0310 	and.w	r3, r3, #16
90002c16:	9304      	str	r3, [sp, #16]
90002c18:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002c1a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c1e:	f043 0302 	orr.w	r3, r3, #2
90002c22:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c26:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c2a:	f003 0302 	and.w	r3, r3, #2
90002c2e:	9305      	str	r3, [sp, #20]
90002c30:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90002c32:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c36:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90002c3a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c3e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c42:	f403 7300 	and.w	r3, r3, #512	; 0x200
90002c46:	9306      	str	r3, [sp, #24]
90002c48:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90002c4a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c4e:	f043 0308 	orr.w	r3, r3, #8
90002c52:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c56:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c5a:	f003 0308 	and.w	r3, r3, #8
90002c5e:	9307      	str	r3, [sp, #28]
90002c60:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002c62:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c66:	f043 0320 	orr.w	r3, r3, #32
90002c6a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c6e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c72:	f003 0320 	and.w	r3, r3, #32
90002c76:	9308      	str	r3, [sp, #32]
90002c78:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002c7a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90002c82:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c86:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c8a:	f003 0380 	and.w	r3, r3, #128	; 0x80
90002c8e:	9309      	str	r3, [sp, #36]	; 0x24
90002c90:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90002c92:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c96:	f043 0301 	orr.w	r3, r3, #1
90002c9a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c9e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002ca2:	f003 0301 	and.w	r3, r3, #1
90002ca6:	930a      	str	r3, [sp, #40]	; 0x28
90002ca8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002caa:	f008 facf 	bl	9000b24c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002cae:	4622      	mov	r2, r4
90002cb0:	2180      	movs	r1, #128	; 0x80
90002cb2:	484b      	ldr	r0, [pc, #300]	; (90002de0 <main+0x380>)
90002cb4:	f008 faca 	bl	9000b24c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90002cb8:	4622      	mov	r2, r4
90002cba:	2108      	movs	r1, #8
90002cbc:	4849      	ldr	r0, [pc, #292]	; (90002de4 <main+0x384>)
90002cbe:	f008 fac5 	bl	9000b24c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90002cc2:	2201      	movs	r2, #1
90002cc4:	4848      	ldr	r0, [pc, #288]	; (90002de8 <main+0x388>)
90002cc6:	4611      	mov	r1, r2
90002cc8:	f008 fac0 	bl	9000b24c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90002ccc:	4622      	mov	r2, r4
90002cce:	2144      	movs	r1, #68	; 0x44
90002cd0:	4846      	ldr	r0, [pc, #280]	; (90002dec <main+0x38c>)
90002cd2:	f008 fabb 	bl	9000b24c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002cd6:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002cd8:	a90b      	add	r1, sp, #44	; 0x2c
90002cda:	4840      	ldr	r0, [pc, #256]	; (90002ddc <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002cdc:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ce0:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ce4:	f008 f8b2 	bl	9000ae4c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002ce8:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cea:	a90b      	add	r1, sp, #44	; 0x2c
90002cec:	483c      	ldr	r0, [pc, #240]	; (90002de0 <main+0x380>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002cee:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002cf0:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002cf2:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cf6:	f008 f8a9 	bl	9000ae4c <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002cfa:	a90b      	add	r1, sp, #44	; 0x2c
90002cfc:	4839      	ldr	r0, [pc, #228]	; (90002de4 <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002cfe:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002d02:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d04:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002d08:	f008 f8a0 	bl	9000ae4c <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d0c:	a90b      	add	r1, sp, #44	; 0x2c
90002d0e:	4836      	ldr	r0, [pc, #216]	; (90002de8 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d10:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d14:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d18:	f008 f898 	bl	9000ae4c <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d1c:	a90b      	add	r1, sp, #44	; 0x2c
90002d1e:	4833      	ldr	r0, [pc, #204]	; (90002dec <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d20:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d24:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d28:	f008 f890 	bl	9000ae4c <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d2c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d30:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d34:	a90b      	add	r1, sp, #44	; 0x2c
90002d36:	482d      	ldr	r0, [pc, #180]	; (90002dec <main+0x38c>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d38:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d3c:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d40:	f008 f884 	bl	9000ae4c <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d44:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d48:	4622      	mov	r2, r4
90002d4a:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d4c:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d4e:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d50:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90002d54:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
90002d58:	4d25      	ldr	r5, [pc, #148]	; (90002df0 <main+0x390>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d5a:	4033      	ands	r3, r6
90002d5c:	9300      	str	r3, [sp, #0]
90002d5e:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d60:	f007 fe08 	bl	9000a974 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90002d64:	207a      	movs	r0, #122	; 0x7a
90002d66:	f007 fe43 	bl	9000a9f0 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002d6a:	2234      	movs	r2, #52	; 0x34
90002d6c:	4621      	mov	r1, r4
90002d6e:	a80b      	add	r0, sp, #44	; 0x2c
90002d70:	f026 feee 	bl	90029b50 <memset>
  hltdc.Instance = LTDC;
90002d74:	4b1f      	ldr	r3, [pc, #124]	; (90002df4 <main+0x394>)
  hltdc.Init.AccumulatedVBP = 11;
90002d76:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90002d78:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90002d7a:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90002d7c:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90002d7e:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90002d82:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90002d86:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90002d88:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90002d8a:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90002d8c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90002d90:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002d94:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002d98:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90002d9a:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90002d9e:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002da2:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90002da4:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90002da8:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90002dac:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002db0:	f00a fa72 	bl	9000d298 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90002db4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002db8:	4622      	mov	r2, r4
90002dba:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90002dbc:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002dbe:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90002dc0:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
90002dc2:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
90002dc6:	4d0c      	ldr	r5, [pc, #48]	; (90002df8 <main+0x398>)
  pLayerCfg.WindowY1 = 272;
90002dc8:	930e      	str	r3, [sp, #56]	; 0x38
90002dca:	e017      	b.n	90002dfc <main+0x39c>
90002dcc:	03000012 	.word	0x03000012
90002dd0:	01010001 	.word	0x01010001
90002dd4:	e000ed00 	.word	0xe000ed00
90002dd8:	58024400 	.word	0x58024400
90002ddc:	58020400 	.word	0x58020400
90002de0:	58020c00 	.word	0x58020c00
90002de4:	58021800 	.word	0x58021800
90002de8:	58022800 	.word	0x58022800
90002dec:	58020000 	.word	0x58020000
90002df0:	240095c0 	.word	0x240095c0
90002df4:	50001000 	.word	0x50001000
90002df8:	24009500 	.word	0x24009500
  pLayerCfg.ImageHeight = 272;
90002dfc:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90002dfe:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
90002e00:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
90002e02:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e04:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowY0 = 0;
90002e08:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e0a:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.Alpha0 = 0;
90002e0c:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
90002e0e:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
90002e10:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
90002e14:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002e18:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002e1a:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002e1e:	f00a fb0f 	bl	9000d440 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90002e22:	4b35      	ldr	r3, [pc, #212]	; (90002ef8 <main+0x498>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e24:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90002e26:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
90002e28:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
90002e2a:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90002e2c:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90002e30:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90002e34:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90002e38:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e3c:	f007 febe 	bl	9000abbc <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90002e40:	4631      	mov	r1, r6
90002e42:	4628      	mov	r0, r5
90002e44:	f007 ff92 	bl	9000ad6c <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e48:	482c      	ldr	r0, [pc, #176]	; (90002efc <main+0x49c>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e4a:	f44f 73c0 	mov.w	r3, #384	; 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e4e:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90002e50:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90002e54:	970b      	str	r7, [sp, #44]	; 0x2c
  SdramTiming.SelfRefreshTime = 4;
90002e56:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90002e5a:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90002e5e:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90002e62:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e64:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90002e68:	f44f 6300 	mov.w	r3, #2048	; 0x800
90002e6c:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90002e6e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90002e72:	6243      	str	r3, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90002e74:	2307      	movs	r3, #7
90002e76:	930c      	str	r3, [sp, #48]	; 0x30
  SdramTiming.RowCycleDelay = 7;
90002e78:	930e      	str	r3, [sp, #56]	; 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e7a:	4b21      	ldr	r3, [pc, #132]	; (90002f00 <main+0x4a0>)
90002e7c:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e7e:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90002e80:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e84:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90002e86:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e8a:	f00c fafd 	bl	9000f488 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90002e8e:	4620      	mov	r0, r4
90002e90:	f007 faa8 	bl	9000a3e4 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90002e94:	4620      	mov	r0, r4
90002e96:	f007 faef 	bl	9000a478 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90002e9a:	f7fd fa9b 	bl	900003d4 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90002e9e:	4b19      	ldr	r3, [pc, #100]	; (90002f04 <main+0x4a4>)
90002ea0:	4819      	ldr	r0, [pc, #100]	; (90002f08 <main+0x4a8>)
90002ea2:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90002ea4:	f009 f9cc 	bl	9000c240 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90002ea8:	4818      	ldr	r0, [pc, #96]	; (90002f0c <main+0x4ac>)
90002eaa:	4b19      	ldr	r3, [pc, #100]	; (90002f10 <main+0x4b0>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90002eac:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90002eae:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90002eb0:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90002eb2:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90002eb6:	f007 fe0b 	bl	9000aad0 <HAL_CRC_Init>
  MX_TouchGFX_Init();
90002eba:	f7fd fa8f 	bl	900003dc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90002ebe:	f7fd fa8b 	bl	900003d8 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90002ec2:	f00c fdff 	bl	9000fac4 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ec6:	4a13      	ldr	r2, [pc, #76]	; (90002f14 <main+0x4b4>)
90002ec8:	4621      	mov	r1, r4
90002eca:	4813      	ldr	r0, [pc, #76]	; (90002f18 <main+0x4b8>)
90002ecc:	f00c fe26 	bl	9000fb1c <osThreadNew>
90002ed0:	4b12      	ldr	r3, [pc, #72]	; (90002f1c <main+0x4bc>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ed2:	4a13      	ldr	r2, [pc, #76]	; (90002f20 <main+0x4c0>)
90002ed4:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ed6:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ed8:	4812      	ldr	r0, [pc, #72]	; (90002f24 <main+0x4c4>)
90002eda:	f00c fe1f 	bl	9000fb1c <osThreadNew>
90002ede:	4b12      	ldr	r3, [pc, #72]	; (90002f28 <main+0x4c8>)
90002ee0:	4605      	mov	r5, r0
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002ee2:	4a12      	ldr	r2, [pc, #72]	; (90002f2c <main+0x4cc>)
90002ee4:	4621      	mov	r1, r4
90002ee6:	4812      	ldr	r0, [pc, #72]	; (90002f30 <main+0x4d0>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ee8:	601d      	str	r5, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002eea:	f00c fe17 	bl	9000fb1c <osThreadNew>
90002eee:	4b11      	ldr	r3, [pc, #68]	; (90002f34 <main+0x4d4>)
90002ef0:	6018      	str	r0, [r3, #0]
  osKernelStart();
90002ef2:	f00c fdf9 	bl	9000fae8 <osKernelStart>
  while (1)
90002ef6:	e7fe      	b.n	90002ef6 <main+0x496>
90002ef8:	52001000 	.word	0x52001000
90002efc:	24009740 	.word	0x24009740
90002f00:	52004140 	.word	0x52004140
90002f04:	52003000 	.word	0x52003000
90002f08:	24009568 	.word	0x24009568
90002f0c:	240094dc 	.word	0x240094dc
90002f10:	58024c00 	.word	0x58024c00
90002f14:	9002c060 	.word	0x9002c060
90002f18:	900029a5 	.word	0x900029a5
90002f1c:	240094d8 	.word	0x240094d8
90002f20:	9002c03c 	.word	0x9002c03c
90002f24:	900003ed 	.word	0x900003ed
90002f28:	240094d4 	.word	0x240094d4
90002f2c:	9002c084 	.word	0x9002c084
90002f30:	90002929 	.word	0x90002929
90002f34:	24009774 	.word	0x24009774

90002f38 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90002f38:	4b03      	ldr	r3, [pc, #12]	; (90002f48 <HAL_TIM_PeriodElapsedCallback+0x10>)
90002f3a:	6802      	ldr	r2, [r0, #0]
90002f3c:	429a      	cmp	r2, r3
90002f3e:	d000      	beq.n	90002f42 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90002f40:	4770      	bx	lr
    HAL_IncTick();
90002f42:	f007 bced 	b.w	9000a920 <HAL_IncTick>
90002f46:	bf00      	nop
90002f48:	40001000 	.word	0x40001000

90002f4c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90002f4c:	4770      	bx	lr
90002f4e:	bf00      	nop

90002f50 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f50:	4b0b      	ldr	r3, [pc, #44]	; (90002f80 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f52:	2200      	movs	r2, #0
90002f54:	210f      	movs	r1, #15
90002f56:	f06f 0001 	mvn.w	r0, #1
{
90002f5a:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f5c:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
90002f60:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f62:	f044 0402 	orr.w	r4, r4, #2
90002f66:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
90002f6a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
90002f6e:	f003 0302 	and.w	r3, r3, #2
90002f72:	9301      	str	r3, [sp, #4]
90002f74:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90002f76:	b003      	add	sp, #12
90002f78:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f7c:	f007 bcfa 	b.w	9000a974 <HAL_NVIC_SetPriority>
90002f80:	58024400 	.word	0x58024400

90002f84 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90002f84:	4b0a      	ldr	r3, [pc, #40]	; (90002fb0 <HAL_CRC_MspInit+0x2c>)
90002f86:	6802      	ldr	r2, [r0, #0]
90002f88:	429a      	cmp	r2, r3
90002f8a:	d000      	beq.n	90002f8e <HAL_CRC_MspInit+0xa>
90002f8c:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90002f8e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
90002f92:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90002f94:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90002f98:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
90002f9c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90002fa0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
90002fa4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90002fa8:	9301      	str	r3, [sp, #4]
90002faa:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90002fac:	b002      	add	sp, #8
90002fae:	4770      	bx	lr
90002fb0:	58024c00 	.word	0x58024c00

90002fb4 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90002fb4:	4b0f      	ldr	r3, [pc, #60]	; (90002ff4 <HAL_DMA2D_MspInit+0x40>)
90002fb6:	6802      	ldr	r2, [r0, #0]
90002fb8:	429a      	cmp	r2, r3
90002fba:	d000      	beq.n	90002fbe <HAL_DMA2D_MspInit+0xa>
90002fbc:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fbe:	4b0e      	ldr	r3, [pc, #56]	; (90002ff8 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fc0:	205a      	movs	r0, #90	; 0x5a
90002fc2:	2200      	movs	r2, #0
90002fc4:	2105      	movs	r1, #5
{
90002fc6:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fc8:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
90002fcc:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fce:	f044 0410 	orr.w	r4, r4, #16
90002fd2:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
90002fd6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90002fda:	f003 0310 	and.w	r3, r3, #16
90002fde:	9301      	str	r3, [sp, #4]
90002fe0:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fe2:	f007 fcc7 	bl	9000a974 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002fe6:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90002fe8:	b002      	add	sp, #8
90002fea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002fee:	f007 bcff 	b.w	9000a9f0 <HAL_NVIC_EnableIRQ>
90002ff2:	bf00      	nop
90002ff4:	52001000 	.word	0x52001000
90002ff8:	58024400 	.word	0x58024400

90002ffc <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90002ffc:	4b3f      	ldr	r3, [pc, #252]	; (900030fc <HAL_JPEG_MspInit+0x100>)
90002ffe:	6802      	ldr	r2, [r0, #0]
90003000:	429a      	cmp	r2, r3
90003002:	d000      	beq.n	90003006 <HAL_JPEG_MspInit+0xa>
90003004:	4770      	bx	lr
{
90003006:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003008:	4b3d      	ldr	r3, [pc, #244]	; (90003100 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000300a:	2211      	movs	r2, #17
9000300c:	4e3d      	ldr	r6, [pc, #244]	; (90003104 <HAL_JPEG_MspInit+0x108>)
{
9000300e:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003010:	4d3d      	ldr	r5, [pc, #244]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
90003012:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003014:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003016:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003018:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
9000301c:	493b      	ldr	r1, [pc, #236]	; (9000310c <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
9000301e:	f042 0220 	orr.w	r2, r2, #32
90003022:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003026:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003028:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000302c:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
9000302e:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003032:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003034:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003036:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003038:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
9000303a:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000303c:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003040:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
90003044:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003046:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003048:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
9000304c:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003050:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90003052:	f44f 3300 	mov.w	r3, #131072	; 0x20000
90003056:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
9000305a:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000305e:	2313      	movs	r3, #19
90003060:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90003062:	2302      	movs	r3, #2
90003064:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003066:	f00a fadf 	bl	9000d628 <HAL_MDMA_Init>
9000306a:	2800      	cmp	r0, #0
9000306c:	d13a      	bne.n	900030e4 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
9000306e:	2200      	movs	r2, #0
90003070:	4824      	ldr	r0, [pc, #144]	; (90003104 <HAL_JPEG_MspInit+0x108>)
90003072:	4611      	mov	r1, r2
90003074:	f00a fb76 	bl	9000d764 <HAL_MDMA_ConfigPostRequestMask>
90003078:	2800      	cmp	r0, #0
9000307a:	d13c      	bne.n	900030f6 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000307c:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000307e:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003080:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003082:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003084:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90003086:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003088:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000308c:	4920      	ldr	r1, [pc, #128]	; (90003110 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000308e:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003090:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
90003092:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003094:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003096:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
9000309a:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000309e:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030a0:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900030a2:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900030a6:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030a8:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030ac:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030b0:	4815      	ldr	r0, [pc, #84]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030b2:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030b4:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030b6:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030b8:	f00a fab6 	bl	9000d628 <HAL_MDMA_Init>
900030bc:	b9c0      	cbnz	r0, 900030f0 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900030be:	2200      	movs	r2, #0
900030c0:	4811      	ldr	r0, [pc, #68]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
900030c2:	4611      	mov	r1, r2
900030c4:	f00a fb4e 	bl	9000d764 <HAL_MDMA_ConfigPostRequestMask>
900030c8:	b978      	cbnz	r0, 900030ea <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030ca:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030cc:	2079      	movs	r0, #121	; 0x79
900030ce:	2200      	movs	r2, #0
900030d0:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030d2:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030d4:	f007 fc4e 	bl	9000a974 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030d8:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
900030da:	b002      	add	sp, #8
900030dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030e0:	f007 bc86 	b.w	9000a9f0 <HAL_NVIC_EnableIRQ>
      Error_Handler();
900030e4:	f7ff ff32 	bl	90002f4c <Error_Handler>
900030e8:	e7c1      	b.n	9000306e <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900030ea:	f7ff ff2f 	bl	90002f4c <Error_Handler>
900030ee:	e7ec      	b.n	900030ca <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900030f0:	f7ff ff2c 	bl	90002f4c <Error_Handler>
900030f4:	e7e3      	b.n	900030be <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900030f6:	f7ff ff29 	bl	90002f4c <Error_Handler>
900030fa:	e7bf      	b.n	9000307c <HAL_JPEG_MspInit+0x80>
900030fc:	52003000 	.word	0x52003000
90003100:	58024400 	.word	0x58024400
90003104:	24009668 	.word	0x24009668
90003108:	240096d4 	.word	0x240096d4
9000310c:	52000200 	.word	0x52000200
90003110:	520001c0 	.word	0x520001c0

90003114 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90003114:	b570      	push	{r4, r5, r6, lr}
90003116:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003118:	2100      	movs	r1, #0
{
9000311a:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000311c:	22c0      	movs	r2, #192	; 0xc0
9000311e:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003120:	9109      	str	r1, [sp, #36]	; 0x24
90003122:	e9cd 1105 	strd	r1, r1, [sp, #20]
90003126:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000312a:	f026 fd11 	bl	90029b50 <memset>
  if(hltdc->Instance==LTDC)
9000312e:	4b4a      	ldr	r3, [pc, #296]	; (90003258 <HAL_LTDC_MspInit+0x144>)
90003130:	6822      	ldr	r2, [r4, #0]
90003132:	429a      	cmp	r2, r3
90003134:	d001      	beq.n	9000313a <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
90003136:	b03a      	add	sp, #232	; 0xe8
90003138:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000313a:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
9000313c:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000313e:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
90003142:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003144:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003146:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003148:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000314a:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
9000314c:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000314e:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003152:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003154:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003156:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000315a:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000315e:	f00b fb93 	bl	9000e888 <HAL_RCCEx_PeriphCLKConfig>
90003162:	2800      	cmp	r0, #0
90003164:	d174      	bne.n	90003250 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90003166:	4b3d      	ldr	r3, [pc, #244]	; (9000325c <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003168:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000316a:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000316c:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
9000316e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003172:	a905      	add	r1, sp, #20
90003174:	483a      	ldr	r0, [pc, #232]	; (90003260 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90003176:	f042 0208 	orr.w	r2, r2, #8
9000317a:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
9000317e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
90003182:	f002 0208 	and.w	r2, r2, #8
90003186:	9200      	str	r2, [sp, #0]
90003188:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
9000318a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000318e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
90003192:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003196:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000319a:	f402 6280 	and.w	r2, r2, #1024	; 0x400
9000319e:	9201      	str	r2, [sp, #4]
900031a0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900031a2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031a6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
900031aa:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031ae:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031b2:	f402 7280 	and.w	r2, r2, #256	; 0x100
900031b6:	9202      	str	r2, [sp, #8]
900031b8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900031ba:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031be:	f442 7200 	orr.w	r2, r2, #512	; 0x200
900031c2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031c6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031ca:	f402 7200 	and.w	r2, r2, #512	; 0x200
900031ce:	9203      	str	r2, [sp, #12]
900031d0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031d2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031d6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900031da:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031de:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900031e2:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031e4:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900031e8:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031ea:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031ec:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031ee:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031f0:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900031f2:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900031f6:	f007 fe29 	bl	9000ae4c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900031fa:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900031fe:	a905      	add	r1, sp, #20
90003200:	4818      	ldr	r0, [pc, #96]	; (90003264 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003202:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003204:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003208:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000320c:	f007 fe1e 	bl	9000ae4c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003210:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003214:	a905      	add	r1, sp, #20
90003216:	4814      	ldr	r0, [pc, #80]	; (90003268 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003218:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000321a:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000321e:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003222:	f007 fe13 	bl	9000ae4c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003226:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000322a:	a905      	add	r1, sp, #20
9000322c:	480f      	ldr	r0, [pc, #60]	; (9000326c <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000322e:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003230:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90003234:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003238:	f007 fe08 	bl	9000ae4c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
9000323c:	462a      	mov	r2, r5
9000323e:	2105      	movs	r1, #5
90003240:	2058      	movs	r0, #88	; 0x58
90003242:	f007 fb97 	bl	9000a974 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90003246:	2058      	movs	r0, #88	; 0x58
90003248:	f007 fbd2 	bl	9000a9f0 <HAL_NVIC_EnableIRQ>
}
9000324c:	b03a      	add	sp, #232	; 0xe8
9000324e:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90003250:	f7ff fe7c 	bl	90002f4c <Error_Handler>
90003254:	e787      	b.n	90003166 <HAL_LTDC_MspInit+0x52>
90003256:	bf00      	nop
90003258:	50001000 	.word	0x50001000
9000325c:	58024400 	.word	0x58024400
90003260:	58022800 	.word	0x58022800
90003264:	58022000 	.word	0x58022000
90003268:	58022400 	.word	0x58022400
9000326c:	58021c00 	.word	0x58021c00

90003270 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90003270:	4836      	ldr	r0, [pc, #216]	; (9000334c <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003272:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003274:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
90003276:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003278:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000327a:	e9cd 3302 	strd	r3, r3, [sp, #8]
9000327e:	e9cd 3304 	strd	r3, r3, [sp, #16]
90003282:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90003284:	b109      	cbz	r1, 9000328a <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
90003286:	b038      	add	sp, #224	; 0xe0
90003288:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
9000328a:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000328c:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
9000328e:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003290:	a80a      	add	r0, sp, #40	; 0x28
90003292:	f026 fc5d 	bl	90029b50 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90003296:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
9000329a:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000329c:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000329e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900032a2:	f00b faf1 	bl	9000e888 <HAL_RCCEx_PeriphCLKConfig>
900032a6:	2800      	cmp	r0, #0
900032a8:	d14c      	bne.n	90003344 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900032aa:	4b29      	ldr	r3, [pc, #164]	; (90003350 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032ac:	f64f 7083 	movw	r0, #65411	; 0xff83
900032b0:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032b2:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900032b4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032b8:	2600      	movs	r6, #0
900032ba:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900032bc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
900032c0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900032c4:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032c8:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900032ca:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032ce:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900032d2:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032d4:	a902      	add	r1, sp, #8
900032d6:	481f      	ldr	r0, [pc, #124]	; (90003354 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900032d8:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032da:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032de:	f007 fdb5 	bl	9000ae4c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032e2:	f248 1233 	movw	r2, #33075	; 0x8133
900032e6:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032e8:	a902      	add	r1, sp, #8
900032ea:	481b      	ldr	r0, [pc, #108]	; (90003358 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032ec:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032ee:	e9cd 2302 	strd	r2, r3, [sp, #8]
900032f2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032f6:	f007 fda9 	bl	9000ae4c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900032fa:	f24c 7203 	movw	r2, #50947	; 0xc703
900032fe:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003300:	a902      	add	r1, sp, #8
90003302:	4816      	ldr	r0, [pc, #88]	; (9000335c <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003304:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003306:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000330a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000330e:	f007 fd9d 	bl	9000ae4c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003312:	f64f 023f 	movw	r2, #63551	; 0xf83f
90003316:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003318:	a902      	add	r1, sp, #8
9000331a:	4811      	ldr	r0, [pc, #68]	; (90003360 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000331c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000331e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003322:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003326:	f007 fd91 	bl	9000ae4c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000332a:	22e0      	movs	r2, #224	; 0xe0
9000332c:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000332e:	a902      	add	r1, sp, #8
90003330:	480c      	ldr	r0, [pc, #48]	; (90003364 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003332:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003334:	e9cd 6704 	strd	r6, r7, [sp, #16]
90003338:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000333c:	f007 fd86 	bl	9000ae4c <HAL_GPIO_Init>
}
90003340:	b038      	add	sp, #224	; 0xe0
90003342:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90003344:	f7ff fe02 	bl	90002f4c <Error_Handler>
90003348:	e7af      	b.n	900032aa <HAL_SDRAM_MspInit+0x3a>
9000334a:	bf00      	nop
9000334c:	2400977c 	.word	0x2400977c
90003350:	58024400 	.word	0x58024400
90003354:	58021000 	.word	0x58021000
90003358:	58021800 	.word	0x58021800
9000335c:	58020c00 	.word	0x58020c00
90003360:	58021400 	.word	0x58021400
90003364:	58021c00 	.word	0x58021c00

90003368 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90003368:	4b13      	ldr	r3, [pc, #76]	; (900033b8 <HAL_SDRAM_MspDeInit+0x50>)
9000336a:	681a      	ldr	r2, [r3, #0]
9000336c:	b102      	cbz	r2, 90003370 <HAL_SDRAM_MspDeInit+0x8>
9000336e:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90003370:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90003372:	4a12      	ldr	r2, [pc, #72]	; (900033bc <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90003374:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003376:	f64f 7183 	movw	r1, #65411	; 0xff83
9000337a:	4811      	ldr	r0, [pc, #68]	; (900033c0 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
9000337c:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
9000337e:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
90003382:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90003386:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000338a:	f007 fe91 	bl	9000b0b0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000338e:	f248 1133 	movw	r1, #33075	; 0x8133
90003392:	480c      	ldr	r0, [pc, #48]	; (900033c4 <HAL_SDRAM_MspDeInit+0x5c>)
90003394:	f007 fe8c 	bl	9000b0b0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003398:	f24c 7103 	movw	r1, #50947	; 0xc703
9000339c:	480a      	ldr	r0, [pc, #40]	; (900033c8 <HAL_SDRAM_MspDeInit+0x60>)
9000339e:	f007 fe87 	bl	9000b0b0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900033a2:	f64f 013f 	movw	r1, #63551	; 0xf83f
900033a6:	4809      	ldr	r0, [pc, #36]	; (900033cc <HAL_SDRAM_MspDeInit+0x64>)
900033a8:	f007 fe82 	bl	9000b0b0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033ac:	21e0      	movs	r1, #224	; 0xe0
900033ae:	4808      	ldr	r0, [pc, #32]	; (900033d0 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900033b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033b4:	f007 be7c 	b.w	9000b0b0 <HAL_GPIO_DeInit>
900033b8:	24009778 	.word	0x24009778
900033bc:	58024400 	.word	0x58024400
900033c0:	58021000 	.word	0x58021000
900033c4:	58021800 	.word	0x58021800
900033c8:	58020c00 	.word	0x58020c00
900033cc:	58021400 	.word	0x58021400
900033d0:	58021c00 	.word	0x58021c00

900033d4 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900033d4:	280f      	cmp	r0, #15
900033d6:	d901      	bls.n	900033dc <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900033d8:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900033da:	4770      	bx	lr
{
900033dc:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033de:	4601      	mov	r1, r0
{
900033e0:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033e2:	2200      	movs	r2, #0
900033e4:	4604      	mov	r4, r0
900033e6:	2036      	movs	r0, #54	; 0x36
900033e8:	f007 fac4 	bl	9000a974 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900033ec:	2036      	movs	r0, #54	; 0x36
900033ee:	f007 faff 	bl	9000a9f0 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900033f2:	4b1a      	ldr	r3, [pc, #104]	; (9000345c <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
900033f4:	4a1a      	ldr	r2, [pc, #104]	; (90003460 <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900033f6:	4669      	mov	r1, sp
900033f8:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
900033fa:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
900033fc:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90003400:	f042 0210 	orr.w	r2, r2, #16
90003404:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003408:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
9000340c:	f003 0310 	and.w	r3, r3, #16
90003410:	9301      	str	r3, [sp, #4]
90003412:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90003414:	f00b f918 	bl	9000e648 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90003418:	9b07      	ldr	r3, [sp, #28]
9000341a:	b9bb      	cbnz	r3, 9000344c <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
9000341c:	f00b f884 	bl	9000e528 <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003420:	4b10      	ldr	r3, [pc, #64]	; (90003464 <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
90003422:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
90003424:	4c10      	ldr	r4, [pc, #64]	; (90003468 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003426:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
9000342a:	4d10      	ldr	r5, [pc, #64]	; (9000346c <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
9000342c:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003430:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003432:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
90003434:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90003436:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003438:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
9000343a:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
9000343e:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003440:	f00c f894 	bl	9000f56c <HAL_TIM_Base_Init>
90003444:	b130      	cbz	r0, 90003454 <HAL_InitTick+0x80>
    return HAL_ERROR;
90003446:	2001      	movs	r0, #1
}
90003448:	b00b      	add	sp, #44	; 0x2c
9000344a:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
9000344c:	f00b f86c 	bl	9000e528 <HAL_RCC_GetPCLK1Freq>
90003450:	0040      	lsls	r0, r0, #1
90003452:	e7e5      	b.n	90003420 <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
90003454:	4620      	mov	r0, r4
90003456:	f00c f93f 	bl	9000f6d8 <HAL_TIM_Base_Start_IT>
9000345a:	e7f5      	b.n	90003448 <HAL_InitTick+0x74>
9000345c:	58024400 	.word	0x58024400
90003460:	2400007c 	.word	0x2400007c
90003464:	431bde83 	.word	0x431bde83
90003468:	24009780 	.word	0x24009780
9000346c:	40001000 	.word	0x40001000

90003470 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90003470:	4770      	bx	lr
90003472:	bf00      	nop

90003474 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90003474:	e7fe      	b.n	90003474 <HardFault_Handler>
90003476:	bf00      	nop

90003478 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90003478:	e7fe      	b.n	90003478 <MemManage_Handler>
9000347a:	bf00      	nop

9000347c <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
9000347c:	e7fe      	b.n	9000347c <BusFault_Handler>
9000347e:	bf00      	nop

90003480 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90003480:	e7fe      	b.n	90003480 <UsageFault_Handler>
90003482:	bf00      	nop

90003484 <DebugMon_Handler>:
90003484:	4770      	bx	lr
90003486:	bf00      	nop

90003488 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90003488:	4801      	ldr	r0, [pc, #4]	; (90003490 <TIM6_DAC_IRQHandler+0x8>)
9000348a:	f00c b989 	b.w	9000f7a0 <HAL_TIM_IRQHandler>
9000348e:	bf00      	nop
90003490:	24009780 	.word	0x24009780

90003494 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90003494:	4801      	ldr	r0, [pc, #4]	; (9000349c <LTDC_IRQHandler+0x8>)
90003496:	f009 bf71 	b.w	9000d37c <HAL_LTDC_IRQHandler>
9000349a:	bf00      	nop
9000349c:	240095c0 	.word	0x240095c0

900034a0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900034a0:	4801      	ldr	r0, [pc, #4]	; (900034a8 <DMA2D_IRQHandler+0x8>)
900034a2:	f007 bbcf 	b.w	9000ac44 <HAL_DMA2D_IRQHandler>
900034a6:	bf00      	nop
900034a8:	24009500 	.word	0x24009500

900034ac <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900034ac:	4801      	ldr	r0, [pc, #4]	; (900034b4 <JPEG_IRQHandler+0x8>)
900034ae:	f009 be51 	b.w	9000d154 <HAL_JPEG_IRQHandler>
900034b2:	bf00      	nop
900034b4:	24009568 	.word	0x24009568

900034b8 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034b8:	4804      	ldr	r0, [pc, #16]	; (900034cc <MDMA_IRQHandler+0x14>)
{
900034ba:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034bc:	f00a fa12 	bl	9000d8e4 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034c0:	4803      	ldr	r0, [pc, #12]	; (900034d0 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900034c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034c6:	f00a ba0d 	b.w	9000d8e4 <HAL_MDMA_IRQHandler>
900034ca:	bf00      	nop
900034cc:	240096d4 	.word	0x240096d4
900034d0:	24009668 	.word	0x24009668

900034d4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900034d4:	2001      	movs	r0, #1
900034d6:	4770      	bx	lr

900034d8 <_kill>:

int _kill(int pid, int sig)
{
900034d8:	b508      	push	{r3, lr}
	errno = EINVAL;
900034da:	f026 fbed 	bl	90029cb8 <__errno>
900034de:	2216      	movs	r2, #22
900034e0:	4603      	mov	r3, r0
	return -1;
}
900034e2:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900034e6:	601a      	str	r2, [r3, #0]
}
900034e8:	bd08      	pop	{r3, pc}
900034ea:	bf00      	nop

900034ec <_exit>:

void _exit (int status)
{
900034ec:	b508      	push	{r3, lr}
	errno = EINVAL;
900034ee:	f026 fbe3 	bl	90029cb8 <__errno>
900034f2:	2316      	movs	r3, #22
900034f4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
900034f6:	e7fe      	b.n	900034f6 <_exit+0xa>

900034f8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
900034f8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900034fa:	1e16      	subs	r6, r2, #0
900034fc:	dd07      	ble.n	9000350e <_read+0x16>
900034fe:	460c      	mov	r4, r1
90003500:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90003502:	f3af 8000 	nop.w
90003506:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000350a:	42a5      	cmp	r5, r4
9000350c:	d1f9      	bne.n	90003502 <_read+0xa>
	}

return len;
}
9000350e:	4630      	mov	r0, r6
90003510:	bd70      	pop	{r4, r5, r6, pc}
90003512:	bf00      	nop

90003514 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90003514:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003516:	1e16      	subs	r6, r2, #0
90003518:	dd07      	ble.n	9000352a <_write+0x16>
9000351a:	460c      	mov	r4, r1
9000351c:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
9000351e:	f814 0b01 	ldrb.w	r0, [r4], #1
90003522:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003526:	42ac      	cmp	r4, r5
90003528:	d1f9      	bne.n	9000351e <_write+0xa>
	}
	return len;
}
9000352a:	4630      	mov	r0, r6
9000352c:	bd70      	pop	{r4, r5, r6, pc}
9000352e:	bf00      	nop

90003530 <_close>:

int _close(int file)
{
	return -1;
}
90003530:	f04f 30ff 	mov.w	r0, #4294967295
90003534:	4770      	bx	lr
90003536:	bf00      	nop

90003538 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90003538:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
9000353c:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
9000353e:	604b      	str	r3, [r1, #4]
}
90003540:	4770      	bx	lr
90003542:	bf00      	nop

90003544 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90003544:	2001      	movs	r0, #1
90003546:	4770      	bx	lr

90003548 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90003548:	2000      	movs	r0, #0
9000354a:	4770      	bx	lr

9000354c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
9000354c:	4770      	bx	lr
9000354e:	bf00      	nop

90003550 <_ZN23ApplicationFontProviderD0Ev>:
90003550:	b510      	push	{r4, lr}
90003552:	4604      	mov	r4, r0
90003554:	2104      	movs	r1, #4
90003556:	f026 f845 	bl	900295e4 <_ZdlPvj>
9000355a:	4620      	mov	r0, r4
9000355c:	bd10      	pop	{r4, pc}
9000355e:	bf00      	nop

90003560 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90003560:	2901      	cmp	r1, #1
{
90003562:	b508      	push	{r3, lr}
    switch (typography)
90003564:	d004      	beq.n	90003570 <_ZN23ApplicationFontProvider7getFontEt+0x10>
90003566:	2902      	cmp	r1, #2
90003568:	d00a      	beq.n	90003580 <_ZN23ApplicationFontProvider7getFontEt+0x20>
9000356a:	b129      	cbz	r1, 90003578 <_ZN23ApplicationFontProvider7getFontEt+0x18>
9000356c:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
9000356e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90003570:	f001 f87a 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
90003574:	6840      	ldr	r0, [r0, #4]
}
90003576:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90003578:	f001 f876 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
9000357c:	6800      	ldr	r0, [r0, #0]
}
9000357e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90003580:	f001 f872 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
90003584:	6880      	ldr	r0, [r0, #8]
}
90003586:	bd08      	pop	{r3, pc}

90003588 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90003588:	4800      	ldr	r0, [pc, #0]	; (9000358c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
9000358a:	4770      	bx	lr
9000358c:	9002c0bc 	.word	0x9002c0bc

90003590 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90003590:	2012      	movs	r0, #18
90003592:	4770      	bx	lr

90003594 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90003594:	b169      	cbz	r1, 900035b2 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90003596:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90003598:	b530      	push	{r4, r5, lr}
9000359a:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
9000359c:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000359e:	6895      	ldr	r5, [r2, #8]
900035a0:	f10d 0303 	add.w	r3, sp, #3
900035a4:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900035a6:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900035a8:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900035ac:	47a8      	blx	r5
        return glyph;
    }
900035ae:	b003      	add	sp, #12
900035b0:	bd30      	pop	{r4, r5, pc}
            return 0;
900035b2:	4608      	mov	r0, r1
    }
900035b4:	4770      	bx	lr
900035b6:	bf00      	nop

900035b8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900035b8:	89c0      	ldrh	r0, [r0, #14]
900035ba:	4770      	bx	lr

900035bc <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
900035bc:	8a00      	ldrh	r0, [r0, #16]
900035be:	4770      	bx	lr

900035c0 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
900035c0:	88c0      	ldrh	r0, [r0, #6]
900035c2:	4770      	bx	lr

900035c4 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
900035c4:	8880      	ldrh	r0, [r0, #4]
900035c6:	4770      	bx	lr

900035c8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
900035c8:	7a80      	ldrb	r0, [r0, #10]
    }
900035ca:	f000 007f 	and.w	r0, r0, #127	; 0x7f
900035ce:	4770      	bx	lr

900035d0 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
900035d0:	7a80      	ldrb	r0, [r0, #10]
    }
900035d2:	09c0      	lsrs	r0, r0, #7
900035d4:	4770      	bx	lr
900035d6:	bf00      	nop

900035d8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
900035d8:	4770      	bx	lr
900035da:	bf00      	nop

900035dc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
900035dc:	b510      	push	{r4, lr}
900035de:	4604      	mov	r4, r0
    }
900035e0:	2108      	movs	r1, #8
900035e2:	f025 ffff 	bl	900295e4 <_ZdlPvj>
900035e6:	4620      	mov	r0, r4
900035e8:	bd10      	pop	{r4, pc}
900035ea:	bf00      	nop

900035ec <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
900035ec:	4770      	bx	lr
900035ee:	bf00      	nop

900035f0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
900035f0:	f500 7398 	add.w	r3, r0, #304	; 0x130
900035f4:	6808      	ldr	r0, [r1, #0]
900035f6:	6849      	ldr	r1, [r1, #4]
900035f8:	c303      	stmia	r3!, {r0, r1}
    }
900035fa:	4770      	bx	lr

900035fc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
900035fc:	6a80      	ldr	r0, [r0, #40]	; 0x28
900035fe:	4770      	bx	lr

90003600 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90003600:	4770      	bx	lr
90003602:	bf00      	nop

90003604 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90003604:	4770      	bx	lr
90003606:	bf00      	nop

90003608 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90003608:	6041      	str	r1, [r0, #4]
    }
9000360a:	4770      	bx	lr

9000360c <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000360c:	f04f 0c00 	mov.w	ip, #0
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
        {
            return Rect(0, 0, rect.width, rect.height);
90003610:	688a      	ldr	r2, [r1, #8]
90003612:	f8c0 c000 	str.w	ip, [r0]
90003616:	6042      	str	r2, [r0, #4]
        }
90003618:	4770      	bx	lr
9000361a:	bf00      	nop

9000361c <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
9000361c:	4770      	bx	lr
9000361e:	bf00      	nop

90003620 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90003620:	4770      	bx	lr
90003622:	bf00      	nop

90003624 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003624:	4905      	ldr	r1, [pc, #20]	; (9000363c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90003626:	2200      	movs	r2, #0
// screen_main_menu

void FrontendApplicationBase::gotoscreen_main_menuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_main_menuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90003628:	f500 73a2 	add.w	r3, r0, #324	; 0x144
9000362c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003630:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003634:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_main_menuScreenNoTransition();
    }
90003638:	4770      	bx	lr
9000363a:	bf00      	nop
9000363c:	90003b3d 	.word	0x90003b3d

90003640 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90003640:	2301      	movs	r3, #1
90003642:	7203      	strb	r3, [r0, #8]
    }
90003644:	4770      	bx	lr
90003646:	bf00      	nop

90003648 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
90003648:	4770      	bx	lr
9000364a:	bf00      	nop

9000364c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
9000364c:	4770      	bx	lr
9000364e:	bf00      	nop

90003650 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
90003650:	4770      	bx	lr
90003652:	bf00      	nop

90003654 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90003654:	4770      	bx	lr
90003656:	bf00      	nop

90003658 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90003658:	4770      	bx	lr
9000365a:	bf00      	nop

9000365c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
9000365c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
9000365e:	6840      	ldr	r0, [r0, #4]
90003660:	6803      	ldr	r3, [r0, #0]
90003662:	3110      	adds	r1, #16
90003664:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90003666:	4718      	bx	r3

90003668 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
90003668:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
9000366a:	6840      	ldr	r0, [r0, #4]
9000366c:	6803      	ldr	r3, [r0, #0]
9000366e:	3110      	adds	r1, #16
90003670:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003672:	4718      	bx	r3

90003674 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
90003674:	4770      	bx	lr
90003676:	bf00      	nop

90003678 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90003678:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
9000367a:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
9000367c:	6841      	ldr	r1, [r0, #4]
9000367e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90003682:	eb01 0062 	add.w	r0, r1, r2, asr #1
90003686:	07d2      	lsls	r2, r2, #31
90003688:	d401      	bmi.n	9000368e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
9000368a:	689b      	ldr	r3, [r3, #8]
9000368c:	4718      	bx	r3
9000368e:	f851 200c 	ldr.w	r2, [r1, ip]
90003692:	689b      	ldr	r3, [r3, #8]
90003694:	58d3      	ldr	r3, [r2, r3]
90003696:	4718      	bx	r3

90003698 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90003698:	6843      	ldr	r3, [r0, #4]
9000369a:	b13b      	cbz	r3, 900036ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
9000369c:	6883      	ldr	r3, [r0, #8]
9000369e:	b10b      	cbz	r3, 900036a4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900036a0:	2001      	movs	r0, #1
    }
900036a2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900036a4:	68c0      	ldr	r0, [r0, #12]
900036a6:	f000 0001 	and.w	r0, r0, #1
900036aa:	4770      	bx	lr
900036ac:	4618      	mov	r0, r3
900036ae:	4770      	bx	lr

900036b0 <_ZN8touchgfx12NoTransitionD0Ev>:
900036b0:	b510      	push	{r4, lr}
900036b2:	4604      	mov	r4, r0
900036b4:	210c      	movs	r1, #12
900036b6:	f025 ff95 	bl	900295e4 <_ZdlPvj>
900036ba:	4620      	mov	r0, r4
900036bc:	bd10      	pop	{r4, pc}
900036be:	bf00      	nop

900036c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900036c0:	b510      	push	{r4, lr}
900036c2:	4604      	mov	r4, r0
900036c4:	2110      	movs	r1, #16
900036c6:	f025 ff8d 	bl	900295e4 <_ZdlPvj>
900036ca:	4620      	mov	r0, r4
900036cc:	bd10      	pop	{r4, pc}
900036ce:	bf00      	nop

900036d0 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900036d0:	b510      	push	{r4, lr}
900036d2:	4604      	mov	r4, r0
900036d4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
900036d8:	f025 ff84 	bl	900295e4 <_ZdlPvj>
900036dc:	4620      	mov	r0, r4
900036de:	bd10      	pop	{r4, pc}

900036e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
900036e0:	b510      	push	{r4, lr}
900036e2:	4604      	mov	r4, r0
900036e4:	2138      	movs	r1, #56	; 0x38
900036e6:	f025 ff7d 	bl	900295e4 <_ZdlPvj>
900036ea:	4620      	mov	r0, r4
900036ec:	bd10      	pop	{r4, pc}
900036ee:	bf00      	nop

900036f0 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
900036f0:	b510      	push	{r4, lr}
900036f2:	4604      	mov	r4, r0
900036f4:	2128      	movs	r1, #40	; 0x28
900036f6:	f025 ff75 	bl	900295e4 <_ZdlPvj>
900036fa:	4620      	mov	r0, r4
900036fc:	bd10      	pop	{r4, pc}
900036fe:	bf00      	nop

90003700 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
90003700:	b510      	push	{r4, lr}
90003702:	4604      	mov	r4, r0
90003704:	2140      	movs	r1, #64	; 0x40
90003706:	f025 ff6d 	bl	900295e4 <_ZdlPvj>
9000370a:	4620      	mov	r0, r4
9000370c:	bd10      	pop	{r4, pc}
9000370e:	bf00      	nop

90003710 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90003710:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90003712:	f014 fe29 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
90003716:	6803      	ldr	r3, [r0, #0]
    }
90003718:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
9000371c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000371e:	4718      	bx	r3

90003720 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90003720:	4b05      	ldr	r3, [pc, #20]	; (90003738 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
90003722:	781b      	ldrb	r3, [r3, #0]
90003724:	b13b      	cbz	r3, 90003736 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
90003726:	6843      	ldr	r3, [r0, #4]
90003728:	b12b      	cbz	r3, 90003736 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
9000372a:	681a      	ldr	r2, [r3, #0]
9000372c:	f100 010c 	add.w	r1, r0, #12
90003730:	4618      	mov	r0, r3
90003732:	6e53      	ldr	r3, [r2, #100]	; 0x64
90003734:	4718      	bx	r3
        }
    }
90003736:	4770      	bx	lr
90003738:	24039acb 	.word	0x24039acb

9000373c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
9000373c:	b510      	push	{r4, lr}
9000373e:	4604      	mov	r4, r0
        animationCounter++;
90003740:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
90003742:	b082      	sub	sp, #8
        animationCounter++;
90003744:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90003746:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
90003748:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
9000374a:	4298      	cmp	r0, r3
        animationCounter++;
9000374c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
9000374e:	d905      	bls.n	9000375c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x20>
            done = true;
90003750:	2201      	movs	r2, #1
            animationCounter = 0;
90003752:	2300      	movs	r3, #0
            done = true;
90003754:	7222      	strb	r2, [r4, #8]
            animationCounter = 0;
90003756:	72a3      	strb	r3, [r4, #10]
    }
90003758:	b002      	add	sp, #8
9000375a:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
9000375c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90003760:	2100      	movs	r1, #0
90003762:	f016 fbeb 	bl	90019f3c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90003766:	f010 0201 	ands.w	r2, r0, #1
9000376a:	b283      	uxth	r3, r0
9000376c:	d127      	bne.n	900037be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
9000376e:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003770:	4a17      	ldr	r2, [pc, #92]	; (900037d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                const uint16_t prevSolidWidth = solid.getWidth();
90003772:	8b21      	ldrh	r1, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003774:	8810      	ldrh	r0, [r2, #0]
90003776:	1ac2      	subs	r2, r0, r3
                const uint16_t delta = prevSolidWidth - solid.getWidth();
90003778:	1a09      	subs	r1, r1, r0
                screenContainer->invalidateRect(r);
9000377a:	6860      	ldr	r0, [r4, #4]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
9000377c:	b212      	sxth	r2, r2
                const uint16_t delta = prevSolidWidth - solid.getWidth();
9000377e:	440b      	add	r3, r1
                screenContainer->invalidateRect(r);
90003780:	4669      	mov	r1, sp
        rect.width = width;
90003782:	8322      	strh	r2, [r4, #24]
90003784:	f8ad 2000 	strh.w	r2, [sp]
90003788:	2200      	movs	r2, #0
9000378a:	f8ad 3004 	strh.w	r3, [sp, #4]
9000378e:	6803      	ldr	r3, [r0, #0]
90003790:	f8ad 2002 	strh.w	r2, [sp, #2]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
90003794:	4a0f      	ldr	r2, [pc, #60]	; (900037d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                screenContainer->invalidateRect(r);
90003796:	691b      	ldr	r3, [r3, #16]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
90003798:	f9b2 2000 	ldrsh.w	r2, [r2]
9000379c:	f8ad 2006 	strh.w	r2, [sp, #6]
                screenContainer->invalidateRect(r);
900037a0:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
900037a2:	7aa3      	ldrb	r3, [r4, #10]
900037a4:	2b01      	cmp	r3, #1
900037a6:	d1d7      	bne.n	90003758 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
900037a8:	4b0b      	ldr	r3, [pc, #44]	; (900037d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
900037aa:	781b      	ldrb	r3, [r3, #0]
900037ac:	2b00      	cmp	r3, #0
900037ae:	d0d3      	beq.n	90003758 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
900037b0:	f014 fdda 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
    }
900037b4:	b002      	add	sp, #8
900037b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
900037ba:	f014 bddb 	b.w	90018374 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
900037be:	f64f 71ff 	movw	r1, #65535	; 0xffff
900037c2:	2800      	cmp	r0, #0
900037c4:	bfd8      	it	le
900037c6:	460a      	movle	r2, r1
900037c8:	4413      	add	r3, r2
900037ca:	b29b      	uxth	r3, r3
900037cc:	81e3      	strh	r3, [r4, #14]
900037ce:	e7cf      	b.n	90003770 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
900037d0:	24039ac0 	.word	0x24039ac0
900037d4:	24039ac2 	.word	0x24039ac2
900037d8:	24039aca 	.word	0x24039aca

900037dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
900037dc:	b570      	push	{r4, r5, r6, lr}
900037de:	4605      	mov	r5, r0
        animationCounter++;
900037e0:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
900037e4:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
900037e6:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
900037ea:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
900037ec:	4298      	cmp	r0, r3
        animationCounter++;
900037ee:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
900037f2:	d905      	bls.n	90003800 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
900037f4:	2201      	movs	r2, #1
            animationCounter = 0;
900037f6:	2300      	movs	r3, #0
            done = true;
900037f8:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
900037fa:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
900037fe:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003800:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90003804:	2100      	movs	r1, #0
90003806:	f016 fb99 	bl	90019f3c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
9000380a:	f010 0201 	ands.w	r2, r0, #1
9000380e:	b283      	uxth	r3, r0
90003810:	d006      	beq.n	90003820 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003812:	f64f 71ff 	movw	r1, #65535	; 0xffff
90003816:	2800      	cmp	r0, #0
90003818:	bfd8      	it	le
9000381a:	460a      	movle	r2, r1
9000381c:	4413      	add	r3, r2
9000381e:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90003820:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90003822:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90003824:	6802      	ldr	r2, [r0, #0]
90003826:	4912      	ldr	r1, [pc, #72]	; (90003870 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90003828:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
9000382a:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
9000382c:	87ab      	strh	r3, [r5, #60]	; 0x3c
9000382e:	428a      	cmp	r2, r1
90003830:	d11b      	bne.n	9000386a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8e>
        return firstChild;
90003832:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003834:	b164      	cbz	r4, 90003850 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003836:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003838:	4e0e      	ldr	r6, [pc, #56]	; (90003874 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
9000383a:	6823      	ldr	r3, [r4, #0]
9000383c:	88a1      	ldrh	r1, [r4, #4]
9000383e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003840:	4411      	add	r1, r2
90003842:	42b3      	cmp	r3, r6
90003844:	b209      	sxth	r1, r1
        rect.x = x;
90003846:	d109      	bne.n	9000385c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>
90003848:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
9000384a:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000384c:	2c00      	cmp	r4, #0
9000384e:	d1f4      	bne.n	9000383a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90003850:	6868      	ldr	r0, [r5, #4]
90003852:	6803      	ldr	r3, [r0, #0]
    }
90003854:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90003858:	695b      	ldr	r3, [r3, #20]
9000385a:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
9000385c:	4620      	mov	r0, r4
9000385e:	4798      	blx	r3
90003860:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003862:	2c00      	cmp	r4, #0
90003864:	d0f4      	beq.n	90003850 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003866:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003868:	e7e7      	b.n	9000383a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
9000386a:	4790      	blx	r2
9000386c:	4604      	mov	r4, r0
9000386e:	e7e1      	b.n	90003834 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x58>
90003870:	900035fd 	.word	0x900035fd
90003874:	9000228d 	.word	0x9000228d

90003878 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90003878:	7a03      	ldrb	r3, [r0, #8]
9000387a:	bb2b      	cbnz	r3, 900038c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
9000387c:	4a14      	ldr	r2, [pc, #80]	; (900038d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
9000387e:	b570      	push	{r4, r5, r6, lr}
90003880:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90003882:	6840      	ldr	r0, [r0, #4]
90003884:	6803      	ldr	r3, [r0, #0]
90003886:	69db      	ldr	r3, [r3, #28]
90003888:	4293      	cmp	r3, r2
9000388a:	d11e      	bne.n	900038ca <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
9000388c:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
9000388e:	b164      	cbz	r4, 900038aa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003890:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003892:	4e10      	ldr	r6, [pc, #64]	; (900038d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
90003894:	6823      	ldr	r3, [r4, #0]
90003896:	88a1      	ldrh	r1, [r4, #4]
90003898:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000389a:	1a89      	subs	r1, r1, r2
9000389c:	42b3      	cmp	r3, r6
9000389e:	b209      	sxth	r1, r1
        rect.x = x;
900038a0:	d10b      	bne.n	900038ba <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
900038a2:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
900038a4:	69a4      	ldr	r4, [r4, #24]
        while (d)
900038a6:	2c00      	cmp	r4, #0
900038a8:	d1f4      	bne.n	90003894 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
900038aa:	6868      	ldr	r0, [r5, #4]
900038ac:	f105 010c 	add.w	r1, r5, #12
900038b0:	6803      	ldr	r3, [r0, #0]
    }
900038b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
900038b6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900038b8:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
900038ba:	4620      	mov	r0, r4
900038bc:	4798      	blx	r3
900038be:	69a4      	ldr	r4, [r4, #24]
        while (d)
900038c0:	2c00      	cmp	r4, #0
900038c2:	d0f2      	beq.n	900038aa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
900038c4:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
900038c6:	e7e5      	b.n	90003894 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
900038c8:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
900038ca:	4798      	blx	r3
900038cc:	4604      	mov	r4, r0
900038ce:	e7de      	b.n	9000388e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
900038d0:	900035fd 	.word	0x900035fd
900038d4:	9000228d 	.word	0x9000228d

900038d8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl()
{
900038d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900038dc:	e9d0 5355 	ldrd	r5, r3, [r0, #340]	; 0x154
{
900038e0:	b083      	sub	sp, #12
900038e2:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900038e4:	68a8      	ldr	r0, [r5, #8]
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900038e6:	9301      	str	r3, [sp, #4]
900038e8:	6803      	ldr	r3, [r0, #0]
900038ea:	6a1b      	ldr	r3, [r3, #32]
900038ec:	4798      	blx	r3
900038ee:	f5b0 6f81 	cmp.w	r0, #1032	; 0x408
900038f2:	f0c0 80ba 	bcc.w	90003a6a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x192>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900038f6:	6868      	ldr	r0, [r5, #4]
900038f8:	6803      	ldr	r3, [r0, #0]
900038fa:	6a1b      	ldr	r3, [r3, #32]
900038fc:	4798      	blx	r3
900038fe:	280f      	cmp	r0, #15
90003900:	f240 80bf 	bls.w	90003a82 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1aa>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003904:	68e8      	ldr	r0, [r5, #12]
90003906:	6803      	ldr	r3, [r0, #0]
90003908:	6a1b      	ldr	r3, [r3, #32]
9000390a:	4798      	blx	r3
9000390c:	2837      	cmp	r0, #55	; 0x37
9000390e:	f240 80b2 	bls.w	90003a76 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x19e>
    if (*currentTrans)
90003912:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 90003abc <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e4>
    Application::getInstance()->clearAllTimerWidgets();
90003916:	f014 fd27 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
9000391a:	3004      	adds	r0, #4
9000391c:	f014 fd71 	bl	90018402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003920:	f8d9 0000 	ldr.w	r0, [r9]
90003924:	b140      	cbz	r0, 90003938 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003926:	6803      	ldr	r3, [r0, #0]
90003928:	68db      	ldr	r3, [r3, #12]
9000392a:	4798      	blx	r3
    if (*currentTrans)
9000392c:	f8d9 0000 	ldr.w	r0, [r9]
90003930:	b110      	cbz	r0, 90003938 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003932:	6803      	ldr	r3, [r0, #0]
90003934:	681b      	ldr	r3, [r3, #0]
90003936:	4798      	blx	r3
    if (*currentScreen)
90003938:	f8df 8184 	ldr.w	r8, [pc, #388]	; 90003ac0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e8>
9000393c:	f8d8 0000 	ldr.w	r0, [r8]
90003940:	2800      	cmp	r0, #0
90003942:	d07f      	beq.n	90003a44 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x16c>
        (*currentScreen)->tearDownScreen();
90003944:	6803      	ldr	r3, [r0, #0]
90003946:	695b      	ldr	r3, [r3, #20]
90003948:	4798      	blx	r3
    if (*currentPresenter)
9000394a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
9000394e:	2800      	cmp	r0, #0
90003950:	d073      	beq.n	90003a3a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x162>
        (*currentPresenter)->deactivate();
90003952:	6803      	ldr	r3, [r0, #0]
90003954:	685b      	ldr	r3, [r3, #4]
90003956:	4798      	blx	r3
    if (*currentScreen)
90003958:	f8d8 0000 	ldr.w	r0, [r8]
9000395c:	b110      	cbz	r0, 90003964 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x8c>
        (*currentScreen)->~Screen();
9000395e:	6803      	ldr	r3, [r0, #0]
90003960:	681b      	ldr	r3, [r3, #0]
90003962:	4798      	blx	r3
    if (*currentPresenter)
90003964:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003968:	b110      	cbz	r0, 90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
        (*currentPresenter)->~Presenter();
9000396a:	6803      	ldr	r3, [r0, #0]
9000396c:	689b      	ldr	r3, [r3, #8]
9000396e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003970:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90003972:	2100      	movs	r1, #0
90003974:	6802      	ldr	r2, [r0, #0]
        : screenContainer(0), done(false)
90003976:	468a      	mov	sl, r1
90003978:	6a52      	ldr	r2, [r2, #36]	; 0x24
9000397a:	4790      	blx	r2
          solid()
9000397c:	4a44      	ldr	r2, [pc, #272]	; (90003a90 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1b8>)
9000397e:	f100 0b10 	add.w	fp, r0, #16
90003982:	4604      	mov	r4, r0
90003984:	6002      	str	r2, [r0, #0]
          animationSteps(transitionSteps),
90003986:	2214      	movs	r2, #20
          solid()
90003988:	4651      	mov	r1, sl
9000398a:	f8c0 a004 	str.w	sl, [r0, #4]
          animationSteps(transitionSteps),
9000398e:	f8a0 2009 	strh.w	r2, [r0, #9]
          solid()
90003992:	2228      	movs	r2, #40	; 0x28
90003994:	f880 a008 	strb.w	sl, [r0, #8]
          calculatedValue(0),
90003998:	f8a0 a00e 	strh.w	sl, [r0, #14]
          solid()
9000399c:	4658      	mov	r0, fp
9000399e:	f026 f8d7 	bl	90029b50 <memset>
            targetValue = HAL::DISPLAY_WIDTH;
900039a2:	4a3c      	ldr	r2, [pc, #240]	; (90003a94 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1bc>)
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900039a4:	68a8      	ldr	r0, [r5, #8]
          touchable(false),
900039a6:	f44f 7180 	mov.w	r1, #256	; 0x100
900039aa:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.x = x;
900039ae:	f8c4 a014 	str.w	sl, [r4, #20]
900039b2:	81a2      	strh	r2, [r4, #12]
        rect.width = width;
900039b4:	8322      	strh	r2, [r4, #24]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900039b6:	4a38      	ldr	r2, [pc, #224]	; (90003a98 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c0>)
900039b8:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.height = height;
900039bc:	8362      	strh	r2, [r4, #26]
900039be:	6802      	ldr	r2, [r0, #0]
900039c0:	6a52      	ldr	r2, [r2, #36]	; 0x24
          touchable(false),
900039c2:	86a1      	strh	r1, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
900039c4:	4935      	ldr	r1, [pc, #212]	; (90003a9c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c4>)
900039c6:	6121      	str	r1, [r4, #16]
900039c8:	4651      	mov	r1, sl
900039ca:	4790      	blx	r2
900039cc:	4606      	mov	r6, r0
900039ce:	f004 f865 	bl	90007a9c <_ZN21screen_snake_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900039d2:	6868      	ldr	r0, [r5, #4]
900039d4:	4651      	mov	r1, sl
900039d6:	6803      	ldr	r3, [r0, #0]
900039d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900039da:	4798      	blx	r3
900039dc:	4605      	mov	r5, r0
900039de:	4631      	mov	r1, r6
900039e0:	f003 ffe6 	bl	900079b0 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>
    *currentTrans = newTransition;
900039e4:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
900039e8:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
900039ec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
900039f0:	2d00      	cmp	r5, #0
900039f2:	d02c      	beq.n	90003a4e <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x176>
900039f4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
900039f6:	9a01      	ldr	r2, [sp, #4]
    newScreen->setupScreen();
900039f8:	4630      	mov	r0, r6
900039fa:	6013      	str	r3, [r2, #0]
900039fc:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
900039fe:	60aa      	str	r2, [r5, #8]
90003a00:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90003a02:	63f5      	str	r5, [r6, #60]	; 0x3c
90003a04:	4798      	blx	r3
    newPresenter->activate();
90003a06:	682b      	ldr	r3, [r5, #0]
90003a08:	4628      	mov	r0, r5
90003a0a:	681b      	ldr	r3, [r3, #0]
90003a0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003a0e:	4621      	mov	r1, r4
90003a10:	4630      	mov	r0, r6
90003a12:	f016 fa8d 	bl	90019f30 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003a16:	6823      	ldr	r3, [r4, #0]
90003a18:	4a21      	ldr	r2, [pc, #132]	; (90003aa0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c8>)
90003a1a:	691b      	ldr	r3, [r3, #16]
90003a1c:	4293      	cmp	r3, r2
90003a1e:	d118      	bne.n	90003a52 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x17a>
        screenContainer->add(solid);
90003a20:	6860      	ldr	r0, [r4, #4]
90003a22:	4659      	mov	r1, fp
90003a24:	6803      	ldr	r3, [r0, #0]
90003a26:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003a28:	4798      	blx	r3
    newTransition->invalidate();
90003a2a:	6823      	ldr	r3, [r4, #0]
90003a2c:	4a1d      	ldr	r2, [pc, #116]	; (90003aa4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003a2e:	695b      	ldr	r3, [r3, #20]
90003a30:	4293      	cmp	r3, r2
90003a32:	d115      	bne.n	90003a60 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x188>
}
90003a34:	b003      	add	sp, #12
90003a36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
90003a3a:	f8d8 0000 	ldr.w	r0, [r8]
90003a3e:	2800      	cmp	r0, #0
90003a40:	d18d      	bne.n	9000395e <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x86>
90003a42:	e795      	b.n	90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    if (*currentPresenter)
90003a44:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003a48:	2800      	cmp	r0, #0
90003a4a:	d182      	bne.n	90003952 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x7a>
90003a4c:	e790      	b.n	90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    model->bind(newPresenter);
90003a4e:	462b      	mov	r3, r5
90003a50:	e7d1      	b.n	900039f6 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x11e>
    newTransition->init();
90003a52:	4620      	mov	r0, r4
90003a54:	4798      	blx	r3
    newTransition->invalidate();
90003a56:	6823      	ldr	r3, [r4, #0]
90003a58:	4a12      	ldr	r2, [pc, #72]	; (90003aa4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003a5a:	695b      	ldr	r3, [r3, #20]
90003a5c:	4293      	cmp	r3, r2
90003a5e:	d0e9      	beq.n	90003a34 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x15c>
90003a60:	4620      	mov	r0, r4
90003a62:	b003      	add	sp, #12
90003a64:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003a68:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003a6a:	4b0f      	ldr	r3, [pc, #60]	; (90003aa8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d0>)
90003a6c:	21a3      	movs	r1, #163	; 0xa3
90003a6e:	4a0f      	ldr	r2, [pc, #60]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a70:	480f      	ldr	r0, [pc, #60]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a72:	f025 fde5 	bl	90029640 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003a76:	4b0f      	ldr	r3, [pc, #60]	; (90003ab4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1dc>)
90003a78:	21a5      	movs	r1, #165	; 0xa5
90003a7a:	4a0c      	ldr	r2, [pc, #48]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a7c:	480c      	ldr	r0, [pc, #48]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a7e:	f025 fddf 	bl	90029640 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003a82:	4b0d      	ldr	r3, [pc, #52]	; (90003ab8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e0>)
90003a84:	21a4      	movs	r1, #164	; 0xa4
90003a86:	4a09      	ldr	r2, [pc, #36]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a88:	4809      	ldr	r0, [pc, #36]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a8a:	f025 fdd9 	bl	90029640 <__assert_func>
90003a8e:	bf00      	nop
90003a90:	9002ca00 	.word	0x9002ca00
90003a94:	24039ac0 	.word	0x24039ac0
90003a98:	24039ac2 	.word	0x24039ac2
90003a9c:	9002c908 	.word	0x9002c908
90003aa0:	90003669 	.word	0x90003669
90003aa4:	90003675 	.word	0x90003675
90003aa8:	9002c234 	.word	0x9002c234
90003aac:	9002c2c4 	.word	0x9002c2c4
90003ab0:	9002c3f0 	.word	0x9002c3f0
90003ab4:	9002c4dc 	.word	0x9002c4dc
90003ab8:	9002c438 	.word	0x9002c438
90003abc:	24039b14 	.word	0x24039b14
90003ac0:	24039b10 	.word	0x24039b10

90003ac4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003ac4:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90003ac8:	b1d3      	cbz	r3, 90003b00 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90003aca:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90003acc:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003ace:	68d1      	ldr	r1, [r2, #12]
90003ad0:	4604      	mov	r4, r0
90003ad2:	4818      	ldr	r0, [pc, #96]	; (90003b34 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90003ad4:	4281      	cmp	r1, r0
90003ad6:	d118      	bne.n	90003b0a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90003ad8:	6858      	ldr	r0, [r3, #4]
90003ada:	b180      	cbz	r0, 90003afe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003adc:	6899      	ldr	r1, [r3, #8]
90003ade:	b1e1      	cbz	r1, 90003b1a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
            pendingScreenTransitionCallback->execute();
90003ae0:	6892      	ldr	r2, [r2, #8]
90003ae2:	4915      	ldr	r1, [pc, #84]	; (90003b38 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003ae4:	428a      	cmp	r2, r1
90003ae6:	d122      	bne.n	90003b2e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003ae8:	68da      	ldr	r2, [r3, #12]
90003aea:	6858      	ldr	r0, [r3, #4]
90003aec:	eb00 0062 	add.w	r0, r0, r2, asr #1
90003af0:	07d2      	lsls	r2, r2, #31
90003af2:	d406      	bmi.n	90003b02 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90003af4:	689b      	ldr	r3, [r3, #8]
90003af6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90003af8:	2300      	movs	r3, #0
90003afa:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90003afe:	bd70      	pop	{r4, r5, r6, pc}
90003b00:	4770      	bx	lr
90003b02:	6899      	ldr	r1, [r3, #8]
90003b04:	6803      	ldr	r3, [r0, #0]
90003b06:	585b      	ldr	r3, [r3, r1]
90003b08:	e7f5      	b.n	90003af6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003b0a:	4618      	mov	r0, r3
90003b0c:	4788      	blx	r1
90003b0e:	2800      	cmp	r0, #0
90003b10:	d0f5      	beq.n	90003afe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90003b12:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90003b16:	681a      	ldr	r2, [r3, #0]
90003b18:	e7e2      	b.n	90003ae0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90003b1a:	68dd      	ldr	r5, [r3, #12]
90003b1c:	07ee      	lsls	r6, r5, #31
90003b1e:	d5ee      	bpl.n	90003afe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003b20:	6892      	ldr	r2, [r2, #8]
90003b22:	4e05      	ldr	r6, [pc, #20]	; (90003b38 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003b24:	42b2      	cmp	r2, r6
90003b26:	d102      	bne.n	90003b2e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003b28:	eb00 0065 	add.w	r0, r0, r5, asr #1
90003b2c:	e7ea      	b.n	90003b04 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90003b2e:	4618      	mov	r0, r3
90003b30:	4790      	blx	r2
90003b32:	e7e1      	b.n	90003af8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90003b34:	90003699 	.word	0x90003699
90003b38:	90003679 	.word	0x90003679

90003b3c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv>:
{
90003b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_main_menuView, screen_main_menuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003b40:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90003b44:	4607      	mov	r7, r0
90003b46:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003b48:	68a0      	ldr	r0, [r4, #8]
90003b4a:	6803      	ldr	r3, [r0, #0]
90003b4c:	6a1b      	ldr	r3, [r3, #32]
90003b4e:	4798      	blx	r3
90003b50:	f5b0 7f1a 	cmp.w	r0, #616	; 0x268
90003b54:	f0c0 809e 	bcc.w	90003c94 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003b58:	6860      	ldr	r0, [r4, #4]
90003b5a:	6803      	ldr	r3, [r0, #0]
90003b5c:	6a1b      	ldr	r3, [r3, #32]
90003b5e:	4798      	blx	r3
90003b60:	280f      	cmp	r0, #15
90003b62:	f240 80a3 	bls.w	90003cac <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003b66:	68e0      	ldr	r0, [r4, #12]
90003b68:	6803      	ldr	r3, [r0, #0]
90003b6a:	6a1b      	ldr	r3, [r3, #32]
90003b6c:	4798      	blx	r3
90003b6e:	280b      	cmp	r0, #11
90003b70:	f240 8096 	bls.w	90003ca0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90003b74:	f8df 9160 	ldr.w	r9, [pc, #352]	; 90003cd8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90003b78:	f014 fbf6 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
90003b7c:	3004      	adds	r0, #4
90003b7e:	f014 fc40 	bl	90018402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003b82:	f8d9 0000 	ldr.w	r0, [r9]
90003b86:	b140      	cbz	r0, 90003b9a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90003b88:	6803      	ldr	r3, [r0, #0]
90003b8a:	68db      	ldr	r3, [r3, #12]
90003b8c:	4798      	blx	r3
    if (*currentTrans)
90003b8e:	f8d9 0000 	ldr.w	r0, [r9]
90003b92:	b110      	cbz	r0, 90003b9a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90003b94:	6803      	ldr	r3, [r0, #0]
90003b96:	681b      	ldr	r3, [r3, #0]
90003b98:	4798      	blx	r3
    if (*currentScreen)
90003b9a:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003cdc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x1a0>
90003b9e:	f8d8 0000 	ldr.w	r0, [r8]
90003ba2:	2800      	cmp	r0, #0
90003ba4:	d063      	beq.n	90003c6e <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90003ba6:	6803      	ldr	r3, [r0, #0]
90003ba8:	695b      	ldr	r3, [r3, #20]
90003baa:	4798      	blx	r3
    if (*currentPresenter)
90003bac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bb0:	2800      	cmp	r0, #0
90003bb2:	d057      	beq.n	90003c64 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90003bb4:	6803      	ldr	r3, [r0, #0]
90003bb6:	685b      	ldr	r3, [r3, #4]
90003bb8:	4798      	blx	r3
    if (*currentScreen)
90003bba:	f8d8 0000 	ldr.w	r0, [r8]
90003bbe:	b110      	cbz	r0, 90003bc6 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90003bc0:	6803      	ldr	r3, [r0, #0]
90003bc2:	681b      	ldr	r3, [r3, #0]
90003bc4:	4798      	blx	r3
    if (*currentPresenter)
90003bc6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bca:	b110      	cbz	r0, 90003bd2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90003bcc:	6803      	ldr	r3, [r0, #0]
90003bce:	689b      	ldr	r3, [r3, #8]
90003bd0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003bd2:	68e0      	ldr	r0, [r4, #12]
90003bd4:	2100      	movs	r1, #0
90003bd6:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003bd8:	468b      	mov	fp, r1
90003bda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003bdc:	4798      	blx	r3
90003bde:	4b36      	ldr	r3, [pc, #216]	; (90003cb8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x17c>)
90003be0:	4605      	mov	r5, r0
90003be2:	f8c0 b004 	str.w	fp, [r0, #4]
90003be6:	f880 b008 	strb.w	fp, [r0, #8]
90003bea:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003bec:	68a0      	ldr	r0, [r4, #8]
90003bee:	602b      	str	r3, [r5, #0]
90003bf0:	6803      	ldr	r3, [r0, #0]
90003bf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003bf4:	4798      	blx	r3
90003bf6:	4606      	mov	r6, r0
90003bf8:	f003 feb4 	bl	90007964 <_ZN20screen_main_menuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003bfc:	6860      	ldr	r0, [r4, #4]
90003bfe:	4659      	mov	r1, fp
90003c00:	6803      	ldr	r3, [r0, #0]
90003c02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003c04:	4798      	blx	r3
90003c06:	4604      	mov	r4, r0
90003c08:	4631      	mov	r1, r6
90003c0a:	f003 fe7f 	bl	9000790c <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>
    *currentTrans = newTransition;
90003c0e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003c12:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003c16:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003c1a:	2c00      	cmp	r4, #0
90003c1c:	d02c      	beq.n	90003c78 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x13c>
90003c1e:	1d23      	adds	r3, r4, #4
90003c20:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003c24:	4630      	mov	r0, r6
90003c26:	6833      	ldr	r3, [r6, #0]
90003c28:	f8c4 a008 	str.w	sl, [r4, #8]
90003c2c:	68db      	ldr	r3, [r3, #12]
90003c2e:	63f4      	str	r4, [r6, #60]	; 0x3c
90003c30:	4798      	blx	r3
    newPresenter->activate();
90003c32:	6823      	ldr	r3, [r4, #0]
90003c34:	4620      	mov	r0, r4
90003c36:	681b      	ldr	r3, [r3, #0]
90003c38:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003c3a:	4629      	mov	r1, r5
90003c3c:	4630      	mov	r0, r6
90003c3e:	f016 f977 	bl	90019f30 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003c42:	682b      	ldr	r3, [r5, #0]
90003c44:	491d      	ldr	r1, [pc, #116]	; (90003cbc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x180>)
90003c46:	691a      	ldr	r2, [r3, #16]
90003c48:	428a      	cmp	r2, r1
90003c4a:	d117      	bne.n	90003c7c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90003c4c:	695b      	ldr	r3, [r3, #20]
90003c4e:	4a1c      	ldr	r2, [pc, #112]	; (90003cc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c50:	4293      	cmp	r3, r2
90003c52:	d11a      	bne.n	90003c8a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90003c54:	f014 fb88 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
90003c58:	6803      	ldr	r3, [r0, #0]
90003c5a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003c5c:	b001      	add	sp, #4
90003c5e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c62:	4718      	bx	r3
    if (*currentScreen)
90003c64:	f8d8 0000 	ldr.w	r0, [r8]
90003c68:	2800      	cmp	r0, #0
90003c6a:	d1a9      	bne.n	90003bc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x84>
90003c6c:	e7b1      	b.n	90003bd2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90003c6e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c72:	2800      	cmp	r0, #0
90003c74:	d19e      	bne.n	90003bb4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x78>
90003c76:	e7ac      	b.n	90003bd2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90003c78:	4623      	mov	r3, r4
90003c7a:	e7d1      	b.n	90003c20 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90003c7c:	4628      	mov	r0, r5
90003c7e:	4790      	blx	r2
    newTransition->invalidate();
90003c80:	682b      	ldr	r3, [r5, #0]
90003c82:	4a0f      	ldr	r2, [pc, #60]	; (90003cc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c84:	695b      	ldr	r3, [r3, #20]
90003c86:	4293      	cmp	r3, r2
90003c88:	d0e4      	beq.n	90003c54 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x118>
90003c8a:	4628      	mov	r0, r5
90003c8c:	b001      	add	sp, #4
90003c8e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c92:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003c94:	4b0b      	ldr	r3, [pc, #44]	; (90003cc4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x188>)
90003c96:	21a3      	movs	r1, #163	; 0xa3
90003c98:	4a0b      	ldr	r2, [pc, #44]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003c9a:	480c      	ldr	r0, [pc, #48]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003c9c:	f025 fcd0 	bl	90029640 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003ca0:	4b0b      	ldr	r3, [pc, #44]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x194>)
90003ca2:	21a5      	movs	r1, #165	; 0xa5
90003ca4:	4a08      	ldr	r2, [pc, #32]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003ca6:	4809      	ldr	r0, [pc, #36]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003ca8:	f025 fcca 	bl	90029640 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003cac:	4b09      	ldr	r3, [pc, #36]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x198>)
90003cae:	21a4      	movs	r1, #164	; 0xa4
90003cb0:	4a05      	ldr	r2, [pc, #20]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003cb2:	4806      	ldr	r0, [pc, #24]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003cb4:	f025 fcc4 	bl	90029640 <__assert_func>
90003cb8:	9002c9dc 	.word	0x9002c9dc
90003cbc:	90003605 	.word	0x90003605
90003cc0:	90003711 	.word	0x90003711
90003cc4:	9002c234 	.word	0x9002c234
90003cc8:	9002c580 	.word	0x9002c580
90003ccc:	9002c3f0 	.word	0x9002c3f0
90003cd0:	9002c4dc 	.word	0x9002c4dc
90003cd4:	9002c438 	.word	0x9002c438
90003cd8:	24039b14 	.word	0x24039b14
90003cdc:	24039b10 	.word	0x24039b10

90003ce0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv>:
{
90003ce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_tictactoe_gameView, screen_tictactoe_gamePresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003ce4:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003ce8:	4680      	mov	r8, r0
90003cea:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003cec:	68a0      	ldr	r0, [r4, #8]
90003cee:	6803      	ldr	r3, [r0, #0]
90003cf0:	6a1b      	ldr	r3, [r3, #32]
90003cf2:	4798      	blx	r3
90003cf4:	f242 73bb 	movw	r3, #10171	; 0x27bb
90003cf8:	4298      	cmp	r0, r3
90003cfa:	f240 80e1 	bls.w	90003ec0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003cfe:	6860      	ldr	r0, [r4, #4]
90003d00:	6803      	ldr	r3, [r0, #0]
90003d02:	6a1b      	ldr	r3, [r3, #32]
90003d04:	4798      	blx	r3
90003d06:	280f      	cmp	r0, #15
90003d08:	f240 80e6 	bls.w	90003ed8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003d0c:	68e0      	ldr	r0, [r4, #12]
90003d0e:	6803      	ldr	r3, [r0, #0]
90003d10:	6a1b      	ldr	r3, [r3, #32]
90003d12:	4798      	blx	r3
90003d14:	283f      	cmp	r0, #63	; 0x3f
90003d16:	f240 80d9 	bls.w	90003ecc <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
90003d1a:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 90003f18 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
90003d1e:	f014 fb23 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
90003d22:	3004      	adds	r0, #4
90003d24:	f014 fb6d 	bl	90018402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003d28:	f8da 0000 	ldr.w	r0, [sl]
90003d2c:	b140      	cbz	r0, 90003d40 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003d2e:	6803      	ldr	r3, [r0, #0]
90003d30:	68db      	ldr	r3, [r3, #12]
90003d32:	4798      	blx	r3
    if (*currentTrans)
90003d34:	f8da 0000 	ldr.w	r0, [sl]
90003d38:	b110      	cbz	r0, 90003d40 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003d3a:	6803      	ldr	r3, [r0, #0]
90003d3c:	681b      	ldr	r3, [r3, #0]
90003d3e:	4798      	blx	r3
    if (*currentScreen)
90003d40:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90003f1c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x23c>
90003d44:	f8d9 0000 	ldr.w	r0, [r9]
90003d48:	2800      	cmp	r0, #0
90003d4a:	f000 80a5 	beq.w	90003e98 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
90003d4e:	6803      	ldr	r3, [r0, #0]
90003d50:	695b      	ldr	r3, [r3, #20]
90003d52:	4798      	blx	r3
    if (*currentPresenter)
90003d54:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003d58:	2800      	cmp	r0, #0
90003d5a:	f000 8081 	beq.w	90003e60 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
90003d5e:	6803      	ldr	r3, [r0, #0]
90003d60:	685b      	ldr	r3, [r3, #4]
90003d62:	4798      	blx	r3
    if (*currentScreen)
90003d64:	f8d9 0000 	ldr.w	r0, [r9]
90003d68:	b110      	cbz	r0, 90003d70 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
90003d6a:	6803      	ldr	r3, [r0, #0]
90003d6c:	681b      	ldr	r3, [r3, #0]
90003d6e:	4798      	blx	r3
    if (*currentPresenter)
90003d70:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003d74:	b110      	cbz	r0, 90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
90003d76:	6803      	ldr	r3, [r0, #0]
90003d78:	689b      	ldr	r3, [r3, #8]
90003d7a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003d7c:	68e0      	ldr	r0, [r4, #12]
90003d7e:	2100      	movs	r1, #0
90003d80:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003d82:	460f      	mov	r7, r1
90003d84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003d86:	4798      	blx	r3
          relativeValue(0)
90003d88:	4b56      	ldr	r3, [pc, #344]	; (90003ee4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x204>)
90003d8a:	4606      	mov	r6, r0
90003d8c:	4605      	mov	r5, r0
90003d8e:	6047      	str	r7, [r0, #4]
90003d90:	7207      	strb	r7, [r0, #8]
90003d92:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90003d96:	4630      	mov	r0, r6
90003d98:	f010 fd52 	bl	90014840 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90003d9c:	4b52      	ldr	r3, [pc, #328]	; (90003ee8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
90003d9e:	2214      	movs	r2, #20
          relativeValue(0)
90003da0:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90003da2:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90003da4:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90003da6:	2b00      	cmp	r3, #0
90003da8:	d166      	bne.n	90003e78 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x198>
            done = true;
90003daa:	2301      	movs	r3, #1
90003dac:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003dae:	68a0      	ldr	r0, [r4, #8]
90003db0:	2100      	movs	r1, #0
90003db2:	6803      	ldr	r3, [r0, #0]
90003db4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003db6:	4798      	blx	r3
90003db8:	4607      	mov	r7, r0
90003dba:	f004 ffd3 	bl	90008d64 <_ZN25screen_tictactoe_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003dbe:	6860      	ldr	r0, [r4, #4]
90003dc0:	2100      	movs	r1, #0
90003dc2:	6803      	ldr	r3, [r0, #0]
90003dc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003dc6:	4798      	blx	r3
90003dc8:	4604      	mov	r4, r0
90003dca:	4639      	mov	r1, r7
90003dcc:	f004 ff52 	bl	90008c74 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>
    *currentTrans = newTransition;
90003dd0:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90003dd4:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90003dd8:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
90003ddc:	2c00      	cmp	r4, #0
90003dde:	d061      	beq.n	90003ea4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1c4>
90003de0:	1d23      	adds	r3, r4, #4
90003de2:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90003de6:	4638      	mov	r0, r7
90003de8:	683b      	ldr	r3, [r7, #0]
90003dea:	f8c4 b008 	str.w	fp, [r4, #8]
90003dee:	68db      	ldr	r3, [r3, #12]
90003df0:	63fc      	str	r4, [r7, #60]	; 0x3c
90003df2:	4798      	blx	r3
    newPresenter->activate();
90003df4:	6823      	ldr	r3, [r4, #0]
90003df6:	4620      	mov	r0, r4
90003df8:	681b      	ldr	r3, [r3, #0]
90003dfa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003dfc:	4629      	mov	r1, r5
90003dfe:	4638      	mov	r0, r7
90003e00:	f016 f896 	bl	90019f30 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003e04:	682b      	ldr	r3, [r5, #0]
90003e06:	4939      	ldr	r1, [pc, #228]	; (90003eec <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x20c>)
90003e08:	691a      	ldr	r2, [r3, #16]
90003e0a:	428a      	cmp	r2, r1
90003e0c:	d154      	bne.n	90003eb8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
90003e0e:	7a2a      	ldrb	r2, [r5, #8]
90003e10:	b9d2      	cbnz	r2, 90003e48 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
90003e12:	6868      	ldr	r0, [r5, #4]
90003e14:	4a36      	ldr	r2, [pc, #216]	; (90003ef0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x210>)
90003e16:	6803      	ldr	r3, [r0, #0]
90003e18:	69db      	ldr	r3, [r3, #28]
90003e1a:	4293      	cmp	r3, r2
90003e1c:	d144      	bne.n	90003ea8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1c8>
90003e1e:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003e20:	b164      	cbz	r4, 90003e3c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x15c>
90003e22:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003e24:	4f33      	ldr	r7, [pc, #204]	; (90003ef4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
90003e26:	6823      	ldr	r3, [r4, #0]
90003e28:	88a1      	ldrh	r1, [r4, #4]
90003e2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003e2c:	1a89      	subs	r1, r1, r2
90003e2e:	42bb      	cmp	r3, r7
90003e30:	b209      	sxth	r1, r1
90003e32:	d11a      	bne.n	90003e6a <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
90003e34:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003e36:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003e38:	2c00      	cmp	r4, #0
90003e3a:	d1f4      	bne.n	90003e26 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
90003e3c:	6868      	ldr	r0, [r5, #4]
90003e3e:	4631      	mov	r1, r6
90003e40:	6803      	ldr	r3, [r0, #0]
90003e42:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003e44:	4798      	blx	r3
    newTransition->invalidate();
90003e46:	682b      	ldr	r3, [r5, #0]
90003e48:	695b      	ldr	r3, [r3, #20]
90003e4a:	4a2b      	ldr	r2, [pc, #172]	; (90003ef8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x218>)
90003e4c:	4293      	cmp	r3, r2
90003e4e:	d12e      	bne.n	90003eae <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
90003e50:	f014 fa8a 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
90003e54:	6803      	ldr	r3, [r0, #0]
90003e56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003e58:	b001      	add	sp, #4
90003e5a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003e5e:	4718      	bx	r3
    if (*currentScreen)
90003e60:	f8d9 0000 	ldr.w	r0, [r9]
90003e64:	2800      	cmp	r0, #0
90003e66:	d180      	bne.n	90003d6a <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x8a>
90003e68:	e788      	b.n	90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
90003e6a:	4620      	mov	r0, r4
90003e6c:	4798      	blx	r3
90003e6e:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003e70:	2c00      	cmp	r4, #0
90003e72:	d0e3      	beq.n	90003e3c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x15c>
90003e74:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003e76:	e7d6      	b.n	90003e26 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003e78:	4b20      	ldr	r3, [pc, #128]	; (90003efc <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
90003e7a:	4630      	mov	r0, r6
        rect.x = x;
90003e7c:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003e7e:	f9b3 3000 	ldrsh.w	r3, [r3]
90003e82:	4f1f      	ldr	r7, [pc, #124]	; (90003f00 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
90003e84:	82eb      	strh	r3, [r5, #22]
90003e86:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
90003e8a:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90003e8c:	f010 fc53 	bl	90014736 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
90003e90:	883b      	ldrh	r3, [r7, #0]
90003e92:	425b      	negs	r3, r3
90003e94:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
90003e96:	e78a      	b.n	90003dae <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
90003e98:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003e9c:	2800      	cmp	r0, #0
90003e9e:	f47f af5e 	bne.w	90003d5e <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x7e>
90003ea2:	e76b      	b.n	90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
90003ea4:	4623      	mov	r3, r4
90003ea6:	e79c      	b.n	90003de2 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
90003ea8:	4798      	blx	r3
90003eaa:	4604      	mov	r4, r0
90003eac:	e7b8      	b.n	90003e20 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
90003eae:	4628      	mov	r0, r5
90003eb0:	b001      	add	sp, #4
90003eb2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003eb6:	4718      	bx	r3
    newTransition->init();
90003eb8:	4628      	mov	r0, r5
90003eba:	4790      	blx	r2
    newTransition->invalidate();
90003ebc:	682b      	ldr	r3, [r5, #0]
90003ebe:	e7c3      	b.n	90003e48 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003ec0:	4b10      	ldr	r3, [pc, #64]	; (90003f04 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x224>)
90003ec2:	21a3      	movs	r1, #163	; 0xa3
90003ec4:	4a10      	ldr	r2, [pc, #64]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ec6:	4811      	ldr	r0, [pc, #68]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ec8:	f025 fbba 	bl	90029640 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003ecc:	4b10      	ldr	r3, [pc, #64]	; (90003f10 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x230>)
90003ece:	21a5      	movs	r1, #165	; 0xa5
90003ed0:	4a0d      	ldr	r2, [pc, #52]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ed2:	480e      	ldr	r0, [pc, #56]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ed4:	f025 fbb4 	bl	90029640 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003ed8:	4b0e      	ldr	r3, [pc, #56]	; (90003f14 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x234>)
90003eda:	21a4      	movs	r1, #164	; 0xa4
90003edc:	4a0a      	ldr	r2, [pc, #40]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ede:	480b      	ldr	r0, [pc, #44]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ee0:	f025 fbae 	bl	90029640 <__assert_func>
90003ee4:	9002ca24 	.word	0x9002ca24
90003ee8:	24039acb 	.word	0x24039acb
90003eec:	90003879 	.word	0x90003879
90003ef0:	900035fd 	.word	0x900035fd
90003ef4:	9000228d 	.word	0x9000228d
90003ef8:	90003711 	.word	0x90003711
90003efc:	24039ac2 	.word	0x24039ac2
90003f00:	24039ac0 	.word	0x24039ac0
90003f04:	9002c234 	.word	0x9002c234
90003f08:	9002c698 	.word	0x9002c698
90003f0c:	9002c3f0 	.word	0x9002c3f0
90003f10:	9002c4dc 	.word	0x9002c4dc
90003f14:	9002c438 	.word	0x9002c438
90003f18:	24039b14 	.word	0x24039b14
90003f1c:	24039b10 	.word	0x24039b10

90003f20 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv>:
{
90003f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_space_invadersView, screen_space_invadersPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003f24:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003f28:	4680      	mov	r8, r0
90003f2a:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003f2c:	68a0      	ldr	r0, [r4, #8]
90003f2e:	6803      	ldr	r3, [r0, #0]
90003f30:	6a1b      	ldr	r3, [r3, #32]
90003f32:	4798      	blx	r3
90003f34:	f242 0337 	movw	r3, #8247	; 0x2037
90003f38:	4298      	cmp	r0, r3
90003f3a:	f240 80e1 	bls.w	90004100 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003f3e:	6860      	ldr	r0, [r4, #4]
90003f40:	6803      	ldr	r3, [r0, #0]
90003f42:	6a1b      	ldr	r3, [r3, #32]
90003f44:	4798      	blx	r3
90003f46:	280f      	cmp	r0, #15
90003f48:	f240 80e6 	bls.w	90004118 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003f4c:	68e0      	ldr	r0, [r4, #12]
90003f4e:	6803      	ldr	r3, [r0, #0]
90003f50:	6a1b      	ldr	r3, [r3, #32]
90003f52:	4798      	blx	r3
90003f54:	283f      	cmp	r0, #63	; 0x3f
90003f56:	f240 80d9 	bls.w	9000410c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
90003f5a:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 90004158 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
90003f5e:	f014 fa03 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
90003f62:	3004      	adds	r0, #4
90003f64:	f014 fa4d 	bl	90018402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003f68:	f8da 0000 	ldr.w	r0, [sl]
90003f6c:	b140      	cbz	r0, 90003f80 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003f6e:	6803      	ldr	r3, [r0, #0]
90003f70:	68db      	ldr	r3, [r3, #12]
90003f72:	4798      	blx	r3
    if (*currentTrans)
90003f74:	f8da 0000 	ldr.w	r0, [sl]
90003f78:	b110      	cbz	r0, 90003f80 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003f7a:	6803      	ldr	r3, [r0, #0]
90003f7c:	681b      	ldr	r3, [r3, #0]
90003f7e:	4798      	blx	r3
    if (*currentScreen)
90003f80:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 9000415c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x23c>
90003f84:	f8d9 0000 	ldr.w	r0, [r9]
90003f88:	2800      	cmp	r0, #0
90003f8a:	f000 80a5 	beq.w	900040d8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
90003f8e:	6803      	ldr	r3, [r0, #0]
90003f90:	695b      	ldr	r3, [r3, #20]
90003f92:	4798      	blx	r3
    if (*currentPresenter)
90003f94:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003f98:	2800      	cmp	r0, #0
90003f9a:	f000 8081 	beq.w	900040a0 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
90003f9e:	6803      	ldr	r3, [r0, #0]
90003fa0:	685b      	ldr	r3, [r3, #4]
90003fa2:	4798      	blx	r3
    if (*currentScreen)
90003fa4:	f8d9 0000 	ldr.w	r0, [r9]
90003fa8:	b110      	cbz	r0, 90003fb0 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
90003faa:	6803      	ldr	r3, [r0, #0]
90003fac:	681b      	ldr	r3, [r3, #0]
90003fae:	4798      	blx	r3
    if (*currentPresenter)
90003fb0:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003fb4:	b110      	cbz	r0, 90003fbc <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
90003fb6:	6803      	ldr	r3, [r0, #0]
90003fb8:	689b      	ldr	r3, [r3, #8]
90003fba:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003fbc:	68e0      	ldr	r0, [r4, #12]
90003fbe:	2100      	movs	r1, #0
90003fc0:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003fc2:	460f      	mov	r7, r1
90003fc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003fc6:	4798      	blx	r3
          relativeValue(0)
90003fc8:	4b56      	ldr	r3, [pc, #344]	; (90004124 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x204>)
90003fca:	4606      	mov	r6, r0
90003fcc:	4605      	mov	r5, r0
90003fce:	6047      	str	r7, [r0, #4]
90003fd0:	7207      	strb	r7, [r0, #8]
90003fd2:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90003fd6:	4630      	mov	r0, r6
90003fd8:	f010 fc32 	bl	90014840 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90003fdc:	4b52      	ldr	r3, [pc, #328]	; (90004128 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
90003fde:	2214      	movs	r2, #20
          relativeValue(0)
90003fe0:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90003fe2:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90003fe4:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90003fe6:	2b00      	cmp	r3, #0
90003fe8:	d166      	bne.n	900040b8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x198>
            done = true;
90003fea:	2301      	movs	r3, #1
90003fec:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003fee:	68a0      	ldr	r0, [r4, #8]
90003ff0:	2100      	movs	r1, #0
90003ff2:	6803      	ldr	r3, [r0, #0]
90003ff4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003ff6:	4798      	blx	r3
90003ff8:	4607      	mov	r7, r0
90003ffa:	f004 fd67 	bl	90008acc <_ZN25screen_space_invadersViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003ffe:	6860      	ldr	r0, [r4, #4]
90004000:	2100      	movs	r1, #0
90004002:	6803      	ldr	r3, [r0, #0]
90004004:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004006:	4798      	blx	r3
90004008:	4604      	mov	r4, r0
9000400a:	4639      	mov	r1, r7
9000400c:	f004 f9e4 	bl	900083d8 <_ZN30screen_space_invadersPresenterC1ER25screen_space_invadersView>
    *currentTrans = newTransition;
90004010:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90004014:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90004018:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
9000401c:	2c00      	cmp	r4, #0
9000401e:	d061      	beq.n	900040e4 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1c4>
90004020:	1d23      	adds	r3, r4, #4
90004022:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90004026:	4638      	mov	r0, r7
90004028:	683b      	ldr	r3, [r7, #0]
9000402a:	f8c4 b008 	str.w	fp, [r4, #8]
9000402e:	68db      	ldr	r3, [r3, #12]
90004030:	63fc      	str	r4, [r7, #60]	; 0x3c
90004032:	4798      	blx	r3
    newPresenter->activate();
90004034:	6823      	ldr	r3, [r4, #0]
90004036:	4620      	mov	r0, r4
90004038:	681b      	ldr	r3, [r3, #0]
9000403a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
9000403c:	4629      	mov	r1, r5
9000403e:	4638      	mov	r0, r7
90004040:	f015 ff76 	bl	90019f30 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004044:	682b      	ldr	r3, [r5, #0]
90004046:	4939      	ldr	r1, [pc, #228]	; (9000412c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x20c>)
90004048:	691a      	ldr	r2, [r3, #16]
9000404a:	428a      	cmp	r2, r1
9000404c:	d154      	bne.n	900040f8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
9000404e:	7a2a      	ldrb	r2, [r5, #8]
90004050:	b9d2      	cbnz	r2, 90004088 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
90004052:	6868      	ldr	r0, [r5, #4]
90004054:	4a36      	ldr	r2, [pc, #216]	; (90004130 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x210>)
90004056:	6803      	ldr	r3, [r0, #0]
90004058:	69db      	ldr	r3, [r3, #28]
9000405a:	4293      	cmp	r3, r2
9000405c:	d144      	bne.n	900040e8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1c8>
9000405e:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90004060:	b164      	cbz	r4, 9000407c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x15c>
90004062:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90004064:	4f33      	ldr	r7, [pc, #204]	; (90004134 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
90004066:	6823      	ldr	r3, [r4, #0]
90004068:	88a1      	ldrh	r1, [r4, #4]
9000406a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000406c:	1a89      	subs	r1, r1, r2
9000406e:	42bb      	cmp	r3, r7
90004070:	b209      	sxth	r1, r1
90004072:	d11a      	bne.n	900040aa <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
90004074:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004076:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004078:	2c00      	cmp	r4, #0
9000407a:	d1f4      	bne.n	90004066 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
9000407c:	6868      	ldr	r0, [r5, #4]
9000407e:	4631      	mov	r1, r6
90004080:	6803      	ldr	r3, [r0, #0]
90004082:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90004084:	4798      	blx	r3
    newTransition->invalidate();
90004086:	682b      	ldr	r3, [r5, #0]
90004088:	695b      	ldr	r3, [r3, #20]
9000408a:	4a2b      	ldr	r2, [pc, #172]	; (90004138 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x218>)
9000408c:	4293      	cmp	r3, r2
9000408e:	d12e      	bne.n	900040ee <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
90004090:	f014 f96a 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
90004094:	6803      	ldr	r3, [r0, #0]
90004096:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90004098:	b001      	add	sp, #4
9000409a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000409e:	4718      	bx	r3
    if (*currentScreen)
900040a0:	f8d9 0000 	ldr.w	r0, [r9]
900040a4:	2800      	cmp	r0, #0
900040a6:	d180      	bne.n	90003faa <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x8a>
900040a8:	e788      	b.n	90003fbc <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
900040aa:	4620      	mov	r0, r4
900040ac:	4798      	blx	r3
900040ae:	69a4      	ldr	r4, [r4, #24]
        while (d)
900040b0:	2c00      	cmp	r4, #0
900040b2:	d0e3      	beq.n	9000407c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x15c>
900040b4:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
900040b6:	e7d6      	b.n	90004066 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900040b8:	4b20      	ldr	r3, [pc, #128]	; (9000413c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
900040ba:	4630      	mov	r0, r6
        rect.x = x;
900040bc:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900040be:	f9b3 3000 	ldrsh.w	r3, [r3]
900040c2:	4f1f      	ldr	r7, [pc, #124]	; (90004140 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
900040c4:	82eb      	strh	r3, [r5, #22]
900040c6:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
900040ca:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
900040cc:	f010 fb33 	bl	90014736 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
900040d0:	883b      	ldrh	r3, [r7, #0]
900040d2:	425b      	negs	r3, r3
900040d4:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
900040d6:	e78a      	b.n	90003fee <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
900040d8:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900040dc:	2800      	cmp	r0, #0
900040de:	f47f af5e 	bne.w	90003f9e <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x7e>
900040e2:	e76b      	b.n	90003fbc <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
900040e4:	4623      	mov	r3, r4
900040e6:	e79c      	b.n	90004022 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
900040e8:	4798      	blx	r3
900040ea:	4604      	mov	r4, r0
900040ec:	e7b8      	b.n	90004060 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
900040ee:	4628      	mov	r0, r5
900040f0:	b001      	add	sp, #4
900040f2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900040f6:	4718      	bx	r3
    newTransition->init();
900040f8:	4628      	mov	r0, r5
900040fa:	4790      	blx	r2
    newTransition->invalidate();
900040fc:	682b      	ldr	r3, [r5, #0]
900040fe:	e7c3      	b.n	90004088 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004100:	4b10      	ldr	r3, [pc, #64]	; (90004144 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x224>)
90004102:	21a3      	movs	r1, #163	; 0xa3
90004104:	4a10      	ldr	r2, [pc, #64]	; (90004148 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x228>)
90004106:	4811      	ldr	r0, [pc, #68]	; (9000414c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x22c>)
90004108:	f025 fa9a 	bl	90029640 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000410c:	4b10      	ldr	r3, [pc, #64]	; (90004150 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x230>)
9000410e:	21a5      	movs	r1, #165	; 0xa5
90004110:	4a0d      	ldr	r2, [pc, #52]	; (90004148 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x228>)
90004112:	480e      	ldr	r0, [pc, #56]	; (9000414c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x22c>)
90004114:	f025 fa94 	bl	90029640 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004118:	4b0e      	ldr	r3, [pc, #56]	; (90004154 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x234>)
9000411a:	21a4      	movs	r1, #164	; 0xa4
9000411c:	4a0a      	ldr	r2, [pc, #40]	; (90004148 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x228>)
9000411e:	480b      	ldr	r0, [pc, #44]	; (9000414c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x22c>)
90004120:	f025 fa8e 	bl	90029640 <__assert_func>
90004124:	9002ca24 	.word	0x9002ca24
90004128:	24039acb 	.word	0x24039acb
9000412c:	90003879 	.word	0x90003879
90004130:	900035fd 	.word	0x900035fd
90004134:	9000228d 	.word	0x9000228d
90004138:	90003711 	.word	0x90003711
9000413c:	24039ac2 	.word	0x24039ac2
90004140:	24039ac0 	.word	0x24039ac0
90004144:	9002c234 	.word	0x9002c234
90004148:	9002c7cc 	.word	0x9002c7cc
9000414c:	9002c3f0 	.word	0x9002c3f0
90004150:	9002c4dc 	.word	0x9002c4dc
90004154:	9002c438 	.word	0x9002c438
90004158:	24039b14 	.word	0x24039b14
9000415c:	24039b10 	.word	0x24039b10

90004160 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004160:	b570      	push	{r4, r5, r6, lr}
90004162:	4604      	mov	r4, r0
90004164:	4615      	mov	r5, r2
90004166:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004168:	f014 f9ec 	bl	90018544 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
9000416c:	4a1d      	ldr	r2, [pc, #116]	; (900041e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
9000416e:	2300      	movs	r3, #0
      frontendHeap(heap),
90004170:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
90004174:	6014      	str	r4, [r2, #0]
        return instance;
90004176:	4d1c      	ldr	r5, [pc, #112]	; (900041e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90004178:	4a1c      	ldr	r2, [pc, #112]	; (900041ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
9000417a:	6828      	ldr	r0, [r5, #0]
9000417c:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
9000417e:	4a1c      	ldr	r2, [pc, #112]	; (900041f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
90004180:	491c      	ldr	r1, [pc, #112]	; (900041f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
90004182:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
90004186:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
9000418a:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
9000418e:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004192:	6802      	ldr	r2, [r0, #0]
90004194:	6892      	ldr	r2, [r2, #8]
90004196:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
90004198:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
9000419c:	d11f      	bne.n	900041de <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
9000419e:	f44f 7380 	mov.w	r3, #256	; 0x100
900041a2:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
900041a6:	2000      	movs	r0, #0
900041a8:	f000 fa10 	bl	900045cc <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900041ac:	682b      	ldr	r3, [r5, #0]
900041ae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900041b2:	b192      	cbz	r2, 900041da <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
900041b4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900041b6:	b180      	cbz	r0, 900041da <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
900041b8:	f01d fb73 	bl	900218a2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
900041bc:	682b      	ldr	r3, [r5, #0]
900041be:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900041c2:	b12a      	cbz	r2, 900041d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
900041c4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900041c6:	b118      	cbz	r0, 900041d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900041c8:	f01d fbe6 	bl	90021998 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900041cc:	4620      	mov	r0, r4
900041ce:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900041d0:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900041d2:	f01d fbe1 	bl	90021998 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900041d6:	4620      	mov	r0, r4
900041d8:	bd70      	pop	{r4, r5, r6, pc}
900041da:	6898      	ldr	r0, [r3, #8]
900041dc:	e7ec      	b.n	900041b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900041de:	4619      	mov	r1, r3
900041e0:	4790      	blx	r2
900041e2:	e7e0      	b.n	900041a6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900041e4:	24039b20 	.word	0x24039b20
900041e8:	24039acc 	.word	0x24039acc
900041ec:	9002c988 	.word	0x9002c988
900041f0:	9002c970 	.word	0x9002c970
900041f4:	90000665 	.word	0x90000665

900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900041f8:	4905      	ldr	r1, [pc, #20]	; (90004210 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv+0x18>)
900041fa:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900041fc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004200:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004204:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004208:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
9000420c:	4770      	bx	lr
9000420e:	bf00      	nop
90004210:	90003b3d 	.word	0x90003b3d

90004214 <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv>:
90004214:	4905      	ldr	r1, [pc, #20]	; (9000422c <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv+0x18>)
90004216:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004218:	f500 73a2 	add.w	r3, r0, #324	; 0x144
9000421c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004220:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004224:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004228:	4770      	bx	lr
9000422a:	bf00      	nop
9000422c:	90003ce1 	.word	0x90003ce1

90004230 <_ZN23FrontendApplicationBase50gotoscreen_space_invadersScreenSlideTransitionEastEv>:
90004230:	4905      	ldr	r1, [pc, #20]	; (90004248 <_ZN23FrontendApplicationBase50gotoscreen_space_invadersScreenSlideTransitionEastEv+0x18>)
90004232:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004234:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004238:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
9000423c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004240:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004244:	4770      	bx	lr
90004246:	bf00      	nop
90004248:	90003f21 	.word	0x90003f21

9000424c <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>:
9000424c:	4905      	ldr	r1, [pc, #20]	; (90004264 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv+0x18>)
9000424e:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004250:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004254:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004258:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
9000425c:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004260:	4770      	bx	lr
90004262:	bf00      	nop
90004264:	900038d9 	.word	0x900038d9

90004268 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004268:	6a40      	ldr	r0, [r0, #36]	; 0x24
9000426a:	4770      	bx	lr

9000426c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
9000426c:	6a80      	ldr	r0, [r0, #40]	; 0x28
9000426e:	4770      	bx	lr

90004270 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004270:	4770      	bx	lr
90004272:	bf00      	nop

90004274 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90004274:	888b      	ldrh	r3, [r1, #4]
90004276:	69c0      	ldr	r0, [r0, #28]
90004278:	0adb      	lsrs	r3, r3, #11
9000427a:	680a      	ldr	r2, [r1, #0]
9000427c:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004280:	4410      	add	r0, r2
90004282:	4770      	bx	lr

90004284 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004284:	b1da      	cbz	r2, 900042be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
90004286:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004288:	7b14      	ldrb	r4, [r2, #12]
9000428a:	b1b4      	cbz	r4, 900042ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
9000428c:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004290:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004294:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004298:	6a03      	ldr	r3, [r0, #32]
9000429a:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000429e:	ea4e 0202 	orr.w	r2, lr, r2
900042a2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900042a6:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
900042aa:	881a      	ldrh	r2, [r3, #0]
900042ac:	428a      	cmp	r2, r1
900042ae:	d008      	beq.n	900042c2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900042b0:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
900042b4:	d801      	bhi.n	900042ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900042b6:	4283      	cmp	r3, r0
900042b8:	d1f7      	bne.n	900042aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
900042ba:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
900042bc:	bd10      	pop	{r4, pc}
        return 0;
900042be:	4610      	mov	r0, r2
}
900042c0:	4770      	bx	lr
            return kerndata->distance;
900042c2:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
900042c6:	bd10      	pop	{r4, pc}

900042c8 <_ZN8touchgfx13GeneratedFontD0Ev>:
900042c8:	b510      	push	{r4, lr}
900042ca:	4604      	mov	r4, r0
900042cc:	212c      	movs	r1, #44	; 0x2c
900042ce:	f025 f989 	bl	900295e4 <_ZdlPvj>
900042d2:	4620      	mov	r0, r4
900042d4:	bd10      	pop	{r4, pc}
900042d6:	bf00      	nop

900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042d8:	b530      	push	{r4, r5, lr}
900042da:	b08b      	sub	sp, #44	; 0x2c
900042dc:	4604      	mov	r4, r0
900042de:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
900042e2:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042e4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
900042e8:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042ea:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
900042ee:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042f0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
900042f4:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042f6:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
900042fa:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042fc:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
90004300:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004302:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
90004306:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004308:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
9000430c:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000430e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
90004312:	9508      	str	r5, [sp, #32]
90004314:	f015 f976 	bl	90019604 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90004318:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
9000431a:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
9000431c:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
9000431e:	9b16      	ldr	r3, [sp, #88]	; 0x58
90004320:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90004322:	9b19      	ldr	r3, [sp, #100]	; 0x64
90004324:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
90004326:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90004328:	62a3      	str	r3, [r4, #40]	; 0x28
9000432a:	4b02      	ldr	r3, [pc, #8]	; (90004334 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
9000432c:	6023      	str	r3, [r4, #0]
}
9000432e:	b00b      	add	sp, #44	; 0x2c
90004330:	bd30      	pop	{r4, r5, pc}
90004332:	bf00      	nop
90004334:	9002ca48 	.word	0x9002ca48

90004338 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004338:	4770      	bx	lr
9000433a:	bf00      	nop

9000433c <_Z23getFont_verdana_10_4bppv>:
{
9000433c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000433e:	4d18      	ldr	r5, [pc, #96]	; (900043a0 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90004340:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004342:	682c      	ldr	r4, [r5, #0]
90004344:	f3bf 8f5b 	dmb	ish
90004348:	f014 0401 	ands.w	r4, r4, #1
9000434c:	d002      	beq.n	90004354 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
9000434e:	4815      	ldr	r0, [pc, #84]	; (900043a4 <_Z23getFont_verdana_10_4bppv+0x68>)
90004350:	b00f      	add	sp, #60	; 0x3c
90004352:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004354:	4628      	mov	r0, r5
90004356:	f025 f947 	bl	900295e8 <__cxa_guard_acquire>
9000435a:	2800      	cmp	r0, #0
9000435c:	d0f7      	beq.n	9000434e <_Z23getFont_verdana_10_4bppv+0x12>
9000435e:	213f      	movs	r1, #63	; 0x3f
90004360:	2201      	movs	r2, #1
90004362:	230a      	movs	r3, #10
90004364:	2004      	movs	r0, #4
90004366:	9204      	str	r2, [sp, #16]
90004368:	9300      	str	r3, [sp, #0]
9000436a:	9003      	str	r0, [sp, #12]
9000436c:	480d      	ldr	r0, [pc, #52]	; (900043a4 <_Z23getFont_verdana_10_4bppv+0x68>)
9000436e:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90004372:	490d      	ldr	r1, [pc, #52]	; (900043a8 <_Z23getFont_verdana_10_4bppv+0x6c>)
90004374:	9108      	str	r1, [sp, #32]
90004376:	490d      	ldr	r1, [pc, #52]	; (900043ac <_Z23getFont_verdana_10_4bppv+0x70>)
90004378:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000437c:	9107      	str	r1, [sp, #28]
9000437e:	490c      	ldr	r1, [pc, #48]	; (900043b0 <_Z23getFont_verdana_10_4bppv+0x74>)
90004380:	e9cd 4405 	strd	r4, r4, [sp, #20]
90004384:	e9cd 4401 	strd	r4, r4, [sp, #4]
90004388:	f7ff ffa6 	bl	900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000438c:	4809      	ldr	r0, [pc, #36]	; (900043b4 <_Z23getFont_verdana_10_4bppv+0x78>)
9000438e:	f025 f975 	bl	9002967c <atexit>
90004392:	4628      	mov	r0, r5
90004394:	f025 f934 	bl	90029600 <__cxa_guard_release>
}
90004398:	4802      	ldr	r0, [pc, #8]	; (900043a4 <_Z23getFont_verdana_10_4bppv+0x68>)
9000439a:	b00f      	add	sp, #60	; 0x3c
9000439c:	bd30      	pop	{r4, r5, pc}
9000439e:	bf00      	nop
900043a0:	240097cc 	.word	0x240097cc
900043a4:	240097d0 	.word	0x240097d0
900043a8:	9002e1c8 	.word	0x9002e1c8
900043ac:	9002e2c4 	.word	0x9002e2c4
900043b0:	90201dd8 	.word	0x90201dd8
900043b4:	90004339 	.word	0x90004339

900043b8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043b8:	4770      	bx	lr
900043ba:	bf00      	nop

900043bc <_Z23getFont_verdana_20_4bppv>:
{
900043bc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043be:	4d19      	ldr	r5, [pc, #100]	; (90004424 <_Z23getFont_verdana_20_4bppv+0x68>)
{
900043c0:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043c2:	682c      	ldr	r4, [r5, #0]
900043c4:	f3bf 8f5b 	dmb	ish
900043c8:	f014 0401 	ands.w	r4, r4, #1
900043cc:	d002      	beq.n	900043d4 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
900043ce:	4816      	ldr	r0, [pc, #88]	; (90004428 <_Z23getFont_verdana_20_4bppv+0x6c>)
900043d0:	b00f      	add	sp, #60	; 0x3c
900043d2:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043d4:	4628      	mov	r0, r5
900043d6:	f025 f907 	bl	900295e8 <__cxa_guard_acquire>
900043da:	2800      	cmp	r0, #0
900043dc:	d0f7      	beq.n	900043ce <_Z23getFont_verdana_20_4bppv+0x12>
900043de:	213f      	movs	r1, #63	; 0x3f
900043e0:	4a12      	ldr	r2, [pc, #72]	; (9000442c <_Z23getFont_verdana_20_4bppv+0x70>)
900043e2:	2301      	movs	r3, #1
900043e4:	2014      	movs	r0, #20
900043e6:	9208      	str	r2, [sp, #32]
900043e8:	2204      	movs	r2, #4
900043ea:	9304      	str	r3, [sp, #16]
900043ec:	9000      	str	r0, [sp, #0]
900043ee:	9401      	str	r4, [sp, #4]
900043f0:	480d      	ldr	r0, [pc, #52]	; (90004428 <_Z23getFont_verdana_20_4bppv+0x6c>)
900043f2:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
900043f6:	490e      	ldr	r1, [pc, #56]	; (90004430 <_Z23getFont_verdana_20_4bppv+0x74>)
900043f8:	e9cd 3305 	strd	r3, r3, [sp, #20]
900043fc:	9107      	str	r1, [sp, #28]
900043fe:	2318      	movs	r3, #24
90004400:	490c      	ldr	r1, [pc, #48]	; (90004434 <_Z23getFont_verdana_20_4bppv+0x78>)
90004402:	e9cd 4202 	strd	r4, r2, [sp, #8]
90004406:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000440a:	2242      	movs	r2, #66	; 0x42
9000440c:	f7ff ff64 	bl	900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004410:	4809      	ldr	r0, [pc, #36]	; (90004438 <_Z23getFont_verdana_20_4bppv+0x7c>)
90004412:	f025 f933 	bl	9002967c <atexit>
90004416:	4628      	mov	r0, r5
90004418:	f025 f8f2 	bl	90029600 <__cxa_guard_release>
}
9000441c:	4802      	ldr	r0, [pc, #8]	; (90004428 <_Z23getFont_verdana_20_4bppv+0x6c>)
9000441e:	b00f      	add	sp, #60	; 0x3c
90004420:	bd30      	pop	{r4, r5, pc}
90004422:	bf00      	nop
90004424:	240097fc 	.word	0x240097fc
90004428:	24009800 	.word	0x24009800
9000442c:	9002e1cc 	.word	0x9002e1cc
90004430:	9002e2c8 	.word	0x9002e2c8
90004434:	90201de8 	.word	0x90201de8
90004438:	900043b9 	.word	0x900043b9

9000443c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000443c:	4770      	bx	lr
9000443e:	bf00      	nop

90004440 <_Z23getFont_verdana_40_4bppv>:
{
90004440:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004442:	4d19      	ldr	r5, [pc, #100]	; (900044a8 <_Z23getFont_verdana_40_4bppv+0x68>)
{
90004444:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004446:	682c      	ldr	r4, [r5, #0]
90004448:	f3bf 8f5b 	dmb	ish
9000444c:	f014 0401 	ands.w	r4, r4, #1
90004450:	d002      	beq.n	90004458 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90004452:	4816      	ldr	r0, [pc, #88]	; (900044ac <_Z23getFont_verdana_40_4bppv+0x6c>)
90004454:	b00f      	add	sp, #60	; 0x3c
90004456:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004458:	4628      	mov	r0, r5
9000445a:	f025 f8c5 	bl	900295e8 <__cxa_guard_acquire>
9000445e:	2800      	cmp	r0, #0
90004460:	d0f7      	beq.n	90004452 <_Z23getFont_verdana_40_4bppv+0x12>
90004462:	213f      	movs	r1, #63	; 0x3f
90004464:	4a12      	ldr	r2, [pc, #72]	; (900044b0 <_Z23getFont_verdana_40_4bppv+0x70>)
90004466:	2301      	movs	r3, #1
90004468:	2028      	movs	r0, #40	; 0x28
9000446a:	9208      	str	r2, [sp, #32]
9000446c:	2204      	movs	r2, #4
9000446e:	9304      	str	r3, [sp, #16]
90004470:	9000      	str	r0, [sp, #0]
90004472:	9401      	str	r4, [sp, #4]
90004474:	480d      	ldr	r0, [pc, #52]	; (900044ac <_Z23getFont_verdana_40_4bppv+0x6c>)
90004476:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000447a:	490e      	ldr	r1, [pc, #56]	; (900044b4 <_Z23getFont_verdana_40_4bppv+0x74>)
9000447c:	e9cd 4305 	strd	r4, r3, [sp, #20]
90004480:	9107      	str	r1, [sp, #28]
90004482:	2329      	movs	r3, #41	; 0x29
90004484:	490c      	ldr	r1, [pc, #48]	; (900044b8 <_Z23getFont_verdana_40_4bppv+0x78>)
90004486:	e9cd 4202 	strd	r4, r2, [sp, #8]
9000448a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000448e:	220a      	movs	r2, #10
90004490:	f7ff ff22 	bl	900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004494:	4809      	ldr	r0, [pc, #36]	; (900044bc <_Z23getFont_verdana_40_4bppv+0x7c>)
90004496:	f025 f8f1 	bl	9002967c <atexit>
9000449a:	4628      	mov	r0, r5
9000449c:	f025 f8b0 	bl	90029600 <__cxa_guard_release>
}
900044a0:	4802      	ldr	r0, [pc, #8]	; (900044ac <_Z23getFont_verdana_40_4bppv+0x6c>)
900044a2:	b00f      	add	sp, #60	; 0x3c
900044a4:	bd30      	pop	{r4, r5, pc}
900044a6:	bf00      	nop
900044a8:	2400982c 	.word	0x2400982c
900044ac:	24009830 	.word	0x24009830
900044b0:	9002e2bc 	.word	0x9002e2bc
900044b4:	9002e2cc 	.word	0x9002e2cc
900044b8:	90202184 	.word	0x90202184
900044bc:	9000443d 	.word	0x9000443d

900044c0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
900044c0:	2000      	movs	r0, #0
900044c2:	4770      	bx	lr

900044c4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
900044c4:	2000      	movs	r0, #0
900044c6:	4770      	bx	lr

900044c8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900044c8:	b40e      	push	{r1, r2, r3}
900044ca:	b500      	push	{lr}
900044cc:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900044ce:	2100      	movs	r1, #0
{
900044d0:	ab03      	add	r3, sp, #12
900044d2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900044d6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900044d8:	f014 febc 	bl	90019254 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900044dc:	b002      	add	sp, #8
900044de:	f85d eb04 	ldr.w	lr, [sp], #4
900044e2:	b003      	add	sp, #12
900044e4:	4770      	bx	lr
900044e6:	bf00      	nop

900044e8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900044e8:	b40c      	push	{r2, r3}
900044ea:	b500      	push	{lr}
900044ec:	b083      	sub	sp, #12
900044ee:	ab04      	add	r3, sp, #16
900044f0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900044f4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900044f6:	f014 fead 	bl	90019254 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900044fa:	b003      	add	sp, #12
900044fc:	f85d eb04 	ldr.w	lr, [sp], #4
90004500:	b002      	add	sp, #8
90004502:	4770      	bx	lr

90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90004504:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
90004506:	b510      	push	{r4, lr}
90004508:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
9000450a:	b133      	cbz	r3, 9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
9000450c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
9000450e:	b39b      	cbz	r3, 90004578 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90004510:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90004512:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90004516:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
90004518:	b923      	cbnz	r3, 90004524 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
9000451a:	4620      	mov	r0, r4
}
9000451c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90004520:	f016 b96c 	b.w	9001a7fc <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90004524:	f016 fa68 	bl	9001a9f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90004528:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9000452a:	2b01      	cmp	r3, #1
9000452c:	d92a      	bls.n	90004584 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
9000452e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90004530:	1c53      	adds	r3, r2, #1
90004532:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90004534:	2b09      	cmp	r3, #9
90004536:	d812      	bhi.n	9000455e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90004538:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
9000453c:	f640 103f 	movw	r0, #2367	; 0x93f
90004540:	8c49      	ldrh	r1, [r1, #34]	; 0x22
90004542:	4281      	cmp	r1, r0
90004544:	d1e9      	bne.n	9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004546:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000454a:	0052      	lsls	r2, r2, #1
9000454c:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
9000454e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90004552:	4422      	add	r2, r4
90004554:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
90004558:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
9000455a:	8450      	strh	r0, [r2, #34]	; 0x22
        }
9000455c:	e7dd      	b.n	9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
9000455e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90004562:	f640 113f 	movw	r1, #2367	; 0x93f
90004566:	89db      	ldrh	r3, [r3, #14]
90004568:	428b      	cmp	r3, r1
9000456a:	d1d6      	bne.n	9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000456c:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90004570:	2300      	movs	r3, #0
90004572:	0052      	lsls	r2, r2, #1
90004574:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90004576:	e7ea      	b.n	9000454e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90004578:	4b05      	ldr	r3, [pc, #20]	; (90004590 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
9000457a:	21c5      	movs	r1, #197	; 0xc5
9000457c:	4a05      	ldr	r2, [pc, #20]	; (90004594 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
9000457e:	4806      	ldr	r0, [pc, #24]	; (90004598 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004580:	f025 f85e 	bl	90029640 <__assert_func>
            assert(offset < used);
90004584:	4b05      	ldr	r3, [pc, #20]	; (9000459c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90004586:	21cb      	movs	r1, #203	; 0xcb
90004588:	4a05      	ldr	r2, [pc, #20]	; (900045a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
9000458a:	4803      	ldr	r0, [pc, #12]	; (90004598 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
9000458c:	f025 f858 	bl	90029640 <__assert_func>
90004590:	9002caa0 	.word	0x9002caa0
90004594:	9002caac 	.word	0x9002caac
90004598:	9002cb58 	.word	0x9002cb58
9000459c:	9002cba4 	.word	0x9002cba4
900045a0:	9002cbb4 	.word	0x9002cbb4

900045a4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900045a4:	f016 b8f3 	b.w	9001a78e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900045a8:	b510      	push	{r4, lr}
900045aa:	b086      	sub	sp, #24
900045ac:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900045b0:	ac0a      	add	r4, sp, #40	; 0x28
{
900045b2:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900045b6:	461a      	mov	r2, r3
900045b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900045ba:	4661      	mov	r1, ip
900045bc:	9401      	str	r4, [sp, #4]
900045be:	9300      	str	r3, [sp, #0]
900045c0:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900045c2:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900045c4:	f013 fa50 	bl	90017a68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
900045c8:	b006      	add	sp, #24
900045ca:	bd10      	pop	{r4, pc}

900045cc <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
900045cc:	b9e0      	cbnz	r0, 90004608 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
900045ce:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
900045d0:	4b13      	ldr	r3, [pc, #76]	; (90004620 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
900045d2:	681b      	ldr	r3, [r3, #0]
900045d4:	b1cb      	cbz	r3, 9000460a <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900045d6:	4c13      	ldr	r4, [pc, #76]	; (90004624 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900045d8:	4813      	ldr	r0, [pc, #76]	; (90004628 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900045da:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900045de:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900045e0:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900045e2:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900045e4:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900045e6:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900045e8:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
900045ea:	4b10      	ldr	r3, [pc, #64]	; (9000462c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
900045ec:	2200      	movs	r2, #0
900045ee:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
900045f0:	f000 f83a 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
900045f4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
900045f6:	f000 f835 	bl	90004664 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
900045fa:	4b0d      	ldr	r3, [pc, #52]	; (90004630 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
900045fc:	4a0d      	ldr	r2, [pc, #52]	; (90004634 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
900045fe:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90004600:	4b0d      	ldr	r3, [pc, #52]	; (90004638 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90004602:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90004604:	8018      	strh	r0, [r3, #0]
    }
}
90004606:	bd38      	pop	{r3, r4, r5, pc}
90004608:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000460a:	4c0c      	ldr	r4, [pc, #48]	; (9000463c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
9000460c:	4905      	ldr	r1, [pc, #20]	; (90004624 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000460e:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90004610:	480b      	ldr	r0, [pc, #44]	; (90004640 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90004612:	4b05      	ldr	r3, [pc, #20]	; (90004628 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90004614:	4a0b      	ldr	r2, [pc, #44]	; (90004644 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90004616:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90004618:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
9000461a:	2c00      	cmp	r4, #0
9000461c:	d1e5      	bne.n	900045ea <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
9000461e:	bd38      	pop	{r3, r4, r5, pc}
90004620:	2400985c 	.word	0x2400985c
90004624:	24009860 	.word	0x24009860
90004628:	24009864 	.word	0x24009864
9000462c:	24009868 	.word	0x24009868
90004630:	24039b24 	.word	0x24039b24
90004634:	24039b2c 	.word	0x24039b2c
90004638:	24039b28 	.word	0x24039b28
9000463c:	90202340 	.word	0x90202340
90004640:	90202250 	.word	0x90202250
90004644:	90202210 	.word	0x90202210

90004648 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90004648:	4a04      	ldr	r2, [pc, #16]	; (9000465c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
9000464a:	4b05      	ldr	r3, [pc, #20]	; (90004660 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
9000464c:	6812      	ldr	r2, [r2, #0]
9000464e:	681b      	ldr	r3, [r3, #0]
90004650:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90004654:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90004658:	4770      	bx	lr
9000465a:	bf00      	nop
9000465c:	24009864 	.word	0x24009864
90004660:	24009860 	.word	0x24009860

90004664 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90004664:	2010      	movs	r0, #16
90004666:	4770      	bx	lr

90004668 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90004668:	4800      	ldr	r0, [pc, #0]	; (9000466c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
9000466a:	4770      	bx	lr
9000466c:	2400986c 	.word	0x2400986c

90004670 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90004670:	b510      	push	{r4, lr}
};
90004672:	4c05      	ldr	r4, [pc, #20]	; (90004688 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90004674:	f7ff fea2 	bl	900043bc <_Z23getFont_verdana_20_4bppv>
};
90004678:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
9000467a:	f7ff fee1 	bl	90004440 <_Z23getFont_verdana_40_4bppv>
};
9000467e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90004680:	f7ff fe5c 	bl	9000433c <_Z23getFont_verdana_10_4bppv>
};
90004684:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
90004686:	bd10      	pop	{r4, pc}
90004688:	2400986c 	.word	0x2400986c

9000468c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
9000468c:	4770      	bx	lr
9000468e:	bf00      	nop

90004690 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004690:	4770      	bx	lr
90004692:	bf00      	nop

90004694 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004694:	4770      	bx	lr
90004696:	bf00      	nop

90004698 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004698:	4770      	bx	lr
9000469a:	bf00      	nop

9000469c <_ZN24screen_main_menuViewBaseD1Ev>:
}

screen_main_menuViewBase::~screen_main_menuViewBase()
{

}
9000469c:	4770      	bx	lr
9000469e:	bf00      	nop

900046a0 <_ZN24screen_main_menuViewBase11setupScreenEv>:

void screen_main_menuViewBase::setupScreen()
{

}
900046a0:	4770      	bx	lr
900046a2:	bf00      	nop

900046a4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
900046a4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
900046a8:	b133      	cbz	r3, 900046b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
900046aa:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900046ac:	f100 0374 	add.w	r3, r0, #116	; 0x74
900046b0:	65c2      	str	r2, [r0, #92]	; 0x5c
900046b2:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
900046b4:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
900046b6:	4770      	bx	lr
900046b8:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900046ba:	f100 0370 	add.w	r3, r0, #112	; 0x70
900046be:	65c2      	str	r2, [r0, #92]	; 0x5c
900046c0:	681b      	ldr	r3, [r3, #0]
900046c2:	6603      	str	r3, [r0, #96]	; 0x60
    }
900046c4:	4770      	bx	lr
900046c6:	bf00      	nop

900046c8 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900046c8:	4770      	bx	lr
900046ca:	bf00      	nop

900046cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
900046cc:	4770      	bx	lr
900046ce:	bf00      	nop

900046d0 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
900046d0:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900046d2:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
900046d4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
900046d6:	6844      	ldr	r4, [r0, #4]
900046d8:	f012 0f01 	tst.w	r2, #1
900046dc:	eb04 0062 	add.w	r0, r4, r2, asr #1
900046e0:	d103      	bne.n	900046ea <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
900046e2:	689b      	ldr	r3, [r3, #8]
    }
900046e4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900046e8:	4718      	bx	r3
900046ea:	ea4f 0c62 	mov.w	ip, r2, asr #1
900046ee:	689b      	ldr	r3, [r3, #8]
900046f0:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900046f4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900046f8:	58d3      	ldr	r3, [r2, r3]
900046fa:	4718      	bx	r3

900046fc <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900046fc:	6843      	ldr	r3, [r0, #4]
900046fe:	b13b      	cbz	r3, 90004710 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90004700:	6883      	ldr	r3, [r0, #8]
90004702:	b10b      	cbz	r3, 90004708 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90004704:	2001      	movs	r0, #1
    }
90004706:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004708:	68c0      	ldr	r0, [r0, #12]
9000470a:	f000 0001 	and.w	r0, r0, #1
9000470e:	4770      	bx	lr
90004710:	4618      	mov	r0, r3
90004712:	4770      	bx	lr

90004714 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004714:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
90004718:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
9000471c:	4770      	bx	lr
9000471e:	bf00      	nop

90004720 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
90004720:	b510      	push	{r4, lr}
90004722:	4604      	mov	r4, r0
90004724:	2178      	movs	r1, #120	; 0x78
90004726:	f024 ff5d 	bl	900295e4 <_ZdlPvj>
9000472a:	4620      	mov	r0, r4
9000472c:	bd10      	pop	{r4, pc}
9000472e:	bf00      	nop

90004730 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004730:	b510      	push	{r4, lr}
90004732:	4604      	mov	r4, r0
90004734:	2110      	movs	r1, #16
90004736:	f024 ff55 	bl	900295e4 <_ZdlPvj>
9000473a:	4620      	mov	r0, r4
9000473c:	bd10      	pop	{r4, pc}
9000473e:	bf00      	nop

90004740 <_ZN24screen_main_menuViewBaseD0Ev>:
screen_main_menuViewBase::~screen_main_menuViewBase()
90004740:	b510      	push	{r4, lr}
90004742:	4604      	mov	r4, r0
}
90004744:	f44f 711a 	mov.w	r1, #616	; 0x268
90004748:	f024 ff4c 	bl	900295e4 <_ZdlPvj>
9000474c:	4620      	mov	r0, r4
9000474e:	bd10      	pop	{r4, pc}

90004750 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screen_main_menuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
90004750:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btn_snake)
90004752:	f500 739e 	add.w	r3, r0, #316	; 0x13c
{
90004756:	4604      	mov	r4, r0
90004758:	460d      	mov	r5, r1
    if (&src == &btn_snake)
9000475a:	4299      	cmp	r1, r3
9000475c:	d008      	beq.n	90004770 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x20>
        //intr_snake_game
        //When btn_snake clicked change screen to screen_snake_game
        //Go to screen_snake_game with screen transition towards East
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
    }
    if (&src == &btn_tictactoe)
9000475e:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
90004762:	429d      	cmp	r5, r3
90004764:	d00c      	beq.n	90004780 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x30>
        //intr_tictactoe_game
        //When btn_tictactoe clicked change screen to screen_tictactoe_game
        //Go to screen_tictactoe_game with screen transition towards East
        application().gotoscreen_tictactoe_gameScreenSlideTransitionEast();
    }
    if (&src == &btn_space_invaders)
90004766:	f504 74da 	add.w	r4, r4, #436	; 0x1b4
9000476a:	42a5      	cmp	r5, r4
9000476c:	d010      	beq.n	90004790 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x40>
        //intr_space_invaders_game
        //When btn_space_invaders clicked change screen to screen_space_invaders
        //Go to screen_space_invaders with screen transition towards East
        application().gotoscreen_space_invadersScreenSlideTransitionEast();
    }
}
9000476e:	bd38      	pop	{r3, r4, r5, pc}
    virtual ~screen_main_menuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004770:	f013 fdfa 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
90004774:	f7ff fd6a 	bl	9000424c <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>
    if (&src == &btn_tictactoe)
90004778:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
9000477c:	429d      	cmp	r5, r3
9000477e:	d1f2      	bne.n	90004766 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    if (&src == &btn_space_invaders)
90004780:	f504 74da 	add.w	r4, r4, #436	; 0x1b4
90004784:	f013 fdf0 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_tictactoe_gameScreenSlideTransitionEast();
90004788:	f7ff fd44 	bl	90004214 <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv>
    if (&src == &btn_space_invaders)
9000478c:	42a5      	cmp	r5, r4
9000478e:	d1ee      	bne.n	9000476e <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
90004790:	f013 fdea 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
}
90004794:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoscreen_space_invadersScreenSlideTransitionEast();
90004798:	f7ff bd4a 	b.w	90004230 <_ZN23FrontendApplicationBase50gotoscreen_space_invadersScreenSlideTransitionEastEv>

9000479c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
9000479c:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000479e:	b30b      	cbz	r3, 900047e4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
900047a0:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
900047a2:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
900047a4:	68d1      	ldr	r1, [r2, #12]
900047a6:	4604      	mov	r4, r0
900047a8:	481a      	ldr	r0, [pc, #104]	; (90004814 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
900047aa:	4281      	cmp	r1, r0
900047ac:	d11b      	bne.n	900047e6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
900047ae:	6858      	ldr	r0, [r3, #4]
900047b0:	b180      	cbz	r0, 900047d4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900047b2:	6899      	ldr	r1, [r3, #8]
900047b4:	b1f1      	cbz	r1, 900047f4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
900047b6:	6892      	ldr	r2, [r2, #8]
900047b8:	4917      	ldr	r1, [pc, #92]	; (90004818 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900047ba:	428a      	cmp	r2, r1
900047bc:	d124      	bne.n	90004808 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
900047be:	68da      	ldr	r2, [r3, #12]
900047c0:	6858      	ldr	r0, [r3, #4]
900047c2:	eb00 0062 	add.w	r0, r0, r2, asr #1
900047c6:	07d2      	lsls	r2, r2, #31
900047c8:	d405      	bmi.n	900047d6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
900047ca:	4621      	mov	r1, r4
900047cc:	689b      	ldr	r3, [r3, #8]
        }
    }
900047ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900047d2:	4718      	bx	r3
900047d4:	bd70      	pop	{r4, r5, r6, pc}
900047d6:	6899      	ldr	r1, [r3, #8]
900047d8:	6803      	ldr	r3, [r0, #0]
900047da:	585b      	ldr	r3, [r3, r1]
900047dc:	4621      	mov	r1, r4
900047de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900047e2:	4718      	bx	r3
900047e4:	4770      	bx	lr
        if (action && action->isValid())
900047e6:	4618      	mov	r0, r3
900047e8:	4788      	blx	r1
900047ea:	2800      	cmp	r0, #0
900047ec:	d0f2      	beq.n	900047d4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
900047ee:	6b23      	ldr	r3, [r4, #48]	; 0x30
900047f0:	681a      	ldr	r2, [r3, #0]
900047f2:	e7e0      	b.n	900047b6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
900047f4:	68dd      	ldr	r5, [r3, #12]
900047f6:	07ee      	lsls	r6, r5, #31
900047f8:	d5ec      	bpl.n	900047d4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900047fa:	6892      	ldr	r2, [r2, #8]
900047fc:	4e06      	ldr	r6, [pc, #24]	; (90004818 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900047fe:	42b2      	cmp	r2, r6
90004800:	d102      	bne.n	90004808 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90004802:	eb00 0065 	add.w	r0, r0, r5, asr #1
90004806:	e7e7      	b.n	900047d8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
90004808:	4621      	mov	r1, r4
9000480a:	4618      	mov	r0, r3
    }
9000480c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
90004810:	4710      	bx	r2
90004812:	bf00      	nop
90004814:	900046fd 	.word	0x900046fd
90004818:	900046d1 	.word	0x900046d1

9000481c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
9000481c:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000481e:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90004820:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90004822:	bf18      	it	ne
90004824:	2201      	movne	r2, #1
        return pressed;
90004826:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
9000482a:	460d      	mov	r5, r1
9000482c:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000482e:	42b2      	cmp	r2, r6
90004830:	d004      	beq.n	9000483c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
90004832:	b116      	cbz	r6, 9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90004834:	792b      	ldrb	r3, [r5, #4]
90004836:	2b01      	cmp	r3, #1
90004838:	d00e      	beq.n	90004858 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
9000483a:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
9000483c:	fab3 f383 	clz	r3, r3
90004840:	095b      	lsrs	r3, r3, #5
90004842:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
90004846:	6803      	ldr	r3, [r0, #0]
90004848:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
9000484c:	4798      	blx	r3
            invalidate();
9000484e:	6823      	ldr	r3, [r4, #0]
90004850:	4620      	mov	r0, r4
90004852:	695b      	ldr	r3, [r3, #20]
90004854:	4798      	blx	r3
90004856:	e7ec      	b.n	90004832 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
90004858:	6823      	ldr	r3, [r4, #0]
9000485a:	4a20      	ldr	r2, [pc, #128]	; (900048dc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
9000485c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90004860:	4293      	cmp	r3, r2
90004862:	d127      	bne.n	900048b4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
90004864:	6b23      	ldr	r3, [r4, #48]	; 0x30
90004866:	2b00      	cmp	r3, #0
90004868:	d0e7      	beq.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000486a:	6819      	ldr	r1, [r3, #0]
9000486c:	481c      	ldr	r0, [pc, #112]	; (900048e0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
9000486e:	68ca      	ldr	r2, [r1, #12]
90004870:	4282      	cmp	r2, r0
90004872:	d123      	bne.n	900048bc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
90004874:	685a      	ldr	r2, [r3, #4]
90004876:	2a00      	cmp	r2, #0
90004878:	d0df      	beq.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000487a:	689d      	ldr	r5, [r3, #8]
9000487c:	b175      	cbz	r5, 9000489c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
9000487e:	688e      	ldr	r6, [r1, #8]
90004880:	4a18      	ldr	r2, [pc, #96]	; (900048e4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
90004882:	4296      	cmp	r6, r2
90004884:	d123      	bne.n	900048ce <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
90004886:	68d9      	ldr	r1, [r3, #12]
90004888:	685a      	ldr	r2, [r3, #4]
9000488a:	eb02 0061 	add.w	r0, r2, r1, asr #1
9000488e:	07ca      	lsls	r2, r1, #31
90004890:	d41b      	bmi.n	900048ca <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
90004892:	689b      	ldr	r3, [r3, #8]
90004894:	4621      	mov	r1, r4
    }
90004896:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000489a:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
9000489c:	68d8      	ldr	r0, [r3, #12]
9000489e:	07c6      	lsls	r6, r0, #31
900048a0:	d5cb      	bpl.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900048a2:	688e      	ldr	r6, [r1, #8]
900048a4:	490f      	ldr	r1, [pc, #60]	; (900048e4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900048a6:	428e      	cmp	r6, r1
900048a8:	d111      	bne.n	900048ce <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900048aa:	eb02 0060 	add.w	r0, r2, r0, asr #1
900048ae:	6803      	ldr	r3, [r0, #0]
900048b0:	595b      	ldr	r3, [r3, r5]
900048b2:	e7ef      	b.n	90004894 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
900048b4:	4620      	mov	r0, r4
    }
900048b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
900048ba:	4718      	bx	r3
        if (action && action->isValid())
900048bc:	4618      	mov	r0, r3
900048be:	4790      	blx	r2
900048c0:	2800      	cmp	r0, #0
900048c2:	d0ba      	beq.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
900048c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
900048c6:	6819      	ldr	r1, [r3, #0]
900048c8:	e7d9      	b.n	9000487e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
900048ca:	689d      	ldr	r5, [r3, #8]
900048cc:	e7ef      	b.n	900048ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
900048ce:	4621      	mov	r1, r4
900048d0:	4618      	mov	r0, r3
900048d2:	4633      	mov	r3, r6
    }
900048d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900048d8:	4718      	bx	r3
900048da:	bf00      	nop
900048dc:	9000479d 	.word	0x9000479d
900048e0:	900046fd 	.word	0x900046fd
900048e4:	900046d1 	.word	0x900046d1

900048e8 <_ZN24screen_main_menuViewBaseC1Ev>:
screen_main_menuViewBase::screen_main_menuViewBase() :
900048e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900048ec:	b085      	sub	sp, #20
900048ee:	4604      	mov	r4, r0
        : presenter(0)
900048f0:	f015 f972 	bl	90019bd8 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &screen_main_menuViewBase::flexButtonCallbackHandler)
900048f4:	4adf      	ldr	r2, [pc, #892]	; (90004c74 <_ZN24screen_main_menuViewBaseC1Ev+0x38c>)
900048f6:	2500      	movs	r5, #0
          touchable(false),
900048f8:	f44f 7680 	mov.w	r6, #256	; 0x100
900048fc:	f104 086c 	add.w	r8, r4, #108	; 0x6c
        : Widget(), alpha(255), color(0)
90004900:	4bdd      	ldr	r3, [pc, #884]	; (90004c78 <_ZN24screen_main_menuViewBaseC1Ev+0x390>)
90004902:	6022      	str	r2, [r4, #0]
90004904:	22ff      	movs	r2, #255	; 0xff
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90004906:	f64f 79ff 	movw	r9, #65535	; 0xffff
9000490a:	f104 0798 	add.w	r7, r4, #152	; 0x98
9000490e:	f884 2066 	strb.w	r2, [r4, #102]	; 0x66
90004912:	a903      	add	r1, sp, #12
90004914:	63e5      	str	r5, [r4, #60]	; 0x3c
90004916:	4640      	mov	r0, r8
        : x(0), y(0), width(0), height(0)
90004918:	6465      	str	r5, [r4, #68]	; 0x44
        : pressed(false), alpha(255), action(0)
9000491a:	f64f 7a00 	movw	sl, #65280	; 0xff00
          cachedAbsX(0),
9000491e:	6625      	str	r5, [r4, #96]	; 0x60
90004920:	f504 7b9e 	add.w	fp, r4, #316	; 0x13c
          touchable(false),
90004924:	f8a4 6064 	strh.w	r6, [r4, #100]	; 0x64
90004928:	6423      	str	r3, [r4, #64]	; 0x40
        : color(col)
9000492a:	66a5      	str	r5, [r4, #104]	; 0x68
9000492c:	f8ad 900c 	strh.w	r9, [sp, #12]
        : x(0), y(0), width(0), height(0)
90004930:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
90004934:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
90004938:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
9000493c:	f00f ffea 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004940:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
90004944:	a903      	add	r1, sp, #12
90004946:	4638      	mov	r0, r7
90004948:	f8ad 900c 	strh.w	r9, [sp, #12]
9000494c:	9301      	str	r3, [sp, #4]
9000494e:	f00f ffe1 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        touchable = touch;
90004952:	f240 1301 	movw	r3, #257	; 0x101
        : Box(), borderColor(0), borderSize(0)
90004956:	4ac9      	ldr	r2, [pc, #804]	; (90004c7c <_ZN24screen_main_menuViewBaseC1Ev+0x394>)
        T::add(borderBox);
90004958:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
          firstChild(0)
9000495c:	f8c4 50ec 	str.w	r5, [r4, #236]	; 0xec
90004960:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
        : T(), up(), down()
90004964:	4bc6      	ldr	r3, [pc, #792]	; (90004c80 <_ZN24screen_main_menuViewBaseC1Ev+0x398>)
90004966:	f8a4 a0f0 	strh.w	sl, [r4, #240]	; 0xf0
9000496a:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
        T::add(borderBox);
9000496e:	9b01      	ldr	r3, [sp, #4]
90004970:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
90004974:	4618      	mov	r0, r3
          touchable(false),
90004976:	f8a4 611c 	strh.w	r6, [r4, #284]	; 0x11c
9000497a:	f884 911e 	strb.w	r9, [r4, #286]	; 0x11e
        : color(col)
9000497e:	f8c4 5120 	str.w	r5, [r4, #288]	; 0x120
90004982:	f8c4 20f8 	str.w	r2, [r4, #248]	; 0xf8
90004986:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
9000498a:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
        : x(0), y(0), width(0), height(0)
9000498e:	e9c4 5532 	strd	r5, r5, [r4, #200]	; 0xc8
90004992:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
          nextSibling(0),
90004996:	e9c4 5536 	strd	r5, r5, [r4, #216]	; 0xd8
          cachedAbsX(0),
9000499a:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
          nextSibling(0),
9000499e:	e9c4 5543 	strd	r5, r5, [r4, #268]	; 0x10c
          cachedAbsX(0),
900049a2:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
        : color(0)
900049a6:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
900049aa:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
        rect.x = x;
900049ae:	e9c4 553f 	strd	r5, r5, [r4, #252]	; 0xfc
900049b2:	e9c4 5541 	strd	r5, r5, [r4, #260]	; 0x104
900049b6:	f00e f87f 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900049ba:	22ff      	movs	r2, #255	; 0xff
        : T(), up(), down()
900049bc:	4bb0      	ldr	r3, [pc, #704]	; (90004c80 <_ZN24screen_main_menuViewBaseC1Ev+0x398>)
        touchable = touch;
900049be:	f240 1001 	movw	r0, #257	; 0x101
900049c2:	f884 2196 	strb.w	r2, [r4, #406]	; 0x196
        T::add(borderBox);
900049c6:	f504 71b8 	add.w	r1, r4, #368	; 0x170
900049ca:	4aac      	ldr	r2, [pc, #688]	; (90004c7c <_ZN24screen_main_menuViewBaseC1Ev+0x394>)
900049cc:	f8c4 5164 	str.w	r5, [r4, #356]	; 0x164
900049d0:	f8a4 a168 	strh.w	sl, [r4, #360]	; 0x168
900049d4:	f504 7ada 	add.w	sl, r4, #436	; 0x1b4
900049d8:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
900049dc:	f8a4 0160 	strh.w	r0, [r4, #352]	; 0x160
900049e0:	4658      	mov	r0, fp
        : T(), up(), down()
900049e2:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
          touchable(false),
900049e6:	f8a4 6194 	strh.w	r6, [r4, #404]	; 0x194
        : color(col)
900049ea:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
900049ee:	f8c4 2170 	str.w	r2, [r4, #368]	; 0x170
900049f2:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
900049f6:	f8a4 51a0 	strh.w	r5, [r4, #416]	; 0x1a0
        : x(0), y(0), width(0), height(0)
900049fa:	e9c4 5550 	strd	r5, r5, [r4, #320]	; 0x140
900049fe:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
          nextSibling(0),
90004a02:	e9c4 5554 	strd	r5, r5, [r4, #336]	; 0x150
          cachedAbsX(0),
90004a06:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
          nextSibling(0),
90004a0a:	e9c4 5561 	strd	r5, r5, [r4, #388]	; 0x184
          cachedAbsX(0),
90004a0e:	e9c4 5563 	strd	r5, r5, [r4, #396]	; 0x18c
        : color(0)
90004a12:	e9c4 5569 	strd	r5, r5, [r4, #420]	; 0x1a4
90004a16:	e9c4 556b 	strd	r5, r5, [r4, #428]	; 0x1ac
        rect.x = x;
90004a1a:	e9c4 555d 	strd	r5, r5, [r4, #372]	; 0x174
90004a1e:	e9c4 555f 	strd	r5, r5, [r4, #380]	; 0x17c
        T::add(borderBox);
90004a22:	f00e f849 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a26:	22ff      	movs	r2, #255	; 0xff
        : T(), up(), down()
90004a28:	4b95      	ldr	r3, [pc, #596]	; (90004c80 <_ZN24screen_main_menuViewBaseC1Ev+0x398>)
90004a2a:	f64f 7100 	movw	r1, #65280	; 0xff00
        touchable = touch;
90004a2e:	f240 1001 	movw	r0, #257	; 0x101
90004a32:	f884 220e 	strb.w	r2, [r4, #526]	; 0x20e
90004a36:	4a91      	ldr	r2, [pc, #580]	; (90004c7c <_ZN24screen_main_menuViewBaseC1Ev+0x394>)
          touchable(false),
90004a38:	f8a4 620c 	strh.w	r6, [r4, #524]	; 0x20c
90004a3c:	f504 760b 	add.w	r6, r4, #556	; 0x22c
90004a40:	f8c4 31b4 	str.w	r3, [r4, #436]	; 0x1b4
90004a44:	f8c4 21e8 	str.w	r2, [r4, #488]	; 0x1e8
90004a48:	f8a4 11e0 	strh.w	r1, [r4, #480]	; 0x1e0
        T::add(borderBox);
90004a4c:	f504 71f4 	add.w	r1, r4, #488	; 0x1e8
        touchable = touch;
90004a50:	f8a4 01d8 	strh.w	r0, [r4, #472]	; 0x1d8
90004a54:	4650      	mov	r0, sl
90004a56:	f8c4 51dc 	str.w	r5, [r4, #476]	; 0x1dc
90004a5a:	f8c4 51e4 	str.w	r5, [r4, #484]	; 0x1e4
90004a5e:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
        : x(0), y(0), width(0), height(0)
90004a62:	e9c4 556e 	strd	r5, r5, [r4, #440]	; 0x1b8
90004a66:	e9c4 5570 	strd	r5, r5, [r4, #448]	; 0x1c0
          nextSibling(0),
90004a6a:	e9c4 5572 	strd	r5, r5, [r4, #456]	; 0x1c8
          cachedAbsX(0),
90004a6e:	e9c4 5574 	strd	r5, r5, [r4, #464]	; 0x1d0
          nextSibling(0),
90004a72:	e9c4 557f 	strd	r5, r5, [r4, #508]	; 0x1fc
          cachedAbsX(0),
90004a76:	e9c4 5581 	strd	r5, r5, [r4, #516]	; 0x204
        : color(col)
90004a7a:	e9c4 5584 	strd	r5, r5, [r4, #528]	; 0x210
        : color(0)
90004a7e:	e9c4 5587 	strd	r5, r5, [r4, #540]	; 0x21c
90004a82:	e9c4 5589 	strd	r5, r5, [r4, #548]	; 0x224
        rect.x = x;
90004a86:	e9c4 557b 	strd	r5, r5, [r4, #492]	; 0x1ec
90004a8a:	e9c4 557d 	strd	r5, r5, [r4, #500]	; 0x1f4
90004a8e:	f00e f813 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a92:	a903      	add	r1, sp, #12
90004a94:	4630      	mov	r0, r6
90004a96:	f8ad 900c 	strh.w	r9, [sp, #12]
90004a9a:	f00f ff3b 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
90004a9e:	4a79      	ldr	r2, [pc, #484]	; (90004c84 <_ZN24screen_main_menuViewBaseC1Ev+0x39c>)
    __background.setPosition(0, 0, 480, 272);
90004aa0:	f104 0940 	add.w	r9, r4, #64	; 0x40
        setWidth(width);
90004aa4:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
90004aa8:	f8c4 2258 	str.w	r2, [r4, #600]	; 0x258
90004aac:	4a76      	ldr	r2, [pc, #472]	; (90004c88 <_ZN24screen_main_menuViewBaseC1Ev+0x3a0>)
90004aae:	4648      	mov	r0, r9
90004ab0:	f8c4 5264 	str.w	r5, [r4, #612]	; 0x264
90004ab4:	f8c4 2260 	str.w	r2, [r4, #608]	; 0x260
        rect.x = x;
90004ab8:	6465      	str	r5, [r4, #68]	; 0x44
90004aba:	f8c4 425c 	str.w	r4, [r4, #604]	; 0x25c
        setWidth(width);
90004abe:	f7fd fbe9 	bl	90002294 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
90004ac2:	4648      	mov	r0, r9
90004ac4:	f44f 7188 	mov.w	r1, #272	; 0x110
90004ac8:	f7fd fbe6 	bl	90002298 <_ZN8touchgfx8Drawable9setHeightEs>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90004acc:	4649      	mov	r1, r9
        color = newColor;
90004ace:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
90004ad2:	f104 0904 	add.w	r9, r4, #4
90004ad6:	66a2      	str	r2, [r4, #104]	; 0x68
90004ad8:	4648      	mov	r0, r9
90004ada:	f00d ffed 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ade:	220d      	movs	r2, #13
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_SNAKE_LOGO_ID));
90004ae0:	a903      	add	r1, sp, #12
90004ae2:	4640      	mov	r0, r8
90004ae4:	f8ad 200c 	strh.w	r2, [sp, #12]
90004ae8:	f010 ff4f 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
90004aec:	4a67      	ldr	r2, [pc, #412]	; (90004c8c <_ZN24screen_main_menuViewBaseC1Ev+0x3a4>)
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004aee:	4629      	mov	r1, r5
90004af0:	4640      	mov	r0, r8
90004af2:	6722      	str	r2, [r4, #112]	; 0x70
90004af4:	f102 7287 	add.w	r2, r2, #17694720	; 0x10e0000
90004af8:	6762      	str	r2, [r4, #116]	; 0x74
90004afa:	f00f fec6 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004afe:	4641      	mov	r1, r8
90004b00:	4648      	mov	r0, r9
90004b02:	f00d ffd9 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b06:	2211      	movs	r2, #17
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_TICTACTOE_LOGO_ID));
90004b08:	a903      	add	r1, sp, #12
90004b0a:	4638      	mov	r0, r7
90004b0c:	f8ad 200c 	strh.w	r2, [sp, #12]
90004b10:	f010 ff3b 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90004b14:	4a5e      	ldr	r2, [pc, #376]	; (90004c90 <_ZN24screen_main_menuViewBaseC1Ev+0x3a8>)
90004b16:	f44f 7e94 	mov.w	lr, #296	; 0x128
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004b1a:	4629      	mov	r1, r5
90004b1c:	4638      	mov	r0, r7
90004b1e:	e9c4 e227 	strd	lr, r2, [r4, #156]	; 0x9c
90004b22:	f00f feb2 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004b26:	4639      	mov	r1, r7
90004b28:	4648      	mov	r0, r9
90004b2a:	f00d ffc5 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b2e:	4a59      	ldr	r2, [pc, #356]	; (90004c94 <_ZN24screen_main_menuViewBaseC1Ev+0x3ac>)
        borderUp = borderColorReleased;
90004b30:	4859      	ldr	r0, [pc, #356]	; (90004c98 <_ZN24screen_main_menuViewBaseC1Ev+0x3b0>)
90004b32:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90004b36:	2205      	movs	r2, #5
90004b38:	f8c4 0134 	str.w	r0, [r4, #308]	; 0x134
        borderDown = borderColorPressed;
90004b3c:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
        down = colorPressed;
90004b40:	4956      	ldr	r1, [pc, #344]	; (90004c9c <_ZN24screen_main_menuViewBaseC1Ev+0x3b4>)
        borderDown = borderColorPressed;
90004b42:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
90004b46:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
90004b4a:	f8a4 2128 	strh.w	r2, [r4, #296]	; 0x128
        borderBox.setColor(T::getPressed() ? down : up);
90004b4e:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
        down = colorPressed;
90004b52:	4a53      	ldr	r2, [pc, #332]	; (90004ca0 <_ZN24screen_main_menuViewBaseC1Ev+0x3b8>)
        borderDown = borderColorPressed;
90004b54:	f8c4 0138 	str.w	r0, [r4, #312]	; 0x138
        borderBox.setColor(T::getPressed() ? down : up);
90004b58:	9b01      	ldr	r3, [sp, #4]
        handlePressedUpdated();
90004b5a:	f8d4 00c4 	ldr.w	r0, [r4, #196]	; 0xc4
        down = colorPressed;
90004b5e:	e9c4 214b 	strd	r2, r1, [r4, #300]	; 0x12c
        borderBox.setColor(T::getPressed() ? down : up);
90004b62:	2d00      	cmp	r5, #0
90004b64:	f000 80c7 	beq.w	90004cf6 <_ZN24screen_main_menuViewBaseC1Ev+0x40e>
90004b68:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004b6a:	f504 719c 	add.w	r1, r4, #312	; 0x138
90004b6e:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
90004b72:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90004b74:	4d4b      	ldr	r5, [pc, #300]	; (90004ca4 <_ZN24screen_main_menuViewBaseC1Ev+0x3bc>)
90004b76:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
        alpha = newAlpha;
90004b7a:	2201      	movs	r2, #1
90004b7c:	f884 20f1 	strb.w	r2, [r4, #241]	; 0xf1
        handleAlphaUpdated();
90004b80:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90004b84:	42a9      	cmp	r1, r5
90004b86:	f040 80bf 	bne.w	90004d08 <_ZN24screen_main_menuViewBaseC1Ev+0x420>
        alpha = newAlpha;
90004b8a:	f884 211e 	strb.w	r2, [r4, #286]	; 0x11e
90004b8e:	4619      	mov	r1, r3
90004b90:	4845      	ldr	r0, [pc, #276]	; (90004ca8 <_ZN24screen_main_menuViewBaseC1Ev+0x3c0>)
90004b92:	4b40      	ldr	r3, [pc, #256]	; (90004c94 <_ZN24screen_main_menuViewBaseC1Ev+0x3ac>)
    btn_tictactoe.setAction(flexButtonCallback);
90004b94:	f504 7716 	add.w	r7, r4, #600	; 0x258
90004b98:	e9c4 0332 	strd	r0, r3, [r4, #200]	; 0xc8
        action = &callback;
90004b9c:	f8c4 70f4 	str.w	r7, [r4, #244]	; 0xf4
90004ba0:	4648      	mov	r0, r9
90004ba2:	f00d ff89 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ba6:	4b41      	ldr	r3, [pc, #260]	; (90004cac <_ZN24screen_main_menuViewBaseC1Ev+0x3c4>)
        borderUp = borderColorReleased;
90004ba8:	493b      	ldr	r1, [pc, #236]	; (90004c98 <_ZN24screen_main_menuViewBaseC1Ev+0x3b0>)
90004baa:	f04f 0c00 	mov.w	ip, #0
        down = colorPressed;
90004bae:	4a3b      	ldr	r2, [pc, #236]	; (90004c9c <_ZN24screen_main_menuViewBaseC1Ev+0x3b4>)
        borderUp = borderColorReleased;
90004bb0:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
        borderDown = borderColorPressed;
90004bb4:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90004bb8:	f894 0168 	ldrb.w	r0, [r4, #360]	; 0x168
        borderDown = borderColorPressed;
90004bbc:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90004bc0:	e9c4 c35d 	strd	ip, r3, [r4, #372]	; 0x174
        borderSize = size;
90004bc4:	2305      	movs	r3, #5
90004bc6:	f8c4 11b0 	str.w	r1, [r4, #432]	; 0x1b0
        handlePressedUpdated();
90004bca:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
90004bce:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
        down = colorPressed;
90004bd2:	4b33      	ldr	r3, [pc, #204]	; (90004ca0 <_ZN24screen_main_menuViewBaseC1Ev+0x3b8>)
90004bd4:	e9c4 3269 	strd	r3, r2, [r4, #420]	; 0x1a4
        borderBox.setColor(T::getPressed() ? down : up);
90004bd8:	2800      	cmp	r0, #0
90004bda:	f000 8092 	beq.w	90004d02 <_ZN24screen_main_menuViewBaseC1Ev+0x41a>
        color = newColor;
90004bde:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004be0:	f504 72d8 	add.w	r2, r4, #432	; 0x1b0
90004be4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
90004be8:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90004bea:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
        alpha = newAlpha;
90004bee:	2300      	movs	r3, #0
90004bf0:	f884 3169 	strb.w	r3, [r4, #361]	; 0x169
        handleAlphaUpdated();
90004bf4:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90004bf8:	42aa      	cmp	r2, r5
90004bfa:	f040 808d 	bne.w	90004d18 <_ZN24screen_main_menuViewBaseC1Ev+0x430>
        alpha = newAlpha;
90004bfe:	f884 3196 	strb.w	r3, [r4, #406]	; 0x196
90004c02:	4b22      	ldr	r3, [pc, #136]	; (90004c8c <_ZN24screen_main_menuViewBaseC1Ev+0x3a4>)
90004c04:	4659      	mov	r1, fp
90004c06:	4648      	mov	r0, r9
        action = &callback;
90004c08:	f8c4 716c 	str.w	r7, [r4, #364]	; 0x16c
90004c0c:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
90004c10:	f103 7387 	add.w	r3, r3, #17694720	; 0x10e0000
90004c14:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
90004c18:	f00d ff4e 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004c1c:	2200      	movs	r2, #0
90004c1e:	4b24      	ldr	r3, [pc, #144]	; (90004cb0 <_ZN24screen_main_menuViewBaseC1Ev+0x3c8>)
        borderUp = borderColorReleased;
90004c20:	491d      	ldr	r1, [pc, #116]	; (90004c98 <_ZN24screen_main_menuViewBaseC1Ev+0x3b0>)
        borderBox.setColor(T::getPressed() ? down : up);
90004c22:	f894 01e0 	ldrb.w	r0, [r4, #480]	; 0x1e0
        borderUp = borderColorReleased;
90004c26:	f8c4 1224 	str.w	r1, [r4, #548]	; 0x224
        borderDown = borderColorPressed;
90004c2a:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90004c2e:	e9c4 237b 	strd	r2, r3, [r4, #492]	; 0x1ec
        borderSize = size;
90004c32:	2305      	movs	r3, #5
90004c34:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90004c38:	4a18      	ldr	r2, [pc, #96]	; (90004c9c <_ZN24screen_main_menuViewBaseC1Ev+0x3b4>)
90004c3a:	f8a4 3218 	strh.w	r3, [r4, #536]	; 0x218
90004c3e:	4b18      	ldr	r3, [pc, #96]	; (90004ca0 <_ZN24screen_main_menuViewBaseC1Ev+0x3b8>)
        borderDown = borderColorPressed;
90004c40:	f8c4 1228 	str.w	r1, [r4, #552]	; 0x228
        handlePressedUpdated();
90004c44:	f8d4 11b4 	ldr.w	r1, [r4, #436]	; 0x1b4
        down = colorPressed;
90004c48:	e9c4 3287 	strd	r3, r2, [r4, #540]	; 0x21c
        borderBox.setColor(T::getPressed() ? down : up);
90004c4c:	2800      	cmp	r0, #0
90004c4e:	d055      	beq.n	90004cfc <_ZN24screen_main_menuViewBaseC1Ev+0x414>
        color = newColor;
90004c50:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004c52:	f504 720a 	add.w	r2, r4, #552	; 0x228
90004c56:	f8c4 3210 	str.w	r3, [r4, #528]	; 0x210
90004c5a:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90004c5c:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
        alpha = newAlpha;
90004c60:	2300      	movs	r3, #0
90004c62:	f884 31e1 	strb.w	r3, [r4, #481]	; 0x1e1
        handleAlphaUpdated();
90004c66:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90004c6a:	42aa      	cmp	r2, r5
90004c6c:	d151      	bne.n	90004d12 <_ZN24screen_main_menuViewBaseC1Ev+0x42a>
        alpha = newAlpha;
90004c6e:	f884 320e 	strb.w	r3, [r4, #526]	; 0x20e
90004c72:	e01f      	b.n	90004cb4 <_ZN24screen_main_menuViewBaseC1Ev+0x3cc>
90004c74:	9002cd44 	.word	0x9002cd44
90004c78:	9002db10 	.word	0x9002db10
90004c7c:	9002db78 	.word	0x9002db78
90004c80:	9002cc90 	.word	0x9002cc90
90004c84:	9002cd2c 	.word	0x9002cd2c
90004c88:	90004751 	.word	0x90004751
90004c8c:	000100a0 	.word	0x000100a0
90004c90:	011000b2 	.word	0x011000b2
90004c94:	010f009a 	.word	0x010f009a
90004c98:	ff003366 	.word	0xff003366
90004c9c:	ff0099cc 	.word	0xff0099cc
90004ca0:	ff006699 	.word	0xff006699
90004ca4:	90004715 	.word	0x90004715
90004ca8:	00010140 	.word	0x00010140
90004cac:	010f00a0 	.word	0x010f00a0
90004cb0:	011000a0 	.word	0x011000a0
90004cb4:	2500      	movs	r5, #0
        action = &callback;
90004cb6:	f8c4 71e4 	str.w	r7, [r4, #484]	; 0x1e4
90004cba:	4f19      	ldr	r7, [pc, #100]	; (90004d20 <_ZN24screen_main_menuViewBaseC1Ev+0x438>)
90004cbc:	4651      	mov	r1, sl
90004cbe:	4648      	mov	r0, r9
90004cc0:	e9c4 576e 	strd	r5, r7, [r4, #440]	; 0x1b8
90004cc4:	f00d fef8 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004cc8:	230e      	movs	r3, #14
    scalableImage3.setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_ID));
90004cca:	a903      	add	r1, sp, #12
90004ccc:	4630      	mov	r0, r6
90004cce:	f8ad 300c 	strh.w	r3, [sp, #12]
90004cd2:	f010 fe5a 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004cd6:	4629      	mov	r1, r5
90004cd8:	4630      	mov	r0, r6
90004cda:	f8c4 5230 	str.w	r5, [r4, #560]	; 0x230
90004cde:	f8c4 7234 	str.w	r7, [r4, #564]	; 0x234
90004ce2:	f00f fdd2 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004ce6:	4648      	mov	r0, r9
90004ce8:	4631      	mov	r1, r6
90004cea:	f00d fee5 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90004cee:	4620      	mov	r0, r4
90004cf0:	b005      	add	sp, #20
90004cf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004cf6:	f504 719a 	add.w	r1, r4, #308	; 0x134
90004cfa:	e738      	b.n	90004b6e <_ZN24screen_main_menuViewBaseC1Ev+0x286>
90004cfc:	f504 7209 	add.w	r2, r4, #548	; 0x224
90004d00:	e7a9      	b.n	90004c56 <_ZN24screen_main_menuViewBaseC1Ev+0x36e>
90004d02:	f504 72d6 	add.w	r2, r4, #428	; 0x1ac
90004d06:	e76d      	b.n	90004be4 <_ZN24screen_main_menuViewBaseC1Ev+0x2fc>
        handleAlphaUpdated();
90004d08:	4618      	mov	r0, r3
90004d0a:	9301      	str	r3, [sp, #4]
90004d0c:	4788      	blx	r1
90004d0e:	9b01      	ldr	r3, [sp, #4]
90004d10:	e73d      	b.n	90004b8e <_ZN24screen_main_menuViewBaseC1Ev+0x2a6>
90004d12:	4650      	mov	r0, sl
90004d14:	4790      	blx	r2
90004d16:	e7cd      	b.n	90004cb4 <_ZN24screen_main_menuViewBaseC1Ev+0x3cc>
90004d18:	4658      	mov	r0, fp
90004d1a:	4790      	blx	r2
90004d1c:	e771      	b.n	90004c02 <_ZN24screen_main_menuViewBaseC1Ev+0x31a>
90004d1e:	bf00      	nop
90004d20:	011000a0 	.word	0x011000a0

90004d24 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004d24:	b530      	push	{r4, r5, lr}
90004d26:	b085      	sub	sp, #20
90004d28:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
90004d2a:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90004d2c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004d2e:	466d      	mov	r5, sp
90004d30:	4601      	mov	r1, r0
        rect.width = width;
90004d32:	8102      	strh	r2, [r0, #8]
90004d34:	343c      	adds	r4, #60	; 0x3c
90004d36:	4628      	mov	r0, r5
90004d38:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d3c:	4798      	blx	r3
90004d3e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d42:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004d46:	b005      	add	sp, #20
90004d48:	bd30      	pop	{r4, r5, pc}
90004d4a:	bf00      	nop

90004d4c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90004d4c:	b530      	push	{r4, r5, lr}
90004d4e:	b085      	sub	sp, #20
90004d50:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90004d52:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90004d54:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004d56:	466d      	mov	r5, sp
90004d58:	4601      	mov	r1, r0
        rect.height = height;
90004d5a:	8142      	strh	r2, [r0, #10]
90004d5c:	343c      	adds	r4, #60	; 0x3c
90004d5e:	4628      	mov	r0, r5
90004d60:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d64:	4798      	blx	r3
90004d66:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d6a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004d6e:	b005      	add	sp, #20
90004d70:	bd30      	pop	{r4, r5, pc}
90004d72:	bf00      	nop

90004d74 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90004d74:	2200      	movs	r2, #0
90004d76:	6002      	str	r2, [r0, #0]
90004d78:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90004d7a:	4770      	bx	lr

90004d7c <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004d7c:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
90004d80:	4770      	bx	lr
90004d82:	bf00      	nop

90004d84 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90004d84:	2000      	movs	r0, #0
90004d86:	4770      	bx	lr

90004d88 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90004d88:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90004d8c:	b112      	cbz	r2, 90004d94 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90004d8e:	6803      	ldr	r3, [r0, #0]
90004d90:	695b      	ldr	r3, [r3, #20]
90004d92:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90004d94:	4770      	bx	lr
90004d96:	bf00      	nop

90004d98 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004d98:	2200      	movs	r2, #0
90004d9a:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90004d9e:	6082      	str	r2, [r0, #8]
90004da0:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90004da4:	4770      	bx	lr
90004da6:	bf00      	nop

90004da8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90004da8:	6c80      	ldr	r0, [r0, #72]	; 0x48
90004daa:	4770      	bx	lr

90004dac <_ZN25screen_snake_gameViewBase16game_snake_startEv>:
     * Virtual Action Handlers
     */
    virtual void game_snake_start()
    {
        // Override and implement this function in screen_snake_game
    }
90004dac:	4770      	bx	lr
90004dae:	bf00      	nop

90004db0 <_ZN25screen_snake_gameViewBase19change_direction_upEv>:
    virtual void change_direction_up()
    {
        // Override and implement this function in screen_snake_game
    }
90004db0:	4770      	bx	lr
90004db2:	bf00      	nop

90004db4 <_ZN25screen_snake_gameViewBase21change_direction_leftEv>:
    virtual void change_direction_left()
    {
        // Override and implement this function in screen_snake_game
    }
90004db4:	4770      	bx	lr
90004db6:	bf00      	nop

90004db8 <_ZN25screen_snake_gameViewBase21change_direction_downEv>:
    virtual void change_direction_down()
    {
        // Override and implement this function in screen_snake_game
    }
90004db8:	4770      	bx	lr
90004dba:	bf00      	nop

90004dbc <_ZN25screen_snake_gameViewBase22change_direction_rightEv>:
    virtual void change_direction_right()
    {
        // Override and implement this function in screen_snake_game
    }
90004dbc:	4770      	bx	lr
90004dbe:	bf00      	nop

90004dc0 <_ZN25screen_snake_gameViewBaseD1Ev>:
}

screen_snake_gameViewBase::~screen_snake_gameViewBase()
{

}
90004dc0:	4770      	bx	lr
90004dc2:	bf00      	nop

90004dc4 <_ZN25screen_snake_gameViewBase11setupScreenEv>:

void screen_snake_gameViewBase::setupScreen()
{

}
90004dc4:	4770      	bx	lr
90004dc6:	bf00      	nop

90004dc8 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004dc8:	4770      	bx	lr
90004dca:	bf00      	nop

90004dcc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90004dcc:	4770      	bx	lr
90004dce:	bf00      	nop

90004dd0 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004dd0:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004dd2:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004dd4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004dd6:	6844      	ldr	r4, [r0, #4]
90004dd8:	f012 0f01 	tst.w	r2, #1
90004ddc:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004de0:	d103      	bne.n	90004dea <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
90004de2:	689b      	ldr	r3, [r3, #8]
    }
90004de4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004de8:	4718      	bx	r3
90004dea:	ea4f 0c62 	mov.w	ip, r2, asr #1
90004dee:	689b      	ldr	r3, [r3, #8]
90004df0:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90004df4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004df8:	58d3      	ldr	r3, [r2, r3]
90004dfa:	4718      	bx	r3

90004dfc <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004dfc:	6843      	ldr	r3, [r0, #4]
90004dfe:	b13b      	cbz	r3, 90004e10 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004e00:	6883      	ldr	r3, [r0, #8]
90004e02:	b10b      	cbz	r3, 90004e08 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004e04:	2001      	movs	r0, #1
    }
90004e06:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004e08:	68c0      	ldr	r0, [r0, #12]
90004e0a:	f000 0001 	and.w	r0, r0, #1
90004e0e:	4770      	bx	lr
90004e10:	4618      	mov	r0, r3
90004e12:	4770      	bx	lr

90004e14 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90004e14:	b510      	push	{r4, lr}
90004e16:	4604      	mov	r4, r0
90004e18:	214c      	movs	r1, #76	; 0x4c
90004e1a:	f024 fbe3 	bl	900295e4 <_ZdlPvj>
90004e1e:	4620      	mov	r0, r4
90004e20:	bd10      	pop	{r4, pc}
90004e22:	bf00      	nop

90004e24 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004e24:	b510      	push	{r4, lr}
90004e26:	4604      	mov	r4, r0
90004e28:	2110      	movs	r1, #16
90004e2a:	f024 fbdb 	bl	900295e4 <_ZdlPvj>
90004e2e:	4620      	mov	r0, r4
90004e30:	bd10      	pop	{r4, pc}
90004e32:	bf00      	nop

90004e34 <_ZN25screen_snake_gameViewBaseD0Ev>:
screen_snake_gameViewBase::~screen_snake_gameViewBase()
90004e34:	b510      	push	{r4, lr}
90004e36:	4604      	mov	r4, r0
}
90004e38:	f44f 6181 	mov.w	r1, #1032	; 0x408
90004e3c:	f024 fbd2 	bl	900295e4 <_ZdlPvj>
90004e40:	4620      	mov	r0, r4
90004e42:	bd10      	pop	{r4, pc}

90004e44 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_snake_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_snake_start)
90004e44:	f500 73da 	add.w	r3, r0, #436	; 0x1b4
90004e48:	4299      	cmp	r1, r3
{
90004e4a:	b570      	push	{r4, r5, r6, lr}
90004e4c:	4604      	mov	r4, r0
90004e4e:	460d      	mov	r5, r1
    if (&src == &btn_snake_start)
90004e50:	d035      	beq.n	90004ebe <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x7a>
        //intr_game_snake_start
        //When btn_snake_start clicked call virtual function
        //Call game_snake_start
        game_snake_start();
    }
    if (&src == &btn_back)
90004e52:	f504 7336 	add.w	r3, r4, #728	; 0x2d8
90004e56:	429d      	cmp	r5, r3
90004e58:	d038      	beq.n	90004ecc <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x88>
        //intr_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
    if (&src == &btn_up)
90004e5a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
90004e5e:	429d      	cmp	r5, r3
90004e60:	d025      	beq.n	90004eae <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x6a>
        //intr_btn_up
        //When btn_up clicked call virtual function
        //Call change_direction_up
        change_direction_up();
    }
    if (&src == &btn_left)
90004e62:	f104 0398 	add.w	r3, r4, #152	; 0x98
90004e66:	429d      	cmp	r5, r3
90004e68:	d019      	beq.n	90004e9e <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x5a>
        //intr_btn_left
        //When btn_left clicked call virtual function
        //Call change_direction_left
        change_direction_left();
    }
    if (&src == &btn_down)
90004e6a:	f504 7388 	add.w	r3, r4, #272	; 0x110
90004e6e:	429d      	cmp	r5, r3
90004e70:	d00d      	beq.n	90004e8e <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4a>
        //intr_btn_down
        //When btn_down clicked call virtual function
        //Call change_direction_down
        change_direction_down();
    }
    if (&src == &btn_right)
90004e72:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
90004e76:	429d      	cmp	r5, r3
90004e78:	d000      	beq.n	90004e7c <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
        //intr_btn_right
        //When btn_right clicked call virtual function
        //Call change_direction_right
        change_direction_right();
    }
}
90004e7a:	bd70      	pop	{r4, r5, r6, pc}
        change_direction_right();
90004e7c:	6823      	ldr	r3, [r4, #0]
90004e7e:	4a16      	ldr	r2, [pc, #88]	; (90004ed8 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x94>)
90004e80:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90004e82:	4293      	cmp	r3, r2
90004e84:	d0f9      	beq.n	90004e7a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
90004e86:	4620      	mov	r0, r4
}
90004e88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        change_direction_right();
90004e8c:	4718      	bx	r3
        change_direction_down();
90004e8e:	6823      	ldr	r3, [r4, #0]
90004e90:	4a12      	ldr	r2, [pc, #72]	; (90004edc <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x98>)
90004e92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90004e94:	4293      	cmp	r3, r2
90004e96:	d0ec      	beq.n	90004e72 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
90004e98:	4620      	mov	r0, r4
90004e9a:	4798      	blx	r3
90004e9c:	e7e9      	b.n	90004e72 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
        change_direction_left();
90004e9e:	6823      	ldr	r3, [r4, #0]
90004ea0:	4a0f      	ldr	r2, [pc, #60]	; (90004ee0 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x9c>)
90004ea2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004ea4:	4293      	cmp	r3, r2
90004ea6:	d0e0      	beq.n	90004e6a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
90004ea8:	4620      	mov	r0, r4
90004eaa:	4798      	blx	r3
90004eac:	e7dd      	b.n	90004e6a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
        change_direction_up();
90004eae:	6823      	ldr	r3, [r4, #0]
90004eb0:	4a0c      	ldr	r2, [pc, #48]	; (90004ee4 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa0>)
90004eb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004eb4:	4293      	cmp	r3, r2
90004eb6:	d0d4      	beq.n	90004e62 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
90004eb8:	4620      	mov	r0, r4
90004eba:	4798      	blx	r3
90004ebc:	e7d1      	b.n	90004e62 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
        game_snake_start();
90004ebe:	6803      	ldr	r3, [r0, #0]
90004ec0:	4a09      	ldr	r2, [pc, #36]	; (90004ee8 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa4>)
90004ec2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004ec4:	4293      	cmp	r3, r2
90004ec6:	d0c4      	beq.n	90004e52 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
90004ec8:	4798      	blx	r3
90004eca:	e7c2      	b.n	90004e52 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004ecc:	f013 fa4c 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_main_menuScreenNoTransition();
90004ed0:	f7ff f992 	bl	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90004ed4:	e7c1      	b.n	90004e5a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
90004ed6:	bf00      	nop
90004ed8:	90004dbd 	.word	0x90004dbd
90004edc:	90004db9 	.word	0x90004db9
90004ee0:	90004db5 	.word	0x90004db5
90004ee4:	90004db1 	.word	0x90004db1
90004ee8:	90004dad 	.word	0x90004dad

90004eec <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004eec:	4b1b      	ldr	r3, [pc, #108]	; (90004f5c <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004eee:	6802      	ldr	r2, [r0, #0]
90004ef0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90004ef2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004ef4:	6b55      	ldr	r5, [r2, #52]	; 0x34
90004ef6:	b323      	cbz	r3, 90004f42 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90004ef8:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90004efa:	4919      	ldr	r1, [pc, #100]	; (90004f60 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004efc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90004efe:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004f00:	8809      	ldrh	r1, [r1, #0]
90004f02:	4291      	cmp	r1, r2
90004f04:	d923      	bls.n	90004f4e <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90004f06:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004f0a:	4b16      	ldr	r3, [pc, #88]	; (90004f64 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90004f0c:	681b      	ldr	r3, [r3, #0]
90004f0e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004f12:	4a15      	ldr	r2, [pc, #84]	; (90004f68 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004f14:	6803      	ldr	r3, [r0, #0]
90004f16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004f18:	4293      	cmp	r3, r2
90004f1a:	d107      	bne.n	90004f2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90004f1c:	88c0      	ldrh	r0, [r0, #6]
90004f1e:	4b13      	ldr	r3, [pc, #76]	; (90004f6c <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004f20:	1a31      	subs	r1, r6, r0
90004f22:	429d      	cmp	r5, r3
90004f24:	b209      	sxth	r1, r1
90004f26:	d107      	bne.n	90004f38 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90004f28:	80e1      	strh	r1, [r4, #6]
    }
90004f2a:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004f2c:	4798      	blx	r3
90004f2e:	4b0f      	ldr	r3, [pc, #60]	; (90004f6c <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004f30:	1a31      	subs	r1, r6, r0
90004f32:	429d      	cmp	r5, r3
90004f34:	b209      	sxth	r1, r1
90004f36:	d0f7      	beq.n	90004f28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90004f38:	4620      	mov	r0, r4
90004f3a:	462b      	mov	r3, r5
    }
90004f3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004f40:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004f42:	4b0b      	ldr	r3, [pc, #44]	; (90004f70 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90004f44:	216c      	movs	r1, #108	; 0x6c
90004f46:	4a0b      	ldr	r2, [pc, #44]	; (90004f74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004f48:	480b      	ldr	r0, [pc, #44]	; (90004f78 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004f4a:	f024 fb79 	bl	90029640 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004f4e:	4b0b      	ldr	r3, [pc, #44]	; (90004f7c <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90004f50:	216d      	movs	r1, #109	; 0x6d
90004f52:	4a08      	ldr	r2, [pc, #32]	; (90004f74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004f54:	4808      	ldr	r0, [pc, #32]	; (90004f78 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004f56:	f024 fb73 	bl	90029640 <__assert_func>
90004f5a:	bf00      	nop
90004f5c:	24039b24 	.word	0x24039b24
90004f60:	24039b28 	.word	0x24039b28
90004f64:	24039b2c 	.word	0x24039b2c
90004f68:	900035c1 	.word	0x900035c1
90004f6c:	90002291 	.word	0x90002291
90004f70:	9002cd70 	.word	0x9002cd70
90004f74:	9002cdb4 	.word	0x9002cdb4
90004f78:	9002cdf0 	.word	0x9002cdf0
90004f7c:	9002ce38 	.word	0x9002ce38

90004f80 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004f80:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004f82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90004f86:	4f25      	ldr	r7, [pc, #148]	; (9000501c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
90004f88:	4605      	mov	r5, r0
        setX(x);
90004f8a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004f8c:	4690      	mov	r8, r2
90004f8e:	42be      	cmp	r6, r7
90004f90:	d125      	bne.n	90004fde <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
90004f92:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
90004f94:	80a9      	strh	r1, [r5, #4]
90004f96:	4922      	ldr	r1, [pc, #136]	; (90005020 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004f98:	428c      	cmp	r4, r1
90004f9a:	d126      	bne.n	90004fea <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004f9c:	4921      	ldr	r1, [pc, #132]	; (90005024 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004f9e:	fa1f f888 	uxth.w	r8, r8
90004fa2:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90004fa4:	680b      	ldr	r3, [r1, #0]
90004fa6:	2b00      	cmp	r3, #0
90004fa8:	d032      	beq.n	90005010 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
90004faa:	491f      	ldr	r1, [pc, #124]	; (90005028 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90004fac:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004fae:	8809      	ldrh	r1, [r1, #0]
90004fb0:	4291      	cmp	r1, r2
90004fb2:	d927      	bls.n	90005004 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
90004fb4:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004fb8:	4b1c      	ldr	r3, [pc, #112]	; (9000502c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
90004fba:	681b      	ldr	r3, [r3, #0]
90004fbc:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004fc0:	4a1b      	ldr	r2, [pc, #108]	; (90005030 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90004fc2:	6803      	ldr	r3, [r0, #0]
90004fc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004fc6:	4293      	cmp	r3, r2
90004fc8:	d11a      	bne.n	90005000 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
90004fca:	88c0      	ldrh	r0, [r0, #6]
90004fcc:	4b19      	ldr	r3, [pc, #100]	; (90005034 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004fce:	eba8 0200 	sub.w	r2, r8, r0
90004fd2:	429e      	cmp	r6, r3
90004fd4:	b211      	sxth	r1, r2
90004fd6:	d10e      	bne.n	90004ff6 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
90004fd8:	80e9      	strh	r1, [r5, #6]
    }
90004fda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
90004fde:	47b0      	blx	r6
        setBaselineY(baselineY);
90004fe0:	682b      	ldr	r3, [r5, #0]
90004fe2:	490f      	ldr	r1, [pc, #60]	; (90005020 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004fe4:	6e5c      	ldr	r4, [r3, #100]	; 0x64
90004fe6:	428c      	cmp	r4, r1
90004fe8:	d0d8      	beq.n	90004f9c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
90004fea:	4641      	mov	r1, r8
90004fec:	4628      	mov	r0, r5
90004fee:	4623      	mov	r3, r4
    }
90004ff0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
90004ff4:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004ff6:	4628      	mov	r0, r5
90004ff8:	4633      	mov	r3, r6
    }
90004ffa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004ffe:	4718      	bx	r3
90005000:	4798      	blx	r3
90005002:	e7e3      	b.n	90004fcc <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005004:	4b0c      	ldr	r3, [pc, #48]	; (90005038 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005006:	216d      	movs	r1, #109	; 0x6d
90005008:	4a0c      	ldr	r2, [pc, #48]	; (9000503c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000500a:	480d      	ldr	r0, [pc, #52]	; (90005040 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
9000500c:	f024 fb18 	bl	90029640 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005010:	4b0c      	ldr	r3, [pc, #48]	; (90005044 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
90005012:	216c      	movs	r1, #108	; 0x6c
90005014:	4a09      	ldr	r2, [pc, #36]	; (9000503c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90005016:	480a      	ldr	r0, [pc, #40]	; (90005040 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90005018:	f024 fb12 	bl	90029640 <__assert_func>
9000501c:	9000228d 	.word	0x9000228d
90005020:	90004eed 	.word	0x90004eed
90005024:	24039b24 	.word	0x24039b24
90005028:	24039b28 	.word	0x24039b28
9000502c:	24039b2c 	.word	0x24039b2c
90005030:	900035c1 	.word	0x900035c1
90005034:	90002291 	.word	0x90002291
90005038:	9002ce38 	.word	0x9002ce38
9000503c:	9002cdb4 	.word	0x9002cdb4
90005040:	9002cdf0 	.word	0x9002cdf0
90005044:	9002cd70 	.word	0x9002cd70

90005048 <_ZN25screen_snake_gameViewBaseC1Ev>:
screen_snake_gameViewBase::screen_snake_gameViewBase() :
90005048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000504c:	ed2d 8b04 	vpush	{d8-d9}
90005050:	b093      	sub	sp, #76	; 0x4c
90005052:	4604      	mov	r4, r0
90005054:	f014 fdc0 	bl	90019bd8 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90005058:	4be0      	ldr	r3, [pc, #896]	; (900053dc <_ZN25screen_snake_gameViewBaseC1Ev+0x394>)
9000505a:	2500      	movs	r5, #0
          touchable(false),
9000505c:	f44f 7a80 	mov.w	sl, #256	; 0x100
90005060:	6023      	str	r3, [r4, #0]
        : Widget(), alpha(255), color(0)
90005062:	26ff      	movs	r6, #255	; 0xff
90005064:	4bde      	ldr	r3, [pc, #888]	; (900053e0 <_ZN25screen_snake_gameViewBaseC1Ev+0x398>)
90005066:	f104 096c 	add.w	r9, r4, #108	; 0x6c
9000506a:	f104 0798 	add.w	r7, r4, #152	; 0x98
9000506e:	a910      	add	r1, sp, #64	; 0x40
90005070:	6423      	str	r3, [r4, #64]	; 0x40
90005072:	f64f 73ff 	movw	r3, #65535	; 0xffff
90005076:	4648      	mov	r0, r9
90005078:	f8a4 a064 	strh.w	sl, [r4, #100]	; 0x64
9000507c:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
90005080:	f104 0bd4 	add.w	fp, r4, #212	; 0xd4
90005084:	63e5      	str	r5, [r4, #60]	; 0x3c
90005086:	f04f 38ff 	mov.w	r8, #4294967295
        : x(0), y(0), width(0), height(0)
9000508a:	6465      	str	r5, [r4, #68]	; 0x44
          cachedAbsX(0),
9000508c:	6625      	str	r5, [r4, #96]	; 0x60
        : color(col)
9000508e:	66a5      	str	r5, [r4, #104]	; 0x68
90005090:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
        : x(0), y(0), width(0), height(0)
90005094:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
90005098:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
9000509c:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
900050a0:	f00f fc38 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900050a4:	f504 7288 	add.w	r2, r4, #272	; 0x110
900050a8:	4638      	mov	r0, r7
900050aa:	9203      	str	r2, [sp, #12]
900050ac:	f010 fc46 	bl	9001593c <_ZN8touchgfx14ButtonWithIconC1Ev>
900050b0:	f504 71a6 	add.w	r1, r4, #332	; 0x14c
900050b4:	4658      	mov	r0, fp
900050b6:	9105      	str	r1, [sp, #20]
900050b8:	f010 fc40 	bl	9001593c <_ZN8touchgfx14ButtonWithIconC1Ev>
900050bc:	eddd 8a03 	vldr	s17, [sp, #12]
900050c0:	f504 72da 	add.w	r2, r4, #436	; 0x1b4
900050c4:	ee18 0a90 	vmov	r0, s17
900050c8:	9204      	str	r2, [sp, #16]
900050ca:	f010 fc37 	bl	9001593c <_ZN8touchgfx14ButtonWithIconC1Ev>
900050ce:	ed9d 8a05 	vldr	s16, [sp, #20]
900050d2:	ee18 0a10 	vmov	r0, s16
900050d6:	f010 fc31 	bl	9001593c <_ZN8touchgfx14ButtonWithIconC1Ev>
900050da:	4bc1      	ldr	r3, [pc, #772]	; (900053e0 <_ZN25screen_snake_gameViewBaseC1Ev+0x398>)
900050dc:	ed9d 9a04 	vldr	s18, [sp, #16]
          touchable(false),
900050e0:	f8a4 a1ac 	strh.w	sl, [r4, #428]	; 0x1ac
900050e4:	f884 61ae 	strb.w	r6, [r4, #430]	; 0x1ae
900050e8:	ee19 0a10 	vmov	r0, s18
          cachedAbsX(0),
900050ec:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
        : color(col)
900050f0:	f8c4 51b0 	str.w	r5, [r4, #432]	; 0x1b0
        : x(0), y(0), width(0), height(0)
900050f4:	e9c4 3562 	strd	r3, r5, [r4, #392]	; 0x188
900050f8:	f504 7336 	add.w	r3, r4, #728	; 0x2d8
900050fc:	e9c4 5564 	strd	r5, r5, [r4, #400]	; 0x190
          parent(0),
90005100:	e9c4 5566 	strd	r5, r5, [r4, #408]	; 0x198
          nextDrawChainElement(0),
90005104:	e9c4 5568 	strd	r5, r5, [r4, #416]	; 0x1a0
90005108:	9305      	str	r3, [sp, #20]
9000510a:	f010 fd75 	bl	90015bf8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : typedTextId(id)
9000510e:	4ab5      	ldr	r2, [pc, #724]	; (900053e4 <_ZN25screen_snake_gameViewBaseC1Ev+0x39c>)
90005110:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005114:	49b4      	ldr	r1, [pc, #720]	; (900053e8 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a0>)
        : TextAreaWithWildcardBase(), wc1(0)
90005116:	48b5      	ldr	r0, [pc, #724]	; (900053ec <_ZN25screen_snake_gameViewBaseC1Ev+0x3a4>)
90005118:	f8c4 11fc 	str.w	r1, [r4, #508]	; 0x1fc
9000511c:	f8c4 2224 	str.w	r2, [r4, #548]	; 0x224
90005120:	f8a4 3228 	strh.w	r3, [r4, #552]	; 0x228
90005124:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
          touchable(false),
90005128:	f8a4 a220 	strh.w	sl, [r4, #544]	; 0x220
9000512c:	f8c4 6232 	str.w	r6, [r4, #562]	; 0x232
90005130:	f8a4 a268 	strh.w	sl, [r4, #616]	; 0x268
90005134:	f8a4 8270 	strh.w	r8, [r4, #624]	; 0x270
90005138:	f8c4 627a 	str.w	r6, [r4, #634]	; 0x27a
        : color(col)
9000513c:	f8c4 522c 	str.w	r5, [r4, #556]	; 0x22c
90005140:	f8a4 5230 	strh.w	r5, [r4, #560]	; 0x230
              text(0)
90005144:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
90005148:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000514c:	f8a4 5278 	strh.w	r5, [r4, #632]	; 0x278
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005150:	e9c4 588e 	strd	r5, r8, [r4, #568]	; 0x238
        : x(0), y(0), width(0), height(0)
90005154:	e9c4 5580 	strd	r5, r5, [r4, #512]	; 0x200
90005158:	e9c4 5582 	strd	r5, r5, [r4, #520]	; 0x208
          nextSibling(0),
9000515c:	e9c4 5584 	strd	r5, r5, [r4, #528]	; 0x210
          cachedAbsX(0),
90005160:	e9c4 5586 	strd	r5, r5, [r4, #536]	; 0x218
90005164:	e9c4 5592 	strd	r5, r5, [r4, #584]	; 0x248
90005168:	e9c4 5594 	strd	r5, r5, [r4, #592]	; 0x250
          nextSibling(0),
9000516c:	e9c4 5596 	strd	r5, r5, [r4, #600]	; 0x258
          cachedAbsX(0),
90005170:	e9c4 5598 	strd	r5, r5, [r4, #608]	; 0x260
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005174:	e9c4 58a0 	strd	r5, r8, [r4, #640]	; 0x280
90005178:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
          touchable(false),
9000517c:	f8a4 a2b4 	strh.w	sl, [r4, #692]	; 0x2b4
90005180:	f8c4 1290 	str.w	r1, [r4, #656]	; 0x290
90005184:	f8c4 22b8 	str.w	r2, [r4, #696]	; 0x2b8
90005188:	f8a4 32bc 	strh.w	r3, [r4, #700]	; 0x2bc
9000518c:	f8c4 62c6 	str.w	r6, [r4, #710]	; 0x2c6
90005190:	9805      	ldr	r0, [sp, #20]
              text(0)
90005192:	f8c4 5288 	str.w	r5, [r4, #648]	; 0x288
90005196:	f8c4 528c 	str.w	r5, [r4, #652]	; 0x28c
        : color(col)
9000519a:	f8c4 52c0 	str.w	r5, [r4, #704]	; 0x2c0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000519e:	f8a4 52c4 	strh.w	r5, [r4, #708]	; 0x2c4
              text(0)
900051a2:	f8c4 52d4 	str.w	r5, [r4, #724]	; 0x2d4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900051a6:	e9c4 58b3 	strd	r5, r8, [r4, #716]	; 0x2cc
        : x(0), y(0), width(0), height(0)
900051aa:	e9c4 55a5 	strd	r5, r5, [r4, #660]	; 0x294
900051ae:	e9c4 55a7 	strd	r5, r5, [r4, #668]	; 0x29c
          nextSibling(0),
900051b2:	e9c4 55a9 	strd	r5, r5, [r4, #676]	; 0x2a4
          cachedAbsX(0),
900051b6:	e9c4 55ab 	strd	r5, r5, [r4, #684]	; 0x2ac
900051ba:	f010 fbbf 	bl	9001593c <_ZN8touchgfx14ButtonWithIconC1Ev>
900051be:	f64f 73ff 	movw	r3, #65535	; 0xffff
900051c2:	4a88      	ldr	r2, [pc, #544]	; (900053e4 <_ZN25screen_snake_gameViewBaseC1Ev+0x39c>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900051c4:	4988      	ldr	r1, [pc, #544]	; (900053e8 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a0>)
900051c6:	f8a4 3340 	strh.w	r3, [r4, #832]	; 0x340
900051ca:	f8a4 3388 	strh.w	r3, [r4, #904]	; 0x388
900051ce:	4b87      	ldr	r3, [pc, #540]	; (900053ec <_ZN25screen_snake_gameViewBaseC1Ev+0x3a4>)
900051d0:	f8c4 233c 	str.w	r2, [r4, #828]	; 0x33c
900051d4:	f8c4 2384 	str.w	r2, [r4, #900]	; 0x384
          touchable(false),
900051d8:	f8a4 a338 	strh.w	sl, [r4, #824]	; 0x338
900051dc:	f8a4 a380 	strh.w	sl, [r4, #896]	; 0x380
900051e0:	f04f 0a01 	mov.w	sl, #1
900051e4:	f8c4 634a 	str.w	r6, [r4, #842]	; 0x34a
900051e8:	f8c4 6392 	str.w	r6, [r4, #914]	; 0x392
900051ec:	1d26      	adds	r6, r4, #4
          cachedAbsX(0),
900051ee:	f8c4 5334 	str.w	r5, [r4, #820]	; 0x334
        : color(col)
900051f2:	f8c4 5344 	str.w	r5, [r4, #836]	; 0x344
900051f6:	4630      	mov	r0, r6
900051f8:	f8a4 5348 	strh.w	r5, [r4, #840]	; 0x348
              text(0)
900051fc:	f8c4 5358 	str.w	r5, [r4, #856]	; 0x358
90005200:	f8c4 538c 	str.w	r5, [r4, #908]	; 0x38c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005204:	f8a4 5390 	strh.w	r5, [r4, #912]	; 0x390
        : x(0), y(0), width(0), height(0)
90005208:	e9c4 15c5 	strd	r1, r5, [r4, #788]	; 0x314
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000520c:	e9c4 58d4 	strd	r5, r8, [r4, #848]	; 0x350
        : x(0), y(0), width(0), height(0)
90005210:	e9c4 55c7 	strd	r5, r5, [r4, #796]	; 0x31c
          parent(0),
90005214:	e9c4 55c9 	strd	r5, r5, [r4, #804]	; 0x324
          nextDrawChainElement(0),
90005218:	e9c4 55cb 	strd	r5, r5, [r4, #812]	; 0x32c
9000521c:	e9c4 55d8 	strd	r5, r5, [r4, #864]	; 0x360
90005220:	e9c4 55da 	strd	r5, r5, [r4, #872]	; 0x368
          nextSibling(0),
90005224:	e9c4 55dc 	strd	r5, r5, [r4, #880]	; 0x370
          cachedAbsX(0),
90005228:	e9c4 55de 	strd	r5, r5, [r4, #888]	; 0x378
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000522c:	e9c4 58e6 	strd	r5, r8, [r4, #920]	; 0x398
90005230:	f8c4 335c 	str.w	r3, [r4, #860]	; 0x35c
90005234:	f104 0140 	add.w	r1, r4, #64	; 0x40
        : pobject(pObject), pmemfun(pmemfun_1)
90005238:	4b6d      	ldr	r3, [pc, #436]	; (900053f0 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a8>)
        rect.x = x;
9000523a:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 90005410 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c8>
9000523e:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
90005242:	4b6c      	ldr	r3, [pc, #432]	; (900053f4 <_ZN25screen_snake_gameViewBaseC1Ev+0x3ac>)
90005244:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
90005248:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
        color = newColor;
9000524c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
90005250:	f8c4 43fc 	str.w	r4, [r4, #1020]	; 0x3fc
90005254:	66a3      	str	r3, [r4, #104]	; 0x68
90005256:	f8c4 5404 	str.w	r5, [r4, #1028]	; 0x404
9000525a:	6465      	str	r5, [r4, #68]	; 0x44
9000525c:	e9c4 55e8 	strd	r5, r5, [r4, #928]	; 0x3a0
90005260:	f00d fc2a 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005264:	2304      	movs	r3, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90005266:	4648      	mov	r0, r9
90005268:	a910      	add	r1, sp, #64	; 0x40
9000526a:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
9000526e:	f010 fb8c 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005272:	4648      	mov	r0, r9
90005274:	4629      	mov	r1, r5
90005276:	e9c4 581c 	strd	r5, r8, [r4, #112]	; 0x70
9000527a:	f00f fb06 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000527e:	4649      	mov	r1, r9
90005280:	4630      	mov	r0, r6
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
90005282:	f06f 1906 	mvn.w	r9, #393222	; 0x60006
90005286:	f00d fc17 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
9000528a:	ab10      	add	r3, sp, #64	; 0x40
9000528c:	aa0e      	add	r2, sp, #56	; 0x38
9000528e:	4638      	mov	r0, r7
90005290:	9300      	str	r3, [sp, #0]
90005292:	a90d      	add	r1, sp, #52	; 0x34
90005294:	4b58      	ldr	r3, [pc, #352]	; (900053f8 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b0>)
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90005296:	f04f 085a 	mov.w	r8, #90	; 0x5a
9000529a:	f8ad a038 	strh.w	sl, [sp, #56]	; 0x38
9000529e:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
    btn_left.setAction(buttonCallback);
900052a2:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
900052a6:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
900052aa:	9303      	str	r3, [sp, #12]
900052ac:	2308      	movs	r3, #8
900052ae:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
900052b2:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
900052b6:	ab0f      	add	r3, sp, #60	; 0x3c
900052b8:	f010 faaa 	bl	90015810 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900052bc:	4639      	mov	r1, r7
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
900052be:	9f03      	ldr	r7, [sp, #12]
900052c0:	4630      	mov	r0, r6
900052c2:	f8c4 90d0 	str.w	r9, [r4, #208]	; 0xd0
900052c6:	f884 80ca 	strb.w	r8, [r4, #202]	; 0xca
900052ca:	f8c4 70c0 	str.w	r7, [r4, #192]	; 0xc0
900052ce:	f00d fbf3 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
900052d2:	ab10      	add	r3, sp, #64	; 0x40
900052d4:	aa0e      	add	r2, sp, #56	; 0x38
900052d6:	a90d      	add	r1, sp, #52	; 0x34
900052d8:	9300      	str	r3, [sp, #0]
900052da:	4658      	mov	r0, fp
900052dc:	4b47      	ldr	r3, [pc, #284]	; (900053fc <_ZN25screen_snake_gameViewBaseC1Ev+0x3b4>)
900052de:	f8ad a038 	strh.w	sl, [sp, #56]	; 0x38
900052e2:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
900052e6:	230a      	movs	r3, #10
900052e8:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
900052ec:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
900052f0:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
900052f4:	ab0f      	add	r3, sp, #60	; 0x3c
900052f6:	f010 fa8b 	bl	90015810 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900052fa:	4659      	mov	r1, fp
900052fc:	4630      	mov	r0, r6
900052fe:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
90005302:	f884 8106 	strb.w	r8, [r4, #262]	; 0x106
90005306:	f8c4 70fc 	str.w	r7, [r4, #252]	; 0xfc
9000530a:	9703      	str	r7, [sp, #12]
9000530c:	f00d fbd4 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
90005310:	a910      	add	r1, sp, #64	; 0x40
90005312:	4b3b      	ldr	r3, [pc, #236]	; (90005400 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b8>)
90005314:	2707      	movs	r7, #7
90005316:	aa0e      	add	r2, sp, #56	; 0x38
90005318:	9100      	str	r1, [sp, #0]
9000531a:	ee18 0a90 	vmov	r0, s17
9000531e:	a90d      	add	r1, sp, #52	; 0x34
90005320:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
90005324:	ab0f      	add	r3, sp, #60	; 0x3c
90005326:	f8ad a038 	strh.w	sl, [sp, #56]	; 0x38
9000532a:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
9000532e:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
90005332:	f8ad 7040 	strh.w	r7, [sp, #64]	; 0x40
90005336:	f010 fa6b 	bl	90015810 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
9000533a:	9b03      	ldr	r3, [sp, #12]
9000533c:	ee18 1a90 	vmov	r1, s17
90005340:	4630      	mov	r0, r6
90005342:	f8c4 9148 	str.w	r9, [r4, #328]	; 0x148
90005346:	f884 8142 	strb.w	r8, [r4, #322]	; 0x142
9000534a:	f8c4 3138 	str.w	r3, [r4, #312]	; 0x138
9000534e:	f00d fbb3 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90005352:	aa10      	add	r2, sp, #64	; 0x40
90005354:	4b2b      	ldr	r3, [pc, #172]	; (90005404 <_ZN25screen_snake_gameViewBaseC1Ev+0x3bc>)
90005356:	f10d 0c3c 	add.w	ip, sp, #60	; 0x3c
9000535a:	9200      	str	r2, [sp, #0]
9000535c:	a90d      	add	r1, sp, #52	; 0x34
9000535e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
90005362:	2309      	movs	r3, #9
90005364:	aa0e      	add	r2, sp, #56	; 0x38
90005366:	ee18 0a10 	vmov	r0, s16
9000536a:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
9000536e:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90005372:	4663      	mov	r3, ip
90005374:	f8ad a038 	strh.w	sl, [sp, #56]	; 0x38
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90005378:	f504 7afe 	add.w	sl, r4, #508	; 0x1fc
9000537c:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90005380:	f010 fa46 	bl	90015810 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005384:	9b03      	ldr	r3, [sp, #12]
90005386:	ee18 1a10 	vmov	r1, s16
9000538a:	4630      	mov	r0, r6
9000538c:	f8c4 9184 	str.w	r9, [r4, #388]	; 0x184
90005390:	f884 817e 	strb.w	r8, [r4, #382]	; 0x17e
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90005394:	f504 7924 	add.w	r9, r4, #656	; 0x290
90005398:	f8c4 3174 	str.w	r3, [r4, #372]	; 0x174
9000539c:	f504 7845 	add.w	r8, r4, #788	; 0x314
900053a0:	f00d fb8a 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900053a4:	f8df c06c 	ldr.w	ip, [pc, #108]	; 90005414 <_ZN25screen_snake_gameViewBaseC1Ev+0x3cc>
900053a8:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
900053ac:	f504 71c4 	add.w	r1, r4, #392	; 0x188
900053b0:	4630      	mov	r0, r6
900053b2:	e9c4 c363 	strd	ip, r3, [r4, #396]	; 0x18c
900053b6:	4b14      	ldr	r3, [pc, #80]	; (90005408 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c0>)
900053b8:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
900053bc:	f00d fb7c 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900053c0:	4b12      	ldr	r3, [pc, #72]	; (9000540c <_ZN25screen_snake_gameViewBaseC1Ev+0x3c4>)
    btn_snake_start.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
900053c2:	aa10      	add	r2, sp, #64	; 0x40
900053c4:	a90f      	add	r1, sp, #60	; 0x3c
900053c6:	f8c4 31b8 	str.w	r3, [r4, #440]	; 0x1b8
900053ca:	2302      	movs	r3, #2
900053cc:	ee19 0a10 	vmov	r0, s18
900053d0:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
900053d4:	2303      	movs	r3, #3
900053d6:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
900053da:	e01d      	b.n	90005418 <_ZN25screen_snake_gameViewBaseC1Ev+0x3d0>
900053dc:	9002cf64 	.word	0x9002cf64
900053e0:	9002db10 	.word	0x9002db10
900053e4:	9002c22c 	.word	0x9002c22c
900053e8:	9002da80 	.word	0x9002da80
900053ec:	9002cebc 	.word	0x9002cebc
900053f0:	9002cf4c 	.word	0x9002cf4c
900053f4:	90004e45 	.word	0x90004e45
900053f8:	00ac016a 	.word	0x00ac016a
900053fc:	0089018d 	.word	0x0089018d
90005400:	00d0018e 	.word	0x00d0018e
90005404:	00ac01b0 	.word	0x00ac01b0
90005408:	ffff0000 	.word	0xffff0000
9000540c:	006f0078 	.word	0x006f0078
90005410:	011001e0 	.word	0x011001e0
90005414:	001e0014 	.word	0x001e0014
90005418:	f010 f82b 	bl	90015472 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
9000541c:	4bc9      	ldr	r3, [pc, #804]	; (90005744 <_ZN25screen_snake_gameViewBaseC1Ev+0x6fc>)
class TypedText
9000541e:	f8a4 71ec 	strh.w	r7, [r4, #492]	; 0x1ec
90005422:	881b      	ldrh	r3, [r3, #0]
90005424:	42bb      	cmp	r3, r7
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005426:	4bc8      	ldr	r3, [pc, #800]	; (90005748 <_ZN25screen_snake_gameViewBaseC1Ev+0x700>)
90005428:	9306      	str	r3, [sp, #24]
9000542a:	d923      	bls.n	90005474 <_ZN25screen_snake_gameViewBaseC1Ev+0x42c>
9000542c:	681b      	ldr	r3, [r3, #0]
9000542e:	2b00      	cmp	r3, #0
90005430:	f000 8182 	beq.w	90005738 <_ZN25screen_snake_gameViewBaseC1Ev+0x6f0>
        return fonts[typedTexts[typedTextId].fontIdx];
90005434:	7b9a      	ldrb	r2, [r3, #14]
        return texts->getText(typedTextId);
90005436:	4639      	mov	r1, r7
        return fonts[typedTexts[typedTextId].fontIdx];
90005438:	4bc4      	ldr	r3, [pc, #784]	; (9000574c <_ZN25screen_snake_gameViewBaseC1Ev+0x704>)
9000543a:	681b      	ldr	r3, [r3, #0]
9000543c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005440:	4bc3      	ldr	r3, [pc, #780]	; (90005750 <_ZN25screen_snake_gameViewBaseC1Ev+0x708>)
90005442:	6818      	ldr	r0, [r3, #0]
90005444:	f7ff f900 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005448:	683a      	ldr	r2, [r7, #0]
9000544a:	4601      	mov	r1, r0
9000544c:	48c1      	ldr	r0, [pc, #772]	; (90005754 <_ZN25screen_snake_gameViewBaseC1Ev+0x70c>)
9000544e:	6b93      	ldr	r3, [r2, #56]	; 0x38
90005450:	4283      	cmp	r3, r0
90005452:	f040 816a 	bne.w	9000572a <_ZN25screen_snake_gameViewBaseC1Ev+0x6e2>
        return fontHeight;
90005456:	88bd      	ldrh	r5, [r7, #4]
90005458:	6c93      	ldr	r3, [r2, #72]	; 0x48
9000545a:	4638      	mov	r0, r7
9000545c:	9107      	str	r1, [sp, #28]
9000545e:	4798      	blx	r3
90005460:	fb15 f500 	smulbb	r5, r5, r0
90005464:	683b      	ldr	r3, [r7, #0]
90005466:	4638      	mov	r0, r7
90005468:	b2ad      	uxth	r5, r5
9000546a:	9907      	ldr	r1, [sp, #28]
9000546c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000546e:	4798      	blx	r3
90005470:	4405      	add	r5, r0
90005472:	b22d      	sxth	r5, r5
90005474:	4630      	mov	r0, r6
90005476:	f8a4 51fa 	strh.w	r5, [r4, #506]	; 0x1fa
        linespace = space;
9000547a:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
9000547c:	ad08      	add	r5, sp, #32
    lbl_high_score.setXY(178, 126);
9000547e:	f504 7b11 	add.w	fp, r4, #580	; 0x244
90005482:	e9dd 3103 	ldrd	r3, r1, [sp, #12]
90005486:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
        color = col;
9000548a:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
9000548e:	e9c4 337c 	strd	r3, r3, [r4, #496]	; 0x1f0
90005492:	f00d fb11 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005496:	4bb0      	ldr	r3, [pc, #704]	; (90005758 <_ZN25screen_snake_gameViewBaseC1Ev+0x710>)
90005498:	4651      	mov	r1, sl
9000549a:	4628      	mov	r0, r5
9000549c:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
        color = newColor;
900054a0:	4bae      	ldr	r3, [pc, #696]	; (9000575c <_ZN25screen_snake_gameViewBaseC1Ev+0x714>)
        linespace = space;
900054a2:	f8a4 7230 	strh.w	r7, [r4, #560]	; 0x230
        color = newColor;
900054a6:	f8c4 322c 	str.w	r3, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
900054aa:	f00f fcdd 	bl	90014e68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        : typedTextId(id)
900054ae:	4bac      	ldr	r3, [pc, #688]	; (90005760 <_ZN25screen_snake_gameViewBaseC1Ev+0x718>)
900054b0:	f10a 0c3c 	add.w	ip, sl, #60	; 0x3c
900054b4:	9310      	str	r3, [sp, #64]	; 0x40
900054b6:	2305      	movs	r3, #5
900054b8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
900054bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900054c0:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HGL4));
900054c4:	a910      	add	r1, sp, #64	; 0x40
900054c6:	4650      	mov	r0, sl
900054c8:	f00f ff76 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900054cc:	4651      	mov	r1, sl
900054ce:	4630      	mov	r0, r6
        visible = vis;
900054d0:	f884 7221 	strb.w	r7, [r4, #545]	; 0x221
900054d4:	f00d faf0 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
900054d8:	f04f 33ff 	mov.w	r3, #4294967295
        setX(x);
900054dc:	f8d4 2244 	ldr.w	r2, [r4, #580]	; 0x244
900054e0:	f8c4 3274 	str.w	r3, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
900054e4:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
900054e8:	4b9e      	ldr	r3, [pc, #632]	; (90005764 <_ZN25screen_snake_gameViewBaseC1Ev+0x71c>)
        rect.x = x;
900054ea:	499f      	ldr	r1, [pc, #636]	; (90005768 <_ZN25screen_snake_gameViewBaseC1Ev+0x720>)
900054ec:	429a      	cmp	r2, r3
        linespace = space;
900054ee:	f8a4 7278 	strh.w	r7, [r4, #632]	; 0x278
900054f2:	f8c4 1248 	str.w	r1, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
900054f6:	f040 8104 	bne.w	90005702 <_ZN25screen_snake_gameViewBaseC1Ev+0x6ba>
900054fa:	f04f 33ff 	mov.w	r3, #4294967295
900054fe:	f8c4 7288 	str.w	r7, [r4, #648]	; 0x288
90005502:	e9c4 73a0 	strd	r7, r3, [r4, #640]	; 0x280
    lbl_high_scoreBuffer[0] = 0;
90005506:	2700      	movs	r7, #0
    lbl_high_score.setWildcard(lbl_high_scoreBuffer);
90005508:	f504 726a 	add.w	r2, r4, #936	; 0x3a8
    lbl_high_score.resizeToCurrentText();
9000550c:	4658      	mov	r0, fp
    lbl_score_val.setPosition(426, 0, 54, 24);
9000550e:	f504 7a57 	add.w	sl, r4, #860	; 0x35c
        wc1 = value;
90005512:	f8c4 228c 	str.w	r2, [r4, #652]	; 0x28c
    lbl_high_scoreBuffer[0] = 0;
90005516:	f8a4 73a8 	strh.w	r7, [r4, #936]	; 0x3a8
    lbl_high_score.resizeToCurrentText();
9000551a:	f00f ff2d 	bl	90015378 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9000551e:	2204      	movs	r2, #4
90005520:	4b8f      	ldr	r3, [pc, #572]	; (90005760 <_ZN25screen_snake_gameViewBaseC1Ev+0x718>)
    lbl_high_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A6NY));
90005522:	a910      	add	r1, sp, #64	; 0x40
90005524:	4658      	mov	r0, fp
90005526:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
9000552a:	9310      	str	r3, [sp, #64]	; 0x40
9000552c:	f00f ff44 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005530:	4659      	mov	r1, fp
90005532:	4630      	mov	r0, r6
        visible = vis;
90005534:	f884 7269 	strb.w	r7, [r4, #617]	; 0x269
90005538:	f00d fabe 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
9000553c:	4b8b      	ldr	r3, [pc, #556]	; (9000576c <_ZN25screen_snake_gameViewBaseC1Ev+0x724>)
9000553e:	4649      	mov	r1, r9
90005540:	4628      	mov	r0, r5
90005542:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        color = newColor;
90005546:	4b8a      	ldr	r3, [pc, #552]	; (90005770 <_ZN25screen_snake_gameViewBaseC1Ev+0x728>)
        linespace = space;
90005548:	f8a4 72c4 	strh.w	r7, [r4, #708]	; 0x2c4
        color = newColor;
9000554c:	f8c4 32c0 	str.w	r3, [r4, #704]	; 0x2c0
        boundingArea = calculateBoundingArea();
90005550:	f00f fc8a 	bl	90014e68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005554:	4b82      	ldr	r3, [pc, #520]	; (90005760 <_ZN25screen_snake_gameViewBaseC1Ev+0x718>)
90005556:	2203      	movs	r2, #3
90005558:	9310      	str	r3, [sp, #64]	; 0x40
9000555a:	f109 033c 	add.w	r3, r9, #60	; 0x3c
9000555e:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
90005562:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005566:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_new_high_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H3L2));
9000556a:	4648      	mov	r0, r9
9000556c:	a910      	add	r1, sp, #64	; 0x40
9000556e:	f00f ff23 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005572:	4649      	mov	r1, r9
90005574:	4630      	mov	r0, r6
        visible = vis;
90005576:	f884 72b5 	strb.w	r7, [r4, #693]	; 0x2b5
9000557a:	f00d fa9d 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
9000557e:	a810      	add	r0, sp, #64	; 0x40
90005580:	f8dd 9014 	ldr.w	r9, [sp, #20]
90005584:	aa0f      	add	r2, sp, #60	; 0x3c
90005586:	9000      	str	r0, [sp, #0]
        rect.x = x;
90005588:	f04f 100c 	mov.w	r0, #786444	; 0xc000c
9000558c:	4613      	mov	r3, r2
9000558e:	a90d      	add	r1, sp, #52	; 0x34
90005590:	f8c4 02dc 	str.w	r0, [r4, #732]	; 0x2dc
90005594:	200b      	movs	r0, #11
90005596:	aa0e      	add	r2, sp, #56	; 0x38
90005598:	f8ad 7034 	strh.w	r7, [sp, #52]	; 0x34
9000559c:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
900055a0:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
900055a4:	2001      	movs	r0, #1
900055a6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
900055aa:	4648      	mov	r0, r9
900055ac:	f010 f930 	bl	90015810 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900055b0:	9a03      	ldr	r2, [sp, #12]
900055b2:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
900055b6:	4649      	mov	r1, r9
900055b8:	f8c4 2300 	str.w	r2, [r4, #768]	; 0x300
900055bc:	4630      	mov	r0, r6
900055be:	f8c4 3310 	str.w	r3, [r4, #784]	; 0x310
        visible = vis;
900055c2:	f884 72fd 	strb.w	r7, [r4, #765]	; 0x2fd
900055c6:	f00d fa77 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900055ca:	f44f 73b4 	mov.w	r3, #360	; 0x168
900055ce:	4641      	mov	r1, r8
900055d0:	4628      	mov	r0, r5
900055d2:	f8c4 3318 	str.w	r3, [r4, #792]	; 0x318
        color = newColor;
900055d6:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
900055da:	f8a4 7348 	strh.w	r7, [r4, #840]	; 0x348
        color = newColor;
900055de:	f8c4 3344 	str.w	r3, [r4, #836]	; 0x344
        boundingArea = calculateBoundingArea();
900055e2:	f00f fc41 	bl	90014e68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900055e6:	4b5e      	ldr	r3, [pc, #376]	; (90005760 <_ZN25screen_snake_gameViewBaseC1Ev+0x718>)
900055e8:	2202      	movs	r2, #2
900055ea:	9310      	str	r3, [sp, #64]	; 0x40
900055ec:	f108 033c 	add.w	r3, r8, #60	; 0x3c
900055f0:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
900055f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900055f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCGM));
900055fc:	a910      	add	r1, sp, #64	; 0x40
900055fe:	4640      	mov	r0, r8
90005600:	f00f feda 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
90005604:	235f      	movs	r3, #95	; 0x5f
90005606:	4641      	mov	r1, r8
90005608:	4630      	mov	r0, r6
9000560a:	f884 334a 	strb.w	r3, [r4, #842]	; 0x34a
9000560e:	f00d fa53 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005612:	f44f 72d5 	mov.w	r2, #426	; 0x1aa
        setX(x);
90005616:	f8d4 335c 	ldr.w	r3, [r4, #860]	; 0x35c
        setY(y);
9000561a:	4956      	ldr	r1, [pc, #344]	; (90005774 <_ZN25screen_snake_gameViewBaseC1Ev+0x72c>)
        rect.x = x;
9000561c:	f8c4 2360 	str.w	r2, [r4, #864]	; 0x360
        setWidth(width);
90005620:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90005622:	428a      	cmp	r2, r1
90005624:	d160      	bne.n	900056e8 <_ZN25screen_snake_gameViewBaseC1Ev+0x6a0>
        rect.width = width;
90005626:	2236      	movs	r2, #54	; 0x36
        boundingArea = calculateBoundingArea();
90005628:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9000562c:	4651      	mov	r1, sl
9000562e:	4628      	mov	r0, r5
90005630:	f8a4 2364 	strh.w	r2, [r4, #868]	; 0x364
90005634:	4798      	blx	r3
90005636:	f504 7366 	add.w	r3, r4, #920	; 0x398
9000563a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000563e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
90005642:	f8d4 335c 	ldr.w	r3, [r4, #860]	; 0x35c
90005646:	494c      	ldr	r1, [pc, #304]	; (90005778 <_ZN25screen_snake_gameViewBaseC1Ev+0x730>)
90005648:	6bda      	ldr	r2, [r3, #60]	; 0x3c
9000564a:	428a      	cmp	r2, r1
9000564c:	d155      	bne.n	900056fa <_ZN25screen_snake_gameViewBaseC1Ev+0x6b2>
        rect.height = height;
9000564e:	2218      	movs	r2, #24
        boundingArea = calculateBoundingArea();
90005650:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90005654:	4651      	mov	r1, sl
90005656:	4628      	mov	r0, r5
90005658:	f8a4 2366 	strh.w	r2, [r4, #870]	; 0x366
9000565c:	4798      	blx	r3
9000565e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
90005662:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005666:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
9000566a:	f8d4 335c 	ldr.w	r3, [r4, #860]	; 0x35c
        color = newColor;
9000566e:	f04f 31ff 	mov.w	r1, #4294967295
90005672:	483c      	ldr	r0, [pc, #240]	; (90005764 <_ZN25screen_snake_gameViewBaseC1Ev+0x71c>)
        boundingArea = calculateBoundingArea();
90005674:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
        linespace = space;
90005678:	2300      	movs	r3, #0
        color = newColor;
9000567a:	f8c4 138c 	str.w	r1, [r4, #908]	; 0x38c
        linespace = space;
9000567e:	4282      	cmp	r2, r0
90005680:	f8a4 3390 	strh.w	r3, [r4, #912]	; 0x390
        boundingArea = calculateBoundingArea();
90005684:	d147      	bne.n	90005716 <_ZN25screen_snake_gameViewBaseC1Ev+0x6ce>
90005686:	f8c4 33a0 	str.w	r3, [r4, #928]	; 0x3a0
9000568a:	e9c4 31e6 	strd	r3, r1, [r4, #920]	; 0x398
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000568e:	9b06      	ldr	r3, [sp, #24]
    Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LFN7).getText());
90005690:	f504 7574 	add.w	r5, r4, #976	; 0x3d0
90005694:	681b      	ldr	r3, [r3, #0]
90005696:	2b00      	cmp	r3, #0
90005698:	d078      	beq.n	9000578c <_ZN25screen_snake_gameViewBaseC1Ev+0x744>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000569a:	4b2a      	ldr	r3, [pc, #168]	; (90005744 <_ZN25screen_snake_gameViewBaseC1Ev+0x6fc>)
9000569c:	881b      	ldrh	r3, [r3, #0]
9000569e:	2b00      	cmp	r3, #0
900056a0:	d07a      	beq.n	90005798 <_ZN25screen_snake_gameViewBaseC1Ev+0x750>
        return texts->getText(typedTextId);
900056a2:	4b2b      	ldr	r3, [pc, #172]	; (90005750 <_ZN25screen_snake_gameViewBaseC1Ev+0x708>)
900056a4:	2100      	movs	r1, #0
900056a6:	6818      	ldr	r0, [r3, #0]
900056a8:	f7fe ffce 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
900056ac:	4a33      	ldr	r2, [pc, #204]	; (9000577c <_ZN25screen_snake_gameViewBaseC1Ev+0x734>)
900056ae:	4603      	mov	r3, r0
900056b0:	2114      	movs	r1, #20
900056b2:	4628      	mov	r0, r5
900056b4:	f015 ff48 	bl	9001b548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
900056b8:	4b29      	ldr	r3, [pc, #164]	; (90005760 <_ZN25screen_snake_gameViewBaseC1Ev+0x718>)
    lbl_score_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OPI7));
900056ba:	a910      	add	r1, sp, #64	; 0x40
900056bc:	4650      	mov	r0, sl
900056be:	9310      	str	r3, [sp, #64]	; 0x40
900056c0:	2301      	movs	r3, #1
900056c2:	f8c4 53a4 	str.w	r5, [r4, #932]	; 0x3a4
900056c6:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
900056ca:	f00f fe75 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
900056ce:	235f      	movs	r3, #95	; 0x5f
900056d0:	4630      	mov	r0, r6
900056d2:	4651      	mov	r1, sl
900056d4:	f884 3392 	strb.w	r3, [r4, #914]	; 0x392
900056d8:	f00d f9ee 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900056dc:	4620      	mov	r0, r4
900056de:	b013      	add	sp, #76	; 0x4c
900056e0:	ecbd 8b04 	vpop	{d8-d9}
900056e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        setWidth(width);
900056e8:	2136      	movs	r1, #54	; 0x36
900056ea:	4650      	mov	r0, sl
900056ec:	4790      	blx	r2
        setHeight(height);
900056ee:	f8d4 335c 	ldr.w	r3, [r4, #860]	; 0x35c
900056f2:	4921      	ldr	r1, [pc, #132]	; (90005778 <_ZN25screen_snake_gameViewBaseC1Ev+0x730>)
900056f4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
900056f6:	428a      	cmp	r2, r1
900056f8:	d0a9      	beq.n	9000564e <_ZN25screen_snake_gameViewBaseC1Ev+0x606>
900056fa:	2118      	movs	r1, #24
900056fc:	4650      	mov	r0, sl
900056fe:	4790      	blx	r2
90005700:	e7b3      	b.n	9000566a <_ZN25screen_snake_gameViewBaseC1Ev+0x622>
        boundingArea = calculateBoundingArea();
90005702:	4659      	mov	r1, fp
90005704:	4628      	mov	r0, r5
90005706:	4790      	blx	r2
90005708:	f504 7720 	add.w	r7, r4, #640	; 0x280
9000570c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005710:	e887 0007 	stmia.w	r7, {r0, r1, r2}
90005714:	e6f7      	b.n	90005506 <_ZN25screen_snake_gameViewBaseC1Ev+0x4be>
90005716:	4651      	mov	r1, sl
90005718:	4628      	mov	r0, r5
9000571a:	4790      	blx	r2
9000571c:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
90005720:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005724:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90005728:	e7b1      	b.n	9000568e <_ZN25screen_snake_gameViewBaseC1Ev+0x646>
9000572a:	9107      	str	r1, [sp, #28]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000572c:	4638      	mov	r0, r7
9000572e:	4798      	blx	r3
90005730:	683a      	ldr	r2, [r7, #0]
90005732:	4605      	mov	r5, r0
90005734:	9907      	ldr	r1, [sp, #28]
90005736:	e68f      	b.n	90005458 <_ZN25screen_snake_gameViewBaseC1Ev+0x410>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005738:	4b11      	ldr	r3, [pc, #68]	; (90005780 <_ZN25screen_snake_gameViewBaseC1Ev+0x738>)
9000573a:	216c      	movs	r1, #108	; 0x6c
9000573c:	4a11      	ldr	r2, [pc, #68]	; (90005784 <_ZN25screen_snake_gameViewBaseC1Ev+0x73c>)
9000573e:	4812      	ldr	r0, [pc, #72]	; (90005788 <_ZN25screen_snake_gameViewBaseC1Ev+0x740>)
90005740:	f023 ff7e 	bl	90029640 <__assert_func>
90005744:	24039b28 	.word	0x24039b28
90005748:	24039b24 	.word	0x24039b24
9000574c:	24039b2c 	.word	0x24039b2c
90005750:	24039b30 	.word	0x24039b30
90005754:	900035c5 	.word	0x900035c5
90005758:	00550076 	.word	0x00550076
9000575c:	ffff0000 	.word	0xffff0000
90005760:	9002c22c 	.word	0x9002c22c
90005764:	90004d99 	.word	0x90004d99
90005768:	007e00b2 	.word	0x007e00b2
9000576c:	0096009d 	.word	0x0096009d
90005770:	ff00ff11 	.word	0xff00ff11
90005774:	90004d25 	.word	0x90004d25
90005778:	90004d4d 	.word	0x90004d4d
9000577c:	9002ceb0 	.word	0x9002ceb0
90005780:	9002cd70 	.word	0x9002cd70
90005784:	9002cdb4 	.word	0x9002cdb4
90005788:	9002cdf0 	.word	0x9002cdf0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000578c:	4b05      	ldr	r3, [pc, #20]	; (900057a4 <_ZN25screen_snake_gameViewBaseC1Ev+0x75c>)
9000578e:	2160      	movs	r1, #96	; 0x60
90005790:	4a05      	ldr	r2, [pc, #20]	; (900057a8 <_ZN25screen_snake_gameViewBaseC1Ev+0x760>)
90005792:	4806      	ldr	r0, [pc, #24]	; (900057ac <_ZN25screen_snake_gameViewBaseC1Ev+0x764>)
90005794:	f023 ff54 	bl	90029640 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005798:	4b05      	ldr	r3, [pc, #20]	; (900057b0 <_ZN25screen_snake_gameViewBaseC1Ev+0x768>)
9000579a:	2161      	movs	r1, #97	; 0x61
9000579c:	4a02      	ldr	r2, [pc, #8]	; (900057a8 <_ZN25screen_snake_gameViewBaseC1Ev+0x760>)
9000579e:	4803      	ldr	r0, [pc, #12]	; (900057ac <_ZN25screen_snake_gameViewBaseC1Ev+0x764>)
900057a0:	f023 ff4e 	bl	90029640 <__assert_func>
900057a4:	9002cd70 	.word	0x9002cd70
900057a8:	9002ce78 	.word	0x9002ce78
900057ac:	9002cdf0 	.word	0x9002cdf0
900057b0:	9002ce38 	.word	0x9002ce38

900057b4 <_ZN29screen_space_invadersViewBase11fire_bulletEv>:
     * Virtual Action Handlers
     */
    virtual void fire_bullet()
    {
        // Override and implement this function in screen_space_invaders
    }
900057b4:	4770      	bx	lr
900057b6:	bf00      	nop

900057b8 <_ZN29screen_space_invadersViewBase11setupScreenEv>:
}

void screen_space_invadersViewBase::setupScreen()
{

}
900057b8:	4770      	bx	lr
900057ba:	bf00      	nop

900057bc <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900057bc:	4770      	bx	lr
900057be:	bf00      	nop

900057c0 <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900057c0:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900057c2:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
900057c4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
900057c6:	6844      	ldr	r4, [r0, #4]
900057c8:	f012 0f01 	tst.w	r2, #1
900057cc:	eb04 0062 	add.w	r0, r4, r2, asr #1
900057d0:	d103      	bne.n	900057da <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
900057d2:	689b      	ldr	r3, [r3, #8]
    }
900057d4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900057d8:	4718      	bx	r3
900057da:	ea4f 0c62 	mov.w	ip, r2, asr #1
900057de:	689b      	ldr	r3, [r3, #8]
900057e0:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900057e4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900057e8:	58d3      	ldr	r3, [r2, r3]
900057ea:	4718      	bx	r3

900057ec <_ZNK8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900057ec:	6843      	ldr	r3, [r0, #4]
900057ee:	b13b      	cbz	r3, 90005800 <_ZNK8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
900057f0:	6883      	ldr	r3, [r0, #8]
900057f2:	b10b      	cbz	r3, 900057f8 <_ZNK8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
900057f4:	2001      	movs	r0, #1
    }
900057f6:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900057f8:	68c0      	ldr	r0, [r0, #12]
900057fa:	f000 0001 	and.w	r0, r0, #1
900057fe:	4770      	bx	lr
90005800:	4618      	mov	r0, r3
90005802:	4770      	bx	lr

90005804 <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005804:	b510      	push	{r4, lr}
90005806:	4604      	mov	r4, r0
90005808:	2110      	movs	r1, #16
9000580a:	f023 feeb 	bl	900295e4 <_ZdlPvj>
9000580e:	4620      	mov	r0, r4
90005810:	bd10      	pop	{r4, pc}
90005812:	bf00      	nop

90005814 <_ZN29screen_space_invadersViewBaseD1Ev>:
screen_space_invadersViewBase::~screen_space_invadersViewBase()
90005814:	4b03      	ldr	r3, [pc, #12]	; (90005824 <_ZN29screen_space_invadersViewBaseD1Ev+0x10>)
90005816:	b510      	push	{r4, lr}
90005818:	4604      	mov	r4, r0
9000581a:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
9000581c:	f011 f8a2 	bl	90016964 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005820:	4620      	mov	r0, r4
90005822:	bd10      	pop	{r4, pc}
90005824:	9002d0c4 	.word	0x9002d0c4

90005828 <_ZN29screen_space_invadersViewBaseD0Ev>:
screen_space_invadersViewBase::~screen_space_invadersViewBase()
90005828:	4b07      	ldr	r3, [pc, #28]	; (90005848 <_ZN29screen_space_invadersViewBaseD0Ev+0x20>)
9000582a:	b500      	push	{lr}
9000582c:	b083      	sub	sp, #12
9000582e:	6003      	str	r3, [r0, #0]
90005830:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90005832:	f011 f897 	bl	90016964 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005836:	9801      	ldr	r0, [sp, #4]
90005838:	f242 0138 	movw	r1, #8248	; 0x2038
9000583c:	f023 fed2 	bl	900295e4 <_ZdlPvj>
90005840:	9801      	ldr	r0, [sp, #4]
90005842:	b003      	add	sp, #12
90005844:	f85d fb04 	ldr.w	pc, [sp], #4
90005848:	9002d0c4 	.word	0x9002d0c4

9000584c <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_space_invadersViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_fire)
9000584c:	f500 7388 	add.w	r3, r0, #272	; 0x110
90005850:	4299      	cmp	r1, r3
{
90005852:	b510      	push	{r4, lr}
90005854:	4604      	mov	r4, r0
90005856:	b082      	sub	sp, #8
    if (&src == &btn_fire)
90005858:	d005      	beq.n	90005866 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1a>
        //intr_fire_bullet
        //When btn_fire clicked call virtual function
        //Call fire_bullet
        fire_bullet();
    }
    if (&src == &btn_back)
9000585a:	f504 742b 	add.w	r4, r4, #684	; 0x2ac
9000585e:	42a1      	cmp	r1, r4
90005860:	d00a      	beq.n	90005878 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c>
        //intr_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
90005862:	b002      	add	sp, #8
90005864:	bd10      	pop	{r4, pc}
        fire_bullet();
90005866:	6803      	ldr	r3, [r0, #0]
90005868:	4a07      	ldr	r2, [pc, #28]	; (90005888 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c>)
9000586a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000586c:	4293      	cmp	r3, r2
9000586e:	d0f4      	beq.n	9000585a <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
90005870:	9101      	str	r1, [sp, #4]
90005872:	4798      	blx	r3
90005874:	9901      	ldr	r1, [sp, #4]
90005876:	e7f0      	b.n	9000585a <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005878:	f012 fd76 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
}
9000587c:	b002      	add	sp, #8
9000587e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoscreen_main_menuScreenNoTransition();
90005882:	f7fe bcb9 	b.w	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90005886:	bf00      	nop
90005888:	900057b5 	.word	0x900057b5

9000588c <_ZN29screen_space_invadersViewBaseC1Ev>:
screen_space_invadersViewBase::screen_space_invadersViewBase() :
9000588c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005890:	ed2d 8b04 	vpush	{d8-d9}
90005894:	b091      	sub	sp, #68	; 0x44
90005896:	4683      	mov	fp, r0
90005898:	f014 f99e 	bl	90019bd8 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_space_invadersViewBase::buttonCallbackHandler)
9000589c:	4b40      	ldr	r3, [pc, #256]	; (900059a0 <_ZN29screen_space_invadersViewBaseC1Ev+0x114>)
9000589e:	2600      	movs	r6, #0
900058a0:	f10b 046c 	add.w	r4, fp, #108	; 0x6c
900058a4:	f8cb 3000 	str.w	r3, [fp]
          touchable(false),
900058a8:	f44f 7380 	mov.w	r3, #256	; 0x100
900058ac:	f64f 75ff 	movw	r5, #65535	; 0xffff
900058b0:	a90e      	add	r1, sp, #56	; 0x38
900058b2:	f8ab 3064 	strh.w	r3, [fp, #100]	; 0x64
900058b6:	f10b 0798 	add.w	r7, fp, #152	; 0x98
        : Widget(), alpha(255), color(0)
900058ba:	4b3a      	ldr	r3, [pc, #232]	; (900059a4 <_ZN29screen_space_invadersViewBaseC1Ev+0x118>)
900058bc:	4620      	mov	r0, r4
900058be:	f8cb 603c 	str.w	r6, [fp, #60]	; 0x3c
900058c2:	ee08 7a10 	vmov	s16, r7
900058c6:	f8cb 3040 	str.w	r3, [fp, #64]	; 0x40
900058ca:	23ff      	movs	r3, #255	; 0xff
        : x(0), y(0), width(0), height(0)
900058cc:	f8cb 6044 	str.w	r6, [fp, #68]	; 0x44
900058d0:	f50b 79a6 	add.w	r9, fp, #332	; 0x14c
900058d4:	f88b 3066 	strb.w	r3, [fp, #102]	; 0x66
900058d8:	f50b 78bc 	add.w	r8, fp, #376	; 0x178
          cachedAbsX(0),
900058dc:	f8cb 6060 	str.w	r6, [fp, #96]	; 0x60
        : color(col)
900058e0:	f8cb 6068 	str.w	r6, [fp, #104]	; 0x68
900058e4:	f8ad 5038 	strh.w	r5, [sp, #56]	; 0x38
        : x(0), y(0), width(0), height(0)
900058e8:	e9cb 6612 	strd	r6, r6, [fp, #72]	; 0x48
          parent(0),
900058ec:	e9cb 6614 	strd	r6, r6, [fp, #80]	; 0x50
          nextDrawChainElement(0),
900058f0:	e9cb 6616 	strd	r6, r6, [fp, #88]	; 0x58
900058f4:	f00f f80e 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900058f8:	f10b 03d4 	add.w	r3, fp, #212	; 0xd4
900058fc:	4638      	mov	r0, r7
900058fe:	f50b 7788 	add.w	r7, fp, #272	; 0x110
90005902:	9303      	str	r3, [sp, #12]
90005904:	f010 f81a 	bl	9001593c <_ZN8touchgfx14ButtonWithIconC1Ev>
90005908:	9803      	ldr	r0, [sp, #12]
9000590a:	ee09 7a10 	vmov	s18, r7
9000590e:	f010 f815 	bl	9001593c <_ZN8touchgfx14ButtonWithIconC1Ev>
90005912:	4638      	mov	r0, r7
90005914:	f010 f812 	bl	9001593c <_ZN8touchgfx14ButtonWithIconC1Ev>
90005918:	a90e      	add	r1, sp, #56	; 0x38
9000591a:	4648      	mov	r0, r9
9000591c:	f8ad 5038 	strh.w	r5, [sp, #56]	; 0x38
90005920:	f00e fff8 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005924:	f50b 73d2 	add.w	r3, fp, #420	; 0x1a4
90005928:	f8ad 5038 	strh.w	r5, [sp, #56]	; 0x38
9000592c:	a90e      	add	r1, sp, #56	; 0x38
9000592e:	461d      	mov	r5, r3
90005930:	4640      	mov	r0, r8
90005932:	ee08 3a90 	vmov	s17, r3
90005936:	f00e ffed 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000593a:	4628      	mov	r0, r5
9000593c:	f00e fd14 	bl	90014368 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005940:	4b19      	ldr	r3, [pc, #100]	; (900059a8 <_ZN29screen_space_invadersViewBaseC1Ev+0x11c>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90005942:	491a      	ldr	r1, [pc, #104]	; (900059ac <_ZN29screen_space_invadersViewBaseC1Ev+0x120>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90005944:	f50b 7005 	add.w	r0, fp, #532	; 0x214
90005948:	681a      	ldr	r2, [r3, #0]
        : widgetWidth(0)
9000594a:	f8ab 6218 	strh.w	r6, [fp, #536]	; 0x218
9000594e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
90005952:	f8cb 1214 	str.w	r1, [fp, #532]	; 0x214
90005956:	9004      	str	r0, [sp, #16]
90005958:	2b00      	cmp	r3, #0
9000595a:	d031      	beq.n	900059c0 <_ZN29screen_space_invadersViewBaseC1Ev+0x134>
9000595c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
9000595e:	2800      	cmp	r0, #0
90005960:	f000 82e6 	beq.w	90005f30 <_ZN29screen_space_invadersViewBaseC1Ev+0x6a4>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90005964:	6803      	ldr	r3, [r0, #0]
90005966:	4f12      	ldr	r7, [pc, #72]	; (900059b0 <_ZN29screen_space_invadersViewBaseC1Ev+0x124>)
90005968:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000596a:	42bb      	cmp	r3, r7
9000596c:	d035      	beq.n	900059da <_ZN29screen_space_invadersViewBaseC1Ev+0x14e>
9000596e:	4798      	blx	r3
        return auxiliaryLCD;
90005970:	4b0d      	ldr	r3, [pc, #52]	; (900059a8 <_ZN29screen_space_invadersViewBaseC1Ev+0x11c>)
90005972:	fab0 f580 	clz	r5, r0
90005976:	681b      	ldr	r3, [r3, #0]
90005978:	096d      	lsrs	r5, r5, #5
9000597a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000597c:	b140      	cbz	r0, 90005990 <_ZN29screen_space_invadersViewBaseC1Ev+0x104>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000597e:	6803      	ldr	r3, [r0, #0]
90005980:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90005982:	42bb      	cmp	r3, r7
90005984:	d029      	beq.n	900059da <_ZN29screen_space_invadersViewBaseC1Ev+0x14e>
90005986:	4798      	blx	r3
90005988:	2800      	cmp	r0, #0
9000598a:	bf08      	it	eq
9000598c:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90005990:	bb1d      	cbnz	r5, 900059da <_ZN29screen_space_invadersViewBaseC1Ev+0x14e>
90005992:	4b08      	ldr	r3, [pc, #32]	; (900059b4 <_ZN29screen_space_invadersViewBaseC1Ev+0x128>)
90005994:	212c      	movs	r1, #44	; 0x2c
90005996:	4a08      	ldr	r2, [pc, #32]	; (900059b8 <_ZN29screen_space_invadersViewBaseC1Ev+0x12c>)
90005998:	4808      	ldr	r0, [pc, #32]	; (900059bc <_ZN29screen_space_invadersViewBaseC1Ev+0x130>)
9000599a:	f023 fe51 	bl	90029640 <__assert_func>
9000599e:	bf00      	nop
900059a0:	9002d0c4 	.word	0x9002d0c4
900059a4:	9002db10 	.word	0x9002db10
900059a8:	24039acc 	.word	0x24039acc
900059ac:	9002bfc4 	.word	0x9002bfc4
900059b0:	90002331 	.word	0x90002331
900059b4:	9002cfa4 	.word	0x9002cfa4
900059b8:	9002d004 	.word	0x9002d004
900059bc:	9002d040 	.word	0x9002d040
        return instance->lcdRef;
900059c0:	6890      	ldr	r0, [r2, #8]
900059c2:	4fdd      	ldr	r7, [pc, #884]	; (90005d38 <_ZN29screen_space_invadersViewBaseC1Ev+0x4ac>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900059c4:	6803      	ldr	r3, [r0, #0]
900059c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900059c8:	42bb      	cmp	r3, r7
900059ca:	d1d0      	bne.n	9000596e <_ZN29screen_space_invadersViewBaseC1Ev+0xe2>
        return auxiliaryLCD;
900059cc:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900059ce:	b120      	cbz	r0, 900059da <_ZN29screen_space_invadersViewBaseC1Ev+0x14e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900059d0:	6803      	ldr	r3, [r0, #0]
900059d2:	2501      	movs	r5, #1
900059d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900059d6:	42bb      	cmp	r3, r7
900059d8:	d1d5      	bne.n	90005986 <_ZN29screen_space_invadersViewBaseC1Ev+0xfa>
900059da:	4ed8      	ldr	r6, [pc, #864]	; (90005d3c <_ZN29screen_space_invadersViewBaseC1Ev+0x4b0>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900059dc:	f04f 0a00 	mov.w	sl, #0
900059e0:	f50b 750a 	add.w	r5, fp, #552	; 0x228
900059e4:	f106 0324 	add.w	r3, r6, #36	; 0x24
900059e8:	f8cb 6214 	str.w	r6, [fp, #532]	; 0x214
900059ec:	4628      	mov	r0, r5
900059ee:	f8cb a220 	str.w	sl, [fp, #544]	; 0x220
900059f2:	f8cb 321c 	str.w	r3, [fp, #540]	; 0x21c
900059f6:	f50b 7326 	add.w	r3, fp, #664	; 0x298
900059fa:	9305      	str	r3, [sp, #20]
900059fc:	f00e fcb4 	bl	90014368 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainter()
90005a00:	49cf      	ldr	r1, [pc, #828]	; (90005d40 <_ZN29screen_space_invadersViewBaseC1Ev+0x4b4>)
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005a02:	4bd0      	ldr	r3, [pc, #832]	; (90005d44 <_ZN29screen_space_invadersViewBaseC1Ev+0x4b8>)
90005a04:	f8cb 1298 	str.w	r1, [fp, #664]	; 0x298
90005a08:	6819      	ldr	r1, [r3, #0]
90005a0a:	f106 0324 	add.w	r3, r6, #36	; 0x24
        : widgetWidth(0)
90005a0e:	f8ab a29c 	strh.w	sl, [fp, #668]	; 0x29c
90005a12:	f891 2058 	ldrb.w	r2, [r1, #88]	; 0x58
90005a16:	2a00      	cmp	r2, #0
90005a18:	f000 8292 	beq.w	90005f40 <_ZN29screen_space_invadersViewBaseC1Ev+0x6b4>
90005a1c:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90005a1e:	b900      	cbnz	r0, 90005a22 <_ZN29screen_space_invadersViewBaseC1Ev+0x196>
        return instance->lcdRef;
90005a20:	6888      	ldr	r0, [r1, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90005a22:	6802      	ldr	r2, [r0, #0]
90005a24:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90005a26:	42ba      	cmp	r2, r7
90005a28:	f040 82a5 	bne.w	90005f76 <_ZN29screen_space_invadersViewBaseC1Ev+0x6ea>
90005a2c:	f8cb 6298 	str.w	r6, [fp, #664]	; 0x298
90005a30:	2600      	movs	r6, #0
90005a32:	f8cb 32a0 	str.w	r3, [fp, #672]	; 0x2a0
90005a36:	f50b 732b 	add.w	r3, fp, #684	; 0x2ac
90005a3a:	f8cb 62a4 	str.w	r6, [fp, #676]	; 0x2a4
        : typedTextId(id)
90005a3e:	f04f 37ff 	mov.w	r7, #4294967295
90005a42:	4618      	mov	r0, r3
90005a44:	ee09 3a90 	vmov	s19, r3
90005a48:	f00f ff78 	bl	9001593c <_ZN8touchgfx14ButtonWithIconC1Ev>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005a4c:	f04f 33ff 	mov.w	r3, #4294967295
90005a50:	48bd      	ldr	r0, [pc, #756]	; (90005d48 <_ZN29screen_space_invadersViewBaseC1Ev+0x4bc>)
          touchable(false),
90005a52:	f44f 7180 	mov.w	r1, #256	; 0x100
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005a56:	4abd      	ldr	r2, [pc, #756]	; (90005d4c <_ZN29screen_space_invadersViewBaseC1Ev+0x4c0>)
90005a58:	f10b 0a04 	add.w	sl, fp, #4
90005a5c:	f8cb 0310 	str.w	r0, [fp, #784]	; 0x310
        : color(col)
90005a60:	f8cb 6318 	str.w	r6, [fp, #792]	; 0x318
90005a64:	f8ab 631c 	strh.w	r6, [fp, #796]	; 0x31c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005a68:	f8cb 6324 	str.w	r6, [fp, #804]	; 0x324
90005a6c:	f8cb 0358 	str.w	r0, [fp, #856]	; 0x358
90005a70:	f8ab 735c 	strh.w	r7, [fp, #860]	; 0x35c
        : color(col)
90005a74:	f8cb 6360 	str.w	r6, [fp, #864]	; 0x360
90005a78:	f8ab 6364 	strh.w	r6, [fp, #868]	; 0x364
90005a7c:	f8ab 130c 	strh.w	r1, [fp, #780]	; 0x30c
90005a80:	f8ab 1354 	strh.w	r1, [fp, #852]	; 0x354
90005a84:	f8cb 22e8 	str.w	r2, [fp, #744]	; 0x2e8
90005a88:	f8cb 2330 	str.w	r2, [fp, #816]	; 0x330
90005a8c:	f8ab 7314 	strh.w	r7, [fp, #788]	; 0x314
              text(0)
90005a90:	e9cb 36ca 	strd	r3, r6, [fp, #808]	; 0x328
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005a94:	23ff      	movs	r3, #255	; 0xff
        : x(0), y(0), width(0), height(0)
90005a96:	e9cb 66bb 	strd	r6, r6, [fp, #748]	; 0x2ec
90005a9a:	e9cb 66bd 	strd	r6, r6, [fp, #756]	; 0x2f4
          nextSibling(0),
90005a9e:	e9cb 66bf 	strd	r6, r6, [fp, #764]	; 0x2fc
          cachedAbsX(0),
90005aa2:	e9cb 66c1 	strd	r6, r6, [fp, #772]	; 0x304
90005aa6:	e9cb 66cd 	strd	r6, r6, [fp, #820]	; 0x334
90005aaa:	e9cb 66cf 	strd	r6, r6, [fp, #828]	; 0x33c
          nextSibling(0),
90005aae:	e9cb 66d1 	strd	r6, r6, [fp, #836]	; 0x344
          cachedAbsX(0),
90005ab2:	e9cb 66d3 	strd	r6, r6, [fp, #844]	; 0x34c
90005ab6:	f8cb 331e 	str.w	r3, [fp, #798]	; 0x31e
90005aba:	f8cb 3366 	str.w	r3, [fp, #870]	; 0x366
90005abe:	f8cb 2378 	str.w	r2, [fp, #888]	; 0x378
90005ac2:	f8cb 23c0 	str.w	r2, [fp, #960]	; 0x3c0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005ac6:	f04f 32ff 	mov.w	r2, #4294967295
          touchable(false),
90005aca:	f8ab 139c 	strh.w	r1, [fp, #924]	; 0x39c
90005ace:	f8ab 13e4 	strh.w	r1, [fp, #996]	; 0x3e4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90005ad2:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
90005ad6:	f8cb 33ae 	str.w	r3, [fp, #942]	; 0x3ae
90005ada:	f8cb 636c 	str.w	r6, [fp, #876]	; 0x36c
90005ade:	f8cb 03a0 	str.w	r0, [fp, #928]	; 0x3a0
90005ae2:	f8ab 73a4 	strh.w	r7, [fp, #932]	; 0x3a4
        : color(col)
90005ae6:	f8cb 63a8 	str.w	r6, [fp, #936]	; 0x3a8
90005aea:	f8ab 63ac 	strh.w	r6, [fp, #940]	; 0x3ac
              text(0)
90005aee:	f8cb 63bc 	str.w	r6, [fp, #956]	; 0x3bc
90005af2:	f8cb 03e8 	str.w	r0, [fp, #1000]	; 0x3e8
90005af6:	f50b 6081 	add.w	r0, fp, #1032	; 0x408
90005afa:	e9cb 26dc 	strd	r2, r6, [fp, #880]	; 0x370
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005afe:	e9cb 62ed 	strd	r6, r2, [fp, #948]	; 0x3b4
        : x(0), y(0), width(0), height(0)
90005b02:	e9cb 66df 	strd	r6, r6, [fp, #892]	; 0x37c
90005b06:	e9cb 66e1 	strd	r6, r6, [fp, #900]	; 0x384
          nextSibling(0),
90005b0a:	e9cb 66e3 	strd	r6, r6, [fp, #908]	; 0x38c
          cachedAbsX(0),
90005b0e:	e9cb 66e5 	strd	r6, r6, [fp, #916]	; 0x394
90005b12:	e9cb 66f1 	strd	r6, r6, [fp, #964]	; 0x3c4
90005b16:	e9cb 66f3 	strd	r6, r6, [fp, #972]	; 0x3cc
          nextSibling(0),
90005b1a:	e9cb 66f5 	strd	r6, r6, [fp, #980]	; 0x3d4
          cachedAbsX(0),
90005b1e:	e9cb 66f7 	strd	r6, r6, [fp, #988]	; 0x3dc
90005b22:	f8ab 73ec 	strh.w	r7, [fp, #1004]	; 0x3ec
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005b26:	f8cb 33f6 	str.w	r3, [fp, #1014]	; 0x3f6
        : pobject(pObject), pmemfun(pmemfun_1)
90005b2a:	f50b 5300 	add.w	r3, fp, #8192	; 0x2000
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005b2e:	f8cb 2400 	str.w	r2, [fp, #1024]	; 0x400
90005b32:	4a87      	ldr	r2, [pc, #540]	; (90005d50 <_ZN29screen_space_invadersViewBaseC1Ev+0x4c4>)
        : color(col)
90005b34:	f8cb 63f0 	str.w	r6, [fp, #1008]	; 0x3f0
90005b38:	f8ab 63f4 	strh.w	r6, [fp, #1012]	; 0x3f4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005b3c:	f8cb 63fc 	str.w	r6, [fp, #1020]	; 0x3fc
              text(0)
90005b40:	f8cb 6404 	str.w	r6, [fp, #1028]	; 0x404
90005b44:	629a      	str	r2, [r3, #40]	; 0x28
90005b46:	4a83      	ldr	r2, [pc, #524]	; (90005d54 <_ZN29screen_space_invadersViewBaseC1Ev+0x4c8>)
90005b48:	635e      	str	r6, [r3, #52]	; 0x34
90005b4a:	631a      	str	r2, [r3, #48]	; 0x30
90005b4c:	f8c3 b02c 	str.w	fp, [r3, #44]	; 0x2c
90005b50:	f010 fefe 	bl	90016950 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90005b54:	4f80      	ldr	r7, [pc, #512]	; (90005d58 <_ZN29screen_space_invadersViewBaseC1Ev+0x4cc>)
        color = newColor;
90005b56:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
90005b5a:	f10b 0140 	add.w	r1, fp, #64	; 0x40
90005b5e:	4650      	mov	r0, sl
90005b60:	f8cb 6044 	str.w	r6, [fp, #68]	; 0x44
90005b64:	f8cb 7048 	str.w	r7, [fp, #72]	; 0x48
90005b68:	f8cb 3068 	str.w	r3, [fp, #104]	; 0x68
90005b6c:	f00c ffa4 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005b70:	2304      	movs	r3, #4
    background_black.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90005b72:	4620      	mov	r0, r4
90005b74:	a90e      	add	r1, sp, #56	; 0x38
90005b76:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90005b7a:	f00f ff06 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background_black.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005b7e:	4631      	mov	r1, r6
90005b80:	4620      	mov	r0, r4
90005b82:	e9cb 671c 	strd	r6, r7, [fp, #112]	; 0x70
90005b86:	f00e fe80 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005b8a:	4621      	mov	r1, r4
90005b8c:	4650      	mov	r0, sl
90005b8e:	2401      	movs	r4, #1
90005b90:	f00c ff92 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
90005b94:	ab0e      	add	r3, sp, #56	; 0x38
90005b96:	aa0c      	add	r2, sp, #48	; 0x30
90005b98:	ee18 0a10 	vmov	r0, s16
90005b9c:	9300      	str	r3, [sp, #0]
90005b9e:	a90b      	add	r1, sp, #44	; 0x2c
90005ba0:	4b6e      	ldr	r3, [pc, #440]	; (90005d5c <_ZN29screen_space_invadersViewBaseC1Ev+0x4d0>)
90005ba2:	275a      	movs	r7, #90	; 0x5a
90005ba4:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90005ba8:	f8cb 309c 	str.w	r3, [fp, #156]	; 0x9c
90005bac:	2308      	movs	r3, #8
90005bae:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
90005bb2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90005bb6:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90005bba:	ab0d      	add	r3, sp, #52	; 0x34
90005bbc:	f00f fe28 	bl	90015810 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005bc0:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005bc4:	ee18 1a10 	vmov	r1, s16
90005bc8:	4650      	mov	r0, sl
90005bca:	f8cb 30d0 	str.w	r3, [fp, #208]	; 0xd0
90005bce:	f88b 70ca 	strb.w	r7, [fp, #202]	; 0xca
90005bd2:	f00c ff71 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90005bd6:	ab0e      	add	r3, sp, #56	; 0x38
90005bd8:	ed9d 8a03 	vldr	s16, [sp, #12]
90005bdc:	aa0c      	add	r2, sp, #48	; 0x30
90005bde:	9300      	str	r3, [sp, #0]
90005be0:	a90b      	add	r1, sp, #44	; 0x2c
90005be2:	4b5f      	ldr	r3, [pc, #380]	; (90005d60 <_ZN29screen_space_invadersViewBaseC1Ev+0x4d4>)
90005be4:	ee18 0a10 	vmov	r0, s16
90005be8:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90005bec:	f8cb 30d8 	str.w	r3, [fp, #216]	; 0xd8
90005bf0:	2309      	movs	r3, #9
90005bf2:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
90005bf6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90005bfa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90005bfe:	ab0d      	add	r3, sp, #52	; 0x34
90005c00:	f00f fe06 	bl	90015810 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005c04:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005c08:	ee18 1a10 	vmov	r1, s16
90005c0c:	4650      	mov	r0, sl
90005c0e:	f8cb 310c 	str.w	r3, [fp, #268]	; 0x10c
90005c12:	f88b 7106 	strb.w	r7, [fp, #262]	; 0x106
90005c16:	f00c ff4f 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_fire.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID));
90005c1a:	ab0e      	add	r3, sp, #56	; 0x38
90005c1c:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
    btn_fire.setAction(buttonCallback);
90005c20:	f242 0428 	movw	r4, #8232	; 0x2028
    btn_fire.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID));
90005c24:	9300      	str	r3, [sp, #0]
90005c26:	aa0c      	add	r2, sp, #48	; 0x30
90005c28:	4b4e      	ldr	r3, [pc, #312]	; (90005d64 <_ZN29screen_space_invadersViewBaseC1Ev+0x4d8>)
90005c2a:	a90b      	add	r1, sp, #44	; 0x2c
90005c2c:	ee19 0a10 	vmov	r0, s18
90005c30:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90005c34:	f8cb 3114 	str.w	r3, [fp, #276]	; 0x114
90005c38:	230c      	movs	r3, #12
    btn_fire.setAction(buttonCallback);
90005c3a:	445c      	add	r4, fp
90005c3c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90005c40:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
    btn_fire.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID));
90005c44:	ab0d      	add	r3, sp, #52	; 0x34
90005c46:	f00f fde3 	bl	90015810 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005c4a:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005c4e:	ee19 1a10 	vmov	r1, s18
90005c52:	4650      	mov	r0, sl
90005c54:	f8cb 3148 	str.w	r3, [fp, #328]	; 0x148
90005c58:	f88b 7142 	strb.w	r7, [fp, #322]	; 0x142
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90005c5c:	f04f 37ff 	mov.w	r7, #4294967295
90005c60:	f8cb 4138 	str.w	r4, [fp, #312]	; 0x138
90005c64:	f00c ff28 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005c68:	230f      	movs	r3, #15
    enemy1.setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_ENEMY_ID));
90005c6a:	4648      	mov	r0, r9
90005c6c:	a90e      	add	r1, sp, #56	; 0x38
90005c6e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90005c72:	f00f fe8a 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005c76:	4b3c      	ldr	r3, [pc, #240]	; (90005d68 <_ZN29screen_space_invadersViewBaseC1Ev+0x4dc>)
    enemy1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005c78:	4631      	mov	r1, r6
90005c7a:	4648      	mov	r0, r9
90005c7c:	f8cb 6150 	str.w	r6, [fp, #336]	; 0x150
90005c80:	f8cb 3154 	str.w	r3, [fp, #340]	; 0x154
90005c84:	f00e fe01 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005c88:	4649      	mov	r1, r9
90005c8a:	4650      	mov	r0, sl
    buttonCallback(this, &screen_space_invadersViewBase::buttonCallbackHandler)
90005c8c:	f50b 793a 	add.w	r9, fp, #744	; 0x2e8
90005c90:	f00c ff12 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005c94:	2310      	movs	r3, #16
    ship.setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_SHIP_ID));
90005c96:	4640      	mov	r0, r8
90005c98:	a90e      	add	r1, sp, #56	; 0x38
90005c9a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90005c9e:	f00f fe74 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005ca2:	4b32      	ldr	r3, [pc, #200]	; (90005d6c <_ZN29screen_space_invadersViewBaseC1Ev+0x4e0>)
    ship.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005ca4:	4631      	mov	r1, r6
90005ca6:	4832      	ldr	r0, [pc, #200]	; (90005d70 <_ZN29screen_space_invadersViewBaseC1Ev+0x4e4>)
90005ca8:	4e32      	ldr	r6, [pc, #200]	; (90005d74 <_ZN29screen_space_invadersViewBaseC1Ev+0x4e8>)
90005caa:	e9cb 035f 	strd	r0, r3, [fp, #380]	; 0x17c
90005cae:	4640      	mov	r0, r8
90005cb0:	f00e fdeb 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005cb4:	4641      	mov	r1, r8
90005cb6:	4650      	mov	r0, sl
    buttonCallback(this, &screen_space_invadersViewBase::buttonCallbackHandler)
90005cb8:	f50b 784c 	add.w	r8, fp, #816	; 0x330
90005cbc:	f00c fefc 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005cc0:	f04f 33ff 	mov.w	r3, #4294967295
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005cc4:	22a0      	movs	r2, #160	; 0xa0
90005cc6:	ee18 0a90 	vmov	r0, s17
90005cca:	f8cb 3220 	str.w	r3, [fp, #544]	; 0x220
        canvasPainter = &painter;
90005cce:	9b04      	ldr	r3, [sp, #16]
90005cd0:	4611      	mov	r1, r2
90005cd2:	f8ab 7224 	strh.w	r7, [fp, #548]	; 0x224
90005cd6:	f50b 775e 	add.w	r7, fp, #888	; 0x378
90005cda:	f8cb 31cc 	str.w	r3, [fp, #460]	; 0x1cc
90005cde:	4b26      	ldr	r3, [pc, #152]	; (90005d78 <_ZN29screen_space_invadersViewBaseC1Ev+0x4ec>)
90005ce0:	e9cb 636a 	strd	r6, r3, [fp, #424]	; 0x1a8
90005ce4:	f00e fc56 	bl	90014594 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005ce8:	f44f 7270 	mov.w	r2, #960	; 0x3c0
90005cec:	21a0      	movs	r1, #160	; 0xa0
90005cee:	ee18 0a90 	vmov	r0, s17
90005cf2:	f00e fc5a 	bl	900145aa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
90005cf6:	f8db 31e0 	ldr.w	r3, [fp, #480]	; 0x1e0
90005cfa:	f50b 7670 	add.w	r6, fp, #960	; 0x3c0
90005cfe:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90005d02:	d007      	beq.n	90005d14 <_ZN29screen_space_invadersViewBaseC1Ev+0x488>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
90005d04:	f44f 73a0 	mov.w	r3, #320	; 0x140

        updateCachedShape();
90005d08:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
90005d0c:	f8cb 31e0 	str.w	r3, [fp, #480]	; 0x1e0
        updateCachedShape();
90005d10:	f00e fb4a 	bl	900143a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    bullet.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005d14:	2101      	movs	r1, #1
90005d16:	ee18 0a90 	vmov	r0, s17
90005d1a:	f00e fc51 	bl	900145c0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005d1e:	ee18 1a90 	vmov	r1, s17
90005d22:	4650      	mov	r0, sl
90005d24:	f00c fec8 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005d28:	9b05      	ldr	r3, [sp, #20]
90005d2a:	4914      	ldr	r1, [pc, #80]	; (90005d7c <_ZN29screen_space_invadersViewBaseC1Ev+0x4f0>)
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005d2c:	22a0      	movs	r2, #160	; 0xa0
90005d2e:	f8cb 3250 	str.w	r3, [fp, #592]	; 0x250
90005d32:	4628      	mov	r0, r5
90005d34:	e024      	b.n	90005d80 <_ZN29screen_space_invadersViewBaseC1Ev+0x4f4>
90005d36:	bf00      	nop
90005d38:	90002331 	.word	0x90002331
90005d3c:	9002d760 	.word	0x9002d760
90005d40:	9002bfc4 	.word	0x9002bfc4
90005d44:	24039acc 	.word	0x24039acc
90005d48:	9002c22c 	.word	0x9002c22c
90005d4c:	9002da80 	.word	0x9002da80
90005d50:	9002d0ac 	.word	0x9002d0ac
90005d54:	9000584d 	.word	0x9000584d
90005d58:	011001e0 	.word	0x011001e0
90005d5c:	00c60154 	.word	0x00c60154
90005d60:	00c601a8 	.word	0x00c601a8
90005d64:	009c017e 	.word	0x009c017e
90005d68:	00340032 	.word	0x00340032
90005d6c:	003c0054 	.word	0x003c0054
90005d70:	00cc0008 	.word	0x00cc0008
90005d74:	00a8002d 	.word	0x00a8002d
90005d78:	0024000a 	.word	0x0024000a
90005d7c:	00340014 	.word	0x00340014
90005d80:	4b84      	ldr	r3, [pc, #528]	; (90005f94 <_ZN29screen_space_invadersViewBaseC1Ev+0x708>)
90005d82:	e9cb 138b 	strd	r1, r3, [fp, #556]	; 0x22c
90005d86:	4b84      	ldr	r3, [pc, #528]	; (90005f98 <_ZN29screen_space_invadersViewBaseC1Ev+0x70c>)
90005d88:	4611      	mov	r1, r2
90005d8a:	f8cb 32a4 	str.w	r3, [fp, #676]	; 0x2a4
90005d8e:	f44f 4378 	mov.w	r3, #63488	; 0xf800
90005d92:	f8ab 32a8 	strh.w	r3, [fp, #680]	; 0x2a8
90005d96:	f00e fbfd 	bl	90014594 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005d9a:	f44f 7220 	mov.w	r2, #640	; 0x280
90005d9e:	21a0      	movs	r1, #160	; 0xa0
90005da0:	4628      	mov	r0, r5
90005da2:	f00e fc02 	bl	900145aa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005da6:	f8db 3264 	ldr.w	r3, [fp, #612]	; 0x264
90005daa:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90005dae:	d006      	beq.n	90005dbe <_ZN29screen_space_invadersViewBaseC1Ev+0x532>
        lineWidthQ5 = widthQ5;
90005db0:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90005db4:	4628      	mov	r0, r5
        lineWidthQ5 = widthQ5;
90005db6:	f8cb 3264 	str.w	r3, [fp, #612]	; 0x264
        updateCachedShape();
90005dba:	f00e faf5 	bl	900143a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    bullet_enemy.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005dbe:	4628      	mov	r0, r5
90005dc0:	2101      	movs	r1, #1
90005dc2:	f00e fbfd 	bl	900145c0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005dc6:	4629      	mov	r1, r5
90005dc8:	4650      	mov	r0, sl
90005dca:	2500      	movs	r5, #0
90005dcc:	f00c fe74 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
90005dd0:	a80e      	add	r0, sp, #56	; 0x38
90005dd2:	aa0c      	add	r2, sp, #48	; 0x30
90005dd4:	ab0d      	add	r3, sp, #52	; 0x34
90005dd6:	9000      	str	r0, [sp, #0]
90005dd8:	f04f 100c 	mov.w	r0, #786444	; 0xc000c
90005ddc:	a90b      	add	r1, sp, #44	; 0x2c
90005dde:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
90005de2:	f8cb 02b0 	str.w	r0, [fp, #688]	; 0x2b0
90005de6:	200b      	movs	r0, #11
90005de8:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
90005dec:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90005df0:	2001      	movs	r0, #1
90005df2:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
90005df6:	ee19 0a90 	vmov	r0, s19
90005dfa:	f00f fd09 	bl	90015810 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005dfe:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005e02:	ee19 1a90 	vmov	r1, s19
90005e06:	4650      	mov	r0, sl
90005e08:	f8cb 42d4 	str.w	r4, [fp, #724]	; 0x2d4
        boundingArea = calculateBoundingArea();
90005e0c:	ac06      	add	r4, sp, #24
90005e0e:	f8cb 32e4 	str.w	r3, [fp, #740]	; 0x2e4
        visible = vis;
90005e12:	f88b 52d1 	strb.w	r5, [fp, #721]	; 0x2d1
90005e16:	f00c fe4f 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90005e1a:	4b60      	ldr	r3, [pc, #384]	; (90005f9c <_ZN29screen_space_invadersViewBaseC1Ev+0x710>)
        color = newColor;
90005e1c:	495e      	ldr	r1, [pc, #376]	; (90005f98 <_ZN29screen_space_invadersViewBaseC1Ev+0x70c>)
        boundingArea = calculateBoundingArea();
90005e1e:	4620      	mov	r0, r4
90005e20:	f8cb 32ec 	str.w	r3, [fp, #748]	; 0x2ec
        color = newColor;
90005e24:	f8cb 1318 	str.w	r1, [fp, #792]	; 0x318
        boundingArea = calculateBoundingArea();
90005e28:	4649      	mov	r1, r9
        linespace = space;
90005e2a:	f8ab 531c 	strh.w	r5, [fp, #796]	; 0x31c
        boundingArea = calculateBoundingArea();
90005e2e:	f00f f81b 	bl	90014e68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005e32:	4b5b      	ldr	r3, [pc, #364]	; (90005fa0 <_ZN29screen_space_invadersViewBaseC1Ev+0x714>)
90005e34:	220a      	movs	r2, #10
90005e36:	930e      	str	r3, [sp, #56]	; 0x38
90005e38:	f109 033c 	add.w	r3, r9, #60	; 0x3c
90005e3c:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
90005e40:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
90005e44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BG0R));
90005e48:	a80e      	add	r0, sp, #56	; 0x38
90005e4a:	4601      	mov	r1, r0
90005e4c:	4648      	mov	r0, r9
90005e4e:	f00f fab3 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005e52:	4649      	mov	r1, r9
90005e54:	4650      	mov	r0, sl
        visible = vis;
90005e56:	f88b 530d 	strb.w	r5, [fp, #781]	; 0x30d
90005e5a:	f00c fe2d 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90005e5e:	4a4f      	ldr	r2, [pc, #316]	; (90005f9c <_ZN29screen_space_invadersViewBaseC1Ev+0x710>)
        color = newColor;
90005e60:	494d      	ldr	r1, [pc, #308]	; (90005f98 <_ZN29screen_space_invadersViewBaseC1Ev+0x70c>)
        boundingArea = calculateBoundingArea();
90005e62:	4620      	mov	r0, r4
90005e64:	f8cb 2334 	str.w	r2, [fp, #820]	; 0x334
        color = newColor;
90005e68:	f8cb 1360 	str.w	r1, [fp, #864]	; 0x360
        boundingArea = calculateBoundingArea();
90005e6c:	4641      	mov	r1, r8
        linespace = space;
90005e6e:	f8ab 5364 	strh.w	r5, [fp, #868]	; 0x364
        boundingArea = calculateBoundingArea();
90005e72:	f00e fff9 	bl	90014e68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005e76:	4b4a      	ldr	r3, [pc, #296]	; (90005fa0 <_ZN29screen_space_invadersViewBaseC1Ev+0x714>)
90005e78:	2206      	movs	r2, #6
90005e7a:	930e      	str	r3, [sp, #56]	; 0x38
90005e7c:	f108 033c 	add.w	r3, r8, #60	; 0x3c
90005e80:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
90005e84:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
90005e88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4O0Y));
90005e8c:	a90e      	add	r1, sp, #56	; 0x38
90005e8e:	4640      	mov	r0, r8
90005e90:	f00f fa92 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005e94:	4641      	mov	r1, r8
90005e96:	4650      	mov	r0, sl
        visible = vis;
90005e98:	f88b 5355 	strb.w	r5, [fp, #853]	; 0x355
90005e9c:	f00c fe0c 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90005ea0:	4a40      	ldr	r2, [pc, #256]	; (90005fa4 <_ZN29screen_space_invadersViewBaseC1Ev+0x718>)
        color = newColor;
90005ea2:	4b41      	ldr	r3, [pc, #260]	; (90005fa8 <_ZN29screen_space_invadersViewBaseC1Ev+0x71c>)
        boundingArea = calculateBoundingArea();
90005ea4:	4639      	mov	r1, r7
90005ea6:	4620      	mov	r0, r4
90005ea8:	f8cb 237c 	str.w	r2, [fp, #892]	; 0x37c
        color = newColor;
90005eac:	f8cb 33a8 	str.w	r3, [fp, #936]	; 0x3a8
        linespace = space;
90005eb0:	f8ab 53ac 	strh.w	r5, [fp, #940]	; 0x3ac
        boundingArea = calculateBoundingArea();
90005eb4:	f00e ffd8 	bl	90014e68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005eb8:	4b39      	ldr	r3, [pc, #228]	; (90005fa0 <_ZN29screen_space_invadersViewBaseC1Ev+0x714>)
90005eba:	2209      	movs	r2, #9
90005ebc:	930e      	str	r3, [sp, #56]	; 0x38
90005ebe:	f107 033c 	add.w	r3, r7, #60	; 0x3c
90005ec2:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
90005ec6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
90005eca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_win.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I2AS));
90005ece:	a90e      	add	r1, sp, #56	; 0x38
90005ed0:	4638      	mov	r0, r7
90005ed2:	f00f fa71 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005ed6:	4639      	mov	r1, r7
90005ed8:	4650      	mov	r0, sl
        visible = vis;
90005eda:	f88b 539d 	strb.w	r5, [fp, #925]	; 0x39d
90005ede:	f00c fdeb 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90005ee2:	4a30      	ldr	r2, [pc, #192]	; (90005fa4 <_ZN29screen_space_invadersViewBaseC1Ev+0x718>)
        color = newColor;
90005ee4:	4b31      	ldr	r3, [pc, #196]	; (90005fac <_ZN29screen_space_invadersViewBaseC1Ev+0x720>)
        boundingArea = calculateBoundingArea();
90005ee6:	4631      	mov	r1, r6
90005ee8:	4620      	mov	r0, r4
90005eea:	f8cb 23c4 	str.w	r2, [fp, #964]	; 0x3c4
        color = newColor;
90005eee:	f8cb 33f0 	str.w	r3, [fp, #1008]	; 0x3f0
        linespace = space;
90005ef2:	f8ab 53f4 	strh.w	r5, [fp, #1012]	; 0x3f4
        boundingArea = calculateBoundingArea();
90005ef6:	f00e ffb7 	bl	90014e68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005efa:	4b29      	ldr	r3, [pc, #164]	; (90005fa0 <_ZN29screen_space_invadersViewBaseC1Ev+0x714>)
90005efc:	2208      	movs	r2, #8
90005efe:	930e      	str	r3, [sp, #56]	; 0x38
90005f00:	f106 033c 	add.w	r3, r6, #60	; 0x3c
90005f04:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
90005f08:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
90005f0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_lose.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2AHD));
90005f10:	a90e      	add	r1, sp, #56	; 0x38
90005f12:	4630      	mov	r0, r6
90005f14:	f00f fa50 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005f18:	4650      	mov	r0, sl
90005f1a:	4631      	mov	r1, r6
        visible = vis;
90005f1c:	f88b 53e5 	strb.w	r5, [fp, #997]	; 0x3e5
90005f20:	f00c fdca 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005f24:	4658      	mov	r0, fp
90005f26:	b011      	add	sp, #68	; 0x44
90005f28:	ecbd 8b04 	vpop	{d8-d9}
90005f2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005f30:	6890      	ldr	r0, [r2, #8]
90005f32:	4f1f      	ldr	r7, [pc, #124]	; (90005fb0 <_ZN29screen_space_invadersViewBaseC1Ev+0x724>)
90005f34:	6803      	ldr	r3, [r0, #0]
90005f36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90005f38:	42bb      	cmp	r3, r7
90005f3a:	f43f ad4e 	beq.w	900059da <_ZN29screen_space_invadersViewBaseC1Ev+0x14e>
90005f3e:	e516      	b.n	9000596e <_ZN29screen_space_invadersViewBaseC1Ev+0xe2>
90005f40:	6888      	ldr	r0, [r1, #8]
90005f42:	6802      	ldr	r2, [r0, #0]
90005f44:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90005f46:	42ba      	cmp	r2, r7
90005f48:	d115      	bne.n	90005f76 <_ZN29screen_space_invadersViewBaseC1Ev+0x6ea>
        return auxiliaryLCD;
90005f4a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90005f4c:	2800      	cmp	r0, #0
90005f4e:	f43f ad6d 	beq.w	90005a2c <_ZN29screen_space_invadersViewBaseC1Ev+0x1a0>
        bool compat = HAL::lcd().framebufferFormat() == format;
90005f52:	6802      	ldr	r2, [r0, #0]
90005f54:	f04f 0a01 	mov.w	sl, #1
90005f58:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90005f5a:	42ba      	cmp	r2, r7
90005f5c:	f43f ad66 	beq.w	90005a2c <_ZN29screen_space_invadersViewBaseC1Ev+0x1a0>
90005f60:	4790      	blx	r2
90005f62:	4b14      	ldr	r3, [pc, #80]	; (90005fb4 <_ZN29screen_space_invadersViewBaseC1Ev+0x728>)
90005f64:	2800      	cmp	r0, #0
90005f66:	bf08      	it	eq
90005f68:	f04a 0a01 	orreq.w	sl, sl, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90005f6c:	f1ba 0f00 	cmp.w	sl, #0
90005f70:	f47f ad5c 	bne.w	90005a2c <_ZN29screen_space_invadersViewBaseC1Ev+0x1a0>
90005f74:	e50d      	b.n	90005992 <_ZN29screen_space_invadersViewBaseC1Ev+0x106>
        bool compat = HAL::lcd().framebufferFormat() == format;
90005f76:	4790      	blx	r2
90005f78:	4b0f      	ldr	r3, [pc, #60]	; (90005fb8 <_ZN29screen_space_invadersViewBaseC1Ev+0x72c>)
90005f7a:	fab0 fa80 	clz	sl, r0
90005f7e:	681a      	ldr	r2, [r3, #0]
90005f80:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90005f84:	4b0b      	ldr	r3, [pc, #44]	; (90005fb4 <_ZN29screen_space_invadersViewBaseC1Ev+0x728>)
90005f86:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
90005f88:	2800      	cmp	r0, #0
90005f8a:	d0ef      	beq.n	90005f6c <_ZN29screen_space_invadersViewBaseC1Ev+0x6e0>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90005f8c:	6802      	ldr	r2, [r0, #0]
90005f8e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90005f90:	e7e3      	b.n	90005f5a <_ZN29screen_space_invadersViewBaseC1Ev+0x6ce>
90005f92:	bf00      	nop
90005f94:	001a000a 	.word	0x001a000a
90005f98:	ffff0000 	.word	0xffff0000
90005f9c:	00550076 	.word	0x00550076
90005fa0:	9002c22c 	.word	0x9002c22c
90005fa4:	008800c2 	.word	0x008800c2
90005fa8:	ff05ff16 	.word	0xff05ff16
90005fac:	ffff0505 	.word	0xffff0505
90005fb0:	90002331 	.word	0x90002331
90005fb4:	9002d784 	.word	0x9002d784
90005fb8:	24039acc 	.word	0x24039acc

90005fbc <_ZN29screen_tictactoe_gameViewBase12pos1_clickedEv>:
     * Virtual Action Handlers
     */
    virtual void pos1_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005fbc:	4770      	bx	lr
90005fbe:	bf00      	nop

90005fc0 <_ZN29screen_tictactoe_gameViewBase12pos2_clickedEv>:
    virtual void pos2_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005fc0:	4770      	bx	lr
90005fc2:	bf00      	nop

90005fc4 <_ZN29screen_tictactoe_gameViewBase12pos3_clickedEv>:
    virtual void pos3_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005fc4:	4770      	bx	lr
90005fc6:	bf00      	nop

90005fc8 <_ZN29screen_tictactoe_gameViewBase12pos4_clickedEv>:
    virtual void pos4_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005fc8:	4770      	bx	lr
90005fca:	bf00      	nop

90005fcc <_ZN29screen_tictactoe_gameViewBase12pos5_clickedEv>:
    virtual void pos5_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005fcc:	4770      	bx	lr
90005fce:	bf00      	nop

90005fd0 <_ZN29screen_tictactoe_gameViewBase12pos6_clickedEv>:
    virtual void pos6_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005fd0:	4770      	bx	lr
90005fd2:	bf00      	nop

90005fd4 <_ZN29screen_tictactoe_gameViewBase12pos7_clickedEv>:
    virtual void pos7_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005fd4:	4770      	bx	lr
90005fd6:	bf00      	nop

90005fd8 <_ZN29screen_tictactoe_gameViewBase12pos8_clickedEv>:
    virtual void pos8_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005fd8:	4770      	bx	lr
90005fda:	bf00      	nop

90005fdc <_ZN29screen_tictactoe_gameViewBase12pos9_clickedEv>:
    virtual void pos9_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005fdc:	4770      	bx	lr
90005fde:	bf00      	nop

90005fe0 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>:
}

void screen_tictactoe_gameViewBase::setupScreen()
{

}
90005fe0:	4770      	bx	lr
90005fe2:	bf00      	nop

90005fe4 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005fe4:	4770      	bx	lr
90005fe6:	bf00      	nop

90005fe8 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
90005fe8:	4770      	bx	lr
90005fea:	bf00      	nop

90005fec <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005fec:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005fee:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90005ff0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90005ff2:	6844      	ldr	r4, [r0, #4]
90005ff4:	f012 0f01 	tst.w	r2, #1
90005ff8:	eb04 0062 	add.w	r0, r4, r2, asr #1
90005ffc:	d103      	bne.n	90006006 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
90005ffe:	689b      	ldr	r3, [r3, #8]
    }
90006000:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006004:	4718      	bx	r3
90006006:	ea4f 0c62 	mov.w	ip, r2, asr #1
9000600a:	689b      	ldr	r3, [r3, #8]
9000600c:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90006010:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006014:	58d3      	ldr	r3, [r2, r3]
90006016:	4718      	bx	r3

90006018 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90006018:	6843      	ldr	r3, [r0, #4]
9000601a:	b13b      	cbz	r3, 9000602c <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
9000601c:	6883      	ldr	r3, [r0, #8]
9000601e:	b10b      	cbz	r3, 90006024 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90006020:	2001      	movs	r0, #1
    }
90006022:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90006024:	68c0      	ldr	r0, [r0, #12]
90006026:	f000 0001 	and.w	r0, r0, #1
9000602a:	4770      	bx	lr
9000602c:	4618      	mov	r0, r3
9000602e:	4770      	bx	lr

90006030 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90006030:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90006032:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90006034:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90006036:	6844      	ldr	r4, [r0, #4]
90006038:	f012 0f01 	tst.w	r2, #1
9000603c:	eb04 0062 	add.w	r0, r4, r2, asr #1
90006040:	d103      	bne.n	9000604a <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90006042:	689b      	ldr	r3, [r3, #8]
    }
90006044:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006048:	4718      	bx	r3
9000604a:	ea4f 0c62 	mov.w	ip, r2, asr #1
9000604e:	689b      	ldr	r3, [r3, #8]
90006050:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90006054:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006058:	58d3      	ldr	r3, [r2, r3]
9000605a:	4718      	bx	r3

9000605c <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
9000605c:	6843      	ldr	r3, [r0, #4]
9000605e:	b13b      	cbz	r3, 90006070 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90006060:	6883      	ldr	r3, [r0, #8]
90006062:	b10b      	cbz	r3, 90006068 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90006064:	2001      	movs	r0, #1
    }
90006066:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90006068:	68c0      	ldr	r0, [r0, #12]
9000606a:	f000 0001 	and.w	r0, r0, #1
9000606e:	4770      	bx	lr
90006070:	4618      	mov	r0, r3
90006072:	4770      	bx	lr

90006074 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006074:	b510      	push	{r4, lr}
90006076:	4604      	mov	r4, r0
90006078:	2110      	movs	r1, #16
9000607a:	f023 fab3 	bl	900295e4 <_ZdlPvj>
9000607e:	4620      	mov	r0, r4
90006080:	bd10      	pop	{r4, pc}
90006082:	bf00      	nop

90006084 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
90006084:	b510      	push	{r4, lr}
90006086:	4604      	mov	r4, r0
90006088:	2110      	movs	r1, #16
9000608a:	f023 faab 	bl	900295e4 <_ZdlPvj>
9000608e:	4620      	mov	r0, r4
90006090:	bd10      	pop	{r4, pc}
90006092:	bf00      	nop

90006094 <_ZN29screen_tictactoe_gameViewBaseD1Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
90006094:	4b03      	ldr	r3, [pc, #12]	; (900060a4 <_ZN29screen_tictactoe_gameViewBaseD1Ev+0x10>)
90006096:	b510      	push	{r4, lr}
90006098:	4604      	mov	r4, r0
9000609a:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
9000609c:	f010 fc62 	bl	90016964 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
900060a0:	4620      	mov	r0, r4
900060a2:	bd10      	pop	{r4, pc}
900060a4:	9002d12c 	.word	0x9002d12c

900060a8 <_ZN29screen_tictactoe_gameViewBaseD0Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
900060a8:	4b07      	ldr	r3, [pc, #28]	; (900060c8 <_ZN29screen_tictactoe_gameViewBaseD0Ev+0x20>)
900060aa:	b500      	push	{lr}
900060ac:	b083      	sub	sp, #12
900060ae:	6003      	str	r3, [r0, #0]
900060b0:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
900060b2:	f010 fc57 	bl	90016964 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
900060b6:	9801      	ldr	r0, [sp, #4]
900060b8:	f242 71bc 	movw	r1, #10172	; 0x27bc
900060bc:	f023 fa92 	bl	900295e4 <_ZdlPvj>
900060c0:	9801      	ldr	r0, [sp, #4]
900060c2:	b003      	add	sp, #12
900060c4:	f85d fb04 	ldr.w	pc, [sp], #4
900060c8:	9002d12c 	.word	0x9002d12c

900060cc <_ZN29screen_tictactoe_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    }
}

void screen_tictactoe_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_back)
900060cc:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
900060d0:	4288      	cmp	r0, r1
900060d2:	d000      	beq.n	900060d6 <_ZN29screen_tictactoe_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa>
900060d4:	4770      	bx	lr
{
900060d6:	b508      	push	{r3, lr}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900060d8:	f012 f946 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
        //intr_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
900060dc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoscreen_main_menuScreenNoTransition();
900060e0:	f7fe b88a 	b.w	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>

900060e4 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    if (&src == &btn_pos1)
900060e4:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
900060e8:	4299      	cmp	r1, r3
{
900060ea:	b570      	push	{r4, r5, r6, lr}
900060ec:	4604      	mov	r4, r0
900060ee:	460d      	mov	r5, r1
    if (&src == &btn_pos1)
900060f0:	d061      	beq.n	900061b6 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xd2>
    if (&src == &btn_pos2)
900060f2:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
900060f6:	429d      	cmp	r5, r3
900060f8:	d055      	beq.n	900061a6 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc2>
    if (&src == &btn_pos3)
900060fa:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
900060fe:	429d      	cmp	r5, r3
90006100:	d049      	beq.n	90006196 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xb2>
    if (&src == &btn_pos4)
90006102:	f504 7348 	add.w	r3, r4, #800	; 0x320
90006106:	429d      	cmp	r5, r3
90006108:	d03d      	beq.n	90006186 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa2>
    if (&src == &btn_pos5)
9000610a:	f504 6382 	add.w	r3, r4, #1040	; 0x410
9000610e:	429d      	cmp	r5, r3
90006110:	d031      	beq.n	90006176 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    if (&src == &btn_pos6)
90006112:	f504 7366 	add.w	r3, r4, #920	; 0x398
90006116:	429d      	cmp	r5, r3
90006118:	d025      	beq.n	90006166 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x82>
    if (&src == &btn_pos7)
9000611a:	f504 6391 	add.w	r3, r4, #1160	; 0x488
9000611e:	429d      	cmp	r5, r3
90006120:	d019      	beq.n	90006156 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x72>
    if (&src == &btn_pos8)
90006122:	f504 63af 	add.w	r3, r4, #1400	; 0x578
90006126:	429d      	cmp	r5, r3
90006128:	d00d      	beq.n	90006146 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x62>
    if (&src == &btn_pos9)
9000612a:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
9000612e:	429d      	cmp	r5, r3
90006130:	d000      	beq.n	90006134 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x50>
}
90006132:	bd70      	pop	{r4, r5, r6, pc}
        pos9_clicked();
90006134:	6823      	ldr	r3, [r4, #0]
90006136:	4a23      	ldr	r2, [pc, #140]	; (900061c4 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe0>)
90006138:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9000613a:	4293      	cmp	r3, r2
9000613c:	d0f9      	beq.n	90006132 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4e>
9000613e:	4620      	mov	r0, r4
}
90006140:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pos9_clicked();
90006144:	4718      	bx	r3
        pos8_clicked();
90006146:	6823      	ldr	r3, [r4, #0]
90006148:	4a1f      	ldr	r2, [pc, #124]	; (900061c8 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe4>)
9000614a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9000614c:	4293      	cmp	r3, r2
9000614e:	d0ec      	beq.n	9000612a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
90006150:	4620      	mov	r0, r4
90006152:	4798      	blx	r3
90006154:	e7e9      	b.n	9000612a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
        pos7_clicked();
90006156:	6823      	ldr	r3, [r4, #0]
90006158:	4a1c      	ldr	r2, [pc, #112]	; (900061cc <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe8>)
9000615a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9000615c:	4293      	cmp	r3, r2
9000615e:	d0e0      	beq.n	90006122 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
90006160:	4620      	mov	r0, r4
90006162:	4798      	blx	r3
90006164:	e7dd      	b.n	90006122 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
        pos6_clicked();
90006166:	6823      	ldr	r3, [r4, #0]
90006168:	4a19      	ldr	r2, [pc, #100]	; (900061d0 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xec>)
9000616a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9000616c:	4293      	cmp	r3, r2
9000616e:	d0d4      	beq.n	9000611a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
90006170:	4620      	mov	r0, r4
90006172:	4798      	blx	r3
90006174:	e7d1      	b.n	9000611a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
        pos5_clicked();
90006176:	6823      	ldr	r3, [r4, #0]
90006178:	4a16      	ldr	r2, [pc, #88]	; (900061d4 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf0>)
9000617a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000617c:	4293      	cmp	r3, r2
9000617e:	d0c8      	beq.n	90006112 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
90006180:	4620      	mov	r0, r4
90006182:	4798      	blx	r3
90006184:	e7c5      	b.n	90006112 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
        pos4_clicked();
90006186:	6823      	ldr	r3, [r4, #0]
90006188:	4a13      	ldr	r2, [pc, #76]	; (900061d8 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf4>)
9000618a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000618c:	4293      	cmp	r3, r2
9000618e:	d0bc      	beq.n	9000610a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
90006190:	4620      	mov	r0, r4
90006192:	4798      	blx	r3
90006194:	e7b9      	b.n	9000610a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
        pos3_clicked();
90006196:	6823      	ldr	r3, [r4, #0]
90006198:	4a10      	ldr	r2, [pc, #64]	; (900061dc <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf8>)
9000619a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000619c:	4293      	cmp	r3, r2
9000619e:	d0b0      	beq.n	90006102 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
900061a0:	4620      	mov	r0, r4
900061a2:	4798      	blx	r3
900061a4:	e7ad      	b.n	90006102 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
        pos2_clicked();
900061a6:	6823      	ldr	r3, [r4, #0]
900061a8:	4a0d      	ldr	r2, [pc, #52]	; (900061e0 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xfc>)
900061aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900061ac:	4293      	cmp	r3, r2
900061ae:	d0a4      	beq.n	900060fa <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
900061b0:	4620      	mov	r0, r4
900061b2:	4798      	blx	r3
900061b4:	e7a1      	b.n	900060fa <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
        pos1_clicked();
900061b6:	6803      	ldr	r3, [r0, #0]
900061b8:	4a0a      	ldr	r2, [pc, #40]	; (900061e4 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x100>)
900061ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900061bc:	4293      	cmp	r3, r2
900061be:	d098      	beq.n	900060f2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
900061c0:	4798      	blx	r3
900061c2:	e796      	b.n	900060f2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
900061c4:	90005fdd 	.word	0x90005fdd
900061c8:	90005fd9 	.word	0x90005fd9
900061cc:	90005fd5 	.word	0x90005fd5
900061d0:	90005fd1 	.word	0x90005fd1
900061d4:	90005fcd 	.word	0x90005fcd
900061d8:	90005fc9 	.word	0x90005fc9
900061dc:	90005fc5 	.word	0x90005fc5
900061e0:	90005fc1 	.word	0x90005fc1
900061e4:	90005fbd 	.word	0x90005fbd

900061e8 <_ZN29screen_tictactoe_gameViewBaseC1Ev>:
screen_tictactoe_gameViewBase::screen_tictactoe_gameViewBase() :
900061e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900061ec:	ed2d 8b08 	vpush	{d8-d11}
900061f0:	b0ab      	sub	sp, #172	; 0xac
900061f2:	4604      	mov	r4, r0
900061f4:	f013 fcf0 	bl	90019bd8 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
900061f8:	f44f 7380 	mov.w	r3, #256	; 0x100
    buttonCallback(this, &screen_tictactoe_gameViewBase::buttonCallbackHandler)
900061fc:	4a2a      	ldr	r2, [pc, #168]	; (900062a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc0>)
900061fe:	2500      	movs	r5, #0
90006200:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
        : Widget(), alpha(255), color(0)
90006204:	23ff      	movs	r3, #255	; 0xff
90006206:	4929      	ldr	r1, [pc, #164]	; (900062ac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc4>)
90006208:	f104 0698 	add.w	r6, r4, #152	; 0x98
9000620c:	6022      	str	r2, [r4, #0]
9000620e:	f104 026c 	add.w	r2, r4, #108	; 0x6c
90006212:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
90006216:	f64f 73ff 	movw	r3, #65535	; 0xffff
9000621a:	4610      	mov	r0, r2
9000621c:	6421      	str	r1, [r4, #64]	; 0x40
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000621e:	4f24      	ldr	r7, [pc, #144]	; (900062b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc8>)
90006220:	a928      	add	r1, sp, #160	; 0xa0
90006222:	63e5      	str	r5, [r4, #60]	; 0x3c
90006224:	ee0a 2a90 	vmov	s21, r2
        : x(0), y(0), width(0), height(0)
90006228:	6465      	str	r5, [r4, #68]	; 0x44
9000622a:	ee08 6a10 	vmov	s16, r6
          cachedAbsX(0),
9000622e:	6625      	str	r5, [r4, #96]	; 0x60
        : color(col)
90006230:	66a5      	str	r5, [r4, #104]	; 0x68
90006232:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
        : AbstractPainter()
90006236:	f8df 808c 	ldr.w	r8, [pc, #140]	; 900062c4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdc>
        : x(0), y(0), width(0), height(0)
9000623a:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
9000623e:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
90006242:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
90006246:	f00e fb65 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000624a:	4630      	mov	r0, r6
9000624c:	f00e f88c 	bl	90014368 <_ZN8touchgfx4LineC1Ev>
90006250:	683b      	ldr	r3, [r7, #0]
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90006252:	f504 7184 	add.w	r1, r4, #264	; 0x108
        : widgetWidth(0)
90006256:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
9000625a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000625e:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
90006262:	9103      	str	r1, [sp, #12]
90006264:	2a00      	cmp	r2, #0
90006266:	d02f      	beq.n	900062c8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe0>
90006268:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000626a:	2800      	cmp	r0, #0
9000626c:	f001 8238 	beq.w	900076e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x14f8>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006270:	6803      	ldr	r3, [r0, #0]
90006272:	4d10      	ldr	r5, [pc, #64]	; (900062b4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcc>)
90006274:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90006276:	42aa      	cmp	r2, r5
90006278:	d033      	beq.n	900062e2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
9000627a:	4790      	blx	r2
        return auxiliaryLCD;
9000627c:	683b      	ldr	r3, [r7, #0]
9000627e:	fab0 f680 	clz	r6, r0
90006282:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006284:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90006286:	b140      	cbz	r0, 9000629a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb2>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006288:	6803      	ldr	r3, [r0, #0]
9000628a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000628c:	42ab      	cmp	r3, r5
9000628e:	d028      	beq.n	900062e2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
90006290:	4798      	blx	r3
90006292:	2800      	cmp	r0, #0
90006294:	bf08      	it	eq
90006296:	f046 0601 	orreq.w	r6, r6, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
9000629a:	bb16      	cbnz	r6, 900062e2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
9000629c:	4b06      	ldr	r3, [pc, #24]	; (900062b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd0>)
9000629e:	212c      	movs	r1, #44	; 0x2c
900062a0:	4a06      	ldr	r2, [pc, #24]	; (900062bc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd4>)
900062a2:	4807      	ldr	r0, [pc, #28]	; (900062c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd8>)
900062a4:	f023 f9cc 	bl	90029640 <__assert_func>
900062a8:	9002d12c 	.word	0x9002d12c
900062ac:	9002db10 	.word	0x9002db10
900062b0:	24039acc 	.word	0x24039acc
900062b4:	90002331 	.word	0x90002331
900062b8:	9002cfa4 	.word	0x9002cfa4
900062bc:	9002d004 	.word	0x9002d004
900062c0:	9002d040 	.word	0x9002d040
900062c4:	9002bfc4 	.word	0x9002bfc4
        return instance->lcdRef;
900062c8:	6898      	ldr	r0, [r3, #8]
900062ca:	4de1      	ldr	r5, [pc, #900]	; (90006650 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x468>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900062cc:	6802      	ldr	r2, [r0, #0]
900062ce:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900062d0:	42aa      	cmp	r2, r5
900062d2:	d1d2      	bne.n	9000627a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
        return auxiliaryLCD;
900062d4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900062d6:	b120      	cbz	r0, 900062e2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
        bool compat = HAL::lcd().framebufferFormat() == format;
900062d8:	6803      	ldr	r3, [r0, #0]
900062da:	2601      	movs	r6, #1
900062dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900062de:	42ab      	cmp	r3, r5
900062e0:	d1d6      	bne.n	90006290 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa8>
900062e2:	4edc      	ldr	r6, [pc, #880]	; (90006654 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x46c>)
900062e4:	f04f 0b00 	mov.w	fp, #0
900062e8:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
900062ec:	f504 708e 	add.w	r0, r4, #284	; 0x11c
900062f0:	f106 0924 	add.w	r9, r6, #36	; 0x24
900062f4:	f8c4 6108 	str.w	r6, [r4, #264]	; 0x108
900062f8:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
900062fc:	ee08 0a90 	vmov	s17, r0
90006300:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
90006304:	931e      	str	r3, [sp, #120]	; 0x78
90006306:	f00e f82f 	bl	90014368 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000630a:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
9000630c:	f8a4 b190 	strh.w	fp, [r4, #400]	; 0x190
90006310:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
        : AbstractPainter()
90006314:	f8c4 818c 	str.w	r8, [r4, #396]	; 0x18c
90006318:	2a00      	cmp	r2, #0
9000631a:	f001 81ea 	beq.w	900076f2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x150a>
9000631e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006320:	b900      	cbnz	r0, 90006324 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x13c>
        return instance->lcdRef;
90006322:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90006324:	6803      	ldr	r3, [r0, #0]
90006326:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90006328:	42aa      	cmp	r2, r5
9000632a:	f041 8251 	bne.w	900077d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15e8>
9000632e:	f04f 0b00 	mov.w	fp, #0
90006332:	f504 7304 	add.w	r3, r4, #528	; 0x210
90006336:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
9000633a:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
9000633e:	f8c4 9194 	str.w	r9, [r4, #404]	; 0x194
90006342:	f8c4 b198 	str.w	fp, [r4, #408]	; 0x198
90006346:	ee09 0a10 	vmov	s18, r0
9000634a:	931d      	str	r3, [sp, #116]	; 0x74
9000634c:	f00e f80c 	bl	90014368 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90006350:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
90006352:	f8a4 b214 	strh.w	fp, [r4, #532]	; 0x214
90006356:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000635a:	f8c4 8210 	str.w	r8, [r4, #528]	; 0x210
9000635e:	2a00      	cmp	r2, #0
90006360:	f001 81e2 	beq.w	90007728 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1540>
90006364:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006366:	b900      	cbnz	r0, 9000636a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x182>
        return instance->lcdRef;
90006368:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
9000636a:	6803      	ldr	r3, [r0, #0]
9000636c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000636e:	42aa      	cmp	r2, r5
90006370:	f041 8245 	bne.w	900077fe <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1616>
90006374:	f04f 0b00 	mov.w	fp, #0
90006378:	f504 7325 	add.w	r3, r4, #660	; 0x294
9000637c:	f504 7009 	add.w	r0, r4, #548	; 0x224
90006380:	f8c4 6210 	str.w	r6, [r4, #528]	; 0x210
90006384:	f8c4 9218 	str.w	r9, [r4, #536]	; 0x218
90006388:	f8c4 b21c 	str.w	fp, [r4, #540]	; 0x21c
9000638c:	ee09 0a90 	vmov	s19, r0
90006390:	931f      	str	r3, [sp, #124]	; 0x7c
90006392:	f00d ffe9 	bl	90014368 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90006396:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
90006398:	f8a4 b298 	strh.w	fp, [r4, #664]	; 0x298
9000639c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900063a0:	f8c4 8294 	str.w	r8, [r4, #660]	; 0x294
900063a4:	2a00      	cmp	r2, #0
900063a6:	f001 81da 	beq.w	9000775e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1576>
900063aa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900063ac:	b900      	cbnz	r0, 900063b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1c8>
        return instance->lcdRef;
900063ae:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900063b0:	6803      	ldr	r3, [r0, #0]
900063b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900063b4:	42aa      	cmp	r2, r5
900063b6:	f041 8217 	bne.w	900077e8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1600>
          touchable(false),
900063ba:	f44f 7580 	mov.w	r5, #256	; 0x100
900063be:	f04f 08ff 	mov.w	r8, #255	; 0xff
        : pressed(false), alpha(255), action(0)
900063c2:	f44f 4b7f 	mov.w	fp, #65280	; 0xff00
        : T(), up(), down()
900063c6:	f8df a294 	ldr.w	sl, [pc, #660]	; 9000665c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x474>
        : Box(), borderColor(0), borderSize(0)
900063ca:	4fa3      	ldr	r7, [pc, #652]	; (90006658 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x470>)
900063cc:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
900063d0:	f8c4 6294 	str.w	r6, [r4, #660]	; 0x294
900063d4:	2600      	movs	r6, #0
900063d6:	f8c4 929c 	str.w	r9, [r4, #668]	; 0x29c
        touchable = touch;
900063da:	f240 1901 	movw	r9, #257	; 0x101
900063de:	f504 7248 	add.w	r2, r4, #800	; 0x320
        T::add(borderBox);
900063e2:	4618      	mov	r0, r3
900063e4:	f504 7137 	add.w	r1, r4, #732	; 0x2dc
          touchable(false),
900063e8:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
900063ec:	f8a4 b2d4 	strh.w	fp, [r4, #724]	; 0x2d4
900063f0:	ee0a 3a10 	vmov	s20, r3
        touchable = touch;
900063f4:	f8a4 92cc 	strh.w	r9, [r4, #716]	; 0x2cc
        : T(), up(), down()
900063f8:	f8c4 a2a8 	str.w	sl, [r4, #680]	; 0x2a8
900063fc:	f8c4 72dc 	str.w	r7, [r4, #732]	; 0x2dc
90006400:	f8c4 62a0 	str.w	r6, [r4, #672]	; 0x2a0
90006404:	f8c4 62d0 	str.w	r6, [r4, #720]	; 0x2d0
90006408:	f8c4 62d8 	str.w	r6, [r4, #728]	; 0x2d8
9000640c:	f8a4 630c 	strh.w	r6, [r4, #780]	; 0x30c
90006410:	f884 8302 	strb.w	r8, [r4, #770]	; 0x302
90006414:	e9c4 66ab 	strd	r6, r6, [r4, #684]	; 0x2ac
90006418:	e9c4 66ad 	strd	r6, r6, [r4, #692]	; 0x2b4
          nextSibling(0),
9000641c:	e9c4 66af 	strd	r6, r6, [r4, #700]	; 0x2bc
          cachedAbsX(0),
90006420:	e9c4 66b1 	strd	r6, r6, [r4, #708]	; 0x2c4
          nextSibling(0),
90006424:	e9c4 66bc 	strd	r6, r6, [r4, #752]	; 0x2f0
          cachedAbsX(0),
90006428:	e9c4 66be 	strd	r6, r6, [r4, #760]	; 0x2f8
        : color(col)
9000642c:	e9c4 66c1 	strd	r6, r6, [r4, #772]	; 0x304
        : color(0)
90006430:	e9c4 66c4 	strd	r6, r6, [r4, #784]	; 0x310
90006434:	e9c4 66c6 	strd	r6, r6, [r4, #792]	; 0x318
        rect.x = x;
90006438:	e9c4 66b8 	strd	r6, r6, [r4, #736]	; 0x2e0
9000643c:	e9c4 66ba 	strd	r6, r6, [r4, #744]	; 0x2e8
90006440:	9204      	str	r2, [sp, #16]
        T::add(borderBox);
90006442:	f00c fb39 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006446:	f504 7366 	add.w	r3, r4, #920	; 0x398
9000644a:	f504 7155 	add.w	r1, r4, #852	; 0x354
9000644e:	f8a4 b34c 	strh.w	fp, [r4, #844]	; 0x34c
90006452:	9305      	str	r3, [sp, #20]
        touchable = touch;
90006454:	f8a4 9344 	strh.w	r9, [r4, #836]	; 0x344
        : T(), up(), down()
90006458:	f8c4 a320 	str.w	sl, [r4, #800]	; 0x320
          touchable(false),
9000645c:	f8a4 5378 	strh.w	r5, [r4, #888]	; 0x378
90006460:	f8c4 7354 	str.w	r7, [r4, #852]	; 0x354
90006464:	f8c4 6348 	str.w	r6, [r4, #840]	; 0x348
90006468:	f8c4 6350 	str.w	r6, [r4, #848]	; 0x350
9000646c:	f884 837a 	strb.w	r8, [r4, #890]	; 0x37a
        : color(col)
90006470:	f8c4 637c 	str.w	r6, [r4, #892]	; 0x37c
90006474:	f8c4 6380 	str.w	r6, [r4, #896]	; 0x380
90006478:	f8a4 6384 	strh.w	r6, [r4, #900]	; 0x384
        : x(0), y(0), width(0), height(0)
9000647c:	e9c4 66c9 	strd	r6, r6, [r4, #804]	; 0x324
90006480:	e9c4 66cb 	strd	r6, r6, [r4, #812]	; 0x32c
          nextSibling(0),
90006484:	e9c4 66cd 	strd	r6, r6, [r4, #820]	; 0x334
          cachedAbsX(0),
90006488:	e9c4 66cf 	strd	r6, r6, [r4, #828]	; 0x33c
          nextSibling(0),
9000648c:	e9c4 66da 	strd	r6, r6, [r4, #872]	; 0x368
          cachedAbsX(0),
90006490:	e9c4 66dc 	strd	r6, r6, [r4, #880]	; 0x370
        : color(0)
90006494:	e9c4 66e2 	strd	r6, r6, [r4, #904]	; 0x388
90006498:	e9c4 66e4 	strd	r6, r6, [r4, #912]	; 0x390
        rect.x = x;
9000649c:	e9c4 66d6 	strd	r6, r6, [r4, #856]	; 0x358
900064a0:	e9c4 66d8 	strd	r6, r6, [r4, #864]	; 0x360
        T::add(borderBox);
900064a4:	9804      	ldr	r0, [sp, #16]
900064a6:	f00c fb07 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900064aa:	f504 6282 	add.w	r2, r4, #1040	; 0x410
900064ae:	f504 7173 	add.w	r1, r4, #972	; 0x3cc
900064b2:	f8a4 b3c4 	strh.w	fp, [r4, #964]	; 0x3c4
900064b6:	9206      	str	r2, [sp, #24]
        touchable = touch;
900064b8:	f8a4 93bc 	strh.w	r9, [r4, #956]	; 0x3bc
        : T(), up(), down()
900064bc:	f8c4 a398 	str.w	sl, [r4, #920]	; 0x398
          touchable(false),
900064c0:	f8a4 53f0 	strh.w	r5, [r4, #1008]	; 0x3f0
900064c4:	f8c4 73cc 	str.w	r7, [r4, #972]	; 0x3cc
900064c8:	f8c4 63c0 	str.w	r6, [r4, #960]	; 0x3c0
900064cc:	f8c4 63c8 	str.w	r6, [r4, #968]	; 0x3c8
900064d0:	f884 83f2 	strb.w	r8, [r4, #1010]	; 0x3f2
        : color(col)
900064d4:	f8c4 63f4 	str.w	r6, [r4, #1012]	; 0x3f4
900064d8:	f8c4 63f8 	str.w	r6, [r4, #1016]	; 0x3f8
900064dc:	f8a4 63fc 	strh.w	r6, [r4, #1020]	; 0x3fc
        : color(0)
900064e0:	f8c4 6400 	str.w	r6, [r4, #1024]	; 0x400
900064e4:	f8c4 6404 	str.w	r6, [r4, #1028]	; 0x404
900064e8:	f8c4 6408 	str.w	r6, [r4, #1032]	; 0x408
900064ec:	f8c4 640c 	str.w	r6, [r4, #1036]	; 0x40c
        : x(0), y(0), width(0), height(0)
900064f0:	e9c4 66e7 	strd	r6, r6, [r4, #924]	; 0x39c
900064f4:	e9c4 66e9 	strd	r6, r6, [r4, #932]	; 0x3a4
          nextSibling(0),
900064f8:	e9c4 66eb 	strd	r6, r6, [r4, #940]	; 0x3ac
          cachedAbsX(0),
900064fc:	e9c4 66ed 	strd	r6, r6, [r4, #948]	; 0x3b4
          nextSibling(0),
90006500:	e9c4 66f8 	strd	r6, r6, [r4, #992]	; 0x3e0
          cachedAbsX(0),
90006504:	e9c4 66fa 	strd	r6, r6, [r4, #1000]	; 0x3e8
        rect.x = x;
90006508:	e9c4 66f4 	strd	r6, r6, [r4, #976]	; 0x3d0
9000650c:	e9c4 66f6 	strd	r6, r6, [r4, #984]	; 0x3d8
        T::add(borderBox);
90006510:	9805      	ldr	r0, [sp, #20]
90006512:	f00c fad1 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006516:	f504 6391 	add.w	r3, r4, #1160	; 0x488
9000651a:	f204 4144 	addw	r1, r4, #1092	; 0x444
9000651e:	f8a4 b43c 	strh.w	fp, [r4, #1084]	; 0x43c
90006522:	9307      	str	r3, [sp, #28]
        touchable = touch;
90006524:	f8a4 9434 	strh.w	r9, [r4, #1076]	; 0x434
        : T(), up(), down()
90006528:	f8c4 a410 	str.w	sl, [r4, #1040]	; 0x410
          touchable(false),
9000652c:	f8a4 5468 	strh.w	r5, [r4, #1128]	; 0x468
90006530:	f8c4 7444 	str.w	r7, [r4, #1092]	; 0x444
90006534:	f8c4 6414 	str.w	r6, [r4, #1044]	; 0x414
90006538:	f8c4 6418 	str.w	r6, [r4, #1048]	; 0x418
9000653c:	f8c4 641c 	str.w	r6, [r4, #1052]	; 0x41c
90006540:	f8c4 6420 	str.w	r6, [r4, #1056]	; 0x420
          parent(0),
90006544:	f8c4 6424 	str.w	r6, [r4, #1060]	; 0x424
          nextSibling(0),
90006548:	f8c4 6428 	str.w	r6, [r4, #1064]	; 0x428
          nextDrawChainElement(0),
9000654c:	f8c4 642c 	str.w	r6, [r4, #1068]	; 0x42c
          cachedAbsX(0),
90006550:	f8c4 6430 	str.w	r6, [r4, #1072]	; 0x430
90006554:	f8c4 6438 	str.w	r6, [r4, #1080]	; 0x438
90006558:	f8c4 6440 	str.w	r6, [r4, #1088]	; 0x440
          parent(0),
9000655c:	f8c4 6458 	str.w	r6, [r4, #1112]	; 0x458
          nextSibling(0),
90006560:	f8c4 645c 	str.w	r6, [r4, #1116]	; 0x45c
          nextDrawChainElement(0),
90006564:	f8c4 6460 	str.w	r6, [r4, #1120]	; 0x460
          cachedAbsX(0),
90006568:	f8c4 6464 	str.w	r6, [r4, #1124]	; 0x464
9000656c:	f884 846a 	strb.w	r8, [r4, #1130]	; 0x46a
        : color(col)
90006570:	f8c4 646c 	str.w	r6, [r4, #1132]	; 0x46c
90006574:	f8c4 6470 	str.w	r6, [r4, #1136]	; 0x470
90006578:	f8a4 6474 	strh.w	r6, [r4, #1140]	; 0x474
        : color(0)
9000657c:	f8c4 6478 	str.w	r6, [r4, #1144]	; 0x478
90006580:	f8c4 647c 	str.w	r6, [r4, #1148]	; 0x47c
90006584:	f8c4 6480 	str.w	r6, [r4, #1152]	; 0x480
90006588:	f8c4 6484 	str.w	r6, [r4, #1156]	; 0x484
        rect.x = x;
9000658c:	f8c4 6448 	str.w	r6, [r4, #1096]	; 0x448
90006590:	f8c4 644c 	str.w	r6, [r4, #1100]	; 0x44c
90006594:	f8c4 6450 	str.w	r6, [r4, #1104]	; 0x450
90006598:	f8c4 6454 	str.w	r6, [r4, #1108]	; 0x454
        T::add(borderBox);
9000659c:	9806      	ldr	r0, [sp, #24]
9000659e:	f00c fa8b 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900065a2:	f504 62a0 	add.w	r2, r4, #1280	; 0x500
900065a6:	f204 41bc 	addw	r1, r4, #1212	; 0x4bc
900065aa:	f8a4 b4b4 	strh.w	fp, [r4, #1204]	; 0x4b4
900065ae:	9208      	str	r2, [sp, #32]
        touchable = touch;
900065b0:	f8a4 94ac 	strh.w	r9, [r4, #1196]	; 0x4ac
        : T(), up(), down()
900065b4:	f8c4 a488 	str.w	sl, [r4, #1160]	; 0x488
          touchable(false),
900065b8:	f8a4 54e0 	strh.w	r5, [r4, #1248]	; 0x4e0
900065bc:	f8c4 74bc 	str.w	r7, [r4, #1212]	; 0x4bc
        : x(0), y(0), width(0), height(0)
900065c0:	f8c4 648c 	str.w	r6, [r4, #1164]	; 0x48c
900065c4:	f8c4 6490 	str.w	r6, [r4, #1168]	; 0x490
900065c8:	f8c4 6494 	str.w	r6, [r4, #1172]	; 0x494
900065cc:	f8c4 6498 	str.w	r6, [r4, #1176]	; 0x498
          parent(0),
900065d0:	f8c4 649c 	str.w	r6, [r4, #1180]	; 0x49c
          nextSibling(0),
900065d4:	f8c4 64a0 	str.w	r6, [r4, #1184]	; 0x4a0
          nextDrawChainElement(0),
900065d8:	f8c4 64a4 	str.w	r6, [r4, #1188]	; 0x4a4
          cachedAbsX(0),
900065dc:	f8c4 64a8 	str.w	r6, [r4, #1192]	; 0x4a8
900065e0:	f8c4 64b0 	str.w	r6, [r4, #1200]	; 0x4b0
900065e4:	f8c4 64b8 	str.w	r6, [r4, #1208]	; 0x4b8
          parent(0),
900065e8:	f8c4 64d0 	str.w	r6, [r4, #1232]	; 0x4d0
          nextSibling(0),
900065ec:	f8c4 64d4 	str.w	r6, [r4, #1236]	; 0x4d4
          nextDrawChainElement(0),
900065f0:	f8c4 64d8 	str.w	r6, [r4, #1240]	; 0x4d8
          cachedAbsX(0),
900065f4:	f8c4 64dc 	str.w	r6, [r4, #1244]	; 0x4dc
900065f8:	f884 84e2 	strb.w	r8, [r4, #1250]	; 0x4e2
        : color(col)
900065fc:	f8c4 64e4 	str.w	r6, [r4, #1252]	; 0x4e4
90006600:	f8c4 64e8 	str.w	r6, [r4, #1256]	; 0x4e8
90006604:	f8a4 64ec 	strh.w	r6, [r4, #1260]	; 0x4ec
        : color(0)
90006608:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
9000660c:	f8c4 64f4 	str.w	r6, [r4, #1268]	; 0x4f4
90006610:	f8c4 64f8 	str.w	r6, [r4, #1272]	; 0x4f8
90006614:	f8c4 64fc 	str.w	r6, [r4, #1276]	; 0x4fc
        rect.x = x;
90006618:	f8c4 64c0 	str.w	r6, [r4, #1216]	; 0x4c0
9000661c:	f8c4 64c4 	str.w	r6, [r4, #1220]	; 0x4c4
90006620:	f8c4 64c8 	str.w	r6, [r4, #1224]	; 0x4c8
90006624:	f8c4 64cc 	str.w	r6, [r4, #1228]	; 0x4cc
        T::add(borderBox);
90006628:	9807      	ldr	r0, [sp, #28]
9000662a:	f00c fa45 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000662e:	f504 63af 	add.w	r3, r4, #1400	; 0x578
90006632:	f204 5134 	addw	r1, r4, #1332	; 0x534
90006636:	f8a4 b52c 	strh.w	fp, [r4, #1324]	; 0x52c
9000663a:	9309      	str	r3, [sp, #36]	; 0x24
        touchable = touch;
9000663c:	f8a4 9524 	strh.w	r9, [r4, #1316]	; 0x524
        : T(), up(), down()
90006640:	f8c4 a500 	str.w	sl, [r4, #1280]	; 0x500
          touchable(false),
90006644:	f8a4 5558 	strh.w	r5, [r4, #1368]	; 0x558
90006648:	f8c4 7534 	str.w	r7, [r4, #1332]	; 0x534
9000664c:	e008      	b.n	90006660 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x478>
9000664e:	bf00      	nop
90006650:	90002331 	.word	0x90002331
90006654:	9002d760 	.word	0x9002d760
90006658:	9002db78 	.word	0x9002db78
9000665c:	9002cc90 	.word	0x9002cc90
        : x(0), y(0), width(0), height(0)
90006660:	f8c4 6504 	str.w	r6, [r4, #1284]	; 0x504
90006664:	f8c4 6508 	str.w	r6, [r4, #1288]	; 0x508
90006668:	f8c4 650c 	str.w	r6, [r4, #1292]	; 0x50c
9000666c:	f8c4 6510 	str.w	r6, [r4, #1296]	; 0x510
          parent(0),
90006670:	f8c4 6514 	str.w	r6, [r4, #1300]	; 0x514
          nextSibling(0),
90006674:	f8c4 6518 	str.w	r6, [r4, #1304]	; 0x518
          nextDrawChainElement(0),
90006678:	f8c4 651c 	str.w	r6, [r4, #1308]	; 0x51c
          cachedAbsX(0),
9000667c:	f8c4 6520 	str.w	r6, [r4, #1312]	; 0x520
90006680:	f8c4 6528 	str.w	r6, [r4, #1320]	; 0x528
90006684:	f8c4 6530 	str.w	r6, [r4, #1328]	; 0x530
          parent(0),
90006688:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
          nextSibling(0),
9000668c:	f8c4 654c 	str.w	r6, [r4, #1356]	; 0x54c
          nextDrawChainElement(0),
90006690:	f8c4 6550 	str.w	r6, [r4, #1360]	; 0x550
          cachedAbsX(0),
90006694:	f8c4 6554 	str.w	r6, [r4, #1364]	; 0x554
90006698:	f884 855a 	strb.w	r8, [r4, #1370]	; 0x55a
        : color(col)
9000669c:	f8c4 655c 	str.w	r6, [r4, #1372]	; 0x55c
900066a0:	f8c4 6560 	str.w	r6, [r4, #1376]	; 0x560
900066a4:	f8a4 6564 	strh.w	r6, [r4, #1380]	; 0x564
        : color(0)
900066a8:	f8c4 6568 	str.w	r6, [r4, #1384]	; 0x568
900066ac:	f8c4 656c 	str.w	r6, [r4, #1388]	; 0x56c
900066b0:	f8c4 6570 	str.w	r6, [r4, #1392]	; 0x570
900066b4:	f8c4 6574 	str.w	r6, [r4, #1396]	; 0x574
        rect.x = x;
900066b8:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
900066bc:	f8c4 653c 	str.w	r6, [r4, #1340]	; 0x53c
900066c0:	f8c4 6540 	str.w	r6, [r4, #1344]	; 0x540
900066c4:	f8c4 6544 	str.w	r6, [r4, #1348]	; 0x544
        T::add(borderBox);
900066c8:	9808      	ldr	r0, [sp, #32]
900066ca:	f00c f9f5 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900066ce:	f504 62be 	add.w	r2, r4, #1520	; 0x5f0
900066d2:	f204 51ac 	addw	r1, r4, #1452	; 0x5ac
900066d6:	f8a4 b5a4 	strh.w	fp, [r4, #1444]	; 0x5a4
900066da:	920a      	str	r2, [sp, #40]	; 0x28
        touchable = touch;
900066dc:	f8a4 959c 	strh.w	r9, [r4, #1436]	; 0x59c
        : T(), up(), down()
900066e0:	f8c4 a578 	str.w	sl, [r4, #1400]	; 0x578
          touchable(false),
900066e4:	f8a4 55d0 	strh.w	r5, [r4, #1488]	; 0x5d0
900066e8:	f8c4 75ac 	str.w	r7, [r4, #1452]	; 0x5ac
        : x(0), y(0), width(0), height(0)
900066ec:	f8c4 657c 	str.w	r6, [r4, #1404]	; 0x57c
900066f0:	f8c4 6580 	str.w	r6, [r4, #1408]	; 0x580
900066f4:	f8c4 6584 	str.w	r6, [r4, #1412]	; 0x584
900066f8:	f8c4 6588 	str.w	r6, [r4, #1416]	; 0x588
          parent(0),
900066fc:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
          nextSibling(0),
90006700:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
          nextDrawChainElement(0),
90006704:	f8c4 6594 	str.w	r6, [r4, #1428]	; 0x594
          cachedAbsX(0),
90006708:	f8c4 6598 	str.w	r6, [r4, #1432]	; 0x598
9000670c:	f8c4 65a0 	str.w	r6, [r4, #1440]	; 0x5a0
90006710:	f8c4 65a8 	str.w	r6, [r4, #1448]	; 0x5a8
          parent(0),
90006714:	f8c4 65c0 	str.w	r6, [r4, #1472]	; 0x5c0
          nextSibling(0),
90006718:	f8c4 65c4 	str.w	r6, [r4, #1476]	; 0x5c4
          nextDrawChainElement(0),
9000671c:	f8c4 65c8 	str.w	r6, [r4, #1480]	; 0x5c8
          cachedAbsX(0),
90006720:	f8c4 65cc 	str.w	r6, [r4, #1484]	; 0x5cc
90006724:	f884 85d2 	strb.w	r8, [r4, #1490]	; 0x5d2
        : color(col)
90006728:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
9000672c:	f8c4 65d8 	str.w	r6, [r4, #1496]	; 0x5d8
90006730:	f8a4 65dc 	strh.w	r6, [r4, #1500]	; 0x5dc
        : color(0)
90006734:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
90006738:	f8c4 65e4 	str.w	r6, [r4, #1508]	; 0x5e4
9000673c:	f8c4 65e8 	str.w	r6, [r4, #1512]	; 0x5e8
90006740:	f8c4 65ec 	str.w	r6, [r4, #1516]	; 0x5ec
        rect.x = x;
90006744:	f8c4 65b0 	str.w	r6, [r4, #1456]	; 0x5b0
90006748:	f8c4 65b4 	str.w	r6, [r4, #1460]	; 0x5b4
9000674c:	f8c4 65b8 	str.w	r6, [r4, #1464]	; 0x5b8
90006750:	f8c4 65bc 	str.w	r6, [r4, #1468]	; 0x5bc
        T::add(borderBox);
90006754:	9809      	ldr	r0, [sp, #36]	; 0x24
90006756:	f00c f9af 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000675a:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
9000675e:	f204 6124 	addw	r1, r4, #1572	; 0x624
90006762:	f8a4 b61c 	strh.w	fp, [r4, #1564]	; 0x61c
90006766:	930b      	str	r3, [sp, #44]	; 0x2c
        touchable = touch;
90006768:	f8a4 9614 	strh.w	r9, [r4, #1556]	; 0x614
        : T(), up(), down()
9000676c:	f8c4 a5f0 	str.w	sl, [r4, #1520]	; 0x5f0
          touchable(false),
90006770:	f8a4 5648 	strh.w	r5, [r4, #1608]	; 0x648
90006774:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
        : x(0), y(0), width(0), height(0)
90006778:	f8c4 65f4 	str.w	r6, [r4, #1524]	; 0x5f4
9000677c:	f8c4 65f8 	str.w	r6, [r4, #1528]	; 0x5f8
90006780:	f8c4 65fc 	str.w	r6, [r4, #1532]	; 0x5fc
90006784:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
          parent(0),
90006788:	f8c4 6604 	str.w	r6, [r4, #1540]	; 0x604
          nextSibling(0),
9000678c:	f8c4 6608 	str.w	r6, [r4, #1544]	; 0x608
          nextDrawChainElement(0),
90006790:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
          cachedAbsX(0),
90006794:	f8c4 6610 	str.w	r6, [r4, #1552]	; 0x610
90006798:	f8c4 6618 	str.w	r6, [r4, #1560]	; 0x618
9000679c:	f8c4 6620 	str.w	r6, [r4, #1568]	; 0x620
          parent(0),
900067a0:	f8c4 6638 	str.w	r6, [r4, #1592]	; 0x638
          nextSibling(0),
900067a4:	f8c4 663c 	str.w	r6, [r4, #1596]	; 0x63c
          nextDrawChainElement(0),
900067a8:	f8c4 6640 	str.w	r6, [r4, #1600]	; 0x640
          cachedAbsX(0),
900067ac:	f8c4 6644 	str.w	r6, [r4, #1604]	; 0x644
900067b0:	f884 864a 	strb.w	r8, [r4, #1610]	; 0x64a
        : color(col)
900067b4:	f8c4 664c 	str.w	r6, [r4, #1612]	; 0x64c
900067b8:	f8c4 6650 	str.w	r6, [r4, #1616]	; 0x650
900067bc:	f8a4 6654 	strh.w	r6, [r4, #1620]	; 0x654
        : color(0)
900067c0:	f8c4 6658 	str.w	r6, [r4, #1624]	; 0x658
900067c4:	f8c4 665c 	str.w	r6, [r4, #1628]	; 0x65c
900067c8:	f8c4 6660 	str.w	r6, [r4, #1632]	; 0x660
900067cc:	f8c4 6664 	str.w	r6, [r4, #1636]	; 0x664
        rect.x = x;
900067d0:	f8c4 6628 	str.w	r6, [r4, #1576]	; 0x628
900067d4:	f8c4 662c 	str.w	r6, [r4, #1580]	; 0x62c
900067d8:	f8c4 6630 	str.w	r6, [r4, #1584]	; 0x630
900067dc:	f8c4 6634 	str.w	r6, [r4, #1588]	; 0x634
        T::add(borderBox);
900067e0:	980a      	ldr	r0, [sp, #40]	; 0x28
900067e2:	f00c f969 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900067e6:	f204 619c 	addw	r1, r4, #1692	; 0x69c
900067ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
900067ec:	f8a4 b694 	strh.w	fp, [r4, #1684]	; 0x694
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900067f0:	f04f 3bff 	mov.w	fp, #4294967295
        touchable = touch;
900067f4:	f8a4 968c 	strh.w	r9, [r4, #1676]	; 0x68c
900067f8:	f504 69dc 	add.w	r9, r4, #1760	; 0x6e0
        : T(), up(), down()
900067fc:	f8c4 a668 	str.w	sl, [r4, #1640]	; 0x668
90006800:	f104 0a04 	add.w	sl, r4, #4
90006804:	f8c4 769c 	str.w	r7, [r4, #1692]	; 0x69c
90006808:	f64f 77ff 	movw	r7, #65535	; 0xffff
          touchable(false),
9000680c:	f8a4 56c0 	strh.w	r5, [r4, #1728]	; 0x6c0
        : x(0), y(0), width(0), height(0)
90006810:	f8c4 666c 	str.w	r6, [r4, #1644]	; 0x66c
90006814:	f8c4 6670 	str.w	r6, [r4, #1648]	; 0x670
90006818:	f8c4 6674 	str.w	r6, [r4, #1652]	; 0x674
9000681c:	f8c4 6678 	str.w	r6, [r4, #1656]	; 0x678
          parent(0),
90006820:	f8c4 667c 	str.w	r6, [r4, #1660]	; 0x67c
          nextSibling(0),
90006824:	f8c4 6680 	str.w	r6, [r4, #1664]	; 0x680
          nextDrawChainElement(0),
90006828:	f8c4 6684 	str.w	r6, [r4, #1668]	; 0x684
          cachedAbsX(0),
9000682c:	f8c4 6688 	str.w	r6, [r4, #1672]	; 0x688
90006830:	f8c4 6690 	str.w	r6, [r4, #1680]	; 0x690
90006834:	f8c4 6698 	str.w	r6, [r4, #1688]	; 0x698
          parent(0),
90006838:	f8c4 66b0 	str.w	r6, [r4, #1712]	; 0x6b0
          nextSibling(0),
9000683c:	f8c4 66b4 	str.w	r6, [r4, #1716]	; 0x6b4
          nextDrawChainElement(0),
90006840:	f8c4 66b8 	str.w	r6, [r4, #1720]	; 0x6b8
          cachedAbsX(0),
90006844:	f8c4 66bc 	str.w	r6, [r4, #1724]	; 0x6bc
90006848:	f884 86c2 	strb.w	r8, [r4, #1730]	; 0x6c2
        : color(col)
9000684c:	f8c4 66c4 	str.w	r6, [r4, #1732]	; 0x6c4
90006850:	f8c4 66c8 	str.w	r6, [r4, #1736]	; 0x6c8
90006854:	f8a4 66cc 	strh.w	r6, [r4, #1740]	; 0x6cc
        : color(0)
90006858:	f8c4 66d0 	str.w	r6, [r4, #1744]	; 0x6d0
9000685c:	f8c4 66d4 	str.w	r6, [r4, #1748]	; 0x6d4
90006860:	f8c4 66d8 	str.w	r6, [r4, #1752]	; 0x6d8
90006864:	f8c4 66dc 	str.w	r6, [r4, #1756]	; 0x6dc
        rect.x = x;
90006868:	f8c4 66a0 	str.w	r6, [r4, #1696]	; 0x6a0
9000686c:	f8c4 66a4 	str.w	r6, [r4, #1700]	; 0x6a4
90006870:	f8c4 66a8 	str.w	r6, [r4, #1704]	; 0x6a8
90006874:	f8c4 66ac 	str.w	r6, [r4, #1708]	; 0x6ac
        T::add(borderBox);
90006878:	f00c f91e 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000687c:	f204 730c 	addw	r3, r4, #1804	; 0x70c
90006880:	a928      	add	r1, sp, #160	; 0xa0
90006882:	4648      	mov	r0, r9
90006884:	930c      	str	r3, [sp, #48]	; 0x30
90006886:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
9000688a:	f00e f843 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000688e:	f504 62e7 	add.w	r2, r4, #1848	; 0x738
90006892:	a928      	add	r1, sp, #160	; 0xa0
90006894:	980c      	ldr	r0, [sp, #48]	; 0x30
90006896:	920d      	str	r2, [sp, #52]	; 0x34
90006898:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
9000689c:	f00e f83a 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068a0:	f204 7364 	addw	r3, r4, #1892	; 0x764
900068a4:	a928      	add	r1, sp, #160	; 0xa0
900068a6:	980d      	ldr	r0, [sp, #52]	; 0x34
900068a8:	930e      	str	r3, [sp, #56]	; 0x38
900068aa:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900068ae:	f00e f831 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068b2:	f504 62f2 	add.w	r2, r4, #1936	; 0x790
900068b6:	a928      	add	r1, sp, #160	; 0xa0
900068b8:	980e      	ldr	r0, [sp, #56]	; 0x38
900068ba:	920f      	str	r2, [sp, #60]	; 0x3c
900068bc:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900068c0:	f00e f828 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068c4:	f204 73bc 	addw	r3, r4, #1980	; 0x7bc
900068c8:	a928      	add	r1, sp, #160	; 0xa0
900068ca:	980f      	ldr	r0, [sp, #60]	; 0x3c
900068cc:	9310      	str	r3, [sp, #64]	; 0x40
900068ce:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900068d2:	f00e f81f 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068d6:	f504 62fd 	add.w	r2, r4, #2024	; 0x7e8
900068da:	a928      	add	r1, sp, #160	; 0xa0
900068dc:	9810      	ldr	r0, [sp, #64]	; 0x40
900068de:	9211      	str	r2, [sp, #68]	; 0x44
900068e0:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900068e4:	f00e f816 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068e8:	f604 0314 	addw	r3, r4, #2068	; 0x814
900068ec:	a928      	add	r1, sp, #160	; 0xa0
900068ee:	9811      	ldr	r0, [sp, #68]	; 0x44
900068f0:	9312      	str	r3, [sp, #72]	; 0x48
900068f2:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900068f6:	f00e f80d 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068fa:	f504 6204 	add.w	r2, r4, #2112	; 0x840
900068fe:	a928      	add	r1, sp, #160	; 0xa0
90006900:	9812      	ldr	r0, [sp, #72]	; 0x48
90006902:	9213      	str	r2, [sp, #76]	; 0x4c
90006904:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006908:	f00e f804 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000690c:	f604 036c 	addw	r3, r4, #2156	; 0x86c
90006910:	a928      	add	r1, sp, #160	; 0xa0
90006912:	9813      	ldr	r0, [sp, #76]	; 0x4c
90006914:	9314      	str	r3, [sp, #80]	; 0x50
90006916:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
9000691a:	f00d fffb 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000691e:	f604 0298 	addw	r2, r4, #2200	; 0x898
90006922:	a928      	add	r1, sp, #160	; 0xa0
90006924:	9814      	ldr	r0, [sp, #80]	; 0x50
90006926:	9215      	str	r2, [sp, #84]	; 0x54
90006928:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
9000692c:	f00d fff2 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006930:	f604 03c4 	addw	r3, r4, #2244	; 0x8c4
90006934:	a928      	add	r1, sp, #160	; 0xa0
90006936:	9815      	ldr	r0, [sp, #84]	; 0x54
90006938:	9316      	str	r3, [sp, #88]	; 0x58
9000693a:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
9000693e:	f00d ffe9 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006942:	f504 620f 	add.w	r2, r4, #2288	; 0x8f0
90006946:	a928      	add	r1, sp, #160	; 0xa0
90006948:	9816      	ldr	r0, [sp, #88]	; 0x58
9000694a:	9217      	str	r2, [sp, #92]	; 0x5c
9000694c:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006950:	f00d ffe0 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006954:	f604 131c 	addw	r3, r4, #2332	; 0x91c
90006958:	a928      	add	r1, sp, #160	; 0xa0
9000695a:	9817      	ldr	r0, [sp, #92]	; 0x5c
9000695c:	9318      	str	r3, [sp, #96]	; 0x60
9000695e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006962:	f00d ffd7 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006966:	f604 1248 	addw	r2, r4, #2376	; 0x948
9000696a:	a928      	add	r1, sp, #160	; 0xa0
9000696c:	9818      	ldr	r0, [sp, #96]	; 0x60
9000696e:	9219      	str	r2, [sp, #100]	; 0x64
90006970:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006974:	f00d ffce 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006978:	f604 1374 	addw	r3, r4, #2420	; 0x974
9000697c:	a928      	add	r1, sp, #160	; 0xa0
9000697e:	9819      	ldr	r0, [sp, #100]	; 0x64
90006980:	931a      	str	r3, [sp, #104]	; 0x68
90006982:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006986:	f00d ffc5 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000698a:	f504 621a 	add.w	r2, r4, #2464	; 0x9a0
9000698e:	a928      	add	r1, sp, #160	; 0xa0
90006990:	981a      	ldr	r0, [sp, #104]	; 0x68
90006992:	921b      	str	r2, [sp, #108]	; 0x6c
90006994:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006998:	f00d ffbc 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000699c:	f604 13cc 	addw	r3, r4, #2508	; 0x9cc
900069a0:	a928      	add	r1, sp, #160	; 0xa0
900069a2:	981b      	ldr	r0, [sp, #108]	; 0x6c
900069a4:	931c      	str	r3, [sp, #112]	; 0x70
900069a6:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900069aa:	f00d ffb3 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900069ae:	a928      	add	r1, sp, #160	; 0xa0
900069b0:	981c      	ldr	r0, [sp, #112]	; 0x70
900069b2:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900069b6:	f00d ffad 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900069ba:	4be9      	ldr	r3, [pc, #932]	; (90006d60 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb78>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900069bc:	4ae9      	ldr	r2, [pc, #932]	; (90006d64 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb7c>)
900069be:	f8c4 39f8 	str.w	r3, [r4, #2552]	; 0x9f8
900069c2:	f8c4 2a24 	str.w	r2, [r4, #2596]	; 0xa24
900069c6:	f604 226c 	addw	r2, r4, #2668	; 0xa6c
900069ca:	4be7      	ldr	r3, [pc, #924]	; (90006d68 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb80>)
900069cc:	4610      	mov	r0, r2
          touchable(false),
900069ce:	f8a4 5a1c 	strh.w	r5, [r4, #2588]	; 0xa1c
900069d2:	f8a4 5a48 	strh.w	r5, [r4, #2632]	; 0xa48
900069d6:	ee0b 2a10 	vmov	s22, r2
900069da:	f8c4 3a4c 	str.w	r3, [r4, #2636]	; 0xa4c
        : x(0), y(0), width(0), height(0)
900069de:	f8c4 69fc 	str.w	r6, [r4, #2556]	; 0x9fc
900069e2:	f8c4 6a00 	str.w	r6, [r4, #2560]	; 0xa00
900069e6:	f8c4 6a04 	str.w	r6, [r4, #2564]	; 0xa04
900069ea:	f8c4 6a08 	str.w	r6, [r4, #2568]	; 0xa08
          parent(0),
900069ee:	f8c4 6a0c 	str.w	r6, [r4, #2572]	; 0xa0c
          nextSibling(0),
900069f2:	f8c4 6a10 	str.w	r6, [r4, #2576]	; 0xa10
          nextDrawChainElement(0),
900069f6:	f8c4 6a14 	str.w	r6, [r4, #2580]	; 0xa14
          cachedAbsX(0),
900069fa:	f8c4 6a18 	str.w	r6, [r4, #2584]	; 0xa18
900069fe:	f884 7a1e 	strb.w	r7, [r4, #2590]	; 0xa1e
        : color(col)
90006a02:	f8c4 6a20 	str.w	r6, [r4, #2592]	; 0xa20
        : x(0), y(0), width(0), height(0)
90006a06:	f8c4 6a28 	str.w	r6, [r4, #2600]	; 0xa28
90006a0a:	f8c4 6a2c 	str.w	r6, [r4, #2604]	; 0xa2c
90006a0e:	f8c4 6a30 	str.w	r6, [r4, #2608]	; 0xa30
90006a12:	f8c4 6a34 	str.w	r6, [r4, #2612]	; 0xa34
          parent(0),
90006a16:	f8c4 6a38 	str.w	r6, [r4, #2616]	; 0xa38
          nextSibling(0),
90006a1a:	f8c4 6a3c 	str.w	r6, [r4, #2620]	; 0xa3c
          nextDrawChainElement(0),
90006a1e:	f8c4 6a40 	str.w	r6, [r4, #2624]	; 0xa40
          cachedAbsX(0),
90006a22:	f8c4 6a44 	str.w	r6, [r4, #2628]	; 0xa44
90006a26:	f8a4 7a50 	strh.w	r7, [r4, #2640]	; 0xa50
        : color(col)
90006a2a:	f8c4 6a54 	str.w	r6, [r4, #2644]	; 0xa54
90006a2e:	f8a4 6a58 	strh.w	r6, [r4, #2648]	; 0xa58
90006a32:	f8c4 8a5a 	str.w	r8, [r4, #2650]	; 0xa5a
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006a36:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
              text(0)
90006a3a:	f8c4 6a68 	str.w	r6, [r4, #2664]	; 0xa68
90006a3e:	f8c4 ba64 	str.w	fp, [r4, #2660]	; 0xa64
90006a42:	f00e ff7b 	bl	9001593c <_ZN8touchgfx14ButtonWithIconC1Ev>
90006a46:	4bc8      	ldr	r3, [pc, #800]	; (90006d68 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb80>)
        : TextAreaWithWildcardBase(), wc1(0)
90006a48:	49c8      	ldr	r1, [pc, #800]	; (90006d6c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb84>)
        : pobject(pObject), pmemfun(pmemfun_1)
90006a4a:	f504 5200 	add.w	r2, r4, #8192	; 0x2000
90006a4e:	f8c4 3ad0 	str.w	r3, [r4, #2768]	; 0xad0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90006a52:	f604 307c 	addw	r0, r4, #2940	; 0xb7c
90006a56:	f8c4 3b1c 	str.w	r3, [r4, #2844]	; 0xb1c
          touchable(false),
90006a5a:	f8a4 5acc 	strh.w	r5, [r4, #2764]	; 0xacc
90006a5e:	f8a4 5b18 	strh.w	r5, [r4, #2840]	; 0xb18
90006a62:	f8c4 1aa8 	str.w	r1, [r4, #2728]	; 0xaa8
90006a66:	f8a4 7b20 	strh.w	r7, [r4, #2848]	; 0xb20
        : x(0), y(0), width(0), height(0)
90006a6a:	f8c4 6aac 	str.w	r6, [r4, #2732]	; 0xaac
90006a6e:	f8c4 6ab0 	str.w	r6, [r4, #2736]	; 0xab0
90006a72:	f8c4 6ab4 	str.w	r6, [r4, #2740]	; 0xab4
90006a76:	f8c4 6ab8 	str.w	r6, [r4, #2744]	; 0xab8
          parent(0),
90006a7a:	f8c4 6abc 	str.w	r6, [r4, #2748]	; 0xabc
          nextSibling(0),
90006a7e:	f8c4 6ac0 	str.w	r6, [r4, #2752]	; 0xac0
          nextDrawChainElement(0),
90006a82:	f8c4 6ac4 	str.w	r6, [r4, #2756]	; 0xac4
          cachedAbsX(0),
90006a86:	f8c4 6ac8 	str.w	r6, [r4, #2760]	; 0xac8
90006a8a:	f8a4 bad4 	strh.w	fp, [r4, #2772]	; 0xad4
        : color(col)
90006a8e:	f8c4 6ad8 	str.w	r6, [r4, #2776]	; 0xad8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006a92:	f8a4 6adc 	strh.w	r6, [r4, #2780]	; 0xadc
90006a96:	f8c4 8ade 	str.w	r8, [r4, #2782]	; 0xade
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006a9a:	f8c4 6ae4 	str.w	r6, [r4, #2788]	; 0xae4
90006a9e:	f8c4 bae8 	str.w	fp, [r4, #2792]	; 0xae8
              text(0)
90006aa2:	f8c4 6aec 	str.w	r6, [r4, #2796]	; 0xaec
90006aa6:	f8c4 6af0 	str.w	r6, [r4, #2800]	; 0xaf0
        : x(0), y(0), width(0), height(0)
90006aaa:	f8c4 6af8 	str.w	r6, [r4, #2808]	; 0xaf8
90006aae:	f8c4 6afc 	str.w	r6, [r4, #2812]	; 0xafc
90006ab2:	f8c4 6b00 	str.w	r6, [r4, #2816]	; 0xb00
90006ab6:	f8c4 6b04 	str.w	r6, [r4, #2820]	; 0xb04
          parent(0),
90006aba:	f8c4 6b08 	str.w	r6, [r4, #2824]	; 0xb08
          nextSibling(0),
90006abe:	f8c4 6b0c 	str.w	r6, [r4, #2828]	; 0xb0c
          nextDrawChainElement(0),
90006ac2:	f8c4 6b10 	str.w	r6, [r4, #2832]	; 0xb10
          cachedAbsX(0),
90006ac6:	f8c4 6b14 	str.w	r6, [r4, #2836]	; 0xb14
        : color(col)
90006aca:	f8c4 6b24 	str.w	r6, [r4, #2852]	; 0xb24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006ace:	f8a4 6b28 	strh.w	r6, [r4, #2856]	; 0xb28
90006ad2:	f8c4 8b2a 	str.w	r8, [r4, #2858]	; 0xb2a
90006ad6:	f8c4 1af4 	str.w	r1, [r4, #2804]	; 0xaf4
90006ada:	49a5      	ldr	r1, [pc, #660]	; (90006d70 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb88>)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006adc:	f8c4 6b30 	str.w	r6, [r4, #2864]	; 0xb30
90006ae0:	f8c4 bb34 	str.w	fp, [r4, #2868]	; 0xb34
              text(0)
90006ae4:	f8c4 6b38 	str.w	r6, [r4, #2872]	; 0xb38
90006ae8:	f8c4 6b3c 	str.w	r6, [r4, #2876]	; 0xb3c
90006aec:	f8c2 179c 	str.w	r1, [r2, #1948]	; 0x79c
90006af0:	49a0      	ldr	r1, [pc, #640]	; (90006d74 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb8c>)
90006af2:	f8c2 47a0 	str.w	r4, [r2, #1952]	; 0x7a0
90006af6:	f8c2 17a4 	str.w	r1, [r2, #1956]	; 0x7a4
90006afa:	499f      	ldr	r1, [pc, #636]	; (90006d78 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb90>)
90006afc:	f8c2 67a8 	str.w	r6, [r2, #1960]	; 0x7a8
90006b00:	f8c2 17ac 	str.w	r1, [r2, #1964]	; 0x7ac
90006b04:	499d      	ldr	r1, [pc, #628]	; (90006d7c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb94>)
90006b06:	f8c2 47b0 	str.w	r4, [r2, #1968]	; 0x7b0
90006b0a:	f8c2 17b4 	str.w	r1, [r2, #1972]	; 0x7b4
90006b0e:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
90006b12:	f8c2 67b8 	str.w	r6, [r2, #1976]	; 0x7b8
90006b16:	f00f ff1b 	bl	90016950 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90006b1a:	4d99      	ldr	r5, [pc, #612]	; (90006d80 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
        color = newColor;
90006b1c:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
90006b20:	f104 0140 	add.w	r1, r4, #64	; 0x40
90006b24:	4650      	mov	r0, sl
90006b26:	64a5      	str	r5, [r4, #72]	; 0x48
90006b28:	66a2      	str	r2, [r4, #104]	; 0x68
90006b2a:	6466      	str	r6, [r4, #68]	; 0x44
90006b2c:	f00b ffc4 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006b30:	2204      	movs	r2, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90006b32:	a928      	add	r1, sp, #160	; 0xa0
90006b34:	ee1a 0a90 	vmov	r0, s21
90006b38:	f8ad 20a0 	strh.w	r2, [sp, #160]	; 0xa0
90006b3c:	f00e ff25 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006b40:	4631      	mov	r1, r6
90006b42:	ee1a 0a90 	vmov	r0, s21
90006b46:	e9c4 651c 	strd	r6, r5, [r4, #112]	; 0x70
90006b4a:	f00d fe9e 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006b4e:	ee1a 1a90 	vmov	r1, s21
90006b52:	4650      	mov	r0, sl
90006b54:	4d8b      	ldr	r5, [pc, #556]	; (90006d84 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
90006b56:	f00b ffaf 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006b5a:	9b03      	ldr	r3, [sp, #12]
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006b5c:	22a0      	movs	r2, #160	; 0xa0
90006b5e:	ee18 0a10 	vmov	r0, s16
90006b62:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
90006b66:	4b88      	ldr	r3, [pc, #544]	; (90006d88 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
90006b68:	4611      	mov	r1, r2
90006b6a:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
90006b6e:	f8a4 b118 	strh.w	fp, [r4, #280]	; 0x118
90006b72:	e9c4 5327 	strd	r5, r3, [r4, #156]	; 0x9c
90006b76:	f00d fd0d 	bl	90014594 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006b7a:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90006b7e:	21a0      	movs	r1, #160	; 0xa0
90006b80:	ee18 0a10 	vmov	r0, s16
90006b84:	f00d fd11 	bl	900145aa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006b88:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
    buttonCallback(this, &screen_tictactoe_gameViewBase::buttonCallbackHandler)
90006b8c:	f604 2224 	addw	r2, r4, #2596	; 0xa24
90006b90:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006b94:	9203      	str	r2, [sp, #12]
90006b96:	d007      	beq.n	90006ba8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x9c0>
        lineWidthQ5 = widthQ5;
90006b98:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006b9c:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
90006ba0:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
90006ba4:	f00d fc00 	bl	900143a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006ba8:	2101      	movs	r1, #1
90006baa:	ee18 0a10 	vmov	r0, s16
90006bae:	f00d fd07 	bl	900145c0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006bb2:	ee18 1a10 	vmov	r1, s16
90006bb6:	4650      	mov	r0, sl
90006bb8:	f00b ff7e 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006bbc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006bbe:	22a0      	movs	r2, #160	; 0xa0
90006bc0:	4872      	ldr	r0, [pc, #456]	; (90006d8c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba4>)
90006bc2:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
90006bc6:	f04f 33ff 	mov.w	r3, #4294967295
90006bca:	4611      	mov	r1, r2
90006bcc:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
90006bd0:	f8a4 319c 	strh.w	r3, [r4, #412]	; 0x19c
90006bd4:	4b6c      	ldr	r3, [pc, #432]	; (90006d88 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
90006bd6:	e9c4 0348 	strd	r0, r3, [r4, #288]	; 0x120
90006bda:	ee18 0a90 	vmov	r0, s17
90006bde:	f00d fcd9 	bl	90014594 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006be2:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90006be6:	21a0      	movs	r1, #160	; 0xa0
90006be8:	ee18 0a90 	vmov	r0, s17
90006bec:	f00d fcdd 	bl	900145aa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006bf0:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
90006bf4:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006bf8:	d007      	beq.n	90006c0a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa22>
        lineWidthQ5 = widthQ5;
90006bfa:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006bfe:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
90006c02:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
        updateCachedShape();
90006c06:	f00d fbcf 	bl	900143a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006c0a:	2101      	movs	r1, #1
90006c0c:	ee18 0a90 	vmov	r0, s17
90006c10:	f00d fcd6 	bl	900145c0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006c14:	ee18 1a90 	vmov	r1, s17
90006c18:	4650      	mov	r0, sl
90006c1a:	f00b ff4d 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006c1e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006c20:	22a0      	movs	r2, #160	; 0xa0
90006c22:	495b      	ldr	r1, [pc, #364]	; (90006d90 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba8>)
90006c24:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
90006c28:	f04f 33ff 	mov.w	r3, #4294967295
90006c2c:	ee19 0a10 	vmov	r0, s18
90006c30:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
90006c34:	f8a4 3220 	strh.w	r3, [r4, #544]	; 0x220
90006c38:	4b56      	ldr	r3, [pc, #344]	; (90006d94 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbac>)
90006c3a:	e9c4 1369 	strd	r1, r3, [r4, #420]	; 0x1a4
90006c3e:	4611      	mov	r1, r2
90006c40:	f00d fca8 	bl	90014594 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006c44:	22a0      	movs	r2, #160	; 0xa0
90006c46:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90006c4a:	ee19 0a10 	vmov	r0, s18
90006c4e:	f00d fcac 	bl	900145aa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006c52:	f8d4 31dc 	ldr.w	r3, [r4, #476]	; 0x1dc
90006c56:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006c5a:	d007      	beq.n	90006c6c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa84>
        lineWidthQ5 = widthQ5;
90006c5c:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006c60:	ee19 0a10 	vmov	r0, s18
        lineWidthQ5 = widthQ5;
90006c64:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
        updateCachedShape();
90006c68:	f00d fb9e 	bl	900143a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006c6c:	2101      	movs	r1, #1
90006c6e:	ee19 0a10 	vmov	r0, s18
90006c72:	f00d fca5 	bl	900145c0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006c76:	ee19 1a10 	vmov	r1, s18
90006c7a:	4650      	mov	r0, sl
90006c7c:	f8df b130 	ldr.w	fp, [pc, #304]	; 90006db0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc8>
90006c80:	f00b ff1a 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006c84:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006c86:	22a0      	movs	r2, #160	; 0xa0
90006c88:	ee19 0a90 	vmov	r0, s19
90006c8c:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
90006c90:	f04f 33ff 	mov.w	r3, #4294967295
90006c94:	4611      	mov	r1, r2
90006c96:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
90006c9a:	f8a4 32a4 	strh.w	r3, [r4, #676]	; 0x2a4
90006c9e:	4b3e      	ldr	r3, [pc, #248]	; (90006d98 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb0>)
90006ca0:	e9c4 b38a 	strd	fp, r3, [r4, #552]	; 0x228
90006ca4:	f00d fc76 	bl	90014594 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006ca8:	22a0      	movs	r2, #160	; 0xa0
90006caa:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90006cae:	ee19 0a90 	vmov	r0, s19
90006cb2:	f00d fc7a 	bl	900145aa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006cb6:	f8d4 3260 	ldr.w	r3, [r4, #608]	; 0x260
90006cba:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006cbe:	d007      	beq.n	90006cd0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xae8>
        lineWidthQ5 = widthQ5;
90006cc0:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006cc4:	ee19 0a90 	vmov	r0, s19
        lineWidthQ5 = widthQ5;
90006cc8:	f8c4 3260 	str.w	r3, [r4, #608]	; 0x260
        updateCachedShape();
90006ccc:	f00d fb6c 	bl	900143a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006cd0:	2101      	movs	r1, #1
90006cd2:	ee19 0a90 	vmov	r0, s19
90006cd6:	f00d fc73 	bl	900145c0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006cda:	ee19 1a90 	vmov	r1, s19
90006cde:	4650      	mov	r0, sl
90006ce0:	f04f 0800 	mov.w	r8, #0
90006ce4:	f00b fee8 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006ce8:	4b2c      	ldr	r3, [pc, #176]	; (90006d9c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
        borderUp = borderColorReleased;
90006cea:	492d      	ldr	r1, [pc, #180]	; (90006da0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb8>)
        down = colorPressed;
90006cec:	4a2d      	ldr	r2, [pc, #180]	; (90006da4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbbc>)
        borderUp = borderColorReleased;
90006cee:	f8c4 1318 	str.w	r1, [r4, #792]	; 0x318
        borderDown = borderColorPressed;
90006cf2:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90006cf6:	f894 02d4 	ldrb.w	r0, [r4, #724]	; 0x2d4
        borderDown = borderColorPressed;
90006cfa:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90006cfe:	e9c4 83b8 	strd	r8, r3, [r4, #736]	; 0x2e0
        borderSize = size;
90006d02:	2305      	movs	r3, #5
90006d04:	f8c4 131c 	str.w	r1, [r4, #796]	; 0x31c
        handlePressedUpdated();
90006d08:	f8d4 12a8 	ldr.w	r1, [r4, #680]	; 0x2a8
90006d0c:	f8a4 330c 	strh.w	r3, [r4, #780]	; 0x30c
        down = colorPressed;
90006d10:	4b25      	ldr	r3, [pc, #148]	; (90006da8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc0>)
90006d12:	e9c4 32c4 	strd	r3, r2, [r4, #784]	; 0x310
        borderBox.setColor(T::getPressed() ? down : up);
90006d16:	2800      	cmp	r0, #0
90006d18:	f000 8556 	beq.w	900077c8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15e0>
90006d1c:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006d1e:	f504 7247 	add.w	r2, r4, #796	; 0x31c
90006d22:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
90006d26:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006d28:	4e20      	ldr	r6, [pc, #128]	; (90006dac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc4>)
90006d2a:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
        alpha = newAlpha;
90006d2e:	2300      	movs	r3, #0
90006d30:	f884 32d5 	strb.w	r3, [r4, #725]	; 0x2d5
        handleAlphaUpdated();
90006d34:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006d38:	42b2      	cmp	r2, r6
90006d3a:	f040 8580 	bne.w	9000783e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1656>
        alpha = newAlpha;
90006d3e:	f884 3302 	strb.w	r3, [r4, #770]	; 0x302
    btn_pos1.setAction(flexButtonCallback);
90006d42:	f242 759c 	movw	r5, #10140	; 0x279c
90006d46:	4b15      	ldr	r3, [pc, #84]	; (90006d9c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
90006d48:	f8df c068 	ldr.w	ip, [pc, #104]	; 90006db4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbcc>
90006d4c:	ee1a 1a10 	vmov	r1, s20
90006d50:	4425      	add	r5, r4
90006d52:	4650      	mov	r0, sl
90006d54:	e9c4 c3ab 	strd	ip, r3, [r4, #684]	; 0x2ac
        action = &callback;
90006d58:	f8c4 52d8 	str.w	r5, [r4, #728]	; 0x2d8
90006d5c:	e02c      	b.n	90006db8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbd0>
90006d5e:	bf00      	nop
90006d60:	9002db10 	.word	0x9002db10
90006d64:	9002da80 	.word	0x9002da80
90006d68:	9002c22c 	.word	0x9002c22c
90006d6c:	9002cebc 	.word	0x9002cebc
90006d70:	9002d0fc 	.word	0x9002d0fc
90006d74:	900060e5 	.word	0x900060e5
90006d78:	9002d114 	.word	0x9002d114
90006d7c:	900060cd 	.word	0x900060cd
90006d80:	011001e0 	.word	0x011001e0
90006d84:	0007009c 	.word	0x0007009c
90006d88:	0102000f 	.word	0x0102000f
90006d8c:	00070123 	.word	0x00070123
90006d90:	004e0038 	.word	0x004e0038
90006d94:	000f0167 	.word	0x000f0167
90006d98:	000f0166 	.word	0x000f0166
90006d9c:	00470064 	.word	0x00470064
90006da0:	ff003366 	.word	0xff003366
90006da4:	ff0099cc 	.word	0xff0099cc
90006da8:	ff006699 	.word	0xff006699
90006dac:	90004715 	.word	0x90004715
90006db0:	00b90038 	.word	0x00b90038
90006db4:	00070038 	.word	0x00070038
90006db8:	f00b fe7e 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006dbc:	4bd8      	ldr	r3, [pc, #864]	; (90007120 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
        borderUp = borderColorReleased;
90006dbe:	49d9      	ldr	r1, [pc, #868]	; (90007124 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006dc0:	f04f 0e00 	mov.w	lr, #0
        down = colorPressed;
90006dc4:	4ad8      	ldr	r2, [pc, #864]	; (90007128 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
90006dc6:	f8c4 1390 	str.w	r1, [r4, #912]	; 0x390
        borderDown = borderColorPressed;
90006dca:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90006dce:	f894 034c 	ldrb.w	r0, [r4, #844]	; 0x34c
        borderDown = borderColorPressed;
90006dd2:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90006dd6:	e9c4 e3d6 	strd	lr, r3, [r4, #856]	; 0x358
        borderSize = size;
90006dda:	2305      	movs	r3, #5
90006ddc:	f8c4 1394 	str.w	r1, [r4, #916]	; 0x394
        handlePressedUpdated();
90006de0:	f8d4 1320 	ldr.w	r1, [r4, #800]	; 0x320
90006de4:	f8a4 3384 	strh.w	r3, [r4, #900]	; 0x384
        down = colorPressed;
90006de8:	4bd0      	ldr	r3, [pc, #832]	; (9000712c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
90006dea:	e9c4 32e2 	strd	r3, r2, [r4, #904]	; 0x388
        borderBox.setColor(T::getPressed() ? down : up);
90006dee:	2800      	cmp	r0, #0
90006df0:	f000 84e6 	beq.w	900077c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15d8>
        color = newColor;
90006df4:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006df6:	f504 7265 	add.w	r2, r4, #916	; 0x394
90006dfa:	f8c4 337c 	str.w	r3, [r4, #892]	; 0x37c
90006dfe:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006e00:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
        alpha = newAlpha;
90006e04:	2300      	movs	r3, #0
90006e06:	f884 334d 	strb.w	r3, [r4, #845]	; 0x34d
        handleAlphaUpdated();
90006e0a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006e0e:	42b2      	cmp	r2, r6
90006e10:	f040 8511 	bne.w	90007836 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x164e>
        alpha = newAlpha;
90006e14:	f884 337a 	strb.w	r3, [r4, #890]	; 0x37a
90006e18:	4bc1      	ldr	r3, [pc, #772]	; (90007120 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
90006e1a:	2700      	movs	r7, #0
90006e1c:	48c4      	ldr	r0, [pc, #784]	; (90007130 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
90006e1e:	9904      	ldr	r1, [sp, #16]
        action = &callback;
90006e20:	f8c4 5350 	str.w	r5, [r4, #848]	; 0x350
90006e24:	e9c4 03c9 	strd	r0, r3, [r4, #804]	; 0x324
90006e28:	4650      	mov	r0, sl
90006e2a:	f00b fe45 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006e2e:	4bc1      	ldr	r3, [pc, #772]	; (90007134 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
        borderUp = borderColorReleased;
90006e30:	49bc      	ldr	r1, [pc, #752]	; (90007124 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
        down = colorPressed;
90006e32:	4abd      	ldr	r2, [pc, #756]	; (90007128 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
90006e34:	f8c4 1408 	str.w	r1, [r4, #1032]	; 0x408
        borderDown = borderColorPressed;
90006e38:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90006e3c:	f894 03c4 	ldrb.w	r0, [r4, #964]	; 0x3c4
        borderDown = borderColorPressed;
90006e40:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006e44:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
90006e48:	e9c4 73f4 	strd	r7, r3, [r4, #976]	; 0x3d0
        borderSize = size;
90006e4c:	2305      	movs	r3, #5
        borderDown = borderColorPressed;
90006e4e:	f8c4 140c 	str.w	r1, [r4, #1036]	; 0x40c
        handlePressedUpdated();
90006e52:	f8d4 1398 	ldr.w	r1, [r4, #920]	; 0x398
90006e56:	f8a4 33fc 	strh.w	r3, [r4, #1020]	; 0x3fc
        up = colorReleased;
90006e5a:	4bb4      	ldr	r3, [pc, #720]	; (9000712c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
90006e5c:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
        borderBox.setColor(T::getPressed() ? down : up);
90006e60:	2800      	cmp	r0, #0
90006e62:	f000 84a9 	beq.w	900077b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15d0>
        color = newColor;
90006e66:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006e68:	f204 420c 	addw	r2, r4, #1036	; 0x40c
90006e6c:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
90006e70:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006e72:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
        alpha = newAlpha;
90006e76:	2300      	movs	r3, #0
90006e78:	f884 33c5 	strb.w	r3, [r4, #965]	; 0x3c5
        handleAlphaUpdated();
90006e7c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006e80:	42b2      	cmp	r2, r6
90006e82:	f040 84d4 	bne.w	9000782e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1646>
        alpha = newAlpha;
90006e86:	f884 33f2 	strb.w	r3, [r4, #1010]	; 0x3f2
90006e8a:	4aab      	ldr	r2, [pc, #684]	; (90007138 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf50>)
90006e8c:	4650      	mov	r0, sl
90006e8e:	4ba9      	ldr	r3, [pc, #676]	; (90007134 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
90006e90:	9905      	ldr	r1, [sp, #20]
        action = &callback;
90006e92:	f8c4 53c8 	str.w	r5, [r4, #968]	; 0x3c8
90006e96:	e9c4 23e7 	strd	r2, r3, [r4, #924]	; 0x39c
90006e9a:	f00b fe0d 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006e9e:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90006ea0:	49a0      	ldr	r1, [pc, #640]	; (90007124 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006ea2:	f8c4 3448 	str.w	r3, [r4, #1096]	; 0x448
90006ea6:	4ba5      	ldr	r3, [pc, #660]	; (9000713c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf54>)
90006ea8:	f8c4 1480 	str.w	r1, [r4, #1152]	; 0x480
        borderDown = borderColorPressed;
90006eac:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006eb0:	f8c4 344c 	str.w	r3, [r4, #1100]	; 0x44c
        borderSize = size;
90006eb4:	2305      	movs	r3, #5
90006eb6:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006eba:	4a9b      	ldr	r2, [pc, #620]	; (90007128 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006ebc:	f8a4 3474 	strh.w	r3, [r4, #1140]	; 0x474
        borderBox.setColor(T::getPressed() ? down : up);
90006ec0:	f894 043c 	ldrb.w	r0, [r4, #1084]	; 0x43c
        up = colorReleased;
90006ec4:	4b99      	ldr	r3, [pc, #612]	; (9000712c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderDown = borderColorPressed;
90006ec6:	f8c4 1484 	str.w	r1, [r4, #1156]	; 0x484
        up = colorReleased;
90006eca:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        handlePressedUpdated();
90006ece:	f8d4 1410 	ldr.w	r1, [r4, #1040]	; 0x410
        down = colorPressed;
90006ed2:	f8c4 247c 	str.w	r2, [r4, #1148]	; 0x47c
        borderBox.setColor(T::getPressed() ? down : up);
90006ed6:	2800      	cmp	r0, #0
90006ed8:	f000 846a 	beq.w	900077b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15c8>
        color = newColor;
90006edc:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006ede:	f204 4284 	addw	r2, r4, #1156	; 0x484
90006ee2:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
90006ee6:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006ee8:	f8c4 3470 	str.w	r3, [r4, #1136]	; 0x470
        alpha = newAlpha;
90006eec:	2300      	movs	r3, #0
90006eee:	f884 343d 	strb.w	r3, [r4, #1085]	; 0x43d
        handleAlphaUpdated();
90006ef2:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006ef6:	42b2      	cmp	r2, r6
90006ef8:	f040 8495 	bne.w	90007826 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x163e>
        alpha = newAlpha;
90006efc:	f884 346a 	strb.w	r3, [r4, #1130]	; 0x46a
90006f00:	4b8f      	ldr	r3, [pc, #572]	; (90007140 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf58>)
90006f02:	4650      	mov	r0, sl
90006f04:	9906      	ldr	r1, [sp, #24]
90006f06:	f8c4 3414 	str.w	r3, [r4, #1044]	; 0x414
90006f0a:	4b8c      	ldr	r3, [pc, #560]	; (9000713c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf54>)
        action = &callback;
90006f0c:	f8c4 5440 	str.w	r5, [r4, #1088]	; 0x440
90006f10:	f8c4 3418 	str.w	r3, [r4, #1048]	; 0x418
90006f14:	f00b fdd0 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006f18:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90006f1a:	4982      	ldr	r1, [pc, #520]	; (90007124 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006f1c:	f8c4 34c0 	str.w	r3, [r4, #1216]	; 0x4c0
90006f20:	4b88      	ldr	r3, [pc, #544]	; (90007144 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf5c>)
90006f22:	f8c4 14f8 	str.w	r1, [r4, #1272]	; 0x4f8
        borderDown = borderColorPressed;
90006f26:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006f2a:	f8c4 34c4 	str.w	r3, [r4, #1220]	; 0x4c4
        borderSize = size;
90006f2e:	2305      	movs	r3, #5
90006f30:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006f34:	4a7c      	ldr	r2, [pc, #496]	; (90007128 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006f36:	f8a4 34ec 	strh.w	r3, [r4, #1260]	; 0x4ec
        borderBox.setColor(T::getPressed() ? down : up);
90006f3a:	f894 04b4 	ldrb.w	r0, [r4, #1204]	; 0x4b4
        up = colorReleased;
90006f3e:	4b7b      	ldr	r3, [pc, #492]	; (9000712c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderDown = borderColorPressed;
90006f40:	f8c4 14fc 	str.w	r1, [r4, #1276]	; 0x4fc
        up = colorReleased;
90006f44:	f8c4 34f0 	str.w	r3, [r4, #1264]	; 0x4f0
        handlePressedUpdated();
90006f48:	f8d4 1488 	ldr.w	r1, [r4, #1160]	; 0x488
        down = colorPressed;
90006f4c:	f8c4 24f4 	str.w	r2, [r4, #1268]	; 0x4f4
        borderBox.setColor(T::getPressed() ? down : up);
90006f50:	2800      	cmp	r0, #0
90006f52:	f000 8429 	beq.w	900077a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15c0>
        color = newColor;
90006f56:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006f58:	f204 42fc 	addw	r2, r4, #1276	; 0x4fc
90006f5c:	f8c4 34e4 	str.w	r3, [r4, #1252]	; 0x4e4
90006f60:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006f62:	f8c4 34e8 	str.w	r3, [r4, #1256]	; 0x4e8
        alpha = newAlpha;
90006f66:	2300      	movs	r3, #0
90006f68:	f884 34b5 	strb.w	r3, [r4, #1205]	; 0x4b5
        handleAlphaUpdated();
90006f6c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006f70:	42b2      	cmp	r2, r6
90006f72:	f040 8454 	bne.w	9000781e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1636>
        alpha = newAlpha;
90006f76:	f884 34e2 	strb.w	r3, [r4, #1250]	; 0x4e2
90006f7a:	4b73      	ldr	r3, [pc, #460]	; (90007148 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf60>)
90006f7c:	4650      	mov	r0, sl
90006f7e:	9907      	ldr	r1, [sp, #28]
90006f80:	f8c4 348c 	str.w	r3, [r4, #1164]	; 0x48c
90006f84:	4b6f      	ldr	r3, [pc, #444]	; (90007144 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf5c>)
        action = &callback;
90006f86:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
90006f8a:	f8c4 3490 	str.w	r3, [r4, #1168]	; 0x490
90006f8e:	f00b fd93 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006f92:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90006f94:	4963      	ldr	r1, [pc, #396]	; (90007124 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006f96:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
90006f9a:	4b6c      	ldr	r3, [pc, #432]	; (9000714c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
90006f9c:	f8c4 1570 	str.w	r1, [r4, #1392]	; 0x570
        borderDown = borderColorPressed;
90006fa0:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006fa4:	f8c4 353c 	str.w	r3, [r4, #1340]	; 0x53c
        borderSize = size;
90006fa8:	2305      	movs	r3, #5
90006faa:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006fae:	4a5e      	ldr	r2, [pc, #376]	; (90007128 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006fb0:	f8a4 3564 	strh.w	r3, [r4, #1380]	; 0x564
        borderBox.setColor(T::getPressed() ? down : up);
90006fb4:	f894 052c 	ldrb.w	r0, [r4, #1324]	; 0x52c
        up = colorReleased;
90006fb8:	4b5c      	ldr	r3, [pc, #368]	; (9000712c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderDown = borderColorPressed;
90006fba:	f8c4 1574 	str.w	r1, [r4, #1396]	; 0x574
        up = colorReleased;
90006fbe:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
        handlePressedUpdated();
90006fc2:	f8d4 1500 	ldr.w	r1, [r4, #1280]	; 0x500
        down = colorPressed;
90006fc6:	f8c4 256c 	str.w	r2, [r4, #1388]	; 0x56c
        borderBox.setColor(T::getPressed() ? down : up);
90006fca:	2800      	cmp	r0, #0
90006fcc:	f000 83e9 	beq.w	900077a2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15ba>
        color = newColor;
90006fd0:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006fd2:	f204 5274 	addw	r2, r4, #1396	; 0x574
90006fd6:	f8c4 355c 	str.w	r3, [r4, #1372]	; 0x55c
90006fda:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006fdc:	f8c4 3560 	str.w	r3, [r4, #1376]	; 0x560
        alpha = newAlpha;
90006fe0:	2300      	movs	r3, #0
90006fe2:	f884 352d 	strb.w	r3, [r4, #1325]	; 0x52d
        handleAlphaUpdated();
90006fe6:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006fea:	42b2      	cmp	r2, r6
90006fec:	f040 8413 	bne.w	90007816 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x162e>
        alpha = newAlpha;
90006ff0:	f884 355a 	strb.w	r3, [r4, #1370]	; 0x55a
90006ff4:	4b56      	ldr	r3, [pc, #344]	; (90007150 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf68>)
90006ff6:	4650      	mov	r0, sl
90006ff8:	4e54      	ldr	r6, [pc, #336]	; (9000714c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
90006ffa:	9908      	ldr	r1, [sp, #32]
90006ffc:	f8c4 3504 	str.w	r3, [r4, #1284]	; 0x504
        action = &callback;
90007000:	f8c4 5530 	str.w	r5, [r4, #1328]	; 0x530
90007004:	f8c4 6508 	str.w	r6, [r4, #1288]	; 0x508
90007008:	f00b fd56 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
9000700c:	4945      	ldr	r1, [pc, #276]	; (90007124 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
9000700e:	2300      	movs	r3, #0
        down = colorPressed;
90007010:	4a45      	ldr	r2, [pc, #276]	; (90007128 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
90007012:	f8c4 15e8 	str.w	r1, [r4, #1512]	; 0x5e8
        borderDown = borderColorPressed;
90007016:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
9000701a:	f8c4 35b0 	str.w	r3, [r4, #1456]	; 0x5b0
        borderSize = size;
9000701e:	2305      	movs	r3, #5
90007020:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90007024:	f8c4 65b4 	str.w	r6, [r4, #1460]	; 0x5b4
90007028:	f8a4 35dc 	strh.w	r3, [r4, #1500]	; 0x5dc
9000702c:	f8c4 15ec 	str.w	r1, [r4, #1516]	; 0x5ec
        up = colorReleased;
90007030:	4b3e      	ldr	r3, [pc, #248]	; (9000712c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderBox.setColor(T::getPressed() ? down : up);
90007032:	f894 15a4 	ldrb.w	r1, [r4, #1444]	; 0x5a4
        up = colorReleased;
90007036:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
        down = colorPressed;
9000703a:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
        borderBox.setColor(T::getPressed() ? down : up);
9000703e:	2900      	cmp	r1, #0
90007040:	f000 83ac 	beq.w	9000779c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15b4>
        color = newColor;
90007044:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90007046:	f204 52ec 	addw	r2, r4, #1516	; 0x5ec
9000704a:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
        alpha = newAlpha;
9000704e:	2600      	movs	r6, #0
90007050:	6813      	ldr	r3, [r2, #0]
90007052:	4650      	mov	r0, sl
90007054:	9909      	ldr	r1, [sp, #36]	; 0x24
        borderColor = colorBorder;
90007056:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
9000705a:	4b3e      	ldr	r3, [pc, #248]	; (90007154 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf6c>)
        action = &callback;
9000705c:	f8c4 55a8 	str.w	r5, [r4, #1448]	; 0x5a8
90007060:	f8c4 357c 	str.w	r3, [r4, #1404]	; 0x57c
90007064:	4b39      	ldr	r3, [pc, #228]	; (9000714c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
        alpha = newAlpha;
90007066:	f884 65a5 	strb.w	r6, [r4, #1445]	; 0x5a5
9000706a:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
        alpha = newAlpha;
9000706e:	f884 65d2 	strb.w	r6, [r4, #1490]	; 0x5d2
90007072:	f00b fd21 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90007076:	492b      	ldr	r1, [pc, #172]	; (90007124 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90007078:	4b37      	ldr	r3, [pc, #220]	; (90007158 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf70>)
9000707a:	f8c4 1660 	str.w	r1, [r4, #1632]	; 0x660
        borderDown = borderColorPressed;
9000707e:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90007082:	f8c4 362c 	str.w	r3, [r4, #1580]	; 0x62c
        borderSize = size;
90007086:	2305      	movs	r3, #5
90007088:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
9000708c:	4a26      	ldr	r2, [pc, #152]	; (90007128 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
9000708e:	f8a4 3654 	strh.w	r3, [r4, #1620]	; 0x654
        borderDown = borderColorPressed;
90007092:	f8c4 1664 	str.w	r1, [r4, #1636]	; 0x664
        up = colorReleased;
90007096:	4b25      	ldr	r3, [pc, #148]	; (9000712c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderBox.setColor(T::getPressed() ? down : up);
90007098:	f894 161c 	ldrb.w	r1, [r4, #1564]	; 0x61c
9000709c:	f8c4 6628 	str.w	r6, [r4, #1576]	; 0x628
        up = colorReleased;
900070a0:	f8c4 3658 	str.w	r3, [r4, #1624]	; 0x658
        down = colorPressed;
900070a4:	f8c4 265c 	str.w	r2, [r4, #1628]	; 0x65c
        borderBox.setColor(T::getPressed() ? down : up);
900070a8:	2900      	cmp	r1, #0
900070aa:	f000 8374 	beq.w	90007796 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15ae>
        color = newColor;
900070ae:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900070b0:	f204 6264 	addw	r2, r4, #1636	; 0x664
900070b4:	f8c4 364c 	str.w	r3, [r4, #1612]	; 0x64c
900070b8:	2600      	movs	r6, #0
900070ba:	6813      	ldr	r3, [r2, #0]
900070bc:	4650      	mov	r0, sl
900070be:	4f26      	ldr	r7, [pc, #152]	; (90007158 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf70>)
        borderColor = colorBorder;
900070c0:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
900070c4:	4b25      	ldr	r3, [pc, #148]	; (9000715c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf74>)
900070c6:	990a      	ldr	r1, [sp, #40]	; 0x28
900070c8:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
        action = &callback;
900070cc:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
        alpha = newAlpha;
900070d0:	f884 661d 	strb.w	r6, [r4, #1565]	; 0x61d
        alpha = newAlpha;
900070d4:	f884 664a 	strb.w	r6, [r4, #1610]	; 0x64a
900070d8:	f8c4 75f8 	str.w	r7, [r4, #1528]	; 0x5f8
900070dc:	f00b fcec 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
900070e0:	4910      	ldr	r1, [pc, #64]	; (90007124 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
        borderSize = size;
900070e2:	2305      	movs	r3, #5
        down = colorPressed;
900070e4:	4a10      	ldr	r2, [pc, #64]	; (90007128 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
900070e6:	f8c4 16d8 	str.w	r1, [r4, #1752]	; 0x6d8
        borderDown = borderColorPressed;
900070ea:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
900070ee:	f8a4 36cc 	strh.w	r3, [r4, #1740]	; 0x6cc
900070f2:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        up = colorReleased;
900070f6:	4b0d      	ldr	r3, [pc, #52]	; (9000712c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
900070f8:	f8c4 66a0 	str.w	r6, [r4, #1696]	; 0x6a0
        borderDown = borderColorPressed;
900070fc:	f8c4 16dc 	str.w	r1, [r4, #1756]	; 0x6dc
        borderBox.setColor(T::getPressed() ? down : up);
90007100:	f894 1694 	ldrb.w	r1, [r4, #1684]	; 0x694
90007104:	f8c4 76a4 	str.w	r7, [r4, #1700]	; 0x6a4
        up = colorReleased;
90007108:	f8c4 36d0 	str.w	r3, [r4, #1744]	; 0x6d0
        down = colorPressed;
9000710c:	f8c4 26d4 	str.w	r2, [r4, #1748]	; 0x6d4
        borderBox.setColor(T::getPressed() ? down : up);
90007110:	2900      	cmp	r1, #0
90007112:	f000 833d 	beq.w	90007790 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15a8>
        color = newColor;
90007116:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90007118:	f204 62dc 	addw	r2, r4, #1756	; 0x6dc
9000711c:	e020      	b.n	90007160 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>
9000711e:	bf00      	nop
90007120:	00610064 	.word	0x00610064
90007124:	ff003366 	.word	0xff003366
90007128:	ff0099cc 	.word	0xff0099cc
9000712c:	ff006699 	.word	0xff006699
90007130:	00580038 	.word	0x00580038
90007134:	00610070 	.word	0x00610070
90007138:	0058012e 	.word	0x0058012e
9000713c:	0061007c 	.word	0x0061007c
90007140:	005800a7 	.word	0x005800a7
90007144:	00470064 	.word	0x00470064
90007148:	00c20038 	.word	0x00c20038
9000714c:	0047007c 	.word	0x0047007c
90007150:	000700a7 	.word	0x000700a7
90007154:	00c200a7 	.word	0x00c200a7
90007158:	00470071 	.word	0x00470071
9000715c:	0007012e 	.word	0x0007012e
90007160:	f8c4 36c4 	str.w	r3, [r4, #1732]	; 0x6c4
90007164:	f04f 0b00 	mov.w	fp, #0
90007168:	6813      	ldr	r3, [r2, #0]
9000716a:	2605      	movs	r6, #5
9000716c:	4fec      	ldr	r7, [pc, #944]	; (90007520 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1338>)
9000716e:	4650      	mov	r0, sl
        borderColor = colorBorder;
90007170:	f8c4 36c8 	str.w	r3, [r4, #1736]	; 0x6c8
90007174:	f04f 0806 	mov.w	r8, #6
90007178:	4bea      	ldr	r3, [pc, #936]	; (90007524 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x133c>)
9000717a:	990b      	ldr	r1, [sp, #44]	; 0x2c
9000717c:	f8c4 366c 	str.w	r3, [r4, #1644]	; 0x66c
90007180:	4be9      	ldr	r3, [pc, #932]	; (90007528 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1340>)
        action = &callback;
90007182:	f8c4 5698 	str.w	r5, [r4, #1688]	; 0x698
90007186:	f04f 1550 	mov.w	r5, #5242960	; 0x500050
9000718a:	f8c4 3670 	str.w	r3, [r4, #1648]	; 0x670
        alpha = newAlpha;
9000718e:	f884 b695 	strb.w	fp, [r4, #1685]	; 0x695
        alpha = newAlpha;
90007192:	f884 b6c2 	strb.w	fp, [r4, #1730]	; 0x6c2
90007196:	f00b fc8f 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000719a:	4648      	mov	r0, r9
9000719c:	a928      	add	r1, sp, #160	; 0xa0
9000719e:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
900071a2:	f00e fbf2 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900071a6:	4648      	mov	r0, r9
900071a8:	4659      	mov	r1, fp
900071aa:	f8c4 76e4 	str.w	r7, [r4, #1764]	; 0x6e4
900071ae:	f8c4 56e8 	str.w	r5, [r4, #1768]	; 0x6e8
900071b2:	f00d fb6a 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900071b6:	4649      	mov	r1, r9
900071b8:	4650      	mov	r0, sl
        visible = vis;
900071ba:	f884 b705 	strb.w	fp, [r4, #1797]	; 0x705
900071be:	f00b fc7b 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900071c2:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
900071c6:	a928      	add	r1, sp, #160	; 0xa0
900071c8:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
900071cc:	4648      	mov	r0, r9
900071ce:	f00e fbdc 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900071d2:	4648      	mov	r0, r9
900071d4:	4659      	mov	r1, fp
        rect.x = x;
900071d6:	f8c4 7710 	str.w	r7, [r4, #1808]	; 0x710
900071da:	f8c4 5714 	str.w	r5, [r4, #1812]	; 0x714
900071de:	377a      	adds	r7, #122	; 0x7a
900071e0:	f00d fb53 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900071e4:	4649      	mov	r1, r9
900071e6:	4650      	mov	r0, sl
        visible = vis;
900071e8:	f884 b731 	strb.w	fp, [r4, #1841]	; 0x731
900071ec:	f00b fc64 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900071f0:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
900071f4:	a928      	add	r1, sp, #160	; 0xa0
900071f6:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
900071fa:	4648      	mov	r0, r9
900071fc:	f00e fbc5 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007200:	4648      	mov	r0, r9
90007202:	4659      	mov	r1, fp
        rect.x = x;
90007204:	f8c4 773c 	str.w	r7, [r4, #1852]	; 0x73c
90007208:	f8c4 5740 	str.w	r5, [r4, #1856]	; 0x740
9000720c:	f00d fb3d 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007210:	4649      	mov	r1, r9
90007212:	4650      	mov	r0, sl
        visible = vis;
90007214:	f884 b75d 	strb.w	fp, [r4, #1885]	; 0x75d
90007218:	f00b fc4e 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000721c:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
90007220:	a928      	add	r1, sp, #160	; 0xa0
90007222:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
90007226:	4648      	mov	r0, r9
90007228:	f00e fbaf 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000722c:	4648      	mov	r0, r9
9000722e:	4659      	mov	r1, fp
        rect.x = x;
90007230:	f8c4 7768 	str.w	r7, [r4, #1896]	; 0x768
90007234:	f8c4 576c 	str.w	r5, [r4, #1900]	; 0x76c
90007238:	3776      	adds	r7, #118	; 0x76
9000723a:	f00d fb26 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000723e:	4649      	mov	r1, r9
90007240:	4650      	mov	r0, sl
        visible = vis;
90007242:	f884 b789 	strb.w	fp, [r4, #1929]	; 0x789
90007246:	f00b fc37 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000724a:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
9000724e:	a928      	add	r1, sp, #160	; 0xa0
90007250:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
90007254:	4648      	mov	r0, r9
90007256:	f00e fb98 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000725a:	4648      	mov	r0, r9
9000725c:	4659      	mov	r1, fp
        rect.x = x;
9000725e:	f8c4 7794 	str.w	r7, [r4, #1940]	; 0x794
90007262:	f8c4 5798 	str.w	r5, [r4, #1944]	; 0x798
90007266:	f00d fb10 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000726a:	4649      	mov	r1, r9
9000726c:	4650      	mov	r0, sl
        visible = vis;
9000726e:	f884 b7b5 	strb.w	fp, [r4, #1973]	; 0x7b5
90007272:	f00b fc21 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90007276:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
9000727a:	a928      	add	r1, sp, #160	; 0xa0
9000727c:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
90007280:	4648      	mov	r0, r9
90007282:	f00e fb82 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007286:	4648      	mov	r0, r9
90007288:	4659      	mov	r1, fp
        rect.x = x;
9000728a:	f8c4 77c0 	str.w	r7, [r4, #1984]	; 0x7c0
9000728e:	f8c4 57c4 	str.w	r5, [r4, #1988]	; 0x7c4
90007292:	f00d fafa 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007296:	4649      	mov	r1, r9
90007298:	4650      	mov	r0, sl
        visible = vis;
9000729a:	f884 b7e1 	strb.w	fp, [r4, #2017]	; 0x7e1
9000729e:	f00b fc0b 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900072a2:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
        rect.x = x;
900072a6:	4fa1      	ldr	r7, [pc, #644]	; (9000752c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1344>)
900072a8:	a928      	add	r1, sp, #160	; 0xa0
900072aa:	4648      	mov	r0, r9
900072ac:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
900072b0:	f00e fb6b 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900072b4:	4648      	mov	r0, r9
900072b6:	4659      	mov	r1, fp
900072b8:	f8c4 77ec 	str.w	r7, [r4, #2028]	; 0x7ec
900072bc:	f8c4 57f0 	str.w	r5, [r4, #2032]	; 0x7f0
900072c0:	f00d fae3 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900072c4:	4649      	mov	r1, r9
900072c6:	4650      	mov	r0, sl
        visible = vis;
900072c8:	f884 b80d 	strb.w	fp, [r4, #2061]	; 0x80d
900072cc:	f00b fbf4 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900072d0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
900072d4:	a928      	add	r1, sp, #160	; 0xa0
900072d6:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
900072da:	4648      	mov	r0, r9
900072dc:	f00e fb55 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900072e0:	4648      	mov	r0, r9
900072e2:	4659      	mov	r1, fp
        rect.x = x;
900072e4:	f8c4 7818 	str.w	r7, [r4, #2072]	; 0x818
900072e8:	f8c4 581c 	str.w	r5, [r4, #2076]	; 0x81c
900072ec:	377a      	adds	r7, #122	; 0x7a
900072ee:	f00d facc 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900072f2:	4649      	mov	r1, r9
900072f4:	4650      	mov	r0, sl
        visible = vis;
900072f6:	f884 b839 	strb.w	fp, [r4, #2105]	; 0x839
900072fa:	f00b fbdd 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900072fe:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
90007302:	a928      	add	r1, sp, #160	; 0xa0
90007304:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
90007308:	4648      	mov	r0, r9
9000730a:	f00e fb3e 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000730e:	4648      	mov	r0, r9
90007310:	4659      	mov	r1, fp
        rect.x = x;
90007312:	f8c4 7844 	str.w	r7, [r4, #2116]	; 0x844
90007316:	f8c4 5848 	str.w	r5, [r4, #2120]	; 0x848
9000731a:	f00d fab6 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000731e:	4649      	mov	r1, r9
90007320:	4650      	mov	r0, sl
        visible = vis;
90007322:	f884 b865 	strb.w	fp, [r4, #2149]	; 0x865
90007326:	f00b fbc7 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000732a:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
9000732e:	a928      	add	r1, sp, #160	; 0xa0
90007330:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
90007334:	4648      	mov	r0, r9
90007336:	f00e fb28 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000733a:	4648      	mov	r0, r9
9000733c:	4659      	mov	r1, fp
        rect.x = x;
9000733e:	f8c4 7870 	str.w	r7, [r4, #2160]	; 0x870
90007342:	f8c4 5874 	str.w	r5, [r4, #2164]	; 0x874
90007346:	3776      	adds	r7, #118	; 0x76
90007348:	f00d fa9f 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000734c:	4649      	mov	r1, r9
9000734e:	4650      	mov	r0, sl
        visible = vis;
90007350:	f884 b891 	strb.w	fp, [r4, #2193]	; 0x891
90007354:	f00b fbb0 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90007358:	f8dd 9054 	ldr.w	r9, [sp, #84]	; 0x54
9000735c:	a928      	add	r1, sp, #160	; 0xa0
9000735e:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
90007362:	4648      	mov	r0, r9
90007364:	f00e fb11 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007368:	4648      	mov	r0, r9
9000736a:	4659      	mov	r1, fp
        rect.x = x;
9000736c:	f8c4 789c 	str.w	r7, [r4, #2204]	; 0x89c
90007370:	f8c4 58a0 	str.w	r5, [r4, #2208]	; 0x8a0
90007374:	f00d fa89 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007378:	4649      	mov	r1, r9
9000737a:	4650      	mov	r0, sl
        visible = vis;
9000737c:	f884 b8bd 	strb.w	fp, [r4, #2237]	; 0x8bd
90007380:	f00b fb9a 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90007384:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
90007388:	a928      	add	r1, sp, #160	; 0xa0
9000738a:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
9000738e:	4648      	mov	r0, r9
90007390:	f00e fafb 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007394:	4648      	mov	r0, r9
90007396:	4659      	mov	r1, fp
        rect.x = x;
90007398:	f8c4 78c8 	str.w	r7, [r4, #2248]	; 0x8c8
9000739c:	f8c4 58cc 	str.w	r5, [r4, #2252]	; 0x8cc
900073a0:	f00d fa73 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900073a4:	4649      	mov	r1, r9
900073a6:	4650      	mov	r0, sl
        visible = vis;
900073a8:	f884 b8e9 	strb.w	fp, [r4, #2281]	; 0x8e9
900073ac:	f00b fb84 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900073b0:	f8dd 905c 	ldr.w	r9, [sp, #92]	; 0x5c
        rect.x = x;
900073b4:	4f5e      	ldr	r7, [pc, #376]	; (90007530 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1348>)
900073b6:	a928      	add	r1, sp, #160	; 0xa0
900073b8:	4648      	mov	r0, r9
900073ba:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
900073be:	f00e fae4 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900073c2:	4648      	mov	r0, r9
900073c4:	4659      	mov	r1, fp
900073c6:	f8c4 78f4 	str.w	r7, [r4, #2292]	; 0x8f4
900073ca:	f8c4 58f8 	str.w	r5, [r4, #2296]	; 0x8f8
900073ce:	f00d fa5c 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900073d2:	4649      	mov	r1, r9
900073d4:	4650      	mov	r0, sl
        visible = vis;
900073d6:	f884 b915 	strb.w	fp, [r4, #2325]	; 0x915
900073da:	f00b fb6d 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900073de:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
900073e2:	a928      	add	r1, sp, #160	; 0xa0
900073e4:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
900073e8:	4648      	mov	r0, r9
900073ea:	f00e face 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900073ee:	4648      	mov	r0, r9
900073f0:	4659      	mov	r1, fp
        rect.x = x;
900073f2:	f8c4 7920 	str.w	r7, [r4, #2336]	; 0x920
900073f6:	f8c4 5924 	str.w	r5, [r4, #2340]	; 0x924
900073fa:	377e      	adds	r7, #126	; 0x7e
900073fc:	f00d fa45 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007400:	4649      	mov	r1, r9
90007402:	4650      	mov	r0, sl
        visible = vis;
90007404:	f884 b941 	strb.w	fp, [r4, #2369]	; 0x941
90007408:	f00b fb56 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000740c:	f8dd 9064 	ldr.w	r9, [sp, #100]	; 0x64
90007410:	a928      	add	r1, sp, #160	; 0xa0
90007412:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
90007416:	4648      	mov	r0, r9
90007418:	f00e fab7 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000741c:	4648      	mov	r0, r9
9000741e:	4659      	mov	r1, fp
        rect.x = x;
90007420:	f8c4 794c 	str.w	r7, [r4, #2380]	; 0x94c
90007424:	f8c4 5950 	str.w	r5, [r4, #2384]	; 0x950
90007428:	f00d fa2f 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000742c:	4649      	mov	r1, r9
9000742e:	4650      	mov	r0, sl
        visible = vis;
90007430:	f884 b96d 	strb.w	fp, [r4, #2413]	; 0x96d
90007434:	f00b fb40 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90007438:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
9000743c:	a928      	add	r1, sp, #160	; 0xa0
9000743e:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
90007442:	4648      	mov	r0, r9
90007444:	f00e faa1 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007448:	4648      	mov	r0, r9
9000744a:	4659      	mov	r1, fp
        rect.x = x;
9000744c:	f8c4 7978 	str.w	r7, [r4, #2424]	; 0x978
90007450:	f8c4 597c 	str.w	r5, [r4, #2428]	; 0x97c
90007454:	f00d fa19 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007458:	4649      	mov	r1, r9
9000745a:	4650      	mov	r0, sl
        visible = vis;
9000745c:	f884 b999 	strb.w	fp, [r4, #2457]	; 0x999
90007460:	f00b fb2a 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos9_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90007464:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
90007466:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
9000746a:	a928      	add	r1, sp, #160	; 0xa0
        rect.x = x;
9000746c:	4e31      	ldr	r6, [pc, #196]	; (90007534 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x134c>)
9000746e:	4638      	mov	r0, r7
90007470:	f00e fa8b 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007474:	4638      	mov	r0, r7
90007476:	4659      	mov	r1, fp
90007478:	f8c4 69a4 	str.w	r6, [r4, #2468]	; 0x9a4
9000747c:	f8c4 59a8 	str.w	r5, [r4, #2472]	; 0x9a8
        boundingArea = calculateBoundingArea();
90007480:	f604 29e4 	addw	r9, r4, #2788	; 0xae4
90007484:	f00d fa01 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007488:	4639      	mov	r1, r7
9000748a:	4650      	mov	r0, sl
        visible = vis;
9000748c:	f884 b9c5 	strb.w	fp, [r4, #2501]	; 0x9c5
90007490:	f00b fb12 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos9_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90007494:	9f1c      	ldr	r7, [sp, #112]	; 0x70
90007496:	a928      	add	r1, sp, #160	; 0xa0
90007498:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
9000749c:	4638      	mov	r0, r7
        boundingArea = calculateBoundingArea();
9000749e:	f10d 0880 	add.w	r8, sp, #128	; 0x80
900074a2:	f00e fa72 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900074a6:	4638      	mov	r0, r7
900074a8:	4659      	mov	r1, fp
        rect.x = x;
900074aa:	f8c4 69d0 	str.w	r6, [r4, #2512]	; 0x9d0
900074ae:	f8c4 59d4 	str.w	r5, [r4, #2516]	; 0x9d4
    lbl_result.setPosition(100, 142, 258, 24);
900074b2:	f604 26a8 	addw	r6, r4, #2728	; 0xaa8
    pos9_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900074b6:	f00d f9e8 	bl	9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900074ba:	4639      	mov	r1, r7
900074bc:	4650      	mov	r0, sl
        visible = vis;
900074be:	f884 b9f1 	strb.w	fp, [r4, #2545]	; 0x9f1
900074c2:	f00b faf9 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900074c6:	4b1c      	ldr	r3, [pc, #112]	; (90007538 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1350>)
900074c8:	f604 11f8 	addw	r1, r4, #2552	; 0x9f8
900074cc:	4650      	mov	r0, sl
900074ce:	f8c4 39fc 	str.w	r3, [r4, #2556]	; 0x9fc
900074d2:	270b      	movs	r7, #11
900074d4:	4b19      	ldr	r3, [pc, #100]	; (9000753c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1354>)
        visible = vis;
900074d6:	f884 ba1d 	strb.w	fp, [r4, #2589]	; 0xa1d
        rect.x = x;
900074da:	f8c4 3a00 	str.w	r3, [r4, #2560]	; 0xa00
        color = newColor;
900074de:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
900074e2:	f8c4 3a20 	str.w	r3, [r4, #2592]	; 0xa20
900074e6:	f00b fae7 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900074ea:	4b15      	ldr	r3, [pc, #84]	; (90007540 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1358>)
900074ec:	9d03      	ldr	r5, [sp, #12]
900074ee:	4640      	mov	r0, r8
900074f0:	f8c4 3a28 	str.w	r3, [r4, #2600]	; 0xa28
        color = newColor;
900074f4:	4b13      	ldr	r3, [pc, #76]	; (90007544 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x135c>)
        boundingArea = calculateBoundingArea();
900074f6:	4629      	mov	r1, r5
        linespace = space;
900074f8:	f8a4 ba58 	strh.w	fp, [r4, #2648]	; 0xa58
        color = newColor;
900074fc:	f8c4 3a54 	str.w	r3, [r4, #2644]	; 0xa54
        boundingArea = calculateBoundingArea();
90007500:	f00d fcb2 	bl	90014e68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007504:	4a10      	ldr	r2, [pc, #64]	; (90007548 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1360>)
90007506:	462b      	mov	r3, r5
90007508:	9503      	str	r5, [sp, #12]
9000750a:	9228      	str	r2, [sp, #160]	; 0xa0
9000750c:	220f      	movs	r2, #15
9000750e:	333c      	adds	r3, #60	; 0x3c
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FP7G));
90007510:	ed9d 8a03 	vldr	s16, [sp, #12]
90007514:	f8ad 20a4 	strh.w	r2, [sp, #164]	; 0xa4
    Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LKZS).getText());
90007518:	f504 6234 	add.w	r2, r4, #2880	; 0xb40
9000751c:	e016      	b.n	9000754c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1364>
9000751e:	bf00      	nop
90007520:	fffe0042 	.word	0xfffe0042
90007524:	00c2012e 	.word	0x00c2012e
90007528:	00470071 	.word	0x00470071
9000752c:	00600042 	.word	0x00600042
90007530:	00c30042 	.word	0x00c30042
90007534:	00c30132 	.word	0x00c30132
90007538:	003f006a 	.word	0x003f006a
9000753c:	00980110 	.word	0x00980110
90007540:	00550076 	.word	0x00550076
90007544:	ffff0000 	.word	0xffff0000
90007548:	9002c22c 	.word	0x9002c22c
        color = newColor;
9000754c:	f04f 35ff 	mov.w	r5, #4294967295
90007550:	9204      	str	r2, [sp, #16]
        boundingArea = calculateBoundingArea();
90007552:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
90007556:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FP7G));
9000755a:	a928      	add	r1, sp, #160	; 0xa0
9000755c:	ee18 0a10 	vmov	r0, s16
90007560:	f00d ff2a 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007564:	ee18 1a10 	vmov	r1, s16
90007568:	4650      	mov	r0, sl
        visible = vis;
9000756a:	f884 ba49 	strb.w	fp, [r4, #2633]	; 0xa49
9000756e:	f00b faa3 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
90007572:	ab28      	add	r3, sp, #160	; 0xa0
90007574:	aa26      	add	r2, sp, #152	; 0x98
90007576:	a925      	add	r1, sp, #148	; 0x94
90007578:	9300      	str	r3, [sp, #0]
        rect.x = x;
9000757a:	f04f 130c 	mov.w	r3, #786444	; 0xc000c
9000757e:	ee1b 0a10 	vmov	r0, s22
90007582:	f8ad b094 	strh.w	fp, [sp, #148]	; 0x94
90007586:	f8c4 3a70 	str.w	r3, [r4, #2672]	; 0xa70
9000758a:	2301      	movs	r3, #1
9000758c:	f8ad 709c 	strh.w	r7, [sp, #156]	; 0x9c
90007590:	f8ad 3098 	strh.w	r3, [sp, #152]	; 0x98
90007594:	ab27      	add	r3, sp, #156	; 0x9c
90007596:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
9000759a:	f00e f939 	bl	90015810 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    btn_back.setAction(buttonCallback);
9000759e:	f242 73ac 	movw	r3, #10156	; 0x27ac
900075a2:	ee1b 1a10 	vmov	r1, s22
900075a6:	4650      	mov	r0, sl
        visible = vis;
900075a8:	f884 ba91 	strb.w	fp, [r4, #2705]	; 0xa91
900075ac:	4423      	add	r3, r4
900075ae:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
900075b2:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
900075b6:	f8c4 3aa4 	str.w	r3, [r4, #2724]	; 0xaa4
900075ba:	f00b fa7d 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900075be:	4ba8      	ldr	r3, [pc, #672]	; (90007860 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1678>)
        boundingArea = calculateBoundingArea();
900075c0:	4631      	mov	r1, r6
900075c2:	4640      	mov	r0, r8
900075c4:	f8c4 3aac 	str.w	r3, [r4, #2732]	; 0xaac
        rect.width = width;
900075c8:	f44f 7381 	mov.w	r3, #258	; 0x102
900075cc:	f8a4 3ab0 	strh.w	r3, [r4, #2736]	; 0xab0
900075d0:	f7fd fbe2 	bl	90004d98 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
900075d4:	2318      	movs	r3, #24
900075d6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
900075da:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
900075de:	4631      	mov	r1, r6
900075e0:	4640      	mov	r0, r8
900075e2:	f8a4 3ab2 	strh.w	r3, [r4, #2738]	; 0xab2
900075e6:	f7fd fbd7 	bl	90004d98 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900075ea:	4b9e      	ldr	r3, [pc, #632]	; (90007864 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x167c>)
900075ec:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
900075f0:	681b      	ldr	r3, [r3, #0]
900075f2:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        color = newColor;
900075f6:	f8c4 5ad8 	str.w	r5, [r4, #2776]	; 0xad8
        linespace = space;
900075fa:	f8a4 badc 	strh.w	fp, [r4, #2780]	; 0xadc
        boundingArea = calculateBoundingArea();
900075fe:	f8c4 bae4 	str.w	fp, [r4, #2788]	; 0xae4
90007602:	f8c4 5ae8 	str.w	r5, [r4, #2792]	; 0xae8
90007606:	f8c4 baec 	str.w	fp, [r4, #2796]	; 0xaec
9000760a:	2b00      	cmp	r3, #0
9000760c:	f000 811c 	beq.w	90007848 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1660>
        return typedTextId < numberOfTypedTexts;
90007610:	f8df 9274 	ldr.w	r9, [pc, #628]	; 90007888 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007614:	f8b9 3000 	ldrh.w	r3, [r9]
90007618:	2b0d      	cmp	r3, #13
9000761a:	f240 811b 	bls.w	90007854 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x166c>
    Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_29C0).getText());
9000761e:	f604 3368 	addw	r3, r4, #2920	; 0xb68
        return texts->getText(typedTextId);
90007622:	210d      	movs	r1, #13
    lbl_turn.setXY(337, 0);
90007624:	f604 28f4 	addw	r8, r4, #2804	; 0xaf4
    Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_29C0).getText());
90007628:	9303      	str	r3, [sp, #12]
9000762a:	4b8f      	ldr	r3, [pc, #572]	; (90007868 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1680>)
9000762c:	6818      	ldr	r0, [r3, #0]
9000762e:	f7fd f80b 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LKZS).getText());
90007632:	4a8e      	ldr	r2, [pc, #568]	; (9000786c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1684>)
90007634:	4603      	mov	r3, r0
90007636:	2114      	movs	r1, #20
90007638:	9804      	ldr	r0, [sp, #16]
9000763a:	f013 ff85 	bl	9001b548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
9000763e:	9a04      	ldr	r2, [sp, #16]
        : typedTextId(id)
90007640:	230e      	movs	r3, #14
    lbl_result.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DOP9));
90007642:	a928      	add	r1, sp, #160	; 0xa0
90007644:	f8c4 2af0 	str.w	r2, [r4, #2800]	; 0xaf0
90007648:	4630      	mov	r0, r6
9000764a:	4a89      	ldr	r2, [pc, #548]	; (90007870 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1688>)
9000764c:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
90007650:	9228      	str	r2, [sp, #160]	; 0xa0
90007652:	f00d feb1 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007656:	4631      	mov	r1, r6
90007658:	4650      	mov	r0, sl
        visible = vis;
9000765a:	f884 bacd 	strb.w	fp, [r4, #2765]	; 0xacd
9000765e:	f00b fa2b 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007662:	4980      	ldr	r1, [pc, #512]	; (90007864 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x167c>)
        rect.x = x;
90007664:	f240 1251 	movw	r2, #337	; 0x151
        color = newColor;
90007668:	f8c4 5b24 	str.w	r5, [r4, #2852]	; 0xb24
9000766c:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
9000766e:	f8c4 5b34 	str.w	r5, [r4, #2868]	; 0xb34
        linespace = space;
90007672:	f8a4 bb28 	strh.w	fp, [r4, #2856]	; 0xb28
        boundingArea = calculateBoundingArea();
90007676:	f8c4 bb30 	str.w	fp, [r4, #2864]	; 0xb30
9000767a:	f8c4 bb38 	str.w	fp, [r4, #2872]	; 0xb38
9000767e:	f8c4 2af8 	str.w	r2, [r4, #2808]	; 0xaf8
90007682:	2b00      	cmp	r3, #0
90007684:	f000 80e0 	beq.w	90007848 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1660>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007688:	f8b9 3000 	ldrh.w	r3, [r9]
9000768c:	2b0b      	cmp	r3, #11
9000768e:	f240 80e1 	bls.w	90007854 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x166c>
        return texts->getText(typedTextId);
90007692:	4b75      	ldr	r3, [pc, #468]	; (90007868 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1680>)
90007694:	4639      	mov	r1, r7
90007696:	6818      	ldr	r0, [r3, #0]
90007698:	f7fc ffd6 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_29C0).getText());
9000769c:	9d03      	ldr	r5, [sp, #12]
9000769e:	4603      	mov	r3, r0
900076a0:	4a72      	ldr	r2, [pc, #456]	; (9000786c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1684>)
900076a2:	210a      	movs	r1, #10
900076a4:	4628      	mov	r0, r5
900076a6:	f013 ff4f 	bl	9001b548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    lbl_turn.resizeToCurrentText();
900076aa:	4640      	mov	r0, r8
900076ac:	f8c4 5b3c 	str.w	r5, [r4, #2876]	; 0xb3c
900076b0:	f00d fe62 	bl	90015378 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
900076b4:	4a6e      	ldr	r2, [pc, #440]	; (90007870 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1688>)
900076b6:	230c      	movs	r3, #12
    lbl_turn.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3N5W));
900076b8:	a928      	add	r1, sp, #160	; 0xa0
900076ba:	4640      	mov	r0, r8
900076bc:	9228      	str	r2, [sp, #160]	; 0xa0
900076be:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
900076c2:	f00d fe79 	bl	900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
900076c6:	235f      	movs	r3, #95	; 0x5f
900076c8:	4650      	mov	r0, sl
900076ca:	4641      	mov	r1, r8
900076cc:	f884 3b2a 	strb.w	r3, [r4, #2858]	; 0xb2a
900076d0:	f00b f9f2 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900076d4:	4620      	mov	r0, r4
900076d6:	b02b      	add	sp, #172	; 0xac
900076d8:	ecbd 8b08 	vpop	{d8-d11}
900076dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900076e0:	6898      	ldr	r0, [r3, #8]
900076e2:	4d64      	ldr	r5, [pc, #400]	; (90007874 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x168c>)
900076e4:	6803      	ldr	r3, [r0, #0]
900076e6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900076e8:	42aa      	cmp	r2, r5
900076ea:	f43e adfa 	beq.w	900062e2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900076ee:	f7fe bdc4 	b.w	9000627a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
900076f2:	6898      	ldr	r0, [r3, #8]
900076f4:	6802      	ldr	r2, [r0, #0]
900076f6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900076f8:	42aa      	cmp	r2, r5
900076fa:	d169      	bne.n	900077d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15e8>
        return auxiliaryLCD;
900076fc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900076fe:	2800      	cmp	r0, #0
90007700:	f43e ae15 	beq.w	9000632e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
        bool compat = HAL::lcd().framebufferFormat() == format;
90007704:	6803      	ldr	r3, [r0, #0]
90007706:	f04f 0b01 	mov.w	fp, #1
9000770a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000770c:	42ab      	cmp	r3, r5
9000770e:	f43e ae0e 	beq.w	9000632e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
90007712:	4798      	blx	r3
90007714:	2800      	cmp	r0, #0
90007716:	bf08      	it	eq
90007718:	f04b 0b01 	orreq.w	fp, fp, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
9000771c:	f1bb 0f00 	cmp.w	fp, #0
90007720:	f47e ae05 	bne.w	9000632e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
90007724:	f7fe bdba 	b.w	9000629c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
90007728:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
9000772a:	6802      	ldr	r2, [r0, #0]
9000772c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000772e:	42aa      	cmp	r2, r5
90007730:	d165      	bne.n	900077fe <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1616>
        return auxiliaryLCD;
90007732:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90007734:	2800      	cmp	r0, #0
90007736:	f43e ae1d 	beq.w	90006374 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
        bool compat = HAL::lcd().framebufferFormat() == format;
9000773a:	6803      	ldr	r3, [r0, #0]
9000773c:	f04f 0b01 	mov.w	fp, #1
90007740:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90007742:	42ab      	cmp	r3, r5
90007744:	f43e ae16 	beq.w	90006374 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
90007748:	4798      	blx	r3
9000774a:	2800      	cmp	r0, #0
9000774c:	bf08      	it	eq
9000774e:	f04b 0b01 	orreq.w	fp, fp, #1
90007752:	f1bb 0f00 	cmp.w	fp, #0
90007756:	f47e ae0d 	bne.w	90006374 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
9000775a:	f7fe bd9f 	b.w	9000629c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
9000775e:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90007760:	6802      	ldr	r2, [r0, #0]
90007762:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90007764:	42aa      	cmp	r2, r5
90007766:	d13f      	bne.n	900077e8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1600>
        return auxiliaryLCD;
90007768:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000776a:	2800      	cmp	r0, #0
9000776c:	f43e ae25 	beq.w	900063ba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
        bool compat = HAL::lcd().framebufferFormat() == format;
90007770:	6803      	ldr	r3, [r0, #0]
90007772:	2701      	movs	r7, #1
90007774:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90007776:	42ab      	cmp	r3, r5
90007778:	f43e ae1f 	beq.w	900063ba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
9000777c:	4798      	blx	r3
9000777e:	2800      	cmp	r0, #0
90007780:	bf08      	it	eq
90007782:	f047 0701 	orreq.w	r7, r7, #1
90007786:	2f00      	cmp	r7, #0
90007788:	f47e ae17 	bne.w	900063ba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
9000778c:	f7fe bd86 	b.w	9000629c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
90007790:	f504 62db 	add.w	r2, r4, #1752	; 0x6d8
90007794:	e4e4      	b.n	90007160 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>
90007796:	f504 62cc 	add.w	r2, r4, #1632	; 0x660
9000779a:	e48b      	b.n	900070b4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xecc>
9000779c:	f504 62bd 	add.w	r2, r4, #1512	; 0x5e8
900077a0:	e453      	b.n	9000704a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe62>
900077a2:	f504 62ae 	add.w	r2, r4, #1392	; 0x570
900077a6:	e416      	b.n	90006fd6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdee>
900077a8:	f504 629f 	add.w	r2, r4, #1272	; 0x4f8
900077ac:	f7ff bbd6 	b.w	90006f5c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd74>
900077b0:	f504 6290 	add.w	r2, r4, #1152	; 0x480
900077b4:	f7ff bb95 	b.w	90006ee2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcfa>
900077b8:	f504 6281 	add.w	r2, r4, #1032	; 0x408
900077bc:	f7ff bb56 	b.w	90006e6c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc84>
900077c0:	f504 7264 	add.w	r2, r4, #912	; 0x390
900077c4:	f7ff bb19 	b.w	90006dfa <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc12>
900077c8:	f504 7246 	add.w	r2, r4, #792	; 0x318
900077cc:	f7ff baa9 	b.w	90006d22 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb3a>
        bool compat = HAL::lcd().framebufferFormat() == format;
900077d0:	4790      	blx	r2
900077d2:	683b      	ldr	r3, [r7, #0]
900077d4:	fab0 fb80 	clz	fp, r0
900077d8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900077da:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900077de:	2800      	cmp	r0, #0
900077e0:	d09c      	beq.n	9000771c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1534>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900077e2:	6803      	ldr	r3, [r0, #0]
900077e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900077e6:	e791      	b.n	9000770c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1524>
        bool compat = HAL::lcd().framebufferFormat() == format;
900077e8:	4790      	blx	r2
900077ea:	683b      	ldr	r3, [r7, #0]
900077ec:	fab0 f780 	clz	r7, r0
900077f0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900077f2:	097f      	lsrs	r7, r7, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900077f4:	2800      	cmp	r0, #0
900077f6:	d0c6      	beq.n	90007786 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x159e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900077f8:	6803      	ldr	r3, [r0, #0]
900077fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900077fc:	e7bb      	b.n	90007776 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x158e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900077fe:	4790      	blx	r2
90007800:	683b      	ldr	r3, [r7, #0]
90007802:	fab0 fb80 	clz	fp, r0
90007806:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90007808:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
9000780c:	2800      	cmp	r0, #0
9000780e:	d0a0      	beq.n	90007752 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x156a>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90007810:	6803      	ldr	r3, [r0, #0]
90007812:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90007814:	e795      	b.n	90007742 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x155a>
        handleAlphaUpdated();
90007816:	9808      	ldr	r0, [sp, #32]
90007818:	4790      	blx	r2
9000781a:	f7ff bbeb 	b.w	90006ff4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe0c>
9000781e:	9807      	ldr	r0, [sp, #28]
90007820:	4790      	blx	r2
90007822:	f7ff bbaa 	b.w	90006f7a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd92>
90007826:	9806      	ldr	r0, [sp, #24]
90007828:	4790      	blx	r2
9000782a:	f7ff bb69 	b.w	90006f00 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd18>
9000782e:	9805      	ldr	r0, [sp, #20]
90007830:	4790      	blx	r2
90007832:	f7ff bb2a 	b.w	90006e8a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xca2>
90007836:	9804      	ldr	r0, [sp, #16]
90007838:	4790      	blx	r2
9000783a:	f7ff baed 	b.w	90006e18 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc30>
9000783e:	ee1a 0a10 	vmov	r0, s20
90007842:	4790      	blx	r2
90007844:	f7ff ba7d 	b.w	90006d42 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb5a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007848:	4b0b      	ldr	r3, [pc, #44]	; (90007878 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1690>)
9000784a:	2160      	movs	r1, #96	; 0x60
9000784c:	4a0b      	ldr	r2, [pc, #44]	; (9000787c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1694>)
9000784e:	480c      	ldr	r0, [pc, #48]	; (90007880 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1698>)
90007850:	f021 fef6 	bl	90029640 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007854:	4b0b      	ldr	r3, [pc, #44]	; (90007884 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x169c>)
90007856:	2161      	movs	r1, #97	; 0x61
90007858:	4a08      	ldr	r2, [pc, #32]	; (9000787c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1694>)
9000785a:	4809      	ldr	r0, [pc, #36]	; (90007880 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1698>)
9000785c:	f021 fef0 	bl	90029640 <__assert_func>
90007860:	008e0064 	.word	0x008e0064
90007864:	24039b24 	.word	0x24039b24
90007868:	24039b30 	.word	0x24039b30
9000786c:	9002ceb0 	.word	0x9002ceb0
90007870:	9002c22c 	.word	0x9002c22c
90007874:	90002331 	.word	0x90002331
90007878:	9002cd70 	.word	0x9002cd70
9000787c:	9002ce78 	.word	0x9002ce78
90007880:	9002cdf0 	.word	0x9002cdf0
90007884:	9002ce38 	.word	0x9002ce38
90007888:	24039b28 	.word	0x24039b28

9000788c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
9000788c:	4770      	bx	lr
9000788e:	bf00      	nop

90007890 <_ZN19FrontendApplicationD0Ev>:
90007890:	b510      	push	{r4, lr}
90007892:	4604      	mov	r4, r0
90007894:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90007898:	f021 fea4 	bl	900295e4 <_ZdlPvj>
9000789c:	4620      	mov	r0, r4
9000789e:	bd10      	pop	{r4, pc}

900078a0 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
900078a0:	b510      	push	{r4, lr}
900078a2:	4604      	mov	r4, r0
    {
        model.tick();
900078a4:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
900078a8:	f000 f814 	bl	900078d4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
900078ac:	4620      	mov	r0, r4
    }
900078ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
900078b2:	f010 be03 	b.w	900184bc <_ZN8touchgfx11Application15handleTickEventEv>
900078b6:	bf00      	nop

900078b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
900078b8:	b510      	push	{r4, lr}
900078ba:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
900078bc:	f7fc fc50 	bl	90004160 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
900078c0:	4b01      	ldr	r3, [pc, #4]	; (900078c8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
900078c2:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
900078c4:	6023      	str	r3, [r4, #0]
}
900078c6:	bd10      	pop	{r4, pc}
900078c8:	9002d184 	.word	0x9002d184

900078cc <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
900078cc:	2200      	movs	r2, #0
900078ce:	6002      	str	r2, [r0, #0]
{

}
900078d0:	4770      	bx	lr
900078d2:	bf00      	nop

900078d4 <_ZN5Model4tickEv>:

void Model::tick()
{

}
900078d4:	4770      	bx	lr
900078d6:	bf00      	nop

900078d8 <_ZN25screen_main_menuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_main_menuPresenter() {}
900078d8:	4770      	bx	lr
900078da:	bf00      	nop

900078dc <_ZThn4_N25screen_main_menuPresenterD1Ev>:
900078dc:	3804      	subs	r0, #4
900078de:	4770      	bx	lr

900078e0 <_ZN25screen_main_menuPresenter10deactivateEv>:
}

void screen_main_menuPresenter::activate()
{

}
900078e0:	4770      	bx	lr
900078e2:	bf00      	nop

900078e4 <_ZN25screen_main_menuPresenterD0Ev>:
900078e4:	b510      	push	{r4, lr}
900078e6:	4604      	mov	r4, r0
900078e8:	2110      	movs	r1, #16
900078ea:	f021 fe7b 	bl	900295e4 <_ZdlPvj>
900078ee:	4620      	mov	r0, r4
900078f0:	bd10      	pop	{r4, pc}
900078f2:	bf00      	nop

900078f4 <_ZThn4_N25screen_main_menuPresenterD0Ev>:
900078f4:	b500      	push	{lr}
900078f6:	3804      	subs	r0, #4
900078f8:	b083      	sub	sp, #12
900078fa:	2110      	movs	r1, #16
900078fc:	9001      	str	r0, [sp, #4]
900078fe:	f021 fe71 	bl	900295e4 <_ZdlPvj>
90007902:	9801      	ldr	r0, [sp, #4]
90007904:	b003      	add	sp, #12
90007906:	f85d fb04 	ldr.w	pc, [sp], #4
9000790a:	bf00      	nop

9000790c <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>:
    : view(v)
9000790c:	4a06      	ldr	r2, [pc, #24]	; (90007928 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView+0x1c>)
9000790e:	60c1      	str	r1, [r0, #12]
screen_main_menuPresenter::screen_main_menuPresenter(screen_main_menuView& v)
90007910:	b410      	push	{r4}
    ModelListener() : model(0) {}
90007912:	2400      	movs	r4, #0
90007914:	6084      	str	r4, [r0, #8]
    : view(v)
90007916:	f102 0408 	add.w	r4, r2, #8
9000791a:	3220      	adds	r2, #32
9000791c:	e9c0 4200 	strd	r4, r2, [r0]
}
90007920:	f85d 4b04 	ldr.w	r4, [sp], #4
90007924:	4770      	bx	lr
90007926:	bf00      	nop
90007928:	9002d1d0 	.word	0x9002d1d0

9000792c <_ZN20screen_main_menuView14tearDownScreenEv>:
}

void screen_main_menuView::tearDownScreen()
{
    screen_main_menuViewBase::tearDownScreen();
}
9000792c:	4770      	bx	lr
9000792e:	bf00      	nop

90007930 <_ZN20screen_main_menuViewD1Ev>:

class screen_main_menuView : public screen_main_menuViewBase
{
public:
    screen_main_menuView();
    virtual ~screen_main_menuView() {}
90007930:	4b03      	ldr	r3, [pc, #12]	; (90007940 <_ZN20screen_main_menuViewD1Ev+0x10>)
90007932:	b510      	push	{r4, lr}
90007934:	4604      	mov	r4, r0
90007936:	6003      	str	r3, [r0, #0]
90007938:	f7fc feb0 	bl	9000469c <_ZN24screen_main_menuViewBaseD1Ev>
9000793c:	4620      	mov	r0, r4
9000793e:	bd10      	pop	{r4, pc}
90007940:	9002d200 	.word	0x9002d200

90007944 <_ZN20screen_main_menuViewD0Ev>:
90007944:	4b06      	ldr	r3, [pc, #24]	; (90007960 <_ZN20screen_main_menuViewD0Ev+0x1c>)
90007946:	b510      	push	{r4, lr}
90007948:	4604      	mov	r4, r0
9000794a:	6003      	str	r3, [r0, #0]
9000794c:	f7fc fea6 	bl	9000469c <_ZN24screen_main_menuViewBaseD1Ev>
90007950:	f44f 711a 	mov.w	r1, #616	; 0x268
90007954:	4620      	mov	r0, r4
90007956:	f021 fe45 	bl	900295e4 <_ZdlPvj>
9000795a:	4620      	mov	r0, r4
9000795c:	bd10      	pop	{r4, pc}
9000795e:	bf00      	nop
90007960:	9002d200 	.word	0x9002d200

90007964 <_ZN20screen_main_menuViewC1Ev>:
screen_main_menuView::screen_main_menuView()
90007964:	b510      	push	{r4, lr}
90007966:	4604      	mov	r4, r0
90007968:	f7fc ffbe 	bl	900048e8 <_ZN24screen_main_menuViewBaseC1Ev>
9000796c:	4b01      	ldr	r3, [pc, #4]	; (90007974 <_ZN20screen_main_menuViewC1Ev+0x10>)
}
9000796e:	4620      	mov	r0, r4
screen_main_menuView::screen_main_menuView()
90007970:	6023      	str	r3, [r4, #0]
}
90007972:	bd10      	pop	{r4, pc}
90007974:	9002d200 	.word	0x9002d200

90007978 <_ZN20screen_main_menuView11setupScreenEv>:
    screen_main_menuViewBase::setupScreen();
90007978:	f7fc be92 	b.w	900046a0 <_ZN24screen_main_menuViewBase11setupScreenEv>

9000797c <_ZN26screen_snake_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_snake_gamePresenter() {}
9000797c:	4770      	bx	lr
9000797e:	bf00      	nop

90007980 <_ZThn4_N26screen_snake_gamePresenterD1Ev>:
90007980:	3804      	subs	r0, #4
90007982:	4770      	bx	lr

90007984 <_ZN26screen_snake_gamePresenter10deactivateEv>:
}

void screen_snake_gamePresenter::activate()
{

}
90007984:	4770      	bx	lr
90007986:	bf00      	nop

90007988 <_ZN26screen_snake_gamePresenterD0Ev>:
90007988:	b510      	push	{r4, lr}
9000798a:	4604      	mov	r4, r0
9000798c:	2110      	movs	r1, #16
9000798e:	f021 fe29 	bl	900295e4 <_ZdlPvj>
90007992:	4620      	mov	r0, r4
90007994:	bd10      	pop	{r4, pc}
90007996:	bf00      	nop

90007998 <_ZThn4_N26screen_snake_gamePresenterD0Ev>:
90007998:	b500      	push	{lr}
9000799a:	3804      	subs	r0, #4
9000799c:	b083      	sub	sp, #12
9000799e:	2110      	movs	r1, #16
900079a0:	9001      	str	r0, [sp, #4]
900079a2:	f021 fe1f 	bl	900295e4 <_ZdlPvj>
900079a6:	9801      	ldr	r0, [sp, #4]
900079a8:	b003      	add	sp, #12
900079aa:	f85d fb04 	ldr.w	pc, [sp], #4
900079ae:	bf00      	nop

900079b0 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>:
    : view(v)
900079b0:	4a06      	ldr	r2, [pc, #24]	; (900079cc <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView+0x1c>)
900079b2:	60c1      	str	r1, [r0, #12]
screen_snake_gamePresenter::screen_snake_gamePresenter(screen_snake_gameView& v)
900079b4:	b410      	push	{r4}
900079b6:	2400      	movs	r4, #0
900079b8:	6084      	str	r4, [r0, #8]
    : view(v)
900079ba:	f102 0408 	add.w	r4, r2, #8
900079be:	3220      	adds	r2, #32
900079c0:	e9c0 4200 	strd	r4, r2, [r0]
}
900079c4:	f85d 4b04 	ldr.w	r4, [sp], #4
900079c8:	4770      	bx	lr
900079ca:	bf00      	nop
900079cc:	9002d22c 	.word	0x9002d22c

900079d0 <_ZN21screen_snake_gameView14tearDownScreenEv>:
}

void screen_snake_gameView::tearDownScreen()
{
    screen_snake_gameViewBase::tearDownScreen();
}
900079d0:	4770      	bx	lr
900079d2:	bf00      	nop

900079d4 <_ZN21screen_snake_gameView19change_direction_upEv>:
	add(error_square);
	error_square.getParent()->invalidate();
}

void screen_snake_gameView::change_direction_up() {
	snake_direction = SNAKE_UP;
900079d4:	4b01      	ldr	r3, [pc, #4]	; (900079dc <_ZN21screen_snake_gameView19change_direction_upEv+0x8>)
900079d6:	2201      	movs	r2, #1
900079d8:	801a      	strh	r2, [r3, #0]
}
900079da:	4770      	bx	lr
900079dc:	24000030 	.word	0x24000030

900079e0 <_ZN21screen_snake_gameView21change_direction_downEv>:

void screen_snake_gameView::change_direction_down() {
	snake_direction = SNAKE_DOWN;
900079e0:	4b01      	ldr	r3, [pc, #4]	; (900079e8 <_ZN21screen_snake_gameView21change_direction_downEv+0x8>)
900079e2:	2203      	movs	r2, #3
900079e4:	801a      	strh	r2, [r3, #0]
}
900079e6:	4770      	bx	lr
900079e8:	24000030 	.word	0x24000030

900079ec <_ZN21screen_snake_gameView21change_direction_leftEv>:

void screen_snake_gameView::change_direction_left() {
	snake_direction = SNAKE_LEFT;
900079ec:	4b01      	ldr	r3, [pc, #4]	; (900079f4 <_ZN21screen_snake_gameView21change_direction_leftEv+0x8>)
900079ee:	2202      	movs	r2, #2
900079f0:	801a      	strh	r2, [r3, #0]
}
900079f2:	4770      	bx	lr
900079f4:	24000030 	.word	0x24000030

900079f8 <_ZN21screen_snake_gameView22change_direction_rightEv>:

void screen_snake_gameView::change_direction_right() {
	snake_direction = SNAKE_RIGHT;
900079f8:	4b01      	ldr	r3, [pc, #4]	; (90007a00 <_ZN21screen_snake_gameView22change_direction_rightEv+0x8>)
900079fa:	2200      	movs	r2, #0
900079fc:	801a      	strh	r2, [r3, #0]
}
900079fe:	4770      	bx	lr
90007a00:	24000030 	.word	0x24000030

90007a04 <_ZN21screen_snake_gameView13pseudo_randomEi>:

int screen_snake_gameView::pseudo_random(int tick) {
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
90007a04:	4b09      	ldr	r3, [pc, #36]	; (90007a2c <_ZN21screen_snake_gameView13pseudo_randomEi+0x28>)
90007a06:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
90007a0a:	4a09      	ldr	r2, [pc, #36]	; (90007a30 <_ZN21screen_snake_gameView13pseudo_randomEi+0x2c>)
90007a0c:	681b      	ldr	r3, [r3, #0]
90007a0e:	6810      	ldr	r0, [r2, #0]
90007a10:	689a      	ldr	r2, [r3, #8]
90007a12:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90007a16:	8893      	ldrh	r3, [r2, #4]
90007a18:	88d2      	ldrh	r2, [r2, #6]
90007a1a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90007a1e:	fb13 f302 	smulbb	r3, r3, r2
90007a22:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
}
90007a26:	4418      	add	r0, r3
90007a28:	4770      	bx	lr
90007a2a:	bf00      	nop
90007a2c:	2401f88c 	.word	0x2401f88c
90007a30:	24000034 	.word	0x24000034

90007a34 <_ZN21screen_snake_gameView14pseudo_random2Ei>:

int screen_snake_gameView::pseudo_random2(int tick) {
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
90007a34:	4b0a      	ldr	r3, [pc, #40]	; (90007a60 <_ZN21screen_snake_gameView14pseudo_random2Ei+0x2c>)
90007a36:	f04f 0c46 	mov.w	ip, #70	; 0x46
90007a3a:	4a0a      	ldr	r2, [pc, #40]	; (90007a64 <_ZN21screen_snake_gameView14pseudo_random2Ei+0x30>)
90007a3c:	681b      	ldr	r3, [r3, #0]
90007a3e:	6810      	ldr	r0, [r2, #0]
90007a40:	689a      	ldr	r2, [r3, #8]
90007a42:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90007a46:	8893      	ldrh	r3, [r2, #4]
90007a48:	88d2      	ldrh	r2, [r2, #6]
90007a4a:	fb0c 0001 	mla	r0, ip, r1, r0
90007a4e:	fb13 f302 	smulbb	r3, r3, r2
90007a52:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90007a56:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
}
90007a5a:	4418      	add	r0, r3
90007a5c:	4770      	bx	lr
90007a5e:	bf00      	nop
90007a60:	2401f88c 	.word	0x2401f88c
90007a64:	24000034 	.word	0x24000034

90007a68 <_ZN21screen_snake_gameViewD1Ev>:

class screen_snake_gameView : public screen_snake_gameViewBase
{
public:
    screen_snake_gameView();
    virtual ~screen_snake_gameView() {}
90007a68:	4b03      	ldr	r3, [pc, #12]	; (90007a78 <_ZN21screen_snake_gameViewD1Ev+0x10>)
90007a6a:	b510      	push	{r4, lr}
90007a6c:	4604      	mov	r4, r0
90007a6e:	6003      	str	r3, [r0, #0]
90007a70:	f7fd f9a6 	bl	90004dc0 <_ZN25screen_snake_gameViewBaseD1Ev>
90007a74:	4620      	mov	r0, r4
90007a76:	bd10      	pop	{r4, pc}
90007a78:	9002d260 	.word	0x9002d260

90007a7c <_ZN21screen_snake_gameViewD0Ev>:
90007a7c:	4b06      	ldr	r3, [pc, #24]	; (90007a98 <_ZN21screen_snake_gameViewD0Ev+0x1c>)
90007a7e:	b510      	push	{r4, lr}
90007a80:	4604      	mov	r4, r0
90007a82:	6003      	str	r3, [r0, #0]
90007a84:	f7fd f99c 	bl	90004dc0 <_ZN25screen_snake_gameViewBaseD1Ev>
90007a88:	f44f 6181 	mov.w	r1, #1032	; 0x408
90007a8c:	4620      	mov	r0, r4
90007a8e:	f021 fda9 	bl	900295e4 <_ZdlPvj>
90007a92:	4620      	mov	r0, r4
90007a94:	bd10      	pop	{r4, pc}
90007a96:	bf00      	nop
90007a98:	9002d260 	.word	0x9002d260

90007a9c <_ZN21screen_snake_gameViewC1Ev>:
screen_snake_gameView::screen_snake_gameView()
90007a9c:	b510      	push	{r4, lr}
90007a9e:	4604      	mov	r4, r0
90007aa0:	f7fd fad2 	bl	90005048 <_ZN25screen_snake_gameViewBaseC1Ev>
90007aa4:	4b01      	ldr	r3, [pc, #4]	; (90007aac <_ZN21screen_snake_gameViewC1Ev+0x10>)
}
90007aa6:	4620      	mov	r0, r4
screen_snake_gameView::screen_snake_gameView()
90007aa8:	6023      	str	r3, [r4, #0]
}
90007aaa:	bd10      	pop	{r4, pc}
90007aac:	9002d260 	.word	0x9002d260

90007ab0 <_GLOBAL__sub_I_game_started>:
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90007ab0:	4b0e      	ldr	r3, [pc, #56]	; (90007aec <_GLOBAL__sub_I_game_started+0x3c>)
        : x(0), y(0), width(0), height(0)
90007ab2:	2200      	movs	r2, #0
          touchable(false),
90007ab4:	f44f 7c80 	mov.w	ip, #256	; 0x100
        : Widget(), alpha(255), color(0)
90007ab8:	21ff      	movs	r1, #255	; 0xff
90007aba:	f503 30b0 	add.w	r0, r3, #90112	; 0x16000
}
90007abe:	b410      	push	{r4}
90007ac0:	4c0b      	ldr	r4, [pc, #44]	; (90007af0 <_GLOBAL__sub_I_game_started+0x40>)
90007ac2:	f8a3 c024 	strh.w	ip, [r3, #36]	; 0x24
90007ac6:	601c      	str	r4, [r3, #0]
90007ac8:	f883 1026 	strb.w	r1, [r3, #38]	; 0x26
        : color(col)
90007acc:	629a      	str	r2, [r3, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
90007ace:	e9c3 2201 	strd	r2, r2, [r3, #4]
90007ad2:	e9c3 2203 	strd	r2, r2, [r3, #12]
          nextSibling(0),
90007ad6:	e9c3 2205 	strd	r2, r2, [r3, #20]
          cachedAbsX(0),
90007ada:	e9c3 2207 	strd	r2, r2, [r3, #28]
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90007ade:	332c      	adds	r3, #44	; 0x2c
90007ae0:	4283      	cmp	r3, r0
90007ae2:	d1ee      	bne.n	90007ac2 <_GLOBAL__sub_I_game_started+0x12>
}
90007ae4:	f85d 4b04 	ldr.w	r4, [sp], #4
90007ae8:	4770      	bx	lr
90007aea:	bf00      	nop
90007aec:	2400988c 	.word	0x2400988c
90007af0:	9002db10 	.word	0x9002db10

90007af4 <_GLOBAL__sub_D_game_started>:
90007af4:	b538      	push	{r3, r4, r5, lr}
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90007af6:	4c05      	ldr	r4, [pc, #20]	; (90007b0c <_GLOBAL__sub_D_game_started+0x18>)
90007af8:	f5a4 35b0 	sub.w	r5, r4, #90112	; 0x16000
90007afc:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
90007b00:	681b      	ldr	r3, [r3, #0]
90007b02:	4620      	mov	r0, r4
90007b04:	4798      	blx	r3
90007b06:	42ac      	cmp	r4, r5
90007b08:	d1f8      	bne.n	90007afc <_GLOBAL__sub_D_game_started+0x8>
}
90007b0a:	bd38      	pop	{r3, r4, r5, pc}
90007b0c:	2401f88c 	.word	0x2401f88c

90007b10 <_ZN21screen_snake_gameView11setupScreenEv>:
    screen_snake_gameViewBase::setupScreen();
90007b10:	f7fd b958 	b.w	90004dc4 <_ZN25screen_snake_gameViewBase11setupScreenEv>

90007b14 <_ZN21screen_snake_gameView16game_snake_startEv>:
{
90007b14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        visible = vis;
90007b18:	2400      	movs	r4, #0
90007b1a:	4606      	mov	r6, r0
	btn_snake_start.invalidate();
90007b1c:	f500 70da 	add.w	r0, r0, #436	; 0x1b4
class Drawable
90007b20:	4d2f      	ldr	r5, [pc, #188]	; (90007be0 <_ZN21screen_snake_gameView16game_snake_startEv+0xcc>)
        visible = vis;
90007b22:	f886 41d9 	strb.w	r4, [r6, #473]	; 0x1d9
90007b26:	f011 fcc0 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
90007b2a:	f506 7036 	add.w	r0, r6, #728	; 0x2d8
90007b2e:	f886 42fd 	strb.w	r4, [r6, #765]	; 0x2fd
90007b32:	f011 fcba 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_game_over.invalidate();
90007b36:	f506 70fe 	add.w	r0, r6, #508	; 0x1fc
90007b3a:	f886 4221 	strb.w	r4, [r6, #545]	; 0x221
90007b3e:	f011 fcb4 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_new_high_score.invalidate();
90007b42:	f506 7024 	add.w	r0, r6, #656	; 0x290
90007b46:	f886 42b5 	strb.w	r4, [r6, #693]	; 0x2b5
90007b4a:	f011 fcae 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_high_score.invalidate();
90007b4e:	f506 7011 	add.w	r0, r6, #580	; 0x244
90007b52:	f886 4269 	strb.w	r4, [r6, #617]	; 0x269
90007b56:	f011 fca8 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	if( head == NULL )
90007b5a:	4f22      	ldr	r7, [pc, #136]	; (90007be4 <_ZN21screen_snake_gameView16game_snake_startEv+0xd0>)
class Drawable
90007b5c:	f44f 7380 	mov.w	r3, #256	; 0x100
class Box : public Widget
90007b60:	62ac      	str	r4, [r5, #40]	; 0x28
90007b62:	6838      	ldr	r0, [r7, #0]
90007b64:	84ab      	strh	r3, [r5, #36]	; 0x24
90007b66:	23ff      	movs	r3, #255	; 0xff
90007b68:	e9c5 4401 	strd	r4, r4, [r5, #4]
90007b6c:	e9c5 4403 	strd	r4, r4, [r5, #12]
90007b70:	e9c5 4405 	strd	r4, r4, [r5, #20]
90007b74:	e9c5 4407 	strd	r4, r4, [r5, #28]
90007b78:	f885 3026 	strb.w	r3, [r5, #38]	; 0x26
90007b7c:	b318      	cbz	r0, 90007bc6 <_ZN21screen_snake_gameView16game_snake_startEv+0xb2>
        rect.x = x;
90007b7e:	4b1a      	ldr	r3, [pc, #104]	; (90007be8 <_ZN21screen_snake_gameView16game_snake_startEv+0xd4>)
90007b80:	f04f 120a 	mov.w	r2, #655370	; 0xa000a
	head->pixel = &snake_pixels[0];
90007b84:	6085      	str	r5, [r0, #8]
90007b86:	1d30      	adds	r0, r6, #4
90007b88:	606b      	str	r3, [r5, #4]
        color = newColor;
90007b8a:	4b18      	ldr	r3, [pc, #96]	; (90007bec <_ZN21screen_snake_gameView16game_snake_startEv+0xd8>)
90007b8c:	4914      	ldr	r1, [pc, #80]	; (90007be0 <_ZN21screen_snake_gameView16game_snake_startEv+0xcc>)
90007b8e:	60aa      	str	r2, [r5, #8]
90007b90:	62ab      	str	r3, [r5, #40]	; 0x28
90007b92:	f00a ff91 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	head->pixel->getParent()->invalidate();
90007b96:	683b      	ldr	r3, [r7, #0]
	tail = head;
90007b98:	4c15      	ldr	r4, [pc, #84]	; (90007bf0 <_ZN21screen_snake_gameView16game_snake_startEv+0xdc>)
        return parent;
90007b9a:	689b      	ldr	r3, [r3, #8]
90007b9c:	6958      	ldr	r0, [r3, #20]
	head->pixel->getParent()->invalidate();
90007b9e:	6803      	ldr	r3, [r0, #0]
90007ba0:	695b      	ldr	r3, [r3, #20]
90007ba2:	4798      	blx	r3
	head->next = NULL;
90007ba4:	683a      	ldr	r2, [r7, #0]
90007ba6:	2300      	movs	r3, #0
	snake_direction = SNAKE_DOWN;
90007ba8:	4912      	ldr	r1, [pc, #72]	; (90007bf4 <_ZN21screen_snake_gameView16game_snake_startEv+0xe0>)
90007baa:	2003      	movs	r0, #3
	head->prev = NULL;
90007bac:	e9c2 3300 	strd	r3, r3, [r2]
	head->old_y = 0;
90007bb0:	e9c2 3303 	strd	r3, r3, [r2, #12]
	snake_direction = SNAKE_DOWN;
90007bb4:	8008      	strh	r0, [r1, #0]
	game_started = true;
90007bb6:	2101      	movs	r1, #1
	new_high_score = false;
90007bb8:	480f      	ldr	r0, [pc, #60]	; (90007bf8 <_ZN21screen_snake_gameView16game_snake_startEv+0xe4>)
	tail = head;
90007bba:	6022      	str	r2, [r4, #0]
	game_started = true;
90007bbc:	4a0f      	ldr	r2, [pc, #60]	; (90007bfc <_ZN21screen_snake_gameView16game_snake_startEv+0xe8>)
	new_high_score = false;
90007bbe:	7003      	strb	r3, [r0, #0]
	game_started = true;
90007bc0:	7011      	strb	r1, [r2, #0]
}
90007bc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		head = (snake_piece*)malloc(sizeof(snake_piece));
90007bc6:	2014      	movs	r0, #20
90007bc8:	f021 fd5e 	bl	90029688 <malloc>
90007bcc:	6038      	str	r0, [r7, #0]
	if( head == NULL ) {
90007bce:	2800      	cmp	r0, #0
90007bd0:	d1d5      	bne.n	90007b7e <_ZN21screen_snake_gameView16game_snake_startEv+0x6a>
		error();
90007bd2:	6833      	ldr	r3, [r6, #0]
90007bd4:	4630      	mov	r0, r6
90007bd6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
90007bd8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		error();
90007bdc:	4718      	bx	r3
90007bde:	bf00      	nop
90007be0:	2400988c 	.word	0x2400988c
90007be4:	24009884 	.word	0x24009884
90007be8:	0014000a 	.word	0x0014000a
90007bec:	ff00ff32 	.word	0xff00ff32
90007bf0:	2401f88c 	.word	0x2401f88c
90007bf4:	24000030 	.word	0x24000030
90007bf8:	24009888 	.word	0x24009888
90007bfc:	24009880 	.word	0x24009880

90007c00 <_ZN21screen_snake_gameView15handleTickEventEv>:
	if( game_started )
90007c00:	f8df c338 	ldr.w	ip, [pc, #824]	; 90007f3c <_ZN21screen_snake_gameView15handleTickEventEv+0x33c>
void screen_snake_gameView::handleTickEvent() {
90007c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( game_started )
90007c08:	f89c 6000 	ldrb.w	r6, [ip]
void screen_snake_gameView::handleTickEvent() {
90007c0c:	b083      	sub	sp, #12
90007c0e:	4607      	mov	r7, r0
	if( game_started )
90007c10:	2e00      	cmp	r6, #0
90007c12:	f000 819b 	beq.w	90007f4c <_ZN21screen_snake_gameView15handleTickEventEv+0x34c>
		if( ++tick % SNAKE_SPEED == 0 )
90007c16:	4eba      	ldr	r6, [pc, #744]	; (90007f00 <_ZN21screen_snake_gameView15handleTickEventEv+0x300>)
90007c18:	49ba      	ldr	r1, [pc, #744]	; (90007f04 <_ZN21screen_snake_gameView15handleTickEventEv+0x304>)
90007c1a:	6833      	ldr	r3, [r6, #0]
90007c1c:	4aba      	ldr	r2, [pc, #744]	; (90007f08 <_ZN21screen_snake_gameView15handleTickEventEv+0x308>)
90007c1e:	3301      	adds	r3, #1
90007c20:	fb01 2203 	mla	r2, r1, r3, r2
90007c24:	6033      	str	r3, [r6, #0]
90007c26:	4bb9      	ldr	r3, [pc, #740]	; (90007f0c <_ZN21screen_snake_gameView15handleTickEventEv+0x30c>)
90007c28:	ebb3 0f72 	cmp.w	r3, r2, ror #1
90007c2c:	f240 81cd 	bls.w	90007fca <_ZN21screen_snake_gameView15handleTickEventEv+0x3ca>
			if( head->pixel->getX() > SCREEN_WIDTH || head->pixel->getX() < 0 ||
90007c30:	f8df a30c 	ldr.w	sl, [pc, #780]	; 90007f40 <_ZN21screen_snake_gameView15handleTickEventEv+0x340>
90007c34:	f8da e000 	ldr.w	lr, [sl]
90007c38:	f8de 5008 	ldr.w	r5, [lr, #8]
        return rect.x;
90007c3c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90007c40:	b293      	uxth	r3, r2
90007c42:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
90007c46:	f240 822c 	bls.w	900080a2 <_ZN21screen_snake_gameView15handleTickEventEv+0x4a2>
				game_started = false;
90007c4a:	2300      	movs	r3, #0
90007c4c:	f88c 3000 	strb.w	r3, [ip]
			snake_piece *snake_part = head->next;
90007c50:	f8de 3000 	ldr.w	r3, [lr]
			while( snake_part != NULL )
90007c54:	b913      	cbnz	r3, 90007c5c <_ZN21screen_snake_gameView15handleTickEventEv+0x5c>
90007c56:	e00f      	b.n	90007c78 <_ZN21screen_snake_gameView15handleTickEventEv+0x78>
				snake_part = snake_part->next;
90007c58:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
90007c5a:	b16b      	cbz	r3, 90007c78 <_ZN21screen_snake_gameView15handleTickEventEv+0x78>
				if( snake_part->pixel->getX() == head->pixel->getX() && snake_part->pixel->getY() == head->pixel->getY() ) {
90007c5c:	6899      	ldr	r1, [r3, #8]
90007c5e:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
90007c62:	4294      	cmp	r4, r2
90007c64:	d1f8      	bne.n	90007c58 <_ZN21screen_snake_gameView15handleTickEventEv+0x58>
90007c66:	f9b1 0006 	ldrsh.w	r0, [r1, #6]
90007c6a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90007c6e:	4288      	cmp	r0, r1
90007c70:	d1f2      	bne.n	90007c58 <_ZN21screen_snake_gameView15handleTickEventEv+0x58>
					game_started = false;
90007c72:	2300      	movs	r3, #0
90007c74:	f88c 3000 	strb.w	r3, [ip]
90007c78:	f9b7 018c 	ldrsh.w	r0, [r7, #396]	; 0x18c
90007c7c:	4629      	mov	r1, r5
90007c7e:	4673      	mov	r3, lr
90007c80:	e006      	b.n	90007c90 <_ZN21screen_snake_gameView15handleTickEventEv+0x90>
				snake_part = snake_part->next;
90007c82:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
90007c84:	2b00      	cmp	r3, #0
90007c86:	f000 80e7 	beq.w	90007e58 <_ZN21screen_snake_gameView15handleTickEventEv+0x258>
				if( snake_part->pixel->getX() == food.getX() && snake_part->pixel->getY() == food.getY() ) {
90007c8a:	6899      	ldr	r1, [r3, #8]
90007c8c:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
90007c90:	4290      	cmp	r0, r2
90007c92:	d1f6      	bne.n	90007c82 <_ZN21screen_snake_gameView15handleTickEventEv+0x82>
90007c94:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
90007c98:	f9b7 218e 	ldrsh.w	r2, [r7, #398]	; 0x18e
90007c9c:	4291      	cmp	r1, r2
90007c9e:	d1f0      	bne.n	90007c82 <_ZN21screen_snake_gameView15handleTickEventEv+0x82>
					snake_length++;
90007ca0:	4c9b      	ldr	r4, [pc, #620]	; (90007f10 <_ZN21screen_snake_gameView15handleTickEventEv+0x310>)
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90007ca2:	f240 72ff 	movw	r2, #2047	; 0x7ff
					snake_length++;
90007ca6:	f8d4 b000 	ldr.w	fp, [r4]
90007caa:	f10b 0301 	add.w	r3, fp, #1
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90007cae:	4293      	cmp	r3, r2
					snake_length++;
90007cb0:	6023      	str	r3, [r4, #0]
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90007cb2:	f000 8214 	beq.w	900080de <_ZN21screen_snake_gameView15handleTickEventEv+0x4de>
					snake_piece *new_piece = (snake_piece*)malloc(sizeof(snake_piece));
90007cb6:	2014      	movs	r0, #20
90007cb8:	f021 fce6 	bl	90029688 <malloc>
					if( new_piece == NULL ) {
90007cbc:	4680      	mov	r8, r0
90007cbe:	2800      	cmp	r0, #0
90007cc0:	f000 833c 	beq.w	9000833c <_ZN21screen_snake_gameView15handleTickEventEv+0x73c>
					snake_pixels[snake_length-1] = Box();
90007cc4:	222c      	movs	r2, #44	; 0x2c
90007cc6:	f8df 927c 	ldr.w	r9, [pc, #636]	; 90007f44 <_ZN21screen_snake_gameView15handleTickEventEv+0x344>
class Drawable
90007cca:	2100      	movs	r1, #0
90007ccc:	f44f 7380 	mov.w	r3, #256	; 0x100
90007cd0:	fb02 f20b 	mul.w	r2, r2, fp
90007cd4:	eb09 0502 	add.w	r5, r9, r2
90007cd8:	84ab      	strh	r3, [r5, #36]	; 0x24
					new_piece->pixel = &snake_pixels[snake_length-1];
90007cda:	6085      	str	r5, [r0, #8]
class Box : public Widget
90007cdc:	20ff      	movs	r0, #255	; 0xff
90007cde:	e9c5 1101 	strd	r1, r1, [r5, #4]
90007ce2:	e9c5 1103 	strd	r1, r1, [r5, #12]
90007ce6:	e9c5 1105 	strd	r1, r1, [r5, #20]
90007cea:	e9c5 1107 	strd	r1, r1, [r5, #28]
        setX(x);
90007cee:	f859 3002 	ldr.w	r3, [r9, r2]
90007cf2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90007cf4:	f885 0026 	strb.w	r0, [r5, #38]	; 0x26
90007cf8:	f109 0028 	add.w	r0, r9, #40	; 0x28
90007cfc:	5081      	str	r1, [r0, r2]
90007cfe:	4a85      	ldr	r2, [pc, #532]	; (90007f14 <_ZN21screen_snake_gameView15handleTickEventEv+0x314>)
90007d00:	4293      	cmp	r3, r2
90007d02:	f040 8236 	bne.w	90008172 <_ZN21screen_snake_gameView15handleTickEventEv+0x572>
        rect.x = x;
90007d06:	80a9      	strh	r1, [r5, #4]
        setY(y);
90007d08:	232c      	movs	r3, #44	; 0x2c
90007d0a:	4983      	ldr	r1, [pc, #524]	; (90007f18 <_ZN21screen_snake_gameView15handleTickEventEv+0x318>)
90007d0c:	fb03 f30b 	mul.w	r3, r3, fp
90007d10:	f859 2003 	ldr.w	r2, [r9, r3]
90007d14:	444b      	add	r3, r9
90007d16:	6b52      	ldr	r2, [r2, #52]	; 0x34
90007d18:	428a      	cmp	r2, r1
90007d1a:	f040 82ed 	bne.w	900082f8 <_ZN21screen_snake_gameView15handleTickEventEv+0x6f8>
        rect.y = y;
90007d1e:	2200      	movs	r2, #0
90007d20:	80da      	strh	r2, [r3, #6]
        setWidth(width);
90007d22:	222c      	movs	r2, #44	; 0x2c
90007d24:	210a      	movs	r1, #10
90007d26:	4628      	mov	r0, r5
90007d28:	fb02 f20b 	mul.w	r2, r2, fp
					tail->next = new_piece;
90007d2c:	f8df b218 	ldr.w	fp, [pc, #536]	; 90007f48 <_ZN21screen_snake_gameView15handleTickEventEv+0x348>
90007d30:	f859 3002 	ldr.w	r3, [r9, r2]
90007d34:	9201      	str	r2, [sp, #4]
90007d36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90007d38:	4798      	blx	r3
        setHeight(height);
90007d3a:	9a01      	ldr	r2, [sp, #4]
90007d3c:	4628      	mov	r0, r5
90007d3e:	210a      	movs	r1, #10
90007d40:	f859 3002 	ldr.w	r3, [r9, r2]
90007d44:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90007d46:	4798      	blx	r3
					new_piece->pixel->setColor(touchgfx::Color::getColorFromRGB(255, 130, 0));
90007d48:	f8d8 1008 	ldr.w	r1, [r8, #8]
        color = newColor;
90007d4c:	4b73      	ldr	r3, [pc, #460]	; (90007f1c <_ZN21screen_snake_gameView15handleTickEventEv+0x31c>)
90007d4e:	1d38      	adds	r0, r7, #4
90007d50:	628b      	str	r3, [r1, #40]	; 0x28
        visible = vis;
90007d52:	2301      	movs	r3, #1
90007d54:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25
90007d58:	f00a feae 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
90007d5c:	f8d8 3008 	ldr.w	r3, [r8, #8]
90007d60:	6958      	ldr	r0, [r3, #20]
					new_piece->pixel->getParent()->invalidate();
90007d62:	6803      	ldr	r3, [r0, #0]
90007d64:	695b      	ldr	r3, [r3, #20]
90007d66:	4798      	blx	r3
					tail->next = new_piece;
90007d68:	f8db 3000 	ldr.w	r3, [fp]
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007d6c:	683a      	ldr	r2, [r7, #0]
					tail->next = new_piece;
90007d6e:	f8c3 8000 	str.w	r8, [r3]
					new_piece->prev = tail;
90007d72:	f8c8 3004 	str.w	r3, [r8, #4]
					new_piece->next = NULL;
90007d76:	2300      	movs	r3, #0
90007d78:	4869      	ldr	r0, [pc, #420]	; (90007f20 <_ZN21screen_snake_gameView15handleTickEventEv+0x320>)
90007d7a:	f8c8 3000 	str.w	r3, [r8]
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007d7e:	6831      	ldr	r1, [r6, #0]
					tail = new_piece;
90007d80:	f8cb 8000 	str.w	r8, [fp]
					new_piece->old_y = 0;
90007d84:	e9c8 3303 	strd	r3, r3, [r8, #12]
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007d88:	6c13      	ldr	r3, [r2, #64]	; 0x40
90007d8a:	4283      	cmp	r3, r0
90007d8c:	f040 82af 	bne.w	900082ee <_ZN21screen_snake_gameView15handleTickEventEv+0x6ee>
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
90007d90:	f8d8 5008 	ldr.w	r5, [r8, #8]
90007d94:	6820      	ldr	r0, [r4, #0]
90007d96:	88ab      	ldrh	r3, [r5, #4]
90007d98:	88ed      	ldrh	r5, [r5, #6]
90007d9a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90007d9e:	fb13 f305 	smulbb	r3, r3, r5
90007da2:	ebc1 1501 	rsb	r5, r1, r1, lsl #4
90007da6:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
90007daa:	eb00 0045 	add.w	r0, r0, r5, lsl #1
90007dae:	4418      	add	r0, r3
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007db0:	4b5c      	ldr	r3, [pc, #368]	; (90007f24 <_ZN21screen_snake_gameView15handleTickEventEv+0x324>)
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007db2:	6c52      	ldr	r2, [r2, #68]	; 0x44
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007db4:	fb83 5300 	smull	r5, r3, r3, r0
90007db8:	17c5      	asrs	r5, r0, #31
90007dba:	4403      	add	r3, r0
90007dbc:	ebc5 2523 	rsb	r5, r5, r3, asr #8
90007dc0:	f44f 73eb 	mov.w	r3, #470	; 0x1d6
90007dc4:	fb03 0515 	mls	r5, r3, r5, r0
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007dc8:	4b57      	ldr	r3, [pc, #348]	; (90007f28 <_ZN21screen_snake_gameView15handleTickEventEv+0x328>)
90007dca:	429a      	cmp	r2, r3
90007dcc:	f040 828c 	bne.w	900082e8 <_ZN21screen_snake_gameView15handleTickEventEv+0x6e8>
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
90007dd0:	f8db 3000 	ldr.w	r3, [fp]
90007dd4:	6898      	ldr	r0, [r3, #8]
90007dd6:	6823      	ldr	r3, [r4, #0]
90007dd8:	8882      	ldrh	r2, [r0, #4]
90007dda:	88c0      	ldrh	r0, [r0, #6]
90007ddc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90007de0:	fb12 f200 	smulbb	r2, r2, r0
90007de4:	2046      	movs	r0, #70	; 0x46
90007de6:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90007dea:	fb00 3301 	mla	r3, r0, r1, r3
90007dee:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90007df2:	1898      	adds	r0, r3, r2
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007df4:	4a4d      	ldr	r2, [pc, #308]	; (90007f2c <_ZN21screen_snake_gameView15handleTickEventEv+0x32c>)
					food_new_x = food_new_x - (food_new_x % 10);
90007df6:	494e      	ldr	r1, [pc, #312]	; (90007f30 <_ZN21screen_snake_gameView15handleTickEventEv+0x330>)
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007df8:	fb82 3200 	smull	r3, r2, r2, r0
90007dfc:	17c3      	asrs	r3, r0, #31
90007dfe:	ebc3 13a2 	rsb	r3, r3, r2, asr #6
90007e02:	f44f 7283 	mov.w	r2, #262	; 0x106
90007e06:	fb02 0313 	mls	r3, r2, r3, r0
					food_new_x = food_new_x - (food_new_x % 10);
90007e0a:	17ea      	asrs	r2, r5, #31
90007e0c:	fb81 0505 	smull	r0, r5, r1, r5
					food_new_y = food_new_y - (food_new_y % 10);
90007e10:	fb81 0103 	smull	r0, r1, r1, r3
90007e14:	17db      	asrs	r3, r3, #31
					food_new_x = food_new_x - (food_new_x % 10);
90007e16:	ebc2 02a5 	rsb	r2, r2, r5, asr #2
					food.invalidate();
90007e1a:	f507 70c4 	add.w	r0, r7, #392	; 0x188
					food_new_y = food_new_y - (food_new_y % 10);
90007e1e:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
					food_new_x = food_new_x - (food_new_x % 10);
90007e22:	eb02 0282 	add.w	r2, r2, r2, lsl #2
					food_new_y = food_new_y - (food_new_y % 10);
90007e26:	eb03 0383 	add.w	r3, r3, r3, lsl #2
					food_new_x = food_new_x - (food_new_x % 10);
90007e2a:	0052      	lsls	r2, r2, #1
					food_new_y = food_new_y - (food_new_y % 10);
90007e2c:	005b      	lsls	r3, r3, #1
					food.setXY(food_new_x, food_new_y);
90007e2e:	f8a7 218c 	strh.w	r2, [r7, #396]	; 0x18c
90007e32:	f8a7 318e 	strh.w	r3, [r7, #398]	; 0x18e
					food.invalidate();
90007e36:	f011 fb38 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
					Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%d", snake_length);
90007e3a:	6823      	ldr	r3, [r4, #0]
90007e3c:	4a3d      	ldr	r2, [pc, #244]	; (90007f34 <_ZN21screen_snake_gameView15handleTickEventEv+0x334>)
90007e3e:	2114      	movs	r1, #20
90007e40:	f507 7074 	add.w	r0, r7, #976	; 0x3d0
90007e44:	f013 fb80 	bl	9001b548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
					lbl_score_val.invalidate();
90007e48:	f507 7057 	add.w	r0, r7, #860	; 0x35c
90007e4c:	f011 fb2d 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
				head->old_x = head->pixel->getX();
90007e50:	f8da e000 	ldr.w	lr, [sl]
90007e54:	f8de 5008 	ldr.w	r5, [lr, #8]
			if( snake_direction == SNAKE_RIGHT )
90007e58:	4b37      	ldr	r3, [pc, #220]	; (90007f38 <_ZN21screen_snake_gameView15handleTickEventEv+0x338>)
90007e5a:	f9b3 3000 	ldrsh.w	r3, [r3]
90007e5e:	2b00      	cmp	r3, #0
90007e60:	f040 8111 	bne.w	90008086 <_ZN21screen_snake_gameView15handleTickEventEv+0x486>
        return rect.x;
90007e64:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
        return rect.y;
90007e68:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
        setX(x);
90007e6c:	682a      	ldr	r2, [r5, #0]
				head->old_x = head->pixel->getX();
90007e6e:	f8ce 300c 	str.w	r3, [lr, #12]
				head->pixel->setXY(head->old_x+(SNAKE_MOVE), head->old_y);
90007e72:	330a      	adds	r3, #10
90007e74:	f8df b09c 	ldr.w	fp, [pc, #156]	; 90007f14 <_ZN21screen_snake_gameView15handleTickEventEv+0x314>
90007e78:	b219      	sxth	r1, r3
90007e7a:	6b13      	ldr	r3, [r2, #48]	; 0x30
				head->old_y = head->pixel->getY();
90007e7c:	f8ce 4010 	str.w	r4, [lr, #16]
90007e80:	455b      	cmp	r3, fp
90007e82:	f040 822b 	bne.w	900082dc <_ZN21screen_snake_gameView15handleTickEventEv+0x6dc>
        rect.x = x;
90007e86:	80a9      	strh	r1, [r5, #4]
        setY(y);
90007e88:	6b53      	ldr	r3, [r2, #52]	; 0x34
90007e8a:	f8df 908c 	ldr.w	r9, [pc, #140]	; 90007f18 <_ZN21screen_snake_gameView15handleTickEventEv+0x318>
90007e8e:	454b      	cmp	r3, r9
90007e90:	f040 8220 	bne.w	900082d4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6d4>
        rect.y = y;
90007e94:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90007e96:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90007e9a:	689b      	ldr	r3, [r3, #8]
90007e9c:	6958      	ldr	r0, [r3, #20]
90007e9e:	6803      	ldr	r3, [r0, #0]
90007ea0:	695b      	ldr	r3, [r3, #20]
90007ea2:	4798      	blx	r3
				snake_piece *piece = head->next;
90007ea4:	f8da 3000 	ldr.w	r3, [sl]
90007ea8:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90007eaa:	b974      	cbnz	r4, 90007eca <_ZN21screen_snake_gameView15handleTickEventEv+0x2ca>
90007eac:	e21a      	b.n	900082e4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6e4>
        setY(y);
90007eae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90007eb0:	80a9      	strh	r1, [r5, #4]
        rect.y = y;
90007eb2:	454b      	cmp	r3, r9
90007eb4:	d11f      	bne.n	90007ef6 <_ZN21screen_snake_gameView15handleTickEventEv+0x2f6>
        return parent;
90007eb6:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90007eb8:	80ef      	strh	r7, [r5, #6]
        return parent;
90007eba:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90007ebc:	6803      	ldr	r3, [r0, #0]
90007ebe:	695b      	ldr	r3, [r3, #20]
90007ec0:	4798      	blx	r3
					piece = piece->next;
90007ec2:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90007ec4:	2c00      	cmp	r4, #0
90007ec6:	f000 80fd 	beq.w	900080c4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4c4>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007eca:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90007ece:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90007ed2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90007ed6:	60e3      	str	r3, [r4, #12]
        setX(x);
90007ed8:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90007eda:	6121      	str	r1, [r4, #16]
90007edc:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007ede:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
90007ee2:	455e      	cmp	r6, fp
90007ee4:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90007ee8:	d0e1      	beq.n	90007eae <_ZN21screen_snake_gameView15handleTickEventEv+0x2ae>
        setX(x);
90007eea:	4628      	mov	r0, r5
90007eec:	47b0      	blx	r6
        setY(y);
90007eee:	682b      	ldr	r3, [r5, #0]
90007ef0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007ef2:	454b      	cmp	r3, r9
90007ef4:	d0df      	beq.n	90007eb6 <_ZN21screen_snake_gameView15handleTickEventEv+0x2b6>
90007ef6:	4639      	mov	r1, r7
90007ef8:	4628      	mov	r0, r5
90007efa:	4798      	blx	r3
        return parent;
90007efc:	68a3      	ldr	r3, [r4, #8]
90007efe:	e7dc      	b.n	90007eba <_ZN21screen_snake_gameView15handleTickEventEv+0x2ba>
90007f00:	2400987c 	.word	0x2400987c
90007f04:	cccccccd 	.word	0xcccccccd
90007f08:	19999998 	.word	0x19999998
90007f0c:	19999999 	.word	0x19999999
90007f10:	24000034 	.word	0x24000034
90007f14:	9000228d 	.word	0x9000228d
90007f18:	90002291 	.word	0x90002291
90007f1c:	ffff8200 	.word	0xffff8200
90007f20:	90007a05 	.word	0x90007a05
90007f24:	8b70344b 	.word	0x8b70344b
90007f28:	90007a35 	.word	0x90007a35
90007f2c:	3e88cb3d 	.word	0x3e88cb3d
90007f30:	66666667 	.word	0x66666667
90007f34:	9002d254 	.word	0x9002d254
90007f38:	24000030 	.word	0x24000030
90007f3c:	24009880 	.word	0x24009880
90007f40:	24009884 	.word	0x24009884
90007f44:	2400988c 	.word	0x2400988c
90007f48:	2401f88c 	.word	0x2401f88c
		if( head != NULL ) {
90007f4c:	f8df a2ec 	ldr.w	sl, [pc, #748]	; 9000823c <_ZN21screen_snake_gameView15handleTickEventEv+0x63c>
90007f50:	f8da 3000 	ldr.w	r3, [sl]
90007f54:	2b00      	cmp	r3, #0
90007f56:	d070      	beq.n	9000803a <_ZN21screen_snake_gameView15handleTickEventEv+0x43a>
			old = head->next;
90007f58:	681c      	ldr	r4, [r3, #0]
		while( old != NULL ) {
90007f5a:	2c00      	cmp	r4, #0
90007f5c:	f000 81e8 	beq.w	90008330 <_ZN21screen_snake_gameView15handleTickEventEv+0x730>
			old->pixel->setXY(-1, -1);
90007f60:	68a5      	ldr	r5, [r4, #8]
        rect.x = x;
90007f62:	f64f 78ff 	movw	r8, #65535	; 0xffff
        setX(x);
90007f66:	f8df b2bc 	ldr.w	fp, [pc, #700]	; 90008224 <_ZN21screen_snake_gameView15handleTickEventEv+0x624>
90007f6a:	682b      	ldr	r3, [r5, #0]
90007f6c:	f8df 92b8 	ldr.w	r9, [pc, #696]	; 90008228 <_ZN21screen_snake_gameView15handleTickEventEv+0x628>
90007f70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007f72:	455a      	cmp	r2, fp
90007f74:	d118      	bne.n	90007fa8 <_ZN21screen_snake_gameView15handleTickEventEv+0x3a8>
        setY(y);
90007f76:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90007f78:	f8a5 8004 	strh.w	r8, [r5, #4]
        rect.y = y;
90007f7c:	454b      	cmp	r3, r9
90007f7e:	d11b      	bne.n	90007fb8 <_ZN21screen_snake_gameView15handleTickEventEv+0x3b8>
			old->pixel->setVisible(false);
90007f80:	68a3      	ldr	r3, [r4, #8]
90007f82:	f8a5 8006 	strh.w	r8, [r5, #6]
        return parent;
90007f86:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90007f88:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
			old->pixel->getParent()->invalidate();
90007f8c:	6803      	ldr	r3, [r0, #0]
90007f8e:	695b      	ldr	r3, [r3, #20]
90007f90:	4798      	blx	r3
			old = old->next;
90007f92:	6824      	ldr	r4, [r4, #0]
			if( old != NULL ) {
90007f94:	b1e4      	cbz	r4, 90007fd0 <_ZN21screen_snake_gameView15handleTickEventEv+0x3d0>
				free(old->prev);
90007f96:	6860      	ldr	r0, [r4, #4]
90007f98:	f021 fb7e 	bl	90029698 <free>
			old->pixel->setXY(-1, -1);
90007f9c:	68a5      	ldr	r5, [r4, #8]
				old->prev = NULL;
90007f9e:	6066      	str	r6, [r4, #4]
        setX(x);
90007fa0:	682b      	ldr	r3, [r5, #0]
90007fa2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007fa4:	455a      	cmp	r2, fp
90007fa6:	d0e6      	beq.n	90007f76 <_ZN21screen_snake_gameView15handleTickEventEv+0x376>
90007fa8:	f04f 31ff 	mov.w	r1, #4294967295
90007fac:	4628      	mov	r0, r5
90007fae:	4790      	blx	r2
        setY(y);
90007fb0:	682b      	ldr	r3, [r5, #0]
90007fb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007fb4:	454b      	cmp	r3, r9
90007fb6:	d0e3      	beq.n	90007f80 <_ZN21screen_snake_gameView15handleTickEventEv+0x380>
90007fb8:	4628      	mov	r0, r5
90007fba:	f04f 31ff 	mov.w	r1, #4294967295
90007fbe:	4798      	blx	r3
			old->pixel->setVisible(false);
90007fc0:	68a3      	ldr	r3, [r4, #8]
        return parent;
90007fc2:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90007fc4:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
        return parent;
90007fc8:	e7e0      	b.n	90007f8c <_ZN21screen_snake_gameView15handleTickEventEv+0x38c>
}
90007fca:	b003      	add	sp, #12
90007fcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			else if (head != tail ) {
90007fd0:	4a92      	ldr	r2, [pc, #584]	; (9000821c <_ZN21screen_snake_gameView15handleTickEventEv+0x61c>)
90007fd2:	f8da 3000 	ldr.w	r3, [sl]
90007fd6:	6810      	ldr	r0, [r2, #0]
90007fd8:	4283      	cmp	r3, r0
90007fda:	d001      	beq.n	90007fe0 <_ZN21screen_snake_gameView15handleTickEventEv+0x3e0>
				free(tail);
90007fdc:	f021 fb5c 	bl	90029698 <free>
		if( tick > 0 ) {
90007fe0:	4e8f      	ldr	r6, [pc, #572]	; (90008220 <_ZN21screen_snake_gameView15handleTickEventEv+0x620>)
90007fe2:	6833      	ldr	r3, [r6, #0]
90007fe4:	2b00      	cmp	r3, #0
90007fe6:	dc2c      	bgt.n	90008042 <_ZN21screen_snake_gameView15handleTickEventEv+0x442>
		if( head != NULL ) {
90007fe8:	f8da 3000 	ldr.w	r3, [sl]
90007fec:	b1db      	cbz	r3, 90008026 <_ZN21screen_snake_gameView15handleTickEventEv+0x426>
			tail = head;
90007fee:	4a8b      	ldr	r2, [pc, #556]	; (9000821c <_ZN21screen_snake_gameView15handleTickEventEv+0x61c>)
			head->pixel->setXY(20, 50);
90007ff0:	689c      	ldr	r4, [r3, #8]
			tail = head;
90007ff2:	6013      	str	r3, [r2, #0]
			head->next = NULL;
90007ff4:	2200      	movs	r2, #0
90007ff6:	498b      	ldr	r1, [pc, #556]	; (90008224 <_ZN21screen_snake_gameView15handleTickEventEv+0x624>)
90007ff8:	601a      	str	r2, [r3, #0]
        setX(x);
90007ffa:	6823      	ldr	r3, [r4, #0]
90007ffc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007ffe:	428a      	cmp	r2, r1
90008000:	d168      	bne.n	900080d4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4d4>
        rect.x = x;
90008002:	2214      	movs	r2, #20
90008004:	80a2      	strh	r2, [r4, #4]
        setY(y);
90008006:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90008008:	4a87      	ldr	r2, [pc, #540]	; (90008228 <_ZN21screen_snake_gameView15handleTickEventEv+0x628>)
9000800a:	4293      	cmp	r3, r2
9000800c:	d15e      	bne.n	900080cc <_ZN21screen_snake_gameView15handleTickEventEv+0x4cc>
        rect.y = y;
9000800e:	2332      	movs	r3, #50	; 0x32
90008010:	80e3      	strh	r3, [r4, #6]
			head->pixel->getParent()->invalidate();
90008012:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90008016:	689b      	ldr	r3, [r3, #8]
90008018:	6958      	ldr	r0, [r3, #20]
9000801a:	6803      	ldr	r3, [r0, #0]
9000801c:	695b      	ldr	r3, [r3, #20]
9000801e:	4798      	blx	r3
			snake_length = 1;
90008020:	4b82      	ldr	r3, [pc, #520]	; (9000822c <_ZN21screen_snake_gameView15handleTickEventEv+0x62c>)
90008022:	2201      	movs	r2, #1
90008024:	601a      	str	r2, [r3, #0]
        visible = vis;
90008026:	2301      	movs	r3, #1
		btn_back.invalidate();
90008028:	f507 7036 	add.w	r0, r7, #728	; 0x2d8
9000802c:	f887 32fd 	strb.w	r3, [r7, #765]	; 0x2fd
}
90008030:	b003      	add	sp, #12
90008032:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		btn_back.invalidate();
90008036:	f011 ba38 	b.w	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		if( tick > 0 ) {
9000803a:	4e79      	ldr	r6, [pc, #484]	; (90008220 <_ZN21screen_snake_gameView15handleTickEventEv+0x620>)
9000803c:	6833      	ldr	r3, [r6, #0]
9000803e:	2b00      	cmp	r3, #0
90008040:	ddf1      	ble.n	90008026 <_ZN21screen_snake_gameView15handleTickEventEv+0x426>
90008042:	2501      	movs	r5, #1
			tick = 0;
90008044:	2300      	movs	r3, #0
			lbl_game_over.invalidate();
90008046:	f507 70fe 	add.w	r0, r7, #508	; 0x1fc
			if( snake_length > high_score ) {
9000804a:	4c79      	ldr	r4, [pc, #484]	; (90008230 <_ZN21screen_snake_gameView15handleTickEventEv+0x630>)
9000804c:	f887 5221 	strb.w	r5, [r7, #545]	; 0x221
			tick = 0;
90008050:	6033      	str	r3, [r6, #0]
			lbl_game_over.invalidate();
90008052:	f011 fa2a 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
			if( snake_length > high_score ) {
90008056:	4b75      	ldr	r3, [pc, #468]	; (9000822c <_ZN21screen_snake_gameView15handleTickEventEv+0x62c>)
90008058:	681a      	ldr	r2, [r3, #0]
9000805a:	6823      	ldr	r3, [r4, #0]
9000805c:	429a      	cmp	r2, r3
9000805e:	dc26      	bgt.n	900080ae <_ZN21screen_snake_gameView15handleTickEventEv+0x4ae>
			lbl_high_score.resizeToCurrentText();
90008060:	f507 7411 	add.w	r4, r7, #580	; 0x244
			Unicode::snprintf(lbl_high_scoreBuffer, LBL_HIGH_SCORE_SIZE, "%d", high_score);
90008064:	4a73      	ldr	r2, [pc, #460]	; (90008234 <_ZN21screen_snake_gameView15handleTickEventEv+0x634>)
90008066:	2114      	movs	r1, #20
90008068:	f507 706a 	add.w	r0, r7, #936	; 0x3a8
9000806c:	f013 fa6c 	bl	9001b548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
			lbl_high_score.resizeToCurrentText();
90008070:	4620      	mov	r0, r4
90008072:	9401      	str	r4, [sp, #4]
90008074:	f00d f980 	bl	90015378 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90008078:	2301      	movs	r3, #1
			lbl_high_score.invalidate();
9000807a:	9801      	ldr	r0, [sp, #4]
9000807c:	f887 3269 	strb.w	r3, [r7, #617]	; 0x269
90008080:	f011 fa13 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
90008084:	e7b0      	b.n	90007fe8 <_ZN21screen_snake_gameView15handleTickEventEv+0x3e8>
			else if( snake_direction == SNAKE_LEFT )
90008086:	2b02      	cmp	r3, #2
90008088:	d076      	beq.n	90008178 <_ZN21screen_snake_gameView15handleTickEventEv+0x578>
			else if( snake_direction == SNAKE_UP )
9000808a:	2b01      	cmp	r3, #1
9000808c:	f000 80d8 	beq.w	90008240 <_ZN21screen_snake_gameView15handleTickEventEv+0x640>
			else if( snake_direction == SNAKE_DOWN )
90008090:	2b03      	cmp	r3, #3
90008092:	d028      	beq.n	900080e6 <_ZN21screen_snake_gameView15handleTickEventEv+0x4e6>
        return parent;
90008094:	6968      	ldr	r0, [r5, #20]
			head->pixel->getParent()->invalidate();
90008096:	6803      	ldr	r3, [r0, #0]
90008098:	695b      	ldr	r3, [r3, #20]
}
9000809a:	b003      	add	sp, #12
9000809c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			head->pixel->getParent()->invalidate();
900080a0:	4718      	bx	r3
				head->pixel->getY() > SCREEN_HEIGHT || head->pixel->getY() < 0)
900080a2:	88eb      	ldrh	r3, [r5, #6]
900080a4:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
900080a8:	f63f adcf 	bhi.w	90007c4a <_ZN21screen_snake_gameView15handleTickEventEv+0x4a>
900080ac:	e5d0      	b.n	90007c50 <_ZN21screen_snake_gameView15handleTickEventEv+0x50>
				new_high_score = true;
900080ae:	4b62      	ldr	r3, [pc, #392]	; (90008238 <_ZN21screen_snake_gameView15handleTickEventEv+0x638>)
				lbl_new_high_score.invalidate();
900080b0:	f507 7024 	add.w	r0, r7, #656	; 0x290
        visible = vis;
900080b4:	f887 52b5 	strb.w	r5, [r7, #693]	; 0x2b5
				new_high_score = true;
900080b8:	701d      	strb	r5, [r3, #0]
				high_score = snake_length;
900080ba:	6022      	str	r2, [r4, #0]
				lbl_new_high_score.invalidate();
900080bc:	f011 f9f5 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
			Unicode::snprintf(lbl_high_scoreBuffer, LBL_HIGH_SCORE_SIZE, "%d", high_score);
900080c0:	6823      	ldr	r3, [r4, #0]
900080c2:	e7cd      	b.n	90008060 <_ZN21screen_snake_gameView15handleTickEventEv+0x460>
			head->pixel->getParent()->invalidate();
900080c4:	f8da 3000 	ldr.w	r3, [sl]
900080c8:	689d      	ldr	r5, [r3, #8]
900080ca:	e7e3      	b.n	90008094 <_ZN21screen_snake_gameView15handleTickEventEv+0x494>
        setY(y);
900080cc:	2132      	movs	r1, #50	; 0x32
900080ce:	4620      	mov	r0, r4
900080d0:	4798      	blx	r3
900080d2:	e79e      	b.n	90008012 <_ZN21screen_snake_gameView15handleTickEventEv+0x412>
        setX(x);
900080d4:	2114      	movs	r1, #20
900080d6:	4620      	mov	r0, r4
900080d8:	4790      	blx	r2
        setY(y);
900080da:	6823      	ldr	r3, [r4, #0]
900080dc:	e793      	b.n	90008006 <_ZN21screen_snake_gameView15handleTickEventEv+0x406>
						game_started = false;
900080de:	2300      	movs	r3, #0
900080e0:	f88c 3000 	strb.w	r3, [ip]
900080e4:	e5e7      	b.n	90007cb6 <_ZN21screen_snake_gameView15handleTickEventEv+0xb6>
        return rect.y;
900080e6:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
900080ea:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
900080ee:	f8ce 3010 	str.w	r3, [lr, #16]
				head->pixel->setXY(head->old_x, head->old_y+(SNAKE_MOVE));
900080f2:	330a      	adds	r3, #10
900080f4:	f8df b12c 	ldr.w	fp, [pc, #300]	; 90008224 <_ZN21screen_snake_gameView15handleTickEventEv+0x624>
900080f8:	b21c      	sxth	r4, r3
        setX(x);
900080fa:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
900080fc:	f8ce 100c 	str.w	r1, [lr, #12]
90008100:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008102:	455a      	cmp	r2, fp
90008104:	f040 8110 	bne.w	90008328 <_ZN21screen_snake_gameView15handleTickEventEv+0x728>
        rect.x = x;
90008108:	80a9      	strh	r1, [r5, #4]
        setY(y);
9000810a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000810c:	f8df 9118 	ldr.w	r9, [pc, #280]	; 90008228 <_ZN21screen_snake_gameView15handleTickEventEv+0x628>
90008110:	454b      	cmp	r3, r9
90008112:	f040 8105 	bne.w	90008320 <_ZN21screen_snake_gameView15handleTickEventEv+0x720>
        rect.y = y;
90008116:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90008118:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
9000811c:	689b      	ldr	r3, [r3, #8]
9000811e:	6958      	ldr	r0, [r3, #20]
90008120:	6803      	ldr	r3, [r0, #0]
90008122:	695b      	ldr	r3, [r3, #20]
90008124:	4798      	blx	r3
				snake_piece *piece = head->next;
90008126:	f8da 3000 	ldr.w	r3, [sl]
9000812a:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
9000812c:	b96c      	cbnz	r4, 9000814a <_ZN21screen_snake_gameView15handleTickEventEv+0x54a>
9000812e:	e0d9      	b.n	900082e4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6e4>
        rect.x = x;
90008130:	80a9      	strh	r1, [r5, #4]
        setY(y);
90008132:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90008134:	454b      	cmp	r3, r9
90008136:	d16c      	bne.n	90008212 <_ZN21screen_snake_gameView15handleTickEventEv+0x612>
        return parent;
90008138:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
9000813a:	80ef      	strh	r7, [r5, #6]
        return parent;
9000813c:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
9000813e:	6803      	ldr	r3, [r0, #0]
90008140:	695b      	ldr	r3, [r3, #20]
90008142:	4798      	blx	r3
					piece = piece->next;
90008144:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90008146:	2c00      	cmp	r4, #0
90008148:	d0bc      	beq.n	900080c4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4c4>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
9000814a:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
9000814e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90008152:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90008156:	60e3      	str	r3, [r4, #12]
        setX(x);
90008158:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
9000815a:	6121      	str	r1, [r4, #16]
9000815c:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
9000815e:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
90008162:	455e      	cmp	r6, fp
90008164:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90008168:	d0e2      	beq.n	90008130 <_ZN21screen_snake_gameView15handleTickEventEv+0x530>
        setX(x);
9000816a:	4628      	mov	r0, r5
9000816c:	47b0      	blx	r6
        setY(y);
9000816e:	682b      	ldr	r3, [r5, #0]
90008170:	e7df      	b.n	90008132 <_ZN21screen_snake_gameView15handleTickEventEv+0x532>
        setX(x);
90008172:	4628      	mov	r0, r5
90008174:	4798      	blx	r3
90008176:	e5c7      	b.n	90007d08 <_ZN21screen_snake_gameView15handleTickEventEv+0x108>
90008178:	682a      	ldr	r2, [r5, #0]
        return rect.x;
9000817a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
9000817e:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 90008224 <_ZN21screen_snake_gameView15handleTickEventEv+0x624>
        setX(x);
90008182:	6b16      	ldr	r6, [r2, #48]	; 0x30
        return rect.y;
90008184:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
90008188:	455e      	cmp	r6, fp
				head->old_x = head->pixel->getX();
9000818a:	f8ce 300c 	str.w	r3, [lr, #12]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
9000818e:	f1a3 030a 	sub.w	r3, r3, #10
				head->old_y = head->pixel->getY();
90008192:	f8ce 4010 	str.w	r4, [lr, #16]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
90008196:	b219      	sxth	r1, r3
        setX(x);
90008198:	f040 80b6 	bne.w	90008308 <_ZN21screen_snake_gameView15handleTickEventEv+0x708>
        rect.x = x;
9000819c:	80a9      	strh	r1, [r5, #4]
        setY(y);
9000819e:	6b53      	ldr	r3, [r2, #52]	; 0x34
900081a0:	f8df 9084 	ldr.w	r9, [pc, #132]	; 90008228 <_ZN21screen_snake_gameView15handleTickEventEv+0x628>
900081a4:	454b      	cmp	r3, r9
900081a6:	f040 80ab 	bne.w	90008300 <_ZN21screen_snake_gameView15handleTickEventEv+0x700>
        rect.y = y;
900081aa:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
900081ac:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
900081b0:	689b      	ldr	r3, [r3, #8]
900081b2:	6958      	ldr	r0, [r3, #20]
900081b4:	6803      	ldr	r3, [r0, #0]
900081b6:	695b      	ldr	r3, [r3, #20]
900081b8:	4798      	blx	r3
				snake_piece *piece = head->next;
900081ba:	f8da 3000 	ldr.w	r3, [sl]
900081be:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
900081c0:	b974      	cbnz	r4, 900081e0 <_ZN21screen_snake_gameView15handleTickEventEv+0x5e0>
900081c2:	e08f      	b.n	900082e4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6e4>
        rect.x = x;
900081c4:	80a9      	strh	r1, [r5, #4]
        setY(y);
900081c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900081c8:	454b      	cmp	r3, r9
900081ca:	d11d      	bne.n	90008208 <_ZN21screen_snake_gameView15handleTickEventEv+0x608>
        return parent;
900081cc:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
900081ce:	80ef      	strh	r7, [r5, #6]
        return parent;
900081d0:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
900081d2:	6803      	ldr	r3, [r0, #0]
900081d4:	695b      	ldr	r3, [r3, #20]
900081d6:	4798      	blx	r3
					piece = piece->next;
900081d8:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
900081da:	2c00      	cmp	r4, #0
900081dc:	f43f af72 	beq.w	900080c4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4c4>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
900081e0:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
900081e4:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
900081e8:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
900081ec:	60e3      	str	r3, [r4, #12]
        setX(x);
900081ee:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
900081f0:	6121      	str	r1, [r4, #16]
900081f2:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
900081f4:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
900081f8:	455e      	cmp	r6, fp
900081fa:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
900081fe:	d0e1      	beq.n	900081c4 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c4>
        setX(x);
90008200:	4628      	mov	r0, r5
90008202:	47b0      	blx	r6
        setY(y);
90008204:	682b      	ldr	r3, [r5, #0]
90008206:	e7de      	b.n	900081c6 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c6>
90008208:	4639      	mov	r1, r7
9000820a:	4628      	mov	r0, r5
9000820c:	4798      	blx	r3
        return parent;
9000820e:	68a3      	ldr	r3, [r4, #8]
90008210:	e7de      	b.n	900081d0 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
        setY(y);
90008212:	4639      	mov	r1, r7
90008214:	4628      	mov	r0, r5
90008216:	4798      	blx	r3
        return parent;
90008218:	68a3      	ldr	r3, [r4, #8]
9000821a:	e78f      	b.n	9000813c <_ZN21screen_snake_gameView15handleTickEventEv+0x53c>
9000821c:	2401f88c 	.word	0x2401f88c
90008220:	2400987c 	.word	0x2400987c
90008224:	9000228d 	.word	0x9000228d
90008228:	90002291 	.word	0x90002291
9000822c:	24000034 	.word	0x24000034
90008230:	24009878 	.word	0x24009878
90008234:	9002d254 	.word	0x9002d254
90008238:	24009888 	.word	0x24009888
9000823c:	24009884 	.word	0x24009884
        return rect.y;
90008240:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
90008244:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
90008248:	f8ce 3010 	str.w	r3, [lr, #16]
				head->pixel->setXY(head->old_x, head->old_y-(SNAKE_MOVE));
9000824c:	3b0a      	subs	r3, #10
9000824e:	f8df b0f8 	ldr.w	fp, [pc, #248]	; 90008348 <_ZN21screen_snake_gameView15handleTickEventEv+0x748>
90008252:	b21c      	sxth	r4, r3
        setX(x);
90008254:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
90008256:	f8ce 100c 	str.w	r1, [lr, #12]
9000825a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000825c:	455a      	cmp	r2, fp
9000825e:	d15b      	bne.n	90008318 <_ZN21screen_snake_gameView15handleTickEventEv+0x718>
        rect.x = x;
90008260:	80a9      	strh	r1, [r5, #4]
        setY(y);
90008262:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90008264:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 9000834c <_ZN21screen_snake_gameView15handleTickEventEv+0x74c>
90008268:	454b      	cmp	r3, r9
9000826a:	d151      	bne.n	90008310 <_ZN21screen_snake_gameView15handleTickEventEv+0x710>
        rect.y = y;
9000826c:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
9000826e:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90008272:	689b      	ldr	r3, [r3, #8]
90008274:	6958      	ldr	r0, [r3, #20]
90008276:	6803      	ldr	r3, [r0, #0]
90008278:	695b      	ldr	r3, [r3, #20]
9000827a:	4798      	blx	r3
				snake_piece *piece = head->next;
9000827c:	f8da 3000 	ldr.w	r3, [sl]
90008280:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90008282:	b974      	cbnz	r4, 900082a2 <_ZN21screen_snake_gameView15handleTickEventEv+0x6a2>
90008284:	e02e      	b.n	900082e4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6e4>
        rect.x = x;
90008286:	80a9      	strh	r1, [r5, #4]
        setY(y);
90008288:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000828a:	454b      	cmp	r3, r9
9000828c:	d11d      	bne.n	900082ca <_ZN21screen_snake_gameView15handleTickEventEv+0x6ca>
        return parent;
9000828e:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90008290:	80ef      	strh	r7, [r5, #6]
        return parent;
90008292:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90008294:	6803      	ldr	r3, [r0, #0]
90008296:	695b      	ldr	r3, [r3, #20]
90008298:	4798      	blx	r3
					piece = piece->next;
9000829a:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
9000829c:	2c00      	cmp	r4, #0
9000829e:	f43f af11 	beq.w	900080c4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4c4>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
900082a2:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
900082a6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
900082aa:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
900082ae:	60e3      	str	r3, [r4, #12]
        setX(x);
900082b0:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
900082b2:	6121      	str	r1, [r4, #16]
900082b4:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
900082b6:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
900082ba:	455e      	cmp	r6, fp
900082bc:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
900082c0:	d0e1      	beq.n	90008286 <_ZN21screen_snake_gameView15handleTickEventEv+0x686>
        setX(x);
900082c2:	4628      	mov	r0, r5
900082c4:	47b0      	blx	r6
        setY(y);
900082c6:	682b      	ldr	r3, [r5, #0]
900082c8:	e7de      	b.n	90008288 <_ZN21screen_snake_gameView15handleTickEventEv+0x688>
900082ca:	4639      	mov	r1, r7
900082cc:	4628      	mov	r0, r5
900082ce:	4798      	blx	r3
        return parent;
900082d0:	68a3      	ldr	r3, [r4, #8]
900082d2:	e7de      	b.n	90008292 <_ZN21screen_snake_gameView15handleTickEventEv+0x692>
        setY(y);
900082d4:	4621      	mov	r1, r4
900082d6:	4628      	mov	r0, r5
900082d8:	4798      	blx	r3
900082da:	e5dc      	b.n	90007e96 <_ZN21screen_snake_gameView15handleTickEventEv+0x296>
        setX(x);
900082dc:	4628      	mov	r0, r5
900082de:	4798      	blx	r3
        setY(y);
900082e0:	682a      	ldr	r2, [r5, #0]
900082e2:	e5d1      	b.n	90007e88 <_ZN21screen_snake_gameView15handleTickEventEv+0x288>
			head->pixel->getParent()->invalidate();
900082e4:	689d      	ldr	r5, [r3, #8]
900082e6:	e6d5      	b.n	90008094 <_ZN21screen_snake_gameView15handleTickEventEv+0x494>
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
900082e8:	4638      	mov	r0, r7
900082ea:	4790      	blx	r2
900082ec:	e582      	b.n	90007df4 <_ZN21screen_snake_gameView15handleTickEventEv+0x1f4>
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
900082ee:	4638      	mov	r0, r7
900082f0:	4798      	blx	r3
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
900082f2:	6831      	ldr	r1, [r6, #0]
900082f4:	683a      	ldr	r2, [r7, #0]
900082f6:	e55b      	b.n	90007db0 <_ZN21screen_snake_gameView15handleTickEventEv+0x1b0>
900082f8:	2100      	movs	r1, #0
900082fa:	4628      	mov	r0, r5
900082fc:	4790      	blx	r2
900082fe:	e510      	b.n	90007d22 <_ZN21screen_snake_gameView15handleTickEventEv+0x122>
90008300:	4621      	mov	r1, r4
90008302:	4628      	mov	r0, r5
90008304:	4798      	blx	r3
90008306:	e751      	b.n	900081ac <_ZN21screen_snake_gameView15handleTickEventEv+0x5ac>
        setX(x);
90008308:	4628      	mov	r0, r5
9000830a:	47b0      	blx	r6
        setY(y);
9000830c:	682a      	ldr	r2, [r5, #0]
9000830e:	e746      	b.n	9000819e <_ZN21screen_snake_gameView15handleTickEventEv+0x59e>
90008310:	4621      	mov	r1, r4
90008312:	4628      	mov	r0, r5
90008314:	4798      	blx	r3
90008316:	e7aa      	b.n	9000826e <_ZN21screen_snake_gameView15handleTickEventEv+0x66e>
        setX(x);
90008318:	4628      	mov	r0, r5
9000831a:	4790      	blx	r2
        setY(y);
9000831c:	682b      	ldr	r3, [r5, #0]
9000831e:	e7a0      	b.n	90008262 <_ZN21screen_snake_gameView15handleTickEventEv+0x662>
90008320:	4621      	mov	r1, r4
90008322:	4628      	mov	r0, r5
90008324:	4798      	blx	r3
90008326:	e6f7      	b.n	90008118 <_ZN21screen_snake_gameView15handleTickEventEv+0x518>
        setX(x);
90008328:	4628      	mov	r0, r5
9000832a:	4790      	blx	r2
        setY(y);
9000832c:	682b      	ldr	r3, [r5, #0]
9000832e:	e6ec      	b.n	9000810a <_ZN21screen_snake_gameView15handleTickEventEv+0x50a>
		if( tick > 0 ) {
90008330:	4e04      	ldr	r6, [pc, #16]	; (90008344 <_ZN21screen_snake_gameView15handleTickEventEv+0x744>)
90008332:	6832      	ldr	r2, [r6, #0]
90008334:	2a00      	cmp	r2, #0
90008336:	f77f ae5a 	ble.w	90007fee <_ZN21screen_snake_gameView15handleTickEventEv+0x3ee>
9000833a:	e682      	b.n	90008042 <_ZN21screen_snake_gameView15handleTickEventEv+0x442>
						error();
9000833c:	683b      	ldr	r3, [r7, #0]
9000833e:	4638      	mov	r0, r7
90008340:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90008342:	e6aa      	b.n	9000809a <_ZN21screen_snake_gameView15handleTickEventEv+0x49a>
90008344:	2400987c 	.word	0x2400987c
90008348:	9000228d 	.word	0x9000228d
9000834c:	90002291 	.word	0x90002291

90008350 <_ZN21screen_snake_gameView5errorEv>:
void screen_snake_gameView::error() {
90008350:	b500      	push	{lr}
          touchable(false),
90008352:	f44f 7180 	mov.w	r1, #256	; 0x100
90008356:	b08d      	sub	sp, #52	; 0x34
        : Widget(), alpha(255), color(0)
90008358:	4a0f      	ldr	r2, [pc, #60]	; (90008398 <_ZN21screen_snake_gameView5errorEv+0x48>)
          parent(0),
9000835a:	2300      	movs	r3, #0
          touchable(false),
9000835c:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
90008360:	f04f 0cff 	mov.w	ip, #255	; 0xff
        rect.x = x;
90008364:	490d      	ldr	r1, [pc, #52]	; (9000839c <_ZN21screen_snake_gameView5errorEv+0x4c>)
90008366:	3004      	adds	r0, #4
90008368:	9201      	str	r2, [sp, #4]
        color = newColor;
9000836a:	4a0d      	ldr	r2, [pc, #52]	; (900083a0 <_ZN21screen_snake_gameView5errorEv+0x50>)
        : Widget(), alpha(255), color(0)
9000836c:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
        color = newColor;
90008370:	920b      	str	r2, [sp, #44]	; 0x2c
90008372:	e9cd 3102 	strd	r3, r1, [sp, #8]
90008376:	a901      	add	r1, sp, #4
          nextSibling(0),
90008378:	e9cd 3306 	strd	r3, r3, [sp, #24]
          cachedAbsX(0),
9000837c:	e9cd 3308 	strd	r3, r3, [sp, #32]
        rect.x = x;
90008380:	e9cd 3304 	strd	r3, r3, [sp, #16]
90008384:	f00a fb98 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
90008388:	9806      	ldr	r0, [sp, #24]
	error_square.getParent()->invalidate();
9000838a:	6803      	ldr	r3, [r0, #0]
9000838c:	695b      	ldr	r3, [r3, #20]
9000838e:	4798      	blx	r3
}
90008390:	b00d      	add	sp, #52	; 0x34
90008392:	f85d fb04 	ldr.w	pc, [sp], #4
90008396:	bf00      	nop
90008398:	9002db10 	.word	0x9002db10
9000839c:	011001e0 	.word	0x011001e0
900083a0:	ffff0000 	.word	0xffff0000

900083a4 <_ZN30screen_space_invadersPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_space_invadersPresenter() {}
900083a4:	4770      	bx	lr
900083a6:	bf00      	nop

900083a8 <_ZThn4_N30screen_space_invadersPresenterD1Ev>:
900083a8:	3804      	subs	r0, #4
900083aa:	4770      	bx	lr

900083ac <_ZN30screen_space_invadersPresenter10deactivateEv>:
}

void screen_space_invadersPresenter::activate()
{

}
900083ac:	4770      	bx	lr
900083ae:	bf00      	nop

900083b0 <_ZN30screen_space_invadersPresenterD0Ev>:
900083b0:	b510      	push	{r4, lr}
900083b2:	4604      	mov	r4, r0
900083b4:	2110      	movs	r1, #16
900083b6:	f021 f915 	bl	900295e4 <_ZdlPvj>
900083ba:	4620      	mov	r0, r4
900083bc:	bd10      	pop	{r4, pc}
900083be:	bf00      	nop

900083c0 <_ZThn4_N30screen_space_invadersPresenterD0Ev>:
900083c0:	b500      	push	{lr}
900083c2:	3804      	subs	r0, #4
900083c4:	b083      	sub	sp, #12
900083c6:	2110      	movs	r1, #16
900083c8:	9001      	str	r0, [sp, #4]
900083ca:	f021 f90b 	bl	900295e4 <_ZdlPvj>
900083ce:	9801      	ldr	r0, [sp, #4]
900083d0:	b003      	add	sp, #12
900083d2:	f85d fb04 	ldr.w	pc, [sp], #4
900083d6:	bf00      	nop

900083d8 <_ZN30screen_space_invadersPresenterC1ER25screen_space_invadersView>:
    : view(v)
900083d8:	4a06      	ldr	r2, [pc, #24]	; (900083f4 <_ZN30screen_space_invadersPresenterC1ER25screen_space_invadersView+0x1c>)
900083da:	60c1      	str	r1, [r0, #12]
screen_space_invadersPresenter::screen_space_invadersPresenter(screen_space_invadersView& v)
900083dc:	b410      	push	{r4}
900083de:	2400      	movs	r4, #0
900083e0:	6084      	str	r4, [r0, #8]
    : view(v)
900083e2:	f102 0408 	add.w	r4, r2, #8
900083e6:	3220      	adds	r2, #32
900083e8:	e9c0 4200 	strd	r4, r2, [r0]
}
900083ec:	f85d 4b04 	ldr.w	r4, [sp], #4
900083f0:	4770      	bx	lr
900083f2:	bf00      	nop
900083f4:	9002d2ac 	.word	0x9002d2ac

900083f8 <_ZN25screen_space_invadersView14tearDownScreenEv>:
}

void screen_space_invadersView::tearDownScreen()
{
    screen_space_invadersViewBase::tearDownScreen();
}
900083f8:	4770      	bx	lr
900083fa:	bf00      	nop

900083fc <_ZN25screen_space_invadersView15check_game_overEv>:
        return visible;
900083fc:	4979      	ldr	r1, [pc, #484]	; (900085e4 <_ZN25screen_space_invadersView15check_game_overEv+0x1e8>)
}

void screen_space_invadersView::check_game_over()
{
	// check that the player hasn't killed all the enemies
	invaders_game_over = true;
900083fe:	2301      	movs	r3, #1
{
90008400:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	invaders_game_over = true;
90008404:	4e78      	ldr	r6, [pc, #480]	; (900085e8 <_ZN25screen_space_invadersView15check_game_overEv+0x1ec>)
90008406:	f891 5025 	ldrb.w	r5, [r1, #37]	; 0x25
9000840a:	7033      	strb	r3, [r6, #0]
	for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
		if( enemies[i].isVisible()) {
9000840c:	2d00      	cmp	r5, #0
9000840e:	f040 80e6 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
90008412:	f891 3051 	ldrb.w	r3, [r1, #81]	; 0x51
90008416:	2b00      	cmp	r3, #0
90008418:	f040 80e1 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
9000841c:	f891 307d 	ldrb.w	r3, [r1, #125]	; 0x7d
90008420:	2b00      	cmp	r3, #0
90008422:	f040 80dc 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
90008426:	f891 30a9 	ldrb.w	r3, [r1, #169]	; 0xa9
9000842a:	2b00      	cmp	r3, #0
9000842c:	f040 80d7 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
90008430:	f891 30d5 	ldrb.w	r3, [r1, #213]	; 0xd5
90008434:	2b00      	cmp	r3, #0
90008436:	f040 80d2 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
9000843a:	f891 3101 	ldrb.w	r3, [r1, #257]	; 0x101
9000843e:	2b00      	cmp	r3, #0
90008440:	f040 80cd 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
90008444:	f891 312d 	ldrb.w	r3, [r1, #301]	; 0x12d
90008448:	2b00      	cmp	r3, #0
9000844a:	f040 80c8 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
9000844e:	f891 3159 	ldrb.w	r3, [r1, #345]	; 0x159
90008452:	2b00      	cmp	r3, #0
90008454:	f040 80c3 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
90008458:	f891 3185 	ldrb.w	r3, [r1, #389]	; 0x185
9000845c:	2b00      	cmp	r3, #0
9000845e:	f040 80be 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
90008462:	f891 31b1 	ldrb.w	r3, [r1, #433]	; 0x1b1
90008466:	2b00      	cmp	r3, #0
90008468:	f040 80b9 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
9000846c:	f891 31dd 	ldrb.w	r3, [r1, #477]	; 0x1dd
90008470:	2b00      	cmp	r3, #0
90008472:	f040 80b4 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
90008476:	f891 3209 	ldrb.w	r3, [r1, #521]	; 0x209
9000847a:	2b00      	cmp	r3, #0
9000847c:	f040 80af 	bne.w	900085de <_ZN25screen_space_invadersView15check_game_overEv+0x1e2>
90008480:	4b58      	ldr	r3, [pc, #352]	; (900085e4 <_ZN25screen_space_invadersView15check_game_overEv+0x1e8>)
	// check that the enemy hasn't collided with the player
	for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
		if( !enemies[i].isVisible() )
			continue;

		if( (ship.getX() < enemies[i].getX()+enemies[i].getWidth()
90008482:	f9b0 e17c 	ldrsh.w	lr, [r0, #380]	; 0x17c
90008486:	f503 7404 	add.w	r4, r3, #528	; 0x210
		if( !enemies[i].isVisible() )
9000848a:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
9000848e:	b302      	cbz	r2, 900084d2 <_ZN25screen_space_invadersView15check_game_overEv+0xd6>
		if( (ship.getX() < enemies[i].getX()+enemies[i].getWidth()
90008490:	f9b3 c004 	ldrsh.w	ip, [r3, #4]
90008494:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
90008498:	4462      	add	r2, ip
			&& ship.getX()+ship.getWidth() > enemies[i].getX()
			&& ship.getY() + ship.getHeight() > enemies[i].getY()
			&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight()) /*
9000849a:	4572      	cmp	r2, lr
9000849c:	dd19      	ble.n	900084d2 <_ZN25screen_space_invadersView15check_game_overEv+0xd6>
			&& ship.getX()+ship.getWidth() > enemies[i].getX()
9000849e:	f9b0 2180 	ldrsh.w	r2, [r0, #384]	; 0x180
900084a2:	4472      	add	r2, lr
900084a4:	4594      	cmp	ip, r2
900084a6:	da14      	bge.n	900084d2 <_ZN25screen_space_invadersView15check_game_overEv+0xd6>
			&& ship.getY() + ship.getHeight() > enemies[i].getY()
900084a8:	f9b0 c17e 	ldrsh.w	ip, [r0, #382]	; 0x17e
        return rect.height;
900084ac:	f9b0 2182 	ldrsh.w	r2, [r0, #386]	; 0x182
900084b0:	f9b3 7006 	ldrsh.w	r7, [r3, #6]
900084b4:	eb02 080c 	add.w	r8, r2, ip
900084b8:	45b8      	cmp	r8, r7
900084ba:	dd0a      	ble.n	900084d2 <_ZN25screen_space_invadersView15check_game_overEv+0xd6>
			&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight()) /*
900084bc:	2a00      	cmp	r2, #0
900084be:	bfb8      	it	lt
900084c0:	3201      	addlt	r2, #1
900084c2:	eb0c 0c62 	add.w	ip, ip, r2, asr #1
900084c6:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
900084ca:	443a      	add	r2, r7
900084cc:	4594      	cmp	ip, r2
900084ce:	f2c0 8082 	blt.w	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
	for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900084d2:	332c      	adds	r3, #44	; 0x2c
900084d4:	42a3      	cmp	r3, r4
900084d6:	d1d8      	bne.n	9000848a <_ZN25screen_space_invadersView15check_game_overEv+0x8e>
			return;
		}
	}

	// check that the enemy bullet didn't hit the player
	if( (ship.getX() < bullet_enemy.getX()+bullet_enemy.getWidth()
900084d8:	f9b0 222c 	ldrsh.w	r2, [r0, #556]	; 0x22c
900084dc:	f9b0 3230 	ldrsh.w	r3, [r0, #560]	; 0x230
900084e0:	4413      	add	r3, r2
		&& ship.getX()+ship.getWidth() > bullet_enemy.getX()
		&& ship.getY() + ship.getHeight() > bullet_enemy.getY()
		&& ship.getY() + ship.getHeight()/2 < bullet_enemy.getY() + bullet_enemy.getHeight()) /*
900084e2:	4573      	cmp	r3, lr
900084e4:	dc5f      	bgt.n	900085a6 <_ZN25screen_space_invadersView15check_game_overEv+0x1aa>
		return;
	}

	// check that the enemy hasn't made it past the player
	for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
		if( !enemies[i].isVisible() )
900084e6:	b125      	cbz	r5, 900084f2 <_ZN25screen_space_invadersView15check_game_overEv+0xf6>
			continue;

		if( enemies[i].getY() > SCREEN_HEIGHT ) {
900084e8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900084ec:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
900084f0:	dc71      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
		if( !enemies[i].isVisible() )
900084f2:	f891 3051 	ldrb.w	r3, [r1, #81]	; 0x51
900084f6:	b123      	cbz	r3, 90008502 <_ZN25screen_space_invadersView15check_game_overEv+0x106>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
900084f8:	f9b1 3032 	ldrsh.w	r3, [r1, #50]	; 0x32
900084fc:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008500:	dc69      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
		if( !enemies[i].isVisible() )
90008502:	f891 307d 	ldrb.w	r3, [r1, #125]	; 0x7d
90008506:	b123      	cbz	r3, 90008512 <_ZN25screen_space_invadersView15check_game_overEv+0x116>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008508:	f9b1 305e 	ldrsh.w	r3, [r1, #94]	; 0x5e
9000850c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008510:	dc61      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
		if( !enemies[i].isVisible() )
90008512:	f891 30a9 	ldrb.w	r3, [r1, #169]	; 0xa9
90008516:	b123      	cbz	r3, 90008522 <_ZN25screen_space_invadersView15check_game_overEv+0x126>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008518:	f9b1 308a 	ldrsh.w	r3, [r1, #138]	; 0x8a
9000851c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008520:	dc59      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
		if( !enemies[i].isVisible() )
90008522:	f891 30d5 	ldrb.w	r3, [r1, #213]	; 0xd5
90008526:	b123      	cbz	r3, 90008532 <_ZN25screen_space_invadersView15check_game_overEv+0x136>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008528:	f9b1 30b6 	ldrsh.w	r3, [r1, #182]	; 0xb6
9000852c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008530:	dc51      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
		if( !enemies[i].isVisible() )
90008532:	f891 3101 	ldrb.w	r3, [r1, #257]	; 0x101
90008536:	b123      	cbz	r3, 90008542 <_ZN25screen_space_invadersView15check_game_overEv+0x146>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008538:	f9b1 30e2 	ldrsh.w	r3, [r1, #226]	; 0xe2
9000853c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008540:	dc49      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
		if( !enemies[i].isVisible() )
90008542:	f891 312d 	ldrb.w	r3, [r1, #301]	; 0x12d
90008546:	b123      	cbz	r3, 90008552 <_ZN25screen_space_invadersView15check_game_overEv+0x156>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008548:	f9b1 310e 	ldrsh.w	r3, [r1, #270]	; 0x10e
9000854c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008550:	dc41      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
		if( !enemies[i].isVisible() )
90008552:	f891 3159 	ldrb.w	r3, [r1, #345]	; 0x159
90008556:	b123      	cbz	r3, 90008562 <_ZN25screen_space_invadersView15check_game_overEv+0x166>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008558:	f9b1 313a 	ldrsh.w	r3, [r1, #314]	; 0x13a
9000855c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008560:	dc39      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
		if( !enemies[i].isVisible() )
90008562:	f891 3185 	ldrb.w	r3, [r1, #389]	; 0x185
90008566:	b123      	cbz	r3, 90008572 <_ZN25screen_space_invadersView15check_game_overEv+0x176>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008568:	f9b1 3166 	ldrsh.w	r3, [r1, #358]	; 0x166
9000856c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008570:	dc31      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
		if( !enemies[i].isVisible() )
90008572:	f891 31b1 	ldrb.w	r3, [r1, #433]	; 0x1b1
90008576:	b123      	cbz	r3, 90008582 <_ZN25screen_space_invadersView15check_game_overEv+0x186>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008578:	f9b1 3192 	ldrsh.w	r3, [r1, #402]	; 0x192
9000857c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008580:	dc29      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
		if( !enemies[i].isVisible() )
90008582:	f891 31dd 	ldrb.w	r3, [r1, #477]	; 0x1dd
90008586:	b123      	cbz	r3, 90008592 <_ZN25screen_space_invadersView15check_game_overEv+0x196>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008588:	f9b1 31be 	ldrsh.w	r3, [r1, #446]	; 0x1be
9000858c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008590:	dc21      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
		if( !enemies[i].isVisible() )
90008592:	f891 3209 	ldrb.w	r3, [r1, #521]	; 0x209
90008596:	b123      	cbz	r3, 900085a2 <_ZN25screen_space_invadersView15check_game_overEv+0x1a6>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008598:	f9b1 31ea 	ldrsh.w	r3, [r1, #490]	; 0x1ea
9000859c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
900085a0:	dc19      	bgt.n	900085d6 <_ZN25screen_space_invadersView15check_game_overEv+0x1da>
			// Enemy has gone past the player
			invaders_game_over = true;
			return;
		}
	}
}
900085a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		&& ship.getX()+ship.getWidth() > bullet_enemy.getX()
900085a6:	f9b0 3180 	ldrsh.w	r3, [r0, #384]	; 0x180
900085aa:	4473      	add	r3, lr
900085ac:	429a      	cmp	r2, r3
900085ae:	da9a      	bge.n	900084e6 <_ZN25screen_space_invadersView15check_game_overEv+0xea>
		&& ship.getY() + ship.getHeight() > bullet_enemy.getY()
900085b0:	f9b0 217e 	ldrsh.w	r2, [r0, #382]	; 0x17e
900085b4:	f9b0 3182 	ldrsh.w	r3, [r0, #386]	; 0x182
900085b8:	f9b0 422e 	ldrsh.w	r4, [r0, #558]	; 0x22e
900085bc:	189f      	adds	r7, r3, r2
900085be:	42a7      	cmp	r7, r4
900085c0:	dd91      	ble.n	900084e6 <_ZN25screen_space_invadersView15check_game_overEv+0xea>
		&& ship.getY() + ship.getHeight()/2 < bullet_enemy.getY() + bullet_enemy.getHeight()) /*
900085c2:	2b00      	cmp	r3, #0
900085c4:	bfb8      	it	lt
900085c6:	3301      	addlt	r3, #1
900085c8:	eb02 0263 	add.w	r2, r2, r3, asr #1
900085cc:	f9b0 3232 	ldrsh.w	r3, [r0, #562]	; 0x232
900085d0:	4423      	add	r3, r4
900085d2:	429a      	cmp	r2, r3
900085d4:	da87      	bge.n	900084e6 <_ZN25screen_space_invadersView15check_game_overEv+0xea>
			invaders_game_over = true;
900085d6:	2301      	movs	r3, #1
900085d8:	7033      	strb	r3, [r6, #0]
}
900085da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			invaders_game_over = false;
900085de:	2300      	movs	r3, #0
900085e0:	7033      	strb	r3, [r6, #0]
			break;
900085e2:	e74d      	b.n	90008480 <_ZN25screen_space_invadersView15check_game_overEv+0x84>
900085e4:	2401f898 	.word	0x2401f898
900085e8:	2401faac 	.word	0x2401faac

900085ec <_ZN25screen_space_invadersView13pseudo_randomEi>:
        return rect.x;
900085ec:	f9b0 31a8 	ldrsh.w	r3, [r0, #424]	; 0x1a8
int screen_space_invadersView::pseudo_random(int tick)
{
	int bullet_x = 7;
	int bullet_y = 7;

	if( bullet.getX() > 0 )
900085f0:	2b00      	cmp	r3, #0
{
900085f2:	b500      	push	{lr}
	if( bullet.getX() > 0 )
900085f4:	dd1a      	ble.n	9000862c <_ZN25screen_space_invadersView13pseudo_randomEi+0x40>
		bullet_x = bullet.getX();

	if( bullet.getX() > 0 )
		bullet_y = bullet.getY();
900085f6:	f9b0 21aa 	ldrsh.w	r2, [r0, #426]	; 0x1aa

	return ((7*tick+13*ship.getX()) + (3*bullet_x+3*bullet_y)) % 100;
900085fa:	441a      	add	r2, r3
900085fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90008600:	f9b0 317c 	ldrsh.w	r3, [r0, #380]	; 0x17c
90008604:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90008608:	4809      	ldr	r0, [pc, #36]	; (90008630 <_ZN25screen_space_invadersView13pseudo_randomEi+0x44>)
9000860a:	f04f 0c64 	mov.w	ip, #100	; 0x64
9000860e:	eb03 0e43 	add.w	lr, r3, r3, lsl #1
90008612:	eb03 038e 	add.w	r3, r3, lr, lsl #2
90008616:	440b      	add	r3, r1
90008618:	4413      	add	r3, r2
9000861a:	fb80 1203 	smull	r1, r2, r0, r3
9000861e:	17d8      	asrs	r0, r3, #31
90008620:	ebc0 1062 	rsb	r0, r0, r2, asr #5
90008624:	fb0c 3010 	mls	r0, ip, r0, r3
}
90008628:	f85d fb04 	ldr.w	pc, [sp], #4
9000862c:	222a      	movs	r2, #42	; 0x2a
9000862e:	e7e7      	b.n	90008600 <_ZN25screen_space_invadersView13pseudo_randomEi+0x14>
90008630:	51eb851f 	.word	0x51eb851f

90008634 <_ZN25screen_space_invadersViewD1Ev>:

class screen_space_invadersView : public screen_space_invadersViewBase
{
public:
    screen_space_invadersView();
    virtual ~screen_space_invadersView() {}
90008634:	4b03      	ldr	r3, [pc, #12]	; (90008644 <_ZN25screen_space_invadersViewD1Ev+0x10>)
90008636:	b510      	push	{r4, lr}
90008638:	4604      	mov	r4, r0
9000863a:	6003      	str	r3, [r0, #0]
9000863c:	f7fd f8ea 	bl	90005814 <_ZN29screen_space_invadersViewBaseD1Ev>
90008640:	4620      	mov	r0, r4
90008642:	bd10      	pop	{r4, pc}
90008644:	9002d2dc 	.word	0x9002d2dc

90008648 <_ZN25screen_space_invadersViewD0Ev>:
90008648:	4b06      	ldr	r3, [pc, #24]	; (90008664 <_ZN25screen_space_invadersViewD0Ev+0x1c>)
9000864a:	b510      	push	{r4, lr}
9000864c:	4604      	mov	r4, r0
9000864e:	6003      	str	r3, [r0, #0]
90008650:	f7fd f8e0 	bl	90005814 <_ZN29screen_space_invadersViewBaseD1Ev>
90008654:	f242 0138 	movw	r1, #8248	; 0x2038
90008658:	4620      	mov	r0, r4
9000865a:	f020 ffc3 	bl	900295e4 <_ZdlPvj>
9000865e:	4620      	mov	r0, r4
90008660:	bd10      	pop	{r4, pc}
90008662:	bf00      	nop
90008664:	9002d2dc 	.word	0x9002d2dc

90008668 <_GLOBAL__sub_I_enemies>:
90008668:	b570      	push	{r4, r5, r6, lr}
9000866a:	4c08      	ldr	r4, [pc, #32]	; (9000868c <_GLOBAL__sub_I_enemies+0x24>)
9000866c:	b082      	sub	sp, #8
9000866e:	f64f 76ff 	movw	r6, #65535	; 0xffff
90008672:	f504 7504 	add.w	r5, r4, #528	; 0x210
touchgfx::ScalableImage enemies[NUM_OF_ENEMIES];
90008676:	4620      	mov	r0, r4
90008678:	342c      	adds	r4, #44	; 0x2c
9000867a:	a901      	add	r1, sp, #4
9000867c:	f8ad 6004 	strh.w	r6, [sp, #4]
90008680:	f00c f948 	bl	90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90008684:	42ac      	cmp	r4, r5
90008686:	d1f6      	bne.n	90008676 <_GLOBAL__sub_I_enemies+0xe>
}
90008688:	b002      	add	sp, #8
9000868a:	bd70      	pop	{r4, r5, r6, pc}
9000868c:	2401f898 	.word	0x2401f898

90008690 <_GLOBAL__sub_D_enemies>:
90008690:	b538      	push	{r3, r4, r5, lr}
touchgfx::ScalableImage enemies[NUM_OF_ENEMIES];
90008692:	4c05      	ldr	r4, [pc, #20]	; (900086a8 <_GLOBAL__sub_D_enemies+0x18>)
90008694:	f5a4 7504 	sub.w	r5, r4, #528	; 0x210
90008698:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
9000869c:	681b      	ldr	r3, [r3, #0]
9000869e:	4620      	mov	r0, r4
900086a0:	4798      	blx	r3
900086a2:	42ac      	cmp	r4, r5
900086a4:	d1f8      	bne.n	90008698 <_GLOBAL__sub_D_enemies+0x8>
}
900086a6:	bd38      	pop	{r3, r4, r5, pc}
900086a8:	2401faa8 	.word	0x2401faa8

900086ac <_ZN25screen_space_invadersView15handleTickEventEv>:
	if( !invaders_game_over ) {
900086ac:	4bb4      	ldr	r3, [pc, #720]	; (90008980 <_ZN25screen_space_invadersView15handleTickEventEv+0x2d4>)
{
900086ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( !invaders_game_over ) {
900086b2:	781d      	ldrb	r5, [r3, #0]
{
900086b4:	b083      	sub	sp, #12
900086b6:	4604      	mov	r4, r0
	if( !invaders_game_over ) {
900086b8:	2d00      	cmp	r5, #0
900086ba:	f040 80e5 	bne.w	90008888 <_ZN25screen_space_invadersView15handleTickEventEv+0x1dc>
		check_bullet_hitbox();
900086be:	6803      	ldr	r3, [r0, #0]
900086c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900086c2:	4798      	blx	r3
		if( bullet.isVisible() ) {
900086c4:	f894 31c9 	ldrb.w	r3, [r4, #457]	; 0x1c9
900086c8:	2b00      	cmp	r3, #0
900086ca:	f040 80aa 	bne.w	90008822 <_ZN25screen_space_invadersView15handleTickEventEv+0x176>
		if( btn_left.getPressedState() && ship.getX() > 0 ) {
900086ce:	f894 30c4 	ldrb.w	r3, [r4, #196]	; 0xc4
900086d2:	2b00      	cmp	r3, #0
900086d4:	f040 809c 	bne.w	90008810 <_ZN25screen_space_invadersView15handleTickEventEv+0x164>
		else if( btn_right.getPressedState() && ship.getX() + ship.getWidth() < SCREEN_WIDTH ) {
900086d8:	f894 3100 	ldrb.w	r3, [r4, #256]	; 0x100
900086dc:	b143      	cbz	r3, 900086f0 <_ZN25screen_space_invadersView15handleTickEventEv+0x44>
900086de:	f9b4 217c 	ldrsh.w	r2, [r4, #380]	; 0x17c
900086e2:	f9b4 3180 	ldrsh.w	r3, [r4, #384]	; 0x180
900086e6:	4413      	add	r3, r2
900086e8:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
900086ec:	f2c0 80e6 	blt.w	900088bc <_ZN25screen_space_invadersView15handleTickEventEv+0x210>
        return parent;
900086f0:	f8d4 018c 	ldr.w	r0, [r4, #396]	; 0x18c
		ship.getParent()->invalidate();
900086f4:	6803      	ldr	r3, [r0, #0]
900086f6:	695b      	ldr	r3, [r3, #20]
900086f8:	4798      	blx	r3
		if( !bullet_enemy.isVisible() ) {
900086fa:	f894 624d 	ldrb.w	r6, [r4, #589]	; 0x24d
900086fe:	2e00      	cmp	r6, #0
90008700:	f040 80af 	bne.w	90008862 <_ZN25screen_space_invadersView15handleTickEventEv+0x1b6>
90008704:	4d9f      	ldr	r5, [pc, #636]	; (90008984 <_ZN25screen_space_invadersView15handleTickEventEv+0x2d8>)
	return ((7*tick+13*ship.getX()) + (3*bullet_x+3*bullet_y)) % 100;
90008706:	f04f 0a64 	mov.w	sl, #100	; 0x64
9000870a:	f8df 829c 	ldr.w	r8, [pc, #668]	; 900089a8 <_ZN25screen_space_invadersView15handleTickEventEv+0x2fc>
9000870e:	f8df 929c 	ldr.w	r9, [pc, #668]	; 900089ac <_ZN25screen_space_invadersView15handleTickEventEv+0x300>
90008712:	462f      	mov	r7, r5
90008714:	f8df b298 	ldr.w	fp, [pc, #664]	; 900089b0 <_ZN25screen_space_invadersView15handleTickEventEv+0x304>
90008718:	e020      	b.n	9000875c <_ZN25screen_space_invadersView15handleTickEventEv+0xb0>
        return rect.x;
9000871a:	f9b4 31a8 	ldrsh.w	r3, [r4, #424]	; 0x1a8
        return rect.y;
9000871e:	222a      	movs	r2, #42	; 0x2a
	if( bullet.getX() > 0 )
90008720:	2b00      	cmp	r3, #0
90008722:	dd04      	ble.n	9000872e <_ZN25screen_space_invadersView15handleTickEventEv+0x82>
		bullet_y = bullet.getY();
90008724:	f9b4 21aa 	ldrsh.w	r2, [r4, #426]	; 0x1aa
	return ((7*tick+13*ship.getX()) + (3*bullet_x+3*bullet_y)) % 100;
90008728:	441a      	add	r2, r3
9000872a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9000872e:	f9b4 317c 	ldrsh.w	r3, [r4, #380]	; 0x17c
90008732:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90008736:	eb03 0043 	add.w	r0, r3, r3, lsl #1
9000873a:	eb03 0380 	add.w	r3, r3, r0, lsl #2
9000873e:	440b      	add	r3, r1
90008740:	4413      	add	r3, r2
90008742:	fb8b 1203 	smull	r1, r2, fp, r3
90008746:	17d8      	asrs	r0, r3, #31
90008748:	ebc0 1062 	rsb	r0, r0, r2, asr #5
9000874c:	fb0a 3010 	mls	r0, sl, r0, r3
				if( pseudo_random(tick) == 8 ) {
90008750:	2808      	cmp	r0, #8
90008752:	d011      	beq.n	90008778 <_ZN25screen_space_invadersView15handleTickEventEv+0xcc>
			for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008754:	3601      	adds	r6, #1
90008756:	372c      	adds	r7, #44	; 0x2c
90008758:	2e0c      	cmp	r6, #12
9000875a:	d02a      	beq.n	900087b2 <_ZN25screen_space_invadersView15handleTickEventEv+0x106>
				if( !enemies[i].isVisible() )
9000875c:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
90008760:	2b00      	cmp	r3, #0
90008762:	d0f7      	beq.n	90008754 <_ZN25screen_space_invadersView15handleTickEventEv+0xa8>
				if( pseudo_random(tick) == 8 ) {
90008764:	6823      	ldr	r3, [r4, #0]
90008766:	f8d8 1000 	ldr.w	r1, [r8]
9000876a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000876c:	454b      	cmp	r3, r9
9000876e:	d0d4      	beq.n	9000871a <_ZN25screen_space_invadersView15handleTickEventEv+0x6e>
90008770:	4620      	mov	r0, r4
90008772:	4798      	blx	r3
90008774:	2808      	cmp	r0, #8
90008776:	d1ed      	bne.n	90008754 <_ZN25screen_space_invadersView15handleTickEventEv+0xa8>
90008778:	222c      	movs	r2, #44	; 0x2c
        visible = vis;
9000877a:	2301      	movs	r3, #1
					bullet_enemy.invalidate();
9000877c:	f504 700a 	add.w	r0, r4, #552	; 0x228
        return rect.y;
90008780:	fb02 5206 	mla	r2, r2, r6, r5
        visible = vis;
90008784:	f884 324d 	strb.w	r3, [r4, #589]	; 0x24d
					bullet_enemy.setXY(enemies[i].getX() + enemies[i].getWidth()/2, enemies[i].getY() + enemies[i].getHeight());
90008788:	8951      	ldrh	r1, [r2, #10]
9000878a:	88d3      	ldrh	r3, [r2, #6]
9000878c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90008790:	440b      	add	r3, r1
90008792:	2a00      	cmp	r2, #0
90008794:	b21b      	sxth	r3, r3
90008796:	bfb8      	it	lt
90008798:	3201      	addlt	r2, #1
        rect.y = y;
9000879a:	f8a4 322e 	strh.w	r3, [r4, #558]	; 0x22e
        return rect.x;
9000879e:	232c      	movs	r3, #44	; 0x2c
900087a0:	fb03 5606 	mla	r6, r3, r6, r5
900087a4:	88b3      	ldrh	r3, [r6, #4]
900087a6:	eb03 0362 	add.w	r3, r3, r2, asr #1
        rect.x = x;
900087aa:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
					bullet_enemy.invalidate();
900087ae:	f00b fbeb 	bl	90013f88 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
		if( ++tick%10 == 0 ) {
900087b2:	f8d8 3000 	ldr.w	r3, [r8]
900087b6:	4974      	ldr	r1, [pc, #464]	; (90008988 <_ZN25screen_space_invadersView15handleTickEventEv+0x2dc>)
900087b8:	3301      	adds	r3, #1
900087ba:	4a74      	ldr	r2, [pc, #464]	; (9000898c <_ZN25screen_space_invadersView15handleTickEventEv+0x2e0>)
900087bc:	fb01 2203 	mla	r2, r1, r3, r2
900087c0:	4973      	ldr	r1, [pc, #460]	; (90008990 <_ZN25screen_space_invadersView15handleTickEventEv+0x2e4>)
900087c2:	f8c8 3000 	str.w	r3, [r8]
900087c6:	ebb1 0f72 	cmp.w	r1, r2, ror #1
900087ca:	d943      	bls.n	90008854 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a8>
			if( enemy_move_direction == MOVE_RIGHT ) {
900087cc:	4a71      	ldr	r2, [pc, #452]	; (90008994 <_ZN25screen_space_invadersView15handleTickEventEv+0x2e8>)
900087ce:	6813      	ldr	r3, [r2, #0]
900087d0:	2b01      	cmp	r3, #1
900087d2:	f000 809b 	beq.w	9000890c <_ZN25screen_space_invadersView15handleTickEventEv+0x260>
			else if( enemy_move_direction == MOVE_LEFT ) {
900087d6:	2b00      	cmp	r3, #0
900087d8:	d174      	bne.n	900088c4 <_ZN25screen_space_invadersView15handleTickEventEv+0x218>
        return rect.x;
900087da:	4d6a      	ldr	r5, [pc, #424]	; (90008984 <_ZN25screen_space_invadersView15handleTickEventEv+0x2d8>)
				if( enemies[0].getX() > 10 ) {
900087dc:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
900087e0:	2b0a      	cmp	r3, #10
900087e2:	dd35      	ble.n	90008850 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a4>
900087e4:	4e6c      	ldr	r6, [pc, #432]	; (90008998 <_ZN25screen_space_invadersView15handleTickEventEv+0x2ec>)
900087e6:	f505 7704 	add.w	r7, r5, #528	; 0x210
900087ea:	e005      	b.n	900087f8 <_ZN25screen_space_invadersView15handleTickEventEv+0x14c>
        rect.x = x;
900087ec:	80a9      	strh	r1, [r5, #4]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900087ee:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
900087f0:	695b      	ldr	r3, [r3, #20]
900087f2:	4798      	blx	r3
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900087f4:	42bd      	cmp	r5, r7
900087f6:	d02d      	beq.n	90008854 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a8>
						enemies[i].setX(enemies[i].getX() - ENEMY_MOVE_SPEED);
900087f8:	682b      	ldr	r3, [r5, #0]
						enemies[i].invalidate();
900087fa:	4628      	mov	r0, r5
						enemies[i].setX(enemies[i].getX() - ENEMY_MOVE_SPEED);
900087fc:	88a9      	ldrh	r1, [r5, #4]
900087fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008800:	390a      	subs	r1, #10
90008802:	42b2      	cmp	r2, r6
90008804:	b209      	sxth	r1, r1
        return rect.x;
90008806:	d0f1      	beq.n	900087ec <_ZN25screen_space_invadersView15handleTickEventEv+0x140>
90008808:	4790      	blx	r2
						enemies[i].invalidate();
9000880a:	682b      	ldr	r3, [r5, #0]
9000880c:	4628      	mov	r0, r5
9000880e:	e7ee      	b.n	900087ee <_ZN25screen_space_invadersView15handleTickEventEv+0x142>
90008810:	f9b4 317c 	ldrsh.w	r3, [r4, #380]	; 0x17c
		if( btn_left.getPressedState() && ship.getX() > 0 ) {
90008814:	2b00      	cmp	r3, #0
90008816:	f77f af5f 	ble.w	900086d8 <_ZN25screen_space_invadersView15handleTickEventEv+0x2c>
			ship.setX(ship.getX() - SHIP_MOVE_SPEED);
9000881a:	3b0a      	subs	r3, #10
        rect.x = x;
9000881c:	f8a4 317c 	strh.w	r3, [r4, #380]	; 0x17c
    }
90008820:	e766      	b.n	900086f0 <_ZN25screen_space_invadersView15handleTickEventEv+0x44>
			bullet.setY(bullet.getY() - BULLET_MOVE_SPEED);
90008822:	f8b4 31aa 	ldrh.w	r3, [r4, #426]	; 0x1aa
			bullet.invalidate();
90008826:	f504 70d2 	add.w	r0, r4, #420	; 0x1a4
			bullet.setY(bullet.getY() - BULLET_MOVE_SPEED);
9000882a:	3b0a      	subs	r3, #10
			bullet.invalidate();
9000882c:	9001      	str	r0, [sp, #4]
        rect.y = y;
9000882e:	f8a4 31aa 	strh.w	r3, [r4, #426]	; 0x1aa
90008832:	f00b fba9 	bl	90013f88 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
			if( bullet.getY()+bullet.getHeight() < 0 ) {
90008836:	f9b4 21aa 	ldrsh.w	r2, [r4, #426]	; 0x1aa
9000883a:	f9b4 31ae 	ldrsh.w	r3, [r4, #430]	; 0x1ae
9000883e:	9801      	ldr	r0, [sp, #4]
90008840:	42da      	cmn	r2, r3
90008842:	f57f af44 	bpl.w	900086ce <_ZN25screen_space_invadersView15handleTickEventEv+0x22>
        visible = vis;
90008846:	f884 51c9 	strb.w	r5, [r4, #457]	; 0x1c9
				bullet.invalidate();
9000884a:	f00b fb9d 	bl	90013f88 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
9000884e:	e73e      	b.n	900086ce <_ZN25screen_space_invadersView15handleTickEventEv+0x22>
					enemy_move_direction = MOVE_DOWN;
90008850:	2303      	movs	r3, #3
90008852:	6013      	str	r3, [r2, #0]
		check_game_over();
90008854:	6823      	ldr	r3, [r4, #0]
90008856:	4620      	mov	r0, r4
90008858:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
9000885a:	b003      	add	sp, #12
9000885c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		check_game_over();
90008860:	4718      	bx	r3
			bullet_enemy.setY(bullet_enemy.getY() + BULLET_MOVE_SPEED);
90008862:	f8b4 322e 	ldrh.w	r3, [r4, #558]	; 0x22e
90008866:	330a      	adds	r3, #10
90008868:	b21b      	sxth	r3, r3
			if( bullet_enemy.getY() > SCREEN_HEIGHT ) {
9000886a:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
        rect.y = y;
9000886e:	f8a4 322e 	strh.w	r3, [r4, #558]	; 0x22e
90008872:	dd02      	ble.n	9000887a <_ZN25screen_space_invadersView15handleTickEventEv+0x1ce>
        visible = vis;
90008874:	2300      	movs	r3, #0
90008876:	f884 324d 	strb.w	r3, [r4, #589]	; 0x24d
			bullet_enemy.invalidate();
9000887a:	f504 700a 	add.w	r0, r4, #552	; 0x228
9000887e:	f8df 8128 	ldr.w	r8, [pc, #296]	; 900089a8 <_ZN25screen_space_invadersView15handleTickEventEv+0x2fc>
90008882:	f00b fb81 	bl	90013f88 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
90008886:	e794      	b.n	900087b2 <_ZN25screen_space_invadersView15handleTickEventEv+0x106>
90008888:	2501      	movs	r5, #1
		lbl_game_over.invalidate();
9000888a:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
9000888e:	f884 530d 	strb.w	r5, [r4, #781]	; 0x30d
90008892:	f010 fe0a 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		btn_back.invalidate();
90008896:	f504 702b 	add.w	r0, r4, #684	; 0x2ac
9000889a:	f884 52d1 	strb.w	r5, [r4, #721]	; 0x2d1
9000889e:	f010 fe04 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		if( enemies_killed == NUM_OF_ENEMIES ) {
900088a2:	4b3e      	ldr	r3, [pc, #248]	; (9000899c <_ZN25screen_space_invadersView15handleTickEventEv+0x2f0>)
900088a4:	681b      	ldr	r3, [r3, #0]
900088a6:	2b0c      	cmp	r3, #12
900088a8:	d054      	beq.n	90008954 <_ZN25screen_space_invadersView15handleTickEventEv+0x2a8>
			lbl_lose.invalidate();
900088aa:	f504 7070 	add.w	r0, r4, #960	; 0x3c0
900088ae:	f884 53e5 	strb.w	r5, [r4, #997]	; 0x3e5
}
900088b2:	b003      	add	sp, #12
900088b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			lbl_lose.invalidate();
900088b8:	f010 bdf7 	b.w	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
			ship.setX(ship.getX() + SHIP_MOVE_SPEED);
900088bc:	320a      	adds	r2, #10
        rect.x = x;
900088be:	f8a4 217c 	strh.w	r2, [r4, #380]	; 0x17c
    }
900088c2:	e715      	b.n	900086f0 <_ZN25screen_space_invadersView15handleTickEventEv+0x44>
			else if( enemy_move_direction == MOVE_DOWN ) {
900088c4:	2b03      	cmp	r3, #3
900088c6:	d1c5      	bne.n	90008854 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a8>
        return rect.height;
900088c8:	4d2e      	ldr	r5, [pc, #184]	; (90008984 <_ZN25screen_space_invadersView15handleTickEventEv+0x2d8>)
				if( pixels_moved < enemies[0].getHeight()/2 ) {
900088ca:	4e35      	ldr	r6, [pc, #212]	; (900089a0 <_ZN25screen_space_invadersView15handleTickEventEv+0x2f4>)
900088cc:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
900088d0:	6831      	ldr	r1, [r6, #0]
900088d2:	2b00      	cmp	r3, #0
900088d4:	bfb8      	it	lt
900088d6:	3301      	addlt	r3, #1
900088d8:	ebb1 0f63 	cmp.w	r1, r3, asr #1
900088dc:	da6a      	bge.n	900089b4 <_ZN25screen_space_invadersView15handleTickEventEv+0x308>
900088de:	4d29      	ldr	r5, [pc, #164]	; (90008984 <_ZN25screen_space_invadersView15handleTickEventEv+0x2d8>)
900088e0:	4f30      	ldr	r7, [pc, #192]	; (900089a4 <_ZN25screen_space_invadersView15handleTickEventEv+0x2f8>)
900088e2:	f505 7804 	add.w	r8, r5, #528	; 0x210
						enemies[i].setY(enemies[i].getY() + ENEMY_MOVE_SPEED);
900088e6:	682b      	ldr	r3, [r5, #0]
						enemies[i].invalidate();
900088e8:	4628      	mov	r0, r5
						enemies[i].setY(enemies[i].getY() + ENEMY_MOVE_SPEED);
900088ea:	88e9      	ldrh	r1, [r5, #6]
900088ec:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900088ee:	310a      	adds	r1, #10
900088f0:	42ba      	cmp	r2, r7
900088f2:	b209      	sxth	r1, r1
        return rect.y;
900088f4:	d137      	bne.n	90008966 <_ZN25screen_space_invadersView15handleTickEventEv+0x2ba>
        rect.y = y;
900088f6:	80e9      	strh	r1, [r5, #6]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900088f8:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
900088fa:	695b      	ldr	r3, [r3, #20]
900088fc:	4798      	blx	r3
						pixels_moved += ENEMY_MOVE_SPEED;
900088fe:	6833      	ldr	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008900:	4545      	cmp	r5, r8
						pixels_moved += ENEMY_MOVE_SPEED;
90008902:	f103 030a 	add.w	r3, r3, #10
90008906:	6033      	str	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008908:	d1ed      	bne.n	900088e6 <_ZN25screen_space_invadersView15handleTickEventEv+0x23a>
9000890a:	e7a3      	b.n	90008854 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a8>
        return rect.x;
9000890c:	4d1d      	ldr	r5, [pc, #116]	; (90008984 <_ZN25screen_space_invadersView15handleTickEventEv+0x2d8>)
				if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
9000890e:	f9b5 30e0 	ldrsh.w	r3, [r5, #224]	; 0xe0
90008912:	f9b5 1110 	ldrsh.w	r1, [r5, #272]	; 0x110
90008916:	440b      	add	r3, r1
90008918:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
9000891c:	da98      	bge.n	90008850 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a4>
9000891e:	4e1e      	ldr	r6, [pc, #120]	; (90008998 <_ZN25screen_space_invadersView15handleTickEventEv+0x2ec>)
90008920:	f505 7704 	add.w	r7, r5, #528	; 0x210
						enemies[i].setX(enemies[i].getX() + ENEMY_MOVE_SPEED);
90008924:	682b      	ldr	r3, [r5, #0]
						enemies[i].invalidate();
90008926:	4628      	mov	r0, r5
						enemies[i].setX(enemies[i].getX() + ENEMY_MOVE_SPEED);
90008928:	88a9      	ldrh	r1, [r5, #4]
9000892a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000892c:	310a      	adds	r1, #10
9000892e:	42b2      	cmp	r2, r6
90008930:	b209      	sxth	r1, r1
90008932:	d106      	bne.n	90008942 <_ZN25screen_space_invadersView15handleTickEventEv+0x296>
        rect.x = x;
90008934:	80a9      	strh	r1, [r5, #4]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008936:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
90008938:	695b      	ldr	r3, [r3, #20]
9000893a:	4798      	blx	r3
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000893c:	42bd      	cmp	r5, r7
9000893e:	d1f1      	bne.n	90008924 <_ZN25screen_space_invadersView15handleTickEventEv+0x278>
90008940:	e788      	b.n	90008854 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a8>
						enemies[i].setX(enemies[i].getX() + ENEMY_MOVE_SPEED);
90008942:	4790      	blx	r2
						enemies[i].invalidate();
90008944:	682b      	ldr	r3, [r5, #0]
90008946:	4628      	mov	r0, r5
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008948:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
9000894a:	695b      	ldr	r3, [r3, #20]
9000894c:	4798      	blx	r3
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000894e:	42af      	cmp	r7, r5
90008950:	d1e8      	bne.n	90008924 <_ZN25screen_space_invadersView15handleTickEventEv+0x278>
90008952:	e77f      	b.n	90008854 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a8>
			lbl_win.invalidate();
90008954:	f504 705e 	add.w	r0, r4, #888	; 0x378
        visible = vis;
90008958:	f884 539d 	strb.w	r5, [r4, #925]	; 0x39d
}
9000895c:	b003      	add	sp, #12
9000895e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			lbl_lose.invalidate();
90008962:	f010 bda2 	b.w	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
						enemies[i].setY(enemies[i].getY() + ENEMY_MOVE_SPEED);
90008966:	4790      	blx	r2
						enemies[i].invalidate();
90008968:	682b      	ldr	r3, [r5, #0]
9000896a:	4628      	mov	r0, r5
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000896c:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
9000896e:	695b      	ldr	r3, [r3, #20]
90008970:	4798      	blx	r3
						pixels_moved += ENEMY_MOVE_SPEED;
90008972:	6833      	ldr	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008974:	45a8      	cmp	r8, r5
						pixels_moved += ENEMY_MOVE_SPEED;
90008976:	f103 030a 	add.w	r3, r3, #10
9000897a:	6033      	str	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000897c:	d1b3      	bne.n	900088e6 <_ZN25screen_space_invadersView15handleTickEventEv+0x23a>
9000897e:	e769      	b.n	90008854 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a8>
90008980:	2401faac 	.word	0x2401faac
90008984:	2401f898 	.word	0x2401f898
90008988:	cccccccd 	.word	0xcccccccd
9000898c:	19999998 	.word	0x19999998
90008990:	19999999 	.word	0x19999999
90008994:	24000038 	.word	0x24000038
90008998:	9000228d 	.word	0x9000228d
9000899c:	2401faa8 	.word	0x2401faa8
900089a0:	2401f890 	.word	0x2401f890
900089a4:	90002291 	.word	0x90002291
900089a8:	2401f894 	.word	0x2401f894
900089ac:	900085ed 	.word	0x900085ed
900089b0:	51eb851f 	.word	0x51eb851f
					if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
900089b4:	f9b5 30e0 	ldrsh.w	r3, [r5, #224]	; 0xe0
					pixels_moved = 0;
900089b8:	2100      	movs	r1, #0
					if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
900089ba:	f9b5 0110 	ldrsh.w	r0, [r5, #272]	; 0x110
					pixels_moved = 0;
900089be:	6031      	str	r1, [r6, #0]
					if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
900089c0:	4403      	add	r3, r0
900089c2:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
900089c6:	da02      	bge.n	900089ce <_ZN25screen_space_invadersView15handleTickEventEv+0x322>
						enemy_move_direction = MOVE_RIGHT;
900089c8:	2301      	movs	r3, #1
900089ca:	6013      	str	r3, [r2, #0]
900089cc:	e742      	b.n	90008854 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a8>
						enemy_move_direction = MOVE_LEFT;
900089ce:	6011      	str	r1, [r2, #0]
900089d0:	e740      	b.n	90008854 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a8>
900089d2:	bf00      	nop

900089d4 <_ZN25screen_space_invadersView11fire_bulletEv>:
	if( !bullet.isVisible() )
900089d4:	f890 21c9 	ldrb.w	r2, [r0, #457]	; 0x1c9
{
900089d8:	4603      	mov	r3, r0
	if( !bullet.isVisible() )
900089da:	b102      	cbz	r2, 900089de <_ZN25screen_space_invadersView11fire_bulletEv+0xa>
}
900089dc:	4770      	bx	lr
		bullet.setXY(ship.getX() + (ship.getWidth()/2 - bullet.getWidth()/2), ship.getY() - bullet.getHeight()/2);
900089de:	f9b0 21ae 	ldrsh.w	r2, [r0, #430]	; 0x1ae
900089e2:	f9b0 c180 	ldrsh.w	ip, [r0, #384]	; 0x180
900089e6:	2a00      	cmp	r2, #0
900089e8:	f8b0 117e 	ldrh.w	r1, [r0, #382]	; 0x17e
900089ec:	bfb8      	it	lt
900089ee:	3201      	addlt	r2, #1
900089f0:	f1bc 0f00 	cmp.w	ip, #0
900089f4:	eba1 0162 	sub.w	r1, r1, r2, asr #1
900089f8:	f8b0 217c 	ldrh.w	r2, [r0, #380]	; 0x17c
900089fc:	f9b0 01ac 	ldrsh.w	r0, [r0, #428]	; 0x1ac
90008a00:	bfb8      	it	lt
90008a02:	f10c 0c01 	addlt.w	ip, ip, #1
90008a06:	b209      	sxth	r1, r1
90008a08:	2800      	cmp	r0, #0
90008a0a:	eb02 026c 	add.w	r2, r2, ip, asr #1
90008a0e:	f04f 0c01 	mov.w	ip, #1
        rect.y = y;
90008a12:	f8a3 11aa 	strh.w	r1, [r3, #426]	; 0x1aa
90008a16:	bfb8      	it	lt
90008a18:	3001      	addlt	r0, #1
        visible = vis;
90008a1a:	f883 c1c9 	strb.w	ip, [r3, #457]	; 0x1c9
90008a1e:	eba2 0260 	sub.w	r2, r2, r0, asr #1
		bullet.invalidate();
90008a22:	f503 70d2 	add.w	r0, r3, #420	; 0x1a4
        rect.x = x;
90008a26:	f8a3 21a8 	strh.w	r2, [r3, #424]	; 0x1a8
90008a2a:	f00b baad 	b.w	90013f88 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
90008a2e:	bf00      	nop

90008a30 <_ZN25screen_space_invadersView19check_bullet_hitboxEv>:
	if( bullet.isVisible() ) {
90008a30:	f890 31c9 	ldrb.w	r3, [r0, #457]	; 0x1c9
90008a34:	2b00      	cmp	r3, #0
90008a36:	d043      	beq.n	90008ac0 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x90>
		for(int i = 0; i < NUM_OF_ENEMIES; ++i ) {
90008a38:	2100      	movs	r1, #0
{
90008a3a:	b570      	push	{r4, r5, r6, lr}
90008a3c:	4d21      	ldr	r5, [pc, #132]	; (90008ac4 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x94>)
90008a3e:	4604      	mov	r4, r0
90008a40:	462b      	mov	r3, r5
90008a42:	e00a      	b.n	90008a5a <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x2a>
				|| (bullet.getX() + bullet.getWidth() < enemies[i].getX()+enemies[i].getWidth()
90008a44:	f9b4 c1ac 	ldrsh.w	ip, [r4, #428]	; 0x1ac
90008a48:	44f4      	add	ip, lr
					&& bullet.getX() + bullet.getWidth() > enemies[i].getX()
90008a4a:	4562      	cmp	r2, ip
90008a4c:	dd01      	ble.n	90008a52 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
90008a4e:	4560      	cmp	r0, ip
90008a50:	db12      	blt.n	90008a78 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x48>
		for(int i = 0; i < NUM_OF_ENEMIES; ++i ) {
90008a52:	3101      	adds	r1, #1
90008a54:	332c      	adds	r3, #44	; 0x2c
90008a56:	290c      	cmp	r1, #12
90008a58:	d031      	beq.n	90008abe <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x8e>
			if( !enemies[i].isVisible() )
90008a5a:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
90008a5e:	2a00      	cmp	r2, #0
90008a60:	d0f7      	beq.n	90008a52 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
        return rect.x;
90008a62:	f9b3 0004 	ldrsh.w	r0, [r3, #4]
			if( (bullet.getX() < enemies[i].getX()+enemies[i].getWidth()
90008a66:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
90008a6a:	f9b4 e1a8 	ldrsh.w	lr, [r4, #424]	; 0x1a8
90008a6e:	4402      	add	r2, r0
				&& bullet.getX() > enemies[i].getX()
90008a70:	4596      	cmp	lr, r2
90008a72:	dae7      	bge.n	90008a44 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x14>
90008a74:	4586      	cmp	lr, r0
90008a76:	dde5      	ble.n	90008a44 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x14>
        return rect.y;
90008a78:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
90008a7c:	f9b4 21aa 	ldrsh.w	r2, [r4, #426]	; 0x1aa
					&& bullet.getY() > enemies[i].getY()
90008a80:	4282      	cmp	r2, r0
90008a82:	dde6      	ble.n	90008a52 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
				&& bullet.getY() < enemies[i].getY() + enemies[i].getHeight())
90008a84:	f9b3 c00a 	ldrsh.w	ip, [r3, #10]
90008a88:	4460      	add	r0, ip
					&& bullet.getY() < enemies[i].getY() + enemies[i].getHeight())	)
90008a8a:	4282      	cmp	r2, r0
90008a8c:	dae1      	bge.n	90008a52 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
        visible = vis;
90008a8e:	232c      	movs	r3, #44	; 0x2c
90008a90:	2600      	movs	r6, #0
90008a92:	fb03 f101 	mul.w	r1, r3, r1
90008a96:	1868      	adds	r0, r5, r1
				enemies[i].invalidate();
90008a98:	586b      	ldr	r3, [r5, r1]
90008a9a:	695b      	ldr	r3, [r3, #20]
90008a9c:	f880 6025 	strb.w	r6, [r0, #37]	; 0x25
90008aa0:	4798      	blx	r3
        rect.x = x;
90008aa2:	f04f 33ff 	mov.w	r3, #4294967295
				bullet.invalidate();
90008aa6:	f504 70d2 	add.w	r0, r4, #420	; 0x1a4
        visible = vis;
90008aaa:	f884 61c9 	strb.w	r6, [r4, #457]	; 0x1c9
        rect.x = x;
90008aae:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
90008ab2:	f00b fa69 	bl	90013f88 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
				enemies_killed++;
90008ab6:	4a04      	ldr	r2, [pc, #16]	; (90008ac8 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x98>)
90008ab8:	6813      	ldr	r3, [r2, #0]
90008aba:	3301      	adds	r3, #1
90008abc:	6013      	str	r3, [r2, #0]
}
90008abe:	bd70      	pop	{r4, r5, r6, pc}
90008ac0:	4770      	bx	lr
90008ac2:	bf00      	nop
90008ac4:	2401f898 	.word	0x2401f898
90008ac8:	2401faa8 	.word	0x2401faa8

90008acc <_ZN25screen_space_invadersViewC1Ev>:
screen_space_invadersView::screen_space_invadersView()
90008acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008ad0:	b085      	sub	sp, #20
90008ad2:	4605      	mov	r5, r0
        visible = vis;
90008ad4:	2400      	movs	r4, #0
90008ad6:	f7fc fed9 	bl	9000588c <_ZN29screen_space_invadersViewBaseC1Ev>
90008ada:	4b51      	ldr	r3, [pc, #324]	; (90008c20 <_ZN25screen_space_invadersViewC1Ev+0x154>)
        rect.x = x;
90008adc:	f04f 36ff 	mov.w	r6, #4294967295
	enemy1.invalidate();
90008ae0:	f505 70a6 	add.w	r0, r5, #332	; 0x14c
        visible = vis;
90008ae4:	f885 4171 	strb.w	r4, [r5, #369]	; 0x171
screen_space_invadersView::screen_space_invadersView()
90008ae8:	602b      	str	r3, [r5, #0]
90008aea:	f105 0b04 	add.w	fp, r5, #4
	enemy1.invalidate();
90008aee:	f010 fcdc 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	bullet.invalidate();
90008af2:	f505 70d2 	add.w	r0, r5, #420	; 0x1a4
        rect.x = x;
90008af6:	f8c5 61a8 	str.w	r6, [r5, #424]	; 0x1a8
90008afa:	f04f 080f 	mov.w	r8, #15
        visible = vis;
90008afe:	f885 41c9 	strb.w	r4, [r5, #457]	; 0x1c9
90008b02:	f00b fa41 	bl	90013f88 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	bullet_enemy.invalidate();
90008b06:	f505 700a 	add.w	r0, r5, #552	; 0x228
        rect.x = x;
90008b0a:	f8c5 622c 	str.w	r6, [r5, #556]	; 0x22c
        visible = vis;
90008b0e:	f885 424d 	strb.w	r4, [r5, #589]	; 0x24d
90008b12:	f00b fa39 	bl	90013f88 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	lbl_game_over.invalidate();
90008b16:	f505 703a 	add.w	r0, r5, #744	; 0x2e8
90008b1a:	f885 430d 	strb.w	r4, [r5, #781]	; 0x30d
	int counter = 0;
90008b1e:	9401      	str	r4, [sp, #4]
	lbl_game_over.invalidate();
90008b20:	f010 fcc3 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
90008b24:	f505 702b 	add.w	r0, r5, #684	; 0x2ac
90008b28:	f885 42d1 	strb.w	r4, [r5, #721]	; 0x2d1
90008b2c:	f010 fcbd 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_lose.invalidate();
90008b30:	f505 7070 	add.w	r0, r5, #960	; 0x3c0
90008b34:	f885 43e5 	strb.w	r4, [r5, #997]	; 0x3e5
90008b38:	f010 fcb7 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_win.invalidate();
90008b3c:	f505 705e 	add.w	r0, r5, #888	; 0x378
90008b40:	f885 439d 	strb.w	r4, [r5, #925]	; 0x39d
90008b44:	f010 fcb1 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	enemies_killed = 0;
90008b48:	4a36      	ldr	r2, [pc, #216]	; (90008c24 <_ZN25screen_space_invadersViewC1Ev+0x158>)
	enemy_move_direction = MOVE_RIGHT;
90008b4a:	4b37      	ldr	r3, [pc, #220]	; (90008c28 <_ZN25screen_space_invadersViewC1Ev+0x15c>)
	enemies_killed = 0;
90008b4c:	6014      	str	r4, [r2, #0]
	enemy_move_direction = MOVE_RIGHT;
90008b4e:	2201      	movs	r2, #1
90008b50:	4e36      	ldr	r6, [pc, #216]	; (90008c2c <_ZN25screen_space_invadersViewC1Ev+0x160>)
90008b52:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 90008c38 <_ZN25screen_space_invadersViewC1Ev+0x16c>
90008b56:	601a      	str	r2, [r3, #0]
	int current_y = 0;
90008b58:	9400      	str	r4, [sp, #0]
			enemies[counter].setPosition(current_x, current_y, 50, 52);
90008b5a:	f9bd 7000 	ldrsh.w	r7, [sp]
90008b5e:	f5a6 7984 	sub.w	r9, r6, #264	; 0x108
		current_x = 0;
90008b62:	2400      	movs	r4, #0
90008b64:	e02c      	b.n	90008bc0 <_ZN25screen_space_invadersViewC1Ev+0xf4>
        setY(y);
90008b66:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
90008b68:	f8a9 1004 	strh.w	r1, [r9, #4]
        rect.y = y;
90008b6c:	4930      	ldr	r1, [pc, #192]	; (90008c30 <_ZN25screen_space_invadersViewC1Ev+0x164>)
90008b6e:	428a      	cmp	r2, r1
90008b70:	d13c      	bne.n	90008bec <_ZN25screen_space_invadersViewC1Ev+0x120>
90008b72:	f8a9 7006 	strh.w	r7, [r9, #6]
        setWidth(width);
90008b76:	4648      	mov	r0, r9
90008b78:	2132      	movs	r1, #50	; 0x32
90008b7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90008b7c:	4798      	blx	r3
        setHeight(height);
90008b7e:	f8d9 3000 	ldr.w	r3, [r9]
90008b82:	4648      	mov	r0, r9
90008b84:	2134      	movs	r1, #52	; 0x34
90008b86:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90008b88:	4798      	blx	r3
			enemies[counter].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90008b8a:	f8d9 3000 	ldr.w	r3, [r9]
90008b8e:	4648      	mov	r0, r9
90008b90:	2100      	movs	r1, #0
90008b92:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90008b94:	4798      	blx	r3
        visible = vis;
90008b96:	2301      	movs	r3, #1
90008b98:	4649      	mov	r1, r9
90008b9a:	4658      	mov	r0, fp
90008b9c:	f889 3025 	strb.w	r3, [r9, #37]	; 0x25
90008ba0:	f009 ff8a 	bl	90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
			enemies[counter].invalidate();
90008ba4:	f8d9 3000 	ldr.w	r3, [r9]
90008ba8:	4648      	mov	r0, r9
		for(int j = 0; j < NUM_OF_ENEMIES_PER_ROW; ++j) {
90008baa:	f109 092c 	add.w	r9, r9, #44	; 0x2c
			enemies[counter].invalidate();
90008bae:	695b      	ldr	r3, [r3, #20]
90008bb0:	4798      	blx	r3
			current_x += enemy1.getWidth() + SPACE_BETWEEN_ENEMIES_X;
90008bb2:	f9b5 3154 	ldrsh.w	r3, [r5, #340]	; 0x154
		for(int j = 0; j < NUM_OF_ENEMIES_PER_ROW; ++j) {
90008bb6:	45b1      	cmp	r9, r6
			current_x += enemy1.getWidth() + SPACE_BETWEEN_ENEMIES_X;
90008bb8:	f103 030f 	add.w	r3, r3, #15
90008bbc:	441c      	add	r4, r3
		for(int j = 0; j < NUM_OF_ENEMIES_PER_ROW; ++j) {
90008bbe:	d01b      	beq.n	90008bf8 <_ZN25screen_space_invadersViewC1Ev+0x12c>
			enemies[counter].setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_ENEMY_ID));
90008bc0:	f8d9 3000 	ldr.w	r3, [r9]
90008bc4:	a903      	add	r1, sp, #12
90008bc6:	4648      	mov	r0, r9
90008bc8:	f8ad 800c 	strh.w	r8, [sp, #12]
90008bcc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90008bce:	4798      	blx	r3
        setX(x);
90008bd0:	f8d9 3000 	ldr.w	r3, [r9]
			enemies[counter].setPosition(current_x, current_y, 50, 52);
90008bd4:	b221      	sxth	r1, r4
90008bd6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008bd8:	4552      	cmp	r2, sl
90008bda:	d0c4      	beq.n	90008b66 <_ZN25screen_space_invadersViewC1Ev+0x9a>
90008bdc:	4648      	mov	r0, r9
90008bde:	4790      	blx	r2
90008be0:	f8d9 3000 	ldr.w	r3, [r9]
        rect.y = y;
90008be4:	4912      	ldr	r1, [pc, #72]	; (90008c30 <_ZN25screen_space_invadersViewC1Ev+0x164>)
        setY(y);
90008be6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90008be8:	428a      	cmp	r2, r1
90008bea:	d0c2      	beq.n	90008b72 <_ZN25screen_space_invadersViewC1Ev+0xa6>
90008bec:	4648      	mov	r0, r9
90008bee:	4639      	mov	r1, r7
90008bf0:	4790      	blx	r2
90008bf2:	f8d9 3000 	ldr.w	r3, [r9]
90008bf6:	e7be      	b.n	90008b76 <_ZN25screen_space_invadersViewC1Ev+0xaa>
			counter++;
90008bf8:	9b01      	ldr	r3, [sp, #4]
	for(int i = 0; i < NUM_OF_ROWS_OF_ENEMIES; ++i) {
90008bfa:	f509 7684 	add.w	r6, r9, #264	; 0x108
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
90008bfe:	9900      	ldr	r1, [sp, #0]
			counter++;
90008c00:	3306      	adds	r3, #6
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
90008c02:	f9b5 2156 	ldrsh.w	r2, [r5, #342]	; 0x156
	for(int i = 0; i < NUM_OF_ROWS_OF_ENEMIES; ++i) {
90008c06:	2b0c      	cmp	r3, #12
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
90008c08:	4411      	add	r1, r2
			counter++;
90008c0a:	9301      	str	r3, [sp, #4]
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
90008c0c:	9100      	str	r1, [sp, #0]
	for(int i = 0; i < NUM_OF_ROWS_OF_ENEMIES; ++i) {
90008c0e:	d1a4      	bne.n	90008b5a <_ZN25screen_space_invadersViewC1Ev+0x8e>
	invaders_game_over = false;
90008c10:	4b08      	ldr	r3, [pc, #32]	; (90008c34 <_ZN25screen_space_invadersViewC1Ev+0x168>)
90008c12:	2200      	movs	r2, #0
}
90008c14:	4628      	mov	r0, r5
	invaders_game_over = false;
90008c16:	701a      	strb	r2, [r3, #0]
}
90008c18:	b005      	add	sp, #20
90008c1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008c1e:	bf00      	nop
90008c20:	9002d2dc 	.word	0x9002d2dc
90008c24:	2401faa8 	.word	0x2401faa8
90008c28:	24000038 	.word	0x24000038
90008c2c:	2401f9a0 	.word	0x2401f9a0
90008c30:	90002291 	.word	0x90002291
90008c34:	2401faac 	.word	0x2401faac
90008c38:	9000228d 	.word	0x9000228d

90008c3c <_ZN25screen_space_invadersView11setupScreenEv>:
    screen_space_invadersViewBase::setupScreen();
90008c3c:	f7fc bdbc 	b.w	900057b8 <_ZN29screen_space_invadersViewBase11setupScreenEv>

90008c40 <_ZN30screen_tictactoe_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_tictactoe_gamePresenter() {}
90008c40:	4770      	bx	lr
90008c42:	bf00      	nop

90008c44 <_ZThn4_N30screen_tictactoe_gamePresenterD1Ev>:
90008c44:	3804      	subs	r0, #4
90008c46:	4770      	bx	lr

90008c48 <_ZN30screen_tictactoe_gamePresenter10deactivateEv>:
}

void screen_tictactoe_gamePresenter::activate()
{

}
90008c48:	4770      	bx	lr
90008c4a:	bf00      	nop

90008c4c <_ZN30screen_tictactoe_gamePresenterD0Ev>:
90008c4c:	b510      	push	{r4, lr}
90008c4e:	4604      	mov	r4, r0
90008c50:	2110      	movs	r1, #16
90008c52:	f020 fcc7 	bl	900295e4 <_ZdlPvj>
90008c56:	4620      	mov	r0, r4
90008c58:	bd10      	pop	{r4, pc}
90008c5a:	bf00      	nop

90008c5c <_ZThn4_N30screen_tictactoe_gamePresenterD0Ev>:
90008c5c:	b500      	push	{lr}
90008c5e:	3804      	subs	r0, #4
90008c60:	b083      	sub	sp, #12
90008c62:	2110      	movs	r1, #16
90008c64:	9001      	str	r0, [sp, #4]
90008c66:	f020 fcbd 	bl	900295e4 <_ZdlPvj>
90008c6a:	9801      	ldr	r0, [sp, #4]
90008c6c:	b003      	add	sp, #12
90008c6e:	f85d fb04 	ldr.w	pc, [sp], #4
90008c72:	bf00      	nop

90008c74 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>:
    : view(v)
90008c74:	4a06      	ldr	r2, [pc, #24]	; (90008c90 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView+0x1c>)
90008c76:	60c1      	str	r1, [r0, #12]
screen_tictactoe_gamePresenter::screen_tictactoe_gamePresenter(screen_tictactoe_gameView& v)
90008c78:	b410      	push	{r4}
90008c7a:	2400      	movs	r4, #0
90008c7c:	6084      	str	r4, [r0, #8]
    : view(v)
90008c7e:	f102 0408 	add.w	r4, r2, #8
90008c82:	3220      	adds	r2, #32
90008c84:	e9c0 4200 	strd	r4, r2, [r0]
}
90008c88:	f85d 4b04 	ldr.w	r4, [sp], #4
90008c8c:	4770      	bx	lr
90008c8e:	bf00      	nop
90008c90:	9002d318 	.word	0x9002d318

90008c94 <_ZN25screen_tictactoe_gameView14tearDownScreenEv>:
}

void screen_tictactoe_gameView::tearDownScreen()
{
    screen_tictactoe_gameViewBase::tearDownScreen();
}
90008c94:	4770      	bx	lr
90008c96:	bf00      	nop

90008c98 <_ZN25screen_tictactoe_gameView12is_game_overEii>:
	// 2 -> player 2 wins
	// 3 -> tie

	char symbol;

	if(turn)
90008c98:	4b22      	ldr	r3, [pc, #136]	; (90008d24 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x8c>)
90008c9a:	7818      	ldrb	r0, [r3, #0]
	else
		symbol = 'O';

    //check col
    for(short i = 0; i < 3; i++){
        if(board[x][i] != symbol)
90008c9c:	eb01 0341 	add.w	r3, r1, r1, lsl #1
		symbol = 'O';
90008ca0:	2800      	cmp	r0, #0
short screen_tictactoe_gameView::is_game_over(int x, int y) {
90008ca2:	b530      	push	{r4, r5, lr}
        if(board[x][i] != symbol)
90008ca4:	4d20      	ldr	r5, [pc, #128]	; (90008d28 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x90>)
		symbol = 'O';
90008ca6:	bf14      	ite	ne
90008ca8:	2458      	movne	r4, #88	; 0x58
90008caa:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008cac:	f815 c003 	ldrb.w	ip, [r5, r3]
90008cb0:	442b      	add	r3, r5
90008cb2:	45a4      	cmp	ip, r4
90008cb4:	d109      	bne.n	90008cca <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
90008cb6:	f893 e001 	ldrb.w	lr, [r3, #1]
90008cba:	45e6      	cmp	lr, ip
90008cbc:	d105      	bne.n	90008cca <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
90008cbe:	789b      	ldrb	r3, [r3, #2]
90008cc0:	4573      	cmp	r3, lr
90008cc2:	d102      	bne.n	90008cca <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
    if(x + y == 3-1){
        for(int i = 0; i < 3; i++){
            if(board[i][(3-1)-i] != symbol)
                break;
            if(i == 3-1){
                if( turn )
90008cc4:	f1c0 0002 	rsb	r0, r0, #2

	if( turn_number == 9 )
		return 3;

	return 0;
}
90008cc8:	bd30      	pop	{r4, r5, pc}
        if(board[i][y] != symbol)
90008cca:	5cab      	ldrb	r3, [r5, r2]
90008ccc:	42a3      	cmp	r3, r4
90008cce:	d107      	bne.n	90008ce0 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
90008cd0:	18ab      	adds	r3, r5, r2
90008cd2:	f893 c003 	ldrb.w	ip, [r3, #3]
90008cd6:	45a4      	cmp	ip, r4
90008cd8:	d102      	bne.n	90008ce0 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
90008cda:	799b      	ldrb	r3, [r3, #6]
90008cdc:	42a3      	cmp	r3, r4
90008cde:	d0f1      	beq.n	90008cc4 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
    if(x == y){
90008ce0:	4291      	cmp	r1, r2
90008ce2:	d00a      	beq.n	90008cfa <_ZN25screen_tictactoe_gameView12is_game_overEii+0x62>
    if(x + y == 3-1){
90008ce4:	440a      	add	r2, r1
90008ce6:	2a02      	cmp	r2, #2
90008ce8:	d011      	beq.n	90008d0e <_ZN25screen_tictactoe_gameView12is_game_overEii+0x76>
	if( turn_number == 9 )
90008cea:	4b10      	ldr	r3, [pc, #64]	; (90008d2c <_ZN25screen_tictactoe_gameView12is_game_overEii+0x94>)
90008cec:	f9b3 3000 	ldrsh.w	r3, [r3]
		return 3;
90008cf0:	2b09      	cmp	r3, #9
90008cf2:	bf14      	ite	ne
90008cf4:	2000      	movne	r0, #0
90008cf6:	2003      	moveq	r0, #3
}
90008cf8:	bd30      	pop	{r4, r5, pc}
            if(board[i][i] != symbol)
90008cfa:	782b      	ldrb	r3, [r5, #0]
90008cfc:	42a3      	cmp	r3, r4
90008cfe:	d1f1      	bne.n	90008ce4 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90008d00:	792b      	ldrb	r3, [r5, #4]
90008d02:	42a3      	cmp	r3, r4
90008d04:	d1ee      	bne.n	90008ce4 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90008d06:	7a2b      	ldrb	r3, [r5, #8]
90008d08:	42a3      	cmp	r3, r4
90008d0a:	d0db      	beq.n	90008cc4 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
90008d0c:	e7ea      	b.n	90008ce4 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
            if(board[i][(3-1)-i] != symbol)
90008d0e:	78ab      	ldrb	r3, [r5, #2]
90008d10:	42a3      	cmp	r3, r4
90008d12:	d1ea      	bne.n	90008cea <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90008d14:	792b      	ldrb	r3, [r5, #4]
90008d16:	42a3      	cmp	r3, r4
90008d18:	d1e7      	bne.n	90008cea <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90008d1a:	79ab      	ldrb	r3, [r5, #6]
90008d1c:	42a3      	cmp	r3, r4
90008d1e:	d0d1      	beq.n	90008cc4 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
90008d20:	e7e3      	b.n	90008cea <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90008d22:	bf00      	nop
90008d24:	2400003c 	.word	0x2400003c
90008d28:	2401fab0 	.word	0x2401fab0
90008d2c:	2401fabc 	.word	0x2401fabc

90008d30 <_ZN25screen_tictactoe_gameViewD1Ev>:

class screen_tictactoe_gameView : public screen_tictactoe_gameViewBase
{
public:
    screen_tictactoe_gameView();
    virtual ~screen_tictactoe_gameView() {}
90008d30:	4b03      	ldr	r3, [pc, #12]	; (90008d40 <_ZN25screen_tictactoe_gameViewD1Ev+0x10>)
90008d32:	b510      	push	{r4, lr}
90008d34:	4604      	mov	r4, r0
90008d36:	6003      	str	r3, [r0, #0]
90008d38:	f7fd f9ac 	bl	90006094 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
90008d3c:	4620      	mov	r0, r4
90008d3e:	bd10      	pop	{r4, pc}
90008d40:	9002d374 	.word	0x9002d374

90008d44 <_ZN25screen_tictactoe_gameViewD0Ev>:
90008d44:	4b06      	ldr	r3, [pc, #24]	; (90008d60 <_ZN25screen_tictactoe_gameViewD0Ev+0x1c>)
90008d46:	b510      	push	{r4, lr}
90008d48:	4604      	mov	r4, r0
90008d4a:	6003      	str	r3, [r0, #0]
90008d4c:	f7fd f9a2 	bl	90006094 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
90008d50:	f242 71bc 	movw	r1, #10172	; 0x27bc
90008d54:	4620      	mov	r0, r4
90008d56:	f020 fc45 	bl	900295e4 <_ZdlPvj>
90008d5a:	4620      	mov	r0, r4
90008d5c:	bd10      	pop	{r4, pc}
90008d5e:	bf00      	nop
90008d60:	9002d374 	.word	0x9002d374

90008d64 <_ZN25screen_tictactoe_gameViewC1Ev>:
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008d64:	b538      	push	{r3, r4, r5, lr}
90008d66:	4604      	mov	r4, r0
			board[i][j] = 0;
90008d68:	2500      	movs	r5, #0
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008d6a:	f7fd fa3d 	bl	900061e8 <_ZN29screen_tictactoe_gameViewBaseC1Ev>
			board[i][j] = 0;
90008d6e:	4b13      	ldr	r3, [pc, #76]	; (90008dbc <_ZN25screen_tictactoe_gameViewC1Ev+0x58>)
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008d70:	4913      	ldr	r1, [pc, #76]	; (90008dc0 <_ZN25screen_tictactoe_gameViewC1Ev+0x5c>)
	lbl_game_over.invalidate();
90008d72:	f604 2024 	addw	r0, r4, #2596	; 0xa24
	game_over = false;
90008d76:	4a13      	ldr	r2, [pc, #76]	; (90008dc4 <_ZN25screen_tictactoe_gameViewC1Ev+0x60>)
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008d78:	6021      	str	r1, [r4, #0]
			board[i][j] = 0;
90008d7a:	721d      	strb	r5, [r3, #8]
        visible = vis;
90008d7c:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
	game_over = false;
90008d80:	7015      	strb	r5, [r2, #0]
			board[i][j] = 0;
90008d82:	e9c3 5500 	strd	r5, r5, [r3]
	lbl_game_over.invalidate();
90008d86:	f010 fb90 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	box_background.invalidate();
90008d8a:	f604 10f8 	addw	r0, r4, #2552	; 0x9f8
90008d8e:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
90008d92:	f010 fb8a 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_result.invalidate();
90008d96:	f604 20a8 	addw	r0, r4, #2728	; 0xaa8
90008d9a:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
90008d9e:	f010 fb84 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
90008da2:	f604 206c 	addw	r0, r4, #2668	; 0xa6c
90008da6:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
90008daa:	f010 fb7e 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
	turn_number = 0;
90008dae:	4906      	ldr	r1, [pc, #24]	; (90008dc8 <_ZN25screen_tictactoe_gameViewC1Ev+0x64>)
	turn = true;
90008db0:	4b06      	ldr	r3, [pc, #24]	; (90008dcc <_ZN25screen_tictactoe_gameViewC1Ev+0x68>)
90008db2:	2201      	movs	r2, #1
}
90008db4:	4620      	mov	r0, r4
	turn_number = 0;
90008db6:	800d      	strh	r5, [r1, #0]
	turn = true;
90008db8:	701a      	strb	r2, [r3, #0]
}
90008dba:	bd38      	pop	{r3, r4, r5, pc}
90008dbc:	2401fab0 	.word	0x2401fab0
90008dc0:	9002d374 	.word	0x9002d374
90008dc4:	2401fab9 	.word	0x2401fab9
90008dc8:	2401fabc 	.word	0x2401fabc
90008dcc:	2400003c 	.word	0x2400003c

90008dd0 <_ZN25screen_tictactoe_gameView12pos1_clickedEv>:
void screen_tictactoe_gameView::pos1_clicked() {
90008dd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][0] == 0 ) {
90008dd4:	4d2d      	ldr	r5, [pc, #180]	; (90008e8c <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xbc>)
90008dd6:	782b      	ldrb	r3, [r5, #0]
90008dd8:	2b00      	cmp	r3, #0
90008dda:	d12e      	bne.n	90008e3a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6a>
90008ddc:	4e2c      	ldr	r6, [pc, #176]	; (90008e90 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc0>)
90008dde:	7833      	ldrb	r3, [r6, #0]
90008de0:	bb5b      	cbnz	r3, 90008e3a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6a>
		if( turn ) {
90008de2:	4f2c      	ldr	r7, [pc, #176]	; (90008e94 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc4>)
90008de4:	4604      	mov	r4, r0
90008de6:	783b      	ldrb	r3, [r7, #0]
90008de8:	bb4b      	cbnz	r3, 90008e3e <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6e>
			board[0][0] = 'O';
90008dea:	234f      	movs	r3, #79	; 0x4f
			pos1_circle.invalidate();
90008dec:	f500 60dc 	add.w	r0, r0, #1760	; 0x6e0
			board[0][0] = 'O';
90008df0:	7033      	strb	r3, [r6, #0]
90008df2:	2301      	movs	r3, #1
90008df4:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos1_circle.invalidate();
90008df8:	f010 fb57 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008dfc:	4a26      	ldr	r2, [pc, #152]	; (90008e98 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc8>)
		short temp_result = is_game_over(0, 0);
90008dfe:	6823      	ldr	r3, [r4, #0]
90008e00:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008e04:	8813      	ldrh	r3, [r2, #0]
90008e06:	3301      	adds	r3, #1
90008e08:	b21b      	sxth	r3, r3
90008e0a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 0);
90008e0c:	4a23      	ldr	r2, [pc, #140]	; (90008e9c <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xcc>)
90008e0e:	4590      	cmp	r8, r2
90008e10:	d11f      	bne.n	90008e52 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x82>
	if(turn)
90008e12:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008e14:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
90008e16:	2800      	cmp	r0, #0
90008e18:	bf14      	ite	ne
90008e1a:	2458      	movne	r4, #88	; 0x58
90008e1c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008e1e:	42a2      	cmp	r2, r4
90008e20:	d12f      	bne.n	90008e82 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb2>
90008e22:	7871      	ldrb	r1, [r6, #1]
90008e24:	4291      	cmp	r1, r2
90008e26:	d120      	bne.n	90008e6a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x9a>
90008e28:	78b2      	ldrb	r2, [r6, #2]
90008e2a:	428a      	cmp	r2, r1
90008e2c:	d11d      	bne.n	90008e6a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x9a>
                if( turn )
90008e2e:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90008e32:	2201      	movs	r2, #1
			result = temp_result;
90008e34:	4b1a      	ldr	r3, [pc, #104]	; (90008ea0 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xd0>)
			game_over = true;
90008e36:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008e38:	8018      	strh	r0, [r3, #0]
}
90008e3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][0] = 'X';
90008e3e:	2358      	movs	r3, #88	; 0x58
			pos1_cross.invalidate();
90008e40:	f200 700c 	addw	r0, r0, #1804	; 0x70c
			board[0][0] = 'X';
90008e44:	7033      	strb	r3, [r6, #0]
90008e46:	2301      	movs	r3, #1
90008e48:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos1_cross.invalidate();
90008e4c:	f010 fb2d 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
90008e50:	e7d4      	b.n	90008dfc <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x2c>
		short temp_result = is_game_over(0, 0);
90008e52:	2200      	movs	r2, #0
90008e54:	4620      	mov	r0, r4
90008e56:	4611      	mov	r1, r2
90008e58:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008e5a:	2800      	cmp	r0, #0
90008e5c:	d1e9      	bne.n	90008e32 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
		turn = !turn;
90008e5e:	783b      	ldrb	r3, [r7, #0]
90008e60:	f083 0301 	eor.w	r3, r3, #1
90008e64:	703b      	strb	r3, [r7, #0]
}
90008e66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90008e6a:	78f2      	ldrb	r2, [r6, #3]
90008e6c:	42a2      	cmp	r2, r4
90008e6e:	d102      	bne.n	90008e76 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xa6>
90008e70:	79b2      	ldrb	r2, [r6, #6]
90008e72:	42a2      	cmp	r2, r4
90008e74:	d0db      	beq.n	90008e2e <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x5e>
            if(board[i][i] != symbol)
90008e76:	7932      	ldrb	r2, [r6, #4]
90008e78:	42a2      	cmp	r2, r4
90008e7a:	d102      	bne.n	90008e82 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb2>
90008e7c:	7a32      	ldrb	r2, [r6, #8]
90008e7e:	42a2      	cmp	r2, r4
90008e80:	d0d5      	beq.n	90008e2e <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x5e>
	if( turn_number == 9 )
90008e82:	2b09      	cmp	r3, #9
90008e84:	d1eb      	bne.n	90008e5e <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x8e>
		return 3;
90008e86:	2003      	movs	r0, #3
90008e88:	e7d3      	b.n	90008e32 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
90008e8a:	bf00      	nop
90008e8c:	2401fab9 	.word	0x2401fab9
90008e90:	2401fab0 	.word	0x2401fab0
90008e94:	2400003c 	.word	0x2400003c
90008e98:	2401fabc 	.word	0x2401fabc
90008e9c:	90008c99 	.word	0x90008c99
90008ea0:	2401faba 	.word	0x2401faba

90008ea4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv>:
void screen_tictactoe_gameView::pos2_clicked() {
90008ea4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][1] == 0 ) {
90008ea8:	4d2b      	ldr	r5, [pc, #172]	; (90008f58 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb4>)
90008eaa:	782b      	ldrb	r3, [r5, #0]
90008eac:	2b00      	cmp	r3, #0
90008eae:	d12e      	bne.n	90008f0e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6a>
90008eb0:	4e2a      	ldr	r6, [pc, #168]	; (90008f5c <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb8>)
90008eb2:	7873      	ldrb	r3, [r6, #1]
90008eb4:	bb5b      	cbnz	r3, 90008f0e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6a>
		if( turn ) {
90008eb6:	4f2a      	ldr	r7, [pc, #168]	; (90008f60 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xbc>)
90008eb8:	4604      	mov	r4, r0
90008eba:	783b      	ldrb	r3, [r7, #0]
90008ebc:	bb4b      	cbnz	r3, 90008f12 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6e>
			board[0][1] = 'O';
90008ebe:	234f      	movs	r3, #79	; 0x4f
			pos2_circle.invalidate();
90008ec0:	f200 7064 	addw	r0, r0, #1892	; 0x764
			board[0][1] = 'O';
90008ec4:	7073      	strb	r3, [r6, #1]
90008ec6:	2301      	movs	r3, #1
90008ec8:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos2_circle.invalidate();
90008ecc:	f010 faed 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008ed0:	4a24      	ldr	r2, [pc, #144]	; (90008f64 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc0>)
		short temp_result = is_game_over(0, 1);
90008ed2:	6823      	ldr	r3, [r4, #0]
90008ed4:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008ed8:	8813      	ldrh	r3, [r2, #0]
90008eda:	3301      	adds	r3, #1
90008edc:	b21b      	sxth	r3, r3
90008ede:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 1);
90008ee0:	4a21      	ldr	r2, [pc, #132]	; (90008f68 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc4>)
90008ee2:	4590      	cmp	r8, r2
90008ee4:	d11f      	bne.n	90008f26 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x82>
	if(turn)
90008ee6:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008ee8:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
90008eea:	2800      	cmp	r0, #0
90008eec:	bf14      	ite	ne
90008eee:	2458      	movne	r4, #88	; 0x58
90008ef0:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008ef2:	42a2      	cmp	r2, r4
90008ef4:	d123      	bne.n	90008f3e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x9a>
90008ef6:	7871      	ldrb	r1, [r6, #1]
90008ef8:	4291      	cmp	r1, r2
90008efa:	d129      	bne.n	90008f50 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90008efc:	78b2      	ldrb	r2, [r6, #2]
90008efe:	428a      	cmp	r2, r1
90008f00:	d120      	bne.n	90008f44 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xa0>
            if( turn )
90008f02:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90008f06:	2201      	movs	r2, #1
			result = temp_result;
90008f08:	4b18      	ldr	r3, [pc, #96]	; (90008f6c <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc8>)
			game_over = true;
90008f0a:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008f0c:	8018      	strh	r0, [r3, #0]
}
90008f0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][1] = 'X';
90008f12:	2358      	movs	r3, #88	; 0x58
			pos2_cross.invalidate();
90008f14:	f500 60e7 	add.w	r0, r0, #1848	; 0x738
			board[0][1] = 'X';
90008f18:	7073      	strb	r3, [r6, #1]
90008f1a:	2301      	movs	r3, #1
90008f1c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos2_cross.invalidate();
90008f20:	f010 fac3 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
90008f24:	e7d4      	b.n	90008ed0 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x2c>
		short temp_result = is_game_over(0, 1);
90008f26:	2201      	movs	r2, #1
90008f28:	4620      	mov	r0, r4
90008f2a:	2100      	movs	r1, #0
90008f2c:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008f2e:	2800      	cmp	r0, #0
90008f30:	d1e9      	bne.n	90008f06 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
		turn = !turn;
90008f32:	7838      	ldrb	r0, [r7, #0]
90008f34:	f080 0001 	eor.w	r0, r0, #1
90008f38:	7038      	strb	r0, [r7, #0]
}
90008f3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90008f3e:	7872      	ldrb	r2, [r6, #1]
90008f40:	42a2      	cmp	r2, r4
90008f42:	d105      	bne.n	90008f50 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90008f44:	7932      	ldrb	r2, [r6, #4]
90008f46:	42a2      	cmp	r2, r4
90008f48:	d102      	bne.n	90008f50 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90008f4a:	79f2      	ldrb	r2, [r6, #7]
90008f4c:	42a2      	cmp	r2, r4
90008f4e:	d0d8      	beq.n	90008f02 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x5e>
	if( turn_number == 9 )
90008f50:	2b09      	cmp	r3, #9
90008f52:	d1ef      	bne.n	90008f34 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x90>
		return 3;
90008f54:	2003      	movs	r0, #3
90008f56:	e7d6      	b.n	90008f06 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
90008f58:	2401fab9 	.word	0x2401fab9
90008f5c:	2401fab0 	.word	0x2401fab0
90008f60:	2400003c 	.word	0x2400003c
90008f64:	2401fabc 	.word	0x2401fabc
90008f68:	90008c99 	.word	0x90008c99
90008f6c:	2401faba 	.word	0x2401faba

90008f70 <_ZN25screen_tictactoe_gameView12pos3_clickedEv>:
void screen_tictactoe_gameView::pos3_clicked() {
90008f70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][2] == 0 ) {
90008f74:	4d2e      	ldr	r5, [pc, #184]	; (90009030 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc0>)
90008f76:	782b      	ldrb	r3, [r5, #0]
90008f78:	2b00      	cmp	r3, #0
90008f7a:	d12e      	bne.n	90008fda <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6a>
90008f7c:	4e2d      	ldr	r6, [pc, #180]	; (90009034 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc4>)
90008f7e:	78b3      	ldrb	r3, [r6, #2]
90008f80:	bb5b      	cbnz	r3, 90008fda <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6a>
		if( turn ) {
90008f82:	4f2d      	ldr	r7, [pc, #180]	; (90009038 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc8>)
90008f84:	4604      	mov	r4, r0
90008f86:	783b      	ldrb	r3, [r7, #0]
90008f88:	bb4b      	cbnz	r3, 90008fde <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6e>
			board[0][2] = 'O';
90008f8a:	234f      	movs	r3, #79	; 0x4f
			pos3_circle.invalidate();
90008f8c:	f200 70bc 	addw	r0, r0, #1980	; 0x7bc
			board[0][2] = 'O';
90008f90:	70b3      	strb	r3, [r6, #2]
90008f92:	2301      	movs	r3, #1
90008f94:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos3_circle.invalidate();
90008f98:	f010 fa87 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008f9c:	4a27      	ldr	r2, [pc, #156]	; (9000903c <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xcc>)
		short temp_result = is_game_over(0, 2);
90008f9e:	6823      	ldr	r3, [r4, #0]
90008fa0:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008fa4:	8813      	ldrh	r3, [r2, #0]
90008fa6:	3301      	adds	r3, #1
90008fa8:	b21b      	sxth	r3, r3
90008faa:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 2);
90008fac:	4a24      	ldr	r2, [pc, #144]	; (90009040 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xd0>)
90008fae:	4590      	cmp	r8, r2
90008fb0:	d11f      	bne.n	90008ff2 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x82>
	if(turn)
90008fb2:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008fb4:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
90008fb6:	2800      	cmp	r0, #0
90008fb8:	bf14      	ite	ne
90008fba:	2458      	movne	r4, #88	; 0x58
90008fbc:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008fbe:	42a2      	cmp	r2, r4
90008fc0:	d123      	bne.n	9000900a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x9a>
90008fc2:	7871      	ldrb	r1, [r6, #1]
90008fc4:	4291      	cmp	r1, r2
90008fc6:	d120      	bne.n	9000900a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x9a>
90008fc8:	78b2      	ldrb	r2, [r6, #2]
90008fca:	428a      	cmp	r2, r1
90008fcc:	d12c      	bne.n	90009028 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
                if( turn )
90008fce:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90008fd2:	2201      	movs	r2, #1
			result = temp_result;
90008fd4:	4b1b      	ldr	r3, [pc, #108]	; (90009044 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xd4>)
			game_over = true;
90008fd6:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008fd8:	8018      	strh	r0, [r3, #0]
}
90008fda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][2] = 'X';
90008fde:	2358      	movs	r3, #88	; 0x58
			pos3_cross.invalidate();
90008fe0:	f500 60f2 	add.w	r0, r0, #1936	; 0x790
			board[0][2] = 'X';
90008fe4:	70b3      	strb	r3, [r6, #2]
90008fe6:	2301      	movs	r3, #1
90008fe8:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos3_cross.invalidate();
90008fec:	f010 fa5d 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
90008ff0:	e7d4      	b.n	90008f9c <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x2c>
		short temp_result = is_game_over(0, 2);
90008ff2:	2202      	movs	r2, #2
90008ff4:	4620      	mov	r0, r4
90008ff6:	2100      	movs	r1, #0
90008ff8:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008ffa:	2800      	cmp	r0, #0
90008ffc:	d1e9      	bne.n	90008fd2 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
		turn = !turn;
90008ffe:	7838      	ldrb	r0, [r7, #0]
90009000:	f080 0001 	eor.w	r0, r0, #1
90009004:	7038      	strb	r0, [r7, #0]
}
90009006:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
9000900a:	78b2      	ldrb	r2, [r6, #2]
9000900c:	42a2      	cmp	r2, r4
9000900e:	d10b      	bne.n	90009028 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
90009010:	7972      	ldrb	r2, [r6, #5]
90009012:	42a2      	cmp	r2, r4
90009014:	d102      	bne.n	9000901c <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xac>
90009016:	7a32      	ldrb	r2, [r6, #8]
90009018:	42a2      	cmp	r2, r4
9000901a:	d0d8      	beq.n	90008fce <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x5e>
            if(board[i][(3-1)-i] != symbol)
9000901c:	7932      	ldrb	r2, [r6, #4]
9000901e:	42a2      	cmp	r2, r4
90009020:	d102      	bne.n	90009028 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
90009022:	79b2      	ldrb	r2, [r6, #6]
90009024:	42a2      	cmp	r2, r4
90009026:	d0d2      	beq.n	90008fce <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x5e>
	if( turn_number == 9 )
90009028:	2b09      	cmp	r3, #9
9000902a:	d1e9      	bne.n	90009000 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x90>
		return 3;
9000902c:	2003      	movs	r0, #3
9000902e:	e7d0      	b.n	90008fd2 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
90009030:	2401fab9 	.word	0x2401fab9
90009034:	2401fab0 	.word	0x2401fab0
90009038:	2400003c 	.word	0x2400003c
9000903c:	2401fabc 	.word	0x2401fabc
90009040:	90008c99 	.word	0x90008c99
90009044:	2401faba 	.word	0x2401faba

90009048 <_ZN25screen_tictactoe_gameView12pos4_clickedEv>:
void screen_tictactoe_gameView::pos4_clicked() {
90009048:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][0] == 0 ) {
9000904c:	4d2a      	ldr	r5, [pc, #168]	; (900090f8 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb0>)
9000904e:	782b      	ldrb	r3, [r5, #0]
90009050:	2b00      	cmp	r3, #0
90009052:	d12e      	bne.n	900090b2 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6a>
90009054:	4e29      	ldr	r6, [pc, #164]	; (900090fc <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb4>)
90009056:	78f3      	ldrb	r3, [r6, #3]
90009058:	bb5b      	cbnz	r3, 900090b2 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6a>
		if( turn ) {
9000905a:	4f29      	ldr	r7, [pc, #164]	; (90009100 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb8>)
9000905c:	4604      	mov	r4, r0
9000905e:	783b      	ldrb	r3, [r7, #0]
90009060:	bb4b      	cbnz	r3, 900090b6 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6e>
			board[1][0] = 'O';
90009062:	234f      	movs	r3, #79	; 0x4f
			pos4_circle.invalidate();
90009064:	f600 0014 	addw	r0, r0, #2068	; 0x814
			board[1][0] = 'O';
90009068:	70f3      	strb	r3, [r6, #3]
9000906a:	2301      	movs	r3, #1
9000906c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos4_circle.invalidate();
90009070:	f010 fa1b 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90009074:	4a23      	ldr	r2, [pc, #140]	; (90009104 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xbc>)
		short temp_result = is_game_over(1, 0);
90009076:	6823      	ldr	r3, [r4, #0]
90009078:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
9000907c:	8813      	ldrh	r3, [r2, #0]
9000907e:	3301      	adds	r3, #1
90009080:	b21b      	sxth	r3, r3
90009082:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 0);
90009084:	4a20      	ldr	r2, [pc, #128]	; (90009108 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xc0>)
90009086:	4590      	cmp	r8, r2
90009088:	d11f      	bne.n	900090ca <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x82>
	if(turn)
9000908a:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
9000908c:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
9000908e:	2800      	cmp	r0, #0
90009090:	bf14      	ite	ne
90009092:	2458      	movne	r4, #88	; 0x58
90009094:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90009096:	42a2      	cmp	r2, r4
90009098:	d129      	bne.n	900090ee <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa6>
9000909a:	7931      	ldrb	r1, [r6, #4]
9000909c:	4291      	cmp	r1, r2
9000909e:	d120      	bne.n	900090e2 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9a>
900090a0:	7972      	ldrb	r2, [r6, #5]
900090a2:	428a      	cmp	r2, r1
900090a4:	d11d      	bne.n	900090e2 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9a>
            if( turn )
900090a6:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900090aa:	2201      	movs	r2, #1
			result = temp_result;
900090ac:	4b17      	ldr	r3, [pc, #92]	; (9000910c <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xc4>)
			game_over = true;
900090ae:	702a      	strb	r2, [r5, #0]
			result = temp_result;
900090b0:	8018      	strh	r0, [r3, #0]
}
900090b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][0] = 'X';
900090b6:	2358      	movs	r3, #88	; 0x58
			pos4_cross.invalidate();
900090b8:	f500 60fd 	add.w	r0, r0, #2024	; 0x7e8
			board[1][0] = 'X';
900090bc:	70f3      	strb	r3, [r6, #3]
900090be:	2301      	movs	r3, #1
900090c0:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos4_cross.invalidate();
900090c4:	f010 f9f1 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
900090c8:	e7d4      	b.n	90009074 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x2c>
		short temp_result = is_game_over(1, 0);
900090ca:	2200      	movs	r2, #0
900090cc:	4620      	mov	r0, r4
900090ce:	2101      	movs	r1, #1
900090d0:	47c0      	blx	r8
		if( temp_result != 0 ) {
900090d2:	2800      	cmp	r0, #0
900090d4:	d1e9      	bne.n	900090aa <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
		turn = !turn;
900090d6:	7838      	ldrb	r0, [r7, #0]
900090d8:	f080 0001 	eor.w	r0, r0, #1
900090dc:	7038      	strb	r0, [r7, #0]
}
900090de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900090e2:	7832      	ldrb	r2, [r6, #0]
900090e4:	42a2      	cmp	r2, r4
900090e6:	d102      	bne.n	900090ee <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa6>
900090e8:	79b2      	ldrb	r2, [r6, #6]
900090ea:	42a2      	cmp	r2, r4
900090ec:	d0db      	beq.n	900090a6 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x5e>
	if( turn_number == 9 )
900090ee:	2b09      	cmp	r3, #9
900090f0:	d1f2      	bne.n	900090d8 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x90>
		return 3;
900090f2:	2003      	movs	r0, #3
900090f4:	e7d9      	b.n	900090aa <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
900090f6:	bf00      	nop
900090f8:	2401fab9 	.word	0x2401fab9
900090fc:	2401fab0 	.word	0x2401fab0
90009100:	2400003c 	.word	0x2400003c
90009104:	2401fabc 	.word	0x2401fabc
90009108:	90008c99 	.word	0x90008c99
9000910c:	2401faba 	.word	0x2401faba

90009110 <_ZN25screen_tictactoe_gameView12pos5_clickedEv>:
void screen_tictactoe_gameView::pos5_clicked() {
90009110:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][1] == 0 ) {
90009114:	4d3c      	ldr	r5, [pc, #240]	; (90009208 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xf8>)
90009116:	782b      	ldrb	r3, [r5, #0]
90009118:	2b00      	cmp	r3, #0
9000911a:	d12e      	bne.n	9000917a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6a>
9000911c:	4e3b      	ldr	r6, [pc, #236]	; (9000920c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xfc>)
9000911e:	7933      	ldrb	r3, [r6, #4]
90009120:	bb5b      	cbnz	r3, 9000917a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6a>
		if( turn ) {
90009122:	4f3b      	ldr	r7, [pc, #236]	; (90009210 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x100>)
90009124:	4604      	mov	r4, r0
90009126:	783b      	ldrb	r3, [r7, #0]
90009128:	bb4b      	cbnz	r3, 9000917e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6e>
			board[1][1] = 'O';
9000912a:	234f      	movs	r3, #79	; 0x4f
			pos5_circle.invalidate();
9000912c:	f600 006c 	addw	r0, r0, #2156	; 0x86c
			board[1][1] = 'O';
90009130:	7133      	strb	r3, [r6, #4]
90009132:	2301      	movs	r3, #1
90009134:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos5_circle.invalidate();
90009138:	f010 f9b7 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
9000913c:	4a35      	ldr	r2, [pc, #212]	; (90009214 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x104>)
		short temp_result = is_game_over(1, 1);
9000913e:	6823      	ldr	r3, [r4, #0]
90009140:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90009144:	8813      	ldrh	r3, [r2, #0]
90009146:	3301      	adds	r3, #1
90009148:	b21b      	sxth	r3, r3
9000914a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 1);
9000914c:	4a32      	ldr	r2, [pc, #200]	; (90009218 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x108>)
9000914e:	4590      	cmp	r8, r2
90009150:	d11f      	bne.n	90009192 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x82>
	if(turn)
90009152:	783a      	ldrb	r2, [r7, #0]
        if(board[x][i] != symbol)
90009154:	78f1      	ldrb	r1, [r6, #3]
		symbol = 'O';
90009156:	2a00      	cmp	r2, #0
90009158:	bf14      	ite	ne
9000915a:	2458      	movne	r4, #88	; 0x58
9000915c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000915e:	42a1      	cmp	r1, r4
90009160:	d123      	bne.n	900091aa <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9a>
90009162:	7930      	ldrb	r0, [r6, #4]
90009164:	4288      	cmp	r0, r1
90009166:	d120      	bne.n	900091aa <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9a>
90009168:	7971      	ldrb	r1, [r6, #5]
9000916a:	4281      	cmp	r1, r0
9000916c:	d136      	bne.n	900091dc <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xcc>
                if( turn )
9000916e:	f1c2 0002 	rsb	r0, r2, #2
			game_over = true;
90009172:	2201      	movs	r2, #1
			result = temp_result;
90009174:	4b29      	ldr	r3, [pc, #164]	; (9000921c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x10c>)
			game_over = true;
90009176:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90009178:	8018      	strh	r0, [r3, #0]
}
9000917a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][1] = 'X';
9000917e:	2358      	movs	r3, #88	; 0x58
			pos5_cross.invalidate();
90009180:	f500 6004 	add.w	r0, r0, #2112	; 0x840
			board[1][1] = 'X';
90009184:	7133      	strb	r3, [r6, #4]
90009186:	2301      	movs	r3, #1
90009188:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos5_cross.invalidate();
9000918c:	f010 f98d 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
90009190:	e7d4      	b.n	9000913c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x2c>
		short temp_result = is_game_over(1, 1);
90009192:	2201      	movs	r2, #1
90009194:	4620      	mov	r0, r4
90009196:	4611      	mov	r1, r2
90009198:	47c0      	blx	r8
		if( temp_result != 0 ) {
9000919a:	2800      	cmp	r0, #0
9000919c:	d1e9      	bne.n	90009172 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
		turn = !turn;
9000919e:	783b      	ldrb	r3, [r7, #0]
900091a0:	f083 0301 	eor.w	r3, r3, #1
900091a4:	703b      	strb	r3, [r7, #0]
}
900091a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900091aa:	7871      	ldrb	r1, [r6, #1]
900091ac:	42a1      	cmp	r1, r4
900091ae:	d123      	bne.n	900091f8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xe8>
900091b0:	7931      	ldrb	r1, [r6, #4]
900091b2:	42a1      	cmp	r1, r4
900091b4:	d116      	bne.n	900091e4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xd4>
900091b6:	79f1      	ldrb	r1, [r6, #7]
900091b8:	42a1      	cmp	r1, r4
900091ba:	d0d8      	beq.n	9000916e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
            if(board[i][i] != symbol)
900091bc:	7831      	ldrb	r1, [r6, #0]
900091be:	42a1      	cmp	r1, r4
900091c0:	d113      	bne.n	900091ea <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xda>
900091c2:	7a31      	ldrb	r1, [r6, #8]
900091c4:	42a1      	cmp	r1, r4
900091c6:	d0d2      	beq.n	9000916e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
            if(board[i][(3-1)-i] != symbol)
900091c8:	78b1      	ldrb	r1, [r6, #2]
900091ca:	42a1      	cmp	r1, r4
900091cc:	d102      	bne.n	900091d4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
900091ce:	79b1      	ldrb	r1, [r6, #6]
900091d0:	42a1      	cmp	r1, r4
900091d2:	d0cc      	beq.n	9000916e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
	if( turn_number == 9 )
900091d4:	2b09      	cmp	r3, #9
900091d6:	d1e2      	bne.n	9000919e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x8e>
		return 3;
900091d8:	2003      	movs	r0, #3
900091da:	e7ca      	b.n	90009172 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
        if(board[i][y] != symbol)
900091dc:	7871      	ldrb	r1, [r6, #1]
900091de:	42a1      	cmp	r1, r4
900091e0:	d0e9      	beq.n	900091b6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xa6>
900091e2:	e7eb      	b.n	900091bc <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xac>
            if(board[i][i] != symbol)
900091e4:	7831      	ldrb	r1, [r6, #0]
900091e6:	42a1      	cmp	r1, r4
900091e8:	d0f4      	beq.n	900091d4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
            if(board[i][(3-1)-i] != symbol)
900091ea:	78b1      	ldrb	r1, [r6, #2]
900091ec:	42a1      	cmp	r1, r4
900091ee:	d1f1      	bne.n	900091d4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
900091f0:	7931      	ldrb	r1, [r6, #4]
900091f2:	42a1      	cmp	r1, r4
900091f4:	d0eb      	beq.n	900091ce <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xbe>
900091f6:	e7ed      	b.n	900091d4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
            if(board[i][i] != symbol)
900091f8:	7831      	ldrb	r1, [r6, #0]
900091fa:	42a1      	cmp	r1, r4
900091fc:	d1f5      	bne.n	900091ea <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xda>
900091fe:	7931      	ldrb	r1, [r6, #4]
90009200:	42a1      	cmp	r1, r4
90009202:	d0de      	beq.n	900091c2 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb2>
90009204:	e7e6      	b.n	900091d4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
90009206:	bf00      	nop
90009208:	2401fab9 	.word	0x2401fab9
9000920c:	2401fab0 	.word	0x2401fab0
90009210:	2400003c 	.word	0x2400003c
90009214:	2401fabc 	.word	0x2401fabc
90009218:	90008c99 	.word	0x90008c99
9000921c:	2401faba 	.word	0x2401faba

90009220 <_ZN25screen_tictactoe_gameView12pos6_clickedEv>:
void screen_tictactoe_gameView::pos6_clicked() {
90009220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][2] == 0 ) {
90009224:	4d2b      	ldr	r5, [pc, #172]	; (900092d4 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb4>)
90009226:	782b      	ldrb	r3, [r5, #0]
90009228:	2b00      	cmp	r3, #0
9000922a:	d12e      	bne.n	9000928a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6a>
9000922c:	4e2a      	ldr	r6, [pc, #168]	; (900092d8 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb8>)
9000922e:	7973      	ldrb	r3, [r6, #5]
90009230:	bb5b      	cbnz	r3, 9000928a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6a>
		if( turn ) {
90009232:	4f2a      	ldr	r7, [pc, #168]	; (900092dc <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xbc>)
90009234:	4604      	mov	r4, r0
90009236:	783b      	ldrb	r3, [r7, #0]
90009238:	bb4b      	cbnz	r3, 9000928e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6e>
			board[1][2] = 'O';
9000923a:	234f      	movs	r3, #79	; 0x4f
			pos6_circle.invalidate();
9000923c:	f600 00c4 	addw	r0, r0, #2244	; 0x8c4
			board[1][2] = 'O';
90009240:	7173      	strb	r3, [r6, #5]
90009242:	2301      	movs	r3, #1
90009244:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos6_circle.invalidate();
90009248:	f010 f92f 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
9000924c:	4a24      	ldr	r2, [pc, #144]	; (900092e0 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc0>)
		short temp_result = is_game_over(1, 2);
9000924e:	6823      	ldr	r3, [r4, #0]
90009250:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90009254:	8813      	ldrh	r3, [r2, #0]
90009256:	3301      	adds	r3, #1
90009258:	b21b      	sxth	r3, r3
9000925a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 2);
9000925c:	4a21      	ldr	r2, [pc, #132]	; (900092e4 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc4>)
9000925e:	4590      	cmp	r8, r2
90009260:	d11f      	bne.n	900092a2 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x82>
	if(turn)
90009262:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90009264:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
90009266:	2800      	cmp	r0, #0
90009268:	bf14      	ite	ne
9000926a:	2458      	movne	r4, #88	; 0x58
9000926c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000926e:	42a2      	cmp	r2, r4
90009270:	d123      	bne.n	900092ba <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9a>
90009272:	7931      	ldrb	r1, [r6, #4]
90009274:	4291      	cmp	r1, r2
90009276:	d120      	bne.n	900092ba <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9a>
90009278:	7972      	ldrb	r2, [r6, #5]
9000927a:	428a      	cmp	r2, r1
9000927c:	d126      	bne.n	900092cc <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
            if( turn )
9000927e:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90009282:	2201      	movs	r2, #1
			result = temp_result;
90009284:	4b18      	ldr	r3, [pc, #96]	; (900092e8 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc8>)
			game_over = true;
90009286:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90009288:	8018      	strh	r0, [r3, #0]
}
9000928a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][2] = 'X';
9000928e:	2358      	movs	r3, #88	; 0x58
			pos6_cross.invalidate();
90009290:	f600 0098 	addw	r0, r0, #2200	; 0x898
			board[1][2] = 'X';
90009294:	7173      	strb	r3, [r6, #5]
90009296:	2301      	movs	r3, #1
90009298:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos6_cross.invalidate();
9000929c:	f010 f905 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
900092a0:	e7d4      	b.n	9000924c <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x2c>
		short temp_result = is_game_over(1, 2);
900092a2:	2202      	movs	r2, #2
900092a4:	4620      	mov	r0, r4
900092a6:	2101      	movs	r1, #1
900092a8:	47c0      	blx	r8
		if( temp_result != 0 ) {
900092aa:	2800      	cmp	r0, #0
900092ac:	d1e9      	bne.n	90009282 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
		turn = !turn;
900092ae:	7838      	ldrb	r0, [r7, #0]
900092b0:	f080 0001 	eor.w	r0, r0, #1
900092b4:	7038      	strb	r0, [r7, #0]
}
900092b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900092ba:	78b2      	ldrb	r2, [r6, #2]
900092bc:	42a2      	cmp	r2, r4
900092be:	d105      	bne.n	900092cc <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
900092c0:	7972      	ldrb	r2, [r6, #5]
900092c2:	42a2      	cmp	r2, r4
900092c4:	d102      	bne.n	900092cc <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
900092c6:	7a32      	ldrb	r2, [r6, #8]
900092c8:	42a2      	cmp	r2, r4
900092ca:	d0d8      	beq.n	9000927e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x5e>
	if( turn_number == 9 )
900092cc:	2b09      	cmp	r3, #9
900092ce:	d1ef      	bne.n	900092b0 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x90>
		return 3;
900092d0:	2003      	movs	r0, #3
900092d2:	e7d6      	b.n	90009282 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
900092d4:	2401fab9 	.word	0x2401fab9
900092d8:	2401fab0 	.word	0x2401fab0
900092dc:	2400003c 	.word	0x2400003c
900092e0:	2401fabc 	.word	0x2401fabc
900092e4:	90008c99 	.word	0x90008c99
900092e8:	2401faba 	.word	0x2401faba

900092ec <_ZN25screen_tictactoe_gameView12pos7_clickedEv>:
void screen_tictactoe_gameView::pos7_clicked() {
900092ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][0] == 0 ) {
900092f0:	4d2d      	ldr	r5, [pc, #180]	; (900093a8 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xbc>)
900092f2:	782b      	ldrb	r3, [r5, #0]
900092f4:	2b00      	cmp	r3, #0
900092f6:	d12f      	bne.n	90009358 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x6c>
900092f8:	4e2c      	ldr	r6, [pc, #176]	; (900093ac <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc0>)
900092fa:	79b3      	ldrb	r3, [r6, #6]
900092fc:	bb63      	cbnz	r3, 90009358 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x6c>
		if( turn ) {
900092fe:	4f2c      	ldr	r7, [pc, #176]	; (900093b0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc4>)
90009300:	4604      	mov	r4, r0
90009302:	783b      	ldrb	r3, [r7, #0]
90009304:	bb53      	cbnz	r3, 9000935c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x70>
			board[2][0] = 'O';
90009306:	234f      	movs	r3, #79	; 0x4f
			pos7_circle.invalidate();
90009308:	f500 600f 	add.w	r0, r0, #2288	; 0x8f0
			board[2][0] = 'O';
9000930c:	71b3      	strb	r3, [r6, #6]
9000930e:	2301      	movs	r3, #1
90009310:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos7_circle.invalidate();
90009314:	f010 f8c9 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90009318:	4a26      	ldr	r2, [pc, #152]	; (900093b4 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc8>)
		short temp_result = is_game_over(2, 0);
9000931a:	6823      	ldr	r3, [r4, #0]
9000931c:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90009320:	8813      	ldrh	r3, [r2, #0]
90009322:	3301      	adds	r3, #1
90009324:	b21b      	sxth	r3, r3
90009326:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 0);
90009328:	4a23      	ldr	r2, [pc, #140]	; (900093b8 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xcc>)
9000932a:	4590      	cmp	r8, r2
9000932c:	d120      	bne.n	90009370 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x84>
	if(turn)
9000932e:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90009330:	79b4      	ldrb	r4, [r6, #6]
		symbol = 'O';
90009332:	2800      	cmp	r0, #0
90009334:	bf14      	ite	ne
90009336:	2258      	movne	r2, #88	; 0x58
90009338:	224f      	moveq	r2, #79	; 0x4f
        if(board[x][i] != symbol)
9000933a:	42a2      	cmp	r2, r4
9000933c:	d130      	bne.n	900093a0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>
9000933e:	79f1      	ldrb	r1, [r6, #7]
90009340:	4291      	cmp	r1, r2
90009342:	d121      	bne.n	90009388 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
90009344:	f896 c008 	ldrb.w	ip, [r6, #8]
90009348:	458c      	cmp	ip, r1
9000934a:	d11d      	bne.n	90009388 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
                if( turn )
9000934c:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90009350:	2201      	movs	r2, #1
			result = temp_result;
90009352:	4b1a      	ldr	r3, [pc, #104]	; (900093bc <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xd0>)
			game_over = true;
90009354:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90009356:	8018      	strh	r0, [r3, #0]
}
90009358:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][0] = 'X';
9000935c:	2358      	movs	r3, #88	; 0x58
			pos7_cross.invalidate();
9000935e:	f600 101c 	addw	r0, r0, #2332	; 0x91c
			board[2][0] = 'X';
90009362:	71b3      	strb	r3, [r6, #6]
90009364:	2301      	movs	r3, #1
90009366:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos7_cross.invalidate();
9000936a:	f010 f89e 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
9000936e:	e7d3      	b.n	90009318 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x2c>
		short temp_result = is_game_over(2, 0);
90009370:	2200      	movs	r2, #0
90009372:	4620      	mov	r0, r4
90009374:	2102      	movs	r1, #2
90009376:	47c0      	blx	r8
		if( temp_result != 0 ) {
90009378:	2800      	cmp	r0, #0
9000937a:	d1e9      	bne.n	90009350 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x64>
		turn = !turn;
9000937c:	7838      	ldrb	r0, [r7, #0]
9000937e:	f080 0001 	eor.w	r0, r0, #1
90009382:	7038      	strb	r0, [r7, #0]
}
90009384:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90009388:	7831      	ldrb	r1, [r6, #0]
9000938a:	42a1      	cmp	r1, r4
9000938c:	d102      	bne.n	90009394 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xa8>
9000938e:	78f1      	ldrb	r1, [r6, #3]
90009390:	42a1      	cmp	r1, r4
90009392:	d0db      	beq.n	9000934c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
            if(board[i][(3-1)-i] != symbol)
90009394:	78b1      	ldrb	r1, [r6, #2]
90009396:	4291      	cmp	r1, r2
90009398:	d102      	bne.n	900093a0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>
9000939a:	7931      	ldrb	r1, [r6, #4]
9000939c:	4291      	cmp	r1, r2
9000939e:	d0d5      	beq.n	9000934c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
	if( turn_number == 9 )
900093a0:	2b09      	cmp	r3, #9
900093a2:	d1ec      	bne.n	9000937e <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x92>
		return 3;
900093a4:	2003      	movs	r0, #3
900093a6:	e7d3      	b.n	90009350 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x64>
900093a8:	2401fab9 	.word	0x2401fab9
900093ac:	2401fab0 	.word	0x2401fab0
900093b0:	2400003c 	.word	0x2400003c
900093b4:	2401fabc 	.word	0x2401fabc
900093b8:	90008c99 	.word	0x90008c99
900093bc:	2401faba 	.word	0x2401faba

900093c0 <_ZN25screen_tictactoe_gameView12pos8_clickedEv>:
void screen_tictactoe_gameView::pos8_clicked() {
900093c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][1] == 0 ) {
900093c4:	4d2b      	ldr	r5, [pc, #172]	; (90009474 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb4>)
900093c6:	782b      	ldrb	r3, [r5, #0]
900093c8:	2b00      	cmp	r3, #0
900093ca:	d12e      	bne.n	9000942a <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6a>
900093cc:	4e2a      	ldr	r6, [pc, #168]	; (90009478 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb8>)
900093ce:	79f3      	ldrb	r3, [r6, #7]
900093d0:	bb5b      	cbnz	r3, 9000942a <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6a>
		if( turn ) {
900093d2:	4f2a      	ldr	r7, [pc, #168]	; (9000947c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xbc>)
900093d4:	4604      	mov	r4, r0
900093d6:	783b      	ldrb	r3, [r7, #0]
900093d8:	bb4b      	cbnz	r3, 9000942e <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6e>
			board[2][1] = 'O';
900093da:	234f      	movs	r3, #79	; 0x4f
			pos8_circle.invalidate();
900093dc:	f600 1048 	addw	r0, r0, #2376	; 0x948
			board[2][1] = 'O';
900093e0:	71f3      	strb	r3, [r6, #7]
900093e2:	2301      	movs	r3, #1
900093e4:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos8_circle.invalidate();
900093e8:	f010 f85f 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
900093ec:	4a24      	ldr	r2, [pc, #144]	; (90009480 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc0>)
		short temp_result = is_game_over(2, 1);
900093ee:	6823      	ldr	r3, [r4, #0]
900093f0:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
900093f4:	8813      	ldrh	r3, [r2, #0]
900093f6:	3301      	adds	r3, #1
900093f8:	b21b      	sxth	r3, r3
900093fa:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 1);
900093fc:	4a21      	ldr	r2, [pc, #132]	; (90009484 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc4>)
900093fe:	4590      	cmp	r8, r2
90009400:	d11f      	bne.n	90009442 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x82>
	if(turn)
90009402:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90009404:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
90009406:	2800      	cmp	r0, #0
90009408:	bf14      	ite	ne
9000940a:	2458      	movne	r4, #88	; 0x58
9000940c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000940e:	42a2      	cmp	r2, r4
90009410:	d123      	bne.n	9000945a <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
90009412:	79f1      	ldrb	r1, [r6, #7]
90009414:	4291      	cmp	r1, r2
90009416:	d120      	bne.n	9000945a <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
90009418:	7a32      	ldrb	r2, [r6, #8]
9000941a:	428a      	cmp	r2, r1
9000941c:	d11d      	bne.n	9000945a <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
            if( turn )
9000941e:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90009422:	2201      	movs	r2, #1
			result = temp_result;
90009424:	4b18      	ldr	r3, [pc, #96]	; (90009488 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc8>)
			game_over = true;
90009426:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90009428:	8018      	strh	r0, [r3, #0]
}
9000942a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][1] = 'X';
9000942e:	2358      	movs	r3, #88	; 0x58
			pos8_cross.invalidate();
90009430:	f600 1074 	addw	r0, r0, #2420	; 0x974
			board[2][1] = 'X';
90009434:	71f3      	strb	r3, [r6, #7]
90009436:	2301      	movs	r3, #1
90009438:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos8_cross.invalidate();
9000943c:	f010 f835 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
90009440:	e7d4      	b.n	900093ec <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x2c>
		short temp_result = is_game_over(2, 1);
90009442:	2201      	movs	r2, #1
90009444:	4620      	mov	r0, r4
90009446:	2102      	movs	r1, #2
90009448:	47c0      	blx	r8
		if( temp_result != 0 ) {
9000944a:	2800      	cmp	r0, #0
9000944c:	d1e9      	bne.n	90009422 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
		turn = !turn;
9000944e:	7838      	ldrb	r0, [r7, #0]
90009450:	f080 0001 	eor.w	r0, r0, #1
90009454:	7038      	strb	r0, [r7, #0]
}
90009456:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
9000945a:	7872      	ldrb	r2, [r6, #1]
9000945c:	42a2      	cmp	r2, r4
9000945e:	d105      	bne.n	9000946c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>
90009460:	7932      	ldrb	r2, [r6, #4]
90009462:	42a2      	cmp	r2, r4
90009464:	d102      	bne.n	9000946c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>
90009466:	79f2      	ldrb	r2, [r6, #7]
90009468:	42a2      	cmp	r2, r4
9000946a:	d0d8      	beq.n	9000941e <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x5e>
	if( turn_number == 9 )
9000946c:	2b09      	cmp	r3, #9
9000946e:	d1ef      	bne.n	90009450 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x90>
		return 3;
90009470:	2003      	movs	r0, #3
90009472:	e7d6      	b.n	90009422 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
90009474:	2401fab9 	.word	0x2401fab9
90009478:	2401fab0 	.word	0x2401fab0
9000947c:	2400003c 	.word	0x2400003c
90009480:	2401fabc 	.word	0x2401fabc
90009484:	90008c99 	.word	0x90008c99
90009488:	2401faba 	.word	0x2401faba

9000948c <_ZN25screen_tictactoe_gameView12pos9_clickedEv>:
void screen_tictactoe_gameView::pos9_clicked() {
9000948c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][2] == 0 ) {
90009490:	4d30      	ldr	r5, [pc, #192]	; (90009554 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xc8>)
90009492:	782b      	ldrb	r3, [r5, #0]
90009494:	2b00      	cmp	r3, #0
90009496:	d12e      	bne.n	900094f6 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6a>
90009498:	4e2f      	ldr	r6, [pc, #188]	; (90009558 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xcc>)
9000949a:	7a33      	ldrb	r3, [r6, #8]
9000949c:	bb5b      	cbnz	r3, 900094f6 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6a>
		if( turn ) {
9000949e:	4f2f      	ldr	r7, [pc, #188]	; (9000955c <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd0>)
900094a0:	4604      	mov	r4, r0
900094a2:	783b      	ldrb	r3, [r7, #0]
900094a4:	bb4b      	cbnz	r3, 900094fa <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6e>
			board[2][2] = 'O';
900094a6:	234f      	movs	r3, #79	; 0x4f
			pos9_circle.invalidate();
900094a8:	f500 601a 	add.w	r0, r0, #2464	; 0x9a0
			board[2][2] = 'O';
900094ac:	7233      	strb	r3, [r6, #8]
900094ae:	2301      	movs	r3, #1
900094b0:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos9_circle.invalidate();
900094b4:	f00f fff9 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
900094b8:	4a29      	ldr	r2, [pc, #164]	; (90009560 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd4>)
		short temp_result = is_game_over(2, 2);
900094ba:	6823      	ldr	r3, [r4, #0]
900094bc:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
900094c0:	8813      	ldrh	r3, [r2, #0]
900094c2:	3301      	adds	r3, #1
900094c4:	b21b      	sxth	r3, r3
900094c6:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 2);
900094c8:	4a26      	ldr	r2, [pc, #152]	; (90009564 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd8>)
900094ca:	4590      	cmp	r8, r2
900094cc:	d11f      	bne.n	9000950e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x82>
	if(turn)
900094ce:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
900094d0:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
900094d2:	2800      	cmp	r0, #0
900094d4:	bf14      	ite	ne
900094d6:	2458      	movne	r4, #88	; 0x58
900094d8:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900094da:	42a2      	cmp	r2, r4
900094dc:	d123      	bne.n	90009526 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
900094de:	79f1      	ldrb	r1, [r6, #7]
900094e0:	4291      	cmp	r1, r2
900094e2:	d120      	bne.n	90009526 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
900094e4:	7a32      	ldrb	r2, [r6, #8]
900094e6:	428a      	cmp	r2, r1
900094e8:	d11d      	bne.n	90009526 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
                if( turn )
900094ea:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900094ee:	2201      	movs	r2, #1
			result = temp_result;
900094f0:	4b1d      	ldr	r3, [pc, #116]	; (90009568 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xdc>)
			game_over = true;
900094f2:	702a      	strb	r2, [r5, #0]
			result = temp_result;
900094f4:	8018      	strh	r0, [r3, #0]
}
900094f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][2] = 'X';
900094fa:	2358      	movs	r3, #88	; 0x58
			pos9_cross.invalidate();
900094fc:	f600 10cc 	addw	r0, r0, #2508	; 0x9cc
			board[2][2] = 'X';
90009500:	7233      	strb	r3, [r6, #8]
90009502:	2301      	movs	r3, #1
90009504:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos9_cross.invalidate();
90009508:	f00f ffcf 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
9000950c:	e7d4      	b.n	900094b8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x2c>
		short temp_result = is_game_over(2, 2);
9000950e:	2202      	movs	r2, #2
90009510:	4620      	mov	r0, r4
90009512:	4611      	mov	r1, r2
90009514:	47c0      	blx	r8
		if( temp_result != 0 ) {
90009516:	2800      	cmp	r0, #0
90009518:	d1e9      	bne.n	900094ee <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
		turn = !turn;
9000951a:	783b      	ldrb	r3, [r7, #0]
9000951c:	f083 0301 	eor.w	r3, r3, #1
90009520:	703b      	strb	r3, [r7, #0]
}
90009522:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90009526:	78b2      	ldrb	r2, [r6, #2]
90009528:	42a2      	cmp	r2, r4
9000952a:	d105      	bne.n	90009538 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xac>
9000952c:	7972      	ldrb	r2, [r6, #5]
9000952e:	42a2      	cmp	r2, r4
90009530:	d102      	bne.n	90009538 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xac>
90009532:	7a32      	ldrb	r2, [r6, #8]
90009534:	42a2      	cmp	r2, r4
90009536:	d0d8      	beq.n	900094ea <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x5e>
            if(board[i][i] != symbol)
90009538:	7832      	ldrb	r2, [r6, #0]
9000953a:	42a2      	cmp	r2, r4
9000953c:	d105      	bne.n	9000954a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbe>
9000953e:	7932      	ldrb	r2, [r6, #4]
90009540:	42a2      	cmp	r2, r4
90009542:	d102      	bne.n	9000954a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbe>
90009544:	7a32      	ldrb	r2, [r6, #8]
90009546:	42a2      	cmp	r2, r4
90009548:	d0cf      	beq.n	900094ea <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x5e>
	if( turn_number == 9 )
9000954a:	2b09      	cmp	r3, #9
9000954c:	d1e5      	bne.n	9000951a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x8e>
		return 3;
9000954e:	2003      	movs	r0, #3
90009550:	e7cd      	b.n	900094ee <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
90009552:	bf00      	nop
90009554:	2401fab9 	.word	0x2401fab9
90009558:	2401fab0 	.word	0x2401fab0
9000955c:	2400003c 	.word	0x2400003c
90009560:	2401fabc 	.word	0x2401fabc
90009564:	90008c99 	.word	0x90008c99
90009568:	2401faba 	.word	0x2401faba

9000956c <_ZN25screen_tictactoe_gameView15handleTickEventEv>:
void screen_tictactoe_gameView::handleTickEvent() {
9000956c:	b538      	push	{r3, r4, r5, lr}
	if( game_over ) {
9000956e:	4b36      	ldr	r3, [pc, #216]	; (90009648 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xdc>)
void screen_tictactoe_gameView::handleTickEvent() {
90009570:	4604      	mov	r4, r0
	if( game_over ) {
90009572:	781b      	ldrb	r3, [r3, #0]
90009574:	bb7b      	cbnz	r3, 900095d6 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x6a>
		if( turn_number == 0 ) {
90009576:	4a35      	ldr	r2, [pc, #212]	; (9000964c <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe0>)
90009578:	f9b2 2000 	ldrsh.w	r2, [r2]
9000957c:	b1a2      	cbz	r2, 900095a8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x3c>
9000957e:	f884 3a91 	strb.w	r3, [r4, #2705]	; 0xa91
			btn_back.invalidate();
90009582:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
90009586:	f00f ff90 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		if( turn )
9000958a:	4b31      	ldr	r3, [pc, #196]	; (90009650 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe4>)
9000958c:	781b      	ldrb	r3, [r3, #0]
9000958e:	b1b3      	cbz	r3, 900095be <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x52>
			Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "1");
90009590:	f604 3068 	addw	r0, r4, #2920	; 0xb68
90009594:	4a2f      	ldr	r2, [pc, #188]	; (90009654 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe8>)
90009596:	210a      	movs	r1, #10
90009598:	f011 ffd6 	bl	9001b548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		lbl_turn.invalidate();
9000959c:	f604 20f4 	addw	r0, r4, #2804	; 0xaf4
}
900095a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_turn.invalidate();
900095a4:	f00f bf81 	b.w	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
900095a8:	2301      	movs	r3, #1
			btn_back.invalidate();
900095aa:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
900095ae:	f884 3a91 	strb.w	r3, [r4, #2705]	; 0xa91
900095b2:	f00f ff7a 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		if( turn )
900095b6:	4b26      	ldr	r3, [pc, #152]	; (90009650 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe4>)
900095b8:	781b      	ldrb	r3, [r3, #0]
900095ba:	2b00      	cmp	r3, #0
900095bc:	d1e8      	bne.n	90009590 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x24>
			Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "2");
900095be:	f604 3068 	addw	r0, r4, #2920	; 0xb68
900095c2:	4a25      	ldr	r2, [pc, #148]	; (90009658 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xec>)
900095c4:	210a      	movs	r1, #10
900095c6:	f011 ffbf 	bl	9001b548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		lbl_turn.invalidate();
900095ca:	f604 20f4 	addw	r0, r4, #2804	; 0xaf4
}
900095ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_turn.invalidate();
900095d2:	f00f bf6a 	b.w	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
900095d6:	2501      	movs	r5, #1
		btn_back.invalidate();
900095d8:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
900095dc:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
900095e0:	f00f ff63 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		box_background.invalidate();
900095e4:	f604 10f8 	addw	r0, r4, #2552	; 0x9f8
900095e8:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
900095ec:	f00f ff5d 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		lbl_game_over.invalidate();
900095f0:	f604 2024 	addw	r0, r4, #2596	; 0xa24
900095f4:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
900095f8:	f00f ff57 	bl	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
		if( result == 1 )
900095fc:	4b17      	ldr	r3, [pc, #92]	; (9000965c <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xf0>)
900095fe:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
90009602:	f9b3 3000 	ldrsh.w	r3, [r3]
90009606:	42ab      	cmp	r3, r5
90009608:	d009      	beq.n	9000961e <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xb2>
		else if( result == 2 )
9000960a:	2b02      	cmp	r3, #2
9000960c:	d00e      	beq.n	9000962c <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xc0>
		else if( result == 3 )
9000960e:	2b03      	cmp	r3, #3
90009610:	d013      	beq.n	9000963a <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xce>
		lbl_result.invalidate();
90009612:	f604 20a8 	addw	r0, r4, #2728	; 0xaa8
}
90009616:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_result.invalidate();
9000961a:	f00f bf46 	b.w	900194aa <_ZNK8touchgfx8Drawable10invalidateEv>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Player 1 wins");
9000961e:	4a10      	ldr	r2, [pc, #64]	; (90009660 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xf4>)
90009620:	2114      	movs	r1, #20
90009622:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
90009626:	f011 ff8f 	bl	9001b548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
9000962a:	e7f2      	b.n	90009612 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xa6>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Player 2 wins");
9000962c:	4a0d      	ldr	r2, [pc, #52]	; (90009664 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xf8>)
9000962e:	2114      	movs	r1, #20
90009630:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
90009634:	f011 ff88 	bl	9001b548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
90009638:	e7eb      	b.n	90009612 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xa6>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Tie");
9000963a:	4a0b      	ldr	r2, [pc, #44]	; (90009668 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xfc>)
9000963c:	2114      	movs	r1, #20
9000963e:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
90009642:	f011 ff81 	bl	9001b548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
90009646:	e7e4      	b.n	90009612 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xa6>
90009648:	2401fab9 	.word	0x2401fab9
9000964c:	2401fabc 	.word	0x2401fabc
90009650:	2400003c 	.word	0x2400003c
90009654:	9002d364 	.word	0x9002d364
90009658:	9002d368 	.word	0x9002d368
9000965c:	2401faba 	.word	0x2401faba
90009660:	9002d340 	.word	0x9002d340
90009664:	9002d350 	.word	0x9002d350
90009668:	9002d360 	.word	0x9002d360

9000966c <_ZN25screen_tictactoe_gameView11setupScreenEv>:
    screen_tictactoe_gameViewBase::setupScreen();
9000966c:	f7fc bcb8 	b.w	90005fe0 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>

90009670 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90009670:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90009674:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90009676:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
9000967a:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
9000967e:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90009680:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90009682:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90009686:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
9000968a:	4770      	bx	lr

9000968c <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
9000968c:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90009690:	2b01      	cmp	r3, #1
90009692:	d102      	bne.n	9000969a <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90009694:	2300      	movs	r3, #0
90009696:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
9000969a:	2000      	movs	r0, #0
9000969c:	4770      	bx	lr
9000969e:	bf00      	nop

900096a0 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
900096a0:	2000      	movs	r0, #0
900096a2:	4770      	bx	lr

900096a4 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900096a4:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900096a6:	6904      	ldr	r4, [r0, #16]
900096a8:	8900      	ldrh	r0, [r0, #8]
900096aa:	46a4      	mov	ip, r4
}
900096ac:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900096b0:	4760      	bx	ip
900096b2:	bf00      	nop

900096b4 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900096b4:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
900096b6:	68c4      	ldr	r4, [r0, #12]
900096b8:	8900      	ldrh	r0, [r0, #8]
900096ba:	46a4      	mov	ip, r4
}
900096bc:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
900096c0:	4760      	bx	ip
900096c2:	bf00      	nop

900096c4 <FT5336_GestureConfig>:
{
900096c4:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
900096c6:	f100 0518 	add.w	r5, r0, #24
{
900096ca:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
900096cc:	7809      	ldrb	r1, [r1, #0]
900096ce:	4628      	mov	r0, r5
900096d0:	f000 f96c 	bl	900099ac <ft5336_radian_value>
900096d4:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
900096d6:	7931      	ldrb	r1, [r6, #4]
900096d8:	4628      	mov	r0, r5
900096da:	f000 f975 	bl	900099c8 <ft5336_offset_left_right>
900096de:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
900096e0:	7a31      	ldrb	r1, [r6, #8]
900096e2:	4628      	mov	r0, r5
900096e4:	f000 f97e 	bl	900099e4 <ft5336_offset_up_down>
900096e8:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
900096ea:	7b31      	ldrb	r1, [r6, #12]
900096ec:	4628      	mov	r0, r5
900096ee:	f000 f987 	bl	90009a00 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
900096f2:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
900096f4:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
900096f6:	4628      	mov	r0, r5
900096f8:	f000 f990 	bl	90009a1c <ft5336_distance_up_down>
900096fc:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
900096fe:	7d31      	ldrb	r1, [r6, #20]
90009700:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90009702:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90009704:	f000 f998 	bl	90009a38 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90009708:	42c4      	cmn	r4, r0
}
9000970a:	bf14      	ite	ne
9000970c:	f04f 30ff 	movne.w	r0, #4294967295
90009710:	2000      	moveq	r0, #0
90009712:	bd70      	pop	{r4, r5, r6, pc}

90009714 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90009714:	3018      	adds	r0, #24
90009716:	f000 b9ab 	b.w	90009a70 <ft5336_chip_id>
9000971a:	bf00      	nop

9000971c <FT5336_GetState>:
{
9000971c:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000971e:	f100 0518 	add.w	r5, r0, #24
{
90009722:	b083      	sub	sp, #12
90009724:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90009726:	4628      	mov	r0, r5
90009728:	a901      	add	r1, sp, #4
9000972a:	f000 f931 	bl	90009990 <ft5336_td_status>
9000972e:	bb10      	cbnz	r0, 90009776 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90009730:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90009734:	2b05      	cmp	r3, #5
90009736:	bf94      	ite	ls
90009738:	4619      	movls	r1, r3
9000973a:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
9000973c:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
9000973e:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90009740:	4628      	mov	r0, r5
90009742:	2103      	movs	r1, #3
90009744:	eb0d 0203 	add.w	r2, sp, r3
90009748:	f000 f910 	bl	9000996c <ft5336_read_reg>
9000974c:	b9b0      	cbnz	r0, 9000977c <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000974e:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90009752:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90009756:	0212      	lsls	r2, r2, #8
90009758:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
9000975c:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000975e:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90009762:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90009766:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90009768:	f89d 1007 	ldrb.w	r1, [sp, #7]
9000976c:	430b      	orrs	r3, r1
9000976e:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90009772:	b003      	add	sp, #12
90009774:	bd30      	pop	{r4, r5, pc}
90009776:	f04f 31ff 	mov.w	r1, #4294967295
9000977a:	e7df      	b.n	9000973c <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
9000977c:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90009780:	e7f7      	b.n	90009772 <FT5336_GetState+0x56>
90009782:	bf00      	nop

90009784 <FT5336_GetMultiTouchState>:
{
90009784:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90009786:	f100 0518 	add.w	r5, r0, #24
{
9000978a:	b088      	sub	sp, #32
9000978c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000978e:	4628      	mov	r0, r5
90009790:	4669      	mov	r1, sp
90009792:	f000 f8fd 	bl	90009990 <ft5336_td_status>
90009796:	2800      	cmp	r0, #0
90009798:	f040 809a 	bne.w	900098d0 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
9000979c:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900097a0:	2b05      	cmp	r3, #5
900097a2:	bf94      	ite	ls
900097a4:	4619      	movls	r1, r3
900097a6:	2100      	movhi	r1, #0
900097a8:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900097aa:	231e      	movs	r3, #30
900097ac:	466a      	mov	r2, sp
900097ae:	4628      	mov	r0, r5
900097b0:	2103      	movs	r1, #3
900097b2:	f000 f8db 	bl	9000996c <ft5336_read_reg>
900097b6:	2800      	cmp	r0, #0
900097b8:	f040 808d 	bne.w	900098d6 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900097bc:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900097c0:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900097c4:	020a      	lsls	r2, r1, #8
900097c6:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900097ca:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900097cc:	f89d c007 	ldrb.w	ip, [sp, #7]
900097d0:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900097d4:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900097d6:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900097da:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900097de:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900097e0:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900097e4:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900097e6:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900097e8:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900097ea:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900097ec:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900097f0:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900097f2:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900097f6:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900097fa:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900097fc:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900097fe:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009802:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009804:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009806:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009808:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000980c:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000980e:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009810:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009814:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009818:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000981a:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000981c:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000981e:	ea45 050c 	orr.w	r5, r5, ip
90009822:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009826:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000982a:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000982c:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000982e:	0212      	lsls	r2, r2, #8
90009830:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009834:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009836:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000983a:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000983e:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009840:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009842:	f89d 300e 	ldrb.w	r3, [sp, #14]
90009846:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009848:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000984c:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000984e:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009850:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009854:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009856:	f89d 200f 	ldrb.w	r2, [sp, #15]
9000985a:	4313      	orrs	r3, r2
9000985c:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000985e:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009860:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009864:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009868:	020a      	lsls	r2, r1, #8
9000986a:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000986e:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009870:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009874:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009876:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000987a:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000987c:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009880:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009882:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009884:	f89d 1018 	ldrb.w	r1, [sp, #24]
90009888:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000988a:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000988c:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000988e:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009892:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009894:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009898:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000989a:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000989e:	f89d 301d 	ldrb.w	r3, [sp, #29]
900098a2:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900098a4:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900098a6:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900098a8:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900098ac:	6625      	str	r5, [r4, #96]	; 0x60
900098ae:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900098b0:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900098b4:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900098b6:	021b      	lsls	r3, r3, #8
900098b8:	f89d 101b 	ldrb.w	r1, [sp, #27]
900098bc:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
900098c0:	430b      	orrs	r3, r1
900098c2:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900098c4:	f89d 3019 	ldrb.w	r3, [sp, #25]
900098c8:	4313      	orrs	r3, r2
900098ca:	6163      	str	r3, [r4, #20]
}
900098cc:	b008      	add	sp, #32
900098ce:	bd70      	pop	{r4, r5, r6, pc}
900098d0:	f04f 31ff 	mov.w	r1, #4294967295
900098d4:	e768      	b.n	900097a8 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
900098d6:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
900098da:	e7f7      	b.n	900098cc <FT5336_GetMultiTouchState+0x148>

900098dc <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
900098dc:	3018      	adds	r0, #24
900098de:	f000 b84d 	b.w	9000997c <ft5336_gest_id>
900098e2:	bf00      	nop

900098e4 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
900098e4:	2101      	movs	r1, #1
900098e6:	3018      	adds	r0, #24
900098e8:	f000 b8b4 	b.w	90009a54 <ft5336_g_mode>

900098ec <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
900098ec:	2100      	movs	r1, #0
900098ee:	3018      	adds	r0, #24
900098f0:	f000 b8b0 	b.w	90009a54 <ft5336_g_mode>

900098f4 <FT5336_Init>:
{
900098f4:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
900098f6:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
900098fa:	b98d      	cbnz	r5, 90009920 <FT5336_Init+0x2c>
    pObj->IO.Init();
900098fc:	4606      	mov	r6, r0
900098fe:	4604      	mov	r4, r0
90009900:	f856 3b18 	ldr.w	r3, [r6], #24
90009904:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90009906:	4629      	mov	r1, r5
90009908:	4630      	mov	r0, r6
9000990a:	f000 f8a3 	bl	90009a54 <ft5336_g_mode>
  if(ret != FT5336_OK)
9000990e:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90009910:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90009914:	bf18      	it	ne
90009916:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90009918:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
9000991c:	4240      	negs	r0, r0
}
9000991e:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
90009920:	2000      	movs	r0, #0
}
90009922:	bd70      	pop	{r4, r5, r6, pc}

90009924 <FT5336_ClearIT>:
90009924:	2000      	movs	r0, #0
90009926:	4770      	bx	lr

90009928 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90009928:	b1c0      	cbz	r0, 9000995c <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
9000992a:	890a      	ldrh	r2, [r1, #8]
{
9000992c:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
9000992e:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90009932:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90009934:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90009938:	694a      	ldr	r2, [r1, #20]
9000993a:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
9000993e:	4909      	ldr	r1, [pc, #36]	; (90009964 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90009940:	60c5      	str	r5, [r0, #12]
90009942:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90009946:	4a08      	ldr	r2, [pc, #32]	; (90009968 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90009948:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
9000994c:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
9000994e:	b10b      	cbz	r3, 90009954 <FT5336_RegisterBusIO+0x2c>
}
90009950:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90009952:	4718      	bx	r3
}
90009954:	f04f 30ff 	mov.w	r0, #4294967295
90009958:	bc30      	pop	{r4, r5}
9000995a:	4770      	bx	lr
9000995c:	f04f 30ff 	mov.w	r0, #4294967295
90009960:	4770      	bx	lr
90009962:	bf00      	nop
90009964:	900096a5 	.word	0x900096a5
90009968:	900096b5 	.word	0x900096b5

9000996c <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
9000996c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000996e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90009972:	46a4      	mov	ip, r4
}
90009974:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009978:	4760      	bx	ip
9000997a:	bf00      	nop

9000997c <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
9000997c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000997e:	2301      	movs	r3, #1
{
90009980:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009982:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90009986:	4619      	mov	r1, r3
90009988:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
9000998a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000998e:	4760      	bx	ip

90009990 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90009990:	b538      	push	{r3, r4, r5, lr}
90009992:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009994:	2301      	movs	r3, #1
90009996:	2102      	movs	r1, #2
90009998:	4622      	mov	r2, r4
9000999a:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
9000999e:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
900099a0:	b918      	cbnz	r0, 900099aa <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
900099a2:	7823      	ldrb	r3, [r4, #0]
900099a4:	f003 030f 	and.w	r3, r3, #15
900099a8:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
900099aa:	bd38      	pop	{r3, r4, r5, pc}

900099ac <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
900099ac:	b510      	push	{r4, lr}
900099ae:	460c      	mov	r4, r1
900099b0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900099b2:	2301      	movs	r3, #1
900099b4:	2191      	movs	r1, #145	; 0x91
{
900099b6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900099ba:	f10d 0207 	add.w	r2, sp, #7
900099be:	6804      	ldr	r4, [r0, #0]
900099c0:	6880      	ldr	r0, [r0, #8]
900099c2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
900099c4:	b002      	add	sp, #8
900099c6:	bd10      	pop	{r4, pc}

900099c8 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
900099c8:	b510      	push	{r4, lr}
900099ca:	460c      	mov	r4, r1
900099cc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900099ce:	2301      	movs	r3, #1
900099d0:	2192      	movs	r1, #146	; 0x92
{
900099d2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900099d6:	f10d 0207 	add.w	r2, sp, #7
900099da:	6804      	ldr	r4, [r0, #0]
900099dc:	6880      	ldr	r0, [r0, #8]
900099de:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
900099e0:	b002      	add	sp, #8
900099e2:	bd10      	pop	{r4, pc}

900099e4 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
900099e4:	b510      	push	{r4, lr}
900099e6:	460c      	mov	r4, r1
900099e8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900099ea:	2301      	movs	r3, #1
900099ec:	2193      	movs	r1, #147	; 0x93
{
900099ee:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900099f2:	f10d 0207 	add.w	r2, sp, #7
900099f6:	6804      	ldr	r4, [r0, #0]
900099f8:	6880      	ldr	r0, [r0, #8]
900099fa:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
900099fc:	b002      	add	sp, #8
900099fe:	bd10      	pop	{r4, pc}

90009a00 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90009a00:	b510      	push	{r4, lr}
90009a02:	460c      	mov	r4, r1
90009a04:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a06:	2301      	movs	r3, #1
90009a08:	2194      	movs	r1, #148	; 0x94
{
90009a0a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a0e:	f10d 0207 	add.w	r2, sp, #7
90009a12:	6804      	ldr	r4, [r0, #0]
90009a14:	6880      	ldr	r0, [r0, #8]
90009a16:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90009a18:	b002      	add	sp, #8
90009a1a:	bd10      	pop	{r4, pc}

90009a1c <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90009a1c:	b510      	push	{r4, lr}
90009a1e:	460c      	mov	r4, r1
90009a20:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a22:	2301      	movs	r3, #1
90009a24:	2195      	movs	r1, #149	; 0x95
{
90009a26:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a2a:	f10d 0207 	add.w	r2, sp, #7
90009a2e:	6804      	ldr	r4, [r0, #0]
90009a30:	6880      	ldr	r0, [r0, #8]
90009a32:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90009a34:	b002      	add	sp, #8
90009a36:	bd10      	pop	{r4, pc}

90009a38 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90009a38:	b510      	push	{r4, lr}
90009a3a:	460c      	mov	r4, r1
90009a3c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a3e:	2301      	movs	r3, #1
90009a40:	2196      	movs	r1, #150	; 0x96
{
90009a42:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a46:	f10d 0207 	add.w	r2, sp, #7
90009a4a:	6804      	ldr	r4, [r0, #0]
90009a4c:	6880      	ldr	r0, [r0, #8]
90009a4e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90009a50:	b002      	add	sp, #8
90009a52:	bd10      	pop	{r4, pc}

90009a54 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90009a54:	b510      	push	{r4, lr}
90009a56:	460c      	mov	r4, r1
90009a58:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a5a:	2301      	movs	r3, #1
90009a5c:	21a4      	movs	r1, #164	; 0xa4
{
90009a5e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a62:	f10d 0207 	add.w	r2, sp, #7
90009a66:	6804      	ldr	r4, [r0, #0]
90009a68:	6880      	ldr	r0, [r0, #8]
90009a6a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90009a6c:	b002      	add	sp, #8
90009a6e:	bd10      	pop	{r4, pc}

90009a70 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90009a70:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009a72:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90009a76:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009a78:	2301      	movs	r3, #1
90009a7a:	46a4      	mov	ip, r4
90009a7c:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90009a7e:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009a82:	4760      	bx	ip

90009a84 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90009a84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90009a86:	680b      	ldr	r3, [r1, #0]
{
90009a88:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90009a8a:	4c2a      	ldr	r4, [pc, #168]	; (90009b34 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009a8c:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
90009a90:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90009a92:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90009a94:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009a96:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90009a98:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90009a9a:	2301      	movs	r3, #1
90009a9c:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90009a9e:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009aa0:	f005 fd2a 	bl	9000f4f8 <HAL_SDRAM_SendCommand>
90009aa4:	2800      	cmp	r0, #0
90009aa6:	d142      	bne.n	90009b2e <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90009aa8:	f000 ff46 	bl	9000a938 <HAL_GetTick>
90009aac:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90009aae:	f000 ff43 	bl	9000a938 <HAL_GetTick>
90009ab2:	4286      	cmp	r6, r0
90009ab4:	d0fb      	beq.n	90009aae <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90009ab6:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90009ab8:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90009aba:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009abc:	491d      	ldr	r1, [pc, #116]	; (90009b34 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90009abe:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90009ac0:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90009ac2:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009ac4:	4638      	mov	r0, r7
90009ac6:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
90009aca:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90009acc:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009ace:	f005 fd13 	bl	9000f4f8 <HAL_SDRAM_SendCommand>
90009ad2:	bb60      	cbnz	r0, 90009b2e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009ad4:	4917      	ldr	r1, [pc, #92]	; (90009b34 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90009ad6:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90009ada:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009adc:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90009ade:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90009ae2:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009ae4:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90009ae8:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009aea:	f005 fd05 	bl	9000f4f8 <HAL_SDRAM_SendCommand>
90009aee:	b9f0      	cbnz	r0, 90009b2e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009af0:	4910      	ldr	r1, [pc, #64]	; (90009b34 <MT48LC4M32B2_Init+0xb0>)
90009af2:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90009af4:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90009af8:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90009afa:	696a      	ldr	r2, [r5, #20]
90009afc:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90009afe:	69aa      	ldr	r2, [r5, #24]
90009b00:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90009b02:	69ea      	ldr	r2, [r5, #28]
90009b04:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90009b06:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90009b08:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90009b0a:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90009b0c:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b10:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90009b14:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b16:	f005 fcef 	bl	9000f4f8 <HAL_SDRAM_SendCommand>
90009b1a:	b940      	cbnz	r0, 90009b2e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90009b1c:	68a9      	ldr	r1, [r5, #8]
90009b1e:	4638      	mov	r0, r7
90009b20:	f005 fd0a 	bl	9000f538 <HAL_SDRAM_ProgramRefreshRate>
90009b24:	3800      	subs	r0, #0
90009b26:	bf18      	it	ne
90009b28:	2001      	movne	r0, #1
90009b2a:	4240      	negs	r0, r0
}
90009b2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90009b2e:	f04f 30ff 	mov.w	r0, #4294967295
}
90009b32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90009b34:	2401fac0 	.word	0x2401fac0

90009b38 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90009b38:	4a10      	ldr	r2, [pc, #64]	; (90009b7c <BSP_I2C4_DeInit+0x44>)
{
90009b3a:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90009b3c:	6813      	ldr	r3, [r2, #0]
90009b3e:	3b01      	subs	r3, #1
90009b40:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90009b42:	b10b      	cbz	r3, 90009b48 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90009b44:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90009b46:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90009b48:	f44f 5180 	mov.w	r1, #4096	; 0x1000
90009b4c:	480c      	ldr	r0, [pc, #48]	; (90009b80 <BSP_I2C4_DeInit+0x48>)
90009b4e:	f001 faaf 	bl	9000b0b0 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90009b52:	480b      	ldr	r0, [pc, #44]	; (90009b80 <BSP_I2C4_DeInit+0x48>)
90009b54:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90009b58:	f001 faaa 	bl	9000b0b0 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90009b5c:	4a09      	ldr	r2, [pc, #36]	; (90009b84 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90009b5e:	480a      	ldr	r0, [pc, #40]	; (90009b88 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90009b60:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
90009b64:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90009b68:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90009b6c:	f001 fd48 	bl	9000b600 <HAL_I2C_DeInit>
90009b70:	2800      	cmp	r0, #0
90009b72:	d0e7      	beq.n	90009b44 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90009b74:	f06f 0007 	mvn.w	r0, #7
}
90009b78:	bd08      	pop	{r3, pc}
90009b7a:	bf00      	nop
90009b7c:	2401fad0 	.word	0x2401fad0
90009b80:	58020c00 	.word	0x58020c00
90009b84:	58024400 	.word	0x58024400
90009b88:	240204d8 	.word	0x240204d8

90009b8c <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90009b8c:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90009b8e:	2201      	movs	r2, #1
{
90009b90:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90009b92:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90009b96:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90009b9a:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90009b9e:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90009ba2:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90009ba4:	f001 fcd4 	bl	9000b550 <HAL_I2C_Init>
90009ba8:	b108      	cbz	r0, 90009bae <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90009baa:	2001      	movs	r0, #1
}
90009bac:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90009bae:	4601      	mov	r1, r0
90009bb0:	4620      	mov	r0, r4
90009bb2:	f001 ffe3 	bl	9000bb7c <HAL_I2CEx_ConfigAnalogFilter>
90009bb6:	2800      	cmp	r0, #0
90009bb8:	d1f7      	bne.n	90009baa <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90009bba:	4601      	mov	r1, r0
90009bbc:	4620      	mov	r0, r4
90009bbe:	f002 f807 	bl	9000bbd0 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90009bc2:	3800      	subs	r0, #0
90009bc4:	bf18      	it	ne
90009bc6:	2001      	movne	r0, #1
}
90009bc8:	bd10      	pop	{r4, pc}
90009bca:	bf00      	nop

90009bcc <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90009bcc:	4b99      	ldr	r3, [pc, #612]	; (90009e34 <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
90009bce:	489a      	ldr	r0, [pc, #616]	; (90009e38 <BSP_I2C4_Init+0x26c>)
90009bd0:	4a9a      	ldr	r2, [pc, #616]	; (90009e3c <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
90009bd2:	6819      	ldr	r1, [r3, #0]
{
90009bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009bd8:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
90009bda:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90009bdc:	9103      	str	r1, [sp, #12]
90009bde:	b119      	cbz	r1, 90009be8 <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90009be0:	2000      	movs	r0, #0
}
90009be2:	b01f      	add	sp, #124	; 0x7c
90009be4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90009be8:	2201      	movs	r2, #1
90009bea:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90009bec:	f001 ffc0 	bl	9000bb70 <HAL_I2C_GetState>
90009bf0:	2800      	cmp	r0, #0
90009bf2:	d1f5      	bne.n	90009be0 <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009bf4:	4c92      	ldr	r4, [pc, #584]	; (90009e40 <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009bf6:	f44f 5080 	mov.w	r0, #4096	; 0x1000
90009bfa:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90009bfc:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009bfe:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009c02:	2600      	movs	r6, #0
90009c04:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009c06:	f043 0308 	orr.w	r3, r3, #8
90009c0a:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90009c0e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90009c12:	f003 0308 	and.w	r3, r3, #8
90009c16:	9315      	str	r3, [sp, #84]	; 0x54
90009c18:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009c1a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90009c1e:	f043 0308 	orr.w	r3, r3, #8
90009c22:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90009c26:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90009c2a:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009c2c:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009c30:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009c34:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90009c36:	a918      	add	r1, sp, #96	; 0x60
90009c38:	4882      	ldr	r0, [pc, #520]	; (90009e44 <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009c3a:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009c3c:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90009c40:	f001 f904 	bl	9000ae4c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90009c44:	2312      	movs	r3, #18
90009c46:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90009c4a:	a918      	add	r1, sp, #96	; 0x60
90009c4c:	487d      	ldr	r0, [pc, #500]	; (90009e44 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90009c4e:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90009c50:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
90009c54:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90009c58:	f001 f8f8 	bl	9000ae4c <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90009c5c:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90009c60:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90009c64:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
90009c68:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90009c6c:	f003 0380 	and.w	r3, r3, #128	; 0x80
90009c70:	9317      	str	r3, [sp, #92]	; 0x5c
90009c72:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
90009c74:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90009c78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90009c7c:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
90009c80:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90009c84:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90009c88:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90009c8c:	f004 fc94 	bl	9000e5b8 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90009c90:	2800      	cmp	r0, #0
90009c92:	f000 81f6 	beq.w	9000a082 <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009c96:	4b6c      	ldr	r3, [pc, #432]	; (90009e48 <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90009c98:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009c9c:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009c9e:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ca2:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 90009e50 <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009ca6:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009ca8:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90009cac:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009cae:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90009cb0:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009cb4:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
90009cb8:	4b64      	ldr	r3, [pc, #400]	; (90009e4c <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90009cba:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90009cbe:	0079      	lsls	r1, r7, #1
90009cc0:	681b      	ldr	r3, [r3, #0]
90009cc2:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90009cc6:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
90009cca:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009ccc:	4699      	mov	r9, r3
90009cce:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009cd0:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
90009cd4:	46b8      	mov	r8, r7
90009cd6:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90009cda:	bf94      	ite	ls
90009cdc:	2101      	movls	r1, #1
90009cde:	2100      	movhi	r1, #0
90009ce0:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90009ce4:	f001 0101 	and.w	r1, r1, #1
90009ce8:	eb07 0287 	add.w	r2, r7, r7, lsl #2
90009cec:	bf38      	it	cc
90009cee:	2100      	movcc	r1, #0
90009cf0:	429c      	cmp	r4, r3
90009cf2:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
90009cf6:	9105      	str	r1, [sp, #20]
90009cf8:	bf8c      	ite	hi
90009cfa:	2100      	movhi	r1, #0
90009cfc:	2101      	movls	r1, #1
90009cfe:	459c      	cmp	ip, r3
90009d00:	bf38      	it	cc
90009d02:	2100      	movcc	r1, #0
90009d04:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90009d08:	9106      	str	r1, [sp, #24]
90009d0a:	eb07 0142 	add.w	r1, r7, r2, lsl #1
90009d0e:	9104      	str	r1, [sp, #16]
90009d10:	eb07 0183 	add.w	r1, r7, r3, lsl #2
90009d14:	9111      	str	r1, [sp, #68]	; 0x44
90009d16:	bf94      	ite	ls
90009d18:	2101      	movls	r1, #1
90009d1a:	2100      	movhi	r1, #0
90009d1c:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90009d20:	f001 0e01 	and.w	lr, r1, #1
90009d24:	bf38      	it	cc
90009d26:	f04f 0e00 	movcc.w	lr, #0
90009d2a:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009d2c:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009d30:	f8cd e01c 	str.w	lr, [sp, #28]
90009d34:	bf8c      	ite	hi
90009d36:	f04f 0e00 	movhi.w	lr, #0
90009d3a:	f04f 0e01 	movls.w	lr, #1
90009d3e:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009d40:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009d42:	bf38      	it	cc
90009d44:	f04f 0e00 	movcc.w	lr, #0
90009d48:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
90009d4c:	bf98      	it	ls
90009d4e:	2101      	movls	r1, #1
90009d50:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90009d54:	f8cd e020 	str.w	lr, [sp, #32]
90009d58:	f001 0101 	and.w	r1, r1, #1
90009d5c:	bf38      	it	cc
90009d5e:	2100      	movcc	r1, #0
90009d60:	4284      	cmp	r4, r0
90009d62:	9109      	str	r1, [sp, #36]	; 0x24
90009d64:	4601      	mov	r1, r0
90009d66:	bf8c      	ite	hi
90009d68:	2000      	movhi	r0, #0
90009d6a:	2001      	movls	r0, #1
90009d6c:	458c      	cmp	ip, r1
90009d6e:	bf38      	it	cc
90009d70:	2000      	movcc	r0, #0
90009d72:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
90009d76:	900b      	str	r0, [sp, #44]	; 0x2c
90009d78:	bf94      	ite	ls
90009d7a:	2001      	movls	r0, #1
90009d7c:	2000      	movhi	r0, #0
90009d7e:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90009d82:	f000 0001 	and.w	r0, r0, #1
90009d86:	bf38      	it	cc
90009d88:	2000      	movcc	r0, #0
90009d8a:	900c      	str	r0, [sp, #48]	; 0x30
90009d8c:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
90009d90:	4284      	cmp	r4, r0
90009d92:	bf8c      	ite	hi
90009d94:	f04f 0e00 	movhi.w	lr, #0
90009d98:	f04f 0e01 	movls.w	lr, #1
90009d9c:	4584      	cmp	ip, r0
90009d9e:	bf38      	it	cc
90009da0:	f04f 0e00 	movcc.w	lr, #0
90009da4:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90009da8:	4670      	mov	r0, lr
90009daa:	bf94      	ite	ls
90009dac:	2001      	movls	r0, #1
90009dae:	2000      	movhi	r0, #0
90009db0:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
90009db4:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90009db8:	f04f 0e00 	mov.w	lr, #0
90009dbc:	f000 0001 	and.w	r0, r0, #1
90009dc0:	bf38      	it	cc
90009dc2:	2000      	movcc	r0, #0
90009dc4:	900e      	str	r0, [sp, #56]	; 0x38
90009dc6:	9804      	ldr	r0, [sp, #16]
90009dc8:	4284      	cmp	r4, r0
90009dca:	4602      	mov	r2, r0
90009dcc:	bf8c      	ite	hi
90009dce:	2200      	movhi	r2, #0
90009dd0:	2201      	movls	r2, #1
90009dd2:	4584      	cmp	ip, r0
90009dd4:	bf38      	it	cc
90009dd6:	2200      	movcc	r2, #0
90009dd8:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
90009ddc:	920f      	str	r2, [sp, #60]	; 0x3c
90009dde:	bf94      	ite	ls
90009de0:	2201      	movls	r2, #1
90009de2:	2200      	movhi	r2, #0
90009de4:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90009de8:	f002 0201 	and.w	r2, r2, #1
90009dec:	bf38      	it	cc
90009dee:	2200      	movcc	r2, #0
90009df0:	9210      	str	r2, [sp, #64]	; 0x40
90009df2:	9a11      	ldr	r2, [sp, #68]	; 0x44
90009df4:	4294      	cmp	r4, r2
90009df6:	4613      	mov	r3, r2
90009df8:	bf8c      	ite	hi
90009dfa:	2300      	movhi	r3, #0
90009dfc:	2301      	movls	r3, #1
90009dfe:	4594      	cmp	ip, r2
90009e00:	bf38      	it	cc
90009e02:	2300      	movcc	r3, #0
90009e04:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
90009e08:	9311      	str	r3, [sp, #68]	; 0x44
90009e0a:	bf94      	ite	ls
90009e0c:	2301      	movls	r3, #1
90009e0e:	2300      	movhi	r3, #0
90009e10:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90009e14:	f003 0301 	and.w	r3, r3, #1
90009e18:	bf38      	it	cc
90009e1a:	2300      	movcc	r3, #0
90009e1c:	9312      	str	r3, [sp, #72]	; 0x48
90009e1e:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90009e22:	429c      	cmp	r4, r3
90009e24:	bf8c      	ite	hi
90009e26:	2200      	movhi	r2, #0
90009e28:	2201      	movls	r2, #1
90009e2a:	459c      	cmp	ip, r3
90009e2c:	bf38      	it	cc
90009e2e:	2200      	movcc	r2, #0
90009e30:	9204      	str	r2, [sp, #16]
90009e32:	e014      	b.n	90009e5e <BSP_I2C4_Init+0x292>
90009e34:	2401fad0 	.word	0x2401fad0
90009e38:	240204d8 	.word	0x240204d8
90009e3c:	58001c00 	.word	0x58001c00
90009e40:	58024400 	.word	0x58024400
90009e44:	58020c00 	.word	0x58020c00
90009e48:	3b9aca00 	.word	0x3b9aca00
90009e4c:	240204d4 	.word	0x240204d4
90009e50:	2401fad4 	.word	0x2401fad4
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009e54:	f1be 0f10 	cmp.w	lr, #16
90009e58:	44b8      	add	r8, r7
90009e5a:	f000 826c 	beq.w	9000a336 <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
90009e5e:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
90009e62:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90009e64:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
90009e68:	d3f4      	bcc.n	90009e54 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90009e6a:	ebbb 0205 	subs.w	r2, fp, r5
90009e6e:	bf18      	it	ne
90009e70:	2201      	movne	r2, #1
90009e72:	2c00      	cmp	r4, #0
90009e74:	bf18      	it	ne
90009e76:	2200      	movne	r2, #0
90009e78:	2a00      	cmp	r2, #0
90009e7a:	f040 824a 	bne.w	9000a312 <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009e7e:	45bc      	cmp	ip, r7
90009e80:	bf34      	ite	cc
90009e82:	2200      	movcc	r2, #0
90009e84:	2201      	movcs	r2, #1
90009e86:	42bc      	cmp	r4, r7
90009e88:	bf88      	it	hi
90009e8a:	2200      	movhi	r2, #0
            if(presc != prev_presc)
90009e8c:	45ab      	cmp	fp, r5
90009e8e:	bf0c      	ite	eq
90009e90:	2200      	moveq	r2, #0
90009e92:	f002 0201 	andne.w	r2, r2, #1
90009e96:	2a00      	cmp	r2, #0
90009e98:	f000 80fd 	beq.w	9000a096 <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e9c:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009ea0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009ea4:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ea6:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009eaa:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009eae:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009eb2:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009eb4:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009eb6:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009eb8:	f200 81a5 	bhi.w	9000a206 <BSP_I2C4_Init+0x63a>
90009ebc:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009ebe:	9906      	ldr	r1, [sp, #24]
90009ec0:	45ab      	cmp	fp, r5
90009ec2:	bf0c      	ite	eq
90009ec4:	2100      	moveq	r1, #0
90009ec6:	f001 0101 	andne.w	r1, r1, #1
90009eca:	2900      	cmp	r1, #0
90009ecc:	f000 80ff 	beq.w	9000a0ce <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ed0:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009ed4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009ed8:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009eda:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009ede:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ee2:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009ee6:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ee8:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009eea:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009eec:	f200 818b 	bhi.w	9000a206 <BSP_I2C4_Init+0x63a>
90009ef0:	460a      	mov	r2, r1
90009ef2:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009ef4:	9908      	ldr	r1, [sp, #32]
90009ef6:	45ab      	cmp	fp, r5
90009ef8:	bf0c      	ite	eq
90009efa:	2100      	moveq	r1, #0
90009efc:	f001 0101 	andne.w	r1, r1, #1
90009f00:	2900      	cmp	r1, #0
90009f02:	f000 80ff 	beq.w	9000a104 <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f06:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009f0a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f0e:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f10:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f14:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f18:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f1c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f1e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009f20:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f22:	f200 8170 	bhi.w	9000a206 <BSP_I2C4_Init+0x63a>
90009f26:	460a      	mov	r2, r1
90009f28:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009f2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
90009f2c:	45ab      	cmp	fp, r5
90009f2e:	bf0c      	ite	eq
90009f30:	2100      	moveq	r1, #0
90009f32:	f001 0101 	andne.w	r1, r1, #1
90009f36:	2900      	cmp	r1, #0
90009f38:	f000 80fe 	beq.w	9000a138 <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f3c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009f40:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f44:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f46:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f4a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f4e:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f52:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f54:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009f56:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f58:	f200 8155 	bhi.w	9000a206 <BSP_I2C4_Init+0x63a>
90009f5c:	460a      	mov	r2, r1
90009f5e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009f60:	990d      	ldr	r1, [sp, #52]	; 0x34
90009f62:	45ab      	cmp	fp, r5
90009f64:	bf0c      	ite	eq
90009f66:	2100      	moveq	r1, #0
90009f68:	f001 0101 	andne.w	r1, r1, #1
90009f6c:	2900      	cmp	r1, #0
90009f6e:	f000 80fd 	beq.w	9000a16c <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f72:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009f76:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f7a:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f7c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f80:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f84:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f88:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f8a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009f8c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f8e:	f200 813a 	bhi.w	9000a206 <BSP_I2C4_Init+0x63a>
90009f92:	460a      	mov	r2, r1
90009f94:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009f96:	990f      	ldr	r1, [sp, #60]	; 0x3c
90009f98:	45ab      	cmp	fp, r5
90009f9a:	bf0c      	ite	eq
90009f9c:	2100      	moveq	r1, #0
90009f9e:	f001 0101 	andne.w	r1, r1, #1
90009fa2:	2900      	cmp	r1, #0
90009fa4:	f000 80fc 	beq.w	9000a1a0 <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fa8:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009fac:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009fb0:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fb2:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009fb6:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fba:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009fbe:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fc0:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009fc2:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009fc4:	f200 811f 	bhi.w	9000a206 <BSP_I2C4_Init+0x63a>
90009fc8:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009fca:	9e11      	ldr	r6, [sp, #68]	; 0x44
90009fcc:	455d      	cmp	r5, fp
90009fce:	bf0c      	ite	eq
90009fd0:	2600      	moveq	r6, #0
90009fd2:	f006 0601 	andne.w	r6, r6, #1
90009fd6:	2e00      	cmp	r6, #0
90009fd8:	f000 80fb 	beq.w	9000a1d2 <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fdc:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009fe0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009fe4:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fe6:	4650      	mov	r0, sl
90009fe8:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009fec:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ff0:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009ff4:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009ff6:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009ff8:	f200 8105 	bhi.w	9000a206 <BSP_I2C4_Init+0x63a>
90009ffc:	4631      	mov	r1, r6
90009ffe:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000a000:	9e04      	ldr	r6, [sp, #16]
9000a002:	455d      	cmp	r5, fp
9000a004:	bf0c      	ite	eq
9000a006:	2600      	moveq	r6, #0
9000a008:	f006 0601 	andne.w	r6, r6, #1
9000a00c:	2e00      	cmp	r6, #0
9000a00e:	f000 817c 	beq.w	9000a30a <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a012:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a016:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a01a:	4650      	mov	r0, sl
9000a01c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
9000a020:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a024:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a028:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a02a:	f04f 030f 	mov.w	r3, #15
9000a02e:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a030:	f200 80e9 	bhi.w	9000a206 <BSP_I2C4_Init+0x63a>
9000a034:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
9000a036:	e70d      	b.n	90009e54 <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000a038:	9a07      	ldr	r2, [sp, #28]
9000a03a:	9b08      	ldr	r3, [sp, #32]
9000a03c:	3214      	adds	r2, #20
9000a03e:	3301      	adds	r3, #1
9000a040:	9207      	str	r2, [sp, #28]
9000a042:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9000a044:	9308      	str	r3, [sp, #32]
9000a046:	4293      	cmp	r3, r2
9000a048:	f040 80ff 	bne.w	9000a24a <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
9000a04c:	297f      	cmp	r1, #127	; 0x7f
9000a04e:	d818      	bhi.n	9000a082 <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000a050:	eb01 0381 	add.w	r3, r1, r1, lsl #2
9000a054:	990b      	ldr	r1, [sp, #44]	; 0x2c
9000a056:	eb01 0283 	add.w	r2, r1, r3, lsl #2
9000a05a:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000a05e:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
9000a060:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000a062:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000a064:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000a068:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000a06c:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000a070:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
9000a072:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000a074:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
9000a076:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000a07a:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000a07c:	430b      	orrs	r3, r1
9000a07e:	4313      	orrs	r3, r2
9000a080:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
9000a082:	9903      	ldr	r1, [sp, #12]
9000a084:	48b5      	ldr	r0, [pc, #724]	; (9000a35c <BSP_I2C4_Init+0x790>)
9000a086:	f7ff fd81 	bl	90009b8c <MX_I2C4_Init>
9000a08a:	2800      	cmp	r0, #0
9000a08c:	f43f ada8 	beq.w	90009be0 <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
9000a090:	f06f 0007 	mvn.w	r0, #7
  return ret;
9000a094:	e5a5      	b.n	90009be2 <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
9000a096:	4632      	mov	r2, r6
9000a098:	9905      	ldr	r1, [sp, #20]
9000a09a:	45ab      	cmp	fp, r5
9000a09c:	bf0c      	ite	eq
9000a09e:	2100      	moveq	r1, #0
9000a0a0:	f001 0101 	andne.w	r1, r1, #1
9000a0a4:	2900      	cmp	r1, #0
9000a0a6:	f43f af0a 	beq.w	90009ebe <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0aa:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a0ae:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a0b2:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0b4:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a0b8:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0bc:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a0c0:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0c2:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a0c4:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a0c6:	f200 809e 	bhi.w	9000a206 <BSP_I2C4_Init+0x63a>
9000a0ca:	460a      	mov	r2, r1
9000a0cc:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000a0ce:	9907      	ldr	r1, [sp, #28]
9000a0d0:	45ab      	cmp	fp, r5
9000a0d2:	bf0c      	ite	eq
9000a0d4:	2100      	moveq	r1, #0
9000a0d6:	f001 0101 	andne.w	r1, r1, #1
9000a0da:	2900      	cmp	r1, #0
9000a0dc:	f43f af0a 	beq.w	90009ef4 <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0e0:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a0e4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a0e8:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0ea:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a0ee:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0f2:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a0f6:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0f8:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a0fa:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a0fc:	f200 8083 	bhi.w	9000a206 <BSP_I2C4_Init+0x63a>
9000a100:	460a      	mov	r2, r1
9000a102:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000a104:	9909      	ldr	r1, [sp, #36]	; 0x24
9000a106:	45ab      	cmp	fp, r5
9000a108:	bf0c      	ite	eq
9000a10a:	2100      	moveq	r1, #0
9000a10c:	f001 0101 	andne.w	r1, r1, #1
9000a110:	2900      	cmp	r1, #0
9000a112:	f43f af0a 	beq.w	90009f2a <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a116:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a11a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a11e:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a120:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a124:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a128:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a12c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a12e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a130:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a132:	d868      	bhi.n	9000a206 <BSP_I2C4_Init+0x63a>
9000a134:	460a      	mov	r2, r1
9000a136:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000a138:	990c      	ldr	r1, [sp, #48]	; 0x30
9000a13a:	45ab      	cmp	fp, r5
9000a13c:	bf0c      	ite	eq
9000a13e:	2100      	moveq	r1, #0
9000a140:	f001 0101 	andne.w	r1, r1, #1
9000a144:	2900      	cmp	r1, #0
9000a146:	f43f af0b 	beq.w	90009f60 <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a14a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a14e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a152:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a154:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a158:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a15c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a160:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a162:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a164:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a166:	d84e      	bhi.n	9000a206 <BSP_I2C4_Init+0x63a>
9000a168:	460a      	mov	r2, r1
9000a16a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000a16c:	990e      	ldr	r1, [sp, #56]	; 0x38
9000a16e:	45ab      	cmp	fp, r5
9000a170:	bf0c      	ite	eq
9000a172:	2100      	moveq	r1, #0
9000a174:	f001 0101 	andne.w	r1, r1, #1
9000a178:	2900      	cmp	r1, #0
9000a17a:	f43f af0c 	beq.w	90009f96 <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a17e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a182:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a186:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a188:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a18c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a190:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a194:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a196:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a198:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a19a:	d834      	bhi.n	9000a206 <BSP_I2C4_Init+0x63a>
9000a19c:	460a      	mov	r2, r1
9000a19e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000a1a0:	9910      	ldr	r1, [sp, #64]	; 0x40
9000a1a2:	45ab      	cmp	fp, r5
9000a1a4:	bf0c      	ite	eq
9000a1a6:	2100      	moveq	r1, #0
9000a1a8:	f001 0101 	andne.w	r1, r1, #1
9000a1ac:	2900      	cmp	r1, #0
9000a1ae:	f000 80ae 	beq.w	9000a30e <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1b2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a1b6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a1ba:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1bc:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a1c0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1c4:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a1c8:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1ca:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a1cc:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a1ce:	d81a      	bhi.n	9000a206 <BSP_I2C4_Init+0x63a>
9000a1d0:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000a1d2:	9e12      	ldr	r6, [sp, #72]	; 0x48
9000a1d4:	455d      	cmp	r5, fp
9000a1d6:	bf0c      	ite	eq
9000a1d8:	2600      	moveq	r6, #0
9000a1da:	f006 0601 	andne.w	r6, r6, #1
9000a1de:	2e00      	cmp	r6, #0
9000a1e0:	f43f af0e 	beq.w	9000a000 <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1e4:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a1e8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1ec:	4650      	mov	r0, sl
9000a1ee:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
9000a1f2:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a1f6:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a1fa:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a1fc:	f04f 030e 	mov.w	r3, #14
9000a200:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a202:	f67f af17 	bls.w	9000a034 <BSP_I2C4_Init+0x468>
9000a206:	4b56      	ldr	r3, [pc, #344]	; (9000a360 <BSP_I2C4_Init+0x794>)
9000a208:	900b      	str	r0, [sp, #44]	; 0x2c
9000a20a:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
9000a20e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9000a212:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9000a214:	f240 4201 	movw	r2, #1025	; 0x401
9000a218:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a21c:	f640 1ac4 	movw	sl, #2500	; 0x9c4
9000a220:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000a222:	f240 4b12 	movw	fp, #1042	; 0x412
9000a226:	920d      	str	r2, [sp, #52]	; 0x34
9000a228:	9a02      	ldr	r2, [sp, #8]
9000a22a:	4296      	cmp	r6, r2
9000a22c:	bf38      	it	cc
9000a22e:	4616      	movcc	r6, r2
9000a230:	4a4c      	ldr	r2, [pc, #304]	; (9000a364 <BSP_I2C4_Init+0x798>)
9000a232:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a234:	2200      	movs	r2, #0
9000a236:	9208      	str	r2, [sp, #32]
9000a238:	f04f 32ff 	mov.w	r2, #4294967295
9000a23c:	4611      	mov	r1, r2
9000a23e:	f103 0232 	add.w	r2, r3, #50	; 0x32
9000a242:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
9000a246:	920c      	str	r2, [sp, #48]	; 0x30
9000a248:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000a24a:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
9000a24c:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000a250:	6818      	ldr	r0, [r3, #0]
9000a252:	9b02      	ldr	r3, [sp, #8]
9000a254:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
9000a258:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000a25a:	1a1b      	subs	r3, r3, r0
9000a25c:	ea4f 0943 	mov.w	r9, r3, lsl #1
9000a260:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000a262:	eb03 0e00 	add.w	lr, r3, r0
9000a266:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000a268:	4403      	add	r3, r0
9000a26a:	9309      	str	r3, [sp, #36]	; 0x24
9000a26c:	e006      	b.n	9000a27c <BSP_I2C4_Init+0x6b0>
9000a26e:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
9000a272:	4486      	add	lr, r0
9000a274:	eba9 0900 	sub.w	r9, r9, r0
9000a278:	f43f aede 	beq.w	9000a038 <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000a27c:	f240 5214 	movw	r2, #1300	; 0x514
9000a280:	f8cd 8004 	str.w	r8, [sp, #4]
9000a284:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a288:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000a28c:	4596      	cmp	lr, r2
9000a28e:	d9ee      	bls.n	9000a26e <BSP_I2C4_Init+0x6a2>
9000a290:	9a02      	ldr	r2, [sp, #8]
9000a292:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
9000a296:	d2ea      	bcs.n	9000a26e <BSP_I2C4_Init+0x6a2>
9000a298:	f640 0c34 	movw	ip, #2100	; 0x834
9000a29c:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a29e:	f8cd 9018 	str.w	r9, [sp, #24]
9000a2a2:	2200      	movs	r2, #0
9000a2a4:	ebac 0c03 	sub.w	ip, ip, r3
9000a2a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000a2aa:	4689      	mov	r9, r1
9000a2ac:	4473      	add	r3, lr
9000a2ae:	e9cd e804 	strd	lr, r8, [sp, #16]
9000a2b2:	f8dd 8020 	ldr.w	r8, [sp, #32]
9000a2b6:	f8dd e01c 	ldr.w	lr, [sp, #28]
9000a2ba:	e005      	b.n	9000a2c8 <BSP_I2C4_Init+0x6fc>
9000a2bc:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
9000a2c0:	4403      	add	r3, r0
9000a2c2:	eba4 0400 	sub.w	r4, r4, r0
9000a2c6:	d01a      	beq.n	9000a2fe <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000a2c8:	eb0c 0103 	add.w	r1, ip, r3
9000a2cc:	4617      	mov	r7, r2
9000a2ce:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000a2d2:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000a2d4:	42b1      	cmp	r1, r6
9000a2d6:	d9f1      	bls.n	9000a2bc <BSP_I2C4_Init+0x6f0>
9000a2d8:	455d      	cmp	r5, fp
9000a2da:	d8ef      	bhi.n	9000a2bc <BSP_I2C4_Init+0x6f0>
            if (error < 0)
9000a2dc:	ea33 0123 	bics.w	r1, r3, r3, asr #32
9000a2e0:	bf28      	it	cs
9000a2e2:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
9000a2e4:	458a      	cmp	sl, r1
9000a2e6:	d9e9      	bls.n	9000a2bc <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
9000a2e8:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a2ea:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
9000a2ee:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
9000a2f0:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a2f2:	4403      	add	r3, r0
9000a2f4:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
9000a2f8:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a2fc:	d1e4      	bne.n	9000a2c8 <BSP_I2C4_Init+0x6fc>
9000a2fe:	4649      	mov	r1, r9
9000a300:	f8dd 9018 	ldr.w	r9, [sp, #24]
9000a304:	e9dd e804 	ldrd	lr, r8, [sp, #16]
9000a308:	e7b1      	b.n	9000a26e <BSP_I2C4_Init+0x6a2>
9000a30a:	460e      	mov	r6, r1
9000a30c:	e5a2      	b.n	90009e54 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
9000a30e:	4611      	mov	r1, r2
9000a310:	e65b      	b.n	90009fca <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a312:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a316:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a31a:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a31c:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a320:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a324:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a328:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a32a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a32c:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a32e:	f63f af6a 	bhi.w	9000a206 <BSP_I2C4_Init+0x63a>
9000a332:	46ab      	mov	fp, r5
9000a334:	e6b0      	b.n	9000a098 <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
9000a336:	3501      	adds	r5, #1
9000a338:	9b02      	ldr	r3, [sp, #8]
9000a33a:	2d10      	cmp	r5, #16
9000a33c:	441f      	add	r7, r3
9000a33e:	f47f acc7 	bne.w	90009cd0 <BSP_I2C4_Init+0x104>
9000a342:	b126      	cbz	r6, 9000a34e <BSP_I2C4_Init+0x782>
9000a344:	4b06      	ldr	r3, [pc, #24]	; (9000a360 <BSP_I2C4_Init+0x794>)
9000a346:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9000a34a:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000a34e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000a350:	2b00      	cmp	r3, #0
9000a352:	f43f ae96 	beq.w	9000a082 <BSP_I2C4_Init+0x4b6>
9000a356:	4b03      	ldr	r3, [pc, #12]	; (9000a364 <BSP_I2C4_Init+0x798>)
9000a358:	930b      	str	r3, [sp, #44]	; 0x2c
9000a35a:	e75a      	b.n	9000a212 <BSP_I2C4_Init+0x646>
9000a35c:	240204d8 	.word	0x240204d8
9000a360:	240204d4 	.word	0x240204d4
9000a364:	2401fad4 	.word	0x2401fad4

9000a368 <BSP_I2C4_WriteReg>:
{
9000a368:	b530      	push	{r4, r5, lr}
9000a36a:	4614      	mov	r4, r2
9000a36c:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000a36e:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
9000a372:	460a      	mov	r2, r1
9000a374:	9301      	str	r3, [sp, #4]
9000a376:	4601      	mov	r1, r0
9000a378:	2301      	movs	r3, #1
9000a37a:	4809      	ldr	r0, [pc, #36]	; (9000a3a0 <BSP_I2C4_WriteReg+0x38>)
9000a37c:	9502      	str	r5, [sp, #8]
9000a37e:	9400      	str	r4, [sp, #0]
9000a380:	f001 f958 	bl	9000b634 <HAL_I2C_Mem_Write>
9000a384:	b908      	cbnz	r0, 9000a38a <BSP_I2C4_WriteReg+0x22>
}
9000a386:	b005      	add	sp, #20
9000a388:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000a38a:	4805      	ldr	r0, [pc, #20]	; (9000a3a0 <BSP_I2C4_WriteReg+0x38>)
9000a38c:	f001 fbf4 	bl	9000bb78 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
9000a390:	2804      	cmp	r0, #4
9000a392:	bf0c      	ite	eq
9000a394:	f06f 0065 	mvneq.w	r0, #101	; 0x65
9000a398:	f06f 0003 	mvnne.w	r0, #3
9000a39c:	e7f3      	b.n	9000a386 <BSP_I2C4_WriteReg+0x1e>
9000a39e:	bf00      	nop
9000a3a0:	240204d8 	.word	0x240204d8

9000a3a4 <BSP_I2C4_ReadReg>:
{
9000a3a4:	b530      	push	{r4, r5, lr}
9000a3a6:	4614      	mov	r4, r2
9000a3a8:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000a3aa:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
9000a3ae:	460a      	mov	r2, r1
9000a3b0:	9301      	str	r3, [sp, #4]
9000a3b2:	4601      	mov	r1, r0
9000a3b4:	2301      	movs	r3, #1
9000a3b6:	4809      	ldr	r0, [pc, #36]	; (9000a3dc <BSP_I2C4_ReadReg+0x38>)
9000a3b8:	9502      	str	r5, [sp, #8]
9000a3ba:	9400      	str	r4, [sp, #0]
9000a3bc:	f001 fa6e 	bl	9000b89c <HAL_I2C_Mem_Read>
9000a3c0:	b908      	cbnz	r0, 9000a3c6 <BSP_I2C4_ReadReg+0x22>
}
9000a3c2:	b005      	add	sp, #20
9000a3c4:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000a3c6:	4805      	ldr	r0, [pc, #20]	; (9000a3dc <BSP_I2C4_ReadReg+0x38>)
9000a3c8:	f001 fbd6 	bl	9000bb78 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
9000a3cc:	2804      	cmp	r0, #4
9000a3ce:	bf0c      	ite	eq
9000a3d0:	f06f 0065 	mvneq.w	r0, #101	; 0x65
9000a3d4:	f06f 0003 	mvnne.w	r0, #3
9000a3d8:	e7f3      	b.n	9000a3c2 <BSP_I2C4_ReadReg+0x1e>
9000a3da:	bf00      	nop
9000a3dc:	240204d8 	.word	0x240204d8

9000a3e0 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
9000a3e0:	f000 baaa 	b.w	9000a938 <HAL_GetTick>

9000a3e4 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
9000a3e4:	b970      	cbnz	r0, 9000a404 <BSP_SDRAM_DeInit+0x20>
{
9000a3e6:	b510      	push	{r4, lr}
9000a3e8:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
9000a3ea:	4808      	ldr	r0, [pc, #32]	; (9000a40c <BSP_SDRAM_DeInit+0x28>)
9000a3ec:	f005 f876 	bl	9000f4dc <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
9000a3f0:	207a      	movs	r0, #122	; 0x7a
9000a3f2:	f000 fb0b 	bl	9000aa0c <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a3f6:	4b06      	ldr	r3, [pc, #24]	; (9000a410 <BSP_SDRAM_DeInit+0x2c>)
9000a3f8:	4806      	ldr	r0, [pc, #24]	; (9000a414 <BSP_SDRAM_DeInit+0x30>)
9000a3fa:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
9000a3fc:	f003 f98e 	bl	9000d71c <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
9000a400:	4620      	mov	r0, r4
}
9000a402:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000a404:	f06f 0001 	mvn.w	r0, #1
}
9000a408:	4770      	bx	lr
9000a40a:	bf00      	nop
9000a40c:	2402052c 	.word	0x2402052c
9000a410:	52000040 	.word	0x52000040
9000a414:	24020560 	.word	0x24020560

9000a418 <MX_SDRAM_BANK2_Init>:
{
9000a418:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
9000a41a:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000a41c:	2200      	movs	r2, #0
{
9000a41e:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000a420:	4c13      	ldr	r4, [pc, #76]	; (9000a470 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000a422:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000a424:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
9000a426:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
9000a428:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
9000a42a:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
9000a42c:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
9000a42e:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
9000a430:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
9000a434:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
9000a436:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000a438:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
9000a43a:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000a43c:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a43e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000a442:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a444:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
9000a448:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000a44a:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a44c:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
9000a450:	2204      	movs	r2, #4
9000a452:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
9000a456:	2202      	movs	r2, #2
9000a458:	2302      	movs	r3, #2
9000a45a:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000a45e:	4b05      	ldr	r3, [pc, #20]	; (9000a474 <MX_SDRAM_BANK2_Init+0x5c>)
9000a460:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000a462:	f005 f811 	bl	9000f488 <HAL_SDRAM_Init>
}
9000a466:	3800      	subs	r0, #0
9000a468:	bf18      	it	ne
9000a46a:	2001      	movne	r0, #1
9000a46c:	b009      	add	sp, #36	; 0x24
9000a46e:	bd30      	pop	{r4, r5, pc}
9000a470:	2402052c 	.word	0x2402052c
9000a474:	52004140 	.word	0x52004140

9000a478 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
9000a478:	2800      	cmp	r0, #0
9000a47a:	f040 80d2 	bne.w	9000a622 <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
9000a47e:	4b6c      	ldr	r3, [pc, #432]	; (9000a630 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000a480:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
9000a482:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a486:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
9000a48a:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
9000a48c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
9000a490:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
9000a492:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a496:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a498:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a49c:	4c65      	ldr	r4, [pc, #404]	; (9000a634 <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000a49e:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a4a2:	4e65      	ldr	r6, [pc, #404]	; (9000a638 <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000a4a4:	9201      	str	r2, [sp, #4]
9000a4a6:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
9000a4a8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a4ac:	f042 0201 	orr.w	r2, r2, #1
9000a4b0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
9000a4b4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a4b8:	f002 0201 	and.w	r2, r2, #1
9000a4bc:	9202      	str	r2, [sp, #8]
9000a4be:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
9000a4c0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a4c4:	f042 0208 	orr.w	r2, r2, #8
9000a4c8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a4cc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a4d0:	f002 0208 	and.w	r2, r2, #8
9000a4d4:	9203      	str	r2, [sp, #12]
9000a4d6:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
9000a4d8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a4dc:	f042 0210 	orr.w	r2, r2, #16
9000a4e0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a4e4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a4e8:	f002 0210 	and.w	r2, r2, #16
9000a4ec:	9204      	str	r2, [sp, #16]
9000a4ee:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
9000a4f0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a4f4:	f042 0220 	orr.w	r2, r2, #32
9000a4f8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a4fc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a500:	f002 0220 	and.w	r2, r2, #32
9000a504:	9205      	str	r2, [sp, #20]
9000a506:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
9000a508:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a50c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000a510:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a514:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a518:	f002 0240 	and.w	r2, r2, #64	; 0x40
9000a51c:	9206      	str	r2, [sp, #24]
9000a51e:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a520:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a524:	f042 0280 	orr.w	r2, r2, #128	; 0x80
9000a528:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a52c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000a530:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a532:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a534:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a538:	e9cd 0108 	strd	r0, r1, [sp, #32]
9000a53c:	2001      	movs	r0, #1
9000a53e:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a540:	9307      	str	r3, [sp, #28]
9000a542:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a544:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
9000a548:	a908      	add	r1, sp, #32
9000a54a:	483c      	ldr	r0, [pc, #240]	; (9000a63c <BSP_SDRAM_Init+0x1c4>)
9000a54c:	f000 fc7e 	bl	9000ae4c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000a550:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000a554:	a908      	add	r1, sp, #32
9000a556:	483a      	ldr	r0, [pc, #232]	; (9000a640 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000a558:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000a55a:	f000 fc77 	bl	9000ae4c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000a55e:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000a562:	a908      	add	r1, sp, #32
9000a564:	4837      	ldr	r0, [pc, #220]	; (9000a644 <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000a566:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000a568:	f000 fc70 	bl	9000ae4c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
9000a56c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000a570:	a908      	add	r1, sp, #32
9000a572:	4835      	ldr	r0, [pc, #212]	; (9000a648 <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
9000a574:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000a576:	f000 fc69 	bl	9000ae4c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000a57a:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000a57c:	a908      	add	r1, sp, #32
9000a57e:	4833      	ldr	r0, [pc, #204]	; (9000a64c <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000a580:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000a582:	f000 fc63 	bl	9000ae4c <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000a586:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a588:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000a58c:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
9000a590:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000a592:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
9000a594:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a596:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000a598:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000a59c:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000a59e:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a5a0:	4a2b      	ldr	r2, [pc, #172]	; (9000a650 <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a5a2:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a5a4:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a5a6:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000a5a8:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
9000a5ac:	f640 0308 	movw	r3, #2056	; 0x808
9000a5b0:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000a5b2:	2320      	movs	r3, #32
9000a5b4:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000a5b6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
9000a5ba:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000a5be:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
9000a5c0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
9000a5c4:	f003 f8aa 	bl	9000d71c <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
9000a5c8:	4620      	mov	r0, r4
9000a5ca:	f003 f82d 	bl	9000d628 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
9000a5ce:	462a      	mov	r2, r5
9000a5d0:	210f      	movs	r1, #15
9000a5d2:	207a      	movs	r0, #122	; 0x7a
9000a5d4:	f000 f9ce 	bl	9000a974 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
9000a5d8:	207a      	movs	r0, #122	; 0x7a
9000a5da:	f000 fa09 	bl	9000a9f0 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
9000a5de:	2210      	movs	r2, #16
9000a5e0:	2104      	movs	r1, #4
9000a5e2:	4630      	mov	r0, r6
9000a5e4:	f7ff ff18 	bl	9000a418 <MX_SDRAM_BANK2_Init>
9000a5e8:	b9f0      	cbnz	r0, 9000a628 <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000a5ea:	491a      	ldr	r1, [pc, #104]	; (9000a654 <BSP_SDRAM_Init+0x1dc>)
9000a5ec:	2208      	movs	r2, #8
9000a5ee:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000a5f0:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000a5f2:	e9c1 2300 	strd	r2, r3, [r1]
9000a5f6:	f240 6203 	movw	r2, #1539	; 0x603
9000a5fa:	2300      	movs	r3, #0
9000a5fc:	e9c1 2302 	strd	r2, r3, [r1, #8]
9000a600:	2200      	movs	r2, #0
9000a602:	2330      	movs	r3, #48	; 0x30
9000a604:	e9c1 2304 	strd	r2, r3, [r1, #16]
9000a608:	2200      	movs	r2, #0
9000a60a:	f44f 7300 	mov.w	r3, #512	; 0x200
9000a60e:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000a612:	f7ff fa37 	bl	90009a84 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
9000a616:	2800      	cmp	r0, #0
9000a618:	bf18      	it	ne
9000a61a:	f06f 0004 	mvnne.w	r0, #4
}
9000a61e:	b00e      	add	sp, #56	; 0x38
9000a620:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000a622:	f06f 0001 	mvn.w	r0, #1
}
9000a626:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
9000a628:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000a62c:	e7f7      	b.n	9000a61e <BSP_SDRAM_Init+0x1a6>
9000a62e:	bf00      	nop
9000a630:	58024400 	.word	0x58024400
9000a634:	240205cc 	.word	0x240205cc
9000a638:	2402052c 	.word	0x2402052c
9000a63c:	58020c00 	.word	0x58020c00
9000a640:	58021000 	.word	0x58021000
9000a644:	58021400 	.word	0x58021400
9000a648:	58021800 	.word	0x58021800
9000a64c:	58021c00 	.word	0x58021c00
9000a650:	52000040 	.word	0x52000040
9000a654:	24020638 	.word	0x24020638

9000a658 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
9000a658:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a65c:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
9000a65e:	2800      	cmp	r0, #0
9000a660:	d16b      	bne.n	9000a73a <BSP_TS_Init+0xe2>
9000a662:	680b      	ldr	r3, [r1, #0]
9000a664:	460c      	mov	r4, r1
9000a666:	1e5a      	subs	r2, r3, #1
9000a668:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
9000a66c:	d265      	bcs.n	9000a73a <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000a66e:	684a      	ldr	r2, [r1, #4]
9000a670:	1e51      	subs	r1, r2, #1
9000a672:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
9000a676:	d260      	bcs.n	9000a73a <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
9000a678:	4293      	cmp	r3, r2
9000a67a:	bf28      	it	cs
9000a67c:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000a67e:	68e2      	ldr	r2, [r4, #12]
9000a680:	429a      	cmp	r2, r3
9000a682:	d85a      	bhi.n	9000a73a <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
9000a684:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
9000a686:	4b31      	ldr	r3, [pc, #196]	; (9000a74c <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a688:	4d31      	ldr	r5, [pc, #196]	; (9000a750 <BSP_TS_Init+0xf8>)
9000a68a:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
9000a68c:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
9000a690:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000a692:	4a30      	ldr	r2, [pc, #192]	; (9000a754 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
9000a694:	4b30      	ldr	r3, [pc, #192]	; (9000a758 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000a696:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
9000a698:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000a69a:	4a30      	ldr	r2, [pc, #192]	; (9000a75c <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
9000a69c:	4b30      	ldr	r3, [pc, #192]	; (9000a760 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
9000a69e:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a6a0:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000a6a2:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
9000a6a4:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a6a6:	f7ff f93f 	bl	90009928 <FT5336_RegisterBusIO>
9000a6aa:	2800      	cmp	r0, #0
9000a6ac:	d14b      	bne.n	9000a746 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
9000a6ae:	a901      	add	r1, sp, #4
9000a6b0:	4628      	mov	r0, r5
9000a6b2:	f7ff f82f 	bl	90009714 <FT5336_ReadID>
9000a6b6:	2800      	cmp	r0, #0
9000a6b8:	d145      	bne.n	9000a746 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
9000a6ba:	9b01      	ldr	r3, [sp, #4]
9000a6bc:	2b51      	cmp	r3, #81	; 0x51
9000a6be:	d142      	bne.n	9000a746 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a6c0:	4b28      	ldr	r3, [pc, #160]	; (9000a764 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000a6c2:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
9000a6c4:	4f28      	ldr	r7, [pc, #160]	; (9000a768 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a6c6:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 9000a770 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
9000a6ca:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a6cc:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000a6d0:	681b      	ldr	r3, [r3, #0]
9000a6d2:	4798      	blx	r3
9000a6d4:	4606      	mov	r6, r0
9000a6d6:	2800      	cmp	r0, #0
9000a6d8:	d135      	bne.n	9000a746 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a6da:	4d24      	ldr	r5, [pc, #144]	; (9000a76c <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a6dc:	a902      	add	r1, sp, #8
9000a6de:	6838      	ldr	r0, [r7, #0]
9000a6e0:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a6e4:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a6e8:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a6ea:	e9c5 7200 	strd	r7, r2, [r5]
9000a6ee:	68a2      	ldr	r2, [r4, #8]
9000a6f0:	60aa      	str	r2, [r5, #8]
9000a6f2:	68e2      	ldr	r2, [r4, #12]
9000a6f4:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a6f6:	4798      	blx	r3
9000a6f8:	2800      	cmp	r0, #0
9000a6fa:	db18      	blt.n	9000a72e <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
9000a6fc:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
9000a700:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a704:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a706:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a70a:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a70c:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a70e:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a710:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a712:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a716:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a71a:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a71c:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a71e:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a720:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a722:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a724:	63eb      	str	r3, [r5, #60]	; 0x3c
}
9000a726:	4630      	mov	r0, r6
9000a728:	b008      	add	sp, #32
9000a72a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
9000a72e:	f06f 0604 	mvn.w	r6, #4
}
9000a732:	4630      	mov	r0, r6
9000a734:	b008      	add	sp, #32
9000a736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
9000a73a:	f06f 0601 	mvn.w	r6, #1
}
9000a73e:	4630      	mov	r0, r6
9000a740:	b008      	add	sp, #32
9000a742:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
9000a746:	f04f 36ff 	mov.w	r6, #4294967295
9000a74a:	e7ec      	b.n	9000a726 <BSP_TS_Init+0xce>
9000a74c:	90009bcd 	.word	0x90009bcd
9000a750:	24020658 	.word	0x24020658
9000a754:	90009b39 	.word	0x90009b39
9000a758:	9000a3a5 	.word	0x9000a3a5
9000a75c:	9000a369 	.word	0x9000a369
9000a760:	9000a3e1 	.word	0x9000a3e1
9000a764:	24000040 	.word	0x24000040
9000a768:	24020680 	.word	0x24020680
9000a76c:	24020684 	.word	0x24020684
9000a770:	240206c4 	.word	0x240206c4

9000a774 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
9000a774:	2800      	cmp	r0, #0
9000a776:	d157      	bne.n	9000a828 <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
9000a778:	4b2d      	ldr	r3, [pc, #180]	; (9000a830 <BSP_TS_GetState+0xbc>)
9000a77a:	4a2e      	ldr	r2, [pc, #184]	; (9000a834 <BSP_TS_GetState+0xc0>)
9000a77c:	681b      	ldr	r3, [r3, #0]
9000a77e:	6810      	ldr	r0, [r2, #0]
9000a780:	691b      	ldr	r3, [r3, #16]
{
9000a782:	b5f0      	push	{r4, r5, r6, r7, lr}
9000a784:	b085      	sub	sp, #20
9000a786:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
9000a788:	a901      	add	r1, sp, #4
9000a78a:	4798      	blx	r3
9000a78c:	2800      	cmp	r0, #0
9000a78e:	db41      	blt.n	9000a814 <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
9000a790:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000a792:	4b29      	ldr	r3, [pc, #164]	; (9000a838 <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
9000a794:	b93d      	cbnz	r5, 9000a7a6 <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
9000a796:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
9000a798:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000a79a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
9000a79c:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000a79e:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
9000a7a2:	b005      	add	sp, #20
9000a7a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000a7a6:	6898      	ldr	r0, [r3, #8]
9000a7a8:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
9000a7aa:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000a7ae:	d435      	bmi.n	9000a81c <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
9000a7b0:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
9000a7b2:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000a7b4:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
9000a7b6:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000a7ba:	bf1c      	itt	ne
9000a7bc:	f106 32ff 	addne.w	r2, r6, #4294967295
9000a7c0:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
9000a7c4:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000a7c8:	6958      	ldr	r0, [r3, #20]
9000a7ca:	bf18      	it	ne
9000a7cc:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000a7ce:	681f      	ldr	r7, [r3, #0]
9000a7d0:	fb07 f202 	mul.w	r2, r7, r2
9000a7d4:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a7d8:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
9000a7da:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a7dc:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
9000a7e0:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
9000a7e2:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000a7e4:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000a7e6:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a7e8:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000a7ec:	bf8c      	ite	hi
9000a7ee:	1b90      	subhi	r0, r2, r6
9000a7f0:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000a7f2:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a7f4:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000a7f6:	bf8c      	ite	hi
9000a7f8:	1b4f      	subhi	r7, r1, r5
9000a7fa:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
9000a7fc:	42b8      	cmp	r0, r7
9000a7fe:	bf38      	it	cc
9000a800:	4638      	movcc	r0, r7
9000a802:	68df      	ldr	r7, [r3, #12]
9000a804:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
9000a806:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
9000a80a:	d20a      	bcs.n	9000a822 <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
9000a80c:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
9000a80e:	62d9      	str	r1, [r3, #44]	; 0x2c
}
9000a810:	b005      	add	sp, #20
9000a812:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
9000a814:	f06f 0004 	mvn.w	r0, #4
}
9000a818:	b005      	add	sp, #20
9000a81a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
9000a81c:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
9000a81e:	463a      	mov	r2, r7
9000a820:	e7c8      	b.n	9000a7b4 <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000a822:	e9c4 6501 	strd	r6, r5, [r4, #4]
9000a826:	e7bc      	b.n	9000a7a2 <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
9000a828:	f06f 0001 	mvn.w	r0, #1
}
9000a82c:	4770      	bx	lr
9000a82e:	bf00      	nop
9000a830:	240206c4 	.word	0x240206c4
9000a834:	24020680 	.word	0x24020680
9000a838:	24020684 	.word	0x24020684

9000a83c <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
9000a83c:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a83e:	4c19      	ldr	r4, [pc, #100]	; (9000a8a4 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
9000a840:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
9000a842:	4b19      	ldr	r3, [pc, #100]	; (9000a8a8 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a844:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
9000a848:	4818      	ldr	r0, [pc, #96]	; (9000a8ac <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a84a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000a84e:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
9000a852:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a854:	4c16      	ldr	r4, [pc, #88]	; (9000a8b0 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
9000a856:	f041 0101 	orr.w	r1, r1, #1
9000a85a:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
9000a85c:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
9000a85e:	6819      	ldr	r1, [r3, #0]
9000a860:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a862:	4914      	ldr	r1, [pc, #80]	; (9000a8b4 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
9000a864:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
9000a866:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
9000a868:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
9000a86a:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
9000a86c:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
9000a86e:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
9000a870:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
9000a872:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
9000a874:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
9000a876:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
9000a878:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
9000a87a:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
9000a87c:	6818      	ldr	r0, [r3, #0]
9000a87e:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
9000a882:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
9000a884:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a886:	6823      	ldr	r3, [r4, #0]
9000a888:	4019      	ands	r1, r3
9000a88a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000a88e:	d203      	bcs.n	9000a898 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
9000a890:	4b09      	ldr	r3, [pc, #36]	; (9000a8b8 <SystemInit+0x7c>)
9000a892:	2201      	movs	r2, #1
9000a894:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000a898:	4a08      	ldr	r2, [pc, #32]	; (9000a8bc <SystemInit+0x80>)
9000a89a:	4b02      	ldr	r3, [pc, #8]	; (9000a8a4 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
9000a89c:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000a8a0:	609a      	str	r2, [r3, #8]
}
9000a8a2:	4770      	bx	lr
9000a8a4:	e000ed00 	.word	0xe000ed00
9000a8a8:	58024400 	.word	0x58024400
9000a8ac:	eaf6ed7f 	.word	0xeaf6ed7f
9000a8b0:	5c001000 	.word	0x5c001000
9000a8b4:	ffff0000 	.word	0xffff0000
9000a8b8:	51008000 	.word	0x51008000
9000a8bc:	90000000 	.word	0x90000000

9000a8c0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
9000a8c0:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000a8c2:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a8c4:	4c12      	ldr	r4, [pc, #72]	; (9000a910 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000a8c6:	f000 f843 	bl	9000a950 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a8ca:	f003 fc65 	bl	9000e198 <HAL_RCC_GetSysClockFreq>
9000a8ce:	4b11      	ldr	r3, [pc, #68]	; (9000a914 <HAL_Init+0x54>)
9000a8d0:	4911      	ldr	r1, [pc, #68]	; (9000a918 <HAL_Init+0x58>)
9000a8d2:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a8d4:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a8d6:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a8da:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a8de:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a8e0:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a8e2:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000a8e6:	490d      	ldr	r1, [pc, #52]	; (9000a91c <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a8e8:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a8ec:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a8ee:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000a8f2:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000a8f4:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a8f6:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000a8f8:	f7f8 fd6c 	bl	900033d4 <HAL_InitTick>
9000a8fc:	b110      	cbz	r0, 9000a904 <HAL_Init+0x44>
  {
    return HAL_ERROR;
9000a8fe:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
9000a900:	4620      	mov	r0, r4
9000a902:	bd10      	pop	{r4, pc}
9000a904:	4604      	mov	r4, r0
  HAL_MspInit();
9000a906:	f7f8 fb23 	bl	90002f50 <HAL_MspInit>
}
9000a90a:	4620      	mov	r0, r4
9000a90c:	bd10      	pop	{r4, pc}
9000a90e:	bf00      	nop
9000a910:	24000074 	.word	0x24000074
9000a914:	58024400 	.word	0x58024400
9000a918:	9002d3c8 	.word	0x9002d3c8
9000a91c:	24000070 	.word	0x24000070

9000a920 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
9000a920:	4a03      	ldr	r2, [pc, #12]	; (9000a930 <HAL_IncTick+0x10>)
9000a922:	4b04      	ldr	r3, [pc, #16]	; (9000a934 <HAL_IncTick+0x14>)
9000a924:	6811      	ldr	r1, [r2, #0]
9000a926:	781b      	ldrb	r3, [r3, #0]
9000a928:	440b      	add	r3, r1
9000a92a:	6013      	str	r3, [r2, #0]
}
9000a92c:	4770      	bx	lr
9000a92e:	bf00      	nop
9000a930:	240206c8 	.word	0x240206c8
9000a934:	24000078 	.word	0x24000078

9000a938 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
9000a938:	4b01      	ldr	r3, [pc, #4]	; (9000a940 <HAL_GetTick+0x8>)
9000a93a:	6818      	ldr	r0, [r3, #0]
}
9000a93c:	4770      	bx	lr
9000a93e:	bf00      	nop
9000a940:	240206c8 	.word	0x240206c8

9000a944 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
9000a944:	4b01      	ldr	r3, [pc, #4]	; (9000a94c <HAL_GetREVID+0x8>)
9000a946:	6818      	ldr	r0, [r3, #0]
}
9000a948:	0c00      	lsrs	r0, r0, #16
9000a94a:	4770      	bx	lr
9000a94c:	5c001000 	.word	0x5c001000

9000a950 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000a950:	4906      	ldr	r1, [pc, #24]	; (9000a96c <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000a952:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000a956:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
9000a958:	4b05      	ldr	r3, [pc, #20]	; (9000a970 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000a95a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000a95c:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000a960:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
9000a964:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
9000a966:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
9000a968:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
9000a96a:	4770      	bx	lr
9000a96c:	e000ed00 	.word	0xe000ed00
9000a970:	05fa0000 	.word	0x05fa0000

9000a974 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
9000a974:	4b1b      	ldr	r3, [pc, #108]	; (9000a9e4 <HAL_NVIC_SetPriority+0x70>)
9000a976:	68db      	ldr	r3, [r3, #12]
9000a978:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
9000a97c:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000a97e:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a982:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000a986:	f1be 0f04 	cmp.w	lr, #4
9000a98a:	bf28      	it	cs
9000a98c:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a990:	f1bc 0f06 	cmp.w	ip, #6
9000a994:	d91a      	bls.n	9000a9cc <HAL_NVIC_SetPriority+0x58>
9000a996:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
9000a998:	f04f 3cff 	mov.w	ip, #4294967295
9000a99c:	fa0c fc03 	lsl.w	ip, ip, r3
9000a9a0:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000a9a4:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
9000a9a8:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000a9aa:	fa0c fc0e 	lsl.w	ip, ip, lr
9000a9ae:	ea21 010c 	bic.w	r1, r1, ip
9000a9b2:	fa01 f103 	lsl.w	r1, r1, r3
9000a9b6:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
9000a9ba:	db0a      	blt.n	9000a9d2 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000a9bc:	0109      	lsls	r1, r1, #4
9000a9be:	4b0a      	ldr	r3, [pc, #40]	; (9000a9e8 <HAL_NVIC_SetPriority+0x74>)
9000a9c0:	b2c9      	uxtb	r1, r1
9000a9c2:	4403      	add	r3, r0
9000a9c4:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
9000a9c8:	f85d fb04 	ldr.w	pc, [sp], #4
9000a9cc:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a9ce:	4613      	mov	r3, r2
9000a9d0:	e7e8      	b.n	9000a9a4 <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000a9d2:	f000 000f 	and.w	r0, r0, #15
9000a9d6:	0109      	lsls	r1, r1, #4
9000a9d8:	4b04      	ldr	r3, [pc, #16]	; (9000a9ec <HAL_NVIC_SetPriority+0x78>)
9000a9da:	b2c9      	uxtb	r1, r1
9000a9dc:	4403      	add	r3, r0
9000a9de:	7619      	strb	r1, [r3, #24]
9000a9e0:	f85d fb04 	ldr.w	pc, [sp], #4
9000a9e4:	e000ed00 	.word	0xe000ed00
9000a9e8:	e000e100 	.word	0xe000e100
9000a9ec:	e000ecfc 	.word	0xe000ecfc

9000a9f0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000a9f0:	2800      	cmp	r0, #0
9000a9f2:	db07      	blt.n	9000aa04 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000a9f4:	2301      	movs	r3, #1
9000a9f6:	f000 011f 	and.w	r1, r0, #31
9000a9fa:	4a03      	ldr	r2, [pc, #12]	; (9000aa08 <HAL_NVIC_EnableIRQ+0x18>)
9000a9fc:	0940      	lsrs	r0, r0, #5
9000a9fe:	408b      	lsls	r3, r1
9000aa00:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000aa04:	4770      	bx	lr
9000aa06:	bf00      	nop
9000aa08:	e000e100 	.word	0xe000e100

9000aa0c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000aa0c:	2800      	cmp	r0, #0
9000aa0e:	db0c      	blt.n	9000aa2a <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000aa10:	0943      	lsrs	r3, r0, #5
9000aa12:	2201      	movs	r2, #1
9000aa14:	f000 001f 	and.w	r0, r0, #31
9000aa18:	4904      	ldr	r1, [pc, #16]	; (9000aa2c <HAL_NVIC_DisableIRQ+0x20>)
9000aa1a:	3320      	adds	r3, #32
9000aa1c:	4082      	lsls	r2, r0
9000aa1e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000aa22:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000aa26:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
9000aa2a:	4770      	bx	lr
9000aa2c:	e000e100 	.word	0xe000e100

9000aa30 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
9000aa30:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000aa34:	4b04      	ldr	r3, [pc, #16]	; (9000aa48 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000aa36:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000aa38:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000aa3a:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000aa3e:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
9000aa40:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
9000aa44:	4770      	bx	lr
9000aa46:	bf00      	nop
9000aa48:	e000ed00 	.word	0xe000ed00

9000aa4c <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
9000aa4c:	4b06      	ldr	r3, [pc, #24]	; (9000aa68 <HAL_MPU_Enable+0x1c>)
9000aa4e:	f040 0001 	orr.w	r0, r0, #1
9000aa52:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
9000aa56:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000aa58:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000aa5c:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
9000aa5e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000aa62:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
9000aa66:	4770      	bx	lr
9000aa68:	e000ed00 	.word	0xe000ed00

9000aa6c <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
9000aa6c:	4a17      	ldr	r2, [pc, #92]	; (9000aacc <HAL_MPU_ConfigRegion+0x60>)
9000aa6e:	7843      	ldrb	r3, [r0, #1]
9000aa70:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
9000aa74:	7801      	ldrb	r1, [r0, #0]
9000aa76:	b321      	cbz	r1, 9000aac2 <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
9000aa78:	6843      	ldr	r3, [r0, #4]
{
9000aa7a:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
9000aa7c:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000aa80:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000aa82:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000aa86:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
9000aa88:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000aa8c:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
9000aa90:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000aa94:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
9000aa96:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000aa98:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
9000aa9c:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000aaa0:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
9000aaa4:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000aaa8:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
9000aaac:	7a01      	ldrb	r1, [r0, #8]
9000aaae:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
9000aab2:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000aab6:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000aaba:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
9000aabe:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
9000aac2:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
9000aac6:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
9000aaca:	4770      	bx	lr
9000aacc:	e000ed00 	.word	0xe000ed00

9000aad0 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
9000aad0:	2800      	cmp	r0, #0
9000aad2:	d036      	beq.n	9000ab42 <HAL_CRC_Init+0x72>
{
9000aad4:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
9000aad6:	7f43      	ldrb	r3, [r0, #29]
9000aad8:	4604      	mov	r4, r0
9000aada:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000aade:	b363      	cbz	r3, 9000ab3a <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
9000aae0:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000aae2:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
9000aae4:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000aae6:	b9f3      	cbnz	r3, 9000ab26 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
9000aae8:	6823      	ldr	r3, [r4, #0]
9000aaea:	4a17      	ldr	r2, [pc, #92]	; (9000ab48 <HAL_CRC_Init+0x78>)
9000aaec:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
9000aaee:	689a      	ldr	r2, [r3, #8]
9000aaf0:	f022 0218 	bic.w	r2, r2, #24
9000aaf4:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000aaf6:	7962      	ldrb	r2, [r4, #5]
9000aaf8:	b18a      	cbz	r2, 9000ab1e <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
9000aafa:	6922      	ldr	r2, [r4, #16]
9000aafc:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000aafe:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000ab00:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000ab04:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9000ab08:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
9000ab0a:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000ab0c:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000ab0e:	689a      	ldr	r2, [r3, #8]
9000ab10:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9000ab14:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000ab16:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000ab18:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
9000ab1a:	7761      	strb	r1, [r4, #29]
}
9000ab1c:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000ab1e:	f04f 32ff 	mov.w	r2, #4294967295
9000ab22:	611a      	str	r2, [r3, #16]
9000ab24:	e7eb      	b.n	9000aafe <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000ab26:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
9000ab2a:	4620      	mov	r0, r4
9000ab2c:	f000 f80e 	bl	9000ab4c <HAL_CRCEx_Polynomial_Set>
9000ab30:	b908      	cbnz	r0, 9000ab36 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000ab32:	6823      	ldr	r3, [r4, #0]
9000ab34:	e7df      	b.n	9000aaf6 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000ab36:	2001      	movs	r0, #1
}
9000ab38:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
9000ab3a:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
9000ab3c:	f7f8 fa22 	bl	90002f84 <HAL_CRC_MspInit>
9000ab40:	e7ce      	b.n	9000aae0 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000ab42:	2001      	movs	r0, #1
}
9000ab44:	4770      	bx	lr
9000ab46:	bf00      	nop
9000ab48:	04c11db7 	.word	0x04c11db7

9000ab4c <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
9000ab4c:	07cb      	lsls	r3, r1, #31
9000ab4e:	d51a      	bpl.n	9000ab86 <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000ab50:	231e      	movs	r3, #30
{
9000ab52:	b410      	push	{r4}
9000ab54:	e001      	b.n	9000ab5a <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000ab56:	3b01      	subs	r3, #1
9000ab58:	d317      	bcc.n	9000ab8a <HAL_CRCEx_Polynomial_Set+0x3e>
9000ab5a:	fa21 fc03 	lsr.w	ip, r1, r3
9000ab5e:	f01c 0f01 	tst.w	ip, #1
9000ab62:	d0f8      	beq.n	9000ab56 <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
9000ab64:	2a18      	cmp	r2, #24
9000ab66:	d811      	bhi.n	9000ab8c <HAL_CRCEx_Polynomial_Set+0x40>
9000ab68:	e8df f002 	tbb	[pc, r2]
9000ab6c:	10101016 	.word	0x10101016
9000ab70:	10101010 	.word	0x10101010
9000ab74:	10101024 	.word	0x10101024
9000ab78:	10101010 	.word	0x10101010
9000ab7c:	10101021 	.word	0x10101021
9000ab80:	10101010 	.word	0x10101010
9000ab84:	14          	.byte	0x14
9000ab85:	00          	.byte	0x00
    status =  HAL_ERROR;
9000ab86:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
9000ab88:	4770      	bx	lr
    switch (PolyLength)
9000ab8a:	b12a      	cbz	r2, 9000ab98 <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
9000ab8c:	2001      	movs	r0, #1
}
9000ab8e:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ab92:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
9000ab94:	2b06      	cmp	r3, #6
9000ab96:	d8f9      	bhi.n	9000ab8c <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
9000ab98:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000ab9a:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
9000ab9c:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000ab9e:	68a3      	ldr	r3, [r4, #8]
9000aba0:	f023 0318 	bic.w	r3, r3, #24
9000aba4:	4313      	orrs	r3, r2
9000aba6:	60a3      	str	r3, [r4, #8]
}
9000aba8:	f85d 4b04 	ldr.w	r4, [sp], #4
9000abac:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
9000abae:	2b07      	cmp	r3, #7
9000abb0:	d9f2      	bls.n	9000ab98 <HAL_CRCEx_Polynomial_Set+0x4c>
9000abb2:	e7eb      	b.n	9000ab8c <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
9000abb4:	2b0f      	cmp	r3, #15
9000abb6:	d9ef      	bls.n	9000ab98 <HAL_CRCEx_Polynomial_Set+0x4c>
9000abb8:	e7e8      	b.n	9000ab8c <HAL_CRCEx_Polynomial_Set+0x40>
9000abba:	bf00      	nop

9000abbc <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
9000abbc:	2800      	cmp	r0, #0
9000abbe:	d035      	beq.n	9000ac2c <HAL_DMA2D_Init+0x70>
{
9000abc0:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
9000abc2:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
9000abc6:	4604      	mov	r4, r0
9000abc8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000abcc:	b34b      	cbz	r3, 9000ac22 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000abce:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000abd0:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000abd2:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000abd4:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000abd8:	69e1      	ldr	r1, [r4, #28]
9000abda:	681d      	ldr	r5, [r3, #0]
9000abdc:	4814      	ldr	r0, [pc, #80]	; (9000ac30 <HAL_DMA2D_Init+0x74>)
9000abde:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000abe0:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000abe2:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000abe4:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000abe6:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000abe8:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000abea:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000abec:	4302      	orrs	r2, r0
9000abee:	6b59      	ldr	r1, [r3, #52]	; 0x34
9000abf0:	4810      	ldr	r0, [pc, #64]	; (9000ac34 <HAL_DMA2D_Init+0x78>)
9000abf2:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000abf4:	4910      	ldr	r1, [pc, #64]	; (9000ac38 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000abf6:	4302      	orrs	r2, r0
9000abf8:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000abfa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
9000abfc:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000abfe:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000ac02:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000ac04:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000ac06:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000ac08:	6b59      	ldr	r1, [r3, #52]	; 0x34
9000ac0a:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000ac0e:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000ac10:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000ac14:	430a      	orrs	r2, r1
9000ac16:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000ac18:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000ac1a:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000ac1c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
9000ac20:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000ac22:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000ac26:	f7f8 f9c5 	bl	90002fb4 <HAL_DMA2D_MspInit>
9000ac2a:	e7d0      	b.n	9000abce <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
9000ac2c:	2001      	movs	r0, #1
}
9000ac2e:	4770      	bx	lr
9000ac30:	fff8ffbf 	.word	0xfff8ffbf
9000ac34:	fffffef8 	.word	0xfffffef8
9000ac38:	ffff0000 	.word	0xffff0000

9000ac3c <HAL_DMA2D_LineEventCallback>:
9000ac3c:	4770      	bx	lr
9000ac3e:	bf00      	nop

9000ac40 <HAL_DMA2D_CLUTLoadingCpltCallback>:
9000ac40:	4770      	bx	lr
9000ac42:	bf00      	nop

9000ac44 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000ac44:	6803      	ldr	r3, [r0, #0]
{
9000ac46:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000ac48:	685d      	ldr	r5, [r3, #4]
{
9000ac4a:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
9000ac4c:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
9000ac4e:	07ea      	lsls	r2, r5, #31
9000ac50:	d501      	bpl.n	9000ac56 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
9000ac52:	05f1      	lsls	r1, r6, #23
9000ac54:	d456      	bmi.n	9000ad04 <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000ac56:	06aa      	lsls	r2, r5, #26
9000ac58:	d501      	bpl.n	9000ac5e <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
9000ac5a:	04b3      	lsls	r3, r6, #18
9000ac5c:	d43b      	bmi.n	9000acd6 <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
9000ac5e:	0728      	lsls	r0, r5, #28
9000ac60:	d501      	bpl.n	9000ac66 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
9000ac62:	0531      	lsls	r1, r6, #20
9000ac64:	d421      	bmi.n	9000acaa <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000ac66:	076a      	lsls	r2, r5, #29
9000ac68:	d501      	bpl.n	9000ac6e <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
9000ac6a:	0573      	lsls	r3, r6, #21
9000ac6c:	d472      	bmi.n	9000ad54 <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
9000ac6e:	07a8      	lsls	r0, r5, #30
9000ac70:	d501      	bpl.n	9000ac76 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
9000ac72:	05b1      	lsls	r1, r6, #22
9000ac74:	d404      	bmi.n	9000ac80 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000ac76:	06ea      	lsls	r2, r5, #27
9000ac78:	d501      	bpl.n	9000ac7e <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000ac7a:	04f3      	lsls	r3, r6, #19
9000ac7c:	d457      	bmi.n	9000ad2e <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
9000ac7e:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
9000ac80:	6823      	ldr	r3, [r4, #0]
9000ac82:	681a      	ldr	r2, [r3, #0]
9000ac84:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000ac88:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
9000ac8a:	2202      	movs	r2, #2
9000ac8c:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000ac8e:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000ac90:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000ac92:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
9000ac94:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000ac96:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000ac9a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
9000ac9e:	6a23      	ldr	r3, [r4, #32]
9000aca0:	2b00      	cmp	r3, #0
9000aca2:	d0e8      	beq.n	9000ac76 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
9000aca4:	4620      	mov	r0, r4
9000aca6:	4798      	blx	r3
9000aca8:	e7e5      	b.n	9000ac76 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
9000acaa:	6823      	ldr	r3, [r4, #0]
9000acac:	681a      	ldr	r2, [r3, #0]
9000acae:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
9000acb2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
9000acb4:	2208      	movs	r2, #8
9000acb6:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000acb8:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
9000acba:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000acbc:	4313      	orrs	r3, r2
9000acbe:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000acc0:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000acc4:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000acc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000acc8:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000accc:	2b00      	cmp	r3, #0
9000acce:	d0ca      	beq.n	9000ac66 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
9000acd0:	4620      	mov	r0, r4
9000acd2:	4798      	blx	r3
9000acd4:	e7c7      	b.n	9000ac66 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
9000acd6:	6823      	ldr	r3, [r4, #0]
9000acd8:	681a      	ldr	r2, [r3, #0]
9000acda:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
9000acde:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
9000ace0:	2220      	movs	r2, #32
9000ace2:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000ace4:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
9000ace6:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000ace8:	f043 0302 	orr.w	r3, r3, #2
9000acec:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000acee:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000acf2:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000acf4:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000acf6:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000acfa:	2b00      	cmp	r3, #0
9000acfc:	d0af      	beq.n	9000ac5e <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
9000acfe:	4620      	mov	r0, r4
9000ad00:	4798      	blx	r3
9000ad02:	e7ac      	b.n	9000ac5e <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
9000ad04:	681a      	ldr	r2, [r3, #0]
9000ad06:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000ad0a:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
9000ad0c:	6e42      	ldr	r2, [r0, #100]	; 0x64
9000ad0e:	f042 0201 	orr.w	r2, r2, #1
9000ad12:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
9000ad14:	2201      	movs	r2, #1
9000ad16:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000ad18:	2304      	movs	r3, #4
9000ad1a:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000ad1e:	2300      	movs	r3, #0
9000ad20:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000ad24:	6a43      	ldr	r3, [r0, #36]	; 0x24
9000ad26:	2b00      	cmp	r3, #0
9000ad28:	d095      	beq.n	9000ac56 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000ad2a:	4798      	blx	r3
9000ad2c:	e793      	b.n	9000ac56 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000ad2e:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000ad30:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000ad32:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
9000ad34:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000ad36:	681a      	ldr	r2, [r3, #0]
9000ad38:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
9000ad3c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000ad3e:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000ad40:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000ad42:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
9000ad44:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000ad48:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000ad4a:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000ad4e:	f7ff ff77 	bl	9000ac40 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
9000ad52:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000ad54:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000ad56:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000ad58:	681a      	ldr	r2, [r3, #0]
9000ad5a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
9000ad5e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
9000ad60:	2204      	movs	r2, #4
9000ad62:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000ad64:	f7ff ff6a 	bl	9000ac3c <HAL_DMA2D_LineEventCallback>
9000ad68:	e781      	b.n	9000ac6e <HAL_DMA2D_IRQHandler+0x2a>
9000ad6a:	bf00      	nop

9000ad6c <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
9000ad6c:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
9000ad70:	2a01      	cmp	r2, #1
9000ad72:	d065      	beq.n	9000ae40 <HAL_DMA2D_ConfigLayer+0xd4>
9000ad74:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ad76:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000ad7a:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ad7c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
9000ad80:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
9000ad82:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000ad84:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
9000ad88:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000ad8c:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ad8e:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
9000ad90:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000ad92:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000ad94:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ad98:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
9000ad9c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000ad9e:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ada2:	ea42 0204 	orr.w	r2, r2, r4
9000ada6:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000adaa:	d922      	bls.n	9000adf2 <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
9000adac:	6b45      	ldr	r5, [r0, #52]	; 0x34
9000adae:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000adb2:	b981      	cbnz	r1, 9000add6 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000adb4:	6818      	ldr	r0, [r3, #0]
9000adb6:	4923      	ldr	r1, [pc, #140]	; (9000ae44 <HAL_DMA2D_ConfigLayer+0xd8>)
9000adb8:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000adba:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000adbc:	4029      	ands	r1, r5
9000adbe:	4311      	orrs	r1, r2
9000adc0:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000adc2:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
9000adc4:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000adc6:	2101      	movs	r1, #1

  return HAL_OK;
9000adc8:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000adca:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
9000adce:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
9000add2:	bc70      	pop	{r4, r5, r6}
9000add4:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000add6:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000add8:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000adda:	d129      	bne.n	9000ae30 <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000addc:	69e5      	ldr	r5, [r4, #28]
9000adde:	491a      	ldr	r1, [pc, #104]	; (9000ae48 <HAL_DMA2D_ConfigLayer+0xdc>)
9000ade0:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
9000ade2:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000ade4:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ade6:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
9000adea:	4311      	orrs	r1, r2
9000adec:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000adee:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000adf0:	e7e8      	b.n	9000adc4 <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000adf2:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000adf4:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
9000adf8:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000adfa:	b961      	cbnz	r1, 9000ae16 <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000adfc:	6819      	ldr	r1, [r3, #0]
9000adfe:	4a11      	ldr	r2, [pc, #68]	; (9000ae44 <HAL_DMA2D_ConfigLayer+0xd8>)
9000ae00:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000ae02:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ae04:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000ae06:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000ae08:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ae0c:	4322      	orrs	r2, r4
9000ae0e:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000ae10:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000ae12:	6288      	str	r0, [r1, #40]	; 0x28
9000ae14:	e7d6      	b.n	9000adc4 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ae16:	6819      	ldr	r1, [r3, #0]
9000ae18:	4a0a      	ldr	r2, [pc, #40]	; (9000ae44 <HAL_DMA2D_ConfigLayer+0xd8>)
9000ae1a:	69cd      	ldr	r5, [r1, #28]
9000ae1c:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000ae1e:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ae20:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000ae22:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000ae24:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ae28:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000ae2a:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000ae2c:	620c      	str	r4, [r1, #32]
9000ae2e:	e7c9      	b.n	9000adc4 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ae30:	69e5      	ldr	r5, [r4, #28]
9000ae32:	4904      	ldr	r1, [pc, #16]	; (9000ae44 <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000ae34:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ae36:	4029      	ands	r1, r5
9000ae38:	4311      	orrs	r1, r2
9000ae3a:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000ae3c:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000ae3e:	e7c1      	b.n	9000adc4 <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
9000ae40:	2002      	movs	r0, #2
}
9000ae42:	4770      	bx	lr
9000ae44:	00ccfff0 	.word	0x00ccfff0
9000ae48:	00c0fff0 	.word	0x00c0fff0

9000ae4c <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
9000ae4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000ae50:	680c      	ldr	r4, [r1, #0]
{
9000ae52:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000ae54:	2c00      	cmp	r4, #0
9000ae56:	f000 80a7 	beq.w	9000afa8 <HAL_GPIO_Init+0x15c>
9000ae5a:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000ae5e:	4f8a      	ldr	r7, [pc, #552]	; (9000b088 <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
9000ae60:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000ae62:	2201      	movs	r2, #1
9000ae64:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
9000ae66:	ea12 0e04 	ands.w	lr, r2, r4
9000ae6a:	f000 8096 	beq.w	9000af9a <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000ae6e:	684d      	ldr	r5, [r1, #4]
9000ae70:	f005 0903 	and.w	r9, r5, #3
9000ae74:	f109 36ff 	add.w	r6, r9, #4294967295
9000ae78:	2e01      	cmp	r6, #1
9000ae7a:	f240 8098 	bls.w	9000afae <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
9000ae7e:	f1b9 0f03 	cmp.w	r9, #3
9000ae82:	f040 80d2 	bne.w	9000b02a <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000ae86:	fa09 f20c 	lsl.w	r2, r9, ip
9000ae8a:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
9000ae8e:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000ae90:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
9000ae94:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000ae98:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
9000ae9c:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000ae9e:	d07c      	beq.n	9000af9a <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000aea0:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
9000aea4:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000aea8:	f003 0903 	and.w	r9, r3, #3
9000aeac:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000aeae:	f042 0202 	orr.w	r2, r2, #2
9000aeb2:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000aeb6:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000aeba:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
9000aebe:	f508 6880 	add.w	r8, r8, #1024	; 0x400
9000aec2:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000aec6:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000aeca:	f002 0202 	and.w	r2, r2, #2
9000aece:	9201      	str	r2, [sp, #4]
9000aed0:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
9000aed2:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000aed6:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000aeda:	4e6c      	ldr	r6, [pc, #432]	; (9000b08c <HAL_GPIO_Init+0x240>)
9000aedc:	42b0      	cmp	r0, r6
9000aede:	d028      	beq.n	9000af32 <HAL_GPIO_Init+0xe6>
9000aee0:	f506 6680 	add.w	r6, r6, #1024	; 0x400
9000aee4:	42b0      	cmp	r0, r6
9000aee6:	f000 80ac 	beq.w	9000b042 <HAL_GPIO_Init+0x1f6>
9000aeea:	4e69      	ldr	r6, [pc, #420]	; (9000b090 <HAL_GPIO_Init+0x244>)
9000aeec:	42b0      	cmp	r0, r6
9000aeee:	f000 80ad 	beq.w	9000b04c <HAL_GPIO_Init+0x200>
9000aef2:	4e68      	ldr	r6, [pc, #416]	; (9000b094 <HAL_GPIO_Init+0x248>)
9000aef4:	42b0      	cmp	r0, r6
9000aef6:	f000 809f 	beq.w	9000b038 <HAL_GPIO_Init+0x1ec>
9000aefa:	4e67      	ldr	r6, [pc, #412]	; (9000b098 <HAL_GPIO_Init+0x24c>)
9000aefc:	42b0      	cmp	r0, r6
9000aefe:	f000 80af 	beq.w	9000b060 <HAL_GPIO_Init+0x214>
9000af02:	4e66      	ldr	r6, [pc, #408]	; (9000b09c <HAL_GPIO_Init+0x250>)
9000af04:	42b0      	cmp	r0, r6
9000af06:	f000 80b0 	beq.w	9000b06a <HAL_GPIO_Init+0x21e>
9000af0a:	4e65      	ldr	r6, [pc, #404]	; (9000b0a0 <HAL_GPIO_Init+0x254>)
9000af0c:	42b0      	cmp	r0, r6
9000af0e:	f000 80a2 	beq.w	9000b056 <HAL_GPIO_Init+0x20a>
9000af12:	4e64      	ldr	r6, [pc, #400]	; (9000b0a4 <HAL_GPIO_Init+0x258>)
9000af14:	42b0      	cmp	r0, r6
9000af16:	f000 80ad 	beq.w	9000b074 <HAL_GPIO_Init+0x228>
9000af1a:	4e63      	ldr	r6, [pc, #396]	; (9000b0a8 <HAL_GPIO_Init+0x25c>)
9000af1c:	42b0      	cmp	r0, r6
9000af1e:	f000 80ae 	beq.w	9000b07e <HAL_GPIO_Init+0x232>
9000af22:	4e62      	ldr	r6, [pc, #392]	; (9000b0ac <HAL_GPIO_Init+0x260>)
9000af24:	42b0      	cmp	r0, r6
9000af26:	bf0c      	ite	eq
9000af28:	2609      	moveq	r6, #9
9000af2a:	260a      	movne	r6, #10
9000af2c:	fa06 f609 	lsl.w	r6, r6, r9
9000af30:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
9000af32:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
9000af36:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000af3a:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
9000af3e:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
9000af42:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
9000af44:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000af48:	bf0c      	ite	eq
9000af4a:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000af4c:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000af50:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
9000af54:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
9000af58:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
9000af5c:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000af60:	bf0c      	ite	eq
9000af62:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000af64:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
9000af68:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
9000af6c:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
9000af70:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
9000af74:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000af78:	bf0c      	ite	eq
9000af7a:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000af7c:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000af80:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000af82:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
9000af86:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
9000af8a:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
9000af8e:	bf54      	ite	pl
9000af90:	4032      	andpl	r2, r6
          temp |= iocurrent;
9000af92:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
9000af96:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
9000af9a:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000af9c:	f10c 0c02 	add.w	ip, ip, #2
9000afa0:	fa34 f203 	lsrs.w	r2, r4, r3
9000afa4:	f47f af5d 	bne.w	9000ae62 <HAL_GPIO_Init+0x16>
  }
}
9000afa8:	b003      	add	sp, #12
9000afaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000afae:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
9000afb2:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000afb4:	fa08 f80c 	lsl.w	r8, r8, ip
9000afb8:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000afbc:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000afbe:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000afc2:	fa06 f60c 	lsl.w	r6, r6, ip
9000afc6:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
9000afca:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000afcc:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
9000afd0:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000afd4:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
9000afd6:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000afda:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
9000afdc:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
9000afde:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000afe0:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000afe4:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000afe6:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000afea:	fa06 f60c 	lsl.w	r6, r6, ip
9000afee:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
9000aff2:	fa09 f20c 	lsl.w	r2, r9, ip
9000aff6:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000aff8:	f47f af49 	bne.w	9000ae8e <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
9000affc:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000b000:	f003 0b07 	and.w	fp, r3, #7
9000b004:	260f      	movs	r6, #15
9000b006:	eb00 0989 	add.w	r9, r0, r9, lsl #2
9000b00a:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
9000b00e:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000b012:	fa06 f60b 	lsl.w	r6, r6, fp
9000b016:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000b01a:	690e      	ldr	r6, [r1, #16]
9000b01c:	fa06 f60b 	lsl.w	r6, r6, fp
9000b020:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
9000b024:	f8c9 6020 	str.w	r6, [r9, #32]
9000b028:	e731      	b.n	9000ae8e <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b02a:	f04f 0803 	mov.w	r8, #3
9000b02e:	fa08 f80c 	lsl.w	r8, r8, ip
9000b032:	ea6f 0808 	mvn.w	r8, r8
9000b036:	e7d2      	b.n	9000afde <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000b038:	2603      	movs	r6, #3
9000b03a:	fa06 f609 	lsl.w	r6, r6, r9
9000b03e:	4332      	orrs	r2, r6
9000b040:	e777      	b.n	9000af32 <HAL_GPIO_Init+0xe6>
9000b042:	2601      	movs	r6, #1
9000b044:	fa06 f609 	lsl.w	r6, r6, r9
9000b048:	4332      	orrs	r2, r6
9000b04a:	e772      	b.n	9000af32 <HAL_GPIO_Init+0xe6>
9000b04c:	2602      	movs	r6, #2
9000b04e:	fa06 f609 	lsl.w	r6, r6, r9
9000b052:	4332      	orrs	r2, r6
9000b054:	e76d      	b.n	9000af32 <HAL_GPIO_Init+0xe6>
9000b056:	2606      	movs	r6, #6
9000b058:	fa06 f609 	lsl.w	r6, r6, r9
9000b05c:	4332      	orrs	r2, r6
9000b05e:	e768      	b.n	9000af32 <HAL_GPIO_Init+0xe6>
9000b060:	2604      	movs	r6, #4
9000b062:	fa06 f609 	lsl.w	r6, r6, r9
9000b066:	4332      	orrs	r2, r6
9000b068:	e763      	b.n	9000af32 <HAL_GPIO_Init+0xe6>
9000b06a:	2605      	movs	r6, #5
9000b06c:	fa06 f609 	lsl.w	r6, r6, r9
9000b070:	4332      	orrs	r2, r6
9000b072:	e75e      	b.n	9000af32 <HAL_GPIO_Init+0xe6>
9000b074:	2607      	movs	r6, #7
9000b076:	fa06 f609 	lsl.w	r6, r6, r9
9000b07a:	4332      	orrs	r2, r6
9000b07c:	e759      	b.n	9000af32 <HAL_GPIO_Init+0xe6>
9000b07e:	2608      	movs	r6, #8
9000b080:	fa06 f609 	lsl.w	r6, r6, r9
9000b084:	4332      	orrs	r2, r6
9000b086:	e754      	b.n	9000af32 <HAL_GPIO_Init+0xe6>
9000b088:	58024400 	.word	0x58024400
9000b08c:	58020000 	.word	0x58020000
9000b090:	58020800 	.word	0x58020800
9000b094:	58020c00 	.word	0x58020c00
9000b098:	58021000 	.word	0x58021000
9000b09c:	58021400 	.word	0x58021400
9000b0a0:	58021800 	.word	0x58021800
9000b0a4:	58021c00 	.word	0x58021c00
9000b0a8:	58022000 	.word	0x58022000
9000b0ac:	58022400 	.word	0x58022400

9000b0b0 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
9000b0b0:	2900      	cmp	r1, #0
9000b0b2:	f000 80a4 	beq.w	9000b1fe <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
9000b0b6:	2300      	movs	r3, #0
{
9000b0b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000b0bc:	f8df 9168 	ldr.w	r9, [pc, #360]	; 9000b228 <HAL_GPIO_DeInit+0x178>
9000b0c0:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000b0c2:	f8df 8168 	ldr.w	r8, [pc, #360]	; 9000b22c <HAL_GPIO_DeInit+0x17c>
9000b0c6:	f8df a168 	ldr.w	sl, [pc, #360]	; 9000b230 <HAL_GPIO_DeInit+0x180>
9000b0ca:	f8df b168 	ldr.w	fp, [pc, #360]	; 9000b234 <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
9000b0ce:	f04f 0e01 	mov.w	lr, #1
9000b0d2:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
9000b0d6:	ea12 0c01 	ands.w	ip, r2, r1
9000b0da:	d06b      	beq.n	9000b1b4 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000b0dc:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000b0e0:	f003 0403 	and.w	r4, r3, #3
9000b0e4:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000b0e6:	4540      	cmp	r0, r8
9000b0e8:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000b0ea:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9000b0ee:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000b0f0:	fa06 f604 	lsl.w	r6, r6, r4
9000b0f4:	ea07 0706 	and.w	r7, r7, r6
9000b0f8:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000b0fa:	d01f      	beq.n	9000b13c <HAL_GPIO_DeInit+0x8c>
9000b0fc:	4550      	cmp	r0, sl
9000b0fe:	d01a      	beq.n	9000b136 <HAL_GPIO_DeInit+0x86>
9000b100:	4558      	cmp	r0, fp
9000b102:	d05e      	beq.n	9000b1c2 <HAL_GPIO_DeInit+0x112>
9000b104:	4f43      	ldr	r7, [pc, #268]	; (9000b214 <HAL_GPIO_DeInit+0x164>)
9000b106:	42b8      	cmp	r0, r7
9000b108:	d065      	beq.n	9000b1d6 <HAL_GPIO_DeInit+0x126>
9000b10a:	4f43      	ldr	r7, [pc, #268]	; (9000b218 <HAL_GPIO_DeInit+0x168>)
9000b10c:	42b8      	cmp	r0, r7
9000b10e:	d067      	beq.n	9000b1e0 <HAL_GPIO_DeInit+0x130>
9000b110:	4f42      	ldr	r7, [pc, #264]	; (9000b21c <HAL_GPIO_DeInit+0x16c>)
9000b112:	42b8      	cmp	r0, r7
9000b114:	d05a      	beq.n	9000b1cc <HAL_GPIO_DeInit+0x11c>
9000b116:	4f42      	ldr	r7, [pc, #264]	; (9000b220 <HAL_GPIO_DeInit+0x170>)
9000b118:	42b8      	cmp	r0, r7
9000b11a:	d06b      	beq.n	9000b1f4 <HAL_GPIO_DeInit+0x144>
9000b11c:	4f41      	ldr	r7, [pc, #260]	; (9000b224 <HAL_GPIO_DeInit+0x174>)
9000b11e:	42b8      	cmp	r0, r7
9000b120:	d06e      	beq.n	9000b200 <HAL_GPIO_DeInit+0x150>
9000b122:	f8df e114 	ldr.w	lr, [pc, #276]	; 9000b238 <HAL_GPIO_DeInit+0x188>
9000b126:	4570      	cmp	r0, lr
9000b128:	d05f      	beq.n	9000b1ea <HAL_GPIO_DeInit+0x13a>
9000b12a:	f8df e110 	ldr.w	lr, [pc, #272]	; 9000b23c <HAL_GPIO_DeInit+0x18c>
9000b12e:	4570      	cmp	r0, lr
9000b130:	d06b      	beq.n	9000b20a <HAL_GPIO_DeInit+0x15a>
9000b132:	f04f 0e0a 	mov.w	lr, #10
9000b136:	fa0e f404 	lsl.w	r4, lr, r4
9000b13a:	e000      	b.n	9000b13e <HAL_GPIO_DeInit+0x8e>
9000b13c:	2400      	movs	r4, #0
9000b13e:	9f01      	ldr	r7, [sp, #4]
9000b140:	42a7      	cmp	r7, r4
9000b142:	d119      	bne.n	9000b178 <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000b144:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
9000b148:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
9000b14c:	ea27 070c 	bic.w	r7, r7, ip
9000b150:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
9000b154:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
9000b158:	ea27 070c 	bic.w	r7, r7, ip
9000b15c:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
9000b160:	6867      	ldr	r7, [r4, #4]
9000b162:	ea27 070c 	bic.w	r7, r7, ip
9000b166:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
9000b168:	6827      	ldr	r7, [r4, #0]
9000b16a:	ea27 070c 	bic.w	r7, r7, ip
9000b16e:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000b170:	68ac      	ldr	r4, [r5, #8]
9000b172:	ea24 0406 	bic.w	r4, r4, r6
9000b176:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b178:	005d      	lsls	r5, r3, #1
9000b17a:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b17c:	f003 0607 	and.w	r6, r3, #7
9000b180:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b182:	40ac      	lsls	r4, r5
9000b184:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b186:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b188:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b18a:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b18c:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b18e:	08dd      	lsrs	r5, r3, #3
9000b190:	eb00 0585 	add.w	r5, r0, r5, lsl #2
9000b194:	6a2e      	ldr	r6, [r5, #32]
9000b196:	ea26 0607 	bic.w	r6, r6, r7
9000b19a:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000b19c:	68c5      	ldr	r5, [r0, #12]
9000b19e:	ea25 0504 	bic.w	r5, r5, r4
9000b1a2:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000b1a4:	6845      	ldr	r5, [r0, #4]
9000b1a6:	ea25 0202 	bic.w	r2, r5, r2
9000b1aa:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b1ac:	6882      	ldr	r2, [r0, #8]
9000b1ae:	ea22 0204 	bic.w	r2, r2, r4
9000b1b2:	6082      	str	r2, [r0, #8]
    }

    position++;
9000b1b4:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
9000b1b6:	fa31 f203 	lsrs.w	r2, r1, r3
9000b1ba:	d188      	bne.n	9000b0ce <HAL_GPIO_DeInit+0x1e>
  }
}
9000b1bc:	b003      	add	sp, #12
9000b1be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000b1c2:	f04f 0e02 	mov.w	lr, #2
9000b1c6:	fa0e f404 	lsl.w	r4, lr, r4
9000b1ca:	e7b8      	b.n	9000b13e <HAL_GPIO_DeInit+0x8e>
9000b1cc:	f04f 0e05 	mov.w	lr, #5
9000b1d0:	fa0e f404 	lsl.w	r4, lr, r4
9000b1d4:	e7b3      	b.n	9000b13e <HAL_GPIO_DeInit+0x8e>
9000b1d6:	f04f 0e03 	mov.w	lr, #3
9000b1da:	fa0e f404 	lsl.w	r4, lr, r4
9000b1de:	e7ae      	b.n	9000b13e <HAL_GPIO_DeInit+0x8e>
9000b1e0:	f04f 0e04 	mov.w	lr, #4
9000b1e4:	fa0e f404 	lsl.w	r4, lr, r4
9000b1e8:	e7a9      	b.n	9000b13e <HAL_GPIO_DeInit+0x8e>
9000b1ea:	f04f 0e08 	mov.w	lr, #8
9000b1ee:	fa0e f404 	lsl.w	r4, lr, r4
9000b1f2:	e7a4      	b.n	9000b13e <HAL_GPIO_DeInit+0x8e>
9000b1f4:	f04f 0e06 	mov.w	lr, #6
9000b1f8:	fa0e f404 	lsl.w	r4, lr, r4
9000b1fc:	e79f      	b.n	9000b13e <HAL_GPIO_DeInit+0x8e>
9000b1fe:	4770      	bx	lr
9000b200:	f04f 0e07 	mov.w	lr, #7
9000b204:	fa0e f404 	lsl.w	r4, lr, r4
9000b208:	e799      	b.n	9000b13e <HAL_GPIO_DeInit+0x8e>
9000b20a:	f04f 0e09 	mov.w	lr, #9
9000b20e:	fa0e f404 	lsl.w	r4, lr, r4
9000b212:	e794      	b.n	9000b13e <HAL_GPIO_DeInit+0x8e>
9000b214:	58020c00 	.word	0x58020c00
9000b218:	58021000 	.word	0x58021000
9000b21c:	58021400 	.word	0x58021400
9000b220:	58021800 	.word	0x58021800
9000b224:	58021c00 	.word	0x58021c00
9000b228:	58000400 	.word	0x58000400
9000b22c:	58020000 	.word	0x58020000
9000b230:	58020400 	.word	0x58020400
9000b234:	58020800 	.word	0x58020800
9000b238:	58022000 	.word	0x58022000
9000b23c:	58022400 	.word	0x58022400

9000b240 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
9000b240:	6903      	ldr	r3, [r0, #16]
9000b242:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
9000b244:	bf14      	ite	ne
9000b246:	2001      	movne	r0, #1
9000b248:	2000      	moveq	r0, #0
9000b24a:	4770      	bx	lr

9000b24c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
9000b24c:	b902      	cbnz	r2, 9000b250 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
9000b24e:	0409      	lsls	r1, r1, #16
9000b250:	6181      	str	r1, [r0, #24]
  }
}
9000b252:	4770      	bx	lr

9000b254 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
9000b254:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
9000b256:	ea01 0203 	and.w	r2, r1, r3
9000b25a:	ea21 0103 	bic.w	r1, r1, r3
9000b25e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000b262:	6181      	str	r1, [r0, #24]
}
9000b264:	4770      	bx	lr
9000b266:	bf00      	nop

9000b268 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
9000b268:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000b26c:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000b26e:	f04f 0820 	mov.w	r8, #32
{
9000b272:	4605      	mov	r5, r0
9000b274:	460e      	mov	r6, r1
9000b276:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000b278:	6998      	ldr	r0, [r3, #24]
9000b27a:	f010 0902 	ands.w	r9, r0, #2
9000b27e:	f040 809e 	bne.w	9000b3be <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
9000b282:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000b284:	f014 0410 	ands.w	r4, r4, #16
9000b288:	d068      	beq.n	9000b35c <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b28a:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
9000b28c:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
9000b28e:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b290:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b292:	1c71      	adds	r1, r6, #1
9000b294:	699a      	ldr	r2, [r3, #24]
9000b296:	d163      	bne.n	9000b360 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
9000b298:	0690      	lsls	r0, r2, #26
9000b29a:	f100 8093 	bmi.w	9000b3c4 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000b29e:	f1ba 0f00 	cmp.w	sl, #0
9000b2a2:	d104      	bne.n	9000b2ae <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000b2a4:	699c      	ldr	r4, [r3, #24]
9000b2a6:	06a1      	lsls	r1, r4, #26
9000b2a8:	d5fc      	bpl.n	9000b2a4 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b2aa:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
9000b2ae:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
9000b2b2:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
9000b2b4:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000b2b6:	05d0      	lsls	r0, r2, #23
9000b2b8:	d530      	bpl.n	9000b31c <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b2ba:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b2be:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000b2c0:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b2c4:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b2c6:	d504      	bpl.n	9000b2d2 <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b2c8:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000b2cc:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b2d0:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b2d2:	0591      	lsls	r1, r2, #22
9000b2d4:	d504      	bpl.n	9000b2e0 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b2d6:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000b2da:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b2de:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000b2e0:	699a      	ldr	r2, [r3, #24]
9000b2e2:	0790      	lsls	r0, r2, #30
9000b2e4:	d501      	bpl.n	9000b2ea <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
9000b2e6:	2200      	movs	r2, #0
9000b2e8:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000b2ea:	699a      	ldr	r2, [r3, #24]
9000b2ec:	07d1      	lsls	r1, r2, #31
9000b2ee:	d403      	bmi.n	9000b2f8 <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000b2f0:	699a      	ldr	r2, [r3, #24]
9000b2f2:	f042 0201 	orr.w	r2, r2, #1
9000b2f6:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
9000b2f8:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b2fa:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000b2fc:	4834      	ldr	r0, [pc, #208]	; (9000b3d0 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
9000b2fe:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
9000b300:	4002      	ands	r2, r0
      return HAL_ERROR;
9000b302:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000b304:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000b306:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000b308:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
9000b30c:	4323      	orrs	r3, r4
9000b30e:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000b310:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b314:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
9000b318:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b31c:	0550      	lsls	r0, r2, #21
9000b31e:	d4d3      	bmi.n	9000b2c8 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b320:	0592      	lsls	r2, r2, #22
9000b322:	d4d8      	bmi.n	9000b2d6 <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
9000b324:	2900      	cmp	r1, #0
9000b326:	d1db      	bne.n	9000b2e0 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
9000b328:	1c72      	adds	r2, r6, #1
9000b32a:	d0a5      	beq.n	9000b278 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b32c:	f7ff fb04 	bl	9000a938 <HAL_GetTick>
9000b330:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000b332:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b334:	42b0      	cmp	r0, r6
9000b336:	d801      	bhi.n	9000b33c <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
9000b338:	2e00      	cmp	r6, #0
9000b33a:	d19d      	bne.n	9000b278 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000b33c:	699a      	ldr	r2, [r3, #24]
9000b33e:	f012 0202 	ands.w	r2, r2, #2
9000b342:	d199      	bne.n	9000b278 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b344:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b346:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
9000b348:	2001      	movs	r0, #1
9000b34a:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b34e:	430b      	orrs	r3, r1
9000b350:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b352:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b356:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
9000b35a:	e7dd      	b.n	9000b318 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
9000b35c:	4621      	mov	r1, r4
9000b35e:	e7a9      	b.n	9000b2b4 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b360:	0692      	lsls	r2, r2, #26
9000b362:	d42f      	bmi.n	9000b3c4 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000b364:	f1ba 0f00 	cmp.w	sl, #0
9000b368:	d1a1      	bne.n	9000b2ae <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b36a:	f7ff fae5 	bl	9000a938 <HAL_GetTick>
9000b36e:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b370:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b372:	4286      	cmp	r6, r0
9000b374:	d301      	bcc.n	9000b37a <I2C_WaitOnTXISFlagUntilTimeout+0x112>
9000b376:	2e00      	cmp	r6, #0
9000b378:	d18b      	bne.n	9000b292 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b37a:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000b37c:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b380:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000b382:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b384:	0409      	lsls	r1, r1, #16
9000b386:	d50b      	bpl.n	9000b3a0 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
9000b388:	0441      	lsls	r1, r0, #17
9000b38a:	d409      	bmi.n	9000b3a0 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
9000b38c:	2a20      	cmp	r2, #32
9000b38e:	d007      	beq.n	9000b3a0 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000b390:	685a      	ldr	r2, [r3, #4]
9000b392:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000b396:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000b398:	f7ff face 	bl	9000a938 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b39c:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
9000b39e:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b3a0:	699a      	ldr	r2, [r3, #24]
9000b3a2:	0690      	lsls	r0, r2, #26
9000b3a4:	f53f af75 	bmi.w	9000b292 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b3a8:	f7ff fac6 	bl	9000a938 <HAL_GetTick>
9000b3ac:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b3ae:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b3b0:	2819      	cmp	r0, #25
9000b3b2:	d9f5      	bls.n	9000b3a0 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000b3b4:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
9000b3b8:	f04f 0a01 	mov.w	sl, #1
9000b3bc:	e769      	b.n	9000b292 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
9000b3be:	2000      	movs	r0, #0
}
9000b3c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
9000b3c4:	f1ba 0f00 	cmp.w	sl, #0
9000b3c8:	f43f af6f 	beq.w	9000b2aa <I2C_WaitOnTXISFlagUntilTimeout+0x42>
9000b3cc:	e76f      	b.n	9000b2ae <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000b3ce:	bf00      	nop
9000b3d0:	fe00e800 	.word	0xfe00e800

9000b3d4 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
9000b3d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000b3d8:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b3da:	6802      	ldr	r2, [r0, #0]
{
9000b3dc:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b3de:	6991      	ldr	r1, [r2, #24]
9000b3e0:	068c      	lsls	r4, r1, #26
9000b3e2:	d469      	bmi.n	9000b4b8 <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
9000b3e4:	4606      	mov	r6, r0
9000b3e6:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b3e8:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
9000b3ec:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000b3ee:	f014 0410 	ands.w	r4, r4, #16
9000b3f2:	d064      	beq.n	9000b4be <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
9000b3f4:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b3f6:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
9000b3f8:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b3fa:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
9000b3fe:	46aa      	mov	sl, r5
9000b400:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b402:	699a      	ldr	r2, [r3, #24]
9000b404:	d15d      	bne.n	9000b4c2 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
9000b406:	0690      	lsls	r0, r2, #26
9000b408:	f100 8083 	bmi.w	9000b512 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
9000b40c:	f1ba 0f00 	cmp.w	sl, #0
9000b410:	d104      	bne.n	9000b41c <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
9000b412:	699c      	ldr	r4, [r3, #24]
9000b414:	06a1      	lsls	r1, r4, #26
9000b416:	d5fc      	bpl.n	9000b412 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b418:	2220      	movs	r2, #32
9000b41a:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
9000b41c:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
9000b420:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000b422:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000b424:	05d0      	lsls	r0, r2, #23
9000b426:	d530      	bpl.n	9000b48a <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b428:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b42c:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000b42e:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b432:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b434:	d504      	bpl.n	9000b440 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b436:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000b43a:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b43e:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b440:	0591      	lsls	r1, r2, #22
9000b442:	d504      	bpl.n	9000b44e <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b444:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000b448:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b44c:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000b44e:	699a      	ldr	r2, [r3, #24]
9000b450:	0795      	lsls	r5, r2, #30
9000b452:	d501      	bpl.n	9000b458 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
9000b454:	2200      	movs	r2, #0
9000b456:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000b458:	699a      	ldr	r2, [r3, #24]
9000b45a:	07d0      	lsls	r0, r2, #31
9000b45c:	d403      	bmi.n	9000b466 <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000b45e:	699a      	ldr	r2, [r3, #24]
9000b460:	f042 0201 	orr.w	r2, r2, #1
9000b464:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
9000b466:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b468:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000b46a:	4837      	ldr	r0, [pc, #220]	; (9000b548 <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
9000b46c:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
9000b46e:	4002      	ands	r2, r0
      return HAL_ERROR;
9000b470:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000b472:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000b474:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
9000b476:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
9000b47a:	4323      	orrs	r3, r4
9000b47c:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000b47e:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b482:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
9000b486:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b48a:	0550      	lsls	r0, r2, #21
9000b48c:	d4d3      	bmi.n	9000b436 <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b48e:	0592      	lsls	r2, r2, #22
9000b490:	d4d8      	bmi.n	9000b444 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
9000b492:	2900      	cmp	r1, #0
9000b494:	d1db      	bne.n	9000b44e <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b496:	f7ff fa4f 	bl	9000a938 <HAL_GetTick>
9000b49a:	eba0 0008 	sub.w	r0, r0, r8
9000b49e:	42b8      	cmp	r0, r7
9000b4a0:	d801      	bhi.n	9000b4a6 <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
9000b4a2:	2f00      	cmp	r7, #0
9000b4a4:	d132      	bne.n	9000b50c <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000b4a6:	6832      	ldr	r2, [r6, #0]
9000b4a8:	6991      	ldr	r1, [r2, #24]
9000b4aa:	4613      	mov	r3, r2
9000b4ac:	f011 0120 	ands.w	r1, r1, #32
9000b4b0:	d034      	beq.n	9000b51c <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b4b2:	6991      	ldr	r1, [r2, #24]
9000b4b4:	0689      	lsls	r1, r1, #26
9000b4b6:	d599      	bpl.n	9000b3ec <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
9000b4b8:	2000      	movs	r0, #0
}
9000b4ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
9000b4be:	4621      	mov	r1, r4
9000b4c0:	e7af      	b.n	9000b422 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b4c2:	0692      	lsls	r2, r2, #26
9000b4c4:	d425      	bmi.n	9000b512 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
9000b4c6:	f1ba 0f00 	cmp.w	sl, #0
9000b4ca:	d1a7      	bne.n	9000b41c <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b4cc:	f7ff fa34 	bl	9000a938 <HAL_GetTick>
9000b4d0:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b4d2:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b4d4:	4287      	cmp	r7, r0
9000b4d6:	d301      	bcc.n	9000b4dc <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
9000b4d8:	2f00      	cmp	r7, #0
9000b4da:	d191      	bne.n	9000b400 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b4dc:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000b4de:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b4e2:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000b4e4:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b4e6:	0409      	lsls	r1, r1, #16
9000b4e8:	d503      	bpl.n	9000b4f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
9000b4ea:	0441      	lsls	r1, r0, #17
9000b4ec:	d401      	bmi.n	9000b4f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
9000b4ee:	2a20      	cmp	r2, #32
9000b4f0:	d121      	bne.n	9000b536 <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b4f2:	699a      	ldr	r2, [r3, #24]
9000b4f4:	0690      	lsls	r0, r2, #26
9000b4f6:	d483      	bmi.n	9000b400 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b4f8:	f7ff fa1e 	bl	9000a938 <HAL_GetTick>
9000b4fc:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b4fe:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b500:	2819      	cmp	r0, #25
9000b502:	d9f6      	bls.n	9000b4f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000b504:	2520      	movs	r5, #32
              status = HAL_ERROR;
9000b506:	f04f 0a01 	mov.w	sl, #1
9000b50a:	e779      	b.n	9000b400 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000b50c:	6833      	ldr	r3, [r6, #0]
9000b50e:	461a      	mov	r2, r3
9000b510:	e7cf      	b.n	9000b4b2 <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
9000b512:	f1ba 0f00 	cmp.w	sl, #0
9000b516:	f43f af7f 	beq.w	9000b418 <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
9000b51a:	e77f      	b.n	9000b41c <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b51c:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b51e:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
9000b520:	2001      	movs	r0, #1
9000b522:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b526:	4313      	orrs	r3, r2
9000b528:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b52a:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b52e:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
9000b532:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000b536:	685a      	ldr	r2, [r3, #4]
9000b538:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000b53c:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000b53e:	f7ff f9fb 	bl	9000a938 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b542:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
9000b544:	4604      	mov	r4, r0
9000b546:	e7d4      	b.n	9000b4f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
9000b548:	fe00e800 	.word	0xfe00e800

9000b54c <HAL_I2C_MspInit>:
}
9000b54c:	4770      	bx	lr
9000b54e:	bf00      	nop

9000b550 <HAL_I2C_Init>:
  if (hi2c == NULL)
9000b550:	2800      	cmp	r0, #0
9000b552:	d04e      	beq.n	9000b5f2 <HAL_I2C_Init+0xa2>
{
9000b554:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
9000b556:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
9000b55a:	4604      	mov	r4, r0
9000b55c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000b560:	2b00      	cmp	r3, #0
9000b562:	d041      	beq.n	9000b5e8 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
9000b564:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b566:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b568:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b56a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
9000b56e:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b570:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b574:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
9000b576:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b57a:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
9000b57c:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b57e:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000b580:	689a      	ldr	r2, [r3, #8]
9000b582:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
9000b586:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000b588:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b58a:	d029      	beq.n	9000b5e0 <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000b58c:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b590:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000b592:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b594:	d102      	bne.n	9000b59c <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
9000b596:	f44f 6200 	mov.w	r2, #2048	; 0x800
9000b59a:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b59c:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
9000b59e:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b5a2:	4915      	ldr	r1, [pc, #84]	; (9000b5f8 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b5a4:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b5a6:	4301      	orrs	r1, r0
9000b5a8:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9000b5aa:	68d9      	ldr	r1, [r3, #12]
9000b5ac:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
9000b5b0:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
9000b5b2:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b5b6:	4302      	orrs	r2, r0
9000b5b8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b5bc:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b5c0:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b5c2:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b5c4:	4301      	orrs	r1, r0
  return HAL_OK;
9000b5c6:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b5c8:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
9000b5ca:	6819      	ldr	r1, [r3, #0]
9000b5cc:	f041 0101 	orr.w	r1, r1, #1
9000b5d0:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b5d2:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
9000b5d4:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000b5d8:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000b5da:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000b5de:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000b5e0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000b5e4:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b5e6:	e7d9      	b.n	9000b59c <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
9000b5e8:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
9000b5ec:	f7ff ffae 	bl	9000b54c <HAL_I2C_MspInit>
9000b5f0:	e7b8      	b.n	9000b564 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
9000b5f2:	2001      	movs	r0, #1
}
9000b5f4:	4770      	bx	lr
9000b5f6:	bf00      	nop
9000b5f8:	02008000 	.word	0x02008000

9000b5fc <HAL_I2C_MspDeInit>:
9000b5fc:	4770      	bx	lr
9000b5fe:	bf00      	nop

9000b600 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9000b600:	b1b0      	cbz	r0, 9000b630 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000b602:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b604:	2324      	movs	r3, #36	; 0x24
{
9000b606:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b608:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
9000b60c:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000b60e:	6813      	ldr	r3, [r2, #0]
9000b610:	f023 0301 	bic.w	r3, r3, #1
9000b614:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000b616:	f7ff fff1 	bl	9000b5fc <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b61a:	2300      	movs	r3, #0
9000b61c:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
9000b61e:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
9000b620:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
9000b624:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000b628:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000b62a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
9000b62e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
9000b630:	2001      	movs	r0, #1
}
9000b632:	4770      	bx	lr

9000b634 <HAL_I2C_Mem_Write>:
{
9000b634:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000b638:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b63a:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000b63e:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b642:	2b20      	cmp	r3, #32
{
9000b644:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b646:	d132      	bne.n	9000b6ae <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
9000b648:	9b08      	ldr	r3, [sp, #32]
9000b64a:	4604      	mov	r4, r0
9000b64c:	b34b      	cbz	r3, 9000b6a2 <HAL_I2C_Mem_Write+0x6e>
9000b64e:	f1ba 0f00 	cmp.w	sl, #0
9000b652:	d026      	beq.n	9000b6a2 <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
9000b654:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000b658:	2b01      	cmp	r3, #1
9000b65a:	d028      	beq.n	9000b6ae <HAL_I2C_Mem_Write+0x7a>
9000b65c:	2301      	movs	r3, #1
9000b65e:	460e      	mov	r6, r1
9000b660:	4691      	mov	r9, r2
9000b662:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000b666:	f7ff f967 	bl	9000a938 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b66a:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
9000b66c:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b66e:	699a      	ldr	r2, [r3, #24]
9000b670:	0411      	lsls	r1, r2, #16
9000b672:	d51f      	bpl.n	9000b6b4 <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b674:	f7ff f960 	bl	9000a938 <HAL_GetTick>
9000b678:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b67a:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b67c:	2819      	cmp	r0, #25
9000b67e:	d9f6      	bls.n	9000b66e <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b680:	699a      	ldr	r2, [r3, #24]
9000b682:	0412      	lsls	r2, r2, #16
9000b684:	d5f3      	bpl.n	9000b66e <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b686:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b688:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b68a:	2200      	movs	r2, #0
      return HAL_ERROR;
9000b68c:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b68e:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000b690:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b694:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b696:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b69a:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000b69e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b6a2:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000b6a6:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b6a8:	6463      	str	r3, [r4, #68]	; 0x44
}
9000b6aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
9000b6ae:	2002      	movs	r0, #2
}
9000b6b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
9000b6b4:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000b6b6:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000b6b8:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b6bc:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000b6be:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b6c2:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000b6c4:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b6c6:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b6c8:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000b6cc:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b6ce:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000b6d0:	496d      	ldr	r1, [pc, #436]	; (9000b888 <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
9000b6d2:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b6d6:	685a      	ldr	r2, [r3, #4]
9000b6d8:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b6da:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000b6de:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b6e2:	496a      	ldr	r1, [pc, #424]	; (9000b88c <HAL_I2C_Mem_Write+0x258>)
9000b6e4:	4332      	orrs	r2, r6
9000b6e6:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b6e8:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000b6ea:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b6ec:	4639      	mov	r1, r7
9000b6ee:	f7ff fdbb 	bl	9000b268 <I2C_WaitOnTXISFlagUntilTimeout>
9000b6f2:	2800      	cmp	r0, #0
9000b6f4:	d175      	bne.n	9000b7e2 <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000b6f6:	f1b8 0f01 	cmp.w	r8, #1
9000b6fa:	d00a      	beq.n	9000b712 <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b6fc:	ea4f 2219 	mov.w	r2, r9, lsr #8
9000b700:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b702:	4639      	mov	r1, r7
9000b704:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b706:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b708:	462a      	mov	r2, r5
9000b70a:	f7ff fdad 	bl	9000b268 <I2C_WaitOnTXISFlagUntilTimeout>
9000b70e:	2800      	cmp	r0, #0
9000b710:	d167      	bne.n	9000b7e2 <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000b712:	fa5f f389 	uxtb.w	r3, r9
9000b716:	6822      	ldr	r2, [r4, #0]
9000b718:	6293      	str	r3, [r2, #40]	; 0x28
9000b71a:	1c78      	adds	r0, r7, #1
9000b71c:	d14a      	bne.n	9000b7b4 <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b71e:	6993      	ldr	r3, [r2, #24]
9000b720:	0619      	lsls	r1, r3, #24
9000b722:	d5fc      	bpl.n	9000b71e <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b724:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b726:	b29b      	uxth	r3, r3
9000b728:	2bff      	cmp	r3, #255	; 0xff
9000b72a:	f240 808a 	bls.w	9000b842 <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b72e:	6853      	ldr	r3, [r2, #4]
9000b730:	4957      	ldr	r1, [pc, #348]	; (9000b890 <HAL_I2C_Mem_Write+0x25c>)
9000b732:	400b      	ands	r3, r1
9000b734:	4957      	ldr	r1, [pc, #348]	; (9000b894 <HAL_I2C_Mem_Write+0x260>)
9000b736:	4333      	orrs	r3, r6
9000b738:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000b73a:	23ff      	movs	r3, #255	; 0xff
9000b73c:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b73e:	6051      	str	r1, [r2, #4]
9000b740:	f8df 814c 	ldr.w	r8, [pc, #332]	; 9000b890 <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b744:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000b748:	f8df 9148 	ldr.w	r9, [pc, #328]	; 9000b894 <HAL_I2C_Mem_Write+0x260>
9000b74c:	e004      	b.n	9000b758 <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
9000b74e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b750:	b29b      	uxth	r3, r3
9000b752:	2b00      	cmp	r3, #0
9000b754:	f000 8083 	beq.w	9000b85e <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000b758:	462a      	mov	r2, r5
9000b75a:	4639      	mov	r1, r7
9000b75c:	4620      	mov	r0, r4
9000b75e:	f7ff fd83 	bl	9000b268 <I2C_WaitOnTXISFlagUntilTimeout>
9000b762:	2800      	cmp	r0, #0
9000b764:	d16b      	bne.n	9000b83e <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000b766:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b768:	6821      	ldr	r1, [r4, #0]
9000b76a:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
9000b76e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000b770:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
9000b772:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
9000b774:	3b01      	subs	r3, #1
      hi2c->XferCount--;
9000b776:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
9000b778:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9000b77a:	3a01      	subs	r2, #1
      hi2c->XferSize--;
9000b77c:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
9000b77e:	b292      	uxth	r2, r2
9000b780:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b782:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
9000b784:	b292      	uxth	r2, r2
9000b786:	2a00      	cmp	r2, #0
9000b788:	d0e1      	beq.n	9000b74e <HAL_I2C_Mem_Write+0x11a>
9000b78a:	2b00      	cmp	r3, #0
9000b78c:	d1df      	bne.n	9000b74e <HAL_I2C_Mem_Write+0x11a>
9000b78e:	1c78      	adds	r0, r7, #1
9000b790:	d12c      	bne.n	9000b7ec <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b792:	698b      	ldr	r3, [r1, #24]
9000b794:	061a      	lsls	r2, r3, #24
9000b796:	d5fc      	bpl.n	9000b792 <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b798:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b79a:	b29b      	uxth	r3, r3
9000b79c:	2bff      	cmp	r3, #255	; 0xff
9000b79e:	d940      	bls.n	9000b822 <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b7a0:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b7a2:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b7a6:	ea03 0308 	and.w	r3, r3, r8
9000b7aa:	4333      	orrs	r3, r6
9000b7ac:	ea43 0309 	orr.w	r3, r3, r9
9000b7b0:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000b7b2:	e7cc      	b.n	9000b74e <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b7b4:	6993      	ldr	r3, [r2, #24]
9000b7b6:	061b      	lsls	r3, r3, #24
9000b7b8:	d4b4      	bmi.n	9000b724 <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b7ba:	f7ff f8bd 	bl	9000a938 <HAL_GetTick>
9000b7be:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b7c0:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b7c2:	4287      	cmp	r7, r0
9000b7c4:	d301      	bcc.n	9000b7ca <HAL_I2C_Mem_Write+0x196>
9000b7c6:	2f00      	cmp	r7, #0
9000b7c8:	d1a7      	bne.n	9000b71a <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b7ca:	6993      	ldr	r3, [r2, #24]
9000b7cc:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000b7d0:	d1a3      	bne.n	9000b71a <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b7d2:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b7d4:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b7d6:	430a      	orrs	r2, r1
9000b7d8:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b7da:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b7de:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000b7e2:	2300      	movs	r3, #0
      return HAL_ERROR;
9000b7e4:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000b7e6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
9000b7ea:	e75e      	b.n	9000b6aa <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b7ec:	698b      	ldr	r3, [r1, #24]
9000b7ee:	061b      	lsls	r3, r3, #24
9000b7f0:	d4d2      	bmi.n	9000b798 <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b7f2:	f7ff f8a1 	bl	9000a938 <HAL_GetTick>
9000b7f6:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b7f8:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b7fa:	4287      	cmp	r7, r0
9000b7fc:	d301      	bcc.n	9000b802 <HAL_I2C_Mem_Write+0x1ce>
9000b7fe:	2f00      	cmp	r7, #0
9000b800:	d1c5      	bne.n	9000b78e <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b802:	698b      	ldr	r3, [r1, #24]
9000b804:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000b808:	d1c1      	bne.n	9000b78e <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b80a:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b80c:	2120      	movs	r1, #32
          return HAL_ERROR;
9000b80e:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000b810:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b814:	430a      	orrs	r2, r1
9000b816:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b818:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b81c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
9000b820:	e743      	b.n	9000b6aa <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
9000b822:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b824:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b826:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
9000b828:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b82a:	684b      	ldr	r3, [r1, #4]
9000b82c:	ea03 0308 	and.w	r3, r3, r8
9000b830:	4333      	orrs	r3, r6
9000b832:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000b836:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000b83a:	604b      	str	r3, [r1, #4]
}
9000b83c:	e787      	b.n	9000b74e <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
9000b83e:	2001      	movs	r0, #1
9000b840:	e733      	b.n	9000b6aa <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
9000b842:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b844:	4812      	ldr	r0, [pc, #72]	; (9000b890 <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
9000b846:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b848:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
9000b84a:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b84c:	6853      	ldr	r3, [r2, #4]
9000b84e:	4003      	ands	r3, r0
9000b850:	4333      	orrs	r3, r6
9000b852:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000b856:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000b85a:	6053      	str	r3, [r2, #4]
}
9000b85c:	e770      	b.n	9000b740 <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000b85e:	462a      	mov	r2, r5
9000b860:	4639      	mov	r1, r7
9000b862:	4620      	mov	r0, r4
9000b864:	f7ff fdb6 	bl	9000b3d4 <I2C_WaitOnSTOPFlagUntilTimeout>
9000b868:	2800      	cmp	r0, #0
9000b86a:	d1e8      	bne.n	9000b83e <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b86c:	6823      	ldr	r3, [r4, #0]
9000b86e:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000b870:	4d09      	ldr	r5, [pc, #36]	; (9000b898 <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b872:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000b874:	685a      	ldr	r2, [r3, #4]
9000b876:	402a      	ands	r2, r5
9000b878:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000b87a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000b87e:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000b882:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
9000b886:	e710      	b.n	9000b6aa <HAL_I2C_Mem_Write+0x76>
9000b888:	fc009800 	.word	0xfc009800
9000b88c:	01002000 	.word	0x01002000
9000b890:	fc009c00 	.word	0xfc009c00
9000b894:	01ff0000 	.word	0x01ff0000
9000b898:	fe00e800 	.word	0xfe00e800

9000b89c <HAL_I2C_Mem_Read>:
{
9000b89c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000b8a0:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b8a2:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000b8a6:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b8aa:	2b20      	cmp	r3, #32
{
9000b8ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b8ae:	d137      	bne.n	9000b920 <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
9000b8b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000b8b2:	4683      	mov	fp, r0
9000b8b4:	b36b      	cbz	r3, 9000b912 <HAL_I2C_Mem_Read+0x76>
9000b8b6:	f1b9 0f00 	cmp.w	r9, #0
9000b8ba:	d02a      	beq.n	9000b912 <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
9000b8bc:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000b8c0:	2b01      	cmp	r3, #1
9000b8c2:	d02d      	beq.n	9000b920 <HAL_I2C_Mem_Read+0x84>
9000b8c4:	2301      	movs	r3, #1
9000b8c6:	460f      	mov	r7, r1
9000b8c8:	4690      	mov	r8, r2
9000b8ca:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000b8ce:	f7ff f833 	bl	9000a938 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b8d2:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
9000b8d6:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b8d8:	699a      	ldr	r2, [r3, #24]
9000b8da:	0410      	lsls	r0, r2, #16
9000b8dc:	d523      	bpl.n	9000b926 <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b8de:	f7ff f82b 	bl	9000a938 <HAL_GetTick>
9000b8e2:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b8e4:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b8e8:	2819      	cmp	r0, #25
9000b8ea:	d9f5      	bls.n	9000b8d8 <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b8ec:	699a      	ldr	r2, [r3, #24]
9000b8ee:	0411      	lsls	r1, r2, #16
9000b8f0:	d5f2      	bpl.n	9000b8d8 <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b8f2:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b8f6:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b8f8:	2200      	movs	r2, #0
      return HAL_ERROR;
9000b8fa:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b8fc:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000b8fe:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b902:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b906:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b90a:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
9000b90e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b912:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000b916:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b918:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
9000b91c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
9000b920:	2002      	movs	r0, #2
}
9000b922:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
9000b926:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000b928:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000b92a:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b92e:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000b930:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b934:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000b936:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b93a:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b93c:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000b940:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b944:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
9000b948:	4983      	ldr	r1, [pc, #524]	; (9000bb58 <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
9000b94a:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b94e:	685a      	ldr	r2, [r3, #4]
9000b950:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b952:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
9000b954:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b958:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000b95a:	433a      	orrs	r2, r7
9000b95c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000b960:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b962:	4632      	mov	r2, r6
9000b964:	f7ff fc80 	bl	9000b268 <I2C_WaitOnTXISFlagUntilTimeout>
9000b968:	2800      	cmp	r0, #0
9000b96a:	f040 8091 	bne.w	9000ba90 <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000b96e:	2c01      	cmp	r4, #1
9000b970:	d00c      	beq.n	9000b98c <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b972:	ea4f 2218 	mov.w	r2, r8, lsr #8
9000b976:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b97a:	4629      	mov	r1, r5
9000b97c:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b97e:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b980:	4632      	mov	r2, r6
9000b982:	f7ff fc71 	bl	9000b268 <I2C_WaitOnTXISFlagUntilTimeout>
9000b986:	2800      	cmp	r0, #0
9000b988:	f040 8082 	bne.w	9000ba90 <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000b98c:	fa5f f388 	uxtb.w	r3, r8
9000b990:	f8db 4000 	ldr.w	r4, [fp]
9000b994:	62a3      	str	r3, [r4, #40]	; 0x28
9000b996:	1c6a      	adds	r2, r5, #1
9000b998:	d160      	bne.n	9000ba5c <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b99a:	69a3      	ldr	r3, [r4, #24]
9000b99c:	065b      	lsls	r3, r3, #25
9000b99e:	d5fc      	bpl.n	9000b99a <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b9a0:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b9a4:	b29b      	uxth	r3, r3
9000b9a6:	2bff      	cmp	r3, #255	; 0xff
9000b9a8:	f240 80ae 	bls.w	9000bb08 <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b9ac:	6863      	ldr	r3, [r4, #4]
9000b9ae:	4a6a      	ldr	r2, [pc, #424]	; (9000bb58 <HAL_I2C_Mem_Read+0x2bc>)
9000b9b0:	4013      	ands	r3, r2
9000b9b2:	4a6a      	ldr	r2, [pc, #424]	; (9000bb5c <HAL_I2C_Mem_Read+0x2c0>)
9000b9b4:	433b      	orrs	r3, r7
9000b9b6:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000b9b8:	23ff      	movs	r3, #255	; 0xff
9000b9ba:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b9be:	6062      	str	r2, [r4, #4]
9000b9c0:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 9000bb68 <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b9c4:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000b9c8:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 9000bb6c <HAL_I2C_Mem_Read+0x2d0>
9000b9cc:	1c69      	adds	r1, r5, #1
9000b9ce:	d127      	bne.n	9000ba20 <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b9d0:	69a3      	ldr	r3, [r4, #24]
9000b9d2:	075a      	lsls	r2, r3, #29
9000b9d4:	d5fc      	bpl.n	9000b9d0 <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000b9d6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b9d8:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
9000b9dc:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
9000b9de:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
9000b9e2:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
9000b9e6:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
9000b9e8:	3301      	adds	r3, #1
      hi2c->XferCount--;
9000b9ea:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
9000b9ec:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
9000b9f0:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
9000b9f4:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000b9f8:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b9fa:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000b9fe:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000ba00:	b292      	uxth	r2, r2
      hi2c->XferSize--;
9000ba02:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000ba06:	b10a      	cbz	r2, 9000ba0c <HAL_I2C_Mem_Read+0x170>
9000ba08:	2b00      	cmp	r3, #0
9000ba0a:	d046      	beq.n	9000ba9a <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
9000ba0c:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000ba10:	b29b      	uxth	r3, r3
9000ba12:	2b00      	cmp	r3, #0
9000ba14:	f000 8088 	beq.w	9000bb28 <HAL_I2C_Mem_Read+0x28c>
9000ba18:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000ba1a:	f8db 4000 	ldr.w	r4, [fp]
9000ba1e:	d0d7      	beq.n	9000b9d0 <HAL_I2C_Mem_Read+0x134>
9000ba20:	69a3      	ldr	r3, [r4, #24]
9000ba22:	075b      	lsls	r3, r3, #29
9000ba24:	d4d7      	bmi.n	9000b9d6 <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000ba26:	f7fe ff87 	bl	9000a938 <HAL_GetTick>
9000ba2a:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000ba2c:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000ba30:	4285      	cmp	r5, r0
9000ba32:	d301      	bcc.n	9000ba38 <HAL_I2C_Mem_Read+0x19c>
9000ba34:	2d00      	cmp	r5, #0
9000ba36:	d1c9      	bne.n	9000b9cc <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000ba38:	69a3      	ldr	r3, [r4, #24]
9000ba3a:	f013 0304 	ands.w	r3, r3, #4
9000ba3e:	d1c5      	bne.n	9000b9cc <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000ba40:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000ba44:	2120      	movs	r1, #32
          return HAL_ERROR;
9000ba46:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000ba48:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000ba4c:	430a      	orrs	r2, r1
9000ba4e:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000ba52:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000ba56:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
9000ba5a:	e75f      	b.n	9000b91c <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000ba5c:	69a3      	ldr	r3, [r4, #24]
9000ba5e:	0658      	lsls	r0, r3, #25
9000ba60:	d49e      	bmi.n	9000b9a0 <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000ba62:	f7fe ff69 	bl	9000a938 <HAL_GetTick>
9000ba66:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000ba68:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000ba6c:	4285      	cmp	r5, r0
9000ba6e:	d301      	bcc.n	9000ba74 <HAL_I2C_Mem_Read+0x1d8>
9000ba70:	2d00      	cmp	r5, #0
9000ba72:	d190      	bne.n	9000b996 <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000ba74:	69a3      	ldr	r3, [r4, #24]
9000ba76:	f013 0340 	ands.w	r3, r3, #64	; 0x40
9000ba7a:	d18c      	bne.n	9000b996 <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000ba7c:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000ba80:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000ba82:	430a      	orrs	r2, r1
9000ba84:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000ba88:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000ba8c:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000ba90:	2300      	movs	r3, #0
      return HAL_ERROR;
9000ba92:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000ba94:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
9000ba98:	e740      	b.n	9000b91c <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000ba9a:	f8db 2000 	ldr.w	r2, [fp]
9000ba9e:	1c68      	adds	r0, r5, #1
9000baa0:	d111      	bne.n	9000bac6 <HAL_I2C_Mem_Read+0x22a>
9000baa2:	6993      	ldr	r3, [r2, #24]
9000baa4:	0619      	lsls	r1, r3, #24
9000baa6:	d5fc      	bpl.n	9000baa2 <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000baa8:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000baac:	b29b      	uxth	r3, r3
9000baae:	2bff      	cmp	r3, #255	; 0xff
9000bab0:	d91a      	bls.n	9000bae8 <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000bab2:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000bab4:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000bab8:	ea03 0308 	and.w	r3, r3, r8
9000babc:	433b      	orrs	r3, r7
9000babe:	ea43 0309 	orr.w	r3, r3, r9
9000bac2:	6053      	str	r3, [r2, #4]
}
9000bac4:	e7a2      	b.n	9000ba0c <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000bac6:	6993      	ldr	r3, [r2, #24]
9000bac8:	061b      	lsls	r3, r3, #24
9000baca:	d4ed      	bmi.n	9000baa8 <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000bacc:	f7fe ff34 	bl	9000a938 <HAL_GetTick>
9000bad0:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000bad2:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000bad6:	4285      	cmp	r5, r0
9000bad8:	d301      	bcc.n	9000bade <HAL_I2C_Mem_Read+0x242>
9000bada:	2d00      	cmp	r5, #0
9000badc:	d1df      	bne.n	9000ba9e <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000bade:	6993      	ldr	r3, [r2, #24]
9000bae0:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000bae4:	d1db      	bne.n	9000ba9e <HAL_I2C_Mem_Read+0x202>
9000bae6:	e7ab      	b.n	9000ba40 <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
9000bae8:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000baec:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000baee:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
9000baf0:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000baf4:	6853      	ldr	r3, [r2, #4]
9000baf6:	ea03 0308 	and.w	r3, r3, r8
9000bafa:	433b      	orrs	r3, r7
9000bafc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000bb00:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000bb04:	6053      	str	r3, [r2, #4]
}
9000bb06:	e781      	b.n	9000ba0c <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
9000bb08:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000bb0c:	4912      	ldr	r1, [pc, #72]	; (9000bb58 <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
9000bb0e:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000bb10:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
9000bb12:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000bb16:	6863      	ldr	r3, [r4, #4]
9000bb18:	400b      	ands	r3, r1
9000bb1a:	433b      	orrs	r3, r7
9000bb1c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000bb20:	4a0f      	ldr	r2, [pc, #60]	; (9000bb60 <HAL_I2C_Mem_Read+0x2c4>)
9000bb22:	431a      	orrs	r2, r3
9000bb24:	6062      	str	r2, [r4, #4]
}
9000bb26:	e74b      	b.n	9000b9c0 <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000bb28:	4632      	mov	r2, r6
9000bb2a:	4629      	mov	r1, r5
9000bb2c:	4658      	mov	r0, fp
9000bb2e:	f7ff fc51 	bl	9000b3d4 <I2C_WaitOnSTOPFlagUntilTimeout>
9000bb32:	b970      	cbnz	r0, 9000bb52 <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000bb34:	f8db 3000 	ldr.w	r3, [fp]
9000bb38:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000bb3a:	4c0a      	ldr	r4, [pc, #40]	; (9000bb64 <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000bb3c:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000bb3e:	685a      	ldr	r2, [r3, #4]
9000bb40:	4022      	ands	r2, r4
9000bb42:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000bb44:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000bb48:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000bb4c:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
9000bb50:	e6e4      	b.n	9000b91c <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
9000bb52:	2001      	movs	r0, #1
9000bb54:	e6e2      	b.n	9000b91c <HAL_I2C_Mem_Read+0x80>
9000bb56:	bf00      	nop
9000bb58:	fc009800 	.word	0xfc009800
9000bb5c:	01ff2400 	.word	0x01ff2400
9000bb60:	02002400 	.word	0x02002400
9000bb64:	fe00e800 	.word	0xfe00e800
9000bb68:	fc009c00 	.word	0xfc009c00
9000bb6c:	01ff0000 	.word	0x01ff0000

9000bb70 <HAL_I2C_GetState>:
  return hi2c->State;
9000bb70:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
9000bb74:	4770      	bx	lr
9000bb76:	bf00      	nop

9000bb78 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
9000bb78:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
9000bb7a:	4770      	bx	lr

9000bb7c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000bb7c:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000bb80:	2a20      	cmp	r2, #32
9000bb82:	d123      	bne.n	9000bbcc <HAL_I2CEx_ConfigAnalogFilter+0x50>
9000bb84:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000bb88:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000bb8c:	4603      	mov	r3, r0
9000bb8e:	2a01      	cmp	r2, #1
9000bb90:	d01c      	beq.n	9000bbcc <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000bb92:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000bb94:	2024      	movs	r0, #36	; 0x24
{
9000bb96:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
9000bb98:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000bb9c:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
9000bba0:	6810      	ldr	r0, [r2, #0]
9000bba2:	f020 0001 	bic.w	r0, r0, #1
9000bba6:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
9000bba8:	6810      	ldr	r0, [r2, #0]
9000bbaa:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
9000bbae:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
9000bbb0:	6810      	ldr	r0, [r2, #0]
9000bbb2:	4301      	orrs	r1, r0

    return HAL_OK;
9000bbb4:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
9000bbb6:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000bbb8:	6811      	ldr	r1, [r2, #0]
9000bbba:	f041 0101 	orr.w	r1, r1, #1
9000bbbe:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000bbc0:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000bbc4:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000bbc8:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000bbcc:	2002      	movs	r0, #2
}
9000bbce:	4770      	bx	lr

9000bbd0 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000bbd0:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000bbd4:	2a20      	cmp	r2, #32
9000bbd6:	d122      	bne.n	9000bc1e <HAL_I2CEx_ConfigDigitalFilter+0x4e>
9000bbd8:	4603      	mov	r3, r0
{
9000bbda:	b500      	push	{lr}
9000bbdc:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000bbe0:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000bbe4:	2a01      	cmp	r2, #1
9000bbe6:	d01c      	beq.n	9000bc22 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000bbe8:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000bbea:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000bbec:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
9000bbf0:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
9000bbf4:	6810      	ldr	r0, [r2, #0]
9000bbf6:	f020 0001 	bic.w	r0, r0, #1
9000bbfa:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
9000bbfc:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
9000bbfe:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
9000bc02:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
9000bc06:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
9000bc08:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000bc0a:	6811      	ldr	r1, [r2, #0]
9000bc0c:	f041 0101 	orr.w	r1, r1, #1
9000bc10:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000bc12:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000bc16:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000bc1a:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000bc1e:	2002      	movs	r0, #2
}
9000bc20:	4770      	bx	lr
    return HAL_BUSY;
9000bc22:	2002      	movs	r0, #2
}
9000bc24:	f85d fb04 	ldr.w	pc, [sp], #4

9000bc28 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
9000bc28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000bc2c:	460d      	mov	r5, r1
9000bc2e:	4614      	mov	r4, r2
9000bc30:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
9000bc32:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
9000bc34:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
9000bc36:	2701      	movs	r7, #1
  p = 0;
9000bc38:	f04f 0800 	mov.w	r8, #0
9000bc3c:	e006      	b.n	9000bc4c <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
9000bc3e:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
9000bc42:	eb06 0308 	add.w	r3, r6, r8
9000bc46:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000bc4a:	d837      	bhi.n	9000bcbc <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
9000bc4c:	eb05 0008 	add.w	r0, r5, r8
9000bc50:	4632      	mov	r2, r6
9000bc52:	4639      	mov	r1, r7
    while (i != 0UL)
9000bc54:	b116      	cbz	r6, 9000bc5c <JPEG_Bits_To_SizeCodes+0x34>
      p++;
9000bc56:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
9000bc58:	f01d ff7a 	bl	90029b50 <memset>
  for (l = 0; l < 16UL; l++)
9000bc5c:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
9000bc5e:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
9000bc62:	d1ec      	bne.n	9000bc3e <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
9000bc64:	2300      	movs	r3, #0
9000bc66:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
9000bc6a:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
9000bc6e:	7828      	ldrb	r0, [r5, #0]
9000bc70:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
9000bc72:	b300      	cbz	r0, 9000bcb6 <JPEG_Bits_To_SizeCodes+0x8e>
9000bc74:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000bc78:	2701      	movs	r7, #1
  p = 0;
9000bc7a:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
9000bc7c:	4288      	cmp	r0, r1
9000bc7e:	d10f      	bne.n	9000bca0 <JPEG_Bits_To_SizeCodes+0x78>
9000bc80:	eb02 0008 	add.w	r0, r2, r8
9000bc84:	1c56      	adds	r6, r2, #1
9000bc86:	eb05 0c02 	add.w	ip, r5, r2
9000bc8a:	eb04 0080 	add.w	r0, r4, r0, lsl #2
9000bc8e:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
9000bc90:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
9000bc94:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
9000bc96:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
9000bc9a:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
9000bc9c:	458e      	cmp	lr, r1
9000bc9e:	d0f7      	beq.n	9000bc90 <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
9000bca0:	291f      	cmp	r1, #31
9000bca2:	d80b      	bhi.n	9000bcbc <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000bca4:	fa07 f001 	lsl.w	r0, r7, r1
9000bca8:	4298      	cmp	r0, r3
9000bcaa:	d907      	bls.n	9000bcbc <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
9000bcac:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000bcae:	005b      	lsls	r3, r3, #1
    si++;
9000bcb0:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
9000bcb2:	2800      	cmp	r0, #0
9000bcb4:	d1e2      	bne.n	9000bc7c <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
9000bcb6:	2000      	movs	r0, #0
}
9000bcb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
9000bcbc:	2001      	movs	r0, #1
}
9000bcbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000bcc2:	bf00      	nop

9000bcc4 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
9000bcc4:	b5f0      	push	{r4, r5, r6, r7, lr}
9000bcc6:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
9000bcca:	460d      	mov	r5, r1
9000bccc:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000bcce:	ab01      	add	r3, sp, #4
9000bcd0:	aa43      	add	r2, sp, #268	; 0x10c
9000bcd2:	a902      	add	r1, sp, #8
9000bcd4:	f7ff ffa8 	bl	9000bc28 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000bcd8:	b9d0      	cbnz	r0, 9000bd10 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000bcda:	9f01      	ldr	r7, [sp, #4]
9000bcdc:	b1c7      	cbz	r7, 9000bd10 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000bcde:	370f      	adds	r7, #15
9000bce0:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
9000bce4:	a902      	add	r1, sp, #8
9000bce6:	f104 0c0f 	add.w	ip, r4, #15
9000bcea:	4427      	add	r7, r4
9000bcec:	e009      	b.n	9000bd02 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bcee:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
9000bcf2:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bcf4:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bcf8:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bcfc:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bcfe:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
9000bd00:	d006      	beq.n	9000bd10 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000bd02:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000bd06:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bd08:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000bd0c:	d9ef      	bls.n	9000bcee <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000bd0e:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000bd10:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
9000bd14:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000bd16:	bf00      	nop

9000bd18 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
9000bd18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000bd1c:	6804      	ldr	r4, [r0, #0]
{
9000bd1e:	b093      	sub	sp, #76	; 0x4c
9000bd20:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000bd22:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
9000bd26:	429a      	cmp	r2, r3
9000bd28:	f000 809d 	beq.w	9000be66 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
9000bd2c:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
9000bd30:	429a      	cmp	r2, r3
9000bd32:	d003      	beq.n	9000bd3c <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000bd34:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000bd36:	b013      	add	sp, #76	; 0x4c
9000bd38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000bd3c:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
9000bd40:	a903      	add	r1, sp, #12
9000bd42:	f7ff ffbf 	bl	9000bcc4 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
9000bd46:	2800      	cmp	r0, #0
9000bd48:	d1f5      	bne.n	9000bd36 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
9000bd4a:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd4e:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd52:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
9000bd56:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd58:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
9000bd5c:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd5e:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
9000bd62:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd66:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
9000bd6a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd6e:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
9000bd72:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd74:	f89d 9015 	ldrb.w	r9, [sp, #21]
9000bd78:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd7c:	f89d c014 	ldrb.w	ip, [sp, #20]
9000bd80:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd84:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd88:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd8c:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd90:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd92:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bd96:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
9000bd9a:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
9000bd9e:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bda2:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bda6:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bdaa:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000bdae:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bdb2:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
9000bdb4:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bdb8:	f89d 2010 	ldrb.w	r2, [sp, #16]
9000bdbc:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bdc0:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
9000bdc2:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bdc6:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bdc8:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
9000bdcc:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bdd0:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bdd4:	f89d 600f 	ldrb.w	r6, [sp, #15]
9000bdd8:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bddc:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bde0:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bde2:	9b01      	ldr	r3, [sp, #4]
9000bde4:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bde8:	f89d 500d 	ldrb.w	r5, [sp, #13]
9000bdec:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bdf0:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
9000bdf4:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bdf8:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
9000bdfa:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bdfe:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000be02:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
9000be06:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000be0a:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000be0e:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000be12:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
9000be16:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
9000be1a:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000be1e:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000be22:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
9000be26:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000be28:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
9000be2c:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000be2e:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000be32:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000be36:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
9000be3a:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000be3c:	f89d 2020 	ldrb.w	r2, [sp, #32]
9000be40:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
9000be42:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000be46:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000be4a:	f89d 301c 	ldrb.w	r3, [sp, #28]
9000be4e:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000be50:	f89d 3018 	ldrb.w	r3, [sp, #24]
9000be54:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
9000be58:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000be5c:	f844 3c18 	str.w	r3, [r4, #-24]
}
9000be60:	b013      	add	sp, #76	; 0x4c
9000be62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000be66:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
9000be6a:	e769      	b.n	9000bd40 <JPEG_Set_HuffDC_Mem+0x28>

9000be6c <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
9000be6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000be70:	6804      	ldr	r4, [r0, #0]
{
9000be72:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
9000be76:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000be78:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
9000be7c:	429a      	cmp	r2, r3
9000be7e:	d042      	beq.n	9000bf06 <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
9000be80:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
9000be84:	429a      	cmp	r2, r3
9000be86:	d004      	beq.n	9000be92 <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000be88:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000be8a:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000be8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000be92:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000be96:	4628      	mov	r0, r5
9000be98:	466b      	mov	r3, sp
9000be9a:	f20d 4234 	addw	r2, sp, #1076	; 0x434
9000be9e:	a901      	add	r1, sp, #4
9000bea0:	f7ff fec2 	bl	9000bc28 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000bea4:	2800      	cmp	r0, #0
9000bea6:	d1f0      	bne.n	9000be8a <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000bea8:	9b00      	ldr	r3, [sp, #0]
9000beaa:	b37b      	cbz	r3, 9000bf0c <JPEG_Set_HuffAC_Mem+0xa0>
9000beac:	330f      	adds	r3, #15
9000beae:	f20d 4734 	addw	r7, sp, #1076	; 0x434
9000beb2:	f10d 0c04 	add.w	ip, sp, #4
9000beb6:	f105 020f 	add.w	r2, r5, #15
9000beba:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bebe:	ae42      	add	r6, sp, #264	; 0x108
9000bec0:	e011      	b.n	9000bee6 <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
9000bec2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000bec6:	2ba1      	cmp	r3, #161	; 0xa1
9000bec8:	d8de      	bhi.n	9000be88 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000beca:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bece:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000bed2:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
9000bed6:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bed8:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bedc:	4631      	mov	r1, r6
9000bede:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bee2:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000bee4:	d013      	beq.n	9000bf0e <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000bee6:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000beea:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
9000beec:	2900      	cmp	r1, #0
9000beee:	d0ec      	beq.n	9000beca <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
9000bef0:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
9000bef2:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000bef6:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000bef8:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000befc:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000bf00:	d1df      	bne.n	9000bec2 <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
9000bf02:	23a1      	movs	r3, #161	; 0xa1
9000bf04:	e7e1      	b.n	9000beca <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000bf06:	f204 6444 	addw	r4, r4, #1604	; 0x644
9000bf0a:	e7c4      	b.n	9000be96 <JPEG_Set_HuffAC_Mem+0x2a>
9000bf0c:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
9000bf0e:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
9000bf12:	4a1a      	ldr	r2, [pc, #104]	; (9000bf7c <JPEG_Set_HuffAC_Mem+0x110>)
9000bf14:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
9000bf18:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
9000bf1c:	6023      	str	r3, [r4, #0]
9000bf1e:	6063      	str	r3, [r4, #4]
9000bf20:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
9000bf24:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000bf26:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000bf2a:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000bf2c:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
9000bf30:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
9000bf34:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000bf36:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000bf3a:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000bf3c:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000bf40:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bf42:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bf46:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bf4a:	0212      	lsls	r2, r2, #8
9000bf4c:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bf50:	021b      	lsls	r3, r3, #8
9000bf52:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bf56:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
9000bf5a:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bf5c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bf60:	433a      	orrs	r2, r7
    while (i > 1UL)
9000bf62:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bf64:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000bf68:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000bf6c:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000bf70:	d1e7      	bne.n	9000bf42 <JPEG_Set_HuffAC_Mem+0xd6>
}
9000bf72:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000bf76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000bf7a:	bf00      	nop
9000bf7c:	0fd10fd0 	.word	0x0fd10fd0

9000bf80 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000bf80:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bf82:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
9000bf86:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000bf88:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bf8a:	f003 0303 	and.w	r3, r3, #3
9000bf8e:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000bf90:	6803      	ldr	r3, [r0, #0]
9000bf92:	685a      	ldr	r2, [r3, #4]
9000bf94:	bf0c      	ite	eq
9000bf96:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000bf9a:	f022 0208 	bicne.w	r2, r2, #8
9000bf9e:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000bfa0:	681a      	ldr	r2, [r3, #0]
9000bfa2:	f022 0201 	bic.w	r2, r2, #1
9000bfa6:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000bfa8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bfaa:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000bfae:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000bfb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bfb2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000bfb6:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000bfb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bfba:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000bfbe:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000bfc0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000bfc2:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000bfc6:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000bfc8:	681a      	ldr	r2, [r3, #0]
9000bfca:	f042 0201 	orr.w	r2, r2, #1
9000bfce:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000bfd0:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000bfd2:	f002 020c 	and.w	r2, r2, #12
9000bfd6:	2a08      	cmp	r2, #8
9000bfd8:	d00a      	beq.n	9000bff0 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000bfda:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000bfdc:	f002 020c 	and.w	r2, r2, #12
9000bfe0:	2a0c      	cmp	r2, #12
9000bfe2:	d000      	beq.n	9000bfe6 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000bfe4:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000bfe6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bfe8:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000bfec:	631a      	str	r2, [r3, #48]	; 0x30
}
9000bfee:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000bff0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bff2:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
9000bff6:	631a      	str	r2, [r3, #48]	; 0x30
9000bff8:	4770      	bx	lr
9000bffa:	bf00      	nop

9000bffc <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000bffc:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000bffe:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
9000c000:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c002:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
9000c004:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000c006:	42aa      	cmp	r2, r5
9000c008:	d32d      	bcc.n	9000c066 <JPEG_DMA_StartProcess+0x6a>
9000c00a:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000c00c:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000c00e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000c010:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000c012:	42b3      	cmp	r3, r6
9000c014:	d327      	bcc.n	9000c066 <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000c016:	4f1b      	ldr	r7, [pc, #108]	; (9000c084 <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000c018:	f8df c074 	ldr.w	ip, [pc, #116]	; 9000c090 <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000c01c:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000c01e:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000c022:	4919      	ldr	r1, [pc, #100]	; (9000c088 <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000c024:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000c026:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000c028:	4918      	ldr	r1, [pc, #96]	; (9000c08c <JPEG_DMA_StartProcess+0x90>)
9000c02a:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000c02c:	b1a5      	cbz	r5, 9000c058 <JPEG_DMA_StartProcess+0x5c>
9000c02e:	b19e      	cbz	r6, 9000c058 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c030:	fbb2 f1f5 	udiv	r1, r2, r5
9000c034:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c038:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c03a:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c03c:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c03e:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c040:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000c042:	fbb3 f2f6 	udiv	r2, r3, r6
9000c046:	fb06 3212 	mls	r2, r6, r2, r3
9000c04a:	1a9b      	subs	r3, r3, r2
9000c04c:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c04e:	9500      	str	r5, [sp, #0]
9000c050:	69e2      	ldr	r2, [r4, #28]
9000c052:	f001 fbb5 	bl	9000d7c0 <HAL_MDMA_Start_IT>
9000c056:	b148      	cbz	r0, 9000c06c <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c058:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
9000c05a:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c05c:	f043 0304 	orr.w	r3, r3, #4
9000c060:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000c062:	b003      	add	sp, #12
9000c064:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000c066:	2001      	movs	r0, #1
}
9000c068:	b003      	add	sp, #12
9000c06a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000c06c:	6822      	ldr	r2, [r4, #0]
9000c06e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c070:	69a1      	ldr	r1, [r4, #24]
9000c072:	3240      	adds	r2, #64	; 0x40
9000c074:	9500      	str	r5, [sp, #0]
9000c076:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000c078:	f001 fba2 	bl	9000d7c0 <HAL_MDMA_Start_IT>
9000c07c:	2800      	cmp	r0, #0
9000c07e:	d0f3      	beq.n	9000c068 <JPEG_DMA_StartProcess+0x6c>
9000c080:	e7ea      	b.n	9000c058 <JPEG_DMA_StartProcess+0x5c>
9000c082:	bf00      	nop
9000c084:	9000c5b5 	.word	0x9000c5b5
9000c088:	9000c82d 	.word	0x9000c82d
9000c08c:	9000c8ad 	.word	0x9000c8ad
9000c090:	9000c5e1 	.word	0x9000c5e1

9000c094 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000c094:	6803      	ldr	r3, [r0, #0]
9000c096:	685a      	ldr	r2, [r3, #4]
9000c098:	f002 0203 	and.w	r2, r2, #3
9000c09c:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000c09e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000c0a2:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000c0a4:	f000 8094 	beq.w	9000c1d0 <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000c0a8:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c0aa:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000c0ac:	f014 0403 	ands.w	r4, r4, #3
9000c0b0:	d172      	bne.n	9000c198 <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c0b2:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000c0b4:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c0b6:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c0b8:	68da      	ldr	r2, [r3, #12]
9000c0ba:	0c12      	lsrs	r2, r2, #16
9000c0bc:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000c0be:	4a5f      	ldr	r2, [pc, #380]	; (9000c23c <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000c0c0:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000c0c4:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
9000c0c8:	2600      	movs	r6, #0
9000c0ca:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000c0ce:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000c0d2:	f241 3488 	movw	r4, #5000	; 0x1388
9000c0d6:	e033      	b.n	9000c140 <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000c0d8:	f892 8001 	ldrb.w	r8, [r2, #1]
9000c0dc:	fb0e f707 	mul.w	r7, lr, r7
9000c0e0:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000c0e2:	f811 8008 	ldrb.w	r8, [r1, r8]
9000c0e6:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000c0ea:	2f64      	cmp	r7, #100	; 0x64
9000c0ec:	d961      	bls.n	9000c1b2 <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
9000c0ee:	fbb4 f7f7 	udiv	r7, r4, r7
9000c0f2:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c0f4:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000c0f8:	2f01      	cmp	r7, #1
9000c0fa:	d03d      	beq.n	9000c178 <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000c0fc:	f892 8002 	ldrb.w	r8, [r2, #2]
9000c100:	fb0e f707 	mul.w	r7, lr, r7
9000c104:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000c106:	f811 8008 	ldrb.w	r8, [r1, r8]
9000c10a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000c10e:	2f64      	cmp	r7, #100	; 0x64
9000c110:	d94a      	bls.n	9000c1a8 <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
9000c112:	fbb4 f7f7 	udiv	r7, r4, r7
9000c116:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c118:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000c11a:	2b01      	cmp	r3, #1
9000c11c:	d030      	beq.n	9000c180 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000c11e:	78d7      	ldrb	r7, [r2, #3]
9000c120:	fb0e f303 	mul.w	r3, lr, r3
9000c124:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000c126:	5dcf      	ldrb	r7, [r1, r7]
9000c128:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000c12c:	2b64      	cmp	r3, #100	; 0x64
9000c12e:	d94a      	bls.n	9000c1c6 <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
9000c130:	fbb4 f3f3 	udiv	r3, r4, r3
9000c134:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000c136:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000c138:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000c13c:	4295      	cmp	r5, r2
9000c13e:	d025      	beq.n	9000c18c <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
9000c140:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c144:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000c146:	2f01      	cmp	r7, #1
9000c148:	d02c      	beq.n	9000c1a4 <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000c14a:	f892 8000 	ldrb.w	r8, [r2]
9000c14e:	fb0e f707 	mul.w	r7, lr, r7
9000c152:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000c154:	f811 8008 	ldrb.w	r8, [r1, r8]
9000c158:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000c15c:	2f64      	cmp	r7, #100	; 0x64
9000c15e:	d92d      	bls.n	9000c1bc <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
9000c160:	fbb4 f7f7 	udiv	r7, r4, r7
9000c164:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c166:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000c16a:	2f01      	cmp	r7, #1
9000c16c:	d1b4      	bne.n	9000c0d8 <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c16e:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000c172:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000c174:	2f01      	cmp	r7, #1
9000c176:	d1c1      	bne.n	9000c0fc <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c178:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000c17a:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000c17c:	2b01      	cmp	r3, #1
9000c17e:	d1ce      	bne.n	9000c11e <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000c180:	3204      	adds	r2, #4
        quality += 100UL;
9000c182:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
9000c184:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000c188:	4295      	cmp	r5, r2
9000c18a:	d1d9      	bne.n	9000c140 <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
9000c18c:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000c18e:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000c190:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000c194:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000c198:	f002 0203 	and.w	r2, r2, #3
9000c19c:	2a03      	cmp	r2, #3
9000c19e:	d14a      	bne.n	9000c236 <HAL_JPEG_GetInfo.part.0+0x1a2>
9000c1a0:	2430      	movs	r4, #48	; 0x30
9000c1a2:	e016      	b.n	9000c1d2 <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
9000c1a4:	3664      	adds	r6, #100	; 0x64
9000c1a6:	e7de      	b.n	9000c166 <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
9000c1a8:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000c1ac:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000c1b0:	e7b2      	b.n	9000c118 <HAL_JPEG_GetInfo.part.0+0x84>
9000c1b2:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000c1b6:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000c1ba:	e79b      	b.n	9000c0f4 <HAL_JPEG_GetInfo.part.0+0x60>
9000c1bc:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000c1c0:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000c1c4:	e7cf      	b.n	9000c166 <HAL_JPEG_GetInfo.part.0+0xd2>
9000c1c6:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
9000c1ca:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000c1ce:	e7b2      	b.n	9000c136 <HAL_JPEG_GetInfo.part.0+0xa2>
9000c1d0:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c1d2:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000c1d4:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c1d8:	0c12      	lsrs	r2, r2, #16
9000c1da:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c1de:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000c1e0:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000c1e2:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c1e4:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000c1e6:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c1e8:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c1ec:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000c1f0:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000c1f4:	ea4f 1215 	mov.w	r2, r5, lsr #4
9000c1f8:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000c1fc:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c200:	d108      	bne.n	9000c214 <HAL_JPEG_GetInfo.part.0+0x180>
9000c202:	2d01      	cmp	r5, #1
9000c204:	d106      	bne.n	9000c214 <HAL_JPEG_GetInfo.part.0+0x180>
9000c206:	f016 0f0f 	tst.w	r6, #15
9000c20a:	bf0c      	ite	eq
9000c20c:	2401      	moveq	r4, #1
9000c20e:	2400      	movne	r4, #0
9000c210:	0064      	lsls	r4, r4, #1
9000c212:	e754      	b.n	9000c0be <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c214:	ea42 020c 	orr.w	r2, r2, ip
9000c218:	f012 040f 	ands.w	r4, r2, #15
9000c21c:	f43f af4f 	beq.w	9000c0be <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c220:	ea4c 0206 	orr.w	r2, ip, r6
9000c224:	f3c2 0203 	ubfx	r2, r2, #0, #4
9000c228:	2d03      	cmp	r5, #3
9000c22a:	bf08      	it	eq
9000c22c:	2a00      	cmpeq	r2, #0
9000c22e:	bf0c      	ite	eq
9000c230:	2401      	moveq	r4, #1
9000c232:	2400      	movne	r4, #0
9000c234:	e743      	b.n	9000c0be <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
9000c236:	2001      	movs	r0, #1
}
9000c238:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000c23c:	9002d5f8 	.word	0x9002d5f8

9000c240 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000c240:	2800      	cmp	r0, #0
9000c242:	f000 810b 	beq.w	9000c45c <HAL_JPEG_Init+0x21c>
{
9000c246:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000c248:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000c24c:	4604      	mov	r4, r0
9000c24e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000c252:	2b00      	cmp	r3, #0
9000c254:	f000 80fd 	beq.w	9000c452 <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
9000c258:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000c25a:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
9000c25c:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000c25e:	4880      	ldr	r0, [pc, #512]	; (9000c460 <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000c260:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000c264:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c266:	f041 0101 	orr.w	r1, r1, #1
9000c26a:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c26c:	6811      	ldr	r1, [r2, #0]
9000c26e:	f021 0101 	bic.w	r1, r1, #1
9000c272:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c274:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c276:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
9000c27a:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000c27c:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c27e:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
9000c282:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000c284:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c286:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
9000c28a:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000c28c:	6b91      	ldr	r1, [r2, #56]	; 0x38
9000c28e:	f041 0160 	orr.w	r1, r1, #96	; 0x60
9000c292:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000c294:	4973      	ldr	r1, [pc, #460]	; (9000c464 <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000c296:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c298:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
9000c29a:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000c29c:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c2a0:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
9000c2a4:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
9000c2a8:	4b6f      	ldr	r3, [pc, #444]	; (9000c468 <HAL_JPEG_Init+0x228>)
9000c2aa:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
9000c2ae:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c2b2:	486e      	ldr	r0, [pc, #440]	; (9000c46c <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c2b4:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c2b8:	4b6d      	ldr	r3, [pc, #436]	; (9000c470 <HAL_JPEG_Init+0x230>)
9000c2ba:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
9000c2be:	496d      	ldr	r1, [pc, #436]	; (9000c474 <HAL_JPEG_Init+0x234>)
9000c2c0:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c2c4:	4b6c      	ldr	r3, [pc, #432]	; (9000c478 <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c2c6:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c2ca:	486c      	ldr	r0, [pc, #432]	; (9000c47c <HAL_JPEG_Init+0x23c>)
9000c2cc:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
9000c2d0:	496b      	ldr	r1, [pc, #428]	; (9000c480 <HAL_JPEG_Init+0x240>)
9000c2d2:	4b6c      	ldr	r3, [pc, #432]	; (9000c484 <HAL_JPEG_Init+0x244>)
9000c2d4:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
9000c2d8:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
9000c2dc:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000c2e0:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
9000c2e4:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
9000c2e8:	4967      	ldr	r1, [pc, #412]	; (9000c488 <HAL_JPEG_Init+0x248>)
9000c2ea:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000c2ec:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000c2f0:	430b      	orrs	r3, r1
  *address = value;
9000c2f2:	4966      	ldr	r1, [pc, #408]	; (9000c48c <HAL_JPEG_Init+0x24c>)
9000c2f4:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
9000c2f8:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000c2fc:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
9000c300:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c302:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000c306:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000c308:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000c30c:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
9000c310:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c312:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000c316:	ea43 030c 	orr.w	r3, r3, ip
9000c31a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c31e:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000c322:	d1eb      	bne.n	9000c2fc <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000c324:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c328:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
9000c32c:	4856      	ldr	r0, [pc, #344]	; (9000c488 <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c32e:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
9000c330:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000c332:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
9000c336:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
9000c33a:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000c33e:	4003      	ands	r3, r0
  *address = value;
9000c340:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c344:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
9000c348:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
9000c34c:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000c350:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
9000c354:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000c358:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000c35a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000c35e:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
9000c362:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000c366:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000c368:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c36a:	4b49      	ldr	r3, [pc, #292]	; (9000c490 <HAL_JPEG_Init+0x250>)
  *address = value;
9000c36c:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000c370:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c374:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
9000c378:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
9000c37c:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
9000c380:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000c384:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000c386:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
9000c38a:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
9000c38e:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
9000c392:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c394:	483f      	ldr	r0, [pc, #252]	; (9000c494 <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000c396:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c398:	4b3f      	ldr	r3, [pc, #252]	; (9000c498 <HAL_JPEG_Init+0x258>)
  *address = value;
9000c39a:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c39e:	493f      	ldr	r1, [pc, #252]	; (9000c49c <HAL_JPEG_Init+0x25c>)
9000c3a0:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000c3a4:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c3a8:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
9000c3ac:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
9000c3b0:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000c3b4:	493a      	ldr	r1, [pc, #232]	; (9000c4a0 <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
9000c3b6:	b29b      	uxth	r3, r3
9000c3b8:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000c3bc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000c3c0:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000c3c4:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
9000c3c8:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c3ca:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000c3ce:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000c3d0:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000c3d4:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
9000c3d8:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000c3da:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
9000c3de:	ea43 030e 	orr.w	r3, r3, lr
9000c3e2:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c3e6:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000c3ea:	d1eb      	bne.n	9000c3c4 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000c3ec:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
9000c3f0:	4926      	ldr	r1, [pc, #152]	; (9000c48c <HAL_JPEG_Init+0x24c>)
9000c3f2:	4620      	mov	r0, r4
9000c3f4:	f7ff fd3a 	bl	9000be6c <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000c3f8:	b118      	cbz	r0, 9000c402 <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000c3fa:	2301      	movs	r3, #1
    return HAL_ERROR;
9000c3fc:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000c3fe:	6523      	str	r3, [r4, #80]	; 0x50
}
9000c400:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
9000c402:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000c404:	4620      	mov	r0, r4
9000c406:	4926      	ldr	r1, [pc, #152]	; (9000c4a0 <HAL_JPEG_Init+0x260>)
9000c408:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
9000c40c:	f7ff fd2e 	bl	9000be6c <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000c410:	2800      	cmp	r0, #0
9000c412:	d1f2      	bne.n	9000c3fa <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
9000c414:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000c416:	4620      	mov	r0, r4
9000c418:	4922      	ldr	r1, [pc, #136]	; (9000c4a4 <HAL_JPEG_Init+0x264>)
9000c41a:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
9000c41e:	f7ff fc7b 	bl	9000bd18 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000c422:	2800      	cmp	r0, #0
9000c424:	d1e9      	bne.n	9000c3fa <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000c426:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000c428:	4620      	mov	r0, r4
9000c42a:	491f      	ldr	r1, [pc, #124]	; (9000c4a8 <HAL_JPEG_Init+0x268>)
9000c42c:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
9000c430:	f7ff fc72 	bl	9000bd18 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000c434:	2800      	cmp	r0, #0
9000c436:	d1e0      	bne.n	9000c3fa <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000c438:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c43a:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000c43c:	6853      	ldr	r3, [r2, #4]
9000c43e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000c442:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
9000c444:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000c446:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c448:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000c44c:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
9000c44e:	6560      	str	r0, [r4, #84]	; 0x54
}
9000c450:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000c452:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000c456:	f7f6 fdd1 	bl	90002ffc <HAL_JPEG_MspInit>
9000c45a:	e6fd      	b.n	9000c258 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000c45c:	2001      	movs	r0, #1
}
9000c45e:	4770      	bx	lr
9000c460:	9002d5b8 	.word	0x9002d5b8
9000c464:	9002d540 	.word	0x9002d540
9000c468:	01050100 	.word	0x01050100
9000c46c:	0b0a0908 	.word	0x0b0a0908
9000c470:	07060504 	.word	0x07060504
9000c474:	03020100 	.word	0x03020100
9000c478:	7d010000 	.word	0x7d010000
9000c47c:	04040505 	.word	0x04040505
9000c480:	03040203 	.word	0x03040203
9000c484:	03010200 	.word	0x03010200
9000c488:	ffff0000 	.word	0xffff0000
9000c48c:	9002d48c 	.word	0x9002d48c
9000c490:	09080706 	.word	0x09080706
9000c494:	01000404 	.word	0x01000404
9000c498:	04040201 	.word	0x04040201
9000c49c:	05070403 	.word	0x05070403
9000c4a0:	9002d3d8 	.word	0x9002d3d8
9000c4a4:	9002d59c 	.word	0x9002d59c
9000c4a8:	9002d580 	.word	0x9002d580

9000c4ac <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000c4ac:	2b00      	cmp	r3, #0
9000c4ae:	bf18      	it	ne
9000c4b0:	2900      	cmpne	r1, #0
9000c4b2:	d03b      	beq.n	9000c52c <HAL_JPEG_Decode_DMA+0x80>
{
9000c4b4:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000c4b6:	fab0 f580 	clz	r5, r0
9000c4ba:	4604      	mov	r4, r0
9000c4bc:	096d      	lsrs	r5, r5, #5
9000c4be:	b330      	cbz	r0, 9000c50e <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
9000c4c0:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
9000c4c4:	f1bc 0f01 	cmp.w	ip, #1
9000c4c8:	d02e      	beq.n	9000c528 <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c4ca:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
9000c4ce:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c4d2:	45f4      	cmp	ip, lr
9000c4d4:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
9000c4d8:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c4dc:	d119      	bne.n	9000c512 <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
9000c4de:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000c4e0:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000c4e4:	9b04      	ldr	r3, [sp, #16]
9000c4e6:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000c4e8:	2304      	movs	r3, #4
9000c4ea:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000c4ee:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c4f0:	f023 030f 	bic.w	r3, r3, #15
9000c4f4:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000c4f6:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c4f8:	f043 030e 	orr.w	r3, r3, #14
9000c4fc:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
9000c4fe:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000c500:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
9000c502:	f7ff fd3d 	bl	9000bf80 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000c506:	f7ff fd79 	bl	9000bffc <JPEG_DMA_StartProcess>
9000c50a:	b930      	cbnz	r0, 9000c51a <HAL_JPEG_Decode_DMA+0x6e>
}
9000c50c:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000c50e:	2001      	movs	r0, #1
}
9000c510:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
9000c512:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
9000c514:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
9000c518:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c51a:	2306      	movs	r3, #6
      return HAL_ERROR;
9000c51c:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
9000c51e:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c522:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000c526:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
9000c528:	2002      	movs	r0, #2
}
9000c52a:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000c52c:	2001      	movs	r0, #1
}
9000c52e:	4770      	bx	lr

9000c530 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c530:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c532:	f003 030c 	and.w	r3, r3, #12
9000c536:	2b0c      	cmp	r3, #12
9000c538:	d01a      	beq.n	9000c570 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c53a:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c53c:	f003 030c 	and.w	r3, r3, #12
9000c540:	2b08      	cmp	r3, #8
9000c542:	d001      	beq.n	9000c548 <HAL_JPEG_Pause+0x18>
}
9000c544:	2000      	movs	r0, #0
9000c546:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c548:	07ca      	lsls	r2, r1, #31
9000c54a:	d41f      	bmi.n	9000c58c <HAL_JPEG_Pause+0x5c>
9000c54c:	f04f 3cff 	mov.w	ip, #4294967295
9000c550:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c554:	078b      	lsls	r3, r1, #30
9000c556:	d504      	bpl.n	9000c562 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000c558:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c55a:	4694      	mov	ip, r2
9000c55c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000c560:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000c562:	6802      	ldr	r2, [r0, #0]
}
9000c564:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000c566:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c568:	ea03 030c 	and.w	r3, r3, ip
9000c56c:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c56e:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c570:	07cb      	lsls	r3, r1, #31
9000c572:	d503      	bpl.n	9000c57c <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c574:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c576:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000c57a:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c57c:	0789      	lsls	r1, r1, #30
9000c57e:	d5e1      	bpl.n	9000c544 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000c580:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c582:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000c586:	6543      	str	r3, [r0, #84]	; 0x54
}
9000c588:	2000      	movs	r0, #0
9000c58a:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c58c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c58e:	f06f 0c06 	mvn.w	ip, #6
9000c592:	f06f 022e 	mvn.w	r2, #46	; 0x2e
9000c596:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000c59a:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000c59c:	e7da      	b.n	9000c554 <HAL_JPEG_Pause+0x24>
9000c59e:	bf00      	nop

9000c5a0 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000c5a0:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000c5a2:	6282      	str	r2, [r0, #40]	; 0x28
}
9000c5a4:	4770      	bx	lr
9000c5a6:	bf00      	nop

9000c5a8 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000c5a8:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000c5aa:	62c2      	str	r2, [r0, #44]	; 0x2c
}
9000c5ac:	4770      	bx	lr
9000c5ae:	bf00      	nop

9000c5b0 <HAL_JPEG_EncodeCpltCallback>:
9000c5b0:	4770      	bx	lr
9000c5b2:	bf00      	nop

9000c5b4 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c5b4:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c5b6:	2101      	movs	r1, #1
{
9000c5b8:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c5ba:	6803      	ldr	r3, [r0, #0]
9000c5bc:	681a      	ldr	r2, [r3, #0]
9000c5be:	f022 0201 	bic.w	r2, r2, #1
9000c5c2:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c5c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c5c6:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000c5ca:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c5cc:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c5d0:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000c5d2:	f043 0304 	orr.w	r3, r3, #4
9000c5d6:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000c5d8:	f7f5 f8bc 	bl	90001754 <HAL_JPEG_ErrorCallback>
}
9000c5dc:	bd08      	pop	{r3, pc}
9000c5de:	bf00      	nop

9000c5e0 <JPEG_MDMAInCpltCallback>:
{
9000c5e0:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c5e2:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000c5e4:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000c5e8:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c5ea:	6822      	ldr	r2, [r4, #0]
9000c5ec:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c5ee:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
9000c5f2:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000c5f4:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c5f6:	400b      	ands	r3, r1
9000c5f8:	2b0c      	cmp	r3, #12
9000c5fa:	d001      	beq.n	9000c600 <JPEG_MDMAInCpltCallback+0x20>
}
9000c5fc:	b003      	add	sp, #12
9000c5fe:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c600:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000c602:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c604:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c606:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c608:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c60a:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c60e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c610:	1a9b      	subs	r3, r3, r2
9000c612:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000c614:	6a21      	ldr	r1, [r4, #32]
9000c616:	f7f5 f829 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000c61a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c61c:	42ab      	cmp	r3, r5
9000c61e:	d311      	bcc.n	9000c644 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000c620:	b305      	cbz	r5, 9000c664 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c622:	fbb3 f2f5 	udiv	r2, r3, r5
9000c626:	fb05 3212 	mls	r2, r5, r2, r3
9000c62a:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c62c:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c62e:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c630:	04d1      	lsls	r1, r2, #19
9000c632:	d400      	bmi.n	9000c636 <JPEG_MDMAInCpltCallback+0x56>
9000c634:	b963      	cbnz	r3, 9000c650 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000c636:	6822      	ldr	r2, [r4, #0]
9000c638:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c63a:	f043 0360 	orr.w	r3, r3, #96	; 0x60
9000c63e:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c640:	b003      	add	sp, #12
9000c642:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000c644:	b1cb      	cbz	r3, 9000c67a <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000c646:	0798      	lsls	r0, r3, #30
9000c648:	d119      	bne.n	9000c67e <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c64a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c64c:	04d2      	lsls	r2, r2, #19
9000c64e:	d4f2      	bmi.n	9000c636 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000c650:	6822      	ldr	r2, [r4, #0]
9000c652:	2501      	movs	r5, #1
9000c654:	69a1      	ldr	r1, [r4, #24]
9000c656:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000c658:	3240      	adds	r2, #64	; 0x40
9000c65a:	9500      	str	r5, [sp, #0]
9000c65c:	f001 f8b0 	bl	9000d7c0 <HAL_MDMA_Start_IT>
9000c660:	2800      	cmp	r0, #0
9000c662:	d0e8      	beq.n	9000c636 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c664:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c666:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000c668:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c66a:	f043 0304 	orr.w	r3, r3, #4
9000c66e:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c670:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000c674:	f7f5 f86e 	bl	90001754 <HAL_JPEG_ErrorCallback>
        return;
9000c678:	e7c0      	b.n	9000c5fc <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c67a:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c67c:	e7db      	b.n	9000c636 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000c67e:	f023 0303 	bic.w	r3, r3, #3
9000c682:	3304      	adds	r3, #4
9000c684:	e7d2      	b.n	9000c62c <JPEG_MDMAInCpltCallback+0x4c>
9000c686:	bf00      	nop

9000c688 <JPEG_DMA_PollResidualData>:
{
9000c688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c68a:	6802      	ldr	r2, [r0, #0]
9000c68c:	2610      	movs	r6, #16
{
9000c68e:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c690:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000c692:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000c696:	d11d      	bne.n	9000c6d4 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c698:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000c69a:	06df      	lsls	r7, r3, #27
9000c69c:	d51a      	bpl.n	9000c6d4 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000c69e:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000c6a0:	69e7      	ldr	r7, [r4, #28]
9000c6a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000c6a4:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000c6a6:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000c6a8:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000c6aa:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000c6ac:	6a67      	ldr	r7, [r4, #36]	; 0x24
9000c6ae:	69e2      	ldr	r2, [r4, #28]
9000c6b0:	443a      	add	r2, r7
9000c6b2:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000c6b4:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000c6b6:	69e2      	ldr	r2, [r4, #28]
9000c6b8:	4402      	add	r2, r0
9000c6ba:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000c6bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c6be:	69e2      	ldr	r2, [r4, #28]
9000c6c0:	440a      	add	r2, r1
9000c6c2:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000c6c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c6c6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
9000c6c8:	3304      	adds	r3, #4
9000c6ca:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c6cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c6ce:	4293      	cmp	r3, r2
9000c6d0:	d021      	beq.n	9000c716 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c6d2:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000c6d4:	3e01      	subs	r6, #1
9000c6d6:	d1db      	bne.n	9000c690 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000c6d8:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c6da:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000c6dc:	06d8      	lsls	r0, r3, #27
9000c6de:	d501      	bpl.n	9000c6e4 <JPEG_DMA_PollResidualData+0x5c>
9000c6e0:	048b      	lsls	r3, r1, #18
9000c6e2:	d417      	bmi.n	9000c714 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c6e4:	6813      	ldr	r3, [r2, #0]
9000c6e6:	f023 0301 	bic.w	r3, r3, #1
9000c6ea:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000c6ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c6ee:	b9eb      	cbnz	r3, 9000c72c <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000c6f0:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000c6f2:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c6f4:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c6f6:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c6f8:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000c6fc:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c700:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c704:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c706:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c708:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c70a:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c70e:	d00a      	beq.n	9000c726 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c710:	f7ff ff4e 	bl	9000c5b0 <HAL_JPEG_EncodeCpltCallback>
}
9000c714:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c716:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c718:	4620      	mov	r0, r4
9000c71a:	69e1      	ldr	r1, [r4, #28]
9000c71c:	f7f4 ffc6 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c720:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000c722:	6265      	str	r5, [r4, #36]	; 0x24
9000c724:	e7d6      	b.n	9000c6d4 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c726:	f7f5 f817 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000c72a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c72c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c72e:	4620      	mov	r0, r4
9000c730:	69e1      	ldr	r1, [r4, #28]
9000c732:	f7f4 ffbb 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000c736:	2300      	movs	r3, #0
9000c738:	6263      	str	r3, [r4, #36]	; 0x24
9000c73a:	e7d9      	b.n	9000c6f0 <JPEG_DMA_PollResidualData+0x68>

9000c73c <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000c73c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c73e:	f413 5f40 	tst.w	r3, #12288	; 0x3000
9000c742:	d028      	beq.n	9000c796 <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c744:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c746:	f003 030c 	and.w	r3, r3, #12
9000c74a:	2b0c      	cmp	r3, #12
{
9000c74c:	b570      	push	{r4, r5, r6, lr}
9000c74e:	4604      	mov	r4, r0
9000c750:	b082      	sub	sp, #8
9000c752:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c754:	d007      	beq.n	9000c766 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c756:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c758:	f003 030c 	and.w	r3, r3, #12
9000c75c:	2b08      	cmp	r3, #8
9000c75e:	d037      	beq.n	9000c7d0 <HAL_JPEG_Resume+0x94>
  return HAL_OK;
9000c760:	2000      	movs	r0, #0
}
9000c762:	b002      	add	sp, #8
9000c764:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c766:	07c8      	lsls	r0, r1, #31
9000c768:	d417      	bmi.n	9000c79a <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c76a:	07a9      	lsls	r1, r5, #30
9000c76c:	d5f8      	bpl.n	9000c760 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c76e:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c770:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000c774:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000c776:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c778:	041a      	lsls	r2, r3, #16
9000c77a:	d453      	bmi.n	9000c824 <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000c77c:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000c77e:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
9000c780:	2a00      	cmp	r2, #0
9000c782:	d13e      	bne.n	9000c802 <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c784:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c786:	2206      	movs	r2, #6
          return HAL_ERROR;
9000c788:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c78a:	f043 0304 	orr.w	r3, r3, #4
9000c78e:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c790:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
9000c794:	e7e5      	b.n	9000c762 <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
9000c796:	2001      	movs	r0, #1
}
9000c798:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c79a:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c79c:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c79e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c7a2:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c7a4:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
9000c7a6:	2a00      	cmp	r2, #0
9000c7a8:	d0ec      	beq.n	9000c784 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000c7aa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c7ac:	fbb3 f1f2 	udiv	r1, r3, r2
9000c7b0:	fb02 3211 	mls	r2, r2, r1, r3
9000c7b4:	1a9b      	subs	r3, r3, r2
9000c7b6:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
9000c7b8:	2b00      	cmp	r3, #0
9000c7ba:	d0d6      	beq.n	9000c76a <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000c7bc:	6822      	ldr	r2, [r4, #0]
9000c7be:	2601      	movs	r6, #1
9000c7c0:	3240      	adds	r2, #64	; 0x40
9000c7c2:	9600      	str	r6, [sp, #0]
9000c7c4:	69a1      	ldr	r1, [r4, #24]
9000c7c6:	f000 fffb 	bl	9000d7c0 <HAL_MDMA_Start_IT>
9000c7ca:	2800      	cmp	r0, #0
9000c7cc:	d0cd      	beq.n	9000c76a <HAL_JPEG_Resume+0x2e>
9000c7ce:	e7d9      	b.n	9000c784 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c7d0:	f011 0101 	ands.w	r1, r1, #1
9000c7d4:	d013      	beq.n	9000c7fe <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c7d6:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c7d8:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000c7da:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c7dc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000c7e0:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c7e2:	07ab      	lsls	r3, r5, #30
9000c7e4:	d504      	bpl.n	9000c7f0 <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c7e6:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000c7e8:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c7ea:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000c7ee:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000c7f0:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
9000c7f2:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000c7f4:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c7f6:	430b      	orrs	r3, r1
9000c7f8:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c7fa:	b002      	add	sp, #8
9000c7fc:	bd70      	pop	{r4, r5, r6, pc}
9000c7fe:	2228      	movs	r2, #40	; 0x28
9000c800:	e7ef      	b.n	9000c7e2 <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c802:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c804:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c806:	fbb3 f1f2 	udiv	r1, r3, r2
9000c80a:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c80e:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c810:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c812:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c814:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c816:	9500      	str	r5, [sp, #0]
9000c818:	69e2      	ldr	r2, [r4, #28]
9000c81a:	f000 ffd1 	bl	9000d7c0 <HAL_MDMA_Start_IT>
9000c81e:	2800      	cmp	r0, #0
9000c820:	d09e      	beq.n	9000c760 <HAL_JPEG_Resume+0x24>
9000c822:	e7af      	b.n	9000c784 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000c824:	4620      	mov	r0, r4
9000c826:	f7ff ff2f 	bl	9000c688 <JPEG_DMA_PollResidualData>
9000c82a:	e799      	b.n	9000c760 <HAL_JPEG_Resume+0x24>

9000c82c <JPEG_MDMAOutCpltCallback>:
{
9000c82c:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c82e:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000c830:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000c834:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c836:	6823      	ldr	r3, [r4, #0]
9000c838:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c83a:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000c83e:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000c840:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c842:	400a      	ands	r2, r1
9000c844:	2a0c      	cmp	r2, #12
9000c846:	d001      	beq.n	9000c84c <JPEG_MDMAOutCpltCallback+0x20>
}
9000c848:	b003      	add	sp, #12
9000c84a:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000c84c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c84e:	0692      	lsls	r2, r2, #26
9000c850:	d505      	bpl.n	9000c85e <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000c852:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c854:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000c858:	631a      	str	r2, [r3, #48]	; 0x30
}
9000c85a:	b003      	add	sp, #12
9000c85c:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c85e:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c860:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c862:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c864:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c866:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c868:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000c86c:	1a9b      	subs	r3, r3, r2
9000c86e:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c870:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c872:	f7f4 ff1b 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c876:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c878:	049b      	lsls	r3, r3, #18
9000c87a:	d501      	bpl.n	9000c880 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000c87c:	6823      	ldr	r3, [r4, #0]
9000c87e:	e7e8      	b.n	9000c852 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c880:	6821      	ldr	r1, [r4, #0]
9000c882:	2501      	movs	r5, #1
9000c884:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c886:	69e2      	ldr	r2, [r4, #28]
9000c888:	3144      	adds	r1, #68	; 0x44
9000c88a:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000c88c:	9500      	str	r5, [sp, #0]
9000c88e:	f000 ff97 	bl	9000d7c0 <HAL_MDMA_Start_IT>
9000c892:	2800      	cmp	r0, #0
9000c894:	d0f2      	beq.n	9000c87c <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c896:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c898:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000c89a:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c89c:	f043 0304 	orr.w	r3, r3, #4
9000c8a0:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c8a2:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000c8a6:	f7f4 ff55 	bl	90001754 <HAL_JPEG_ErrorCallback>
          return;
9000c8aa:	e7cd      	b.n	9000c848 <JPEG_MDMAOutCpltCallback+0x1c>

9000c8ac <JPEG_MDMAOutAbortCallback>:
{
9000c8ac:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c8ae:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000c8b0:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c8b2:	041a      	lsls	r2, r3, #16
9000c8b4:	d400      	bmi.n	9000c8b8 <JPEG_MDMAOutAbortCallback+0xc>
}
9000c8b6:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c8b8:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000c8ba:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c8bc:	681b      	ldr	r3, [r3, #0]
9000c8be:	695b      	ldr	r3, [r3, #20]
9000c8c0:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000c8c4:	1ad3      	subs	r3, r2, r3
9000c8c6:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c8c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c8ca:	429a      	cmp	r2, r3
9000c8cc:	d025      	beq.n	9000c91a <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000c8ce:	6822      	ldr	r2, [r4, #0]
9000c8d0:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000c8d2:	f015 0510 	ands.w	r5, r5, #16
9000c8d6:	d118      	bne.n	9000c90a <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000c8d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c8da:	bb4b      	cbnz	r3, 9000c930 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c8dc:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000c8de:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c8e0:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c8e2:	f023 0301 	bic.w	r3, r3, #1
9000c8e6:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000c8e8:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c8ea:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c8ec:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000c8f0:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c8f4:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c8f8:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c8fa:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c8fc:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c8fe:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c902:	d012      	beq.n	9000c92a <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c904:	f7ff fe54 	bl	9000c5b0 <HAL_JPEG_EncodeCpltCallback>
}
9000c908:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c90a:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c90c:	049b      	lsls	r3, r3, #18
9000c90e:	d4d2      	bmi.n	9000c8b6 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000c910:	4620      	mov	r0, r4
}
9000c912:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000c916:	f7ff beb7 	b.w	9000c688 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c91a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c91c:	4620      	mov	r0, r4
9000c91e:	69e1      	ldr	r1, [r4, #28]
9000c920:	f7f4 fec4 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000c924:	2300      	movs	r3, #0
9000c926:	6263      	str	r3, [r4, #36]	; 0x24
9000c928:	e7d1      	b.n	9000c8ce <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c92a:	f7f4 ff15 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000c92e:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c930:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c932:	4620      	mov	r0, r4
9000c934:	69e1      	ldr	r1, [r4, #28]
9000c936:	f7f4 feb9 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c93a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000c93c:	6265      	str	r5, [r4, #36]	; 0x24
9000c93e:	e7cd      	b.n	9000c8dc <JPEG_MDMAOutAbortCallback+0x30>

9000c940 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c940:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c942:	f003 0303 	and.w	r3, r3, #3
9000c946:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000c948:	6803      	ldr	r3, [r0, #0]
{
9000c94a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c94e:	4604      	mov	r4, r0
9000c950:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c952:	d01f      	beq.n	9000c994 <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000c954:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c956:	04d7      	lsls	r7, r2, #19
9000c958:	d407      	bmi.n	9000c96a <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000c95a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c95c:	0796      	lsls	r6, r2, #30
9000c95e:	f100 811d 	bmi.w	9000cb9c <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000c962:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c964:	0750      	lsls	r0, r2, #29
9000c966:	f100 81b1 	bmi.w	9000cccc <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c96a:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000c96c:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000c970:	d107      	bne.n	9000c982 <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000c972:	6b5e      	ldr	r6, [r3, #52]	; 0x34
9000c974:	f016 0608 	ands.w	r6, r6, #8
9000c978:	d14c      	bne.n	9000ca14 <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c97a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c97c:	06d2      	lsls	r2, r2, #27
9000c97e:	f100 81e3 	bmi.w	9000cd48 <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c982:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c984:	f002 0238 	and.w	r2, r2, #56	; 0x38
9000c988:	2a20      	cmp	r2, #32
9000c98a:	d01a      	beq.n	9000c9c2 <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
9000c98c:	2000      	movs	r0, #0
}
9000c98e:	b002      	add	sp, #8
9000c990:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000c994:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c996:	0652      	lsls	r2, r2, #25
9000c998:	d5dc      	bpl.n	9000c954 <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000c99a:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000c99c:	9101      	str	r1, [sp, #4]
9000c99e:	f7ff fb79 	bl	9000c094 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000c9a2:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000c9a4:	9901      	ldr	r1, [sp, #4]
9000c9a6:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000c9a8:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000c9aa:	f7f4 fe29 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000c9ae:	6823      	ldr	r3, [r4, #0]
9000c9b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c9b2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000c9b6:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000c9b8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000c9ba:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000c9be:	639a      	str	r2, [r3, #56]	; 0x38
9000c9c0:	e7c8      	b.n	9000c954 <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c9c2:	681a      	ldr	r2, [r3, #0]
9000c9c4:	f022 0201 	bic.w	r2, r2, #1
9000c9c8:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c9ca:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c9cc:	f002 020c 	and.w	r2, r2, #12
9000c9d0:	2a08      	cmp	r2, #8
9000c9d2:	f000 81e6 	beq.w	9000cda2 <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000c9d6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000c9d8:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000c9dc:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000c9de:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c9e0:	2b00      	cmp	r3, #0
9000c9e2:	f040 81e3 	bne.w	9000cdac <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
9000c9e6:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000c9e8:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c9ea:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c9ec:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c9ee:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c9f2:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c9f4:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
9000c9f8:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c9fc:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c9fe:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ca00:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ca04:	f000 81c9 	beq.w	9000cd9a <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000ca08:	f7ff fdd2 	bl	9000c5b0 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000ca0c:	4628      	mov	r0, r5
}
9000ca0e:	b002      	add	sp, #8
9000ca10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000ca14:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ca16:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000ca18:	3220      	adds	r2, #32
9000ca1a:	4296      	cmp	r6, r2
9000ca1c:	f0c0 81e4 	bcc.w	9000cde8 <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
9000ca20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ca22:	69e1      	ldr	r1, [r4, #28]
9000ca24:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ca26:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ca28:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ca2a:	69e2      	ldr	r2, [r4, #28]
9000ca2c:	440a      	add	r2, r1
9000ca2e:	0a19      	lsrs	r1, r3, #8
9000ca30:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ca32:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ca34:	69e2      	ldr	r2, [r4, #28]
9000ca36:	440a      	add	r2, r1
9000ca38:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ca3a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ca3c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ca3e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ca40:	69e2      	ldr	r2, [r4, #28]
9000ca42:	440a      	add	r2, r1
9000ca44:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ca46:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ca48:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ca4a:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ca4c:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ca4e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ca50:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ca52:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ca54:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ca56:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ca58:	69e2      	ldr	r2, [r4, #28]
9000ca5a:	440a      	add	r2, r1
9000ca5c:	0a19      	lsrs	r1, r3, #8
9000ca5e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ca60:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ca62:	69e2      	ldr	r2, [r4, #28]
9000ca64:	440a      	add	r2, r1
9000ca66:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ca68:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ca6a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ca6c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ca6e:	69e2      	ldr	r2, [r4, #28]
9000ca70:	440a      	add	r2, r1
9000ca72:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ca74:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ca76:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ca78:	3304      	adds	r3, #4
9000ca7a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ca7c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ca7e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ca80:	69e1      	ldr	r1, [r4, #28]
9000ca82:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ca84:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ca86:	69e2      	ldr	r2, [r4, #28]
9000ca88:	440a      	add	r2, r1
9000ca8a:	0a19      	lsrs	r1, r3, #8
9000ca8c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ca8e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ca90:	69e2      	ldr	r2, [r4, #28]
9000ca92:	440a      	add	r2, r1
9000ca94:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ca96:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ca98:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ca9a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ca9c:	69e2      	ldr	r2, [r4, #28]
9000ca9e:	440a      	add	r2, r1
9000caa0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000caa2:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000caa4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000caa6:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000caa8:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000caaa:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000caac:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000caae:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cab0:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cab2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cab4:	69e2      	ldr	r2, [r4, #28]
9000cab6:	440a      	add	r2, r1
9000cab8:	0a19      	lsrs	r1, r3, #8
9000caba:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cabc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cabe:	69e2      	ldr	r2, [r4, #28]
9000cac0:	440a      	add	r2, r1
9000cac2:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cac4:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cac6:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cac8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000caca:	69e2      	ldr	r2, [r4, #28]
9000cacc:	440a      	add	r2, r1
9000cace:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cad0:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cad2:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000cad4:	3304      	adds	r3, #4
9000cad6:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cad8:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cada:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cadc:	69e1      	ldr	r1, [r4, #28]
9000cade:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cae0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cae2:	69e2      	ldr	r2, [r4, #28]
9000cae4:	440a      	add	r2, r1
9000cae6:	0a19      	lsrs	r1, r3, #8
9000cae8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000caea:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000caec:	69e2      	ldr	r2, [r4, #28]
9000caee:	440a      	add	r2, r1
9000caf0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000caf2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000caf4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000caf6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000caf8:	69e2      	ldr	r2, [r4, #28]
9000cafa:	440a      	add	r2, r1
9000cafc:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cafe:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cb00:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000cb02:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cb04:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000cb06:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cb08:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cb0a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cb0c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cb0e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cb10:	69e2      	ldr	r2, [r4, #28]
9000cb12:	440a      	add	r2, r1
9000cb14:	0a19      	lsrs	r1, r3, #8
9000cb16:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cb18:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cb1a:	69e2      	ldr	r2, [r4, #28]
9000cb1c:	440a      	add	r2, r1
9000cb1e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cb20:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cb22:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cb24:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cb26:	69e2      	ldr	r2, [r4, #28]
9000cb28:	440a      	add	r2, r1
9000cb2a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cb2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cb2e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000cb30:	3304      	adds	r3, #4
9000cb32:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cb34:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cb36:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cb38:	69e1      	ldr	r1, [r4, #28]
9000cb3a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cb3c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cb3e:	69e2      	ldr	r2, [r4, #28]
9000cb40:	440a      	add	r2, r1
9000cb42:	0a19      	lsrs	r1, r3, #8
9000cb44:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cb46:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cb48:	69e2      	ldr	r2, [r4, #28]
9000cb4a:	440a      	add	r2, r1
9000cb4c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cb4e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cb50:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cb52:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cb54:	69e2      	ldr	r2, [r4, #28]
9000cb56:	440a      	add	r2, r1
9000cb58:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cb5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cb5c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000cb5e:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cb60:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000cb62:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cb64:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cb66:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cb68:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cb6a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cb6c:	69e2      	ldr	r2, [r4, #28]
9000cb6e:	440a      	add	r2, r1
9000cb70:	0a19      	lsrs	r1, r3, #8
9000cb72:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cb74:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cb76:	69e2      	ldr	r2, [r4, #28]
9000cb78:	440a      	add	r2, r1
9000cb7a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cb7c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cb7e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cb80:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cb82:	69e2      	ldr	r2, [r4, #28]
9000cb84:	440a      	add	r2, r1
9000cb86:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cb88:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cb8a:	3304      	adds	r3, #4
9000cb8c:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cb8e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cb90:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000cb92:	429a      	cmp	r2, r3
9000cb94:	f000 82ae 	beq.w	9000d0f4 <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cb98:	6823      	ldr	r3, [r4, #0]
9000cb9a:	e6f2      	b.n	9000c982 <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000cb9c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000cb9e:	2a00      	cmp	r2, #0
9000cba0:	f000 810c 	beq.w	9000cdbc <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000cba4:	6a21      	ldr	r1, [r4, #32]
9000cba6:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000cba8:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000cbaa:	f240 81a4 	bls.w	9000cef6 <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000cbae:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cbb0:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000cbb2:	04cd      	lsls	r5, r1, #19
9000cbb4:	f53f aed9 	bmi.w	9000c96a <JPEG_Process+0x2a>
9000cbb8:	2a00      	cmp	r2, #0
9000cbba:	f43f aed6 	beq.w	9000c96a <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000cbbe:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000cbc0:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000cbc4:	f240 8203 	bls.w	9000cfce <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cbc8:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000cbca:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cbcc:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cbce:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cbd0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cbd2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cbd4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cbd6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cbd8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cbdc:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cbde:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cbe2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cbe4:	6a21      	ldr	r1, [r4, #32]
9000cbe6:	3104      	adds	r1, #4
9000cbe8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cbea:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cbec:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cbee:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cbf0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cbf2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cbf4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cbf6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cbf8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cbfc:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cbfe:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cc02:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cc04:	6a21      	ldr	r1, [r4, #32]
9000cc06:	3104      	adds	r1, #4
9000cc08:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cc0a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc0c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cc0e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc10:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc12:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc14:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cc16:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc18:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cc1c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc1e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cc22:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cc24:	6a21      	ldr	r1, [r4, #32]
9000cc26:	3104      	adds	r1, #4
9000cc28:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cc2a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc2c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cc2e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc30:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc32:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc34:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cc36:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc38:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cc3c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc3e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cc42:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cc44:	6a21      	ldr	r1, [r4, #32]
9000cc46:	3104      	adds	r1, #4
9000cc48:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cc4a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc4c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cc4e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc50:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc52:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc54:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cc56:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc58:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cc5c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc5e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cc62:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cc64:	6a21      	ldr	r1, [r4, #32]
9000cc66:	3104      	adds	r1, #4
9000cc68:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cc6a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc6c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cc6e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc70:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc72:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc74:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cc76:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc78:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cc7c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc7e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cc82:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cc84:	6a21      	ldr	r1, [r4, #32]
9000cc86:	3104      	adds	r1, #4
9000cc88:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cc8a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc8c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cc8e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc90:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc92:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc94:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cc96:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cc98:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cc9c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cc9e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cca2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cca4:	6a21      	ldr	r1, [r4, #32]
9000cca6:	3104      	adds	r1, #4
9000cca8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ccaa:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ccac:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ccae:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ccb0:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ccb2:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ccb4:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ccb6:	7849      	ldrb	r1, [r1, #1]
9000ccb8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000ccbc:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ccbe:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ccc2:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ccc4:	6a22      	ldr	r2, [r4, #32]
9000ccc6:	3204      	adds	r2, #4
9000ccc8:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000ccca:	e64e      	b.n	9000c96a <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000cccc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ccce:	2a00      	cmp	r2, #0
9000ccd0:	d074      	beq.n	9000cdbc <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ccd2:	6a21      	ldr	r1, [r4, #32]
9000ccd4:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000ccd6:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ccd8:	f200 8164 	bhi.w	9000cfa4 <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000ccdc:	428a      	cmp	r2, r1
9000ccde:	f040 810c 	bne.w	9000cefa <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000cce2:	6a21      	ldr	r1, [r4, #32]
9000cce4:	4620      	mov	r0, r4
9000cce6:	f7f4 fcc1 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000ccea:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ccec:	2a04      	cmp	r2, #4
9000ccee:	d902      	bls.n	9000ccf6 <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000ccf0:	f022 0203 	bic.w	r2, r2, #3
9000ccf4:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000ccf6:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ccf8:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000ccfa:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ccfc:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000ccfe:	04c9      	lsls	r1, r1, #19
9000cd00:	f53f ae33 	bmi.w	9000c96a <JPEG_Process+0x2a>
9000cd04:	2a00      	cmp	r2, #0
9000cd06:	f43f ae30 	beq.w	9000c96a <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000cd0a:	0891      	lsrs	r1, r2, #2
9000cd0c:	f040 8203 	bne.w	9000d116 <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cd10:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cd12:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000cd14:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cd16:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000cd18:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cd1c:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
9000cd1e:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cd20:	d010      	beq.n	9000cd44 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cd22:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cd24:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cd26:	5c69      	ldrb	r1, [r5, r1]
9000cd28:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
9000cd2c:	6a21      	ldr	r1, [r4, #32]
9000cd2e:	f101 0101 	add.w	r1, r1, #1
9000cd32:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cd34:	d106      	bne.n	9000cd44 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cd36:	6a22      	ldr	r2, [r4, #32]
9000cd38:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
9000cd3a:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cd3c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000cd40:	3201      	adds	r2, #1
9000cd42:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000cd44:	6418      	str	r0, [r3, #64]	; 0x40
9000cd46:	e610      	b.n	9000c96a <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000cd48:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cd4a:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000cd4c:	3204      	adds	r2, #4
9000cd4e:	4295      	cmp	r5, r2
9000cd50:	f0c0 80d5 	bcc.w	9000cefe <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
9000cd54:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cd56:	69e1      	ldr	r1, [r4, #28]
9000cd58:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cd5a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cd5c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cd5e:	69e2      	ldr	r2, [r4, #28]
9000cd60:	440a      	add	r2, r1
9000cd62:	0a19      	lsrs	r1, r3, #8
9000cd64:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cd66:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cd68:	69e2      	ldr	r2, [r4, #28]
9000cd6a:	440a      	add	r2, r1
9000cd6c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cd6e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cd70:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cd72:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cd74:	69e2      	ldr	r2, [r4, #28]
9000cd76:	440a      	add	r2, r1
9000cd78:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cd7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cd7c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
9000cd7e:	3304      	adds	r3, #4
9000cd80:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cd82:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cd84:	429a      	cmp	r2, r3
9000cd86:	f47f af07 	bne.w	9000cb98 <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cd8a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cd8c:	4620      	mov	r0, r4
9000cd8e:	69e1      	ldr	r1, [r4, #28]
9000cd90:	f7f4 fc8c 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cd94:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000cd96:	6266      	str	r6, [r4, #36]	; 0x24
9000cd98:	e5f3      	b.n	9000c982 <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000cd9a:	f7f4 fcdd 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000cd9e:	4628      	mov	r0, r5
9000cda0:	e5f5      	b.n	9000c98e <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000cda2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000cda4:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000cda8:	631a      	str	r2, [r3, #48]	; 0x30
9000cdaa:	e614      	b.n	9000c9d6 <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cdac:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cdae:	4620      	mov	r0, r4
9000cdb0:	69e1      	ldr	r1, [r4, #28]
9000cdb2:	f7f4 fc7b 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000cdb6:	2300      	movs	r3, #0
9000cdb8:	6263      	str	r3, [r4, #36]	; 0x24
9000cdba:	e614      	b.n	9000c9e6 <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000cdbc:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cdbe:	f002 020c 	and.w	r2, r2, #12
9000cdc2:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cdc4:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000cdc6:	f000 80fd 	beq.w	9000cfc4 <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cdca:	f002 020c 	and.w	r2, r2, #12
9000cdce:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cdd0:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cdd2:	f47f adca 	bne.w	9000c96a <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cdd6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000cdda:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000cddc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000cdde:	f022 0206 	bic.w	r2, r2, #6
9000cde2:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cde4:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cde6:	e5c0      	b.n	9000c96a <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000cde8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cdea:	4296      	cmp	r6, r2
9000cdec:	f67f adc9 	bls.w	9000c982 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000cdf0:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000cdf2:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000cdf4:	0880      	lsrs	r0, r0, #2
9000cdf6:	d020      	beq.n	9000ce3a <JPEG_Process+0x4fa>
9000cdf8:	4629      	mov	r1, r5
9000cdfa:	e000      	b.n	9000cdfe <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
9000cdfc:	6823      	ldr	r3, [r4, #0]
9000cdfe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000ce00:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ce02:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ce04:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000ce06:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ce08:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ce0a:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000ce0c:	69e2      	ldr	r2, [r4, #28]
9000ce0e:	4432      	add	r2, r6
9000ce10:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000ce14:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ce16:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000ce18:	69e2      	ldr	r2, [r4, #28]
9000ce1a:	4432      	add	r2, r6
9000ce1c:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ce20:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ce24:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ce26:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000ce28:	69e2      	ldr	r2, [r4, #28]
9000ce2a:	4432      	add	r2, r6
9000ce2c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ce2e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ce30:	f103 0304 	add.w	r3, r3, #4
9000ce34:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000ce36:	d1e1      	bne.n	9000cdfc <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ce38:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000ce3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ce3c:	42b3      	cmp	r3, r6
9000ce3e:	f000 8161 	beq.w	9000d104 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000ce42:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ce46:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000ce48:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000ce4c:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000ce4e:	d00e      	beq.n	9000ce6e <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ce50:	f005 0303 	and.w	r3, r5, #3
9000ce54:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ce56:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000ce58:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ce5a:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000ce5c:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ce5e:	fa27 f303 	lsr.w	r3, r7, r3
9000ce62:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000ce64:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ce66:	f103 0301 	add.w	r3, r3, #1
9000ce6a:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000ce6c:	d1f0      	bne.n	9000ce50 <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
9000ce6e:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ce72:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ce74:	69e1      	ldr	r1, [r4, #28]
9000ce76:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000ce78:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ce7c:	f7f4 fc16 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000ce80:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000ce82:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000ce86:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000ce88:	f63f ae86 	bhi.w	9000cb98 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000ce8c:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9000ce90:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ce92:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000ce94:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000ce98:	fa27 f003 	lsr.w	r0, r7, r3
9000ce9c:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
9000ce9e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cea0:	f102 0201 	add.w	r2, r2, #1
9000cea4:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cea6:	f43f ae77 	beq.w	9000cb98 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000ceaa:	f103 0208 	add.w	r2, r3, #8
9000ceae:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ceb0:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000ceb2:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000ceb6:	fa27 f202 	lsr.w	r2, r7, r2
9000ceba:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000cebc:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cebe:	f102 0201 	add.w	r2, r2, #1
9000cec2:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cec4:	f108 0202 	add.w	r2, r8, #2
9000cec8:	f43f ae66 	beq.w	9000cb98 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cecc:	3310      	adds	r3, #16
9000cece:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ced0:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000ced2:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000ced4:	fa27 f303 	lsr.w	r3, r7, r3
9000ced8:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000ceda:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cedc:	f103 0301 	add.w	r3, r3, #1
9000cee0:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cee2:	f47f ae59 	bne.w	9000cb98 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cee6:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cee8:	0e3f      	lsrs	r7, r7, #24
9000ceea:	69e2      	ldr	r2, [r4, #28]
9000ceec:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000ceee:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cef0:	3301      	adds	r3, #1
9000cef2:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cef4:	e650      	b.n	9000cb98 <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000cef6:	428a      	cmp	r2, r1
9000cef8:	d056      	beq.n	9000cfa8 <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cefa:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cefc:	e535      	b.n	9000c96a <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000cefe:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cf00:	4295      	cmp	r5, r2
9000cf02:	f67f ad3e 	bls.w	9000c982 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000cf06:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000cf08:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000cf0a:	0880      	lsrs	r0, r0, #2
9000cf0c:	d020      	beq.n	9000cf50 <JPEG_Process+0x610>
9000cf0e:	4631      	mov	r1, r6
9000cf10:	e000      	b.n	9000cf14 <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
9000cf12:	6823      	ldr	r3, [r4, #0]
9000cf14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000cf16:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cf18:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cf1a:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000cf1c:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cf1e:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cf20:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000cf22:	69e2      	ldr	r2, [r4, #28]
9000cf24:	442a      	add	r2, r5
9000cf26:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000cf2a:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cf2c:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000cf2e:	69e2      	ldr	r2, [r4, #28]
9000cf30:	442a      	add	r2, r5
9000cf32:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cf36:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cf3a:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cf3c:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000cf3e:	69e2      	ldr	r2, [r4, #28]
9000cf40:	442a      	add	r2, r5
9000cf42:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cf44:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cf46:	f103 0304 	add.w	r3, r3, #4
9000cf4a:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000cf4c:	d1e1      	bne.n	9000cf12 <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cf4e:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000cf50:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cf52:	429d      	cmp	r5, r3
9000cf54:	f000 80d6 	beq.w	9000d104 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000cf58:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cf5c:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000cf5e:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000cf62:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000cf64:	d00e      	beq.n	9000cf84 <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cf66:	f006 0303 	and.w	r3, r6, #3
9000cf6a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cf6c:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000cf6e:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cf70:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000cf72:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cf74:	fa27 f303 	lsr.w	r3, r7, r3
9000cf78:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000cf7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cf7c:	f103 0301 	add.w	r3, r3, #1
9000cf80:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000cf82:	d1f0      	bne.n	9000cf66 <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
9000cf84:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cf88:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cf8a:	69e1      	ldr	r1, [r4, #28]
9000cf8c:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000cf8e:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cf92:	f7f4 fb8b 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000cf96:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000cf98:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000cf9c:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cf9e:	f67f af75 	bls.w	9000ce8c <JPEG_Process+0x54c>
9000cfa2:	e5f9      	b.n	9000cb98 <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000cfa4:	1a52      	subs	r2, r2, r1
9000cfa6:	e6a9      	b.n	9000ccfc <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000cfa8:	6a21      	ldr	r1, [r4, #32]
9000cfaa:	4620      	mov	r0, r4
9000cfac:	f7f4 fb5e 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000cfb0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000cfb2:	2a04      	cmp	r2, #4
9000cfb4:	d902      	bls.n	9000cfbc <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000cfb6:	f022 0203 	bic.w	r2, r2, #3
9000cfba:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000cfbc:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cfbe:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000cfc0:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000cfc2:	e5f5      	b.n	9000cbb0 <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cfc4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000cfc8:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cfca:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cfcc:	e4cd      	b.n	9000c96a <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000cfce:	2a03      	cmp	r2, #3
9000cfd0:	f240 80a4 	bls.w	9000d11c <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
9000cfd4:	2900      	cmp	r1, #0
9000cfd6:	f43f acc8 	beq.w	9000c96a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000cfda:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cfdc:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cfde:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cfe0:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cfe4:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cfe6:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cfe8:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cfea:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cfee:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cff0:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000cff4:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cff8:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cffc:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000cffe:	6a20      	ldr	r0, [r4, #32]
9000d000:	f100 0004 	add.w	r0, r0, #4
9000d004:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d006:	f43f acb0 	beq.w	9000c96a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d00a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d00c:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d00e:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d012:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d014:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d016:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d018:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d01c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d01e:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000d022:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d026:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d02a:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000d02c:	6a20      	ldr	r0, [r4, #32]
9000d02e:	f100 0004 	add.w	r0, r0, #4
9000d032:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d034:	f43f ac99 	beq.w	9000c96a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d038:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d03a:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d03c:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d040:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d042:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d044:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d046:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d04a:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d04c:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000d050:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d054:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d058:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000d05a:	6a20      	ldr	r0, [r4, #32]
9000d05c:	f100 0004 	add.w	r0, r0, #4
9000d060:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d062:	f43f ac82 	beq.w	9000c96a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d066:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d068:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d06a:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d06e:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d070:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d072:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d074:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d078:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d07a:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000d07e:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d082:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d086:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000d088:	6a20      	ldr	r0, [r4, #32]
9000d08a:	f100 0004 	add.w	r0, r0, #4
9000d08e:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d090:	f43f ac6b 	beq.w	9000c96a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d094:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d096:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d098:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d09c:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d09e:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d0a0:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d0a2:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d0a6:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d0a8:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000d0ac:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d0b0:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d0b4:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000d0b6:	6a20      	ldr	r0, [r4, #32]
9000d0b8:	f100 0004 	add.w	r0, r0, #4
9000d0bc:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d0be:	f43f ac54 	beq.w	9000c96a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d0c2:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d0c4:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d0c6:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d0ca:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d0cc:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d0ce:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d0d0:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d0d4:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d0d6:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000d0da:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d0de:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d0e2:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000d0e4:	6a20      	ldr	r0, [r4, #32]
9000d0e6:	f100 0004 	add.w	r0, r0, #4
9000d0ea:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d0ec:	f47f ac3d 	bne.w	9000c96a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d0f0:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d0f2:	e5db      	b.n	9000ccac <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d0f4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d0f6:	4620      	mov	r0, r4
9000d0f8:	69e1      	ldr	r1, [r4, #28]
9000d0fa:	f7f4 fad7 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d0fe:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000d100:	6265      	str	r5, [r4, #36]	; 0x24
9000d102:	e43e      	b.n	9000c982 <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d104:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d106:	4620      	mov	r0, r4
9000d108:	69e1      	ldr	r1, [r4, #28]
9000d10a:	f7f4 facf 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000d10e:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d110:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000d112:	6262      	str	r2, [r4, #36]	; 0x24
9000d114:	e435      	b.n	9000c982 <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000d116:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d118:	69a0      	ldr	r0, [r4, #24]
9000d11a:	e5c7      	b.n	9000ccac <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d11c:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d11e:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000d120:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d122:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000d124:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d128:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000d12a:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d12c:	d010      	beq.n	9000d150 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d12e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d130:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d132:	5c28      	ldrb	r0, [r5, r0]
9000d134:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000d138:	6a20      	ldr	r0, [r4, #32]
9000d13a:	f100 0001 	add.w	r0, r0, #1
9000d13e:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d140:	d106      	bne.n	9000d150 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d142:	6a22      	ldr	r2, [r4, #32]
9000d144:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000d146:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d148:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000d14c:	3201      	adds	r2, #1
9000d14e:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000d150:	6419      	str	r1, [r3, #64]	; 0x40
9000d152:	e40a      	b.n	9000c96a <JPEG_Process+0x2a>

9000d154 <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000d154:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000d158:	3b03      	subs	r3, #3
9000d15a:	2b01      	cmp	r3, #1
9000d15c:	d900      	bls.n	9000d160 <HAL_JPEG_IRQHandler+0xc>
9000d15e:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000d160:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000d162:	f003 030c 	and.w	r3, r3, #12
9000d166:	2b08      	cmp	r3, #8
{
9000d168:	b530      	push	{r4, r5, lr}
9000d16a:	4604      	mov	r4, r0
9000d16c:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000d16e:	d006      	beq.n	9000d17e <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000d170:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000d172:	f003 030c 	and.w	r3, r3, #12
9000d176:	2b0c      	cmp	r3, #12
9000d178:	d006      	beq.n	9000d188 <HAL_JPEG_IRQHandler+0x34>
}
9000d17a:	b003      	add	sp, #12
9000d17c:	bd30      	pop	{r4, r5, pc}
9000d17e:	b003      	add	sp, #12
9000d180:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000d184:	f7ff bbdc 	b.w	9000c940 <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d188:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000d18a:	f003 0303 	and.w	r3, r3, #3
9000d18e:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000d190:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d192:	d045      	beq.n	9000d220 <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000d194:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d196:	0692      	lsls	r2, r2, #26
9000d198:	d5ef      	bpl.n	9000d17a <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000d19a:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000d19c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000d19e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000d1a2:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d1a4:	681a      	ldr	r2, [r3, #0]
9000d1a6:	f022 0201 	bic.w	r2, r2, #1
9000d1aa:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000d1ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000d1ae:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000d1b2:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000d1b4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000d1b6:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000d1ba:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000d1bc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000d1c0:	2b02      	cmp	r3, #2
9000d1c2:	d052      	beq.n	9000d26a <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000d1c4:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000d1c6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000d1ca:	2b02      	cmp	r3, #2
9000d1cc:	d03f      	beq.n	9000d24e <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000d1ce:	6803      	ldr	r3, [r0, #0]
9000d1d0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000d1d2:	695b      	ldr	r3, [r3, #20]
9000d1d4:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000d1d8:	1ad3      	subs	r3, r2, r3
9000d1da:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000d1dc:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d1de:	429a      	cmp	r2, r3
9000d1e0:	d046      	beq.n	9000d270 <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000d1e2:	6822      	ldr	r2, [r4, #0]
9000d1e4:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000d1e6:	f015 0510 	ands.w	r5, r5, #16
9000d1ea:	d135      	bne.n	9000d258 <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000d1ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d1ee:	2b00      	cmp	r3, #0
9000d1f0:	d149      	bne.n	9000d286 <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d1f2:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000d1f4:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d1f6:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d1f8:	f023 0301 	bic.w	r3, r3, #1
9000d1fc:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000d1fe:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d200:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d202:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000d206:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d20a:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d20e:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d210:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d212:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d214:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d218:	d032      	beq.n	9000d280 <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000d21a:	f7ff f9c9 	bl	9000c5b0 <HAL_JPEG_EncodeCpltCallback>
9000d21e:	e7ac      	b.n	9000d17a <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000d220:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d222:	0651      	lsls	r1, r2, #25
9000d224:	d5b6      	bpl.n	9000d194 <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000d226:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000d228:	9101      	str	r1, [sp, #4]
9000d22a:	f7fe ff33 	bl	9000c094 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000d22e:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000d230:	9901      	ldr	r1, [sp, #4]
9000d232:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000d234:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000d236:	f7f4 f9e3 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000d23a:	6823      	ldr	r3, [r4, #0]
9000d23c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000d23e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000d242:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000d244:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000d246:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000d24a:	639a      	str	r2, [r3, #56]	; 0x38
9000d24c:	e7a2      	b.n	9000d194 <HAL_JPEG_IRQHandler+0x40>
}
9000d24e:	b003      	add	sp, #12
9000d250:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000d254:	f000 bb30 	b.w	9000d8b8 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000d258:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000d25a:	049b      	lsls	r3, r3, #18
9000d25c:	d48d      	bmi.n	9000d17a <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000d25e:	4620      	mov	r0, r4
}
9000d260:	b003      	add	sp, #12
9000d262:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000d266:	f7ff ba0f 	b.w	9000c688 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000d26a:	f000 fb25 	bl	9000d8b8 <HAL_MDMA_Abort_IT>
9000d26e:	e7a9      	b.n	9000d1c4 <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d270:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d272:	4620      	mov	r0, r4
9000d274:	69e1      	ldr	r1, [r4, #28]
9000d276:	f7f4 fa19 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000d27a:	2300      	movs	r3, #0
9000d27c:	6263      	str	r3, [r4, #36]	; 0x24
9000d27e:	e7b0      	b.n	9000d1e2 <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d280:	f7f4 fa6a 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
9000d284:	e779      	b.n	9000d17a <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d286:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d288:	4620      	mov	r0, r4
9000d28a:	69e1      	ldr	r1, [r4, #28]
9000d28c:	f7f4 fa0e 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d290:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000d292:	6265      	str	r5, [r4, #36]	; 0x24
9000d294:	e7ad      	b.n	9000d1f2 <HAL_JPEG_IRQHandler+0x9e>
9000d296:	bf00      	nop

9000d298 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000d298:	2800      	cmp	r0, #0
9000d29a:	d067      	beq.n	9000d36c <HAL_LTDC_Init+0xd4>
{
9000d29c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000d29e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000d2a2:	4604      	mov	r4, r0
9000d2a4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000d2a8:	2b00      	cmp	r3, #0
9000d2aa:	d05a      	beq.n	9000d362 <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d2ac:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d2ae:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d2b0:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d2b4:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d2b8:	4302      	orrs	r2, r0
9000d2ba:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d2bc:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d2be:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000d2c0:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d2c2:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000d2c6:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000d2c8:	4929      	ldr	r1, [pc, #164]	; (9000d370 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d2ca:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d2cc:	6998      	ldr	r0, [r3, #24]
9000d2ce:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000d2d0:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d2d2:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000d2d4:	689a      	ldr	r2, [r3, #8]
9000d2d6:	400a      	ands	r2, r1
9000d2d8:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000d2da:	689a      	ldr	r2, [r3, #8]
9000d2dc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d2e0:	69a0      	ldr	r0, [r4, #24]
9000d2e2:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000d2e4:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000d2e6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000d2e8:	68da      	ldr	r2, [r3, #12]
9000d2ea:	400a      	ands	r2, r1
9000d2ec:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000d2ee:	68da      	ldr	r2, [r3, #12]
9000d2f0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d2f4:	6a20      	ldr	r0, [r4, #32]
9000d2f6:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000d2f8:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000d2fa:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000d2fc:	691a      	ldr	r2, [r3, #16]
9000d2fe:	400a      	ands	r2, r1
9000d300:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000d302:	691a      	ldr	r2, [r3, #16]
9000d304:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d308:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000d30a:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000d30c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000d30e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000d310:	695a      	ldr	r2, [r3, #20]
9000d312:	400a      	ands	r2, r1
9000d314:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000d316:	695a      	ldr	r2, [r3, #20]
9000d318:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000d31a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d31e:	430a      	orrs	r2, r1
9000d320:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d322:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000d324:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d328:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000d32c:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d330:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000d332:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000d334:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000d338:	432a      	orrs	r2, r5
9000d33a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000d33e:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000d340:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000d344:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000d346:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d348:	f042 0206 	orr.w	r2, r2, #6
9000d34c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000d34e:	699a      	ldr	r2, [r3, #24]
9000d350:	f042 0201 	orr.w	r2, r2, #1
9000d354:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000d356:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000d358:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000d35c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000d360:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000d362:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000d366:	f7f5 fed5 	bl	90003114 <HAL_LTDC_MspInit>
9000d36a:	e79f      	b.n	9000d2ac <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000d36c:	2001      	movs	r0, #1
}
9000d36e:	4770      	bx	lr
9000d370:	f000f800 	.word	0xf000f800

9000d374 <HAL_LTDC_ErrorCallback>:
9000d374:	4770      	bx	lr
9000d376:	bf00      	nop

9000d378 <HAL_LTDC_ReloadEventCallback>:
9000d378:	4770      	bx	lr
9000d37a:	bf00      	nop

9000d37c <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000d37c:	6803      	ldr	r3, [r0, #0]
{
9000d37e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000d380:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000d382:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000d384:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000d386:	076a      	lsls	r2, r5, #29
9000d388:	d501      	bpl.n	9000d38e <HAL_LTDC_IRQHandler+0x12>
9000d38a:	0771      	lsls	r1, r6, #29
9000d38c:	d41d      	bmi.n	9000d3ca <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000d38e:	07aa      	lsls	r2, r5, #30
9000d390:	d501      	bpl.n	9000d396 <HAL_LTDC_IRQHandler+0x1a>
9000d392:	07b3      	lsls	r3, r6, #30
9000d394:	d42d      	bmi.n	9000d3f2 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000d396:	07e8      	lsls	r0, r5, #31
9000d398:	d501      	bpl.n	9000d39e <HAL_LTDC_IRQHandler+0x22>
9000d39a:	07f1      	lsls	r1, r6, #31
9000d39c:	d440      	bmi.n	9000d420 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000d39e:	072a      	lsls	r2, r5, #28
9000d3a0:	d501      	bpl.n	9000d3a6 <HAL_LTDC_IRQHandler+0x2a>
9000d3a2:	0733      	lsls	r3, r6, #28
9000d3a4:	d400      	bmi.n	9000d3a8 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000d3a6:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000d3a8:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000d3aa:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000d3ac:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000d3ae:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000d3b0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d3b2:	f022 0208 	bic.w	r2, r2, #8
9000d3b6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000d3b8:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000d3ba:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000d3bc:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d3c0:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000d3c4:	f7ff ffd8 	bl	9000d378 <HAL_LTDC_ReloadEventCallback>
}
9000d3c8:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000d3ca:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d3cc:	f022 0204 	bic.w	r2, r2, #4
9000d3d0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000d3d2:	2204      	movs	r2, #4
9000d3d4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000d3d6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000d3da:	f043 0301 	orr.w	r3, r3, #1
9000d3de:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000d3e2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d3e4:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d3e8:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000d3ec:	f7ff ffc2 	bl	9000d374 <HAL_LTDC_ErrorCallback>
9000d3f0:	e7cd      	b.n	9000d38e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000d3f2:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000d3f4:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000d3f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d3f8:	f022 0202 	bic.w	r2, r2, #2
9000d3fc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000d3fe:	2202      	movs	r2, #2
9000d400:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d402:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000d404:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000d408:	f043 0302 	orr.w	r3, r3, #2
9000d40c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000d410:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d412:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d416:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000d41a:	f7ff ffab 	bl	9000d374 <HAL_LTDC_ErrorCallback>
9000d41e:	e7ba      	b.n	9000d396 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d420:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000d422:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d424:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d426:	f022 0201 	bic.w	r2, r2, #1
9000d42a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000d42c:	2201      	movs	r2, #1
9000d42e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000d430:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000d432:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d436:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000d43a:	f7f5 f9e1 	bl	90002800 <HAL_LTDC_LineEventCallback>
9000d43e:	e7ae      	b.n	9000d39e <HAL_LTDC_IRQHandler+0x22>

9000d440 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000d440:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000d444:	2b01      	cmp	r3, #1
9000d446:	f000 80c0 	beq.w	9000d5ca <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d44a:	2302      	movs	r3, #2
{
9000d44c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d450:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d454:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d458:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000d45c:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d45e:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d462:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d464:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d468:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d46a:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000d46e:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d470:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000d474:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d476:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d47a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d47e:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000d5e0 <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d482:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000d486:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000d48a:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d48c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000d48e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d492:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d494:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d496:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d49a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000d49c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d4a0:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d4a2:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d4a4:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d4a8:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000d4aa:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d4ac:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d4b0:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000d4b4:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d4b6:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d4b8:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000d4bc:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d4c0:	440b      	add	r3, r1
9000d4c2:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000d4c6:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d4ca:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d4ce:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d4d2:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d4d6:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d4da:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d4dc:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000d4e0:	68ab      	ldr	r3, [r5, #8]
9000d4e2:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000d4e6:	3301      	adds	r3, #1
9000d4e8:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000d4ec:	4403      	add	r3, r0
9000d4ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000d4f2:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000d4f4:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000d4f8:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000d4fc:	f023 0307 	bic.w	r3, r3, #7
9000d500:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000d504:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000d508:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000d50c:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000d50e:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000d512:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000d516:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000d51a:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000d51e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000d522:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000d526:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000d52a:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000d52e:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000d532:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000d536:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000d53a:	696b      	ldr	r3, [r5, #20]
9000d53c:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d540:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d544:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d546:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d54a:	6a28      	ldr	r0, [r5, #32]
9000d54c:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d54e:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d552:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000d556:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000d55a:	2300      	movs	r3, #0
9000d55c:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000d560:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000d562:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000d566:	bb59      	cbnz	r1, 9000d5c0 <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000d568:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d56a:	1abf      	subs	r7, r7, r2
9000d56c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000d56e:	fb03 f707 	mul.w	r7, r3, r7
9000d572:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000d576:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d578:	3707      	adds	r7, #7
9000d57a:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000d57e:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000d582:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000d586:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d58a:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000d58e:	4b12      	ldr	r3, [pc, #72]	; (9000d5d8 <HAL_LTDC_ConfigLayer+0x198>)
9000d590:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000d594:	400b      	ands	r3, r1
9000d596:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000d59a:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000d59e:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000d5a0:	f859 3006 	ldr.w	r3, [r9, r6]
9000d5a4:	4313      	orrs	r3, r2
9000d5a6:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000d5aa:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000d5ac:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000d5b0:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000d5b2:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000d5b6:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000d5ba:	b003      	add	sp, #12
9000d5bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000d5c0:	3901      	subs	r1, #1
9000d5c2:	2906      	cmp	r1, #6
9000d5c4:	d903      	bls.n	9000d5ce <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000d5c6:	2301      	movs	r3, #1
9000d5c8:	e7cf      	b.n	9000d56a <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000d5ca:	2002      	movs	r0, #2
}
9000d5cc:	4770      	bx	lr
9000d5ce:	4b03      	ldr	r3, [pc, #12]	; (9000d5dc <HAL_LTDC_ConfigLayer+0x19c>)
9000d5d0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000d5d4:	e7c9      	b.n	9000d56a <HAL_LTDC_ConfigLayer+0x12a>
9000d5d6:	bf00      	nop
9000d5d8:	fffff800 	.word	0xfffff800
9000d5dc:	9002d638 	.word	0x9002d638
9000d5e0:	fffff8f8 	.word	0xfffff8f8

9000d5e4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000d5e4:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000d5e8:	2a01      	cmp	r2, #1
9000d5ea:	d019      	beq.n	9000d620 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d5ec:	6802      	ldr	r2, [r0, #0]
9000d5ee:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d5f0:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000d5f2:	f04f 0c00 	mov.w	ip, #0
{
9000d5f6:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d5f8:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d5fc:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000d5fe:	4c09      	ldr	r4, [pc, #36]	; (9000d624 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d600:	f020 0001 	bic.w	r0, r0, #1
9000d604:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000d606:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000d608:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000d60a:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000d60c:	4301      	orrs	r1, r0
9000d60e:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000d610:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000d614:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000d616:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000d61a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d61e:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000d620:	2002      	movs	r0, #2
}
9000d622:	4770      	bx	lr
9000d624:	50001000 	.word	0x50001000

9000d628 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000d628:	b538      	push	{r3, r4, r5, lr}
9000d62a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000d62c:	f7fd f984 	bl	9000a938 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000d630:	2c00      	cmp	r4, #0
9000d632:	d05a      	beq.n	9000d6ea <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000d634:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000d636:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000d638:	2100      	movs	r1, #0
9000d63a:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000d63c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000d640:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000d644:	68da      	ldr	r2, [r3, #12]
9000d646:	f022 0201 	bic.w	r2, r2, #1
9000d64a:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000d64c:	e005      	b.n	9000d65a <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000d64e:	f7fd f973 	bl	9000a938 <HAL_GetTick>
9000d652:	1b43      	subs	r3, r0, r5
9000d654:	2b05      	cmp	r3, #5
9000d656:	d841      	bhi.n	9000d6dc <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000d658:	6823      	ldr	r3, [r4, #0]
9000d65a:	68da      	ldr	r2, [r3, #12]
9000d65c:	07d2      	lsls	r2, r2, #31
9000d65e:	d4f6      	bmi.n	9000d64e <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d660:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000d664:	69e0      	ldr	r0, [r4, #28]
9000d666:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d668:	68e1      	ldr	r1, [r4, #12]
9000d66a:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d66c:	4302      	orrs	r2, r0
9000d66e:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d670:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d672:	4302      	orrs	r2, r0
9000d674:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000d676:	4302      	orrs	r2, r0
9000d678:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000d67a:	4302      	orrs	r2, r0
9000d67c:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000d67e:	4302      	orrs	r2, r0
9000d680:	68a0      	ldr	r0, [r4, #8]
9000d682:	4302      	orrs	r2, r0
9000d684:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000d686:	3801      	subs	r0, #1
9000d688:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d68c:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d68e:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d690:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000d694:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d696:	d103      	bne.n	9000d6a0 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000d698:	691a      	ldr	r2, [r3, #16]
9000d69a:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000d69e:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000d6a0:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000d6a2:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000d6a4:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000d6a6:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000d6a8:	db30      	blt.n	9000d70c <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000d6aa:	b292      	uxth	r2, r2
9000d6ac:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000d6ae:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000d6b0:	2a00      	cmp	r2, #0
9000d6b2:	db1c      	blt.n	9000d6ee <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d6b4:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d6b6:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d6ba:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000d6be:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d6c0:	d021      	beq.n	9000d706 <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000d6c2:	b2c0      	uxtb	r0, r0
9000d6c4:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000d6c6:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000d6c8:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000d6ca:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000d6cc:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d6ce:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000d6d0:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000d6d2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000d6d6:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000d6da:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000d6dc:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000d6de:	2303      	movs	r3, #3
      return HAL_ERROR;
9000d6e0:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000d6e2:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000d6e4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000d6e8:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000d6ea:	2001      	movs	r0, #1
}
9000d6ec:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000d6ee:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000d6f0:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d6f2:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000d6f6:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000d6fa:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d6fc:	6a19      	ldr	r1, [r3, #32]
9000d6fe:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000d702:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d704:	d1dd      	bne.n	9000d6c2 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000d706:	2200      	movs	r2, #0
9000d708:	629a      	str	r2, [r3, #40]	; 0x28
9000d70a:	e7dc      	b.n	9000d6c6 <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d70c:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000d70e:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d710:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000d714:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d716:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000d718:	621a      	str	r2, [r3, #32]
9000d71a:	e7c8      	b.n	9000d6ae <HAL_MDMA_Init+0x86>

9000d71c <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000d71c:	b1f8      	cbz	r0, 9000d75e <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000d71e:	6802      	ldr	r2, [r0, #0]
9000d720:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000d722:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000d724:	68d0      	ldr	r0, [r2, #12]
{
9000d726:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000d728:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000d72c:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000d72e:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000d730:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000d732:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000d734:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000d736:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000d738:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000d73a:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000d73c:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000d73e:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000d740:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000d742:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000d744:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000d746:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d748:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000d74a:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000d74e:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000d752:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000d756:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000d758:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000d75c:	4770      	bx	lr
    return HAL_ERROR;
9000d75e:	2001      	movs	r0, #1
}
9000d760:	4770      	bx	lr
9000d762:	bf00      	nop

9000d764 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000d764:	b310      	cbz	r0, 9000d7ac <HAL_MDMA_ConfigPostRequestMask+0x48>
9000d766:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000d768:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000d76c:	2801      	cmp	r0, #1
9000d76e:	d01f      	beq.n	9000d7b0 <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000d770:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000d772:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d776:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000d77a:	45f4      	cmp	ip, lr
9000d77c:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000d780:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d784:	d004      	beq.n	9000d790 <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000d786:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000d788:	2200      	movs	r2, #0
9000d78a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000d78e:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000d790:	681d      	ldr	r5, [r3, #0]
9000d792:	692c      	ldr	r4, [r5, #16]
9000d794:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000d798:	d1f6      	bne.n	9000d788 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000d79a:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000d79c:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d79e:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000d7a0:	b941      	cbnz	r1, 9000d7b4 <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d7a2:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000d7a6:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d7a8:	612a      	str	r2, [r5, #16]
9000d7aa:	e7ed      	b.n	9000d788 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000d7ac:	2001      	movs	r0, #1
9000d7ae:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000d7b0:	2002      	movs	r0, #2
}
9000d7b2:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000d7b4:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000d7b8:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000d7ba:	612a      	str	r2, [r5, #16]
9000d7bc:	e7e4      	b.n	9000d788 <HAL_MDMA_ConfigPostRequestMask+0x24>
9000d7be:	bf00      	nop

9000d7c0 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000d7c0:	2800      	cmp	r0, #0
9000d7c2:	d06f      	beq.n	9000d8a4 <HAL_MDMA_Start_IT+0xe4>
9000d7c4:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000d7c6:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000d7ca:	2801      	cmp	r0, #1
9000d7cc:	d072      	beq.n	9000d8b4 <HAL_MDMA_Start_IT+0xf4>
9000d7ce:	2001      	movs	r0, #1
9000d7d0:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d7d4:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000d7d8:	2801      	cmp	r0, #1
9000d7da:	d004      	beq.n	9000d7e6 <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000d7dc:	2300      	movs	r3, #0
    return HAL_BUSY;
9000d7de:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000d7e0:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000d7e4:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000d7e6:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000d7e8:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000d7ec:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000d7f0:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000d7f2:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000d7f4:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d7f8:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000d7fc:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000d800:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d804:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000d808:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000d80c:	68e5      	ldr	r5, [r4, #12]
9000d80e:	f025 0501 	bic.w	r5, r5, #1
9000d812:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000d814:	6965      	ldr	r5, [r4, #20]
9000d816:	ea00 0005 	and.w	r0, r0, r5
9000d81a:	ea40 0003 	orr.w	r0, r0, r3
9000d81e:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000d820:	6963      	ldr	r3, [r4, #20]
9000d822:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000d826:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000d82a:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000d82c:	f04f 031f 	mov.w	r3, #31
9000d830:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000d832:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000d834:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000d836:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000d838:	bf0c      	ite	eq
9000d83a:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000d83e:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000d842:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000d846:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000d84a:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000d84c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000d84e:	bf0c      	ite	eq
9000d850:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000d854:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000d858:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000d85a:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000d85e:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000d860:	68e3      	ldr	r3, [r4, #12]
9000d862:	f043 0306 	orr.w	r3, r3, #6
9000d866:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000d868:	b11a      	cbz	r2, 9000d872 <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000d86a:	68e3      	ldr	r3, [r4, #12]
9000d86c:	f043 0310 	orr.w	r3, r3, #16
9000d870:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000d872:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000d876:	b11b      	cbz	r3, 9000d880 <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000d878:	68e3      	ldr	r3, [r4, #12]
9000d87a:	f043 0308 	orr.w	r3, r3, #8
9000d87e:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000d880:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000d884:	b11b      	cbz	r3, 9000d88e <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000d886:	68e3      	ldr	r3, [r4, #12]
9000d888:	f043 0320 	orr.w	r3, r3, #32
9000d88c:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000d88e:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d890:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000d894:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d898:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000d89c:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d89e:	d003      	beq.n	9000d8a8 <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000d8a0:	2000      	movs	r0, #0
}
9000d8a2:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000d8a4:	2001      	movs	r0, #1
9000d8a6:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000d8a8:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000d8aa:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000d8ac:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000d8b0:	60e3      	str	r3, [r4, #12]
}
9000d8b2:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000d8b4:	2002      	movs	r0, #2
}
9000d8b6:	4770      	bx	lr

9000d8b8 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000d8b8:	4603      	mov	r3, r0
9000d8ba:	b188      	cbz	r0, 9000d8e0 <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000d8bc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000d8c0:	2a02      	cmp	r2, #2
9000d8c2:	d003      	beq.n	9000d8cc <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000d8c4:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000d8c6:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000d8c8:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000d8ca:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000d8cc:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d8ce:	2104      	movs	r1, #4
  return HAL_OK;
9000d8d0:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d8d2:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000d8d6:	68d3      	ldr	r3, [r2, #12]
9000d8d8:	f023 0301 	bic.w	r3, r3, #1
9000d8dc:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000d8de:	4770      	bx	lr
    return HAL_ERROR;
9000d8e0:	2001      	movs	r0, #1
}
9000d8e2:	4770      	bx	lr

9000d8e4 <HAL_MDMA_IRQHandler>:
{
9000d8e4:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000d8e6:	2300      	movs	r3, #0
{
9000d8e8:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d8ea:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000d8ee:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000d8f0:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d8f2:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000d8f4:	4b57      	ldr	r3, [pc, #348]	; (9000da54 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d8f6:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d8f8:	4a57      	ldr	r2, [pc, #348]	; (9000da58 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000d8fa:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d8fc:	6823      	ldr	r3, [r4, #0]
9000d8fe:	441a      	add	r2, r3
9000d900:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000d904:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d908:	4202      	tst	r2, r0
9000d90a:	f000 80a0 	beq.w	9000da4e <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000d90e:	681a      	ldr	r2, [r3, #0]
9000d910:	07d1      	lsls	r1, r2, #31
9000d912:	d529      	bpl.n	9000d968 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000d914:	68da      	ldr	r2, [r3, #12]
9000d916:	0792      	lsls	r2, r2, #30
9000d918:	d526      	bpl.n	9000d968 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000d91a:	68da      	ldr	r2, [r3, #12]
9000d91c:	f022 0202 	bic.w	r2, r2, #2
9000d920:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000d922:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000d924:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000d926:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000d928:	bf54      	ite	pl
9000d92a:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000d92e:	f041 0102 	orrmi.w	r1, r1, #2
9000d932:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000d934:	0591      	lsls	r1, r2, #22
9000d936:	d503      	bpl.n	9000d940 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000d938:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d93a:	f041 0104 	orr.w	r1, r1, #4
9000d93e:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000d940:	05d0      	lsls	r0, r2, #23
9000d942:	d503      	bpl.n	9000d94c <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000d944:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d946:	f041 0108 	orr.w	r1, r1, #8
9000d94a:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000d94c:	0551      	lsls	r1, r2, #21
9000d94e:	d503      	bpl.n	9000d958 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000d950:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d952:	f041 0110 	orr.w	r1, r1, #16
9000d956:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000d958:	0510      	lsls	r0, r2, #20
9000d95a:	d503      	bpl.n	9000d964 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000d95c:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000d95e:	f042 0220 	orr.w	r2, r2, #32
9000d962:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000d964:	2201      	movs	r2, #1
9000d966:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000d968:	681a      	ldr	r2, [r3, #0]
9000d96a:	06d1      	lsls	r1, r2, #27
9000d96c:	d509      	bpl.n	9000d982 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000d96e:	68da      	ldr	r2, [r3, #12]
9000d970:	0692      	lsls	r2, r2, #26
9000d972:	d506      	bpl.n	9000d982 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000d974:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000d976:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000d978:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000d97a:	b112      	cbz	r2, 9000d982 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000d97c:	4620      	mov	r0, r4
9000d97e:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000d980:	6823      	ldr	r3, [r4, #0]
9000d982:	681a      	ldr	r2, [r3, #0]
9000d984:	0710      	lsls	r0, r2, #28
9000d986:	d509      	bpl.n	9000d99c <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000d988:	68da      	ldr	r2, [r3, #12]
9000d98a:	06d1      	lsls	r1, r2, #27
9000d98c:	d506      	bpl.n	9000d99c <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000d98e:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000d990:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000d992:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000d994:	b112      	cbz	r2, 9000d99c <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000d996:	4620      	mov	r0, r4
9000d998:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000d99a:	6823      	ldr	r3, [r4, #0]
9000d99c:	681a      	ldr	r2, [r3, #0]
9000d99e:	0752      	lsls	r2, r2, #29
9000d9a0:	d509      	bpl.n	9000d9b6 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000d9a2:	68da      	ldr	r2, [r3, #12]
9000d9a4:	0710      	lsls	r0, r2, #28
9000d9a6:	d506      	bpl.n	9000d9b6 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000d9a8:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000d9aa:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000d9ac:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000d9ae:	b112      	cbz	r2, 9000d9b6 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000d9b0:	4620      	mov	r0, r4
9000d9b2:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000d9b4:	6823      	ldr	r3, [r4, #0]
9000d9b6:	681a      	ldr	r2, [r3, #0]
9000d9b8:	0791      	lsls	r1, r2, #30
9000d9ba:	d516      	bpl.n	9000d9ea <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000d9bc:	68da      	ldr	r2, [r3, #12]
9000d9be:	0752      	lsls	r2, r2, #29
9000d9c0:	d513      	bpl.n	9000d9ea <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000d9c2:	68da      	ldr	r2, [r3, #12]
9000d9c4:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000d9c8:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000d9ca:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000d9ce:	2a04      	cmp	r2, #4
9000d9d0:	d034      	beq.n	9000da3c <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000d9d2:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000d9d4:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000d9d6:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000d9d8:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000d9da:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000d9dc:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000d9e0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000d9e4:	b10b      	cbz	r3, 9000d9ea <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000d9e6:	4620      	mov	r0, r4
9000d9e8:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000d9ea:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000d9ec:	2b00      	cmp	r3, #0
9000d9ee:	d02e      	beq.n	9000da4e <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000d9f0:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d9f2:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000d9f4:	4b19      	ldr	r3, [pc, #100]	; (9000da5c <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d9f6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000d9fa:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000d9fe:	68cb      	ldr	r3, [r1, #12]
9000da00:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000da04:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000da06:	60cb      	str	r3, [r1, #12]
9000da08:	e002      	b.n	9000da10 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000da0a:	68cb      	ldr	r3, [r1, #12]
9000da0c:	07d8      	lsls	r0, r3, #31
9000da0e:	d504      	bpl.n	9000da1a <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000da10:	9b01      	ldr	r3, [sp, #4]
9000da12:	3301      	adds	r3, #1
9000da14:	4293      	cmp	r3, r2
9000da16:	9301      	str	r3, [sp, #4]
9000da18:	d9f7      	bls.n	9000da0a <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000da1a:	2300      	movs	r3, #0
9000da1c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000da20:	68cb      	ldr	r3, [r1, #12]
9000da22:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000da24:	bf4c      	ite	mi
9000da26:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000da28:	2301      	movpl	r3, #1
9000da2a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000da2e:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000da30:	b16b      	cbz	r3, 9000da4e <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000da32:	4620      	mov	r0, r4
}
9000da34:	b003      	add	sp, #12
9000da36:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000da3a:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000da3c:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000da3e:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000da40:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000da42:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000da46:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000da4a:	2b00      	cmp	r3, #0
9000da4c:	d1f1      	bne.n	9000da32 <HAL_MDMA_IRQHandler+0x14e>
}
9000da4e:	b003      	add	sp, #12
9000da50:	bd30      	pop	{r4, r5, pc}
9000da52:	bf00      	nop
9000da54:	24000070 	.word	0x24000070
9000da58:	adffffc0 	.word	0xadffffc0
9000da5c:	1b4e81b5 	.word	0x1b4e81b5

9000da60 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000da60:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000da62:	4c10      	ldr	r4, [pc, #64]	; (9000daa4 <HAL_PWREx_ConfigSupply+0x44>)
9000da64:	68e3      	ldr	r3, [r4, #12]
9000da66:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000da6a:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000da6c:	d105      	bne.n	9000da7a <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000da6e:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000da72:	1a18      	subs	r0, r3, r0
9000da74:	bf18      	it	ne
9000da76:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000da78:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000da7a:	f023 0307 	bic.w	r3, r3, #7
9000da7e:	4303      	orrs	r3, r0
9000da80:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000da82:	f7fc ff59 	bl	9000a938 <HAL_GetTick>
9000da86:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000da88:	e005      	b.n	9000da96 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000da8a:	f7fc ff55 	bl	9000a938 <HAL_GetTick>
9000da8e:	1b40      	subs	r0, r0, r5
9000da90:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000da94:	d804      	bhi.n	9000daa0 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000da96:	6863      	ldr	r3, [r4, #4]
9000da98:	049b      	lsls	r3, r3, #18
9000da9a:	d5f6      	bpl.n	9000da8a <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000da9c:	2000      	movs	r0, #0
}
9000da9e:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000daa0:	2001      	movs	r0, #1
}
9000daa2:	bd38      	pop	{r3, r4, r5, pc}
9000daa4:	58024800 	.word	0x58024800

9000daa8 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000daa8:	4b3b      	ldr	r3, [pc, #236]	; (9000db98 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000daaa:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000daac:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000daae:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000dab0:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000dab2:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000dab6:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000dab8:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000dabc:	d038      	beq.n	9000db30 <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000dabe:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000dac2:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000dac6:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000daca:	fb05 f101 	mul.w	r1, r5, r1
9000dace:	2a01      	cmp	r2, #1
9000dad0:	ee07 1a90 	vmov	s15, r1
9000dad4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000dad8:	d002      	beq.n	9000dae0 <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000dada:	2a02      	cmp	r2, #2
9000dadc:	d04e      	beq.n	9000db7c <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000dade:	b34a      	cbz	r2, 9000db34 <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dae0:	ee07 0a90 	vmov	s15, r0
9000dae4:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000db9c <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000dae8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000daec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000daee:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000daf2:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000dba0 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000daf6:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000dafa:	ee07 3a90 	vmov	s15, r3
9000dafe:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000db02:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000db06:	eee7 7a25 	vfma.f32	s15, s14, s11
9000db0a:	ee77 7a86 	vadd.f32	s15, s15, s12
9000db0e:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000db12:	4b21      	ldr	r3, [pc, #132]	; (9000db98 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000db14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000db16:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000db1a:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000db1c:	ee07 3a90 	vmov	s15, r3
9000db20:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000db24:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000db28:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000db2c:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000db30:	bc30      	pop	{r4, r5}
9000db32:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000db34:	681a      	ldr	r2, [r3, #0]
9000db36:	0692      	lsls	r2, r2, #26
9000db38:	d527      	bpl.n	9000db8a <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000db3a:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000db3c:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000db40:	4a18      	ldr	r2, [pc, #96]	; (9000dba4 <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000db42:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000db46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000db48:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000db4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000db50:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000dba0 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000db54:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000db58:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000db5a:	ee06 3a90 	vmov	s13, r3
9000db5e:	ee06 2a10 	vmov	s12, r2
9000db62:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000db66:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000db6a:	eee7 6a05 	vfma.f32	s13, s14, s10
9000db6e:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000db72:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000db76:	ee66 6a87 	vmul.f32	s13, s13, s14
9000db7a:	e7ca      	b.n	9000db12 <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000db7c:	ee07 0a90 	vmov	s15, r0
9000db80:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000dba8 <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000db84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000db88:	e7b0      	b.n	9000daec <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000db8a:	ee07 0a90 	vmov	s15, r0
9000db8e:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000dbac <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000db92:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000db96:	e7a9      	b.n	9000daec <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000db98:	58024400 	.word	0x58024400
9000db9c:	4a742400 	.word	0x4a742400
9000dba0:	39000000 	.word	0x39000000
9000dba4:	03d09000 	.word	0x03d09000
9000dba8:	4bbebc20 	.word	0x4bbebc20
9000dbac:	4c742400 	.word	0x4c742400

9000dbb0 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000dbb0:	2800      	cmp	r0, #0
9000dbb2:	f000 81e8 	beq.w	9000df86 <HAL_RCC_OscConfig+0x3d6>
{
9000dbb6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000dbb8:	6803      	ldr	r3, [r0, #0]
9000dbba:	4604      	mov	r4, r0
9000dbbc:	07d9      	lsls	r1, r3, #31
9000dbbe:	d52e      	bpl.n	9000dc1e <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000dbc0:	49a4      	ldr	r1, [pc, #656]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
9000dbc2:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000dbc4:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000dbc6:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000dbca:	2a10      	cmp	r2, #16
9000dbcc:	f000 8107 	beq.w	9000ddde <HAL_RCC_OscConfig+0x22e>
9000dbd0:	2a18      	cmp	r2, #24
9000dbd2:	f000 80ff 	beq.w	9000ddd4 <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000dbd6:	6863      	ldr	r3, [r4, #4]
9000dbd8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000dbdc:	f000 812a 	beq.w	9000de34 <HAL_RCC_OscConfig+0x284>
9000dbe0:	2b00      	cmp	r3, #0
9000dbe2:	f000 8168 	beq.w	9000deb6 <HAL_RCC_OscConfig+0x306>
9000dbe6:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000dbea:	4b9a      	ldr	r3, [pc, #616]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
9000dbec:	681a      	ldr	r2, [r3, #0]
9000dbee:	f000 8289 	beq.w	9000e104 <HAL_RCC_OscConfig+0x554>
9000dbf2:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000dbf6:	601a      	str	r2, [r3, #0]
9000dbf8:	681a      	ldr	r2, [r3, #0]
9000dbfa:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000dbfe:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000dc00:	f7fc fe9a 	bl	9000a938 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000dc04:	4e93      	ldr	r6, [pc, #588]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000dc06:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000dc08:	e005      	b.n	9000dc16 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000dc0a:	f7fc fe95 	bl	9000a938 <HAL_GetTick>
9000dc0e:	1b40      	subs	r0, r0, r5
9000dc10:	2864      	cmp	r0, #100	; 0x64
9000dc12:	f200 814e 	bhi.w	9000deb2 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000dc16:	6833      	ldr	r3, [r6, #0]
9000dc18:	039b      	lsls	r3, r3, #14
9000dc1a:	d5f6      	bpl.n	9000dc0a <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000dc1c:	6823      	ldr	r3, [r4, #0]
9000dc1e:	079d      	lsls	r5, r3, #30
9000dc20:	f100 808a 	bmi.w	9000dd38 <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000dc24:	06d9      	lsls	r1, r3, #27
9000dc26:	d533      	bpl.n	9000dc90 <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000dc28:	4a8a      	ldr	r2, [pc, #552]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
9000dc2a:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000dc2c:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000dc2e:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000dc32:	2b08      	cmp	r3, #8
9000dc34:	f000 80e3 	beq.w	9000ddfe <HAL_RCC_OscConfig+0x24e>
9000dc38:	2b18      	cmp	r3, #24
9000dc3a:	f000 80db 	beq.w	9000ddf4 <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000dc3e:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000dc40:	4d84      	ldr	r5, [pc, #528]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000dc42:	2b00      	cmp	r3, #0
9000dc44:	f000 816f 	beq.w	9000df26 <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000dc48:	682b      	ldr	r3, [r5, #0]
9000dc4a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000dc4e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dc50:	f7fc fe72 	bl	9000a938 <HAL_GetTick>
9000dc54:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000dc56:	e005      	b.n	9000dc64 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000dc58:	f7fc fe6e 	bl	9000a938 <HAL_GetTick>
9000dc5c:	1b80      	subs	r0, r0, r6
9000dc5e:	2802      	cmp	r0, #2
9000dc60:	f200 8127 	bhi.w	9000deb2 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000dc64:	682b      	ldr	r3, [r5, #0]
9000dc66:	05db      	lsls	r3, r3, #23
9000dc68:	d5f6      	bpl.n	9000dc58 <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000dc6a:	f7fc fe6b 	bl	9000a944 <HAL_GetREVID>
9000dc6e:	f241 0303 	movw	r3, #4099	; 0x1003
9000dc72:	4298      	cmp	r0, r3
9000dc74:	f200 826d 	bhi.w	9000e152 <HAL_RCC_OscConfig+0x5a2>
9000dc78:	6a22      	ldr	r2, [r4, #32]
9000dc7a:	686b      	ldr	r3, [r5, #4]
9000dc7c:	2a20      	cmp	r2, #32
9000dc7e:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000dc82:	bf0c      	ite	eq
9000dc84:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000dc88:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000dc8c:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000dc8e:	6823      	ldr	r3, [r4, #0]
9000dc90:	071d      	lsls	r5, r3, #28
9000dc92:	d516      	bpl.n	9000dcc2 <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000dc94:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000dc96:	4d6f      	ldr	r5, [pc, #444]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000dc98:	2b00      	cmp	r3, #0
9000dc9a:	f000 8122 	beq.w	9000dee2 <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000dc9e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000dca0:	f043 0301 	orr.w	r3, r3, #1
9000dca4:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000dca6:	f7fc fe47 	bl	9000a938 <HAL_GetTick>
9000dcaa:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000dcac:	e005      	b.n	9000dcba <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000dcae:	f7fc fe43 	bl	9000a938 <HAL_GetTick>
9000dcb2:	1b80      	subs	r0, r0, r6
9000dcb4:	2802      	cmp	r0, #2
9000dcb6:	f200 80fc 	bhi.w	9000deb2 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000dcba:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000dcbc:	0798      	lsls	r0, r3, #30
9000dcbe:	d5f6      	bpl.n	9000dcae <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000dcc0:	6823      	ldr	r3, [r4, #0]
9000dcc2:	069a      	lsls	r2, r3, #26
9000dcc4:	d516      	bpl.n	9000dcf4 <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000dcc6:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000dcc8:	4d62      	ldr	r5, [pc, #392]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000dcca:	2b00      	cmp	r3, #0
9000dccc:	f000 811a 	beq.w	9000df04 <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000dcd0:	682b      	ldr	r3, [r5, #0]
9000dcd2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000dcd6:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000dcd8:	f7fc fe2e 	bl	9000a938 <HAL_GetTick>
9000dcdc:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000dcde:	e005      	b.n	9000dcec <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000dce0:	f7fc fe2a 	bl	9000a938 <HAL_GetTick>
9000dce4:	1b80      	subs	r0, r0, r6
9000dce6:	2802      	cmp	r0, #2
9000dce8:	f200 80e3 	bhi.w	9000deb2 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000dcec:	682b      	ldr	r3, [r5, #0]
9000dcee:	049f      	lsls	r7, r3, #18
9000dcf0:	d5f6      	bpl.n	9000dce0 <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000dcf2:	6823      	ldr	r3, [r4, #0]
9000dcf4:	0759      	lsls	r1, r3, #29
9000dcf6:	f100 80a3 	bmi.w	9000de40 <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000dcfa:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000dcfc:	b1d0      	cbz	r0, 9000dd34 <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000dcfe:	4d55      	ldr	r5, [pc, #340]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
9000dd00:	692b      	ldr	r3, [r5, #16]
9000dd02:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000dd06:	2b18      	cmp	r3, #24
9000dd08:	f000 81ae 	beq.w	9000e068 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000dd0c:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000dd0e:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000dd10:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000dd14:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000dd16:	f000 8142 	beq.w	9000df9e <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000dd1a:	f7fc fe0d 	bl	9000a938 <HAL_GetTick>
9000dd1e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000dd20:	e005      	b.n	9000dd2e <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000dd22:	f7fc fe09 	bl	9000a938 <HAL_GetTick>
9000dd26:	1b00      	subs	r0, r0, r4
9000dd28:	2802      	cmp	r0, #2
9000dd2a:	f200 80c2 	bhi.w	9000deb2 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000dd2e:	682b      	ldr	r3, [r5, #0]
9000dd30:	019b      	lsls	r3, r3, #6
9000dd32:	d4f6      	bmi.n	9000dd22 <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000dd34:	2000      	movs	r0, #0
}
9000dd36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000dd38:	4a46      	ldr	r2, [pc, #280]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
9000dd3a:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000dd3c:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000dd3e:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000dd42:	d12d      	bne.n	9000dda0 <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000dd44:	4b43      	ldr	r3, [pc, #268]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
9000dd46:	68e2      	ldr	r2, [r4, #12]
9000dd48:	681b      	ldr	r3, [r3, #0]
9000dd4a:	0759      	lsls	r1, r3, #29
9000dd4c:	d501      	bpl.n	9000dd52 <HAL_RCC_OscConfig+0x1a2>
9000dd4e:	2a00      	cmp	r2, #0
9000dd50:	d04e      	beq.n	9000ddf0 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000dd52:	4d40      	ldr	r5, [pc, #256]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
9000dd54:	682b      	ldr	r3, [r5, #0]
9000dd56:	f023 0319 	bic.w	r3, r3, #25
9000dd5a:	4313      	orrs	r3, r2
9000dd5c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dd5e:	f7fc fdeb 	bl	9000a938 <HAL_GetTick>
9000dd62:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000dd64:	e005      	b.n	9000dd72 <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000dd66:	f7fc fde7 	bl	9000a938 <HAL_GetTick>
9000dd6a:	1b80      	subs	r0, r0, r6
9000dd6c:	2802      	cmp	r0, #2
9000dd6e:	f200 80a0 	bhi.w	9000deb2 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000dd72:	682b      	ldr	r3, [r5, #0]
9000dd74:	075b      	lsls	r3, r3, #29
9000dd76:	d5f6      	bpl.n	9000dd66 <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000dd78:	f7fc fde4 	bl	9000a944 <HAL_GetREVID>
9000dd7c:	f241 0303 	movw	r3, #4099	; 0x1003
9000dd80:	4298      	cmp	r0, r3
9000dd82:	f200 80f7 	bhi.w	9000df74 <HAL_RCC_OscConfig+0x3c4>
9000dd86:	6922      	ldr	r2, [r4, #16]
9000dd88:	686b      	ldr	r3, [r5, #4]
9000dd8a:	2a40      	cmp	r2, #64	; 0x40
9000dd8c:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000dd90:	bf0c      	ite	eq
9000dd92:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000dd96:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000dd9a:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000dd9c:	6823      	ldr	r3, [r4, #0]
9000dd9e:	e741      	b.n	9000dc24 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000dda0:	2b18      	cmp	r3, #24
9000dda2:	f000 80e3 	beq.w	9000df6c <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000dda6:	4d2b      	ldr	r5, [pc, #172]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000dda8:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ddaa:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000ddac:	2a00      	cmp	r2, #0
9000ddae:	f000 80cc 	beq.w	9000df4a <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ddb2:	f023 0319 	bic.w	r3, r3, #25
9000ddb6:	4313      	orrs	r3, r2
9000ddb8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ddba:	f7fc fdbd 	bl	9000a938 <HAL_GetTick>
9000ddbe:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ddc0:	e004      	b.n	9000ddcc <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000ddc2:	f7fc fdb9 	bl	9000a938 <HAL_GetTick>
9000ddc6:	1b80      	subs	r0, r0, r6
9000ddc8:	2802      	cmp	r0, #2
9000ddca:	d872      	bhi.n	9000deb2 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ddcc:	682b      	ldr	r3, [r5, #0]
9000ddce:	075f      	lsls	r7, r3, #29
9000ddd0:	d5f7      	bpl.n	9000ddc2 <HAL_RCC_OscConfig+0x212>
9000ddd2:	e7d1      	b.n	9000dd78 <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000ddd4:	f001 0103 	and.w	r1, r1, #3
9000ddd8:	2902      	cmp	r1, #2
9000ddda:	f47f aefc 	bne.w	9000dbd6 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000ddde:	4a1d      	ldr	r2, [pc, #116]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
9000dde0:	6812      	ldr	r2, [r2, #0]
9000dde2:	0392      	lsls	r2, r2, #14
9000dde4:	f57f af1b 	bpl.w	9000dc1e <HAL_RCC_OscConfig+0x6e>
9000dde8:	6862      	ldr	r2, [r4, #4]
9000ddea:	2a00      	cmp	r2, #0
9000ddec:	f47f af17 	bne.w	9000dc1e <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000ddf0:	2001      	movs	r0, #1
}
9000ddf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000ddf4:	f002 0203 	and.w	r2, r2, #3
9000ddf8:	2a01      	cmp	r2, #1
9000ddfa:	f47f af20 	bne.w	9000dc3e <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000ddfe:	4b15      	ldr	r3, [pc, #84]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
9000de00:	681b      	ldr	r3, [r3, #0]
9000de02:	05da      	lsls	r2, r3, #23
9000de04:	d502      	bpl.n	9000de0c <HAL_RCC_OscConfig+0x25c>
9000de06:	69e3      	ldr	r3, [r4, #28]
9000de08:	2b80      	cmp	r3, #128	; 0x80
9000de0a:	d1f1      	bne.n	9000ddf0 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000de0c:	f7fc fd9a 	bl	9000a944 <HAL_GetREVID>
9000de10:	f241 0303 	movw	r3, #4099	; 0x1003
9000de14:	4298      	cmp	r0, r3
9000de16:	f200 80b8 	bhi.w	9000df8a <HAL_RCC_OscConfig+0x3da>
9000de1a:	6a22      	ldr	r2, [r4, #32]
9000de1c:	2a20      	cmp	r2, #32
9000de1e:	f000 81a7 	beq.w	9000e170 <HAL_RCC_OscConfig+0x5c0>
9000de22:	490c      	ldr	r1, [pc, #48]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
9000de24:	684b      	ldr	r3, [r1, #4]
9000de26:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000de2a:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000de2e:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000de30:	6823      	ldr	r3, [r4, #0]
9000de32:	e72d      	b.n	9000dc90 <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000de34:	4a07      	ldr	r2, [pc, #28]	; (9000de54 <HAL_RCC_OscConfig+0x2a4>)
9000de36:	6813      	ldr	r3, [r2, #0]
9000de38:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000de3c:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000de3e:	e6df      	b.n	9000dc00 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000de40:	4d05      	ldr	r5, [pc, #20]	; (9000de58 <HAL_RCC_OscConfig+0x2a8>)
9000de42:	682b      	ldr	r3, [r5, #0]
9000de44:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000de48:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000de4a:	f7fc fd75 	bl	9000a938 <HAL_GetTick>
9000de4e:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000de50:	e009      	b.n	9000de66 <HAL_RCC_OscConfig+0x2b6>
9000de52:	bf00      	nop
9000de54:	58024400 	.word	0x58024400
9000de58:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000de5c:	f7fc fd6c 	bl	9000a938 <HAL_GetTick>
9000de60:	1b80      	subs	r0, r0, r6
9000de62:	2864      	cmp	r0, #100	; 0x64
9000de64:	d825      	bhi.n	9000deb2 <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000de66:	682b      	ldr	r3, [r5, #0]
9000de68:	05da      	lsls	r2, r3, #23
9000de6a:	d5f7      	bpl.n	9000de5c <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000de6c:	68a3      	ldr	r3, [r4, #8]
9000de6e:	2b01      	cmp	r3, #1
9000de70:	f000 8178 	beq.w	9000e164 <HAL_RCC_OscConfig+0x5b4>
9000de74:	2b00      	cmp	r3, #0
9000de76:	f000 8153 	beq.w	9000e120 <HAL_RCC_OscConfig+0x570>
9000de7a:	2b05      	cmp	r3, #5
9000de7c:	4ba5      	ldr	r3, [pc, #660]	; (9000e114 <HAL_RCC_OscConfig+0x564>)
9000de7e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000de80:	f000 817f 	beq.w	9000e182 <HAL_RCC_OscConfig+0x5d2>
9000de84:	f022 0201 	bic.w	r2, r2, #1
9000de88:	671a      	str	r2, [r3, #112]	; 0x70
9000de8a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000de8c:	f022 0204 	bic.w	r2, r2, #4
9000de90:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000de92:	f7fc fd51 	bl	9000a938 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000de96:	4e9f      	ldr	r6, [pc, #636]	; (9000e114 <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000de98:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000de9c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000de9e:	e004      	b.n	9000deaa <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000dea0:	f7fc fd4a 	bl	9000a938 <HAL_GetTick>
9000dea4:	1b40      	subs	r0, r0, r5
9000dea6:	42b8      	cmp	r0, r7
9000dea8:	d803      	bhi.n	9000deb2 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000deaa:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000deac:	079b      	lsls	r3, r3, #30
9000deae:	d5f7      	bpl.n	9000dea0 <HAL_RCC_OscConfig+0x2f0>
9000deb0:	e723      	b.n	9000dcfa <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000deb2:	2003      	movs	r0, #3
}
9000deb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000deb6:	4d97      	ldr	r5, [pc, #604]	; (9000e114 <HAL_RCC_OscConfig+0x564>)
9000deb8:	682b      	ldr	r3, [r5, #0]
9000deba:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000debe:	602b      	str	r3, [r5, #0]
9000dec0:	682b      	ldr	r3, [r5, #0]
9000dec2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000dec6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dec8:	f7fc fd36 	bl	9000a938 <HAL_GetTick>
9000decc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000dece:	e004      	b.n	9000deda <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000ded0:	f7fc fd32 	bl	9000a938 <HAL_GetTick>
9000ded4:	1b80      	subs	r0, r0, r6
9000ded6:	2864      	cmp	r0, #100	; 0x64
9000ded8:	d8eb      	bhi.n	9000deb2 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000deda:	682b      	ldr	r3, [r5, #0]
9000dedc:	039f      	lsls	r7, r3, #14
9000dede:	d4f7      	bmi.n	9000ded0 <HAL_RCC_OscConfig+0x320>
9000dee0:	e69c      	b.n	9000dc1c <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000dee2:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000dee4:	f023 0301 	bic.w	r3, r3, #1
9000dee8:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000deea:	f7fc fd25 	bl	9000a938 <HAL_GetTick>
9000deee:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000def0:	e004      	b.n	9000defc <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000def2:	f7fc fd21 	bl	9000a938 <HAL_GetTick>
9000def6:	1b80      	subs	r0, r0, r6
9000def8:	2802      	cmp	r0, #2
9000defa:	d8da      	bhi.n	9000deb2 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000defc:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000defe:	0799      	lsls	r1, r3, #30
9000df00:	d4f7      	bmi.n	9000def2 <HAL_RCC_OscConfig+0x342>
9000df02:	e6dd      	b.n	9000dcc0 <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000df04:	682b      	ldr	r3, [r5, #0]
9000df06:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000df0a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000df0c:	f7fc fd14 	bl	9000a938 <HAL_GetTick>
9000df10:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000df12:	e004      	b.n	9000df1e <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000df14:	f7fc fd10 	bl	9000a938 <HAL_GetTick>
9000df18:	1b80      	subs	r0, r0, r6
9000df1a:	2802      	cmp	r0, #2
9000df1c:	d8c9      	bhi.n	9000deb2 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000df1e:	682b      	ldr	r3, [r5, #0]
9000df20:	0498      	lsls	r0, r3, #18
9000df22:	d4f7      	bmi.n	9000df14 <HAL_RCC_OscConfig+0x364>
9000df24:	e6e5      	b.n	9000dcf2 <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000df26:	682b      	ldr	r3, [r5, #0]
9000df28:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000df2c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000df2e:	f7fc fd03 	bl	9000a938 <HAL_GetTick>
9000df32:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000df34:	e004      	b.n	9000df40 <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000df36:	f7fc fcff 	bl	9000a938 <HAL_GetTick>
9000df3a:	1b80      	subs	r0, r0, r6
9000df3c:	2802      	cmp	r0, #2
9000df3e:	d8b8      	bhi.n	9000deb2 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000df40:	682b      	ldr	r3, [r5, #0]
9000df42:	05df      	lsls	r7, r3, #23
9000df44:	d4f7      	bmi.n	9000df36 <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000df46:	6823      	ldr	r3, [r4, #0]
9000df48:	e6a2      	b.n	9000dc90 <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000df4a:	f023 0301 	bic.w	r3, r3, #1
9000df4e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000df50:	f7fc fcf2 	bl	9000a938 <HAL_GetTick>
9000df54:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000df56:	e004      	b.n	9000df62 <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000df58:	f7fc fcee 	bl	9000a938 <HAL_GetTick>
9000df5c:	1b80      	subs	r0, r0, r6
9000df5e:	2802      	cmp	r0, #2
9000df60:	d8a7      	bhi.n	9000deb2 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000df62:	682b      	ldr	r3, [r5, #0]
9000df64:	0758      	lsls	r0, r3, #29
9000df66:	d4f7      	bmi.n	9000df58 <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000df68:	6823      	ldr	r3, [r4, #0]
9000df6a:	e65b      	b.n	9000dc24 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000df6c:	0790      	lsls	r0, r2, #30
9000df6e:	f47f af1a 	bne.w	9000dda6 <HAL_RCC_OscConfig+0x1f6>
9000df72:	e6e7      	b.n	9000dd44 <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000df74:	686b      	ldr	r3, [r5, #4]
9000df76:	6922      	ldr	r2, [r4, #16]
9000df78:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000df7c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000df80:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000df82:	6823      	ldr	r3, [r4, #0]
9000df84:	e64e      	b.n	9000dc24 <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000df86:	2001      	movs	r0, #1
}
9000df88:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000df8a:	4a62      	ldr	r2, [pc, #392]	; (9000e114 <HAL_RCC_OscConfig+0x564>)
9000df8c:	6a21      	ldr	r1, [r4, #32]
9000df8e:	68d3      	ldr	r3, [r2, #12]
9000df90:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000df94:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000df98:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000df9a:	6823      	ldr	r3, [r4, #0]
9000df9c:	e678      	b.n	9000dc90 <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000df9e:	f7fc fccb 	bl	9000a938 <HAL_GetTick>
9000dfa2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000dfa4:	e004      	b.n	9000dfb0 <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000dfa6:	f7fc fcc7 	bl	9000a938 <HAL_GetTick>
9000dfaa:	1b80      	subs	r0, r0, r6
9000dfac:	2802      	cmp	r0, #2
9000dfae:	d880      	bhi.n	9000deb2 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000dfb0:	682b      	ldr	r3, [r5, #0]
9000dfb2:	0199      	lsls	r1, r3, #6
9000dfb4:	d4f7      	bmi.n	9000dfa6 <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000dfb6:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000dfb8:	4b57      	ldr	r3, [pc, #348]	; (9000e118 <HAL_RCC_OscConfig+0x568>)
9000dfba:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000dfbc:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000dfbe:	4957      	ldr	r1, [pc, #348]	; (9000e11c <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000dfc0:	4e54      	ldr	r6, [pc, #336]	; (9000e114 <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000dfc2:	4313      	orrs	r3, r2
9000dfc4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000dfc6:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000dfca:	62ab      	str	r3, [r5, #40]	; 0x28
9000dfcc:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000dfd0:	3b01      	subs	r3, #1
9000dfd2:	3a01      	subs	r2, #1
9000dfd4:	025b      	lsls	r3, r3, #9
9000dfd6:	0412      	lsls	r2, r2, #16
9000dfd8:	b29b      	uxth	r3, r3
9000dfda:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000dfde:	4313      	orrs	r3, r2
9000dfe0:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000dfe2:	3a01      	subs	r2, #1
9000dfe4:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000dfe8:	4313      	orrs	r3, r2
9000dfea:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000dfec:	3a01      	subs	r2, #1
9000dfee:	0612      	lsls	r2, r2, #24
9000dff0:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000dff4:	4313      	orrs	r3, r2
9000dff6:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000dff8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000dffa:	f023 0301 	bic.w	r3, r3, #1
9000dffe:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000e000:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000e002:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000e004:	4011      	ands	r1, r2
9000e006:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000e00a:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000e00c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e00e:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000e010:	f023 030c 	bic.w	r3, r3, #12
9000e014:	4313      	orrs	r3, r2
9000e016:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000e018:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e01a:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000e01c:	f023 0302 	bic.w	r3, r3, #2
9000e020:	4313      	orrs	r3, r2
9000e022:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000e024:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e026:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000e02a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e02c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e02e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000e032:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000e034:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e036:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000e03a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000e03c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e03e:	f043 0301 	orr.w	r3, r3, #1
9000e042:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000e044:	682b      	ldr	r3, [r5, #0]
9000e046:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000e04a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000e04c:	f7fc fc74 	bl	9000a938 <HAL_GetTick>
9000e050:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000e052:	e005      	b.n	9000e060 <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000e054:	f7fc fc70 	bl	9000a938 <HAL_GetTick>
9000e058:	1b00      	subs	r0, r0, r4
9000e05a:	2802      	cmp	r0, #2
9000e05c:	f63f af29 	bhi.w	9000deb2 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000e060:	6833      	ldr	r3, [r6, #0]
9000e062:	019a      	lsls	r2, r3, #6
9000e064:	d5f6      	bpl.n	9000e054 <HAL_RCC_OscConfig+0x4a4>
9000e066:	e665      	b.n	9000dd34 <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000e068:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000e06a:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000e06c:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000e06e:	f43f ae62 	beq.w	9000dd36 <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000e072:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000e076:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000e078:	428b      	cmp	r3, r1
9000e07a:	f47f aeb9 	bne.w	9000ddf0 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000e07e:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000e082:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e084:	429a      	cmp	r2, r3
9000e086:	f47f aeb3 	bne.w	9000ddf0 <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000e08a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000e08c:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000e090:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000e092:	429a      	cmp	r2, r3
9000e094:	f47f aeac 	bne.w	9000ddf0 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000e098:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000e09a:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000e09e:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000e0a0:	429a      	cmp	r2, r3
9000e0a2:	f47f aea5 	bne.w	9000ddf0 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000e0a6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e0a8:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000e0ac:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000e0ae:	429a      	cmp	r2, r3
9000e0b0:	f47f ae9e 	bne.w	9000ddf0 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000e0b4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000e0b6:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000e0ba:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000e0bc:	429e      	cmp	r6, r3
9000e0be:	f47f ae97 	bne.w	9000ddf0 <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000e0c2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000e0c4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000e0c6:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000e0ca:	429a      	cmp	r2, r3
9000e0cc:	f43f ae32 	beq.w	9000dd34 <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000e0d0:	4a10      	ldr	r2, [pc, #64]	; (9000e114 <HAL_RCC_OscConfig+0x564>)
9000e0d2:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000e0d4:	f023 0301 	bic.w	r3, r3, #1
9000e0d8:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000e0da:	f7fc fc2d 	bl	9000a938 <HAL_GetTick>
9000e0de:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000e0e0:	f7fc fc2a 	bl	9000a938 <HAL_GetTick>
9000e0e4:	42a8      	cmp	r0, r5
9000e0e6:	d0fb      	beq.n	9000e0e0 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000e0e8:	4a0a      	ldr	r2, [pc, #40]	; (9000e114 <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000e0ea:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000e0ec:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000e0ee:	4b0b      	ldr	r3, [pc, #44]	; (9000e11c <HAL_RCC_OscConfig+0x56c>)
9000e0f0:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000e0f2:	4023      	ands	r3, r4
9000e0f4:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000e0f8:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000e0fa:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000e0fc:	f043 0301 	orr.w	r3, r3, #1
9000e100:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000e102:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000e104:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000e108:	601a      	str	r2, [r3, #0]
9000e10a:	681a      	ldr	r2, [r3, #0]
9000e10c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000e110:	601a      	str	r2, [r3, #0]
9000e112:	e575      	b.n	9000dc00 <HAL_RCC_OscConfig+0x50>
9000e114:	58024400 	.word	0x58024400
9000e118:	fffffc0c 	.word	0xfffffc0c
9000e11c:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000e120:	4d1c      	ldr	r5, [pc, #112]	; (9000e194 <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e122:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000e126:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000e128:	f023 0301 	bic.w	r3, r3, #1
9000e12c:	672b      	str	r3, [r5, #112]	; 0x70
9000e12e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000e130:	f023 0304 	bic.w	r3, r3, #4
9000e134:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000e136:	f7fc fbff 	bl	9000a938 <HAL_GetTick>
9000e13a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000e13c:	e005      	b.n	9000e14a <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e13e:	f7fc fbfb 	bl	9000a938 <HAL_GetTick>
9000e142:	1b80      	subs	r0, r0, r6
9000e144:	42b8      	cmp	r0, r7
9000e146:	f63f aeb4 	bhi.w	9000deb2 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000e14a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000e14c:	0798      	lsls	r0, r3, #30
9000e14e:	d4f6      	bmi.n	9000e13e <HAL_RCC_OscConfig+0x58e>
9000e150:	e5d3      	b.n	9000dcfa <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000e152:	68eb      	ldr	r3, [r5, #12]
9000e154:	6a22      	ldr	r2, [r4, #32]
9000e156:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000e15a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000e15e:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000e160:	6823      	ldr	r3, [r4, #0]
9000e162:	e595      	b.n	9000dc90 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000e164:	4a0b      	ldr	r2, [pc, #44]	; (9000e194 <HAL_RCC_OscConfig+0x5e4>)
9000e166:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000e168:	f043 0301 	orr.w	r3, r3, #1
9000e16c:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000e16e:	e690      	b.n	9000de92 <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000e170:	4a08      	ldr	r2, [pc, #32]	; (9000e194 <HAL_RCC_OscConfig+0x5e4>)
9000e172:	6853      	ldr	r3, [r2, #4]
9000e174:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000e178:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000e17c:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000e17e:	6823      	ldr	r3, [r4, #0]
9000e180:	e586      	b.n	9000dc90 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000e182:	f042 0204 	orr.w	r2, r2, #4
9000e186:	671a      	str	r2, [r3, #112]	; 0x70
9000e188:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000e18a:	f042 0201 	orr.w	r2, r2, #1
9000e18e:	671a      	str	r2, [r3, #112]	; 0x70
9000e190:	e67f      	b.n	9000de92 <HAL_RCC_OscConfig+0x2e2>
9000e192:	bf00      	nop
9000e194:	58024400 	.word	0x58024400

9000e198 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e198:	4a47      	ldr	r2, [pc, #284]	; (9000e2b8 <HAL_RCC_GetSysClockFreq+0x120>)
9000e19a:	6913      	ldr	r3, [r2, #16]
9000e19c:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e1a0:	2b10      	cmp	r3, #16
9000e1a2:	d004      	beq.n	9000e1ae <HAL_RCC_GetSysClockFreq+0x16>
9000e1a4:	2b18      	cmp	r3, #24
9000e1a6:	d00d      	beq.n	9000e1c4 <HAL_RCC_GetSysClockFreq+0x2c>
9000e1a8:	b11b      	cbz	r3, 9000e1b2 <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000e1aa:	4844      	ldr	r0, [pc, #272]	; (9000e2bc <HAL_RCC_GetSysClockFreq+0x124>)
9000e1ac:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e1ae:	4844      	ldr	r0, [pc, #272]	; (9000e2c0 <HAL_RCC_GetSysClockFreq+0x128>)
9000e1b0:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e1b2:	6813      	ldr	r3, [r2, #0]
9000e1b4:	0699      	lsls	r1, r3, #26
9000e1b6:	d54a      	bpl.n	9000e24e <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e1b8:	6813      	ldr	r3, [r2, #0]
9000e1ba:	4842      	ldr	r0, [pc, #264]	; (9000e2c4 <HAL_RCC_GetSysClockFreq+0x12c>)
9000e1bc:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e1c0:	40d8      	lsrs	r0, r3
9000e1c2:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000e1c4:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000e1c6:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000e1c8:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000e1ca:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000e1cc:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e1d0:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000e1d2:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000e1d6:	d038      	beq.n	9000e24a <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e1d8:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000e1dc:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000e1e0:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e1e4:	fb05 f101 	mul.w	r1, r5, r1
9000e1e8:	2b01      	cmp	r3, #1
9000e1ea:	ee07 1a90 	vmov	s15, r1
9000e1ee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000e1f2:	d002      	beq.n	9000e1fa <HAL_RCC_GetSysClockFreq+0x62>
9000e1f4:	2b02      	cmp	r3, #2
9000e1f6:	d02c      	beq.n	9000e252 <HAL_RCC_GetSysClockFreq+0xba>
9000e1f8:	b393      	cbz	r3, 9000e260 <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e1fa:	ee07 0a90 	vmov	s15, r0
9000e1fe:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000e2c8 <HAL_RCC_GetSysClockFreq+0x130>
9000e202:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e206:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000e208:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000e20c:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000e2cc <HAL_RCC_GetSysClockFreq+0x134>
9000e210:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000e214:	ee07 3a90 	vmov	s15, r3
9000e218:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000e21c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e220:	eee7 7a25 	vfma.f32	s15, s14, s11
9000e224:	ee77 7a86 	vadd.f32	s15, s15, s12
9000e228:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000e22c:	4b22      	ldr	r3, [pc, #136]	; (9000e2b8 <HAL_RCC_GetSysClockFreq+0x120>)
9000e22e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000e230:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000e234:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000e236:	ee07 3a90 	vmov	s15, r3
9000e23a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000e23e:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000e242:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000e246:	ee17 0a90 	vmov	r0, s15
}
9000e24a:	bc30      	pop	{r4, r5}
9000e24c:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e24e:	481d      	ldr	r0, [pc, #116]	; (9000e2c4 <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000e250:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e252:	ee07 0a90 	vmov	s15, r0
9000e256:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000e2d0 <HAL_RCC_GetSysClockFreq+0x138>
9000e25a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e25e:	e7d2      	b.n	9000e206 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e260:	6813      	ldr	r3, [r2, #0]
9000e262:	069b      	lsls	r3, r3, #26
9000e264:	d520      	bpl.n	9000e2a8 <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e266:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e268:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e26c:	4915      	ldr	r1, [pc, #84]	; (9000e2c4 <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e26e:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000e272:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e274:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e278:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e27c:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000e2cc <HAL_RCC_GetSysClockFreq+0x134>
9000e280:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e284:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e286:	ee06 3a90 	vmov	s13, r3
9000e28a:	ee06 1a10 	vmov	s12, r1
9000e28e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000e292:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000e296:	eee7 6a05 	vfma.f32	s13, s14, s10
9000e29a:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000e29e:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000e2a2:	ee66 6a87 	vmul.f32	s13, s13, s14
9000e2a6:	e7c1      	b.n	9000e22c <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e2a8:	ee07 0a90 	vmov	s15, r0
9000e2ac:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000e2d4 <HAL_RCC_GetSysClockFreq+0x13c>
9000e2b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e2b4:	e7a7      	b.n	9000e206 <HAL_RCC_GetSysClockFreq+0x6e>
9000e2b6:	bf00      	nop
9000e2b8:	58024400 	.word	0x58024400
9000e2bc:	003d0900 	.word	0x003d0900
9000e2c0:	017d7840 	.word	0x017d7840
9000e2c4:	03d09000 	.word	0x03d09000
9000e2c8:	4a742400 	.word	0x4a742400
9000e2cc:	39000000 	.word	0x39000000
9000e2d0:	4bbebc20 	.word	0x4bbebc20
9000e2d4:	4c742400 	.word	0x4c742400

9000e2d8 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000e2d8:	2800      	cmp	r0, #0
9000e2da:	f000 810c 	beq.w	9000e4f6 <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000e2de:	4a8c      	ldr	r2, [pc, #560]	; (9000e510 <HAL_RCC_ClockConfig+0x238>)
9000e2e0:	6813      	ldr	r3, [r2, #0]
9000e2e2:	f003 030f 	and.w	r3, r3, #15
9000e2e6:	428b      	cmp	r3, r1
{
9000e2e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e2ec:	4604      	mov	r4, r0
9000e2ee:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000e2f0:	d20c      	bcs.n	9000e30c <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000e2f2:	6813      	ldr	r3, [r2, #0]
9000e2f4:	f023 030f 	bic.w	r3, r3, #15
9000e2f8:	430b      	orrs	r3, r1
9000e2fa:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000e2fc:	6813      	ldr	r3, [r2, #0]
9000e2fe:	f003 030f 	and.w	r3, r3, #15
9000e302:	428b      	cmp	r3, r1
9000e304:	d002      	beq.n	9000e30c <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000e306:	2001      	movs	r0, #1
}
9000e308:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000e30c:	6823      	ldr	r3, [r4, #0]
9000e30e:	075f      	lsls	r7, r3, #29
9000e310:	d50b      	bpl.n	9000e32a <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000e312:	4980      	ldr	r1, [pc, #512]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e314:	6920      	ldr	r0, [r4, #16]
9000e316:	698a      	ldr	r2, [r1, #24]
9000e318:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e31c:	4290      	cmp	r0, r2
9000e31e:	d904      	bls.n	9000e32a <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000e320:	698a      	ldr	r2, [r1, #24]
9000e322:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e326:	4302      	orrs	r2, r0
9000e328:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000e32a:	071e      	lsls	r6, r3, #28
9000e32c:	d50b      	bpl.n	9000e346 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000e32e:	4979      	ldr	r1, [pc, #484]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e330:	6960      	ldr	r0, [r4, #20]
9000e332:	69ca      	ldr	r2, [r1, #28]
9000e334:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e338:	4290      	cmp	r0, r2
9000e33a:	d904      	bls.n	9000e346 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000e33c:	69ca      	ldr	r2, [r1, #28]
9000e33e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e342:	4302      	orrs	r2, r0
9000e344:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000e346:	06d8      	lsls	r0, r3, #27
9000e348:	d50b      	bpl.n	9000e362 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000e34a:	4972      	ldr	r1, [pc, #456]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e34c:	69a0      	ldr	r0, [r4, #24]
9000e34e:	69ca      	ldr	r2, [r1, #28]
9000e350:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e354:	4290      	cmp	r0, r2
9000e356:	d904      	bls.n	9000e362 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000e358:	69ca      	ldr	r2, [r1, #28]
9000e35a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000e35e:	4302      	orrs	r2, r0
9000e360:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000e362:	0699      	lsls	r1, r3, #26
9000e364:	d50b      	bpl.n	9000e37e <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000e366:	496b      	ldr	r1, [pc, #428]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e368:	69e0      	ldr	r0, [r4, #28]
9000e36a:	6a0a      	ldr	r2, [r1, #32]
9000e36c:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e370:	4290      	cmp	r0, r2
9000e372:	d904      	bls.n	9000e37e <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000e374:	6a0a      	ldr	r2, [r1, #32]
9000e376:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e37a:	4302      	orrs	r2, r0
9000e37c:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000e37e:	079a      	lsls	r2, r3, #30
9000e380:	f140 80ab 	bpl.w	9000e4da <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000e384:	4863      	ldr	r0, [pc, #396]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e386:	68e1      	ldr	r1, [r4, #12]
9000e388:	6982      	ldr	r2, [r0, #24]
9000e38a:	f002 020f 	and.w	r2, r2, #15
9000e38e:	4291      	cmp	r1, r2
9000e390:	d904      	bls.n	9000e39c <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000e392:	6982      	ldr	r2, [r0, #24]
9000e394:	f022 020f 	bic.w	r2, r2, #15
9000e398:	430a      	orrs	r2, r1
9000e39a:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000e39c:	07d8      	lsls	r0, r3, #31
9000e39e:	d530      	bpl.n	9000e402 <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000e3a0:	4a5c      	ldr	r2, [pc, #368]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e3a2:	68a1      	ldr	r1, [r4, #8]
9000e3a4:	6993      	ldr	r3, [r2, #24]
9000e3a6:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000e3aa:	430b      	orrs	r3, r1
9000e3ac:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000e3ae:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000e3b0:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000e3b2:	2902      	cmp	r1, #2
9000e3b4:	f000 80a1 	beq.w	9000e4fa <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000e3b8:	2903      	cmp	r1, #3
9000e3ba:	f000 8098 	beq.w	9000e4ee <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000e3be:	2901      	cmp	r1, #1
9000e3c0:	f000 80a1 	beq.w	9000e506 <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000e3c4:	0758      	lsls	r0, r3, #29
9000e3c6:	d59e      	bpl.n	9000e306 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000e3c8:	4e52      	ldr	r6, [pc, #328]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000e3ca:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000e3ce:	6933      	ldr	r3, [r6, #16]
9000e3d0:	f023 0307 	bic.w	r3, r3, #7
9000e3d4:	430b      	orrs	r3, r1
9000e3d6:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000e3d8:	f7fc faae 	bl	9000a938 <HAL_GetTick>
9000e3dc:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000e3de:	e005      	b.n	9000e3ec <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000e3e0:	f7fc faaa 	bl	9000a938 <HAL_GetTick>
9000e3e4:	1bc0      	subs	r0, r0, r7
9000e3e6:	4540      	cmp	r0, r8
9000e3e8:	f200 808b 	bhi.w	9000e502 <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000e3ec:	6933      	ldr	r3, [r6, #16]
9000e3ee:	6862      	ldr	r2, [r4, #4]
9000e3f0:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e3f4:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000e3f8:	d1f2      	bne.n	9000e3e0 <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000e3fa:	6823      	ldr	r3, [r4, #0]
9000e3fc:	0799      	lsls	r1, r3, #30
9000e3fe:	d506      	bpl.n	9000e40e <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000e400:	68e1      	ldr	r1, [r4, #12]
9000e402:	4844      	ldr	r0, [pc, #272]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e404:	6982      	ldr	r2, [r0, #24]
9000e406:	f002 020f 	and.w	r2, r2, #15
9000e40a:	428a      	cmp	r2, r1
9000e40c:	d869      	bhi.n	9000e4e2 <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000e40e:	4940      	ldr	r1, [pc, #256]	; (9000e510 <HAL_RCC_ClockConfig+0x238>)
9000e410:	680a      	ldr	r2, [r1, #0]
9000e412:	f002 020f 	and.w	r2, r2, #15
9000e416:	42aa      	cmp	r2, r5
9000e418:	d90a      	bls.n	9000e430 <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000e41a:	680a      	ldr	r2, [r1, #0]
9000e41c:	f022 020f 	bic.w	r2, r2, #15
9000e420:	432a      	orrs	r2, r5
9000e422:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000e424:	680a      	ldr	r2, [r1, #0]
9000e426:	f002 020f 	and.w	r2, r2, #15
9000e42a:	42aa      	cmp	r2, r5
9000e42c:	f47f af6b 	bne.w	9000e306 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000e430:	075a      	lsls	r2, r3, #29
9000e432:	d50b      	bpl.n	9000e44c <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000e434:	4937      	ldr	r1, [pc, #220]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e436:	6920      	ldr	r0, [r4, #16]
9000e438:	698a      	ldr	r2, [r1, #24]
9000e43a:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e43e:	4290      	cmp	r0, r2
9000e440:	d204      	bcs.n	9000e44c <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000e442:	698a      	ldr	r2, [r1, #24]
9000e444:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e448:	4302      	orrs	r2, r0
9000e44a:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000e44c:	071f      	lsls	r7, r3, #28
9000e44e:	d50b      	bpl.n	9000e468 <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000e450:	4930      	ldr	r1, [pc, #192]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e452:	6960      	ldr	r0, [r4, #20]
9000e454:	69ca      	ldr	r2, [r1, #28]
9000e456:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e45a:	4290      	cmp	r0, r2
9000e45c:	d204      	bcs.n	9000e468 <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000e45e:	69ca      	ldr	r2, [r1, #28]
9000e460:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e464:	4302      	orrs	r2, r0
9000e466:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000e468:	06de      	lsls	r6, r3, #27
9000e46a:	d50b      	bpl.n	9000e484 <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000e46c:	4929      	ldr	r1, [pc, #164]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e46e:	69a0      	ldr	r0, [r4, #24]
9000e470:	69ca      	ldr	r2, [r1, #28]
9000e472:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e476:	4290      	cmp	r0, r2
9000e478:	d204      	bcs.n	9000e484 <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000e47a:	69ca      	ldr	r2, [r1, #28]
9000e47c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000e480:	4302      	orrs	r2, r0
9000e482:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000e484:	069d      	lsls	r5, r3, #26
9000e486:	d50b      	bpl.n	9000e4a0 <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000e488:	4a22      	ldr	r2, [pc, #136]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e48a:	69e1      	ldr	r1, [r4, #28]
9000e48c:	6a13      	ldr	r3, [r2, #32]
9000e48e:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000e492:	4299      	cmp	r1, r3
9000e494:	d204      	bcs.n	9000e4a0 <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000e496:	6a13      	ldr	r3, [r2, #32]
9000e498:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000e49c:	430b      	orrs	r3, r1
9000e49e:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e4a0:	f7ff fe7a 	bl	9000e198 <HAL_RCC_GetSysClockFreq>
9000e4a4:	4a1b      	ldr	r2, [pc, #108]	; (9000e514 <HAL_RCC_ClockConfig+0x23c>)
9000e4a6:	4603      	mov	r3, r0
9000e4a8:	481b      	ldr	r0, [pc, #108]	; (9000e518 <HAL_RCC_ClockConfig+0x240>)
9000e4aa:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e4ac:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e4ae:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000e4b2:	4d1a      	ldr	r5, [pc, #104]	; (9000e51c <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e4b4:	f002 020f 	and.w	r2, r2, #15
9000e4b8:	4c19      	ldr	r4, [pc, #100]	; (9000e520 <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e4ba:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e4bc:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e4be:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000e4c2:	4818      	ldr	r0, [pc, #96]	; (9000e524 <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e4c4:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e4c8:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000e4ca:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000e4cc:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e4ce:	40d3      	lsrs	r3, r2
9000e4d0:	6023      	str	r3, [r4, #0]
}
9000e4d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000e4d6:	f7f4 bf7d 	b.w	900033d4 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000e4da:	07da      	lsls	r2, r3, #31
9000e4dc:	f53f af60 	bmi.w	9000e3a0 <HAL_RCC_ClockConfig+0xc8>
9000e4e0:	e795      	b.n	9000e40e <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000e4e2:	6982      	ldr	r2, [r0, #24]
9000e4e4:	f022 020f 	bic.w	r2, r2, #15
9000e4e8:	430a      	orrs	r2, r1
9000e4ea:	6182      	str	r2, [r0, #24]
9000e4ec:	e78f      	b.n	9000e40e <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000e4ee:	019f      	lsls	r7, r3, #6
9000e4f0:	f53f af6a 	bmi.w	9000e3c8 <HAL_RCC_ClockConfig+0xf0>
9000e4f4:	e707      	b.n	9000e306 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000e4f6:	2001      	movs	r0, #1
}
9000e4f8:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000e4fa:	039b      	lsls	r3, r3, #14
9000e4fc:	f53f af64 	bmi.w	9000e3c8 <HAL_RCC_ClockConfig+0xf0>
9000e500:	e701      	b.n	9000e306 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000e502:	2003      	movs	r0, #3
9000e504:	e700      	b.n	9000e308 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000e506:	05de      	lsls	r6, r3, #23
9000e508:	f53f af5e 	bmi.w	9000e3c8 <HAL_RCC_ClockConfig+0xf0>
9000e50c:	e6fb      	b.n	9000e306 <HAL_RCC_ClockConfig+0x2e>
9000e50e:	bf00      	nop
9000e510:	52002000 	.word	0x52002000
9000e514:	58024400 	.word	0x58024400
9000e518:	9002d3c8 	.word	0x9002d3c8
9000e51c:	24000070 	.word	0x24000070
9000e520:	24000074 	.word	0x24000074
9000e524:	2400007c 	.word	0x2400007c

9000e528 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e528:	4a1c      	ldr	r2, [pc, #112]	; (9000e59c <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000e52a:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e52c:	6913      	ldr	r3, [r2, #16]
9000e52e:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e532:	2b10      	cmp	r3, #16
9000e534:	d021      	beq.n	9000e57a <HAL_RCC_GetPCLK1Freq+0x52>
9000e536:	2b18      	cmp	r3, #24
9000e538:	d02a      	beq.n	9000e590 <HAL_RCC_GetPCLK1Freq+0x68>
9000e53a:	b303      	cbz	r3, 9000e57e <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000e53c:	4818      	ldr	r0, [pc, #96]	; (9000e5a0 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e53e:	4a17      	ldr	r2, [pc, #92]	; (9000e59c <HAL_RCC_GetPCLK1Freq+0x74>)
9000e540:	4918      	ldr	r1, [pc, #96]	; (9000e5a4 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000e542:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e544:	4c18      	ldr	r4, [pc, #96]	; (9000e5a8 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e546:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000e54a:	4d18      	ldr	r5, [pc, #96]	; (9000e5ac <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e54c:	5ccb      	ldrb	r3, [r1, r3]
9000e54e:	f003 031f 	and.w	r3, r3, #31
9000e552:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e554:	6993      	ldr	r3, [r2, #24]
9000e556:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000e55a:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e55c:	5ccb      	ldrb	r3, [r1, r3]
9000e55e:	f003 031f 	and.w	r3, r3, #31
9000e562:	fa20 f303 	lsr.w	r3, r0, r3
9000e566:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000e568:	69d2      	ldr	r2, [r2, #28]
9000e56a:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000e56e:	5c88      	ldrb	r0, [r1, r2]
9000e570:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000e574:	fa23 f000 	lsr.w	r0, r3, r0
9000e578:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e57a:	480d      	ldr	r0, [pc, #52]	; (9000e5b0 <HAL_RCC_GetPCLK1Freq+0x88>)
9000e57c:	e7df      	b.n	9000e53e <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e57e:	6813      	ldr	r3, [r2, #0]
9000e580:	069b      	lsls	r3, r3, #26
9000e582:	d508      	bpl.n	9000e596 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e584:	6813      	ldr	r3, [r2, #0]
9000e586:	480b      	ldr	r0, [pc, #44]	; (9000e5b4 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000e588:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e58c:	40d8      	lsrs	r0, r3
9000e58e:	e7d6      	b.n	9000e53e <HAL_RCC_GetPCLK1Freq+0x16>
9000e590:	f7ff fa8a 	bl	9000daa8 <HAL_RCC_GetSysClockFreq.part.0>
9000e594:	e7d3      	b.n	9000e53e <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e596:	4807      	ldr	r0, [pc, #28]	; (9000e5b4 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000e598:	e7d1      	b.n	9000e53e <HAL_RCC_GetPCLK1Freq+0x16>
9000e59a:	bf00      	nop
9000e59c:	58024400 	.word	0x58024400
9000e5a0:	003d0900 	.word	0x003d0900
9000e5a4:	9002d3c8 	.word	0x9002d3c8
9000e5a8:	24000074 	.word	0x24000074
9000e5ac:	24000070 	.word	0x24000070
9000e5b0:	017d7840 	.word	0x017d7840
9000e5b4:	03d09000 	.word	0x03d09000

9000e5b8 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e5b8:	4a1c      	ldr	r2, [pc, #112]	; (9000e62c <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000e5ba:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e5bc:	6913      	ldr	r3, [r2, #16]
9000e5be:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e5c2:	2b10      	cmp	r3, #16
9000e5c4:	d021      	beq.n	9000e60a <HAL_RCC_GetPCLK2Freq+0x52>
9000e5c6:	2b18      	cmp	r3, #24
9000e5c8:	d02a      	beq.n	9000e620 <HAL_RCC_GetPCLK2Freq+0x68>
9000e5ca:	b303      	cbz	r3, 9000e60e <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000e5cc:	4818      	ldr	r0, [pc, #96]	; (9000e630 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e5ce:	4a17      	ldr	r2, [pc, #92]	; (9000e62c <HAL_RCC_GetPCLK2Freq+0x74>)
9000e5d0:	4918      	ldr	r1, [pc, #96]	; (9000e634 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000e5d2:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e5d4:	4c18      	ldr	r4, [pc, #96]	; (9000e638 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e5d6:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000e5da:	4d18      	ldr	r5, [pc, #96]	; (9000e63c <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e5dc:	5ccb      	ldrb	r3, [r1, r3]
9000e5de:	f003 031f 	and.w	r3, r3, #31
9000e5e2:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e5e4:	6993      	ldr	r3, [r2, #24]
9000e5e6:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000e5ea:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e5ec:	5ccb      	ldrb	r3, [r1, r3]
9000e5ee:	f003 031f 	and.w	r3, r3, #31
9000e5f2:	fa20 f303 	lsr.w	r3, r0, r3
9000e5f6:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000e5f8:	69d2      	ldr	r2, [r2, #28]
9000e5fa:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000e5fe:	5c88      	ldrb	r0, [r1, r2]
9000e600:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000e604:	fa23 f000 	lsr.w	r0, r3, r0
9000e608:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e60a:	480d      	ldr	r0, [pc, #52]	; (9000e640 <HAL_RCC_GetPCLK2Freq+0x88>)
9000e60c:	e7df      	b.n	9000e5ce <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e60e:	6813      	ldr	r3, [r2, #0]
9000e610:	069b      	lsls	r3, r3, #26
9000e612:	d508      	bpl.n	9000e626 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e614:	6813      	ldr	r3, [r2, #0]
9000e616:	480b      	ldr	r0, [pc, #44]	; (9000e644 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000e618:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e61c:	40d8      	lsrs	r0, r3
9000e61e:	e7d6      	b.n	9000e5ce <HAL_RCC_GetPCLK2Freq+0x16>
9000e620:	f7ff fa42 	bl	9000daa8 <HAL_RCC_GetSysClockFreq.part.0>
9000e624:	e7d3      	b.n	9000e5ce <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e626:	4807      	ldr	r0, [pc, #28]	; (9000e644 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000e628:	e7d1      	b.n	9000e5ce <HAL_RCC_GetPCLK2Freq+0x16>
9000e62a:	bf00      	nop
9000e62c:	58024400 	.word	0x58024400
9000e630:	003d0900 	.word	0x003d0900
9000e634:	9002d3c8 	.word	0x9002d3c8
9000e638:	24000074 	.word	0x24000074
9000e63c:	24000070 	.word	0x24000070
9000e640:	017d7840 	.word	0x017d7840
9000e644:	03d09000 	.word	0x03d09000

9000e648 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000e648:	4b13      	ldr	r3, [pc, #76]	; (9000e698 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000e64a:	223f      	movs	r2, #63	; 0x3f
9000e64c:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000e64e:	691a      	ldr	r2, [r3, #16]
9000e650:	f002 0207 	and.w	r2, r2, #7
9000e654:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000e656:	699a      	ldr	r2, [r3, #24]
9000e658:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000e65c:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000e65e:	699a      	ldr	r2, [r3, #24]
9000e660:	f002 020f 	and.w	r2, r2, #15
9000e664:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000e666:	699a      	ldr	r2, [r3, #24]
9000e668:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e66c:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000e66e:	69da      	ldr	r2, [r3, #28]
9000e670:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e674:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000e676:	69da      	ldr	r2, [r3, #28]
9000e678:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e67c:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e67e:	6a1b      	ldr	r3, [r3, #32]
{
9000e680:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e682:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e686:	4c05      	ldr	r4, [pc, #20]	; (9000e69c <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e688:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e68a:	6823      	ldr	r3, [r4, #0]
}
9000e68c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e690:	f003 030f 	and.w	r3, r3, #15
9000e694:	600b      	str	r3, [r1, #0]
}
9000e696:	4770      	bx	lr
9000e698:	58024400 	.word	0x58024400
9000e69c:	52002000 	.word	0x52002000

9000e6a0 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000e6a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e6a2:	4c3a      	ldr	r4, [pc, #232]	; (9000e78c <RCCEx_PLL2_Config+0xec>)
9000e6a4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e6a6:	f003 0303 	and.w	r3, r3, #3
9000e6aa:	2b03      	cmp	r3, #3
9000e6ac:	d067      	beq.n	9000e77e <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000e6ae:	6823      	ldr	r3, [r4, #0]
9000e6b0:	4606      	mov	r6, r0
9000e6b2:	460f      	mov	r7, r1
9000e6b4:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000e6b8:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e6ba:	f7fc f93d 	bl	9000a938 <HAL_GetTick>
9000e6be:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000e6c0:	e004      	b.n	9000e6cc <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000e6c2:	f7fc f939 	bl	9000a938 <HAL_GetTick>
9000e6c6:	1b43      	subs	r3, r0, r5
9000e6c8:	2b02      	cmp	r3, #2
9000e6ca:	d856      	bhi.n	9000e77a <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000e6cc:	6823      	ldr	r3, [r4, #0]
9000e6ce:	011a      	lsls	r2, r3, #4
9000e6d0:	d4f7      	bmi.n	9000e6c2 <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000e6d2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e6d4:	6832      	ldr	r2, [r6, #0]
9000e6d6:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000e6da:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000e6de:	62a3      	str	r3, [r4, #40]	; 0x28
9000e6e0:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000e6e4:	3b01      	subs	r3, #1
9000e6e6:	3a01      	subs	r2, #1
9000e6e8:	025b      	lsls	r3, r3, #9
9000e6ea:	0412      	lsls	r2, r2, #16
9000e6ec:	b29b      	uxth	r3, r3
9000e6ee:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000e6f2:	4313      	orrs	r3, r2
9000e6f4:	6872      	ldr	r2, [r6, #4]
9000e6f6:	3a01      	subs	r2, #1
9000e6f8:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000e6fc:	4313      	orrs	r3, r2
9000e6fe:	6932      	ldr	r2, [r6, #16]
9000e700:	3a01      	subs	r2, #1
9000e702:	0612      	lsls	r2, r2, #24
9000e704:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000e708:	4313      	orrs	r3, r2
9000e70a:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000e70c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e70e:	6972      	ldr	r2, [r6, #20]
9000e710:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000e714:	4313      	orrs	r3, r2
9000e716:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000e718:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e71a:	69b3      	ldr	r3, [r6, #24]
9000e71c:	f022 0220 	bic.w	r2, r2, #32
9000e720:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000e722:	4b1b      	ldr	r3, [pc, #108]	; (9000e790 <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000e724:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000e726:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e728:	f022 0210 	bic.w	r2, r2, #16
9000e72c:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000e72e:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000e730:	69f2      	ldr	r2, [r6, #28]
9000e732:	400b      	ands	r3, r1
9000e734:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000e738:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000e73a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e73c:	f043 0310 	orr.w	r3, r3, #16
9000e740:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000e742:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000e744:	b1ef      	cbz	r7, 9000e782 <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000e746:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000e748:	bf0c      	ite	eq
9000e74a:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000e74e:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000e752:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000e754:	4c0d      	ldr	r4, [pc, #52]	; (9000e78c <RCCEx_PLL2_Config+0xec>)
9000e756:	6823      	ldr	r3, [r4, #0]
9000e758:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000e75c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e75e:	f7fc f8eb 	bl	9000a938 <HAL_GetTick>
9000e762:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000e764:	e004      	b.n	9000e770 <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000e766:	f7fc f8e7 	bl	9000a938 <HAL_GetTick>
9000e76a:	1b40      	subs	r0, r0, r5
9000e76c:	2802      	cmp	r0, #2
9000e76e:	d804      	bhi.n	9000e77a <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000e770:	6823      	ldr	r3, [r4, #0]
9000e772:	011b      	lsls	r3, r3, #4
9000e774:	d5f7      	bpl.n	9000e766 <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000e776:	2000      	movs	r0, #0
}
9000e778:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000e77a:	2003      	movs	r0, #3
}
9000e77c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000e77e:	2001      	movs	r0, #1
}
9000e780:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000e782:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000e786:	62e3      	str	r3, [r4, #44]	; 0x2c
9000e788:	e7e4      	b.n	9000e754 <RCCEx_PLL2_Config+0xb4>
9000e78a:	bf00      	nop
9000e78c:	58024400 	.word	0x58024400
9000e790:	ffff0007 	.word	0xffff0007

9000e794 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000e794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e796:	4c3a      	ldr	r4, [pc, #232]	; (9000e880 <RCCEx_PLL3_Config+0xec>)
9000e798:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e79a:	f003 0303 	and.w	r3, r3, #3
9000e79e:	2b03      	cmp	r3, #3
9000e7a0:	d067      	beq.n	9000e872 <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000e7a2:	6823      	ldr	r3, [r4, #0]
9000e7a4:	4606      	mov	r6, r0
9000e7a6:	460f      	mov	r7, r1
9000e7a8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000e7ac:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e7ae:	f7fc f8c3 	bl	9000a938 <HAL_GetTick>
9000e7b2:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000e7b4:	e004      	b.n	9000e7c0 <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000e7b6:	f7fc f8bf 	bl	9000a938 <HAL_GetTick>
9000e7ba:	1b43      	subs	r3, r0, r5
9000e7bc:	2b02      	cmp	r3, #2
9000e7be:	d856      	bhi.n	9000e86e <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000e7c0:	6823      	ldr	r3, [r4, #0]
9000e7c2:	009a      	lsls	r2, r3, #2
9000e7c4:	d4f7      	bmi.n	9000e7b6 <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000e7c6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e7c8:	6832      	ldr	r2, [r6, #0]
9000e7ca:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000e7ce:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000e7d2:	62a3      	str	r3, [r4, #40]	; 0x28
9000e7d4:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000e7d8:	3b01      	subs	r3, #1
9000e7da:	3a01      	subs	r2, #1
9000e7dc:	025b      	lsls	r3, r3, #9
9000e7de:	0412      	lsls	r2, r2, #16
9000e7e0:	b29b      	uxth	r3, r3
9000e7e2:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000e7e6:	4313      	orrs	r3, r2
9000e7e8:	6872      	ldr	r2, [r6, #4]
9000e7ea:	3a01      	subs	r2, #1
9000e7ec:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000e7f0:	4313      	orrs	r3, r2
9000e7f2:	6932      	ldr	r2, [r6, #16]
9000e7f4:	3a01      	subs	r2, #1
9000e7f6:	0612      	lsls	r2, r2, #24
9000e7f8:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000e7fc:	4313      	orrs	r3, r2
9000e7fe:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000e800:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e802:	6972      	ldr	r2, [r6, #20]
9000e804:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000e808:	4313      	orrs	r3, r2
9000e80a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000e80c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e80e:	69b3      	ldr	r3, [r6, #24]
9000e810:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000e814:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000e816:	4b1b      	ldr	r3, [pc, #108]	; (9000e884 <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000e818:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000e81a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e81c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000e820:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000e822:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000e824:	69f2      	ldr	r2, [r6, #28]
9000e826:	400b      	ands	r3, r1
9000e828:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000e82c:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000e82e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e830:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000e834:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000e836:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000e838:	b1ef      	cbz	r7, 9000e876 <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000e83a:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000e83c:	bf0c      	ite	eq
9000e83e:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000e842:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000e846:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000e848:	4c0d      	ldr	r4, [pc, #52]	; (9000e880 <RCCEx_PLL3_Config+0xec>)
9000e84a:	6823      	ldr	r3, [r4, #0]
9000e84c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000e850:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e852:	f7fc f871 	bl	9000a938 <HAL_GetTick>
9000e856:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000e858:	e004      	b.n	9000e864 <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000e85a:	f7fc f86d 	bl	9000a938 <HAL_GetTick>
9000e85e:	1b40      	subs	r0, r0, r5
9000e860:	2802      	cmp	r0, #2
9000e862:	d804      	bhi.n	9000e86e <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000e864:	6823      	ldr	r3, [r4, #0]
9000e866:	009b      	lsls	r3, r3, #2
9000e868:	d5f7      	bpl.n	9000e85a <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000e86a:	2000      	movs	r0, #0
}
9000e86c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000e86e:	2003      	movs	r0, #3
}
9000e870:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000e872:	2001      	movs	r0, #1
}
9000e874:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000e876:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000e87a:	62e3      	str	r3, [r4, #44]	; 0x2c
9000e87c:	e7e4      	b.n	9000e848 <RCCEx_PLL3_Config+0xb4>
9000e87e:	bf00      	nop
9000e880:	58024400 	.word	0x58024400
9000e884:	ffff0007 	.word	0xffff0007

9000e888 <HAL_RCCEx_PeriphCLKConfig>:
{
9000e888:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000e88c:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000e890:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000e892:	011d      	lsls	r5, r3, #4
9000e894:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000e898:	d523      	bpl.n	9000e8e2 <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000e89a:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000e89c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000e8a0:	f000 8553 	beq.w	9000f34a <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000e8a4:	d812      	bhi.n	9000e8cc <HAL_RCCEx_PeriphCLKConfig+0x44>
9000e8a6:	2900      	cmp	r1, #0
9000e8a8:	f000 85a9 	beq.w	9000f3fe <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000e8ac:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000e8b0:	f040 85a2 	bne.w	9000f3f8 <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000e8b4:	2102      	movs	r1, #2
9000e8b6:	3008      	adds	r0, #8
9000e8b8:	f7ff fef2 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000e8bc:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000e8be:	2e00      	cmp	r6, #0
9000e8c0:	f040 8522 	bne.w	9000f308 <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000e8c4:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000e8c6:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e8ca:	e003      	b.n	9000e8d4 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000e8cc:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000e8d0:	f040 8592 	bne.w	9000f3f8 <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000e8d4:	4dae      	ldr	r5, [pc, #696]	; (9000eb90 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e8d6:	2600      	movs	r6, #0
9000e8d8:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000e8da:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000e8de:	4301      	orrs	r1, r0
9000e8e0:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000e8e2:	05d8      	lsls	r0, r3, #23
9000e8e4:	d50a      	bpl.n	9000e8fc <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000e8e6:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000e8e8:	2904      	cmp	r1, #4
9000e8ea:	d806      	bhi.n	9000e8fa <HAL_RCCEx_PeriphCLKConfig+0x72>
9000e8ec:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e8f0:	053d0536 	.word	0x053d0536
9000e8f4:	0323051a 	.word	0x0323051a
9000e8f8:	0323      	.short	0x0323
9000e8fa:	2601      	movs	r6, #1
9000e8fc:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000e8fe:	0599      	lsls	r1, r3, #22
9000e900:	d51d      	bpl.n	9000e93e <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000e902:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000e904:	2980      	cmp	r1, #128	; 0x80
9000e906:	f000 8516 	beq.w	9000f336 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000e90a:	f200 80f9 	bhi.w	9000eb00 <HAL_RCCEx_PeriphCLKConfig+0x278>
9000e90e:	2900      	cmp	r1, #0
9000e910:	f000 8433 	beq.w	9000f17a <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000e914:	2940      	cmp	r1, #64	; 0x40
9000e916:	f040 80fa 	bne.w	9000eb0e <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e91a:	2100      	movs	r1, #0
9000e91c:	f104 0008 	add.w	r0, r4, #8
9000e920:	f7ff febe 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000e924:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000e926:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e92a:	2d00      	cmp	r5, #0
9000e92c:	f040 83fe 	bne.w	9000f12c <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000e930:	4f97      	ldr	r7, [pc, #604]	; (9000eb90 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e932:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000e934:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e936:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000e93a:	4301      	orrs	r1, r0
9000e93c:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000e93e:	055f      	lsls	r7, r3, #21
9000e940:	d521      	bpl.n	9000e986 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000e942:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000e946:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000e94a:	f000 8521 	beq.w	9000f390 <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000e94e:	f200 80e1 	bhi.w	9000eb14 <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000e952:	2900      	cmp	r1, #0
9000e954:	f000 8418 	beq.w	9000f188 <HAL_RCCEx_PeriphCLKConfig+0x900>
9000e958:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000e95c:	f040 80e2 	bne.w	9000eb24 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e960:	2100      	movs	r1, #0
9000e962:	f104 0008 	add.w	r0, r4, #8
9000e966:	f7ff fe9b 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000e96a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000e96c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e970:	2d00      	cmp	r5, #0
9000e972:	f040 83e2 	bne.w	9000f13a <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000e976:	4f86      	ldr	r7, [pc, #536]	; (9000eb90 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e978:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000e97c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e97e:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000e982:	4301      	orrs	r1, r0
9000e984:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000e986:	0518      	lsls	r0, r3, #20
9000e988:	d521      	bpl.n	9000e9ce <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000e98a:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000e98e:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000e992:	f000 84bd 	beq.w	9000f310 <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000e996:	f200 80c8 	bhi.w	9000eb2a <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000e99a:	2900      	cmp	r1, #0
9000e99c:	f000 83e7 	beq.w	9000f16e <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000e9a0:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000e9a4:	f040 80c9 	bne.w	9000eb3a <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e9a8:	2100      	movs	r1, #0
9000e9aa:	f104 0008 	add.w	r0, r4, #8
9000e9ae:	f7ff fe77 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000e9b2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000e9b4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e9b8:	2d00      	cmp	r5, #0
9000e9ba:	f040 83b5 	bne.w	9000f128 <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000e9be:	4f74      	ldr	r7, [pc, #464]	; (9000eb90 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e9c0:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000e9c4:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e9c6:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000e9ca:	4301      	orrs	r1, r0
9000e9cc:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000e9ce:	0199      	lsls	r1, r3, #6
9000e9d0:	d518      	bpl.n	9000ea04 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000e9d2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000e9d4:	2920      	cmp	r1, #32
9000e9d6:	f000 841f 	beq.w	9000f218 <HAL_RCCEx_PeriphCLKConfig+0x990>
9000e9da:	f200 80b1 	bhi.w	9000eb40 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000e9de:	b139      	cbz	r1, 9000e9f0 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000e9e0:	2910      	cmp	r1, #16
9000e9e2:	f040 80b0 	bne.w	9000eb46 <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e9e6:	486a      	ldr	r0, [pc, #424]	; (9000eb90 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e9e8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e9ea:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e9ee:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000e9f0:	2d00      	cmp	r5, #0
9000e9f2:	f040 83d8 	bne.w	9000f1a6 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000e9f6:	4f66      	ldr	r7, [pc, #408]	; (9000eb90 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e9f8:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000e9fa:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000e9fc:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000ea00:	4301      	orrs	r1, r0
9000ea02:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000ea04:	04df      	lsls	r7, r3, #19
9000ea06:	d51f      	bpl.n	9000ea48 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000ea08:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000ea0a:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000ea0e:	f000 84b5 	beq.w	9000f37c <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000ea12:	f200 809b 	bhi.w	9000eb4c <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000ea16:	2900      	cmp	r1, #0
9000ea18:	f000 83a3 	beq.w	9000f162 <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000ea1c:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000ea20:	f040 809c 	bne.w	9000eb5c <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ea24:	2100      	movs	r1, #0
9000ea26:	f104 0008 	add.w	r0, r4, #8
9000ea2a:	f7ff fe39 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000ea2e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000ea30:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ea34:	2d00      	cmp	r5, #0
9000ea36:	f040 837b 	bne.w	9000f130 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000ea3a:	4f55      	ldr	r7, [pc, #340]	; (9000eb90 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ea3c:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000ea3e:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000ea40:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000ea44:	4301      	orrs	r1, r0
9000ea46:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000ea48:	0498      	lsls	r0, r3, #18
9000ea4a:	d51d      	bpl.n	9000ea88 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000ea4c:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000ea4e:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000ea52:	f000 8410 	beq.w	9000f276 <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000ea56:	f200 8084 	bhi.w	9000eb62 <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000ea5a:	b159      	cbz	r1, 9000ea74 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000ea5c:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000ea60:	f040 8087 	bne.w	9000eb72 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ea64:	2101      	movs	r1, #1
9000ea66:	f104 0008 	add.w	r0, r4, #8
9000ea6a:	f7ff fe19 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000ea6e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000ea70:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ea74:	2d00      	cmp	r5, #0
9000ea76:	f040 839a 	bne.w	9000f1ae <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000ea7a:	4f45      	ldr	r7, [pc, #276]	; (9000eb90 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ea7c:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000ea7e:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000ea80:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000ea84:	4301      	orrs	r1, r0
9000ea86:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000ea88:	0459      	lsls	r1, r3, #17
9000ea8a:	d51d      	bpl.n	9000eac8 <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000ea8c:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000ea90:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000ea94:	f000 83fb 	beq.w	9000f28e <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000ea98:	d86e      	bhi.n	9000eb78 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000ea9a:	b151      	cbz	r1, 9000eab2 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000ea9c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000eaa0:	d172      	bne.n	9000eb88 <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000eaa2:	2101      	movs	r1, #1
9000eaa4:	f104 0008 	add.w	r0, r4, #8
9000eaa8:	f7ff fdfa 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000eaac:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000eaae:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000eab2:	2d00      	cmp	r5, #0
9000eab4:	f040 837f 	bne.w	9000f1b6 <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000eab8:	4f35      	ldr	r7, [pc, #212]	; (9000eb90 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000eaba:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000eabe:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000eac0:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000eac4:	4301      	orrs	r1, r0
9000eac6:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000eac8:	041f      	lsls	r7, r3, #16
9000eaca:	d50d      	bpl.n	9000eae8 <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000eacc:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000eace:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000ead2:	f000 83c8 	beq.w	9000f266 <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000ead6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000eada:	f000 823b 	beq.w	9000ef54 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000eade:	2900      	cmp	r1, #0
9000eae0:	f000 8240 	beq.w	9000ef64 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000eae4:	2601      	movs	r6, #1
9000eae6:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000eae8:	01d8      	lsls	r0, r3, #7
9000eaea:	d562      	bpl.n	9000ebb2 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000eaec:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000eaee:	2903      	cmp	r1, #3
9000eaf0:	f200 84bf 	bhi.w	9000f472 <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000eaf4:	e8df f011 	tbh	[pc, r1, lsl #1]
9000eaf8:	004e0053 	.word	0x004e0053
9000eafc:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000eb00:	29c0      	cmp	r1, #192	; 0xc0
9000eb02:	f43f af12 	beq.w	9000e92a <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000eb06:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000eb0a:	f43f af0e 	beq.w	9000e92a <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000eb0e:	2601      	movs	r6, #1
9000eb10:	4635      	mov	r5, r6
9000eb12:	e714      	b.n	9000e93e <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000eb14:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000eb18:	f43f af2a 	beq.w	9000e970 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000eb1c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000eb20:	f43f af26 	beq.w	9000e970 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000eb24:	2601      	movs	r6, #1
9000eb26:	4635      	mov	r5, r6
9000eb28:	e72d      	b.n	9000e986 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000eb2a:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000eb2e:	f43f af43 	beq.w	9000e9b8 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000eb32:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000eb36:	f43f af3f 	beq.w	9000e9b8 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000eb3a:	2601      	movs	r6, #1
9000eb3c:	4635      	mov	r5, r6
9000eb3e:	e746      	b.n	9000e9ce <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000eb40:	2930      	cmp	r1, #48	; 0x30
9000eb42:	f43f af55 	beq.w	9000e9f0 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000eb46:	2601      	movs	r6, #1
9000eb48:	4635      	mov	r5, r6
9000eb4a:	e75b      	b.n	9000ea04 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000eb4c:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000eb50:	f43f af70 	beq.w	9000ea34 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000eb54:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000eb58:	f43f af6c 	beq.w	9000ea34 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000eb5c:	2601      	movs	r6, #1
9000eb5e:	4635      	mov	r5, r6
9000eb60:	e772      	b.n	9000ea48 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000eb62:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000eb66:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000eb6a:	d083      	beq.n	9000ea74 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000eb6c:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000eb70:	d080      	beq.n	9000ea74 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000eb72:	2601      	movs	r6, #1
9000eb74:	4635      	mov	r5, r6
9000eb76:	e787      	b.n	9000ea88 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000eb78:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000eb7c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000eb80:	d097      	beq.n	9000eab2 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000eb82:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000eb86:	d094      	beq.n	9000eab2 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000eb88:	2601      	movs	r6, #1
9000eb8a:	4635      	mov	r5, r6
9000eb8c:	e79c      	b.n	9000eac8 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000eb8e:	bf00      	nop
9000eb90:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000eb94:	4839      	ldr	r0, [pc, #228]	; (9000ec7c <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000eb96:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000eb98:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000eb9c:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000eb9e:	2d00      	cmp	r5, #0
9000eba0:	f040 8303 	bne.w	9000f1aa <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000eba4:	4f35      	ldr	r7, [pc, #212]	; (9000ec7c <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000eba6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000eba8:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000ebaa:	f021 0103 	bic.w	r1, r1, #3
9000ebae:	4301      	orrs	r1, r0
9000ebb0:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000ebb2:	0259      	lsls	r1, r3, #9
9000ebb4:	f100 826a 	bmi.w	9000f08c <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000ebb8:	07d8      	lsls	r0, r3, #31
9000ebba:	d52f      	bpl.n	9000ec1c <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000ebbc:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000ebbe:	2928      	cmp	r1, #40	; 0x28
9000ebc0:	d82a      	bhi.n	9000ec18 <HAL_RCCEx_PeriphCLKConfig+0x390>
9000ebc2:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ebc6:	020a      	.short	0x020a
9000ebc8:	00290029 	.word	0x00290029
9000ebcc:	00290029 	.word	0x00290029
9000ebd0:	00290029 	.word	0x00290029
9000ebd4:	02020029 	.word	0x02020029
9000ebd8:	00290029 	.word	0x00290029
9000ebdc:	00290029 	.word	0x00290029
9000ebe0:	00290029 	.word	0x00290029
9000ebe4:	04070029 	.word	0x04070029
9000ebe8:	00290029 	.word	0x00290029
9000ebec:	00290029 	.word	0x00290029
9000ebf0:	00290029 	.word	0x00290029
9000ebf4:	020a0029 	.word	0x020a0029
9000ebf8:	00290029 	.word	0x00290029
9000ebfc:	00290029 	.word	0x00290029
9000ec00:	00290029 	.word	0x00290029
9000ec04:	020a0029 	.word	0x020a0029
9000ec08:	00290029 	.word	0x00290029
9000ec0c:	00290029 	.word	0x00290029
9000ec10:	00290029 	.word	0x00290029
9000ec14:	020a0029 	.word	0x020a0029
9000ec18:	2601      	movs	r6, #1
9000ec1a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000ec1c:	0799      	lsls	r1, r3, #30
9000ec1e:	d51d      	bpl.n	9000ec5c <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000ec20:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000ec22:	2905      	cmp	r1, #5
9000ec24:	f200 8421 	bhi.w	9000f46a <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000ec28:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ec2c:	0006000e 	.word	0x0006000e
9000ec30:	000e03c8 	.word	0x000e03c8
9000ec34:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ec38:	2101      	movs	r1, #1
9000ec3a:	f104 0008 	add.w	r0, r4, #8
9000ec3e:	f7ff fd2f 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000ec42:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000ec44:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ec48:	2d00      	cmp	r5, #0
9000ec4a:	f040 82b8 	bne.w	9000f1be <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000ec4e:	4f0b      	ldr	r7, [pc, #44]	; (9000ec7c <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000ec50:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000ec52:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ec54:	f021 0107 	bic.w	r1, r1, #7
9000ec58:	4301      	orrs	r1, r0
9000ec5a:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000ec5c:	075f      	lsls	r7, r3, #29
9000ec5e:	d522      	bpl.n	9000eca6 <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000ec60:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000ec64:	2905      	cmp	r1, #5
9000ec66:	f200 8408 	bhi.w	9000f47a <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000ec6a:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ec6e:	0011      	.short	0x0011
9000ec70:	039b0009 	.word	0x039b0009
9000ec74:	00110011 	.word	0x00110011
9000ec78:	0011      	.short	0x0011
9000ec7a:	bf00      	nop
9000ec7c:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ec80:	2101      	movs	r1, #1
9000ec82:	f104 0008 	add.w	r0, r4, #8
9000ec86:	f7ff fd0b 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000ec8a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000ec8c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ec90:	2d00      	cmp	r5, #0
9000ec92:	f040 8286 	bne.w	9000f1a2 <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000ec96:	4fae      	ldr	r7, [pc, #696]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ec98:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000ec9c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ec9e:	f021 0107 	bic.w	r1, r1, #7
9000eca2:	4301      	orrs	r1, r0
9000eca4:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000eca6:	0698      	lsls	r0, r3, #26
9000eca8:	d51f      	bpl.n	9000ecea <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000ecaa:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000ecae:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000ecb2:	f000 82f7 	beq.w	9000f2a4 <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000ecb6:	f200 810b 	bhi.w	9000eed0 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000ecba:	b159      	cbz	r1, 9000ecd4 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000ecbc:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000ecc0:	f040 8110 	bne.w	9000eee4 <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ecc4:	2100      	movs	r1, #0
9000ecc6:	f104 0008 	add.w	r0, r4, #8
9000ecca:	f7ff fce9 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000ecce:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000ecd0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ecd4:	2d00      	cmp	r5, #0
9000ecd6:	f040 8260 	bne.w	9000f19a <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000ecda:	4f9d      	ldr	r7, [pc, #628]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ecdc:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000ece0:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ece2:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000ece6:	4301      	orrs	r1, r0
9000ece8:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000ecea:	0659      	lsls	r1, r3, #25
9000ecec:	d51f      	bpl.n	9000ed2e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000ecee:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000ecf2:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000ecf6:	f000 829b 	beq.w	9000f230 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000ecfa:	f200 80f6 	bhi.w	9000eeea <HAL_RCCEx_PeriphCLKConfig+0x662>
9000ecfe:	b159      	cbz	r1, 9000ed18 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000ed00:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000ed04:	f040 80fb 	bne.w	9000eefe <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ed08:	2100      	movs	r1, #0
9000ed0a:	f104 0008 	add.w	r0, r4, #8
9000ed0e:	f7ff fcc7 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000ed12:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000ed14:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ed18:	2d00      	cmp	r5, #0
9000ed1a:	f040 824e 	bne.w	9000f1ba <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000ed1e:	4f8c      	ldr	r7, [pc, #560]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ed20:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000ed24:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ed26:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000ed2a:	4301      	orrs	r1, r0
9000ed2c:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000ed2e:	061f      	lsls	r7, r3, #24
9000ed30:	d51f      	bpl.n	9000ed72 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000ed32:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000ed36:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000ed3a:	f000 8289 	beq.w	9000f250 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000ed3e:	f200 80e1 	bhi.w	9000ef04 <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000ed42:	b159      	cbz	r1, 9000ed5c <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000ed44:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000ed48:	f040 80e6 	bne.w	9000ef18 <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ed4c:	2100      	movs	r1, #0
9000ed4e:	f104 0008 	add.w	r0, r4, #8
9000ed52:	f7ff fca5 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000ed56:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000ed58:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ed5c:	2d00      	cmp	r5, #0
9000ed5e:	f040 8228 	bne.w	9000f1b2 <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000ed62:	4f7b      	ldr	r7, [pc, #492]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ed64:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000ed68:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ed6a:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000ed6e:	4301      	orrs	r1, r0
9000ed70:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000ed72:	0718      	lsls	r0, r3, #28
9000ed74:	d50b      	bpl.n	9000ed8e <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000ed76:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000ed7a:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000ed7e:	f000 82a9 	beq.w	9000f2d4 <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000ed82:	4f73      	ldr	r7, [pc, #460]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ed84:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ed86:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000ed8a:	4301      	orrs	r1, r0
9000ed8c:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000ed8e:	06d9      	lsls	r1, r3, #27
9000ed90:	d50b      	bpl.n	9000edaa <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000ed92:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000ed96:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000ed9a:	f000 82a8 	beq.w	9000f2ee <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000ed9e:	4f6c      	ldr	r7, [pc, #432]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000eda0:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000eda2:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000eda6:	4301      	orrs	r1, r0
9000eda8:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000edaa:	031f      	lsls	r7, r3, #12
9000edac:	d50e      	bpl.n	9000edcc <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000edae:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000edb2:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000edb6:	f000 80f4 	beq.w	9000efa2 <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000edba:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000edbe:	f000 80f8 	beq.w	9000efb2 <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000edc2:	2900      	cmp	r1, #0
9000edc4:	f000 821c 	beq.w	9000f200 <HAL_RCCEx_PeriphCLKConfig+0x978>
9000edc8:	2601      	movs	r6, #1
9000edca:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000edcc:	0358      	lsls	r0, r3, #13
9000edce:	d50f      	bpl.n	9000edf0 <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000edd0:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000edd4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000edd8:	f000 80cf 	beq.w	9000ef7a <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000eddc:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000ede0:	f000 80d3 	beq.w	9000ef8a <HAL_RCCEx_PeriphCLKConfig+0x702>
9000ede4:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000ede8:	f000 8202 	beq.w	9000f1f0 <HAL_RCCEx_PeriphCLKConfig+0x968>
9000edec:	2601      	movs	r6, #1
9000edee:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000edf0:	03d9      	lsls	r1, r3, #15
9000edf2:	d509      	bpl.n	9000ee08 <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000edf4:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000edf6:	2900      	cmp	r1, #0
9000edf8:	f000 81f1 	beq.w	9000f1de <HAL_RCCEx_PeriphCLKConfig+0x956>
9000edfc:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000ee00:	f000 819d 	beq.w	9000f13e <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000ee04:	2601      	movs	r6, #1
9000ee06:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000ee08:	009f      	lsls	r7, r3, #2
9000ee0a:	f100 80f1 	bmi.w	9000eff0 <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000ee0e:	0398      	lsls	r0, r3, #14
9000ee10:	d50c      	bpl.n	9000ee2c <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000ee12:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000ee16:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000ee1a:	f000 81d8 	beq.w	9000f1ce <HAL_RCCEx_PeriphCLKConfig+0x946>
9000ee1e:	d97e      	bls.n	9000ef1e <HAL_RCCEx_PeriphCLKConfig+0x696>
9000ee20:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000ee24:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000ee28:	d07b      	beq.n	9000ef22 <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000ee2a:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000ee2c:	02d9      	lsls	r1, r3, #11
9000ee2e:	d506      	bpl.n	9000ee3e <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000ee30:	4847      	ldr	r0, [pc, #284]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ee32:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000ee34:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000ee36:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000ee3a:	4329      	orrs	r1, r5
9000ee3c:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000ee3e:	00df      	lsls	r7, r3, #3
9000ee40:	d507      	bpl.n	9000ee52 <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000ee42:	4843      	ldr	r0, [pc, #268]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ee44:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000ee48:	6901      	ldr	r1, [r0, #16]
9000ee4a:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000ee4e:	4329      	orrs	r1, r5
9000ee50:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000ee52:	029d      	lsls	r5, r3, #10
9000ee54:	d506      	bpl.n	9000ee64 <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000ee56:	483e      	ldr	r0, [pc, #248]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ee58:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000ee5a:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000ee5c:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000ee60:	4329      	orrs	r1, r5
9000ee62:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000ee64:	0058      	lsls	r0, r3, #1
9000ee66:	d509      	bpl.n	9000ee7c <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000ee68:	4939      	ldr	r1, [pc, #228]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ee6a:	6908      	ldr	r0, [r1, #16]
9000ee6c:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000ee70:	6108      	str	r0, [r1, #16]
9000ee72:	6908      	ldr	r0, [r1, #16]
9000ee74:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000ee78:	4328      	orrs	r0, r5
9000ee7a:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000ee7c:	2b00      	cmp	r3, #0
9000ee7e:	da06      	bge.n	9000ee8e <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000ee80:	4833      	ldr	r0, [pc, #204]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ee82:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000ee84:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000ee86:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000ee8a:	4329      	orrs	r1, r5
9000ee8c:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000ee8e:	0219      	lsls	r1, r3, #8
9000ee90:	d507      	bpl.n	9000eea2 <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000ee92:	492f      	ldr	r1, [pc, #188]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ee94:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000ee98:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000ee9a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000ee9e:	4303      	orrs	r3, r0
9000eea0:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000eea2:	07d3      	lsls	r3, r2, #31
9000eea4:	f100 80b0 	bmi.w	9000f008 <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000eea8:	0797      	lsls	r7, r2, #30
9000eeaa:	f100 80ba 	bmi.w	9000f022 <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000eeae:	0755      	lsls	r5, r2, #29
9000eeb0:	f100 80c4 	bmi.w	9000f03c <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000eeb4:	0710      	lsls	r0, r2, #28
9000eeb6:	f100 80ce 	bmi.w	9000f056 <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000eeba:	06d1      	lsls	r1, r2, #27
9000eebc:	f100 80d8 	bmi.w	9000f070 <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000eec0:	0692      	lsls	r2, r2, #26
9000eec2:	f100 8125 	bmi.w	9000f110 <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000eec6:	1e30      	subs	r0, r6, #0
9000eec8:	bf18      	it	ne
9000eeca:	2001      	movne	r0, #1
}
9000eecc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000eed0:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000eed4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000eed8:	f43f aefc 	beq.w	9000ecd4 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000eedc:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000eee0:	f43f aef8 	beq.w	9000ecd4 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000eee4:	2601      	movs	r6, #1
9000eee6:	4635      	mov	r5, r6
9000eee8:	e6ff      	b.n	9000ecea <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000eeea:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000eeee:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000eef2:	f43f af11 	beq.w	9000ed18 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000eef6:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000eefa:	f43f af0d 	beq.w	9000ed18 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000eefe:	2601      	movs	r6, #1
9000ef00:	4635      	mov	r5, r6
9000ef02:	e714      	b.n	9000ed2e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000ef04:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000ef08:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000ef0c:	f43f af26 	beq.w	9000ed5c <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000ef10:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000ef14:	f43f af22 	beq.w	9000ed5c <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000ef18:	2601      	movs	r6, #1
9000ef1a:	4635      	mov	r5, r6
9000ef1c:	e729      	b.n	9000ed72 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000ef1e:	2900      	cmp	r1, #0
9000ef20:	d183      	bne.n	9000ee2a <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000ef22:	2d00      	cmp	r5, #0
9000ef24:	f040 8151 	bne.w	9000f1ca <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000ef28:	4d09      	ldr	r5, [pc, #36]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ef2a:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000ef2c:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000ef30:	4301      	orrs	r1, r0
9000ef32:	6569      	str	r1, [r5, #84]	; 0x54
9000ef34:	e77a      	b.n	9000ee2c <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000ef36:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000ef38:	2d00      	cmp	r5, #0
9000ef3a:	f040 80fb 	bne.w	9000f134 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000ef3e:	4f04      	ldr	r7, [pc, #16]	; (9000ef50 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ef40:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000ef42:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000ef44:	f021 0107 	bic.w	r1, r1, #7
9000ef48:	4301      	orrs	r1, r0
9000ef4a:	6539      	str	r1, [r7, #80]	; 0x50
9000ef4c:	e4d7      	b.n	9000e8fe <HAL_RCCEx_PeriphCLKConfig+0x76>
9000ef4e:	bf00      	nop
9000ef50:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ef54:	2101      	movs	r1, #1
9000ef56:	f104 0008 	add.w	r0, r4, #8
9000ef5a:	f7ff fba1 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000ef5e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000ef60:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ef64:	2d00      	cmp	r5, #0
9000ef66:	f040 811a 	bne.w	9000f19e <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000ef6a:	4fb7      	ldr	r7, [pc, #732]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ef6c:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000ef6e:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000ef70:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000ef74:	4301      	orrs	r1, r0
9000ef76:	6539      	str	r1, [r7, #80]	; 0x50
9000ef78:	e5b6      	b.n	9000eae8 <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000ef7a:	2101      	movs	r1, #1
9000ef7c:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ef80:	f7ff fc08 	bl	9000e794 <RCCEx_PLL3_Config>
9000ef84:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000ef86:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ef8a:	2d00      	cmp	r5, #0
9000ef8c:	f040 811b 	bne.w	9000f1c6 <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000ef90:	4fad      	ldr	r7, [pc, #692]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ef92:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000ef96:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ef98:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000ef9c:	4301      	orrs	r1, r0
9000ef9e:	6579      	str	r1, [r7, #84]	; 0x54
9000efa0:	e726      	b.n	9000edf0 <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000efa2:	2102      	movs	r1, #2
9000efa4:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000efa8:	f7ff fbf4 	bl	9000e794 <RCCEx_PLL3_Config>
9000efac:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000efae:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000efb2:	2d00      	cmp	r5, #0
9000efb4:	f040 8105 	bne.w	9000f1c2 <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000efb8:	4fa3      	ldr	r7, [pc, #652]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000efba:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000efbe:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000efc0:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000efc4:	4301      	orrs	r1, r0
9000efc6:	65b9      	str	r1, [r7, #88]	; 0x58
9000efc8:	e700      	b.n	9000edcc <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000efca:	2101      	movs	r1, #1
9000efcc:	f104 0008 	add.w	r0, r4, #8
9000efd0:	f7ff fb66 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000efd4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000efd6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000efda:	2d00      	cmp	r5, #0
9000efdc:	f040 80db 	bne.w	9000f196 <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000efe0:	4f99      	ldr	r7, [pc, #612]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000efe2:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000efe4:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000efe6:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000efea:	4301      	orrs	r1, r0
9000efec:	6579      	str	r1, [r7, #84]	; 0x54
9000efee:	e615      	b.n	9000ec1c <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000eff0:	2102      	movs	r1, #2
9000eff2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eff6:	f7ff fbcd 	bl	9000e794 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000effa:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000effe:	2800      	cmp	r0, #0
9000f000:	f43f af05 	beq.w	9000ee0e <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000f004:	2601      	movs	r6, #1
9000f006:	e702      	b.n	9000ee0e <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000f008:	2100      	movs	r1, #0
9000f00a:	f104 0008 	add.w	r0, r4, #8
9000f00e:	f7ff fb47 	bl	9000e6a0 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000f012:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000f014:	2800      	cmp	r0, #0
9000f016:	f43f af47 	beq.w	9000eea8 <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000f01a:	0797      	lsls	r7, r2, #30
9000f01c:	4606      	mov	r6, r0
9000f01e:	f57f af46 	bpl.w	9000eeae <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000f022:	2101      	movs	r1, #1
9000f024:	f104 0008 	add.w	r0, r4, #8
9000f028:	f7ff fb3a 	bl	9000e6a0 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000f02c:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000f02e:	2800      	cmp	r0, #0
9000f030:	f43f af3d 	beq.w	9000eeae <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000f034:	0755      	lsls	r5, r2, #29
9000f036:	4606      	mov	r6, r0
9000f038:	f57f af3c 	bpl.w	9000eeb4 <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000f03c:	2102      	movs	r1, #2
9000f03e:	f104 0008 	add.w	r0, r4, #8
9000f042:	f7ff fb2d 	bl	9000e6a0 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000f046:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000f048:	2800      	cmp	r0, #0
9000f04a:	f43f af33 	beq.w	9000eeb4 <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000f04e:	4606      	mov	r6, r0
9000f050:	0710      	lsls	r0, r2, #28
9000f052:	f57f af32 	bpl.w	9000eeba <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f056:	2100      	movs	r1, #0
9000f058:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f05c:	f7ff fb9a 	bl	9000e794 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000f060:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000f062:	2800      	cmp	r0, #0
9000f064:	f43f af29 	beq.w	9000eeba <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000f068:	06d1      	lsls	r1, r2, #27
9000f06a:	4606      	mov	r6, r0
9000f06c:	f57f af28 	bpl.w	9000eec0 <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f070:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000f074:	2101      	movs	r1, #1
9000f076:	4628      	mov	r0, r5
9000f078:	f7ff fb8c 	bl	9000e794 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000f07c:	2800      	cmp	r0, #0
9000f07e:	f000 80c9 	beq.w	9000f214 <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000f082:	6863      	ldr	r3, [r4, #4]
9000f084:	069b      	lsls	r3, r3, #26
9000f086:	d54c      	bpl.n	9000f122 <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000f088:	4606      	mov	r6, r0
9000f08a:	e043      	b.n	9000f114 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000f08c:	4f6f      	ldr	r7, [pc, #444]	; (9000f24c <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000f08e:	683b      	ldr	r3, [r7, #0]
9000f090:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000f094:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000f096:	f7fb fc4f 	bl	9000a938 <HAL_GetTick>
9000f09a:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000f09c:	e006      	b.n	9000f0ac <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000f09e:	f7fb fc4b 	bl	9000a938 <HAL_GetTick>
9000f0a2:	eba0 0008 	sub.w	r0, r0, r8
9000f0a6:	2864      	cmp	r0, #100	; 0x64
9000f0a8:	f200 81a0 	bhi.w	9000f3ec <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000f0ac:	683b      	ldr	r3, [r7, #0]
9000f0ae:	05da      	lsls	r2, r3, #23
9000f0b0:	d5f5      	bpl.n	9000f09e <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000f0b2:	2d00      	cmp	r5, #0
9000f0b4:	f040 81d4 	bne.w	9000f460 <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000f0b8:	4a63      	ldr	r2, [pc, #396]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f0ba:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000f0be:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000f0c0:	4059      	eors	r1, r3
9000f0c2:	f411 7f40 	tst.w	r1, #768	; 0x300
9000f0c6:	d00b      	beq.n	9000f0e0 <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000f0c8:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000f0ca:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000f0cc:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000f0d0:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000f0d4:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000f0d6:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000f0d8:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000f0dc:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000f0de:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000f0e0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000f0e4:	f000 819e 	beq.w	9000f424 <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000f0e8:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000f0ec:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000f0f0:	f000 81ac 	beq.w	9000f44c <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000f0f4:	4954      	ldr	r1, [pc, #336]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f0f6:	690a      	ldr	r2, [r1, #16]
9000f0f8:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000f0fc:	610a      	str	r2, [r1, #16]
9000f0fe:	4852      	ldr	r0, [pc, #328]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f100:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000f104:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000f106:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000f108:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000f10c:	6701      	str	r1, [r0, #112]	; 0x70
9000f10e:	e553      	b.n	9000ebb8 <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f110:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f114:	2102      	movs	r1, #2
9000f116:	4628      	mov	r0, r5
9000f118:	f7ff fb3c 	bl	9000e794 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000f11c:	2800      	cmp	r0, #0
9000f11e:	f43f aed2 	beq.w	9000eec6 <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000f122:	2001      	movs	r0, #1
}
9000f124:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000f128:	462e      	mov	r6, r5
9000f12a:	e450      	b.n	9000e9ce <HAL_RCCEx_PeriphCLKConfig+0x146>
9000f12c:	462e      	mov	r6, r5
9000f12e:	e406      	b.n	9000e93e <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000f130:	462e      	mov	r6, r5
9000f132:	e489      	b.n	9000ea48 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000f134:	462e      	mov	r6, r5
9000f136:	f7ff bbe2 	b.w	9000e8fe <HAL_RCCEx_PeriphCLKConfig+0x76>
9000f13a:	462e      	mov	r6, r5
9000f13c:	e423      	b.n	9000e986 <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000f13e:	2102      	movs	r1, #2
9000f140:	f104 0008 	add.w	r0, r4, #8
9000f144:	f7ff faac 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000f148:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000f14a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f14e:	2d00      	cmp	r5, #0
9000f150:	d14c      	bne.n	9000f1ec <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000f152:	4f3d      	ldr	r7, [pc, #244]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f154:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000f156:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000f158:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000f15c:	4301      	orrs	r1, r0
9000f15e:	64f9      	str	r1, [r7, #76]	; 0x4c
9000f160:	e652      	b.n	9000ee08 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f162:	4839      	ldr	r0, [pc, #228]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f164:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f166:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f16a:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f16c:	e462      	b.n	9000ea34 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f16e:	4836      	ldr	r0, [pc, #216]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f170:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f172:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f176:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f178:	e41e      	b.n	9000e9b8 <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f17a:	4833      	ldr	r0, [pc, #204]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f17c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f17e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f182:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f184:	f7ff bbd1 	b.w	9000e92a <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f188:	482f      	ldr	r0, [pc, #188]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f18a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f18c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f190:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f192:	f7ff bbed 	b.w	9000e970 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000f196:	462e      	mov	r6, r5
9000f198:	e540      	b.n	9000ec1c <HAL_RCCEx_PeriphCLKConfig+0x394>
9000f19a:	462e      	mov	r6, r5
9000f19c:	e5a5      	b.n	9000ecea <HAL_RCCEx_PeriphCLKConfig+0x462>
9000f19e:	462e      	mov	r6, r5
9000f1a0:	e4a2      	b.n	9000eae8 <HAL_RCCEx_PeriphCLKConfig+0x260>
9000f1a2:	462e      	mov	r6, r5
9000f1a4:	e57f      	b.n	9000eca6 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000f1a6:	462e      	mov	r6, r5
9000f1a8:	e42c      	b.n	9000ea04 <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000f1aa:	462e      	mov	r6, r5
9000f1ac:	e501      	b.n	9000ebb2 <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000f1ae:	462e      	mov	r6, r5
9000f1b0:	e46a      	b.n	9000ea88 <HAL_RCCEx_PeriphCLKConfig+0x200>
9000f1b2:	462e      	mov	r6, r5
9000f1b4:	e5dd      	b.n	9000ed72 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000f1b6:	462e      	mov	r6, r5
9000f1b8:	e486      	b.n	9000eac8 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000f1ba:	462e      	mov	r6, r5
9000f1bc:	e5b7      	b.n	9000ed2e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000f1be:	462e      	mov	r6, r5
9000f1c0:	e54c      	b.n	9000ec5c <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000f1c2:	462e      	mov	r6, r5
9000f1c4:	e602      	b.n	9000edcc <HAL_RCCEx_PeriphCLKConfig+0x544>
9000f1c6:	462e      	mov	r6, r5
9000f1c8:	e612      	b.n	9000edf0 <HAL_RCCEx_PeriphCLKConfig+0x568>
9000f1ca:	462e      	mov	r6, r5
9000f1cc:	e62e      	b.n	9000ee2c <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f1ce:	4f1e      	ldr	r7, [pc, #120]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f1d0:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000f1d2:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000f1d6:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000f1d8:	2d00      	cmp	r5, #0
9000f1da:	d1f6      	bne.n	9000f1ca <HAL_RCCEx_PeriphCLKConfig+0x942>
9000f1dc:	e6a4      	b.n	9000ef28 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f1de:	481a      	ldr	r0, [pc, #104]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f1e0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f1e2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f1e6:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000f1e8:	2d00      	cmp	r5, #0
9000f1ea:	d0b2      	beq.n	9000f152 <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000f1ec:	462e      	mov	r6, r5
9000f1ee:	e60b      	b.n	9000ee08 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f1f0:	4815      	ldr	r0, [pc, #84]	; (9000f248 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f1f2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f1f4:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f1f8:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000f1fa:	2d00      	cmp	r5, #0
9000f1fc:	d1e3      	bne.n	9000f1c6 <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000f1fe:	e6c7      	b.n	9000ef90 <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000f200:	f104 0008 	add.w	r0, r4, #8
9000f204:	f7ff fa4c 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000f208:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000f20a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f20e:	2d00      	cmp	r5, #0
9000f210:	d1d7      	bne.n	9000f1c2 <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000f212:	e6d1      	b.n	9000efb8 <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000f214:	6862      	ldr	r2, [r4, #4]
9000f216:	e653      	b.n	9000eec0 <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000f218:	2102      	movs	r1, #2
9000f21a:	f104 0008 	add.w	r0, r4, #8
9000f21e:	f7ff fa3f 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000f222:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000f224:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f228:	2d00      	cmp	r5, #0
9000f22a:	d1bc      	bne.n	9000f1a6 <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000f22c:	f7ff bbe3 	b.w	9000e9f6 <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f230:	2102      	movs	r1, #2
9000f232:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f236:	f7ff faad 	bl	9000e794 <RCCEx_PLL3_Config>
9000f23a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000f23c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f240:	2d00      	cmp	r5, #0
9000f242:	d1ba      	bne.n	9000f1ba <HAL_RCCEx_PeriphCLKConfig+0x932>
9000f244:	e56b      	b.n	9000ed1e <HAL_RCCEx_PeriphCLKConfig+0x496>
9000f246:	bf00      	nop
9000f248:	58024400 	.word	0x58024400
9000f24c:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f250:	2102      	movs	r1, #2
9000f252:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f256:	f7ff fa9d 	bl	9000e794 <RCCEx_PLL3_Config>
9000f25a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000f25c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f260:	2d00      	cmp	r5, #0
9000f262:	d1a6      	bne.n	9000f1b2 <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000f264:	e57d      	b.n	9000ed62 <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f266:	4886      	ldr	r0, [pc, #536]	; (9000f480 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000f268:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f26a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f26e:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000f270:	2d00      	cmp	r5, #0
9000f272:	d194      	bne.n	9000f19e <HAL_RCCEx_PeriphCLKConfig+0x916>
9000f274:	e679      	b.n	9000ef6a <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f276:	2101      	movs	r1, #1
9000f278:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f27c:	f7ff fa8a 	bl	9000e794 <RCCEx_PLL3_Config>
9000f280:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000f282:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f286:	2d00      	cmp	r5, #0
9000f288:	d191      	bne.n	9000f1ae <HAL_RCCEx_PeriphCLKConfig+0x926>
9000f28a:	f7ff bbf6 	b.w	9000ea7a <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f28e:	2101      	movs	r1, #1
9000f290:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f294:	f7ff fa7e 	bl	9000e794 <RCCEx_PLL3_Config>
9000f298:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000f29a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f29e:	2d00      	cmp	r5, #0
9000f2a0:	d189      	bne.n	9000f1b6 <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000f2a2:	e409      	b.n	9000eab8 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f2a4:	2102      	movs	r1, #2
9000f2a6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f2aa:	f7ff fa73 	bl	9000e794 <RCCEx_PLL3_Config>
9000f2ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000f2b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f2b4:	2d00      	cmp	r5, #0
9000f2b6:	f47f af70 	bne.w	9000f19a <HAL_RCCEx_PeriphCLKConfig+0x912>
9000f2ba:	e50e      	b.n	9000ecda <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000f2bc:	2102      	movs	r1, #2
9000f2be:	f104 0008 	add.w	r0, r4, #8
9000f2c2:	f7ff f9ed 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000f2c6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000f2c8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f2cc:	2d00      	cmp	r5, #0
9000f2ce:	f47f af6c 	bne.w	9000f1aa <HAL_RCCEx_PeriphCLKConfig+0x922>
9000f2d2:	e467      	b.n	9000eba4 <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000f2d4:	2102      	movs	r1, #2
9000f2d6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f2da:	f7ff fa5b 	bl	9000e794 <RCCEx_PLL3_Config>
9000f2de:	2800      	cmp	r0, #0
9000f2e0:	f040 8094 	bne.w	9000f40c <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000f2e4:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000f2e8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f2ec:	e549      	b.n	9000ed82 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000f2ee:	2102      	movs	r1, #2
9000f2f0:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f2f4:	f7ff fa4e 	bl	9000e794 <RCCEx_PLL3_Config>
9000f2f8:	2800      	cmp	r0, #0
9000f2fa:	f040 808d 	bne.w	9000f418 <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000f2fe:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000f302:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f306:	e54a      	b.n	9000ed9e <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000f308:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f30c:	f7ff bae9 	b.w	9000e8e2 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f310:	2100      	movs	r1, #0
9000f312:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f316:	f7ff fa3d 	bl	9000e794 <RCCEx_PLL3_Config>
9000f31a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000f31c:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f320:	f7ff bb4a 	b.w	9000e9b8 <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f324:	2100      	movs	r1, #0
9000f326:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f32a:	f7ff fa33 	bl	9000e794 <RCCEx_PLL3_Config>
9000f32e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000f330:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f334:	e600      	b.n	9000ef38 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f336:	2100      	movs	r1, #0
9000f338:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f33c:	f7ff fa2a 	bl	9000e794 <RCCEx_PLL3_Config>
9000f340:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000f342:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f346:	f7ff baf0 	b.w	9000e92a <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f34a:	2102      	movs	r1, #2
9000f34c:	3028      	adds	r0, #40	; 0x28
9000f34e:	f7ff fa21 	bl	9000e794 <RCCEx_PLL3_Config>
9000f352:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000f354:	2e00      	cmp	r6, #0
9000f356:	f43f aab5 	beq.w	9000e8c4 <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000f35a:	e7d5      	b.n	9000f308 <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f35c:	4848      	ldr	r0, [pc, #288]	; (9000f480 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000f35e:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f360:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f362:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f366:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f368:	e5e6      	b.n	9000ef38 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000f36a:	2100      	movs	r1, #0
9000f36c:	f104 0008 	add.w	r0, r4, #8
9000f370:	f7ff f996 	bl	9000e6a0 <RCCEx_PLL2_Config>
9000f374:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000f376:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f37a:	e5dd      	b.n	9000ef38 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f37c:	2100      	movs	r1, #0
9000f37e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f382:	f7ff fa07 	bl	9000e794 <RCCEx_PLL3_Config>
9000f386:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000f388:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f38c:	f7ff bb52 	b.w	9000ea34 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f390:	2100      	movs	r1, #0
9000f392:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f396:	f7ff f9fd 	bl	9000e794 <RCCEx_PLL3_Config>
9000f39a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000f39c:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f3a0:	f7ff bae6 	b.w	9000e970 <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f3a4:	2101      	movs	r1, #1
9000f3a6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f3aa:	f7ff f9f3 	bl	9000e794 <RCCEx_PLL3_Config>
9000f3ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000f3b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f3b4:	2d00      	cmp	r5, #0
9000f3b6:	f47f aef4 	bne.w	9000f1a2 <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000f3ba:	e46c      	b.n	9000ec96 <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f3bc:	2101      	movs	r1, #1
9000f3be:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f3c2:	f7ff f9e7 	bl	9000e794 <RCCEx_PLL3_Config>
9000f3c6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000f3c8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f3cc:	2d00      	cmp	r5, #0
9000f3ce:	f47f aef6 	bne.w	9000f1be <HAL_RCCEx_PeriphCLKConfig+0x936>
9000f3d2:	e43c      	b.n	9000ec4e <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f3d4:	2101      	movs	r1, #1
9000f3d6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f3da:	f7ff f9db 	bl	9000e794 <RCCEx_PLL3_Config>
9000f3de:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000f3e0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f3e4:	2d00      	cmp	r5, #0
9000f3e6:	f47f aed6 	bne.w	9000f196 <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000f3ea:	e5f9      	b.n	9000efe0 <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000f3ec:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000f3ee:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f3f2:	4635      	mov	r5, r6
9000f3f4:	f7ff bbe0 	b.w	9000ebb8 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000f3f8:	2601      	movs	r6, #1
9000f3fa:	f7ff ba72 	b.w	9000e8e2 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f3fe:	4d20      	ldr	r5, [pc, #128]	; (9000f480 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000f400:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000f402:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000f406:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000f408:	f7ff ba64 	b.w	9000e8d4 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000f40c:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000f410:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000f412:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f416:	e4b4      	b.n	9000ed82 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000f418:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000f41c:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000f41e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f422:	e4bc      	b.n	9000ed9e <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000f424:	f7fb fa88 	bl	9000a938 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f428:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000f480 <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000f42c:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000f42e:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f432:	e004      	b.n	9000f43e <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000f434:	f7fb fa80 	bl	9000a938 <HAL_GetTick>
9000f438:	1bc0      	subs	r0, r0, r7
9000f43a:	4548      	cmp	r0, r9
9000f43c:	d8d6      	bhi.n	9000f3ec <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f43e:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000f442:	079b      	lsls	r3, r3, #30
9000f444:	d5f6      	bpl.n	9000f434 <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000f446:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000f44a:	e64d      	b.n	9000f0e8 <HAL_RCCEx_PeriphCLKConfig+0x860>
9000f44c:	480c      	ldr	r0, [pc, #48]	; (9000f480 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000f44e:	4a0d      	ldr	r2, [pc, #52]	; (9000f484 <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000f450:	6901      	ldr	r1, [r0, #16]
9000f452:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000f456:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000f45a:	430a      	orrs	r2, r1
9000f45c:	6102      	str	r2, [r0, #16]
9000f45e:	e64e      	b.n	9000f0fe <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000f460:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f464:	462e      	mov	r6, r5
9000f466:	f7ff bba7 	b.w	9000ebb8 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000f46a:	2601      	movs	r6, #1
9000f46c:	4635      	mov	r5, r6
9000f46e:	f7ff bbf5 	b.w	9000ec5c <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000f472:	2601      	movs	r6, #1
9000f474:	4635      	mov	r5, r6
9000f476:	f7ff bb9c 	b.w	9000ebb2 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000f47a:	2601      	movs	r6, #1
9000f47c:	4635      	mov	r5, r6
9000f47e:	e412      	b.n	9000eca6 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000f480:	58024400 	.word	0x58024400
9000f484:	00ffffcf 	.word	0x00ffffcf

9000f488 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000f488:	b318      	cbz	r0, 9000f4d2 <HAL_SDRAM_Init+0x4a>
{
9000f48a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000f48c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000f490:	4604      	mov	r4, r0
9000f492:	460d      	mov	r5, r1
9000f494:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000f498:	b1b3      	cbz	r3, 9000f4c8 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000f49a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f49c:	2302      	movs	r3, #2
9000f49e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000f4a2:	f851 0b04 	ldr.w	r0, [r1], #4
9000f4a6:	f000 fa39 	bl	9000f91c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000f4aa:	6862      	ldr	r2, [r4, #4]
9000f4ac:	4629      	mov	r1, r5
9000f4ae:	6820      	ldr	r0, [r4, #0]
9000f4b0:	f000 fa72 	bl	9000f998 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000f4b4:	4a08      	ldr	r2, [pc, #32]	; (9000f4d8 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000f4b6:	2101      	movs	r1, #1

  return HAL_OK;
9000f4b8:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000f4ba:	6813      	ldr	r3, [r2, #0]
9000f4bc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000f4c0:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000f4c2:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000f4c6:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000f4c8:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000f4cc:	f7f3 fed0 	bl	90003270 <HAL_SDRAM_MspInit>
9000f4d0:	e7e3      	b.n	9000f49a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000f4d2:	2001      	movs	r0, #1
}
9000f4d4:	4770      	bx	lr
9000f4d6:	bf00      	nop
9000f4d8:	52004000 	.word	0x52004000

9000f4dc <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000f4dc:	b510      	push	{r4, lr}
9000f4de:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000f4e0:	f7f3 ff42 	bl	90003368 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000f4e4:	e9d4 0100 	ldrd	r0, r1, [r4]
9000f4e8:	f000 faa4 	bl	9000fa34 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000f4ec:	2000      	movs	r0, #0
9000f4ee:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000f4f2:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000f4f6:	bd10      	pop	{r4, pc}

9000f4f8 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000f4f8:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000f4fa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000f4fe:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000f500:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000f502:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000f504:	d004      	beq.n	9000f510 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000f506:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000f50a:	2e01      	cmp	r6, #1
9000f50c:	d001      	beq.n	9000f512 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000f50e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000f510:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f512:	2302      	movs	r3, #2
9000f514:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000f516:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f518:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000f51c:	f000 fa9e 	bl	9000fa5c <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000f520:	682b      	ldr	r3, [r5, #0]
9000f522:	2b02      	cmp	r3, #2
9000f524:	d003      	beq.n	9000f52e <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000f526:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000f528:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000f52c:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000f52e:	2305      	movs	r3, #5
  return HAL_OK;
9000f530:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000f532:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000f536:	bd70      	pop	{r4, r5, r6, pc}

9000f538 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000f538:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000f53a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000f53e:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000f540:	2b02      	cmp	r3, #2
9000f542:	b2d8      	uxtb	r0, r3
9000f544:	d005      	beq.n	9000f552 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000f546:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000f54a:	2b01      	cmp	r3, #1
9000f54c:	b2dd      	uxtb	r5, r3
9000f54e:	d001      	beq.n	9000f554 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000f550:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000f552:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f554:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000f556:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f558:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000f55c:	f000 fa96 	bl	9000fa8c <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000f560:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000f562:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000f566:	bd38      	pop	{r3, r4, r5, pc}

9000f568 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000f568:	4770      	bx	lr
9000f56a:	bf00      	nop

9000f56c <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000f56c:	2800      	cmp	r0, #0
9000f56e:	f000 80a5 	beq.w	9000f6bc <HAL_TIM_Base_Init+0x150>
{
9000f572:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000f574:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000f578:	4604      	mov	r4, r0
9000f57a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000f57e:	2b00      	cmp	r3, #0
9000f580:	d076      	beq.n	9000f670 <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000f582:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000f584:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f586:	494e      	ldr	r1, [pc, #312]	; (9000f6c0 <HAL_TIM_Base_Init+0x154>)
9000f588:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000f58c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f590:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000f594:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f596:	fab1 f181 	clz	r1, r1
9000f59a:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000f59e:	d027      	beq.n	9000f5f0 <HAL_TIM_Base_Init+0x84>
9000f5a0:	bb31      	cbnz	r1, 9000f5f0 <HAL_TIM_Base_Init+0x84>
9000f5a2:	4848      	ldr	r0, [pc, #288]	; (9000f6c4 <HAL_TIM_Base_Init+0x158>)
9000f5a4:	4d48      	ldr	r5, [pc, #288]	; (9000f6c8 <HAL_TIM_Base_Init+0x15c>)
9000f5a6:	4282      	cmp	r2, r0
9000f5a8:	d067      	beq.n	9000f67a <HAL_TIM_Base_Init+0x10e>
9000f5aa:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000f5ae:	4282      	cmp	r2, r0
9000f5b0:	d063      	beq.n	9000f67a <HAL_TIM_Base_Init+0x10e>
9000f5b2:	1b55      	subs	r5, r2, r5
9000f5b4:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000f5b8:	fab5 f585 	clz	r5, r5
9000f5bc:	4282      	cmp	r2, r0
9000f5be:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000f5c2:	d063      	beq.n	9000f68c <HAL_TIM_Base_Init+0x120>
9000f5c4:	2d00      	cmp	r5, #0
9000f5c6:	d161      	bne.n	9000f68c <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f5c8:	4840      	ldr	r0, [pc, #256]	; (9000f6cc <HAL_TIM_Base_Init+0x160>)
9000f5ca:	4941      	ldr	r1, [pc, #260]	; (9000f6d0 <HAL_TIM_Base_Init+0x164>)
9000f5cc:	428a      	cmp	r2, r1
9000f5ce:	bf18      	it	ne
9000f5d0:	4282      	cmpne	r2, r0
9000f5d2:	d065      	beq.n	9000f6a0 <HAL_TIM_Base_Init+0x134>
9000f5d4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000f5d8:	428a      	cmp	r2, r1
9000f5da:	d061      	beq.n	9000f6a0 <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f5dc:	69a0      	ldr	r0, [r4, #24]
9000f5de:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f5e2:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f5e4:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000f5e6:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000f5e8:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f5ea:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f5ec:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f5ee:	e023      	b.n	9000f638 <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f5f0:	4d35      	ldr	r5, [pc, #212]	; (9000f6c8 <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f5f2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f5f6:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f5f8:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000f5fa:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f5fc:	fab5 f585 	clz	r5, r5
9000f600:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f602:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000f604:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f608:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f60a:	69a0      	ldr	r0, [r4, #24]
9000f60c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000f610:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000f612:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f614:	68e3      	ldr	r3, [r4, #12]
9000f616:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f618:	6863      	ldr	r3, [r4, #4]
9000f61a:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f61c:	b951      	cbnz	r1, 9000f634 <HAL_TIM_Base_Init+0xc8>
9000f61e:	b94d      	cbnz	r5, 9000f634 <HAL_TIM_Base_Init+0xc8>
9000f620:	492a      	ldr	r1, [pc, #168]	; (9000f6cc <HAL_TIM_Base_Init+0x160>)
9000f622:	4b2b      	ldr	r3, [pc, #172]	; (9000f6d0 <HAL_TIM_Base_Init+0x164>)
9000f624:	429a      	cmp	r2, r3
9000f626:	bf18      	it	ne
9000f628:	428a      	cmpne	r2, r1
9000f62a:	d003      	beq.n	9000f634 <HAL_TIM_Base_Init+0xc8>
9000f62c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000f630:	429a      	cmp	r2, r3
9000f632:	d101      	bne.n	9000f638 <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000f634:	6963      	ldr	r3, [r4, #20]
9000f636:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000f638:	2301      	movs	r3, #1
  return HAL_OK;
9000f63a:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000f63c:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000f63e:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000f642:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000f646:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000f64a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000f64e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000f652:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000f656:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000f65a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000f65e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f662:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000f666:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000f66a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000f66e:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000f670:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000f674:	f7ff ff78 	bl	9000f568 <HAL_TIM_Base_MspInit>
9000f678:	e783      	b.n	9000f582 <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f67a:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f67c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f680:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f682:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000f686:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f688:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f68a:	e7ba      	b.n	9000f602 <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000f68c:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f68e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f692:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f694:	480f      	ldr	r0, [pc, #60]	; (9000f6d4 <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f696:	4282      	cmp	r2, r0
9000f698:	d0b3      	beq.n	9000f602 <HAL_TIM_Base_Init+0x96>
9000f69a:	2d00      	cmp	r5, #0
9000f69c:	d1b1      	bne.n	9000f602 <HAL_TIM_Base_Init+0x96>
9000f69e:	e793      	b.n	9000f5c8 <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f6a0:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000f6a2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f6a6:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f6a8:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f6aa:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f6ac:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000f6b0:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000f6b2:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000f6b4:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f6b6:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f6b8:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f6ba:	e7b1      	b.n	9000f620 <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000f6bc:	2001      	movs	r0, #1
}
9000f6be:	4770      	bx	lr
9000f6c0:	40010000 	.word	0x40010000
9000f6c4:	40000400 	.word	0x40000400
9000f6c8:	40010400 	.word	0x40010400
9000f6cc:	40014000 	.word	0x40014000
9000f6d0:	40014400 	.word	0x40014400
9000f6d4:	40000c00 	.word	0x40000c00

9000f6d8 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000f6d8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000f6dc:	2b01      	cmp	r3, #1
9000f6de:	d141      	bne.n	9000f764 <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f6e0:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000f6e2:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f6e4:	4b24      	ldr	r3, [pc, #144]	; (9000f778 <HAL_TIM_Base_Start_IT+0xa0>)
9000f6e6:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000f6ea:	bf18      	it	ne
9000f6ec:	429a      	cmpne	r2, r3
{
9000f6ee:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f6f0:	bf0c      	ite	eq
9000f6f2:	2301      	moveq	r3, #1
9000f6f4:	2300      	movne	r3, #0
9000f6f6:	4d21      	ldr	r5, [pc, #132]	; (9000f77c <HAL_TIM_Base_Start_IT+0xa4>)
9000f6f8:	4c21      	ldr	r4, [pc, #132]	; (9000f780 <HAL_TIM_Base_Start_IT+0xa8>)
9000f6fa:	42aa      	cmp	r2, r5
9000f6fc:	bf08      	it	eq
9000f6fe:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000f702:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f706:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f708:	42a2      	cmp	r2, r4
9000f70a:	bf08      	it	eq
9000f70c:	f043 0301 	orreq.w	r3, r3, #1
9000f710:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f714:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f718:	481a      	ldr	r0, [pc, #104]	; (9000f784 <HAL_TIM_Base_Start_IT+0xac>)
9000f71a:	42a2      	cmp	r2, r4
9000f71c:	bf08      	it	eq
9000f71e:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f722:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f724:	4282      	cmp	r2, r0
9000f726:	bf08      	it	eq
9000f728:	f043 0301 	orreq.w	r3, r3, #1
9000f72c:	4916      	ldr	r1, [pc, #88]	; (9000f788 <HAL_TIM_Base_Start_IT+0xb0>)
9000f72e:	428a      	cmp	r2, r1
9000f730:	bf08      	it	eq
9000f732:	f043 0301 	orreq.w	r3, r3, #1
9000f736:	b933      	cbnz	r3, 9000f746 <HAL_TIM_Base_Start_IT+0x6e>
9000f738:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000f73c:	1a10      	subs	r0, r2, r0
9000f73e:	fab0 f080 	clz	r0, r0
9000f742:	0940      	lsrs	r0, r0, #5
9000f744:	b198      	cbz	r0, 9000f76e <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000f746:	6891      	ldr	r1, [r2, #8]
9000f748:	4b10      	ldr	r3, [pc, #64]	; (9000f78c <HAL_TIM_Base_Start_IT+0xb4>)
9000f74a:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000f74c:	2b06      	cmp	r3, #6
9000f74e:	d00b      	beq.n	9000f768 <HAL_TIM_Base_Start_IT+0x90>
9000f750:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000f754:	d008      	beq.n	9000f768 <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000f756:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000f758:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000f75a:	f043 0301 	orr.w	r3, r3, #1
9000f75e:	6013      	str	r3, [r2, #0]
}
9000f760:	bc30      	pop	{r4, r5}
9000f762:	4770      	bx	lr
    return HAL_ERROR;
9000f764:	2001      	movs	r0, #1
}
9000f766:	4770      	bx	lr
  return HAL_OK;
9000f768:	2000      	movs	r0, #0
}
9000f76a:	bc30      	pop	{r4, r5}
9000f76c:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000f76e:	6813      	ldr	r3, [r2, #0]
9000f770:	f043 0301 	orr.w	r3, r3, #1
9000f774:	6013      	str	r3, [r2, #0]
9000f776:	e7f3      	b.n	9000f760 <HAL_TIM_Base_Start_IT+0x88>
9000f778:	40010000 	.word	0x40010000
9000f77c:	40000400 	.word	0x40000400
9000f780:	40000800 	.word	0x40000800
9000f784:	40010400 	.word	0x40010400
9000f788:	40001800 	.word	0x40001800
9000f78c:	00010007 	.word	0x00010007

9000f790 <HAL_TIM_OC_DelayElapsedCallback>:
9000f790:	4770      	bx	lr
9000f792:	bf00      	nop

9000f794 <HAL_TIM_IC_CaptureCallback>:
9000f794:	4770      	bx	lr
9000f796:	bf00      	nop

9000f798 <HAL_TIM_PWM_PulseFinishedCallback>:
9000f798:	4770      	bx	lr
9000f79a:	bf00      	nop

9000f79c <HAL_TIM_TriggerCallback>:
9000f79c:	4770      	bx	lr
9000f79e:	bf00      	nop

9000f7a0 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000f7a0:	6803      	ldr	r3, [r0, #0]
9000f7a2:	691a      	ldr	r2, [r3, #16]
9000f7a4:	0791      	lsls	r1, r2, #30
{
9000f7a6:	b510      	push	{r4, lr}
9000f7a8:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000f7aa:	d502      	bpl.n	9000f7b2 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000f7ac:	68da      	ldr	r2, [r3, #12]
9000f7ae:	0792      	lsls	r2, r2, #30
9000f7b0:	d468      	bmi.n	9000f884 <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000f7b2:	691a      	ldr	r2, [r3, #16]
9000f7b4:	0752      	lsls	r2, r2, #29
9000f7b6:	d502      	bpl.n	9000f7be <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000f7b8:	68da      	ldr	r2, [r3, #12]
9000f7ba:	0750      	lsls	r0, r2, #29
9000f7bc:	d44f      	bmi.n	9000f85e <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000f7be:	691a      	ldr	r2, [r3, #16]
9000f7c0:	0711      	lsls	r1, r2, #28
9000f7c2:	d502      	bpl.n	9000f7ca <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000f7c4:	68da      	ldr	r2, [r3, #12]
9000f7c6:	0712      	lsls	r2, r2, #28
9000f7c8:	d437      	bmi.n	9000f83a <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000f7ca:	691a      	ldr	r2, [r3, #16]
9000f7cc:	06d0      	lsls	r0, r2, #27
9000f7ce:	d502      	bpl.n	9000f7d6 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000f7d0:	68da      	ldr	r2, [r3, #12]
9000f7d2:	06d1      	lsls	r1, r2, #27
9000f7d4:	d41e      	bmi.n	9000f814 <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000f7d6:	691a      	ldr	r2, [r3, #16]
9000f7d8:	07d2      	lsls	r2, r2, #31
9000f7da:	d502      	bpl.n	9000f7e2 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000f7dc:	68da      	ldr	r2, [r3, #12]
9000f7de:	07d0      	lsls	r0, r2, #31
9000f7e0:	d469      	bmi.n	9000f8b6 <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000f7e2:	691a      	ldr	r2, [r3, #16]
9000f7e4:	0611      	lsls	r1, r2, #24
9000f7e6:	d502      	bpl.n	9000f7ee <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000f7e8:	68da      	ldr	r2, [r3, #12]
9000f7ea:	0612      	lsls	r2, r2, #24
9000f7ec:	d46b      	bmi.n	9000f8c6 <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000f7ee:	691a      	ldr	r2, [r3, #16]
9000f7f0:	05d0      	lsls	r0, r2, #23
9000f7f2:	d502      	bpl.n	9000f7fa <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000f7f4:	68da      	ldr	r2, [r3, #12]
9000f7f6:	0611      	lsls	r1, r2, #24
9000f7f8:	d46d      	bmi.n	9000f8d6 <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000f7fa:	691a      	ldr	r2, [r3, #16]
9000f7fc:	0652      	lsls	r2, r2, #25
9000f7fe:	d502      	bpl.n	9000f806 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000f800:	68da      	ldr	r2, [r3, #12]
9000f802:	0650      	lsls	r0, r2, #25
9000f804:	d46f      	bmi.n	9000f8e6 <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000f806:	691a      	ldr	r2, [r3, #16]
9000f808:	0691      	lsls	r1, r2, #26
9000f80a:	d502      	bpl.n	9000f812 <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000f80c:	68da      	ldr	r2, [r3, #12]
9000f80e:	0692      	lsls	r2, r2, #26
9000f810:	d449      	bmi.n	9000f8a6 <HAL_TIM_IRQHandler+0x106>
}
9000f812:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000f814:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000f818:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000f81a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000f81c:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000f81e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000f820:	69db      	ldr	r3, [r3, #28]
9000f822:	f413 7f40 	tst.w	r3, #768	; 0x300
9000f826:	d16f      	bne.n	9000f908 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f828:	f7ff ffb2 	bl	9000f790 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f82c:	4620      	mov	r0, r4
9000f82e:	f7ff ffb3 	bl	9000f798 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f832:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000f834:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f836:	7722      	strb	r2, [r4, #28]
9000f838:	e7cd      	b.n	9000f7d6 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000f83a:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000f83e:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000f840:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000f842:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000f844:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000f846:	69db      	ldr	r3, [r3, #28]
9000f848:	079b      	lsls	r3, r3, #30
9000f84a:	d15a      	bne.n	9000f902 <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f84c:	f7ff ffa0 	bl	9000f790 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f850:	4620      	mov	r0, r4
9000f852:	f7ff ffa1 	bl	9000f798 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f856:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000f858:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f85a:	7722      	strb	r2, [r4, #28]
9000f85c:	e7b5      	b.n	9000f7ca <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000f85e:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000f862:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000f864:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000f866:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000f868:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000f86a:	699b      	ldr	r3, [r3, #24]
9000f86c:	f413 7f40 	tst.w	r3, #768	; 0x300
9000f870:	d144      	bne.n	9000f8fc <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f872:	f7ff ff8d 	bl	9000f790 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f876:	4620      	mov	r0, r4
9000f878:	f7ff ff8e 	bl	9000f798 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f87c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000f87e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f880:	7722      	strb	r2, [r4, #28]
9000f882:	e79c      	b.n	9000f7be <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000f884:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000f888:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000f88a:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000f88c:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000f88e:	699b      	ldr	r3, [r3, #24]
9000f890:	0799      	lsls	r1, r3, #30
9000f892:	d130      	bne.n	9000f8f6 <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000f894:	f7ff ff7c 	bl	9000f790 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f898:	4620      	mov	r0, r4
9000f89a:	f7ff ff7d 	bl	9000f798 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f89e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000f8a0:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f8a2:	7722      	strb	r2, [r4, #28]
9000f8a4:	e785      	b.n	9000f7b2 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000f8a6:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000f8aa:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000f8ac:	611a      	str	r2, [r3, #16]
}
9000f8ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000f8b2:	f000 b82d 	b.w	9000f910 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000f8b6:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000f8ba:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000f8bc:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000f8be:	f7f3 fb3b 	bl	90002f38 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000f8c2:	6823      	ldr	r3, [r4, #0]
9000f8c4:	e78d      	b.n	9000f7e2 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000f8c6:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000f8ca:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000f8cc:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000f8ce:	f000 f821 	bl	9000f914 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000f8d2:	6823      	ldr	r3, [r4, #0]
9000f8d4:	e78b      	b.n	9000f7ee <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000f8d6:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000f8da:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000f8dc:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000f8de:	f000 f81b 	bl	9000f918 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000f8e2:	6823      	ldr	r3, [r4, #0]
9000f8e4:	e789      	b.n	9000f7fa <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000f8e6:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000f8ea:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000f8ec:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000f8ee:	f7ff ff55 	bl	9000f79c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000f8f2:	6823      	ldr	r3, [r4, #0]
9000f8f4:	e787      	b.n	9000f806 <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000f8f6:	f7ff ff4d 	bl	9000f794 <HAL_TIM_IC_CaptureCallback>
9000f8fa:	e7d0      	b.n	9000f89e <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000f8fc:	f7ff ff4a 	bl	9000f794 <HAL_TIM_IC_CaptureCallback>
9000f900:	e7bc      	b.n	9000f87c <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000f902:	f7ff ff47 	bl	9000f794 <HAL_TIM_IC_CaptureCallback>
9000f906:	e7a6      	b.n	9000f856 <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000f908:	f7ff ff44 	bl	9000f794 <HAL_TIM_IC_CaptureCallback>
9000f90c:	e791      	b.n	9000f832 <HAL_TIM_IRQHandler+0x92>
9000f90e:	bf00      	nop

9000f910 <HAL_TIMEx_CommutCallback>:
9000f910:	4770      	bx	lr
9000f912:	bf00      	nop

9000f914 <HAL_TIMEx_BreakCallback>:
9000f914:	4770      	bx	lr
9000f916:	bf00      	nop

9000f918 <HAL_TIMEx_Break2Callback>:
9000f918:	4770      	bx	lr
9000f91a:	bf00      	nop

9000f91c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000f91c:	680b      	ldr	r3, [r1, #0]
{
9000f91e:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000f920:	b9d3      	cbnz	r3, 9000f958 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f922:	6804      	ldr	r4, [r0, #0]
9000f924:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9000f928:	684a      	ldr	r2, [r1, #4]
9000f92a:	4023      	ands	r3, r4
9000f92c:	4313      	orrs	r3, r2
9000f92e:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000f932:	4323      	orrs	r3, r4
9000f934:	4313      	orrs	r3, r2
9000f936:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9000f93a:	4323      	orrs	r3, r4
9000f93c:	4313      	orrs	r3, r2
9000f93e:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
9000f942:	4323      	orrs	r3, r4
9000f944:	4313      	orrs	r3, r2
9000f946:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9000f94a:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000f94c:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f950:	4313      	orrs	r3, r2
9000f952:	6003      	str	r3, [r0, #0]
}
9000f954:	2000      	movs	r0, #0
9000f956:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f958:	6802      	ldr	r2, [r0, #0]
9000f95a:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000f95e:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000f962:	4322      	orrs	r2, r4
9000f964:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9000f966:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f968:	4b0a      	ldr	r3, [pc, #40]	; (9000f994 <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f96a:	4322      	orrs	r2, r4
9000f96c:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f96e:	6842      	ldr	r2, [r0, #4]
9000f970:	4013      	ands	r3, r2
9000f972:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
9000f976:	4323      	orrs	r3, r4
9000f978:	4313      	orrs	r3, r2
9000f97a:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
9000f97e:	4323      	orrs	r3, r4
9000f980:	4313      	orrs	r3, r2
9000f982:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
9000f986:	4323      	orrs	r3, r4
}
9000f988:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f98c:	4313      	orrs	r3, r2
9000f98e:	6043      	str	r3, [r0, #4]
}
9000f990:	2000      	movs	r0, #0
9000f992:	4770      	bx	lr
9000f994:	ffff8000 	.word	0xffff8000

9000f998 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000f998:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000f99a:	bb0a      	cbnz	r2, 9000f9e0 <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f99c:	6883      	ldr	r3, [r0, #8]
9000f99e:	e9d1 2400 	ldrd	r2, r4, [r1]
9000f9a2:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000f9a6:	3c01      	subs	r4, #1
9000f9a8:	3a01      	subs	r2, #1
9000f9aa:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000f9ae:	4313      	orrs	r3, r2
9000f9b0:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000f9b4:	3c01      	subs	r4, #1
9000f9b6:	3a01      	subs	r2, #1
9000f9b8:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000f9bc:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000f9c0:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000f9c4:	698a      	ldr	r2, [r1, #24]
9000f9c6:	3d01      	subs	r5, #1
9000f9c8:	1e61      	subs	r1, r4, #1
9000f9ca:	3a01      	subs	r2, #1
9000f9cc:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000f9d0:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
9000f9d4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000f9d8:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f9da:	6083      	str	r3, [r0, #8]
}
9000f9dc:	2000      	movs	r0, #0
9000f9de:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f9e0:	6885      	ldr	r5, [r0, #8]
9000f9e2:	68ca      	ldr	r2, [r1, #12]
9000f9e4:	4b12      	ldr	r3, [pc, #72]	; (9000fa30 <FMC_SDRAM_Timing_Init+0x98>)
9000f9e6:	1e54      	subs	r4, r2, #1
9000f9e8:	694a      	ldr	r2, [r1, #20]
9000f9ea:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f9ec:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f9ee:	3a01      	subs	r2, #1
9000f9f0:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f9f4:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f9f8:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f9fc:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000fa00:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000fa02:	68c3      	ldr	r3, [r0, #12]
9000fa04:	3c01      	subs	r4, #1
9000fa06:	3a01      	subs	r2, #1
9000fa08:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000fa0c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000fa10:	690c      	ldr	r4, [r1, #16]
9000fa12:	4313      	orrs	r3, r2
9000fa14:	698a      	ldr	r2, [r1, #24]
9000fa16:	1e61      	subs	r1, r4, #1
9000fa18:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000fa1c:	3a01      	subs	r2, #1
9000fa1e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000fa22:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9000fa26:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000fa28:	60c3      	str	r3, [r0, #12]
}
9000fa2a:	2000      	movs	r0, #0
9000fa2c:	4770      	bx	lr
9000fa2e:	bf00      	nop
9000fa30:	ff0f0fff 	.word	0xff0f0fff

9000fa34 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000fa34:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000fa36:	2200      	movs	r2, #0
{
9000fa38:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000fa3a:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000fa3e:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
9000fa42:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000fa46:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000fa4a:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000fa4c:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000fa50:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000fa52:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000fa54:	619a      	str	r2, [r3, #24]
}
9000fa56:	bc30      	pop	{r4, r5}
9000fa58:	4770      	bx	lr
9000fa5a:	bf00      	nop

9000fa5c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000fa5c:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000fa5e:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000fa62:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000fa64:	6900      	ldr	r0, [r0, #16]
9000fa66:	4323      	orrs	r3, r4
9000fa68:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000fa6c:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000fa70:	4c05      	ldr	r4, [pc, #20]	; (9000fa88 <FMC_SDRAM_SendCommand+0x2c>)
9000fa72:	3901      	subs	r1, #1
9000fa74:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000fa76:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000fa78:	4323      	orrs	r3, r4
}
9000fa7a:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000fa7e:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000fa82:	6113      	str	r3, [r2, #16]
}
9000fa84:	4770      	bx	lr
9000fa86:	bf00      	nop
9000fa88:	ffc00000 	.word	0xffc00000

9000fa8c <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000fa8c:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000fa8e:	4b05      	ldr	r3, [pc, #20]	; (9000faa4 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000fa90:	2000      	movs	r0, #0
{
9000fa92:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000fa94:	6954      	ldr	r4, [r2, #20]
9000fa96:	4023      	ands	r3, r4
}
9000fa98:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000fa9c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000faa0:	6151      	str	r1, [r2, #20]
}
9000faa2:	4770      	bx	lr
9000faa4:	ffffc001 	.word	0xffffc001

9000faa8 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000faa8:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000faaa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000faae:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000fab0:	f002 fcda 	bl	90012468 <xTaskGetSchedulerState>
9000fab4:	2801      	cmp	r0, #1
9000fab6:	d100      	bne.n	9000faba <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000fab8:	bd08      	pop	{r3, pc}
9000faba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000fabe:	f000 bcd9 	b.w	90010474 <xPortSysTickHandler>
9000fac2:	bf00      	nop

9000fac4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000fac4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000fac8:	b92b      	cbnz	r3, 9000fad6 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000faca:	4b06      	ldr	r3, [pc, #24]	; (9000fae4 <osKernelInitialize+0x20>)
9000facc:	6818      	ldr	r0, [r3, #0]
9000face:	b928      	cbnz	r0, 9000fadc <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000fad0:	2201      	movs	r2, #1
9000fad2:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000fad4:	4770      	bx	lr
    stat = osErrorISR;
9000fad6:	f06f 0005 	mvn.w	r0, #5
9000fada:	4770      	bx	lr
    } else {
      stat = osError;
9000fadc:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000fae0:	4770      	bx	lr
9000fae2:	bf00      	nop
9000fae4:	2402092c 	.word	0x2402092c

9000fae8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000fae8:	b510      	push	{r4, lr}
9000faea:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000faee:	b974      	cbnz	r4, 9000fb0e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000faf0:	4b08      	ldr	r3, [pc, #32]	; (9000fb14 <osKernelStart+0x2c>)
9000faf2:	681a      	ldr	r2, [r3, #0]
9000faf4:	2a01      	cmp	r2, #1
9000faf6:	d107      	bne.n	9000fb08 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000faf8:	4907      	ldr	r1, [pc, #28]	; (9000fb18 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000fafa:	2202      	movs	r2, #2
9000fafc:	77cc      	strb	r4, [r1, #31]
9000fafe:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000fb00:	f002 fa40 	bl	90011f84 <vTaskStartScheduler>
      stat = osOK;
9000fb04:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000fb06:	bd10      	pop	{r4, pc}
      stat = osError;
9000fb08:	f04f 30ff 	mov.w	r0, #4294967295
}
9000fb0c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000fb0e:	f06f 0005 	mvn.w	r0, #5
}
9000fb12:	bd10      	pop	{r4, pc}
9000fb14:	2402092c 	.word	0x2402092c
9000fb18:	e000ed00 	.word	0xe000ed00

9000fb1c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000fb1c:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000fb1e:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000fb20:	b087      	sub	sp, #28
9000fb22:	4614      	mov	r4, r2
  hTask = NULL;
9000fb24:	9505      	str	r5, [sp, #20]
9000fb26:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000fb2a:	bb5a      	cbnz	r2, 9000fb84 <osThreadNew+0x68>
9000fb2c:	4606      	mov	r6, r0
9000fb2e:	b348      	cbz	r0, 9000fb84 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000fb30:	b1e4      	cbz	r4, 9000fb6c <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000fb32:	69a7      	ldr	r7, [r4, #24]
9000fb34:	bb4f      	cbnz	r7, 9000fb8a <osThreadNew+0x6e>
9000fb36:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000fb38:	6863      	ldr	r3, [r4, #4]
9000fb3a:	07db      	lsls	r3, r3, #31
9000fb3c:	d422      	bmi.n	9000fb84 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000fb3e:	6963      	ldr	r3, [r4, #20]
9000fb40:	b33b      	cbz	r3, 9000fb92 <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000fb42:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000fb46:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9000fb48:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000fb4a:	b338      	cbz	r0, 9000fb9c <osThreadNew+0x80>
9000fb4c:	68e2      	ldr	r2, [r4, #12]
9000fb4e:	2a5f      	cmp	r2, #95	; 0x5f
9000fb50:	d918      	bls.n	9000fb84 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000fb52:	6924      	ldr	r4, [r4, #16]
9000fb54:	b1b3      	cbz	r3, 9000fb84 <osThreadNew+0x68>
9000fb56:	b1ac      	cbz	r4, 9000fb84 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000fb58:	460b      	mov	r3, r1
9000fb5a:	4662      	mov	r2, ip
9000fb5c:	4629      	mov	r1, r5
9000fb5e:	9700      	str	r7, [sp, #0]
9000fb60:	e9cd 4001 	strd	r4, r0, [sp, #4]
9000fb64:	4630      	mov	r0, r6
9000fb66:	f002 f871 	bl	90011c4c <xTaskCreateStatic>
9000fb6a:	e00c      	b.n	9000fb86 <osThreadNew+0x6a>
9000fb6c:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000fb6e:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000fb70:	460b      	mov	r3, r1
9000fb72:	4621      	mov	r1, r4
9000fb74:	ac05      	add	r4, sp, #20
9000fb76:	4630      	mov	r0, r6
9000fb78:	9700      	str	r7, [sp, #0]
9000fb7a:	9401      	str	r4, [sp, #4]
9000fb7c:	f002 f910 	bl	90011da0 <xTaskCreate>
9000fb80:	2801      	cmp	r0, #1
9000fb82:	d009      	beq.n	9000fb98 <osThreadNew+0x7c>
        return (NULL);
9000fb84:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000fb86:	b007      	add	sp, #28
9000fb88:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000fb8a:	1e7a      	subs	r2, r7, #1
9000fb8c:	2a37      	cmp	r2, #55	; 0x37
9000fb8e:	d9d3      	bls.n	9000fb38 <osThreadNew+0x1c>
9000fb90:	e7f8      	b.n	9000fb84 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
9000fb92:	f04f 0c80 	mov.w	ip, #128	; 0x80
9000fb96:	e7d6      	b.n	9000fb46 <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
9000fb98:	9805      	ldr	r0, [sp, #20]
9000fb9a:	e7f4      	b.n	9000fb86 <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000fb9c:	68e3      	ldr	r3, [r4, #12]
9000fb9e:	2b00      	cmp	r3, #0
9000fba0:	d1f1      	bne.n	9000fb86 <osThreadNew+0x6a>
9000fba2:	6923      	ldr	r3, [r4, #16]
9000fba4:	2b00      	cmp	r3, #0
9000fba6:	d1ee      	bne.n	9000fb86 <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000fba8:	fa1f f28c 	uxth.w	r2, ip
9000fbac:	462c      	mov	r4, r5
9000fbae:	e7df      	b.n	9000fb70 <osThreadNew+0x54>

9000fbb0 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000fbb0:	b510      	push	{r4, lr}
9000fbb2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000fbb6:	b92c      	cbnz	r4, 9000fbc4 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000fbb8:	b900      	cbnz	r0, 9000fbbc <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000fbba:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
9000fbbc:	f002 f98c 	bl	90011ed8 <vTaskDelay>
    stat = osOK;
9000fbc0:	4620      	mov	r0, r4
}
9000fbc2:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000fbc4:	f06f 0005 	mvn.w	r0, #5
}
9000fbc8:	bd10      	pop	{r4, pc}
9000fbca:	bf00      	nop

9000fbcc <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
9000fbcc:	b570      	push	{r4, r5, r6, lr}
9000fbce:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9000fbd2:	b9db      	cbnz	r3, 9000fc0c <osMutexNew+0x40>
    if (attr != NULL) {
9000fbd4:	4604      	mov	r4, r0
9000fbd6:	b1e0      	cbz	r0, 9000fc12 <osMutexNew+0x46>
      type = attr->attr_bits;
9000fbd8:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9000fbda:	0733      	lsls	r3, r6, #28
9000fbdc:	d416      	bmi.n	9000fc0c <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000fbde:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9000fbe0:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000fbe4:	68c3      	ldr	r3, [r0, #12]
9000fbe6:	b181      	cbz	r1, 9000fc0a <osMutexNew+0x3e>
9000fbe8:	2b4f      	cmp	r3, #79	; 0x4f
9000fbea:	d90f      	bls.n	9000fc0c <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
9000fbec:	b31e      	cbz	r6, 9000fc36 <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
9000fbee:	2004      	movs	r0, #4
9000fbf0:	f001 f852 	bl	90010c98 <xQueueCreateMutexStatic>
9000fbf4:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9000fbf6:	b14d      	cbz	r5, 9000fc0c <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9000fbf8:	6821      	ldr	r1, [r4, #0]
9000fbfa:	4628      	mov	r0, r5
9000fbfc:	f001 fd82 	bl	90011704 <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
9000fc00:	b12e      	cbz	r6, 9000fc0e <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9000fc02:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9000fc06:	4628      	mov	r0, r5
9000fc08:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000fc0a:	b163      	cbz	r3, 9000fc26 <osMutexNew+0x5a>
  hMutex = NULL;
9000fc0c:	2500      	movs	r5, #0
}
9000fc0e:	4628      	mov	r0, r5
9000fc10:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
9000fc12:	2001      	movs	r0, #1
9000fc14:	f001 f8b0 	bl	90010d78 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000fc18:	4605      	mov	r5, r0
9000fc1a:	2800      	cmp	r0, #0
9000fc1c:	d0f6      	beq.n	9000fc0c <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
9000fc1e:	4621      	mov	r1, r4
9000fc20:	f001 fd70 	bl	90011704 <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
9000fc24:	e7f3      	b.n	9000fc0e <osMutexNew+0x42>
            if (rmtx != 0U) {
9000fc26:	b15e      	cbz	r6, 9000fc40 <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9000fc28:	2004      	movs	r0, #4
9000fc2a:	f001 f8a5 	bl	90010d78 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000fc2e:	4605      	mov	r5, r0
9000fc30:	2800      	cmp	r0, #0
9000fc32:	d1e1      	bne.n	9000fbf8 <osMutexNew+0x2c>
9000fc34:	e7ea      	b.n	9000fc0c <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9000fc36:	2001      	movs	r0, #1
9000fc38:	f001 f82e 	bl	90010c98 <xQueueCreateMutexStatic>
9000fc3c:	4605      	mov	r5, r0
9000fc3e:	e7da      	b.n	9000fbf6 <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
9000fc40:	2001      	movs	r0, #1
9000fc42:	f001 f899 	bl	90010d78 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000fc46:	4605      	mov	r5, r0
9000fc48:	e7d5      	b.n	9000fbf6 <osMutexNew+0x2a>
9000fc4a:	bf00      	nop

9000fc4c <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
9000fc4c:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
9000fc50:	f000 0301 	and.w	r3, r0, #1
9000fc54:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
9000fc58:	b9a8      	cbnz	r0, 9000fc86 <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000fc5a:	b1ba      	cbz	r2, 9000fc8c <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000fc5c:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
9000fc5e:	b510      	push	{r4, lr}
9000fc60:	460c      	mov	r4, r1
    if (rmtx != 0U) {
9000fc62:	b953      	cbnz	r3, 9000fc7a <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
9000fc64:	f001 fb00 	bl	90011268 <xQueueSemaphoreTake>
9000fc68:	2801      	cmp	r0, #1
9000fc6a:	d00a      	beq.n	9000fc82 <osMutexAcquire+0x36>
          stat = osErrorResource;
9000fc6c:	2c00      	cmp	r4, #0
9000fc6e:	bf14      	ite	ne
9000fc70:	f06f 0001 	mvnne.w	r0, #1
9000fc74:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
9000fc78:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000fc7a:	f001 fc7d 	bl	90011578 <xQueueTakeMutexRecursive>
9000fc7e:	2801      	cmp	r0, #1
9000fc80:	d1f4      	bne.n	9000fc6c <osMutexAcquire+0x20>
  stat = osOK;
9000fc82:	2000      	movs	r0, #0
}
9000fc84:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000fc86:	f06f 0005 	mvn.w	r0, #5
9000fc8a:	4770      	bx	lr
    stat = osErrorParameter;
9000fc8c:	f06f 0003 	mvn.w	r0, #3
}
9000fc90:	4770      	bx	lr
9000fc92:	bf00      	nop

9000fc94 <osMutexRelease>:
9000fc94:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
9000fc98:	b9ba      	cbnz	r2, 9000fcca <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
9000fc9a:	b510      	push	{r4, lr}
9000fc9c:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000fca0:	b1b4      	cbz	r4, 9000fcd0 <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
9000fca2:	f000 0301 	and.w	r3, r0, #1
9000fca6:	b943      	cbnz	r3, 9000fcba <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
9000fca8:	461a      	mov	r2, r3
9000fcaa:	4619      	mov	r1, r3
9000fcac:	4620      	mov	r0, r4
9000fcae:	f000 fe71 	bl	90010994 <xQueueGenericSend>
9000fcb2:	2801      	cmp	r0, #1
9000fcb4:	d106      	bne.n	9000fcc4 <osMutexRelease+0x30>
  stat = osOK;
9000fcb6:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000fcb8:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9000fcba:	4620      	mov	r0, r4
9000fcbc:	f001 f83c 	bl	90010d38 <xQueueGiveMutexRecursive>
9000fcc0:	2801      	cmp	r0, #1
9000fcc2:	d0f8      	beq.n	9000fcb6 <osMutexRelease+0x22>
        stat = osErrorResource;
9000fcc4:	f06f 0002 	mvn.w	r0, #2
}
9000fcc8:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000fcca:	f06f 0005 	mvn.w	r0, #5
}
9000fcce:	4770      	bx	lr
    stat = osErrorParameter;
9000fcd0:	f06f 0003 	mvn.w	r0, #3
}
9000fcd4:	bd10      	pop	{r4, pc}
9000fcd6:	bf00      	nop

9000fcd8 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000fcd8:	b5f0      	push	{r4, r5, r6, r7, lr}
9000fcda:	b083      	sub	sp, #12
9000fcdc:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000fce0:	b98e      	cbnz	r6, 9000fd06 <osSemaphoreNew+0x2e>
9000fce2:	4605      	mov	r5, r0
9000fce4:	b178      	cbz	r0, 9000fd06 <osSemaphoreNew+0x2e>
9000fce6:	4288      	cmp	r0, r1
9000fce8:	460f      	mov	r7, r1
9000fcea:	d30c      	bcc.n	9000fd06 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000fcec:	4614      	mov	r4, r2
9000fcee:	b182      	cbz	r2, 9000fd12 <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000fcf0:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000fcf4:	b15a      	cbz	r2, 9000fd0e <osSemaphoreNew+0x36>
9000fcf6:	2b4f      	cmp	r3, #79	; 0x4f
9000fcf8:	d905      	bls.n	9000fd06 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000fcfa:	2801      	cmp	r0, #1
9000fcfc:	d032      	beq.n	9000fd64 <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000fcfe:	f000 fda1 	bl	90010844 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000fd02:	4605      	mov	r5, r0
9000fd04:	b978      	cbnz	r0, 9000fd26 <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9000fd06:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000fd08:	4628      	mov	r0, r5
9000fd0a:	b003      	add	sp, #12
9000fd0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000fd0e:	2b00      	cmp	r3, #0
9000fd10:	d1f9      	bne.n	9000fd06 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000fd12:	2d01      	cmp	r5, #1
9000fd14:	d00f      	beq.n	9000fd36 <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000fd16:	4628      	mov	r0, r5
9000fd18:	4639      	mov	r1, r7
9000fd1a:	f000 fdf5 	bl	90010908 <xQueueCreateCountingSemaphore>
9000fd1e:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000fd20:	2d00      	cmp	r5, #0
9000fd22:	d0f0      	beq.n	9000fd06 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000fd24:	b104      	cbz	r4, 9000fd28 <osSemaphoreNew+0x50>
          name = attr->name;
9000fd26:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9000fd28:	4628      	mov	r0, r5
9000fd2a:	4621      	mov	r1, r4
9000fd2c:	f001 fcea 	bl	90011704 <vQueueAddToRegistry>
}
9000fd30:	4628      	mov	r0, r5
9000fd32:	b003      	add	sp, #12
9000fd34:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000fd36:	4628      	mov	r0, r5
9000fd38:	2203      	movs	r2, #3
9000fd3a:	2100      	movs	r1, #0
9000fd3c:	f000 fd40 	bl	900107c0 <xQueueGenericCreate>
9000fd40:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000fd42:	2d00      	cmp	r5, #0
9000fd44:	d0df      	beq.n	9000fd06 <osSemaphoreNew+0x2e>
9000fd46:	2f00      	cmp	r7, #0
9000fd48:	d0ea      	beq.n	9000fd20 <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000fd4a:	2300      	movs	r3, #0
9000fd4c:	4628      	mov	r0, r5
9000fd4e:	461a      	mov	r2, r3
9000fd50:	4619      	mov	r1, r3
9000fd52:	f000 fe1f 	bl	90010994 <xQueueGenericSend>
9000fd56:	2801      	cmp	r0, #1
9000fd58:	d0e4      	beq.n	9000fd24 <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
9000fd5a:	4628      	mov	r0, r5
            hSemaphore = NULL;
9000fd5c:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
9000fd5e:	f001 fc8b 	bl	90011678 <vQueueDelete>
      if (hSemaphore != NULL) {
9000fd62:	e7d1      	b.n	9000fd08 <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000fd64:	4613      	mov	r3, r2
9000fd66:	2203      	movs	r2, #3
9000fd68:	4631      	mov	r1, r6
9000fd6a:	9200      	str	r2, [sp, #0]
9000fd6c:	4632      	mov	r2, r6
9000fd6e:	f000 fcbb 	bl	900106e8 <xQueueGenericCreateStatic>
9000fd72:	4605      	mov	r5, r0
9000fd74:	e7e5      	b.n	9000fd42 <osSemaphoreNew+0x6a>
9000fd76:	bf00      	nop

9000fd78 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000fd78:	b370      	cbz	r0, 9000fdd8 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000fd7a:	b510      	push	{r4, lr}
9000fd7c:	460c      	mov	r4, r1
9000fd7e:	b082      	sub	sp, #8
9000fd80:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000fd84:	b1c3      	cbz	r3, 9000fdb8 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
9000fd86:	bb21      	cbnz	r1, 9000fdd2 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000fd88:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fd8a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000fd8c:	f001 fc14 	bl	900115b8 <xQueueReceiveFromISR>
9000fd90:	2801      	cmp	r0, #1
9000fd92:	d11a      	bne.n	9000fdca <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fd94:	9b01      	ldr	r3, [sp, #4]
9000fd96:	b913      	cbnz	r3, 9000fd9e <osSemaphoreAcquire+0x26>
  stat = osOK;
9000fd98:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000fd9a:	b002      	add	sp, #8
9000fd9c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000fd9e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fda2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fda6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fdaa:	f3bf 8f4f 	dsb	sy
9000fdae:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fdb2:	4620      	mov	r0, r4
}
9000fdb4:	b002      	add	sp, #8
9000fdb6:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000fdb8:	f001 fa56 	bl	90011268 <xQueueSemaphoreTake>
9000fdbc:	2801      	cmp	r0, #1
9000fdbe:	d0eb      	beq.n	9000fd98 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000fdc0:	b11c      	cbz	r4, 9000fdca <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
9000fdc2:	f06f 0001 	mvn.w	r0, #1
}
9000fdc6:	b002      	add	sp, #8
9000fdc8:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000fdca:	f06f 0002 	mvn.w	r0, #2
}
9000fdce:	b002      	add	sp, #8
9000fdd0:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000fdd2:	f06f 0003 	mvn.w	r0, #3
9000fdd6:	e7e0      	b.n	9000fd9a <osSemaphoreAcquire+0x22>
9000fdd8:	f06f 0003 	mvn.w	r0, #3
}
9000fddc:	4770      	bx	lr
9000fdde:	bf00      	nop

9000fde0 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000fde0:	b330      	cbz	r0, 9000fe30 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000fde2:	b510      	push	{r4, lr}
9000fde4:	b082      	sub	sp, #8
9000fde6:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000fdea:	b1ab      	cbz	r3, 9000fe18 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
9000fdec:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000fdee:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000fdf0:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000fdf2:	f001 f863 	bl	90010ebc <xQueueGiveFromISR>
9000fdf6:	2801      	cmp	r0, #1
9000fdf8:	d117      	bne.n	9000fe2a <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000fdfa:	9b01      	ldr	r3, [sp, #4]
9000fdfc:	b193      	cbz	r3, 9000fe24 <osSemaphoreRelease+0x44>
9000fdfe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fe02:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fe06:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fe0a:	f3bf 8f4f 	dsb	sy
9000fe0e:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fe12:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000fe14:	b002      	add	sp, #8
9000fe16:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000fe18:	461a      	mov	r2, r3
9000fe1a:	4619      	mov	r1, r3
9000fe1c:	f000 fdba 	bl	90010994 <xQueueGenericSend>
9000fe20:	2801      	cmp	r0, #1
9000fe22:	d102      	bne.n	9000fe2a <osSemaphoreRelease+0x4a>
  stat = osOK;
9000fe24:	2000      	movs	r0, #0
}
9000fe26:	b002      	add	sp, #8
9000fe28:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9000fe2a:	f06f 0002 	mvn.w	r0, #2
9000fe2e:	e7fa      	b.n	9000fe26 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
9000fe30:	f06f 0003 	mvn.w	r0, #3
}
9000fe34:	4770      	bx	lr
9000fe36:	bf00      	nop

9000fe38 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000fe38:	b5f0      	push	{r4, r5, r6, r7, lr}
9000fe3a:	b083      	sub	sp, #12
9000fe3c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000fe40:	b987      	cbnz	r7, 9000fe64 <osMessageQueueNew+0x2c>
9000fe42:	4605      	mov	r5, r0
9000fe44:	b170      	cbz	r0, 9000fe64 <osMessageQueueNew+0x2c>
9000fe46:	b169      	cbz	r1, 9000fe64 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000fe48:	4614      	mov	r4, r2
9000fe4a:	b17a      	cbz	r2, 9000fe6c <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000fe4c:	6893      	ldr	r3, [r2, #8]
9000fe4e:	b1cb      	cbz	r3, 9000fe84 <osMessageQueueNew+0x4c>
9000fe50:	68d2      	ldr	r2, [r2, #12]
9000fe52:	2a4f      	cmp	r2, #79	; 0x4f
9000fe54:	d906      	bls.n	9000fe64 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000fe56:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000fe58:	b122      	cbz	r2, 9000fe64 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000fe5a:	fb01 f505 	mul.w	r5, r1, r5
9000fe5e:	6966      	ldr	r6, [r4, #20]
9000fe60:	42ae      	cmp	r6, r5
9000fe62:	d21f      	bcs.n	9000fea4 <osMessageQueueNew+0x6c>
  hQueue = NULL;
9000fe64:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000fe66:	4628      	mov	r0, r5
9000fe68:	b003      	add	sp, #12
9000fe6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000fe6c:	f000 fca8 	bl	900107c0 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000fe70:	4605      	mov	r5, r0
9000fe72:	2800      	cmp	r0, #0
9000fe74:	d0f6      	beq.n	9000fe64 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000fe76:	4628      	mov	r0, r5
9000fe78:	4621      	mov	r1, r4
9000fe7a:	f001 fc43 	bl	90011704 <vQueueAddToRegistry>
}
9000fe7e:	4628      	mov	r0, r5
9000fe80:	b003      	add	sp, #12
9000fe82:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000fe84:	68d3      	ldr	r3, [r2, #12]
9000fe86:	2b00      	cmp	r3, #0
9000fe88:	d1ec      	bne.n	9000fe64 <osMessageQueueNew+0x2c>
9000fe8a:	6913      	ldr	r3, [r2, #16]
9000fe8c:	2b00      	cmp	r3, #0
9000fe8e:	d1e9      	bne.n	9000fe64 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000fe90:	6952      	ldr	r2, [r2, #20]
9000fe92:	2a00      	cmp	r2, #0
9000fe94:	d1e6      	bne.n	9000fe64 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000fe96:	f000 fc93 	bl	900107c0 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000fe9a:	4605      	mov	r5, r0
9000fe9c:	2800      	cmp	r0, #0
9000fe9e:	d0e1      	beq.n	9000fe64 <osMessageQueueNew+0x2c>
        name = attr->name;
9000fea0:	6824      	ldr	r4, [r4, #0]
9000fea2:	e7e8      	b.n	9000fe76 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000fea4:	9700      	str	r7, [sp, #0]
9000fea6:	f000 fc1f 	bl	900106e8 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000feaa:	4605      	mov	r5, r0
9000feac:	2800      	cmp	r0, #0
9000feae:	d1f7      	bne.n	9000fea0 <osMessageQueueNew+0x68>
9000feb0:	e7d8      	b.n	9000fe64 <osMessageQueueNew+0x2c>
9000feb2:	bf00      	nop

9000feb4 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000feb4:	b530      	push	{r4, r5, lr}
9000feb6:	461c      	mov	r4, r3
9000feb8:	b083      	sub	sp, #12
9000feba:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000febe:	b30b      	cbz	r3, 9000ff04 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fec0:	3c00      	subs	r4, #0
9000fec2:	bf18      	it	ne
9000fec4:	2401      	movne	r4, #1
9000fec6:	2900      	cmp	r1, #0
9000fec8:	bf08      	it	eq
9000feca:	f044 0401 	orreq.w	r4, r4, #1
9000fece:	bb7c      	cbnz	r4, 9000ff30 <osMessageQueuePut+0x7c>
9000fed0:	fab0 f480 	clz	r4, r0
9000fed4:	0964      	lsrs	r4, r4, #5
9000fed6:	b358      	cbz	r0, 9000ff30 <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fed8:	4623      	mov	r3, r4
9000feda:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fedc:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fede:	f000 ff83 	bl	90010de8 <xQueueGenericSendFromISR>
9000fee2:	2801      	cmp	r0, #1
9000fee4:	d120      	bne.n	9000ff28 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fee6:	9b01      	ldr	r3, [sp, #4]
9000fee8:	b1db      	cbz	r3, 9000ff22 <osMessageQueuePut+0x6e>
9000feea:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000feee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fef2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fef6:	f3bf 8f4f 	dsb	sy
9000fefa:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fefe:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000ff00:	b003      	add	sp, #12
9000ff02:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000ff04:	b1a0      	cbz	r0, 9000ff30 <osMessageQueuePut+0x7c>
9000ff06:	fab1 f381 	clz	r3, r1
9000ff0a:	095b      	lsrs	r3, r3, #5
9000ff0c:	b181      	cbz	r1, 9000ff30 <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000ff0e:	4622      	mov	r2, r4
9000ff10:	f000 fd40 	bl	90010994 <xQueueGenericSend>
9000ff14:	2801      	cmp	r0, #1
9000ff16:	d004      	beq.n	9000ff22 <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
9000ff18:	b134      	cbz	r4, 9000ff28 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
9000ff1a:	f06f 0001 	mvn.w	r0, #1
}
9000ff1e:	b003      	add	sp, #12
9000ff20:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000ff22:	2000      	movs	r0, #0
}
9000ff24:	b003      	add	sp, #12
9000ff26:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000ff28:	f06f 0002 	mvn.w	r0, #2
}
9000ff2c:	b003      	add	sp, #12
9000ff2e:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000ff30:	f06f 0003 	mvn.w	r0, #3
9000ff34:	e7e4      	b.n	9000ff00 <osMessageQueuePut+0x4c>
9000ff36:	bf00      	nop

9000ff38 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000ff38:	b530      	push	{r4, r5, lr}
9000ff3a:	461c      	mov	r4, r3
9000ff3c:	b083      	sub	sp, #12
9000ff3e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000ff42:	b303      	cbz	r3, 9000ff86 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000ff44:	3c00      	subs	r4, #0
9000ff46:	bf18      	it	ne
9000ff48:	2401      	movne	r4, #1
9000ff4a:	2900      	cmp	r1, #0
9000ff4c:	bf08      	it	eq
9000ff4e:	f044 0401 	orreq.w	r4, r4, #1
9000ff52:	bb5c      	cbnz	r4, 9000ffac <osMessageQueueGet+0x74>
9000ff54:	fab0 f480 	clz	r4, r0
9000ff58:	0964      	lsrs	r4, r4, #5
9000ff5a:	b338      	cbz	r0, 9000ffac <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000ff5c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000ff5e:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000ff60:	f001 fb2a 	bl	900115b8 <xQueueReceiveFromISR>
9000ff64:	2801      	cmp	r0, #1
9000ff66:	d11d      	bne.n	9000ffa4 <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000ff68:	9b01      	ldr	r3, [sp, #4]
9000ff6a:	b1c3      	cbz	r3, 9000ff9e <osMessageQueueGet+0x66>
9000ff6c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ff70:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ff74:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ff78:	f3bf 8f4f 	dsb	sy
9000ff7c:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000ff80:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000ff82:	b003      	add	sp, #12
9000ff84:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000ff86:	b188      	cbz	r0, 9000ffac <osMessageQueueGet+0x74>
9000ff88:	b181      	cbz	r1, 9000ffac <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000ff8a:	4622      	mov	r2, r4
9000ff8c:	f000 ffee 	bl	90010f6c <xQueueReceive>
9000ff90:	2801      	cmp	r0, #1
9000ff92:	d004      	beq.n	9000ff9e <osMessageQueueGet+0x66>
        if (timeout != 0U) {
9000ff94:	b134      	cbz	r4, 9000ffa4 <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
9000ff96:	f06f 0001 	mvn.w	r0, #1
}
9000ff9a:	b003      	add	sp, #12
9000ff9c:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000ff9e:	2000      	movs	r0, #0
}
9000ffa0:	b003      	add	sp, #12
9000ffa2:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000ffa4:	f06f 0002 	mvn.w	r0, #2
}
9000ffa8:	b003      	add	sp, #12
9000ffaa:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000ffac:	f06f 0003 	mvn.w	r0, #3
9000ffb0:	e7e7      	b.n	9000ff82 <osMessageQueueGet+0x4a>
9000ffb2:	bf00      	nop

9000ffb4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000ffb4:	4b04      	ldr	r3, [pc, #16]	; (9000ffc8 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000ffb6:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000ffb8:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000ffba:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000ffbc:	4c03      	ldr	r4, [pc, #12]	; (9000ffcc <vApplicationGetIdleTaskMemory+0x18>)
9000ffbe:	600c      	str	r4, [r1, #0]
}
9000ffc0:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000ffc4:	6013      	str	r3, [r2, #0]
}
9000ffc6:	4770      	bx	lr
9000ffc8:	240208cc 	.word	0x240208cc
9000ffcc:	240206cc 	.word	0x240206cc

9000ffd0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000ffd0:	4b05      	ldr	r3, [pc, #20]	; (9000ffe8 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000ffd2:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000ffd4:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000ffd6:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000ffda:	4c04      	ldr	r4, [pc, #16]	; (9000ffec <vApplicationGetTimerTaskMemory+0x1c>)
9000ffdc:	600c      	str	r4, [r1, #0]
}
9000ffde:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000ffe2:	6013      	str	r3, [r2, #0]
}
9000ffe4:	4770      	bx	lr
9000ffe6:	bf00      	nop
9000ffe8:	24020d30 	.word	0x24020d30
9000ffec:	24020930 	.word	0x24020930

9000fff0 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000fff0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fff4:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000fff6:	f002 f861 	bl	900120bc <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000fffa:	4a54      	ldr	r2, [pc, #336]	; (9001014c <pvPortMalloc+0x15c>)
9000fffc:	6816      	ldr	r6, [r2, #0]
9000fffe:	2e00      	cmp	r6, #0
90010000:	d06f      	beq.n	900100e2 <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
90010002:	4b53      	ldr	r3, [pc, #332]	; (90010150 <pvPortMalloc+0x160>)
90010004:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
90010006:	423d      	tst	r5, r7
90010008:	d12e      	bne.n	90010068 <pvPortMalloc+0x78>
9001000a:	b36d      	cbz	r5, 90010068 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
9001000c:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
90010010:	076d      	lsls	r5, r5, #29
90010012:	d002      	beq.n	9001001a <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
90010014:	f024 0407 	bic.w	r4, r4, #7
90010018:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9001001a:	b32c      	cbz	r4, 90010068 <pvPortMalloc+0x78>
9001001c:	f8df c148 	ldr.w	ip, [pc, #328]	; 90010168 <pvPortMalloc+0x178>
90010020:	f8dc 5000 	ldr.w	r5, [ip]
90010024:	42a5      	cmp	r5, r4
90010026:	d31f      	bcc.n	90010068 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
90010028:	484a      	ldr	r0, [pc, #296]	; (90010154 <pvPortMalloc+0x164>)
9001002a:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9001002c:	e003      	b.n	90010036 <pvPortMalloc+0x46>
9001002e:	681a      	ldr	r2, [r3, #0]
90010030:	b122      	cbz	r2, 9001003c <pvPortMalloc+0x4c>
90010032:	4618      	mov	r0, r3
90010034:	4613      	mov	r3, r2
90010036:	6859      	ldr	r1, [r3, #4]
90010038:	42a1      	cmp	r1, r4
9001003a:	d3f8      	bcc.n	9001002e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9001003c:	42b3      	cmp	r3, r6
9001003e:	d013      	beq.n	90010068 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
90010040:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
90010042:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
90010044:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
90010048:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9001004a:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9001004e:	d929      	bls.n	900100a4 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
90010050:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
90010052:	0748      	lsls	r0, r1, #29
90010054:	d00f      	beq.n	90010076 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
90010056:	f04f 0350 	mov.w	r3, #80	; 0x50
9001005a:	f383 8811 	msr	BASEPRI, r3
9001005e:	f3bf 8f6f 	isb	sy
90010062:	f3bf 8f4f 	dsb	sy
90010066:	e7fe      	b.n	90010066 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
90010068:	f04f 0800 	mov.w	r8, #0
9001006c:	f002 f82e 	bl	900120cc <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
90010070:	4640      	mov	r0, r8
90010072:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
90010076:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90010078:	4a36      	ldr	r2, [pc, #216]	; (90010154 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
9001007a:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9001007c:	4614      	mov	r4, r2
9001007e:	6812      	ldr	r2, [r2, #0]
90010080:	4291      	cmp	r1, r2
90010082:	d8fb      	bhi.n	9001007c <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
90010084:	6860      	ldr	r0, [r4, #4]
90010086:	eb04 0e00 	add.w	lr, r4, r0
9001008a:	4571      	cmp	r1, lr
9001008c:	d04a      	beq.n	90010124 <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9001008e:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010092:	eb01 000e 	add.w	r0, r1, lr
90010096:	4282      	cmp	r2, r0
90010098:	d050      	beq.n	9001013c <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9001009a:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9001009c:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9001009e:	bf18      	it	ne
900100a0:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
900100a2:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
900100a4:	4a2c      	ldr	r2, [pc, #176]	; (90010158 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
900100a6:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
900100a8:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
900100aa:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
900100ac:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
900100b0:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
900100b2:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
900100b6:	bf38      	it	cc
900100b8:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
900100ba:	4a28      	ldr	r2, [pc, #160]	; (9001015c <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
900100bc:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
900100c0:	6813      	ldr	r3, [r2, #0]
900100c2:	3301      	adds	r3, #1
900100c4:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
900100c6:	f002 f801 	bl	900120cc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
900100ca:	f018 0f07 	tst.w	r8, #7
900100ce:	d0cf      	beq.n	90010070 <pvPortMalloc+0x80>
900100d0:	f04f 0350 	mov.w	r3, #80	; 0x50
900100d4:	f383 8811 	msr	BASEPRI, r3
900100d8:	f3bf 8f6f 	isb	sy
900100dc:	f3bf 8f4f 	dsb	sy
900100e0:	e7fe      	b.n	900100e0 <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
900100e2:	4b1f      	ldr	r3, [pc, #124]	; (90010160 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
900100e4:	075e      	lsls	r6, r3, #29
900100e6:	d117      	bne.n	90010118 <pvPortMalloc+0x128>
900100e8:	4e1e      	ldr	r6, [pc, #120]	; (90010164 <pvPortMalloc+0x174>)
900100ea:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
900100ec:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
900100ee:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
900100f2:	4818      	ldr	r0, [pc, #96]	; (90010154 <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
900100f4:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
900100f8:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
900100fa:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
900100fc:	4a16      	ldr	r2, [pc, #88]	; (90010158 <pvPortMalloc+0x168>)
900100fe:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
90010100:	4a19      	ldr	r2, [pc, #100]	; (90010168 <pvPortMalloc+0x178>)
90010102:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
90010104:	4a12      	ldr	r2, [pc, #72]	; (90010150 <pvPortMalloc+0x160>)
90010106:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
90010108:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9001010a:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
9001010e:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
90010112:	e9c1 6300 	strd	r6, r3, [r1]
}
90010116:	e776      	b.n	90010006 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
90010118:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9001011a:	4e12      	ldr	r6, [pc, #72]	; (90010164 <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9001011c:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
90010120:	460b      	mov	r3, r1
90010122:	e7e3      	b.n	900100ec <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90010124:	6849      	ldr	r1, [r1, #4]
90010126:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9001012a:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9001012e:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010132:	428a      	cmp	r2, r1
90010134:	d001      	beq.n	9001013a <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010136:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
90010138:	e7b3      	b.n	900100a2 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9001013a:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
9001013c:	42b2      	cmp	r2, r6
9001013e:	d0ac      	beq.n	9001009a <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90010140:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010142:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90010144:	4470      	add	r0, lr
90010146:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010148:	e7a7      	b.n	9001009a <pvPortMalloc+0xaa>
9001014a:	bf00      	nop
9001014c:	24020d90 	.word	0x24020d90
90010150:	24039434 	.word	0x24039434
90010154:	24039448 	.word	0x24039448
90010158:	2403943c 	.word	0x2403943c
9001015c:	24039440 	.word	0x24039440
90010160:	24020d94 	.word	0x24020d94
90010164:	24039434 	.word	0x24039434
90010168:	24039438 	.word	0x24039438

9001016c <vPortFree>:
	if( pv != NULL )
9001016c:	b1d0      	cbz	r0, 900101a4 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9001016e:	4a2c      	ldr	r2, [pc, #176]	; (90010220 <vPortFree+0xb4>)
90010170:	f850 3c04 	ldr.w	r3, [r0, #-4]
90010174:	6812      	ldr	r2, [r2, #0]
90010176:	4213      	tst	r3, r2
90010178:	d00b      	beq.n	90010192 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9001017a:	f850 1c08 	ldr.w	r1, [r0, #-8]
9001017e:	b191      	cbz	r1, 900101a6 <vPortFree+0x3a>
90010180:	f04f 0350 	mov.w	r3, #80	; 0x50
90010184:	f383 8811 	msr	BASEPRI, r3
90010188:	f3bf 8f6f 	isb	sy
9001018c:	f3bf 8f4f 	dsb	sy
90010190:	e7fe      	b.n	90010190 <vPortFree+0x24>
90010192:	f04f 0350 	mov.w	r3, #80	; 0x50
90010196:	f383 8811 	msr	BASEPRI, r3
9001019a:	f3bf 8f6f 	isb	sy
9001019e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
900101a2:	e7fe      	b.n	900101a2 <vPortFree+0x36>
900101a4:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
900101a6:	ea23 0302 	bic.w	r3, r3, r2
{
900101aa:	b530      	push	{r4, r5, lr}
900101ac:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
900101ae:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
900101b2:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
900101b6:	4d1b      	ldr	r5, [pc, #108]	; (90010224 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
900101b8:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
900101ba:	f001 ff7f 	bl	900120bc <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
900101be:	9801      	ldr	r0, [sp, #4]
900101c0:	682a      	ldr	r2, [r5, #0]
900101c2:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
900101c6:	4b18      	ldr	r3, [pc, #96]	; (90010228 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
900101c8:	440a      	add	r2, r1
900101ca:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
900101cc:	461a      	mov	r2, r3
900101ce:	681b      	ldr	r3, [r3, #0]
900101d0:	429c      	cmp	r4, r3
900101d2:	d8fb      	bhi.n	900101cc <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
900101d4:	6850      	ldr	r0, [r2, #4]
900101d6:	eb02 0c00 	add.w	ip, r2, r0
900101da:	4564      	cmp	r4, ip
900101dc:	d00f      	beq.n	900101fe <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
900101de:	1860      	adds	r0, r4, r1
900101e0:	4283      	cmp	r3, r0
900101e2:	d014      	beq.n	9001020e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
900101e4:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
900101e6:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
900101e8:	bf18      	it	ne
900101ea:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
900101ec:	4a0f      	ldr	r2, [pc, #60]	; (9001022c <vPortFree+0xc0>)
900101ee:	6813      	ldr	r3, [r2, #0]
900101f0:	3301      	adds	r3, #1
900101f2:	6013      	str	r3, [r2, #0]
}
900101f4:	b003      	add	sp, #12
900101f6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
900101fa:	f001 bf67 	b.w	900120cc <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
900101fe:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010200:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90010202:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010204:	4283      	cmp	r3, r0
90010206:	d001      	beq.n	9001020c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010208:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
9001020a:	e7ef      	b.n	900101ec <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9001020c:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9001020e:	4808      	ldr	r0, [pc, #32]	; (90010230 <vPortFree+0xc4>)
90010210:	6800      	ldr	r0, [r0, #0]
90010212:	4283      	cmp	r3, r0
90010214:	d0e6      	beq.n	900101e4 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010216:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9001021a:	4401      	add	r1, r0
9001021c:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9001021e:	e7e1      	b.n	900101e4 <vPortFree+0x78>
90010220:	24039434 	.word	0x24039434
90010224:	24039438 	.word	0x24039438
90010228:	24039448 	.word	0x24039448
9001022c:	24039444 	.word	0x24039444
90010230:	24020d90 	.word	0x24020d90

90010234 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90010234:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
90010238:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9001023c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9001023e:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
90010240:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90010242:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90010244:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
90010248:	4770      	bx	lr
9001024a:	bf00      	nop

9001024c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9001024c:	2300      	movs	r3, #0
9001024e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
90010250:	4770      	bx	lr
90010252:	bf00      	nop

90010254 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
90010254:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
90010256:	6802      	ldr	r2, [r0, #0]
{
90010258:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9001025a:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9001025c:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
9001025e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
90010260:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
90010262:	689c      	ldr	r4, [r3, #8]
90010264:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
90010266:	6099      	str	r1, [r3, #8]
}
90010268:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9001026c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9001026e:	6002      	str	r2, [r0, #0]
}
90010270:	4770      	bx	lr
90010272:	bf00      	nop

90010274 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
90010274:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
90010276:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
90010278:	1c6b      	adds	r3, r5, #1
9001027a:	d010      	beq.n	9001029e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9001027c:	f100 0308 	add.w	r3, r0, #8
90010280:	461c      	mov	r4, r3
90010282:	685b      	ldr	r3, [r3, #4]
90010284:	681a      	ldr	r2, [r3, #0]
90010286:	42aa      	cmp	r2, r5
90010288:	d9fa      	bls.n	90010280 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9001028a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9001028c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9001028e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
90010290:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
90010292:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
90010294:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
90010296:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
90010298:	6002      	str	r2, [r0, #0]
}
9001029a:	bc30      	pop	{r4, r5}
9001029c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9001029e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
900102a0:	6863      	ldr	r3, [r4, #4]
900102a2:	e7f2      	b.n	9001028a <vListInsert+0x16>

900102a4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
900102a4:	6903      	ldr	r3, [r0, #16]
{
900102a6:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
900102a8:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
900102aa:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
900102ae:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
900102b0:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
900102b4:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
900102b6:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
900102b8:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
900102bc:	bf08      	it	eq
900102be:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
900102c0:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
900102c2:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
900102c4:	3a01      	subs	r2, #1
900102c6:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
900102c8:	6818      	ldr	r0, [r3, #0]
}
900102ca:	4770      	bx	lr

900102cc <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
900102cc:	4808      	ldr	r0, [pc, #32]	; (900102f0 <prvPortStartFirstTask+0x24>)
900102ce:	6800      	ldr	r0, [r0, #0]
900102d0:	6800      	ldr	r0, [r0, #0]
900102d2:	f380 8808 	msr	MSP, r0
900102d6:	f04f 0000 	mov.w	r0, #0
900102da:	f380 8814 	msr	CONTROL, r0
900102de:	b662      	cpsie	i
900102e0:	b661      	cpsie	f
900102e2:	f3bf 8f4f 	dsb	sy
900102e6:	f3bf 8f6f 	isb	sy
900102ea:	df00      	svc	0
900102ec:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
900102ee:	0000      	.short	0x0000
900102f0:	e000ed08 	.word	0xe000ed08

900102f4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
900102f4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 90010304 <vPortEnableVFP+0x10>
900102f8:	6801      	ldr	r1, [r0, #0]
900102fa:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
900102fe:	6001      	str	r1, [r0, #0]
90010300:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
90010302:	0000      	.short	0x0000
90010304:	e000ed88 	.word	0xe000ed88

90010308 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
90010308:	4b0e      	ldr	r3, [pc, #56]	; (90010344 <prvTaskExitError+0x3c>)
{
9001030a:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9001030c:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9001030e:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
90010310:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
90010312:	3301      	adds	r3, #1
90010314:	d008      	beq.n	90010328 <prvTaskExitError+0x20>
90010316:	f04f 0350 	mov.w	r3, #80	; 0x50
9001031a:	f383 8811 	msr	BASEPRI, r3
9001031e:	f3bf 8f6f 	isb	sy
90010322:	f3bf 8f4f 	dsb	sy
90010326:	e7fe      	b.n	90010326 <prvTaskExitError+0x1e>
90010328:	f04f 0350 	mov.w	r3, #80	; 0x50
9001032c:	f383 8811 	msr	BASEPRI, r3
90010330:	f3bf 8f6f 	isb	sy
90010334:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
90010338:	9b01      	ldr	r3, [sp, #4]
9001033a:	2b00      	cmp	r3, #0
9001033c:	d0fc      	beq.n	90010338 <prvTaskExitError+0x30>
}
9001033e:	b002      	add	sp, #8
90010340:	4770      	bx	lr
90010342:	bf00      	nop
90010344:	24000080 	.word	0x24000080

90010348 <pxPortInitialiseStack>:
{
90010348:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9001034a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9001034e:	4809      	ldr	r0, [pc, #36]	; (90010374 <pxPortInitialiseStack+0x2c>)
{
90010350:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
90010352:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
90010356:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9001035a:	f843 2c20 	str.w	r2, [r3, #-32]
}
9001035e:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
90010362:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
90010366:	f06f 0102 	mvn.w	r1, #2
}
9001036a:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9001036e:	f843 1c24 	str.w	r1, [r3, #-36]
}
90010372:	4770      	bx	lr
90010374:	90010309 	.word	0x90010309
	...

90010380 <SVC_Handler>:
	__asm volatile (
90010380:	4b07      	ldr	r3, [pc, #28]	; (900103a0 <pxCurrentTCBConst2>)
90010382:	6819      	ldr	r1, [r3, #0]
90010384:	6808      	ldr	r0, [r1, #0]
90010386:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001038a:	f380 8809 	msr	PSP, r0
9001038e:	f3bf 8f6f 	isb	sy
90010392:	f04f 0000 	mov.w	r0, #0
90010396:	f380 8811 	msr	BASEPRI, r0
9001039a:	4770      	bx	lr
9001039c:	f3af 8000 	nop.w

900103a0 <pxCurrentTCBConst2>:
900103a0:	24039498 	.word	0x24039498

900103a4 <vPortEnterCritical>:
900103a4:	f04f 0350 	mov.w	r3, #80	; 0x50
900103a8:	f383 8811 	msr	BASEPRI, r3
900103ac:	f3bf 8f6f 	isb	sy
900103b0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
900103b4:	4a0b      	ldr	r2, [pc, #44]	; (900103e4 <vPortEnterCritical+0x40>)
900103b6:	6813      	ldr	r3, [r2, #0]
900103b8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
900103ba:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
900103bc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
900103be:	d000      	beq.n	900103c2 <vPortEnterCritical+0x1e>
}
900103c0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
900103c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900103c6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
900103ca:	b2db      	uxtb	r3, r3
900103cc:	2b00      	cmp	r3, #0
900103ce:	d0f7      	beq.n	900103c0 <vPortEnterCritical+0x1c>
900103d0:	f04f 0350 	mov.w	r3, #80	; 0x50
900103d4:	f383 8811 	msr	BASEPRI, r3
900103d8:	f3bf 8f6f 	isb	sy
900103dc:	f3bf 8f4f 	dsb	sy
900103e0:	e7fe      	b.n	900103e0 <vPortEnterCritical+0x3c>
900103e2:	bf00      	nop
900103e4:	24000080 	.word	0x24000080

900103e8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
900103e8:	4a08      	ldr	r2, [pc, #32]	; (9001040c <vPortExitCritical+0x24>)
900103ea:	6813      	ldr	r3, [r2, #0]
900103ec:	b943      	cbnz	r3, 90010400 <vPortExitCritical+0x18>
900103ee:	f04f 0350 	mov.w	r3, #80	; 0x50
900103f2:	f383 8811 	msr	BASEPRI, r3
900103f6:	f3bf 8f6f 	isb	sy
900103fa:	f3bf 8f4f 	dsb	sy
900103fe:	e7fe      	b.n	900103fe <vPortExitCritical+0x16>
	uxCriticalNesting--;
90010400:	3b01      	subs	r3, #1
90010402:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
90010404:	b90b      	cbnz	r3, 9001040a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
90010406:	f383 8811 	msr	BASEPRI, r3
}
9001040a:	4770      	bx	lr
9001040c:	24000080 	.word	0x24000080

90010410 <PendSV_Handler>:
	__asm volatile
90010410:	f3ef 8009 	mrs	r0, PSP
90010414:	f3bf 8f6f 	isb	sy
90010418:	4b15      	ldr	r3, [pc, #84]	; (90010470 <pxCurrentTCBConst>)
9001041a:	681a      	ldr	r2, [r3, #0]
9001041c:	f01e 0f10 	tst.w	lr, #16
90010420:	bf08      	it	eq
90010422:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
90010426:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001042a:	6010      	str	r0, [r2, #0]
9001042c:	e92d 0009 	stmdb	sp!, {r0, r3}
90010430:	f04f 0050 	mov.w	r0, #80	; 0x50
90010434:	f380 8811 	msr	BASEPRI, r0
90010438:	f3bf 8f4f 	dsb	sy
9001043c:	f3bf 8f6f 	isb	sy
90010440:	f001 fe80 	bl	90012144 <vTaskSwitchContext>
90010444:	f04f 0000 	mov.w	r0, #0
90010448:	f380 8811 	msr	BASEPRI, r0
9001044c:	bc09      	pop	{r0, r3}
9001044e:	6819      	ldr	r1, [r3, #0]
90010450:	6808      	ldr	r0, [r1, #0]
90010452:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010456:	f01e 0f10 	tst.w	lr, #16
9001045a:	bf08      	it	eq
9001045c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
90010460:	f380 8809 	msr	PSP, r0
90010464:	f3bf 8f6f 	isb	sy
90010468:	4770      	bx	lr
9001046a:	bf00      	nop
9001046c:	f3af 8000 	nop.w

90010470 <pxCurrentTCBConst>:
90010470:	24039498 	.word	0x24039498

90010474 <xPortSysTickHandler>:
{
90010474:	b508      	push	{r3, lr}
	__asm volatile
90010476:	f04f 0350 	mov.w	r3, #80	; 0x50
9001047a:	f383 8811 	msr	BASEPRI, r3
9001047e:	f3bf 8f6f 	isb	sy
90010482:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
90010486:	f001 fe37 	bl	900120f8 <xTaskIncrementTick>
9001048a:	b128      	cbz	r0, 90010498 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9001048c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010490:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010494:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
90010498:	2300      	movs	r3, #0
9001049a:	f383 8811 	msr	BASEPRI, r3
}
9001049e:	bd08      	pop	{r3, pc}

900104a0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
900104a0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
900104a4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
900104a6:	4806      	ldr	r0, [pc, #24]	; (900104c0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
900104a8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
900104aa:	4906      	ldr	r1, [pc, #24]	; (900104c4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
900104ac:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
900104ae:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
900104b0:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
900104b2:	fba1 1303 	umull	r1, r3, r1, r3
900104b6:	099b      	lsrs	r3, r3, #6
900104b8:	3b01      	subs	r3, #1
900104ba:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
900104bc:	6110      	str	r0, [r2, #16]
}
900104be:	4770      	bx	lr
900104c0:	24000070 	.word	0x24000070
900104c4:	10624dd3 	.word	0x10624dd3

900104c8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
900104c8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900104cc:	4a48      	ldr	r2, [pc, #288]	; (900105f0 <xPortStartScheduler+0x128>)
900104ce:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
900104d2:	4291      	cmp	r1, r2
900104d4:	d041      	beq.n	9001055a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
900104d6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
900104da:	4b46      	ldr	r3, [pc, #280]	; (900105f4 <xPortStartScheduler+0x12c>)
900104dc:	429a      	cmp	r2, r3
900104de:	d033      	beq.n	90010548 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
900104e0:	4b45      	ldr	r3, [pc, #276]	; (900105f8 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
900104e2:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
900104e4:	4945      	ldr	r1, [pc, #276]	; (900105fc <xPortStartScheduler+0x134>)
{
900104e6:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
900104e8:	781a      	ldrb	r2, [r3, #0]
{
900104ea:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
900104ec:	4c44      	ldr	r4, [pc, #272]	; (90010600 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
900104ee:	b2d2      	uxtb	r2, r2
900104f0:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
900104f2:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
900104f4:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
900104f6:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
900104f8:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
900104fa:	b2db      	uxtb	r3, r3
900104fc:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010500:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010504:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010508:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001050c:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9001050e:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010510:	d511      	bpl.n	90010536 <xPortStartScheduler+0x6e>
90010512:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90010514:	f89d 3007 	ldrb.w	r3, [sp, #7]
90010518:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001051a:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9001051c:	005b      	lsls	r3, r3, #1
9001051e:	b2db      	uxtb	r3, r3
90010520:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010524:	f89d 1007 	ldrb.w	r1, [sp, #7]
90010528:	0609      	lsls	r1, r1, #24
9001052a:	d4f3      	bmi.n	90010514 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9001052c:	2803      	cmp	r0, #3
9001052e:	6020      	str	r0, [r4, #0]
90010530:	f88d 3007 	strb.w	r3, [sp, #7]
90010534:	d01a      	beq.n	9001056c <xPortStartScheduler+0xa4>
	__asm volatile
90010536:	f04f 0350 	mov.w	r3, #80	; 0x50
9001053a:	f383 8811 	msr	BASEPRI, r3
9001053e:	f3bf 8f6f 	isb	sy
90010542:	f3bf 8f4f 	dsb	sy
90010546:	e7fe      	b.n	90010546 <xPortStartScheduler+0x7e>
90010548:	f04f 0350 	mov.w	r3, #80	; 0x50
9001054c:	f383 8811 	msr	BASEPRI, r3
90010550:	f3bf 8f6f 	isb	sy
90010554:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
90010558:	e7fe      	b.n	90010558 <xPortStartScheduler+0x90>
9001055a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001055e:	f383 8811 	msr	BASEPRI, r3
90010562:	f3bf 8f6f 	isb	sy
90010566:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9001056a:	e7fe      	b.n	9001056a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9001056c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9001056e:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
90010572:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
90010576:	4a20      	ldr	r2, [pc, #128]	; (900105f8 <xPortStartScheduler+0x130>)
90010578:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9001057a:	4e22      	ldr	r6, [pc, #136]	; (90010604 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9001057c:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
9001057e:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
90010580:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
90010582:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
90010586:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9001058a:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9001058e:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
90010592:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
90010596:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
9001059a:	f7ff ff81 	bl	900104a0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9001059e:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
900105a0:	f7ff fea8 	bl	900102f4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
900105a4:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
900105a8:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
900105ac:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
900105b0:	f7ff fe8c 	bl	900102cc <prvPortStartFirstTask>
	vTaskSwitchContext();
900105b4:	f001 fdc6 	bl	90012144 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
900105b8:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
900105ba:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
900105bc:	3301      	adds	r3, #1
900105be:	d008      	beq.n	900105d2 <xPortStartScheduler+0x10a>
900105c0:	f04f 0350 	mov.w	r3, #80	; 0x50
900105c4:	f383 8811 	msr	BASEPRI, r3
900105c8:	f3bf 8f6f 	isb	sy
900105cc:	f3bf 8f4f 	dsb	sy
900105d0:	e7fe      	b.n	900105d0 <xPortStartScheduler+0x108>
900105d2:	f04f 0350 	mov.w	r3, #80	; 0x50
900105d6:	f383 8811 	msr	BASEPRI, r3
900105da:	f3bf 8f6f 	isb	sy
900105de:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
900105e2:	9b03      	ldr	r3, [sp, #12]
900105e4:	2b00      	cmp	r3, #0
900105e6:	d0fc      	beq.n	900105e2 <xPortStartScheduler+0x11a>
}
900105e8:	2000      	movs	r0, #0
900105ea:	b004      	add	sp, #16
900105ec:	bd70      	pop	{r4, r5, r6, pc}
900105ee:	bf00      	nop
900105f0:	410fc271 	.word	0x410fc271
900105f4:	410fc270 	.word	0x410fc270
900105f8:	e000e400 	.word	0xe000e400
900105fc:	24039450 	.word	0x24039450
90010600:	24039454 	.word	0x24039454
90010604:	24000080 	.word	0x24000080

90010608 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
90010608:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9001060c:	2b0f      	cmp	r3, #15
9001060e:	d90e      	bls.n	9001062e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010610:	4911      	ldr	r1, [pc, #68]	; (90010658 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010612:	4a12      	ldr	r2, [pc, #72]	; (9001065c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010614:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010616:	7812      	ldrb	r2, [r2, #0]
90010618:	429a      	cmp	r2, r3
9001061a:	d908      	bls.n	9001062e <vPortValidateInterruptPriority+0x26>
9001061c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010620:	f383 8811 	msr	BASEPRI, r3
90010624:	f3bf 8f6f 	isb	sy
90010628:	f3bf 8f4f 	dsb	sy
9001062c:	e7fe      	b.n	9001062c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9001062e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010632:	4a0b      	ldr	r2, [pc, #44]	; (90010660 <vPortValidateInterruptPriority+0x58>)
90010634:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
90010638:	6812      	ldr	r2, [r2, #0]
9001063a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9001063e:	4293      	cmp	r3, r2
90010640:	d908      	bls.n	90010654 <vPortValidateInterruptPriority+0x4c>
90010642:	f04f 0350 	mov.w	r3, #80	; 0x50
90010646:	f383 8811 	msr	BASEPRI, r3
9001064a:	f3bf 8f6f 	isb	sy
9001064e:	f3bf 8f4f 	dsb	sy
90010652:	e7fe      	b.n	90010652 <vPortValidateInterruptPriority+0x4a>
	}
90010654:	4770      	bx	lr
90010656:	bf00      	nop
90010658:	e000e3f0 	.word	0xe000e3f0
9001065c:	24039450 	.word	0x24039450
90010660:	24039454 	.word	0x24039454

90010664 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
90010664:	b570      	push	{r4, r5, r6, lr}
90010666:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
90010668:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9001066a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001066c:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9001066e:	b92a      	cbnz	r2, 9001067c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010670:	6805      	ldr	r5, [r0, #0]
90010672:	b365      	cbz	r5, 900106ce <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010674:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
90010676:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010678:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
9001067a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9001067c:	b97d      	cbnz	r5, 9001069e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9001067e:	6840      	ldr	r0, [r0, #4]
90010680:	f019 fb46 	bl	90029d10 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010684:	6863      	ldr	r3, [r4, #4]
90010686:	6c22      	ldr	r2, [r4, #64]	; 0x40
90010688:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9001068a:	68a2      	ldr	r2, [r4, #8]
9001068c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001068e:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90010690:	d319      	bcc.n	900106c6 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
90010692:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010694:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
90010696:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
90010698:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9001069a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9001069c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9001069e:	68c0      	ldr	r0, [r0, #12]
900106a0:	f019 fb36 	bl	90029d10 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
900106a4:	6c22      	ldr	r2, [r4, #64]	; 0x40
900106a6:	68e3      	ldr	r3, [r4, #12]
900106a8:	4251      	negs	r1, r2
900106aa:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900106ac:	6822      	ldr	r2, [r4, #0]
900106ae:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
900106b0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900106b2:	d202      	bcs.n	900106ba <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
900106b4:	68a3      	ldr	r3, [r4, #8]
900106b6:	440b      	add	r3, r1
900106b8:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
900106ba:	2d02      	cmp	r5, #2
900106bc:	d00d      	beq.n	900106da <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900106be:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
900106c0:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900106c2:	63a6      	str	r6, [r4, #56]	; 0x38
}
900106c4:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900106c6:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
900106c8:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900106ca:	63a6      	str	r6, [r4, #56]	; 0x38
}
900106cc:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
900106ce:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900106d0:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
900106d2:	f001 ff1f 	bl	90012514 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
900106d6:	60a5      	str	r5, [r4, #8]
900106d8:	e7ce      	b.n	90010678 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
900106da:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
900106dc:	f04f 0000 	mov.w	r0, #0
900106e0:	bf38      	it	cc
900106e2:	2601      	movcc	r6, #1
900106e4:	e7c8      	b.n	90010678 <prvCopyDataToQueue+0x14>
900106e6:	bf00      	nop

900106e8 <xQueueGenericCreateStatic>:
	{
900106e8:	b530      	push	{r4, r5, lr}
900106ea:	b083      	sub	sp, #12
900106ec:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
900106f0:	b940      	cbnz	r0, 90010704 <xQueueGenericCreateStatic+0x1c>
900106f2:	f04f 0350 	mov.w	r3, #80	; 0x50
900106f6:	f383 8811 	msr	BASEPRI, r3
900106fa:	f3bf 8f6f 	isb	sy
900106fe:	f3bf 8f4f 	dsb	sy
90010702:	e7fe      	b.n	90010702 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
90010704:	461d      	mov	r5, r3
90010706:	b153      	cbz	r3, 9001071e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
90010708:	b30a      	cbz	r2, 9001074e <xQueueGenericCreateStatic+0x66>
9001070a:	b989      	cbnz	r1, 90010730 <xQueueGenericCreateStatic+0x48>
9001070c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010710:	f383 8811 	msr	BASEPRI, r3
90010714:	f3bf 8f6f 	isb	sy
90010718:	f3bf 8f4f 	dsb	sy
9001071c:	e7fe      	b.n	9001071c <xQueueGenericCreateStatic+0x34>
9001071e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010722:	f383 8811 	msr	BASEPRI, r3
90010726:	f3bf 8f6f 	isb	sy
9001072a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9001072e:	e7fe      	b.n	9001072e <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
90010730:	b16a      	cbz	r2, 9001074e <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
90010732:	2350      	movs	r3, #80	; 0x50
90010734:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90010736:	9b01      	ldr	r3, [sp, #4]
90010738:	2b50      	cmp	r3, #80	; 0x50
9001073a:	d013      	beq.n	90010764 <xQueueGenericCreateStatic+0x7c>
9001073c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010740:	f383 8811 	msr	BASEPRI, r3
90010744:	f3bf 8f6f 	isb	sy
90010748:	f3bf 8f4f 	dsb	sy
9001074c:	e7fe      	b.n	9001074c <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9001074e:	2900      	cmp	r1, #0
90010750:	d0ef      	beq.n	90010732 <xQueueGenericCreateStatic+0x4a>
90010752:	f04f 0350 	mov.w	r3, #80	; 0x50
90010756:	f383 8811 	msr	BASEPRI, r3
9001075a:	f3bf 8f6f 	isb	sy
9001075e:	f3bf 8f4f 	dsb	sy
90010762:	e7fe      	b.n	90010762 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
90010764:	2900      	cmp	r1, #0
90010766:	bf08      	it	eq
90010768:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
9001076a:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
9001076c:	6429      	str	r1, [r5, #64]	; 0x40
9001076e:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90010770:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010772:	2201      	movs	r2, #1
90010774:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
90010778:	f7ff fe14 	bl	900103a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001077c:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001077e:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010780:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010782:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010784:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
90010788:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001078c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001078e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010790:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010792:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90010794:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010796:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001079a:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9001079c:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900107a0:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900107a4:	f7ff fd46 	bl	90010234 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900107a8:	f105 0024 	add.w	r0, r5, #36	; 0x24
900107ac:	f7ff fd42 	bl	90010234 <vListInitialise>
	taskEXIT_CRITICAL();
900107b0:	f7ff fe1a 	bl	900103e8 <vPortExitCritical>
	}
900107b4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
900107b6:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
900107ba:	b003      	add	sp, #12
900107bc:	bd30      	pop	{r4, r5, pc}
900107be:	bf00      	nop

900107c0 <xQueueGenericCreate>:
	{
900107c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
900107c2:	b940      	cbnz	r0, 900107d6 <xQueueGenericCreate+0x16>
900107c4:	f04f 0350 	mov.w	r3, #80	; 0x50
900107c8:	f383 8811 	msr	BASEPRI, r3
900107cc:	f3bf 8f6f 	isb	sy
900107d0:	f3bf 8f4f 	dsb	sy
900107d4:	e7fe      	b.n	900107d4 <xQueueGenericCreate+0x14>
900107d6:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900107d8:	fb01 f000 	mul.w	r0, r1, r0
900107dc:	460e      	mov	r6, r1
900107de:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
900107e0:	3050      	adds	r0, #80	; 0x50
900107e2:	f7ff fc05 	bl	9000fff0 <pvPortMalloc>
		if( pxNewQueue != NULL )
900107e6:	4604      	mov	r4, r0
900107e8:	b340      	cbz	r0, 9001083c <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
900107ea:	2300      	movs	r3, #0
900107ec:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
900107f0:	b336      	cbz	r6, 90010840 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900107f2:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
900107f6:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
900107f8:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
900107fc:	f7ff fdd2 	bl	900103a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010800:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010802:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010806:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010808:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9001080c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010810:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010812:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010814:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010816:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010818:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9001081a:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001081c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001081e:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
90010820:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010824:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010828:	f7ff fd04 	bl	90010234 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9001082c:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010830:	f7ff fd00 	bl	90010234 <vListInitialise>
	taskEXIT_CRITICAL();
90010834:	f7ff fdd8 	bl	900103e8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90010838:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9001083c:	4620      	mov	r0, r4
9001083e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90010840:	4603      	mov	r3, r0
90010842:	e7d8      	b.n	900107f6 <xQueueGenericCreate+0x36>

90010844 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
90010844:	b940      	cbnz	r0, 90010858 <xQueueCreateCountingSemaphoreStatic+0x14>
90010846:	f04f 0350 	mov.w	r3, #80	; 0x50
9001084a:	f383 8811 	msr	BASEPRI, r3
9001084e:	f3bf 8f6f 	isb	sy
90010852:	f3bf 8f4f 	dsb	sy
90010856:	e7fe      	b.n	90010856 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
90010858:	4288      	cmp	r0, r1
9001085a:	d208      	bcs.n	9001086e <xQueueCreateCountingSemaphoreStatic+0x2a>
9001085c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010860:	f383 8811 	msr	BASEPRI, r3
90010864:	f3bf 8f6f 	isb	sy
90010868:	f3bf 8f4f 	dsb	sy
9001086c:	e7fe      	b.n	9001086c <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9001086e:	b530      	push	{r4, r5, lr}
90010870:	4615      	mov	r5, r2
90010872:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
90010874:	2a00      	cmp	r2, #0
90010876:	d03d      	beq.n	900108f4 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
90010878:	2350      	movs	r3, #80	; 0x50
9001087a:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9001087c:	9b03      	ldr	r3, [sp, #12]
9001087e:	2b50      	cmp	r3, #80	; 0x50
90010880:	d008      	beq.n	90010894 <xQueueCreateCountingSemaphoreStatic+0x50>
90010882:	f04f 0350 	mov.w	r3, #80	; 0x50
90010886:	f383 8811 	msr	BASEPRI, r3
9001088a:	f3bf 8f6f 	isb	sy
9001088e:	f3bf 8f4f 	dsb	sy
90010892:	e7fe      	b.n	90010892 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
90010894:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010896:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010898:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
9001089a:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9001089c:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
900108a0:	6414      	str	r4, [r2, #64]	; 0x40
900108a2:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
900108a4:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
900108a6:	f7ff fd7d 	bl	900103a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900108aa:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900108ac:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
900108ae:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900108b0:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
900108b4:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900108b8:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900108bc:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900108be:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900108c0:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
900108c2:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900108c4:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900108c8:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
900108cc:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900108d0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900108d4:	f7ff fcae 	bl	90010234 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900108d8:	f105 0024 	add.w	r0, r5, #36	; 0x24
900108dc:	f7ff fcaa 	bl	90010234 <vListInitialise>
	taskEXIT_CRITICAL();
900108e0:	f7ff fd82 	bl	900103e8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
900108e4:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
900108e6:	9901      	ldr	r1, [sp, #4]
	}
900108e8:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
900108ea:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
900108ee:	63a9      	str	r1, [r5, #56]	; 0x38
	}
900108f0:	b005      	add	sp, #20
900108f2:	bd30      	pop	{r4, r5, pc}
900108f4:	f04f 0350 	mov.w	r3, #80	; 0x50
900108f8:	f383 8811 	msr	BASEPRI, r3
900108fc:	f3bf 8f6f 	isb	sy
90010900:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
90010904:	e7fe      	b.n	90010904 <xQueueCreateCountingSemaphoreStatic+0xc0>
90010906:	bf00      	nop

90010908 <xQueueCreateCountingSemaphore>:
	{
90010908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9001090a:	b940      	cbnz	r0, 9001091e <xQueueCreateCountingSemaphore+0x16>
9001090c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010910:	f383 8811 	msr	BASEPRI, r3
90010914:	f3bf 8f6f 	isb	sy
90010918:	f3bf 8f4f 	dsb	sy
9001091c:	e7fe      	b.n	9001091c <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9001091e:	4288      	cmp	r0, r1
90010920:	4604      	mov	r4, r0
90010922:	460e      	mov	r6, r1
90010924:	d208      	bcs.n	90010938 <xQueueCreateCountingSemaphore+0x30>
90010926:	f04f 0350 	mov.w	r3, #80	; 0x50
9001092a:	f383 8811 	msr	BASEPRI, r3
9001092e:	f3bf 8f6f 	isb	sy
90010932:	f3bf 8f4f 	dsb	sy
90010936:	e7fe      	b.n	90010936 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90010938:	2050      	movs	r0, #80	; 0x50
9001093a:	f7ff fb59 	bl	9000fff0 <pvPortMalloc>
		if( pxNewQueue != NULL )
9001093e:	4605      	mov	r5, r0
90010940:	b330      	cbz	r0, 90010990 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010942:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010944:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
90010946:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010948:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9001094c:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
9001094e:	f7ff fd29 	bl	900103a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010952:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010954:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010956:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9001095a:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001095c:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
90010960:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010964:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010966:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010968:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001096a:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9001096c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001096e:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
90010970:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010974:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010978:	f7ff fc5c 	bl	90010234 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9001097c:	f105 0024 	add.w	r0, r5, #36	; 0x24
90010980:	f7ff fc58 	bl	90010234 <vListInitialise>
	taskEXIT_CRITICAL();
90010984:	f7ff fd30 	bl	900103e8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90010988:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9001098a:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9001098c:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
90010990:	4628      	mov	r0, r5
90010992:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90010994 <xQueueGenericSend>:
{
90010994:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90010998:	b084      	sub	sp, #16
9001099a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9001099c:	2800      	cmp	r0, #0
9001099e:	f000 8103 	beq.w	90010ba8 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900109a2:	4688      	mov	r8, r1
900109a4:	4604      	mov	r4, r0
900109a6:	461f      	mov	r7, r3
900109a8:	2900      	cmp	r1, #0
900109aa:	f000 8097 	beq.w	90010adc <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
900109ae:	2f02      	cmp	r7, #2
900109b0:	d10b      	bne.n	900109ca <xQueueGenericSend+0x36>
900109b2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
900109b4:	2b01      	cmp	r3, #1
900109b6:	d008      	beq.n	900109ca <xQueueGenericSend+0x36>
900109b8:	f04f 0350 	mov.w	r3, #80	; 0x50
900109bc:	f383 8811 	msr	BASEPRI, r3
900109c0:	f3bf 8f6f 	isb	sy
900109c4:	f3bf 8f4f 	dsb	sy
900109c8:	e7fe      	b.n	900109c8 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900109ca:	f001 fd4d 	bl	90012468 <xTaskGetSchedulerState>
900109ce:	2800      	cmp	r0, #0
900109d0:	f000 80f3 	beq.w	90010bba <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
900109d4:	f1a7 0902 	sub.w	r9, r7, #2
900109d8:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109da:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
900109de:	fab9 f989 	clz	r9, r9
900109e2:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
900109e6:	f7ff fcdd 	bl	900103a4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
900109ea:	6ba2      	ldr	r2, [r4, #56]	; 0x38
900109ec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
900109ee:	429a      	cmp	r2, r3
900109f0:	f0c0 80f0 	bcc.w	90010bd4 <xQueueGenericSend+0x240>
900109f4:	f1b9 0f00 	cmp.w	r9, #0
900109f8:	f040 80ec 	bne.w	90010bd4 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
900109fc:	9b01      	ldr	r3, [sp, #4]
900109fe:	2b00      	cmp	r3, #0
90010a00:	f000 8101 	beq.w	90010c06 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
90010a04:	2d00      	cmp	r5, #0
90010a06:	f000 80cb 	beq.w	90010ba0 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
90010a0a:	f7ff fced 	bl	900103e8 <vPortExitCritical>
		vTaskSuspendAll();
90010a0e:	f001 fb55 	bl	900120bc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010a12:	f7ff fcc7 	bl	900103a4 <vPortEnterCritical>
90010a16:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010a1a:	2bff      	cmp	r3, #255	; 0xff
90010a1c:	d102      	bne.n	90010a24 <xQueueGenericSend+0x90>
90010a1e:	2300      	movs	r3, #0
90010a20:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
90010a24:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010a28:	2bff      	cmp	r3, #255	; 0xff
90010a2a:	d102      	bne.n	90010a32 <xQueueGenericSend+0x9e>
90010a2c:	2300      	movs	r3, #0
90010a2e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
90010a32:	f7ff fcd9 	bl	900103e8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90010a36:	a901      	add	r1, sp, #4
90010a38:	a802      	add	r0, sp, #8
90010a3a:	f001 fcc1 	bl	900123c0 <xTaskCheckForTimeOut>
90010a3e:	2800      	cmp	r0, #0
90010a40:	f040 80e5 	bne.w	90010c0e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
90010a44:	f7ff fcae 	bl	900103a4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
90010a48:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90010a4a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90010a4c:	429a      	cmp	r2, r3
90010a4e:	d052      	beq.n	90010af6 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
90010a50:	f7ff fcca 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010a54:	f7ff fca6 	bl	900103a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010a58:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
90010a5c:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010a5e:	2d00      	cmp	r5, #0
90010a60:	dc04      	bgt.n	90010a6c <xQueueGenericSend+0xd8>
90010a62:	e011      	b.n	90010a88 <xQueueGenericSend+0xf4>
			--cTxLock;
90010a64:	1e6a      	subs	r2, r5, #1
90010a66:	b2d3      	uxtb	r3, r2
90010a68:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010a6a:	b16b      	cbz	r3, 90010a88 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010a6c:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010a6e:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010a70:	b153      	cbz	r3, 90010a88 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010a72:	f001 fc4f 	bl	90012314 <xTaskRemoveFromEventList>
90010a76:	2800      	cmp	r0, #0
90010a78:	d0f4      	beq.n	90010a64 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
90010a7a:	f001 fce9 	bl	90012450 <vTaskMissedYield>
			--cTxLock;
90010a7e:	1e6a      	subs	r2, r5, #1
90010a80:	b2d3      	uxtb	r3, r2
90010a82:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010a84:	2b00      	cmp	r3, #0
90010a86:	d1f1      	bne.n	90010a6c <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
90010a88:	23ff      	movs	r3, #255	; 0xff
90010a8a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90010a8e:	f7ff fcab 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010a92:	f7ff fc87 	bl	900103a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010a96:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
90010a9a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010a9c:	2d00      	cmp	r5, #0
90010a9e:	dd14      	ble.n	90010aca <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010aa0:	f104 0a10 	add.w	sl, r4, #16
90010aa4:	e003      	b.n	90010aae <xQueueGenericSend+0x11a>
				--cRxLock;
90010aa6:	1e6a      	subs	r2, r5, #1
90010aa8:	b2d3      	uxtb	r3, r2
90010aaa:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010aac:	b16b      	cbz	r3, 90010aca <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010aae:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ab0:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010ab2:	b153      	cbz	r3, 90010aca <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ab4:	f001 fc2e 	bl	90012314 <xTaskRemoveFromEventList>
90010ab8:	2800      	cmp	r0, #0
90010aba:	d0f4      	beq.n	90010aa6 <xQueueGenericSend+0x112>
					vTaskMissedYield();
90010abc:	f001 fcc8 	bl	90012450 <vTaskMissedYield>
				--cRxLock;
90010ac0:	1e6a      	subs	r2, r5, #1
90010ac2:	b2d3      	uxtb	r3, r2
90010ac4:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ac6:	2b00      	cmp	r3, #0
90010ac8:	d1f1      	bne.n	90010aae <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
90010aca:	23ff      	movs	r3, #255	; 0xff
90010acc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90010ad0:	f7ff fc8a 	bl	900103e8 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010ad4:	f001 fafa 	bl	900120cc <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010ad8:	2501      	movs	r5, #1
90010ada:	e784      	b.n	900109e6 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010adc:	6c03      	ldr	r3, [r0, #64]	; 0x40
90010ade:	2b00      	cmp	r3, #0
90010ae0:	f43f af65 	beq.w	900109ae <xQueueGenericSend+0x1a>
90010ae4:	f04f 0350 	mov.w	r3, #80	; 0x50
90010ae8:	f383 8811 	msr	BASEPRI, r3
90010aec:	f3bf 8f6f 	isb	sy
90010af0:	f3bf 8f4f 	dsb	sy
90010af4:	e7fe      	b.n	90010af4 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
90010af6:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
90010afa:	f7ff fc75 	bl	900103e8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
90010afe:	9901      	ldr	r1, [sp, #4]
90010b00:	4650      	mov	r0, sl
90010b02:	f001 fb79 	bl	900121f8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010b06:	f7ff fc4d 	bl	900103a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010b0a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010b0e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010b10:	2d00      	cmp	r5, #0
90010b12:	dc04      	bgt.n	90010b1e <xQueueGenericSend+0x18a>
90010b14:	e011      	b.n	90010b3a <xQueueGenericSend+0x1a6>
			--cTxLock;
90010b16:	1e6b      	subs	r3, r5, #1
90010b18:	b2da      	uxtb	r2, r3
90010b1a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010b1c:	b16a      	cbz	r2, 90010b3a <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010b1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010b20:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010b22:	b153      	cbz	r3, 90010b3a <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010b24:	f001 fbf6 	bl	90012314 <xTaskRemoveFromEventList>
90010b28:	2800      	cmp	r0, #0
90010b2a:	d0f4      	beq.n	90010b16 <xQueueGenericSend+0x182>
						vTaskMissedYield();
90010b2c:	f001 fc90 	bl	90012450 <vTaskMissedYield>
			--cTxLock;
90010b30:	1e6b      	subs	r3, r5, #1
90010b32:	b2da      	uxtb	r2, r3
90010b34:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010b36:	2a00      	cmp	r2, #0
90010b38:	d1f1      	bne.n	90010b1e <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
90010b3a:	23ff      	movs	r3, #255	; 0xff
90010b3c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90010b40:	f7ff fc52 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010b44:	f7ff fc2e 	bl	900103a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010b48:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010b4c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010b4e:	2d00      	cmp	r5, #0
90010b50:	dc04      	bgt.n	90010b5c <xQueueGenericSend+0x1c8>
90010b52:	e011      	b.n	90010b78 <xQueueGenericSend+0x1e4>
				--cRxLock;
90010b54:	1e6b      	subs	r3, r5, #1
90010b56:	b2da      	uxtb	r2, r3
90010b58:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010b5a:	b16a      	cbz	r2, 90010b78 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010b5c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010b5e:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010b60:	b153      	cbz	r3, 90010b78 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010b62:	f001 fbd7 	bl	90012314 <xTaskRemoveFromEventList>
90010b66:	2800      	cmp	r0, #0
90010b68:	d0f4      	beq.n	90010b54 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
90010b6a:	f001 fc71 	bl	90012450 <vTaskMissedYield>
				--cRxLock;
90010b6e:	1e6b      	subs	r3, r5, #1
90010b70:	b2da      	uxtb	r2, r3
90010b72:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010b74:	2a00      	cmp	r2, #0
90010b76:	d1f1      	bne.n	90010b5c <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
90010b78:	23ff      	movs	r3, #255	; 0xff
90010b7a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90010b7e:	f7ff fc33 	bl	900103e8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010b82:	f001 faa3 	bl	900120cc <xTaskResumeAll>
90010b86:	2800      	cmp	r0, #0
90010b88:	d1a6      	bne.n	90010ad8 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
90010b8a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010b8e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010b92:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010b96:	f3bf 8f4f 	dsb	sy
90010b9a:	f3bf 8f6f 	isb	sy
90010b9e:	e79b      	b.n	90010ad8 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
90010ba0:	a802      	add	r0, sp, #8
90010ba2:	f001 fc01 	bl	900123a8 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90010ba6:	e730      	b.n	90010a0a <xQueueGenericSend+0x76>
90010ba8:	f04f 0350 	mov.w	r3, #80	; 0x50
90010bac:	f383 8811 	msr	BASEPRI, r3
90010bb0:	f3bf 8f6f 	isb	sy
90010bb4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010bb8:	e7fe      	b.n	90010bb8 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010bba:	9b01      	ldr	r3, [sp, #4]
90010bbc:	2b00      	cmp	r3, #0
90010bbe:	f43f af09 	beq.w	900109d4 <xQueueGenericSend+0x40>
90010bc2:	f04f 0350 	mov.w	r3, #80	; 0x50
90010bc6:	f383 8811 	msr	BASEPRI, r3
90010bca:	f3bf 8f6f 	isb	sy
90010bce:	f3bf 8f4f 	dsb	sy
90010bd2:	e7fe      	b.n	90010bd2 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010bd4:	463a      	mov	r2, r7
90010bd6:	4641      	mov	r1, r8
90010bd8:	4620      	mov	r0, r4
90010bda:	f7ff fd43 	bl	90010664 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010bde:	6a63      	ldr	r3, [r4, #36]	; 0x24
90010be0:	2b00      	cmp	r3, #0
90010be2:	d152      	bne.n	90010c8a <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
90010be4:	b148      	cbz	r0, 90010bfa <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
90010be6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010bea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010bee:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010bf2:	f3bf 8f4f 	dsb	sy
90010bf6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
90010bfa:	f7ff fbf5 	bl	900103e8 <vPortExitCritical>
				return pdPASS;
90010bfe:	2001      	movs	r0, #1
}
90010c00:	b004      	add	sp, #16
90010c02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
90010c06:	f7ff fbef 	bl	900103e8 <vPortExitCritical>
					return errQUEUE_FULL;
90010c0a:	4648      	mov	r0, r9
90010c0c:	e7f8      	b.n	90010c00 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
90010c0e:	f7ff fbc9 	bl	900103a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010c12:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010c16:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010c18:	2d00      	cmp	r5, #0
90010c1a:	dd10      	ble.n	90010c3e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010c1c:	f104 0624 	add.w	r6, r4, #36	; 0x24
90010c20:	e003      	b.n	90010c2a <xQueueGenericSend+0x296>
			--cTxLock;
90010c22:	1e6b      	subs	r3, r5, #1
90010c24:	b2da      	uxtb	r2, r3
90010c26:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010c28:	b14a      	cbz	r2, 90010c3e <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010c2a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010c2c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010c2e:	b133      	cbz	r3, 90010c3e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010c30:	f001 fb70 	bl	90012314 <xTaskRemoveFromEventList>
90010c34:	2800      	cmp	r0, #0
90010c36:	d0f4      	beq.n	90010c22 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
90010c38:	f001 fc0a 	bl	90012450 <vTaskMissedYield>
90010c3c:	e7f1      	b.n	90010c22 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
90010c3e:	23ff      	movs	r3, #255	; 0xff
90010c40:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90010c44:	f7ff fbd0 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010c48:	f7ff fbac 	bl	900103a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010c4c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010c50:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010c52:	2d00      	cmp	r5, #0
90010c54:	dd10      	ble.n	90010c78 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010c56:	f104 0610 	add.w	r6, r4, #16
90010c5a:	e003      	b.n	90010c64 <xQueueGenericSend+0x2d0>
				--cRxLock;
90010c5c:	1e6b      	subs	r3, r5, #1
90010c5e:	b2da      	uxtb	r2, r3
90010c60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010c62:	b14a      	cbz	r2, 90010c78 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010c64:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010c66:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010c68:	b133      	cbz	r3, 90010c78 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010c6a:	f001 fb53 	bl	90012314 <xTaskRemoveFromEventList>
90010c6e:	2800      	cmp	r0, #0
90010c70:	d0f4      	beq.n	90010c5c <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
90010c72:	f001 fbed 	bl	90012450 <vTaskMissedYield>
90010c76:	e7f1      	b.n	90010c5c <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
90010c78:	23ff      	movs	r3, #255	; 0xff
90010c7a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90010c7e:	f7ff fbb3 	bl	900103e8 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010c82:	f001 fa23 	bl	900120cc <xTaskResumeAll>
			return errQUEUE_FULL;
90010c86:	2000      	movs	r0, #0
90010c88:	e7ba      	b.n	90010c00 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010c8a:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010c8e:	f001 fb41 	bl	90012314 <xTaskRemoveFromEventList>
90010c92:	2800      	cmp	r0, #0
90010c94:	d0b1      	beq.n	90010bfa <xQueueGenericSend+0x266>
90010c96:	e7a6      	b.n	90010be6 <xQueueGenericSend+0x252>

90010c98 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
90010c98:	b179      	cbz	r1, 90010cba <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
90010c9a:	2350      	movs	r3, #80	; 0x50
	{
90010c9c:	b570      	push	{r4, r5, r6, lr}
90010c9e:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
90010ca0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90010ca2:	9b01      	ldr	r3, [sp, #4]
90010ca4:	2b50      	cmp	r3, #80	; 0x50
90010ca6:	d011      	beq.n	90010ccc <xQueueCreateMutexStatic+0x34>
90010ca8:	f04f 0350 	mov.w	r3, #80	; 0x50
90010cac:	f383 8811 	msr	BASEPRI, r3
90010cb0:	f3bf 8f6f 	isb	sy
90010cb4:	f3bf 8f4f 	dsb	sy
90010cb8:	e7fe      	b.n	90010cb8 <xQueueCreateMutexStatic+0x20>
90010cba:	f04f 0350 	mov.w	r3, #80	; 0x50
90010cbe:	f383 8811 	msr	BASEPRI, r3
90010cc2:	f3bf 8f6f 	isb	sy
90010cc6:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
90010cca:	e7fe      	b.n	90010cca <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
90010ccc:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010cce:	2301      	movs	r3, #1
90010cd0:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010cd2:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010cd4:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
90010cd8:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90010cda:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
90010cdc:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
90010ce0:	f7ff fb60 	bl	900103a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010ce4:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
90010ce6:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010ce8:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010cea:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
90010cec:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010cf0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010cf4:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
90010cf8:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010cfc:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010cfe:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010d00:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010d02:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010d06:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010d0a:	f7ff fa93 	bl	90010234 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010d0e:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010d12:	f7ff fa8f 	bl	90010234 <vListInitialise>
	taskEXIT_CRITICAL();
90010d16:	f7ff fb67 	bl	900103e8 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010d1a:	4633      	mov	r3, r6
90010d1c:	4632      	mov	r2, r6
90010d1e:	4631      	mov	r1, r6
90010d20:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90010d22:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
90010d26:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
90010d28:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
90010d2a:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010d2c:	f7ff fe32 	bl	90010994 <xQueueGenericSend>
	}
90010d30:	4620      	mov	r0, r4
90010d32:	b002      	add	sp, #8
90010d34:	bd70      	pop	{r4, r5, r6, pc}
90010d36:	bf00      	nop

90010d38 <xQueueGiveMutexRecursive>:
	{
90010d38:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
90010d3a:	b138      	cbz	r0, 90010d4c <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
90010d3c:	6885      	ldr	r5, [r0, #8]
90010d3e:	4604      	mov	r4, r0
90010d40:	f001 fb8c 	bl	9001245c <xTaskGetCurrentTaskHandle>
90010d44:	4285      	cmp	r5, r0
90010d46:	d00a      	beq.n	90010d5e <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
90010d48:	2000      	movs	r0, #0
	}
90010d4a:	bd38      	pop	{r3, r4, r5, pc}
90010d4c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010d50:	f383 8811 	msr	BASEPRI, r3
90010d54:	f3bf 8f6f 	isb	sy
90010d58:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
90010d5c:	e7fe      	b.n	90010d5c <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
90010d5e:	68e3      	ldr	r3, [r4, #12]
90010d60:	3b01      	subs	r3, #1
90010d62:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
90010d64:	b10b      	cbz	r3, 90010d6a <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
90010d66:	2001      	movs	r0, #1
	}
90010d68:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
90010d6a:	461a      	mov	r2, r3
90010d6c:	4619      	mov	r1, r3
90010d6e:	4620      	mov	r0, r4
90010d70:	f7ff fe10 	bl	90010994 <xQueueGenericSend>
			xReturn = pdPASS;
90010d74:	2001      	movs	r0, #1
	}
90010d76:	bd38      	pop	{r3, r4, r5, pc}

90010d78 <xQueueCreateMutex>:
	{
90010d78:	b570      	push	{r4, r5, r6, lr}
90010d7a:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90010d7c:	2050      	movs	r0, #80	; 0x50
90010d7e:	f7ff f937 	bl	9000fff0 <pvPortMalloc>
		if( pxNewQueue != NULL )
90010d82:	4604      	mov	r4, r0
90010d84:	b370      	cbz	r0, 90010de4 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010d86:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
90010d88:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010d8a:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010d8c:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90010d90:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
90010d94:	f7ff fb06 	bl	900103a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010d98:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010d9a:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010d9c:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010da0:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010da2:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
90010da6:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010daa:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010dac:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010dae:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
90010db0:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010db2:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90010db6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010dba:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010dbe:	f7ff fa39 	bl	90010234 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010dc2:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010dc6:	f7ff fa35 	bl	90010234 <vListInitialise>
	taskEXIT_CRITICAL();
90010dca:	f7ff fb0d 	bl	900103e8 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010dce:	4633      	mov	r3, r6
90010dd0:	4632      	mov	r2, r6
90010dd2:	4631      	mov	r1, r6
90010dd4:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90010dd6:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
90010dda:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
90010ddc:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
90010dde:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010de0:	f7ff fdd8 	bl	90010994 <xQueueGenericSend>
	}
90010de4:	4620      	mov	r0, r4
90010de6:	bd70      	pop	{r4, r5, r6, pc}

90010de8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
90010de8:	2800      	cmp	r0, #0
90010dea:	d04e      	beq.n	90010e8a <xQueueGenericSendFromISR+0xa2>
{
90010dec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010df0:	460e      	mov	r6, r1
90010df2:	4604      	mov	r4, r0
90010df4:	4617      	mov	r7, r2
90010df6:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010df8:	b339      	cbz	r1, 90010e4a <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
90010dfa:	2d02      	cmp	r5, #2
90010dfc:	d10b      	bne.n	90010e16 <xQueueGenericSendFromISR+0x2e>
90010dfe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90010e00:	2b01      	cmp	r3, #1
90010e02:	d008      	beq.n	90010e16 <xQueueGenericSendFromISR+0x2e>
90010e04:	f04f 0350 	mov.w	r3, #80	; 0x50
90010e08:	f383 8811 	msr	BASEPRI, r3
90010e0c:	f3bf 8f6f 	isb	sy
90010e10:	f3bf 8f4f 	dsb	sy
90010e14:	e7fe      	b.n	90010e14 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90010e16:	f7ff fbf7 	bl	90010608 <vPortValidateInterruptPriority>
	__asm volatile
90010e1a:	f3ef 8811 	mrs	r8, BASEPRI
90010e1e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010e22:	f383 8811 	msr	BASEPRI, r3
90010e26:	f3bf 8f6f 	isb	sy
90010e2a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010e2e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90010e30:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90010e32:	429a      	cmp	r2, r3
90010e34:	d315      	bcc.n	90010e62 <xQueueGenericSendFromISR+0x7a>
90010e36:	f1a5 0002 	sub.w	r0, r5, #2
90010e3a:	fab0 f080 	clz	r0, r0
90010e3e:	0940      	lsrs	r0, r0, #5
90010e40:	b978      	cbnz	r0, 90010e62 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
90010e42:	f388 8811 	msr	BASEPRI, r8
}
90010e46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010e4a:	6c03      	ldr	r3, [r0, #64]	; 0x40
90010e4c:	2b00      	cmp	r3, #0
90010e4e:	d0d4      	beq.n	90010dfa <xQueueGenericSendFromISR+0x12>
	__asm volatile
90010e50:	f04f 0350 	mov.w	r3, #80	; 0x50
90010e54:	f383 8811 	msr	BASEPRI, r3
90010e58:	f3bf 8f6f 	isb	sy
90010e5c:	f3bf 8f4f 	dsb	sy
90010e60:	e7fe      	b.n	90010e60 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010e62:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
90010e64:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010e68:	4631      	mov	r1, r6
90010e6a:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
90010e6c:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
90010e6e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010e70:	f7ff fbf8 	bl	90010664 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
90010e74:	1c6b      	adds	r3, r5, #1
90010e76:	d011      	beq.n	90010e9c <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010e78:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
90010e7a:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010e7c:	b25b      	sxtb	r3, r3
90010e7e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
90010e82:	f388 8811 	msr	BASEPRI, r8
}
90010e86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
90010e8a:	f04f 0350 	mov.w	r3, #80	; 0x50
90010e8e:	f383 8811 	msr	BASEPRI, r3
90010e92:	f3bf 8f6f 	isb	sy
90010e96:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010e9a:	e7fe      	b.n	90010e9a <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010e9c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90010e9e:	b90b      	cbnz	r3, 90010ea4 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
90010ea0:	2001      	movs	r0, #1
90010ea2:	e7ce      	b.n	90010e42 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010ea4:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010ea8:	f001 fa34 	bl	90012314 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90010eac:	2800      	cmp	r0, #0
90010eae:	d0f7      	beq.n	90010ea0 <xQueueGenericSendFromISR+0xb8>
90010eb0:	2f00      	cmp	r7, #0
90010eb2:	d0f5      	beq.n	90010ea0 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010eb4:	2301      	movs	r3, #1
			xReturn = pdPASS;
90010eb6:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
90010eb8:	603b      	str	r3, [r7, #0]
90010eba:	e7c2      	b.n	90010e42 <xQueueGenericSendFromISR+0x5a>

90010ebc <xQueueGiveFromISR>:
	configASSERT( pxQueue );
90010ebc:	b360      	cbz	r0, 90010f18 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
90010ebe:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
90010ec0:	b570      	push	{r4, r5, r6, lr}
90010ec2:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
90010ec4:	b143      	cbz	r3, 90010ed8 <xQueueGiveFromISR+0x1c>
90010ec6:	f04f 0350 	mov.w	r3, #80	; 0x50
90010eca:	f383 8811 	msr	BASEPRI, r3
90010ece:	f3bf 8f6f 	isb	sy
90010ed2:	f3bf 8f4f 	dsb	sy
90010ed6:	e7fe      	b.n	90010ed6 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
90010ed8:	6803      	ldr	r3, [r0, #0]
90010eda:	460d      	mov	r5, r1
90010edc:	b32b      	cbz	r3, 90010f2a <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90010ede:	f7ff fb93 	bl	90010608 <vPortValidateInterruptPriority>
	__asm volatile
90010ee2:	f3ef 8611 	mrs	r6, BASEPRI
90010ee6:	f04f 0350 	mov.w	r3, #80	; 0x50
90010eea:	f383 8811 	msr	BASEPRI, r3
90010eee:	f3bf 8f6f 	isb	sy
90010ef2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010ef6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
90010ef8:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90010efa:	429a      	cmp	r2, r3
90010efc:	d921      	bls.n	90010f42 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
90010efe:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010f02:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
90010f04:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010f06:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
90010f08:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
90010f0a:	d01e      	beq.n	90010f4a <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010f0c:	3301      	adds	r3, #1
			xReturn = pdPASS;
90010f0e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010f10:	b25b      	sxtb	r3, r3
90010f12:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
90010f16:	e015      	b.n	90010f44 <xQueueGiveFromISR+0x88>
	__asm volatile
90010f18:	f04f 0350 	mov.w	r3, #80	; 0x50
90010f1c:	f383 8811 	msr	BASEPRI, r3
90010f20:	f3bf 8f6f 	isb	sy
90010f24:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010f28:	e7fe      	b.n	90010f28 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
90010f2a:	6883      	ldr	r3, [r0, #8]
90010f2c:	2b00      	cmp	r3, #0
90010f2e:	d0d6      	beq.n	90010ede <xQueueGiveFromISR+0x22>
90010f30:	f04f 0350 	mov.w	r3, #80	; 0x50
90010f34:	f383 8811 	msr	BASEPRI, r3
90010f38:	f3bf 8f6f 	isb	sy
90010f3c:	f3bf 8f4f 	dsb	sy
90010f40:	e7fe      	b.n	90010f40 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
90010f42:	2000      	movs	r0, #0
	__asm volatile
90010f44:	f386 8811 	msr	BASEPRI, r6
}
90010f48:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010f4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
90010f4c:	b90b      	cbnz	r3, 90010f52 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
90010f4e:	2001      	movs	r0, #1
90010f50:	e7f8      	b.n	90010f44 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010f52:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010f56:	f001 f9dd 	bl	90012314 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90010f5a:	2d00      	cmp	r5, #0
90010f5c:	d0f7      	beq.n	90010f4e <xQueueGiveFromISR+0x92>
90010f5e:	2800      	cmp	r0, #0
90010f60:	d0f5      	beq.n	90010f4e <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010f62:	2301      	movs	r3, #1
			xReturn = pdPASS;
90010f64:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
90010f66:	602b      	str	r3, [r5, #0]
90010f68:	e7ec      	b.n	90010f44 <xQueueGiveFromISR+0x88>
90010f6a:	bf00      	nop

90010f6c <xQueueReceive>:
{
90010f6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010f70:	b085      	sub	sp, #20
90010f72:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
90010f74:	2800      	cmp	r0, #0
90010f76:	f000 815c 	beq.w	90011232 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010f7a:	460f      	mov	r7, r1
90010f7c:	4604      	mov	r4, r0
90010f7e:	2900      	cmp	r1, #0
90010f80:	d079      	beq.n	90011076 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010f82:	f001 fa71 	bl	90012468 <xTaskGetSchedulerState>
90010f86:	2800      	cmp	r0, #0
90010f88:	f000 8081 	beq.w	9001108e <xQueueReceive+0x122>
		taskENTER_CRITICAL();
90010f8c:	f7ff fa0a 	bl	900103a4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010f90:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010f92:	2d00      	cmp	r5, #0
90010f94:	f040 8138 	bne.w	90011208 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
90010f98:	9b01      	ldr	r3, [sp, #4]
90010f9a:	2b00      	cmp	r3, #0
90010f9c:	f000 80d5 	beq.w	9001114a <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
90010fa0:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010fa2:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
90010fa6:	a802      	add	r0, sp, #8
90010fa8:	f001 f9fe 	bl	900123a8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
90010fac:	f7ff fa1c 	bl	900103e8 <vPortExitCritical>
		vTaskSuspendAll();
90010fb0:	f001 f884 	bl	900120bc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010fb4:	f7ff f9f6 	bl	900103a4 <vPortEnterCritical>
90010fb8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010fbc:	2bff      	cmp	r3, #255	; 0xff
90010fbe:	d101      	bne.n	90010fc4 <xQueueReceive+0x58>
90010fc0:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
90010fc4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010fc8:	2bff      	cmp	r3, #255	; 0xff
90010fca:	d101      	bne.n	90010fd0 <xQueueReceive+0x64>
90010fcc:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
90010fd0:	f7ff fa0a 	bl	900103e8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90010fd4:	a901      	add	r1, sp, #4
90010fd6:	a802      	add	r0, sp, #8
90010fd8:	f001 f9f2 	bl	900123c0 <xTaskCheckForTimeOut>
90010fdc:	2800      	cmp	r0, #0
90010fde:	d163      	bne.n	900110a8 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
90010fe0:	f7ff f9e0 	bl	900103a4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010fe4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90010fe6:	2b00      	cmp	r3, #0
90010fe8:	f000 80b5 	beq.w	90011156 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
90010fec:	f7ff f9fc 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010ff0:	f7ff f9d8 	bl	900103a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010ff4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010ff8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010ffa:	2d00      	cmp	r5, #0
90010ffc:	dc04      	bgt.n	90011008 <xQueueReceive+0x9c>
90010ffe:	e011      	b.n	90011024 <xQueueReceive+0xb8>
			--cTxLock;
90011000:	1e6b      	subs	r3, r5, #1
90011002:	b2da      	uxtb	r2, r3
90011004:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011006:	b16a      	cbz	r2, 90011024 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011008:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001100a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001100c:	b153      	cbz	r3, 90011024 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001100e:	f001 f981 	bl	90012314 <xTaskRemoveFromEventList>
90011012:	2800      	cmp	r0, #0
90011014:	d0f4      	beq.n	90011000 <xQueueReceive+0x94>
						vTaskMissedYield();
90011016:	f001 fa1b 	bl	90012450 <vTaskMissedYield>
			--cTxLock;
9001101a:	1e6b      	subs	r3, r5, #1
9001101c:	b2da      	uxtb	r2, r3
9001101e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011020:	2a00      	cmp	r2, #0
90011022:	d1f1      	bne.n	90011008 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
90011024:	23ff      	movs	r3, #255	; 0xff
90011026:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9001102a:	f7ff f9dd 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
9001102e:	f7ff f9b9 	bl	900103a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011032:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011036:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011038:	2d00      	cmp	r5, #0
9001103a:	dd14      	ble.n	90011066 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001103c:	f104 0910 	add.w	r9, r4, #16
90011040:	e003      	b.n	9001104a <xQueueReceive+0xde>
				--cRxLock;
90011042:	1e6b      	subs	r3, r5, #1
90011044:	b2da      	uxtb	r2, r3
90011046:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011048:	b16a      	cbz	r2, 90011066 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001104a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001104c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001104e:	b153      	cbz	r3, 90011066 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011050:	f001 f960 	bl	90012314 <xTaskRemoveFromEventList>
90011054:	2800      	cmp	r0, #0
90011056:	d0f4      	beq.n	90011042 <xQueueReceive+0xd6>
					vTaskMissedYield();
90011058:	f001 f9fa 	bl	90012450 <vTaskMissedYield>
				--cRxLock;
9001105c:	1e6b      	subs	r3, r5, #1
9001105e:	b2da      	uxtb	r2, r3
90011060:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011062:	2a00      	cmp	r2, #0
90011064:	d1f1      	bne.n	9001104a <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
90011066:	23ff      	movs	r3, #255	; 0xff
90011068:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9001106c:	f7ff f9bc 	bl	900103e8 <vPortExitCritical>
				( void ) xTaskResumeAll();
90011070:	f001 f82c 	bl	900120cc <xTaskResumeAll>
		taskENTER_CRITICAL();
90011074:	e060      	b.n	90011138 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90011076:	6c03      	ldr	r3, [r0, #64]	; 0x40
90011078:	2b00      	cmp	r3, #0
9001107a:	d082      	beq.n	90010f82 <xQueueReceive+0x16>
	__asm volatile
9001107c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011080:	f383 8811 	msr	BASEPRI, r3
90011084:	f3bf 8f6f 	isb	sy
90011088:	f3bf 8f4f 	dsb	sy
9001108c:	e7fe      	b.n	9001108c <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9001108e:	9b01      	ldr	r3, [sp, #4]
90011090:	2b00      	cmp	r3, #0
90011092:	f43f af7b 	beq.w	90010f8c <xQueueReceive+0x20>
90011096:	f04f 0350 	mov.w	r3, #80	; 0x50
9001109a:	f383 8811 	msr	BASEPRI, r3
9001109e:	f3bf 8f6f 	isb	sy
900110a2:	f3bf 8f4f 	dsb	sy
900110a6:	e7fe      	b.n	900110a6 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
900110a8:	f7ff f97c 	bl	900103a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900110ac:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900110b0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900110b2:	2d00      	cmp	r5, #0
900110b4:	dc04      	bgt.n	900110c0 <xQueueReceive+0x154>
900110b6:	e011      	b.n	900110dc <xQueueReceive+0x170>
			--cTxLock;
900110b8:	1e6b      	subs	r3, r5, #1
900110ba:	b2da      	uxtb	r2, r3
900110bc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900110be:	b16a      	cbz	r2, 900110dc <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900110c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900110c2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900110c4:	b153      	cbz	r3, 900110dc <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900110c6:	f001 f925 	bl	90012314 <xTaskRemoveFromEventList>
900110ca:	2800      	cmp	r0, #0
900110cc:	d0f4      	beq.n	900110b8 <xQueueReceive+0x14c>
						vTaskMissedYield();
900110ce:	f001 f9bf 	bl	90012450 <vTaskMissedYield>
			--cTxLock;
900110d2:	1e6b      	subs	r3, r5, #1
900110d4:	b2da      	uxtb	r2, r3
900110d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900110d8:	2a00      	cmp	r2, #0
900110da:	d1f1      	bne.n	900110c0 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
900110dc:	23ff      	movs	r3, #255	; 0xff
900110de:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
900110e2:	f7ff f981 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
900110e6:	f7ff f95d 	bl	900103a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900110ea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900110ee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900110f0:	2d00      	cmp	r5, #0
900110f2:	dd14      	ble.n	9001111e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900110f4:	f104 0910 	add.w	r9, r4, #16
900110f8:	e003      	b.n	90011102 <xQueueReceive+0x196>
				--cRxLock;
900110fa:	1e6b      	subs	r3, r5, #1
900110fc:	b2da      	uxtb	r2, r3
900110fe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011100:	b16a      	cbz	r2, 9001111e <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011102:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011104:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011106:	b153      	cbz	r3, 9001111e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011108:	f001 f904 	bl	90012314 <xTaskRemoveFromEventList>
9001110c:	2800      	cmp	r0, #0
9001110e:	d0f4      	beq.n	900110fa <xQueueReceive+0x18e>
					vTaskMissedYield();
90011110:	f001 f99e 	bl	90012450 <vTaskMissedYield>
				--cRxLock;
90011114:	1e6b      	subs	r3, r5, #1
90011116:	b2da      	uxtb	r2, r3
90011118:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001111a:	2a00      	cmp	r2, #0
9001111c:	d1f1      	bne.n	90011102 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
9001111e:	23ff      	movs	r3, #255	; 0xff
90011120:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011124:	f7ff f960 	bl	900103e8 <vPortExitCritical>
			( void ) xTaskResumeAll();
90011128:	f000 ffd0 	bl	900120cc <xTaskResumeAll>
	taskENTER_CRITICAL();
9001112c:	f7ff f93a 	bl	900103a4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90011130:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90011132:	b153      	cbz	r3, 9001114a <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
90011134:	f7ff f958 	bl	900103e8 <vPortExitCritical>
		taskENTER_CRITICAL();
90011138:	f7ff f934 	bl	900103a4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001113c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9001113e:	2d00      	cmp	r5, #0
90011140:	d162      	bne.n	90011208 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
90011142:	9b01      	ldr	r3, [sp, #4]
90011144:	2b00      	cmp	r3, #0
90011146:	f47f af31 	bne.w	90010fac <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9001114a:	f7ff f94d 	bl	900103e8 <vPortExitCritical>
					return errQUEUE_EMPTY;
9001114e:	2000      	movs	r0, #0
}
90011150:	b005      	add	sp, #20
90011152:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
90011156:	f7ff f947 	bl	900103e8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9001115a:	9901      	ldr	r1, [sp, #4]
9001115c:	4630      	mov	r0, r6
9001115e:	f001 f84b 	bl	900121f8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90011162:	f7ff f91f 	bl	900103a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011166:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9001116a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001116c:	2d00      	cmp	r5, #0
9001116e:	dc04      	bgt.n	9001117a <xQueueReceive+0x20e>
90011170:	e011      	b.n	90011196 <xQueueReceive+0x22a>
			--cTxLock;
90011172:	1e6b      	subs	r3, r5, #1
90011174:	b2da      	uxtb	r2, r3
90011176:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011178:	b16a      	cbz	r2, 90011196 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001117a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001117c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001117e:	b153      	cbz	r3, 90011196 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011180:	f001 f8c8 	bl	90012314 <xTaskRemoveFromEventList>
90011184:	2800      	cmp	r0, #0
90011186:	d0f4      	beq.n	90011172 <xQueueReceive+0x206>
						vTaskMissedYield();
90011188:	f001 f962 	bl	90012450 <vTaskMissedYield>
			--cTxLock;
9001118c:	1e6b      	subs	r3, r5, #1
9001118e:	b2da      	uxtb	r2, r3
90011190:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011192:	2a00      	cmp	r2, #0
90011194:	d1f1      	bne.n	9001117a <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
90011196:	23ff      	movs	r3, #255	; 0xff
90011198:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9001119c:	f7ff f924 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
900111a0:	f7ff f900 	bl	900103a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900111a4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900111a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900111aa:	2d00      	cmp	r5, #0
900111ac:	dd14      	ble.n	900111d8 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900111ae:	f104 0910 	add.w	r9, r4, #16
900111b2:	e003      	b.n	900111bc <xQueueReceive+0x250>
				--cRxLock;
900111b4:	1e6b      	subs	r3, r5, #1
900111b6:	b2da      	uxtb	r2, r3
900111b8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900111ba:	b16a      	cbz	r2, 900111d8 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900111bc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900111be:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900111c0:	b153      	cbz	r3, 900111d8 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900111c2:	f001 f8a7 	bl	90012314 <xTaskRemoveFromEventList>
900111c6:	2800      	cmp	r0, #0
900111c8:	d0f4      	beq.n	900111b4 <xQueueReceive+0x248>
					vTaskMissedYield();
900111ca:	f001 f941 	bl	90012450 <vTaskMissedYield>
				--cRxLock;
900111ce:	1e6b      	subs	r3, r5, #1
900111d0:	b2da      	uxtb	r2, r3
900111d2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900111d4:	2a00      	cmp	r2, #0
900111d6:	d1f1      	bne.n	900111bc <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
900111d8:	23ff      	movs	r3, #255	; 0xff
900111da:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900111de:	f7ff f903 	bl	900103e8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
900111e2:	f000 ff73 	bl	900120cc <xTaskResumeAll>
900111e6:	2800      	cmp	r0, #0
900111e8:	d1a6      	bne.n	90011138 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
900111ea:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900111ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900111f2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
900111f6:	f3bf 8f4f 	dsb	sy
900111fa:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
900111fe:	f7ff f8d1 	bl	900103a4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90011202:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90011204:	2d00      	cmp	r5, #0
90011206:	d09c      	beq.n	90011142 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90011208:	6c22      	ldr	r2, [r4, #64]	; 0x40
9001120a:	b152      	cbz	r2, 90011222 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001120c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9001120e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011210:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90011212:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011214:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90011216:	d301      	bcc.n	9001121c <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90011218:	6821      	ldr	r1, [r4, #0]
9001121a:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9001121c:	4638      	mov	r0, r7
9001121e:	f018 fd77 	bl	90029d10 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90011222:	3d01      	subs	r5, #1
90011224:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011226:	6923      	ldr	r3, [r4, #16]
90011228:	b963      	cbnz	r3, 90011244 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9001122a:	f7ff f8dd 	bl	900103e8 <vPortExitCritical>
				return pdPASS;
9001122e:	2001      	movs	r0, #1
90011230:	e78e      	b.n	90011150 <xQueueReceive+0x1e4>
90011232:	f04f 0350 	mov.w	r3, #80	; 0x50
90011236:	f383 8811 	msr	BASEPRI, r3
9001123a:	f3bf 8f6f 	isb	sy
9001123e:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90011242:	e7fe      	b.n	90011242 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011244:	f104 0010 	add.w	r0, r4, #16
90011248:	f001 f864 	bl	90012314 <xTaskRemoveFromEventList>
9001124c:	2800      	cmp	r0, #0
9001124e:	d0ec      	beq.n	9001122a <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
90011250:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011254:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011258:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9001125c:	f3bf 8f4f 	dsb	sy
90011260:	f3bf 8f6f 	isb	sy
90011264:	e7e1      	b.n	9001122a <xQueueReceive+0x2be>
90011266:	bf00      	nop

90011268 <xQueueSemaphoreTake>:
{
90011268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001126c:	b084      	sub	sp, #16
9001126e:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
90011270:	2800      	cmp	r0, #0
90011272:	d05c      	beq.n	9001132e <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
90011274:	6c07      	ldr	r7, [r0, #64]	; 0x40
90011276:	4604      	mov	r4, r0
90011278:	b147      	cbz	r7, 9001128c <xQueueSemaphoreTake+0x24>
9001127a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001127e:	f383 8811 	msr	BASEPRI, r3
90011282:	f3bf 8f6f 	isb	sy
90011286:	f3bf 8f4f 	dsb	sy
9001128a:	e7fe      	b.n	9001128a <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9001128c:	f001 f8ec 	bl	90012468 <xTaskGetSchedulerState>
90011290:	4605      	mov	r5, r0
90011292:	2800      	cmp	r0, #0
90011294:	d054      	beq.n	90011340 <xQueueSemaphoreTake+0xd8>
90011296:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011298:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
9001129c:	f7ff f882 	bl	900103a4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
900112a0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
900112a2:	2b00      	cmp	r3, #0
900112a4:	f040 8149 	bne.w	9001153a <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
900112a8:	9b01      	ldr	r3, [sp, #4]
900112aa:	2b00      	cmp	r3, #0
900112ac:	f000 813a 	beq.w	90011524 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
900112b0:	2d00      	cmp	r5, #0
900112b2:	f000 809d 	beq.w	900113f0 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
900112b6:	f7ff f897 	bl	900103e8 <vPortExitCritical>
		vTaskSuspendAll();
900112ba:	f000 feff 	bl	900120bc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
900112be:	f7ff f871 	bl	900103a4 <vPortEnterCritical>
900112c2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900112c6:	2bff      	cmp	r3, #255	; 0xff
900112c8:	d102      	bne.n	900112d0 <xQueueSemaphoreTake+0x68>
900112ca:	2300      	movs	r3, #0
900112cc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
900112d0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900112d4:	2bff      	cmp	r3, #255	; 0xff
900112d6:	d102      	bne.n	900112de <xQueueSemaphoreTake+0x76>
900112d8:	2300      	movs	r3, #0
900112da:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
900112de:	f7ff f883 	bl	900103e8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
900112e2:	a901      	add	r1, sp, #4
900112e4:	a802      	add	r0, sp, #8
900112e6:	f001 f86b 	bl	900123c0 <xTaskCheckForTimeOut>
900112ea:	2800      	cmp	r0, #0
900112ec:	d135      	bne.n	9001135a <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
900112ee:	f7ff f859 	bl	900103a4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
900112f2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
900112f4:	2b00      	cmp	r3, #0
900112f6:	f000 80a4 	beq.w	90011442 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
900112fa:	f7ff f875 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
900112fe:	f7ff f851 	bl	900103a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011302:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011306:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011308:	2d00      	cmp	r5, #0
9001130a:	dc05      	bgt.n	90011318 <xQueueSemaphoreTake+0xb0>
9001130c:	e074      	b.n	900113f8 <xQueueSemaphoreTake+0x190>
			--cTxLock;
9001130e:	1e6b      	subs	r3, r5, #1
90011310:	b2da      	uxtb	r2, r3
90011312:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011314:	2a00      	cmp	r2, #0
90011316:	d06f      	beq.n	900113f8 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011318:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001131a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001131c:	2b00      	cmp	r3, #0
9001131e:	d06b      	beq.n	900113f8 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011320:	f000 fff8 	bl	90012314 <xTaskRemoveFromEventList>
90011324:	2800      	cmp	r0, #0
90011326:	d0f2      	beq.n	9001130e <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
90011328:	f001 f892 	bl	90012450 <vTaskMissedYield>
9001132c:	e7ef      	b.n	9001130e <xQueueSemaphoreTake+0xa6>
9001132e:	f04f 0350 	mov.w	r3, #80	; 0x50
90011332:	f383 8811 	msr	BASEPRI, r3
90011336:	f3bf 8f6f 	isb	sy
9001133a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9001133e:	e7fe      	b.n	9001133e <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90011340:	9b01      	ldr	r3, [sp, #4]
90011342:	2b00      	cmp	r3, #0
90011344:	f000 80d4 	beq.w	900114f0 <xQueueSemaphoreTake+0x288>
90011348:	f04f 0350 	mov.w	r3, #80	; 0x50
9001134c:	f383 8811 	msr	BASEPRI, r3
90011350:	f3bf 8f6f 	isb	sy
90011354:	f3bf 8f4f 	dsb	sy
90011358:	e7fe      	b.n	90011358 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
9001135a:	f7ff f823 	bl	900103a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001135e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011362:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011364:	2d00      	cmp	r5, #0
90011366:	dc04      	bgt.n	90011372 <xQueueSemaphoreTake+0x10a>
90011368:	e011      	b.n	9001138e <xQueueSemaphoreTake+0x126>
			--cTxLock;
9001136a:	1e6b      	subs	r3, r5, #1
9001136c:	b2da      	uxtb	r2, r3
9001136e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011370:	b16a      	cbz	r2, 9001138e <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011372:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011374:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011376:	b153      	cbz	r3, 9001138e <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011378:	f000 ffcc 	bl	90012314 <xTaskRemoveFromEventList>
9001137c:	2800      	cmp	r0, #0
9001137e:	d0f4      	beq.n	9001136a <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
90011380:	f001 f866 	bl	90012450 <vTaskMissedYield>
			--cTxLock;
90011384:	1e6b      	subs	r3, r5, #1
90011386:	b2da      	uxtb	r2, r3
90011388:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001138a:	2a00      	cmp	r2, #0
9001138c:	d1f1      	bne.n	90011372 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
9001138e:	23ff      	movs	r3, #255	; 0xff
90011390:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011394:	f7ff f828 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
90011398:	f7ff f804 	bl	900103a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001139c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900113a0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900113a2:	2d00      	cmp	r5, #0
900113a4:	dd14      	ble.n	900113d0 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900113a6:	f104 0810 	add.w	r8, r4, #16
900113aa:	e003      	b.n	900113b4 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
900113ac:	1e6b      	subs	r3, r5, #1
900113ae:	b2da      	uxtb	r2, r3
900113b0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900113b2:	b16a      	cbz	r2, 900113d0 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900113b4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900113b6:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900113b8:	b153      	cbz	r3, 900113d0 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900113ba:	f000 ffab 	bl	90012314 <xTaskRemoveFromEventList>
900113be:	2800      	cmp	r0, #0
900113c0:	d0f4      	beq.n	900113ac <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
900113c2:	f001 f845 	bl	90012450 <vTaskMissedYield>
				--cRxLock;
900113c6:	1e6b      	subs	r3, r5, #1
900113c8:	b2da      	uxtb	r2, r3
900113ca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900113cc:	2a00      	cmp	r2, #0
900113ce:	d1f1      	bne.n	900113b4 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
900113d0:	23ff      	movs	r3, #255	; 0xff
900113d2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900113d6:	f7ff f807 	bl	900103e8 <vPortExitCritical>
			( void ) xTaskResumeAll();
900113da:	f000 fe77 	bl	900120cc <xTaskResumeAll>
	taskENTER_CRITICAL();
900113de:	f7fe ffe1 	bl	900103a4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
900113e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
900113e4:	2b00      	cmp	r3, #0
900113e6:	d07c      	beq.n	900114e2 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
900113e8:	f7fe fffe 	bl	900103e8 <vPortExitCritical>
	return xReturn;
900113ec:	2501      	movs	r5, #1
900113ee:	e755      	b.n	9001129c <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
900113f0:	a802      	add	r0, sp, #8
900113f2:	f000 ffd9 	bl	900123a8 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
900113f6:	e75e      	b.n	900112b6 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
900113f8:	23ff      	movs	r3, #255	; 0xff
900113fa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
900113fe:	f7fe fff3 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
90011402:	f7fe ffcf 	bl	900103a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011406:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9001140a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001140c:	2d00      	cmp	r5, #0
9001140e:	dd10      	ble.n	90011432 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011410:	f104 0810 	add.w	r8, r4, #16
90011414:	e003      	b.n	9001141e <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
90011416:	1e6b      	subs	r3, r5, #1
90011418:	b2da      	uxtb	r2, r3
9001141a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001141c:	b14a      	cbz	r2, 90011432 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001141e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011420:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011422:	b133      	cbz	r3, 90011432 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011424:	f000 ff76 	bl	90012314 <xTaskRemoveFromEventList>
90011428:	2800      	cmp	r0, #0
9001142a:	d0f4      	beq.n	90011416 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
9001142c:	f001 f810 	bl	90012450 <vTaskMissedYield>
90011430:	e7f1      	b.n	90011416 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
90011432:	23ff      	movs	r3, #255	; 0xff
90011434:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011438:	f7fe ffd6 	bl	900103e8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9001143c:	f000 fe46 	bl	900120cc <xTaskResumeAll>
90011440:	e7d4      	b.n	900113ec <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
90011442:	f7fe ffd1 	bl	900103e8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90011446:	6823      	ldr	r3, [r4, #0]
90011448:	2b00      	cmp	r3, #0
9001144a:	d062      	beq.n	90011512 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9001144c:	9901      	ldr	r1, [sp, #4]
9001144e:	4630      	mov	r0, r6
90011450:	f000 fed2 	bl	900121f8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90011454:	f7fe ffa6 	bl	900103a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011458:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9001145c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001145e:	2d00      	cmp	r5, #0
90011460:	dc04      	bgt.n	9001146c <xQueueSemaphoreTake+0x204>
90011462:	e00d      	b.n	90011480 <xQueueSemaphoreTake+0x218>
			--cTxLock;
90011464:	1e6b      	subs	r3, r5, #1
90011466:	b2da      	uxtb	r2, r3
90011468:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001146a:	b14a      	cbz	r2, 90011480 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001146c:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001146e:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011470:	b133      	cbz	r3, 90011480 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011472:	f000 ff4f 	bl	90012314 <xTaskRemoveFromEventList>
90011476:	2800      	cmp	r0, #0
90011478:	d0f4      	beq.n	90011464 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
9001147a:	f000 ffe9 	bl	90012450 <vTaskMissedYield>
9001147e:	e7f1      	b.n	90011464 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
90011480:	23ff      	movs	r3, #255	; 0xff
90011482:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011486:	f7fe ffaf 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
9001148a:	f7fe ff8b 	bl	900103a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001148e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011492:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011494:	2d00      	cmp	r5, #0
90011496:	dd10      	ble.n	900114ba <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011498:	f104 0810 	add.w	r8, r4, #16
9001149c:	e003      	b.n	900114a6 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
9001149e:	1e6b      	subs	r3, r5, #1
900114a0:	b2da      	uxtb	r2, r3
900114a2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900114a4:	b14a      	cbz	r2, 900114ba <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900114a6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900114a8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900114aa:	b133      	cbz	r3, 900114ba <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900114ac:	f000 ff32 	bl	90012314 <xTaskRemoveFromEventList>
900114b0:	2800      	cmp	r0, #0
900114b2:	d0f4      	beq.n	9001149e <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
900114b4:	f000 ffcc 	bl	90012450 <vTaskMissedYield>
900114b8:	e7f1      	b.n	9001149e <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
900114ba:	23ff      	movs	r3, #255	; 0xff
900114bc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900114c0:	f7fe ff92 	bl	900103e8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
900114c4:	f000 fe02 	bl	900120cc <xTaskResumeAll>
900114c8:	2800      	cmp	r0, #0
900114ca:	d18f      	bne.n	900113ec <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
900114cc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900114d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900114d4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
900114d8:	f3bf 8f4f 	dsb	sy
900114dc:	f3bf 8f6f 	isb	sy
900114e0:	e784      	b.n	900113ec <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
900114e2:	f7fe ff81 	bl	900103e8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
900114e6:	b92f      	cbnz	r7, 900114f4 <xQueueSemaphoreTake+0x28c>
}
900114e8:	4638      	mov	r0, r7
900114ea:	b004      	add	sp, #16
900114ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900114f0:	4607      	mov	r7, r0
900114f2:	e6d1      	b.n	90011298 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
900114f4:	f7fe ff56 	bl	900103a4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
900114f8:	6a61      	ldr	r1, [r4, #36]	; 0x24
900114fa:	b119      	cbz	r1, 90011504 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
900114fc:	6b23      	ldr	r3, [r4, #48]	; 0x30
900114fe:	6819      	ldr	r1, [r3, #0]
90011500:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90011504:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
90011506:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90011508:	f001 f84a 	bl	900125a0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9001150c:	f7fe ff6c 	bl	900103e8 <vPortExitCritical>
90011510:	e7ea      	b.n	900114e8 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
90011512:	f7fe ff47 	bl	900103a4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
90011516:	68a0      	ldr	r0, [r4, #8]
90011518:	f000 ffb6 	bl	90012488 <xTaskPriorityInherit>
9001151c:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9001151e:	f7fe ff63 	bl	900103e8 <vPortExitCritical>
90011522:	e793      	b.n	9001144c <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
90011524:	2f00      	cmp	r7, #0
90011526:	d0f1      	beq.n	9001150c <xQueueSemaphoreTake+0x2a4>
90011528:	f04f 0350 	mov.w	r3, #80	; 0x50
9001152c:	f383 8811 	msr	BASEPRI, r3
90011530:	f3bf 8f6f 	isb	sy
90011534:	f3bf 8f4f 	dsb	sy
90011538:	e7fe      	b.n	90011538 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9001153a:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9001153c:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9001153e:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90011540:	b12a      	cbz	r2, 9001154e <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011542:	6923      	ldr	r3, [r4, #16]
90011544:	b93b      	cbnz	r3, 90011556 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
90011546:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
90011548:	f7fe ff4e 	bl	900103e8 <vPortExitCritical>
				return pdPASS;
9001154c:	e7cc      	b.n	900114e8 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9001154e:	f001 f87b 	bl	90012648 <pvTaskIncrementMutexHeldCount>
90011552:	60a0      	str	r0, [r4, #8]
90011554:	e7f5      	b.n	90011542 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011556:	f104 0010 	add.w	r0, r4, #16
9001155a:	f000 fedb 	bl	90012314 <xTaskRemoveFromEventList>
9001155e:	2800      	cmp	r0, #0
90011560:	d0f1      	beq.n	90011546 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
90011562:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011566:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9001156a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9001156e:	f3bf 8f4f 	dsb	sy
90011572:	f3bf 8f6f 	isb	sy
90011576:	e7e6      	b.n	90011546 <xQueueSemaphoreTake+0x2de>

90011578 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
90011578:	b1a8      	cbz	r0, 900115a6 <xQueueTakeMutexRecursive+0x2e>
	{
9001157a:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9001157c:	6886      	ldr	r6, [r0, #8]
9001157e:	4604      	mov	r4, r0
90011580:	460d      	mov	r5, r1
90011582:	f000 ff6b 	bl	9001245c <xTaskGetCurrentTaskHandle>
90011586:	4286      	cmp	r6, r0
90011588:	d008      	beq.n	9001159c <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
9001158a:	4629      	mov	r1, r5
9001158c:	4620      	mov	r0, r4
9001158e:	f7ff fe6b 	bl	90011268 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
90011592:	b110      	cbz	r0, 9001159a <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
90011594:	68e3      	ldr	r3, [r4, #12]
90011596:	3301      	adds	r3, #1
90011598:	60e3      	str	r3, [r4, #12]
	}
9001159a:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9001159c:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
9001159e:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
900115a0:	4403      	add	r3, r0
900115a2:	60e3      	str	r3, [r4, #12]
	}
900115a4:	bd70      	pop	{r4, r5, r6, pc}
900115a6:	f04f 0350 	mov.w	r3, #80	; 0x50
900115aa:	f383 8811 	msr	BASEPRI, r3
900115ae:	f3bf 8f6f 	isb	sy
900115b2:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
900115b6:	e7fe      	b.n	900115b6 <xQueueTakeMutexRecursive+0x3e>

900115b8 <xQueueReceiveFromISR>:
{
900115b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
900115bc:	b310      	cbz	r0, 90011604 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900115be:	460e      	mov	r6, r1
900115c0:	4604      	mov	r4, r0
900115c2:	4617      	mov	r7, r2
900115c4:	b191      	cbz	r1, 900115ec <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900115c6:	f7ff f81f 	bl	90010608 <vPortValidateInterruptPriority>
	__asm volatile
900115ca:	f3ef 8911 	mrs	r9, BASEPRI
900115ce:	f04f 0350 	mov.w	r3, #80	; 0x50
900115d2:	f383 8811 	msr	BASEPRI, r3
900115d6:	f3bf 8f6f 	isb	sy
900115da:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900115de:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
900115e0:	b9cd      	cbnz	r5, 90011616 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
900115e2:	4628      	mov	r0, r5
	__asm volatile
900115e4:	f389 8811 	msr	BASEPRI, r9
}
900115e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900115ec:	6c03      	ldr	r3, [r0, #64]	; 0x40
900115ee:	2b00      	cmp	r3, #0
900115f0:	d0e9      	beq.n	900115c6 <xQueueReceiveFromISR+0xe>
	__asm volatile
900115f2:	f04f 0350 	mov.w	r3, #80	; 0x50
900115f6:	f383 8811 	msr	BASEPRI, r3
900115fa:	f3bf 8f6f 	isb	sy
900115fe:	f3bf 8f4f 	dsb	sy
90011602:	e7fe      	b.n	90011602 <xQueueReceiveFromISR+0x4a>
90011604:	f04f 0350 	mov.w	r3, #80	; 0x50
90011608:	f383 8811 	msr	BASEPRI, r3
9001160c:	f3bf 8f6f 	isb	sy
90011610:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90011614:	e7fe      	b.n	90011614 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
90011616:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9001161a:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9001161c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90011620:	b142      	cbz	r2, 90011634 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011622:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90011624:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011626:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90011628:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001162a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9001162c:	d215      	bcs.n	9001165a <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9001162e:	4630      	mov	r0, r6
90011630:	f018 fb6e 	bl	90029d10 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90011634:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
90011636:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9001163a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9001163c:	d009      	beq.n	90011652 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9001163e:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
90011642:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
90011644:	b25b      	sxtb	r3, r3
90011646:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
9001164a:	f389 8811 	msr	BASEPRI, r9
}
9001164e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011652:	6923      	ldr	r3, [r4, #16]
90011654:	b923      	cbnz	r3, 90011660 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
90011656:	2001      	movs	r0, #1
90011658:	e7c4      	b.n	900115e4 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9001165a:	6821      	ldr	r1, [r4, #0]
9001165c:	60e1      	str	r1, [r4, #12]
9001165e:	e7e6      	b.n	9001162e <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011660:	f104 0010 	add.w	r0, r4, #16
90011664:	f000 fe56 	bl	90012314 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
90011668:	2f00      	cmp	r7, #0
9001166a:	d0f4      	beq.n	90011656 <xQueueReceiveFromISR+0x9e>
9001166c:	2800      	cmp	r0, #0
9001166e:	d0f2      	beq.n	90011656 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
90011670:	2301      	movs	r3, #1
			xReturn = pdPASS;
90011672:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
90011674:	603b      	str	r3, [r7, #0]
90011676:	e7b5      	b.n	900115e4 <xQueueReceiveFromISR+0x2c>

90011678 <vQueueDelete>:
	configASSERT( pxQueue );
90011678:	b1e0      	cbz	r0, 900116b4 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9001167a:	4b21      	ldr	r3, [pc, #132]	; (90011700 <vQueueDelete+0x88>)
9001167c:	685a      	ldr	r2, [r3, #4]
9001167e:	4290      	cmp	r0, r2
90011680:	d02b      	beq.n	900116da <vQueueDelete+0x62>
90011682:	68da      	ldr	r2, [r3, #12]
90011684:	4290      	cmp	r0, r2
90011686:	d02a      	beq.n	900116de <vQueueDelete+0x66>
90011688:	695a      	ldr	r2, [r3, #20]
9001168a:	4290      	cmp	r0, r2
9001168c:	d029      	beq.n	900116e2 <vQueueDelete+0x6a>
9001168e:	69da      	ldr	r2, [r3, #28]
90011690:	4290      	cmp	r0, r2
90011692:	d028      	beq.n	900116e6 <vQueueDelete+0x6e>
90011694:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90011696:	4290      	cmp	r0, r2
90011698:	d027      	beq.n	900116ea <vQueueDelete+0x72>
9001169a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9001169c:	4290      	cmp	r0, r2
9001169e:	d014      	beq.n	900116ca <vQueueDelete+0x52>
900116a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900116a2:	4290      	cmp	r0, r2
900116a4:	d023      	beq.n	900116ee <vQueueDelete+0x76>
900116a6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
900116a8:	4290      	cmp	r0, r2
900116aa:	d022      	beq.n	900116f2 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
900116ac:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
900116b0:	b14b      	cbz	r3, 900116c6 <vQueueDelete+0x4e>
}
900116b2:	4770      	bx	lr
	__asm volatile
900116b4:	f04f 0350 	mov.w	r3, #80	; 0x50
900116b8:	f383 8811 	msr	BASEPRI, r3
900116bc:	f3bf 8f6f 	isb	sy
900116c0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
900116c4:	e7fe      	b.n	900116c4 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
900116c6:	f7fe bd51 	b.w	9001016c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900116ca:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
900116cc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
900116d0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 900116f8 <vQueueDelete+0x80>
900116d4:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
900116d8:	e7e8      	b.n	900116ac <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900116da:	2200      	movs	r2, #0
900116dc:	e7f6      	b.n	900116cc <vQueueDelete+0x54>
900116de:	2201      	movs	r2, #1
900116e0:	e7f4      	b.n	900116cc <vQueueDelete+0x54>
900116e2:	2202      	movs	r2, #2
900116e4:	e7f2      	b.n	900116cc <vQueueDelete+0x54>
900116e6:	2203      	movs	r2, #3
900116e8:	e7f0      	b.n	900116cc <vQueueDelete+0x54>
900116ea:	2204      	movs	r2, #4
900116ec:	e7ee      	b.n	900116cc <vQueueDelete+0x54>
900116ee:	2206      	movs	r2, #6
900116f0:	e7ec      	b.n	900116cc <vQueueDelete+0x54>
900116f2:	2207      	movs	r2, #7
900116f4:	e7ea      	b.n	900116cc <vQueueDelete+0x54>
900116f6:	bf00      	nop
	...
90011700:	24039458 	.word	0x24039458

90011704 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
90011704:	4b12      	ldr	r3, [pc, #72]	; (90011750 <vQueueAddToRegistry+0x4c>)
90011706:	681a      	ldr	r2, [r3, #0]
90011708:	b17a      	cbz	r2, 9001172a <vQueueAddToRegistry+0x26>
9001170a:	689a      	ldr	r2, [r3, #8]
9001170c:	b162      	cbz	r2, 90011728 <vQueueAddToRegistry+0x24>
9001170e:	691a      	ldr	r2, [r3, #16]
90011710:	b192      	cbz	r2, 90011738 <vQueueAddToRegistry+0x34>
90011712:	699a      	ldr	r2, [r3, #24]
90011714:	b192      	cbz	r2, 9001173c <vQueueAddToRegistry+0x38>
90011716:	6a1a      	ldr	r2, [r3, #32]
90011718:	b192      	cbz	r2, 90011740 <vQueueAddToRegistry+0x3c>
9001171a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
9001171c:	b192      	cbz	r2, 90011744 <vQueueAddToRegistry+0x40>
9001171e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90011720:	b192      	cbz	r2, 90011748 <vQueueAddToRegistry+0x44>
90011722:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90011724:	b192      	cbz	r2, 9001174c <vQueueAddToRegistry+0x48>
	}
90011726:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90011728:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9001172a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9001172e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
90011732:	f8cc 0004 	str.w	r0, [ip, #4]
	}
90011736:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90011738:	2202      	movs	r2, #2
9001173a:	e7f6      	b.n	9001172a <vQueueAddToRegistry+0x26>
9001173c:	2203      	movs	r2, #3
9001173e:	e7f4      	b.n	9001172a <vQueueAddToRegistry+0x26>
90011740:	2204      	movs	r2, #4
90011742:	e7f2      	b.n	9001172a <vQueueAddToRegistry+0x26>
90011744:	2205      	movs	r2, #5
90011746:	e7f0      	b.n	9001172a <vQueueAddToRegistry+0x26>
90011748:	2206      	movs	r2, #6
9001174a:	e7ee      	b.n	9001172a <vQueueAddToRegistry+0x26>
9001174c:	2207      	movs	r2, #7
9001174e:	e7ec      	b.n	9001172a <vQueueAddToRegistry+0x26>
90011750:	24039458 	.word	0x24039458

90011754 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
90011754:	b570      	push	{r4, r5, r6, lr}
90011756:	4605      	mov	r5, r0
90011758:	460e      	mov	r6, r1
9001175a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9001175c:	f7fe fe22 	bl	900103a4 <vPortEnterCritical>
90011760:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
90011764:	2bff      	cmp	r3, #255	; 0xff
90011766:	d102      	bne.n	9001176e <vQueueWaitForMessageRestricted+0x1a>
90011768:	2300      	movs	r3, #0
9001176a:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
9001176e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
90011772:	2bff      	cmp	r3, #255	; 0xff
90011774:	d102      	bne.n	9001177c <vQueueWaitForMessageRestricted+0x28>
90011776:	2300      	movs	r3, #0
90011778:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
9001177c:	f7fe fe34 	bl	900103e8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
90011780:	6bab      	ldr	r3, [r5, #56]	; 0x38
90011782:	2b00      	cmp	r3, #0
90011784:	d043      	beq.n	9001180e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
90011786:	f7fe fe0d 	bl	900103a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001178a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9001178e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011790:	2c00      	cmp	r4, #0
90011792:	dd14      	ble.n	900117be <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011794:	f105 0624 	add.w	r6, r5, #36	; 0x24
90011798:	e003      	b.n	900117a2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9001179a:	1e63      	subs	r3, r4, #1
9001179c:	b2da      	uxtb	r2, r3
9001179e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900117a0:	b16a      	cbz	r2, 900117be <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900117a2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900117a4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900117a6:	b153      	cbz	r3, 900117be <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900117a8:	f000 fdb4 	bl	90012314 <xTaskRemoveFromEventList>
900117ac:	2800      	cmp	r0, #0
900117ae:	d0f4      	beq.n	9001179a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
900117b0:	f000 fe4e 	bl	90012450 <vTaskMissedYield>
			--cTxLock;
900117b4:	1e63      	subs	r3, r4, #1
900117b6:	b2da      	uxtb	r2, r3
900117b8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900117ba:	2a00      	cmp	r2, #0
900117bc:	d1f1      	bne.n	900117a2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
900117be:	23ff      	movs	r3, #255	; 0xff
900117c0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
900117c4:	f7fe fe10 	bl	900103e8 <vPortExitCritical>
	taskENTER_CRITICAL();
900117c8:	f7fe fdec 	bl	900103a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900117cc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
900117d0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900117d2:	2c00      	cmp	r4, #0
900117d4:	dd14      	ble.n	90011800 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900117d6:	f105 0610 	add.w	r6, r5, #16
900117da:	e003      	b.n	900117e4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
900117dc:	1e63      	subs	r3, r4, #1
900117de:	b2da      	uxtb	r2, r3
900117e0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900117e2:	b16a      	cbz	r2, 90011800 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900117e4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900117e6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900117e8:	b153      	cbz	r3, 90011800 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900117ea:	f000 fd93 	bl	90012314 <xTaskRemoveFromEventList>
900117ee:	2800      	cmp	r0, #0
900117f0:	d0f4      	beq.n	900117dc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
900117f2:	f000 fe2d 	bl	90012450 <vTaskMissedYield>
				--cRxLock;
900117f6:	1e63      	subs	r3, r4, #1
900117f8:	b2da      	uxtb	r2, r3
900117fa:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900117fc:	2a00      	cmp	r2, #0
900117fe:	d1f1      	bne.n	900117e4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
90011800:	23ff      	movs	r3, #255	; 0xff
90011802:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
90011806:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9001180a:	f7fe bded 	b.w	900103e8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9001180e:	4622      	mov	r2, r4
90011810:	4631      	mov	r1, r6
90011812:	f105 0024 	add.w	r0, r5, #36	; 0x24
90011816:	f000 fd33 	bl	90012280 <vTaskPlaceOnEventListRestricted>
9001181a:	e7b4      	b.n	90011786 <vQueueWaitForMessageRestricted+0x32>

9001181c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9001181c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90011820:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
90011822:	f7fe fdbf 	bl	900103a4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
90011826:	4a34      	ldr	r2, [pc, #208]	; (900118f8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
90011828:	4e34      	ldr	r6, [pc, #208]	; (900118fc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9001182a:	6813      	ldr	r3, [r2, #0]
9001182c:	3301      	adds	r3, #1
9001182e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
90011830:	6833      	ldr	r3, [r6, #0]
90011832:	2b00      	cmp	r3, #0
90011834:	d032      	beq.n	9001189c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
90011836:	4c32      	ldr	r4, [pc, #200]	; (90011900 <prvAddNewTaskToReadyList+0xe4>)
90011838:	6823      	ldr	r3, [r4, #0]
9001183a:	b33b      	cbz	r3, 9001188c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9001183c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9001183e:	4f31      	ldr	r7, [pc, #196]	; (90011904 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
90011840:	4a31      	ldr	r2, [pc, #196]	; (90011908 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
90011842:	4932      	ldr	r1, [pc, #200]	; (9001190c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
90011844:	6813      	ldr	r3, [r2, #0]
90011846:	3301      	adds	r3, #1
90011848:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9001184a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
9001184c:	680b      	ldr	r3, [r1, #0]
9001184e:	4283      	cmp	r3, r0
90011850:	d200      	bcs.n	90011854 <prvAddNewTaskToReadyList+0x38>
90011852:	6008      	str	r0, [r1, #0]
90011854:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011858:	1d29      	adds	r1, r5, #4
9001185a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9001185e:	f7fe fcf9 	bl	90010254 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
90011862:	f7fe fdc1 	bl	900103e8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
90011866:	6823      	ldr	r3, [r4, #0]
90011868:	b173      	cbz	r3, 90011888 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9001186a:	6832      	ldr	r2, [r6, #0]
9001186c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9001186e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90011870:	429a      	cmp	r2, r3
90011872:	d209      	bcs.n	90011888 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
90011874:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011878:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9001187c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011880:	f3bf 8f4f 	dsb	sy
90011884:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
90011888:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9001188c:	6833      	ldr	r3, [r6, #0]
9001188e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90011890:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011892:	4f1c      	ldr	r7, [pc, #112]	; (90011904 <prvAddNewTaskToReadyList+0xe8>)
90011894:	4283      	cmp	r3, r0
90011896:	d8d3      	bhi.n	90011840 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
90011898:	6035      	str	r5, [r6, #0]
9001189a:	e7d1      	b.n	90011840 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9001189c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9001189e:	6813      	ldr	r3, [r2, #0]
900118a0:	2b01      	cmp	r3, #1
900118a2:	d003      	beq.n	900118ac <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
900118a4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
900118a6:	4f17      	ldr	r7, [pc, #92]	; (90011904 <prvAddNewTaskToReadyList+0xe8>)
900118a8:	4c15      	ldr	r4, [pc, #84]	; (90011900 <prvAddNewTaskToReadyList+0xe4>)
900118aa:	e7c9      	b.n	90011840 <prvAddNewTaskToReadyList+0x24>
900118ac:	4f15      	ldr	r7, [pc, #84]	; (90011904 <prvAddNewTaskToReadyList+0xe8>)
900118ae:	463c      	mov	r4, r7
900118b0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
900118b4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
900118b6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
900118b8:	f7fe fcbc 	bl	90010234 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
900118bc:	45a0      	cmp	r8, r4
900118be:	d1f9      	bne.n	900118b4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
900118c0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 90011924 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
900118c4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 90011928 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
900118c8:	4648      	mov	r0, r9
900118ca:	4c0d      	ldr	r4, [pc, #52]	; (90011900 <prvAddNewTaskToReadyList+0xe4>)
900118cc:	f7fe fcb2 	bl	90010234 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
900118d0:	4640      	mov	r0, r8
900118d2:	f7fe fcaf 	bl	90010234 <vListInitialise>
	vListInitialise( &xPendingReadyList );
900118d6:	480e      	ldr	r0, [pc, #56]	; (90011910 <prvAddNewTaskToReadyList+0xf4>)
900118d8:	f7fe fcac 	bl	90010234 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
900118dc:	480d      	ldr	r0, [pc, #52]	; (90011914 <prvAddNewTaskToReadyList+0xf8>)
900118de:	f7fe fca9 	bl	90010234 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
900118e2:	480d      	ldr	r0, [pc, #52]	; (90011918 <prvAddNewTaskToReadyList+0xfc>)
900118e4:	f7fe fca6 	bl	90010234 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
900118e8:	4b0c      	ldr	r3, [pc, #48]	; (9001191c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
900118ea:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
900118ec:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
900118f0:	4b0b      	ldr	r3, [pc, #44]	; (90011920 <prvAddNewTaskToReadyList+0x104>)
900118f2:	f8c3 8000 	str.w	r8, [r3]
}
900118f6:	e7a3      	b.n	90011840 <prvAddNewTaskToReadyList+0x24>
900118f8:	24039904 	.word	0x24039904
900118fc:	24039498 	.word	0x24039498
90011900:	24039960 	.word	0x24039960
90011904:	240394a4 	.word	0x240394a4
90011908:	24039910 	.word	0x24039910
9001190c:	24039914 	.word	0x24039914
90011910:	2403994c 	.word	0x2403994c
90011914:	24039978 	.word	0x24039978
90011918:	24039964 	.word	0x24039964
9001191c:	2403949c 	.word	0x2403949c
90011920:	240394a0 	.word	0x240394a0
90011924:	24039918 	.word	0x24039918
90011928:	2403992c 	.word	0x2403992c

9001192c <prvIdleTask>:
{
9001192c:	b580      	push	{r7, lr}
9001192e:	4c22      	ldr	r4, [pc, #136]	; (900119b8 <prvIdleTask+0x8c>)
				taskYIELD();
90011930:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
90011934:	4e21      	ldr	r6, [pc, #132]	; (900119bc <prvIdleTask+0x90>)
90011936:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
9001193a:	4d21      	ldr	r5, [pc, #132]	; (900119c0 <prvIdleTask+0x94>)
9001193c:	4f21      	ldr	r7, [pc, #132]	; (900119c4 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9001193e:	6823      	ldr	r3, [r4, #0]
90011940:	b353      	cbz	r3, 90011998 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
90011942:	f7fe fd2f 	bl	900103a4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011946:	68f3      	ldr	r3, [r6, #12]
90011948:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9001194c:	f10a 0004 	add.w	r0, sl, #4
90011950:	f7fe fca8 	bl	900102a4 <uxListRemove>
				--uxCurrentNumberOfTasks;
90011954:	682b      	ldr	r3, [r5, #0]
90011956:	3b01      	subs	r3, #1
90011958:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9001195a:	6823      	ldr	r3, [r4, #0]
9001195c:	3b01      	subs	r3, #1
9001195e:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
90011960:	f7fe fd42 	bl	900103e8 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
90011964:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
90011968:	b163      	cbz	r3, 90011984 <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9001196a:	2b01      	cmp	r3, #1
9001196c:	d020      	beq.n	900119b0 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9001196e:	2b02      	cmp	r3, #2
90011970:	d0e5      	beq.n	9001193e <prvIdleTask+0x12>
90011972:	f04f 0350 	mov.w	r3, #80	; 0x50
90011976:	f383 8811 	msr	BASEPRI, r3
9001197a:	f3bf 8f6f 	isb	sy
9001197e:	f3bf 8f4f 	dsb	sy
90011982:	e7fe      	b.n	90011982 <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
90011984:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
90011988:	f7fe fbf0 	bl	9001016c <vPortFree>
				vPortFree( pxTCB );
9001198c:	4650      	mov	r0, sl
9001198e:	f7fe fbed 	bl	9001016c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90011992:	6823      	ldr	r3, [r4, #0]
90011994:	2b00      	cmp	r3, #0
90011996:	d1d4      	bne.n	90011942 <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90011998:	683b      	ldr	r3, [r7, #0]
9001199a:	2b01      	cmp	r3, #1
9001199c:	d905      	bls.n	900119aa <prvIdleTask+0x7e>
				taskYIELD();
9001199e:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
900119a2:	f3bf 8f4f 	dsb	sy
900119a6:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
900119aa:	f7f0 fff5 	bl	90002998 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
900119ae:	e7c6      	b.n	9001193e <prvIdleTask+0x12>
				vPortFree( pxTCB );
900119b0:	4650      	mov	r0, sl
900119b2:	f7fe fbdb 	bl	9001016c <vPortFree>
900119b6:	e7c2      	b.n	9001193e <prvIdleTask+0x12>
900119b8:	24039908 	.word	0x24039908
900119bc:	24039978 	.word	0x24039978
900119c0:	24039904 	.word	0x24039904
900119c4:	240394a4 	.word	0x240394a4

900119c8 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
900119c8:	4b4a      	ldr	r3, [pc, #296]	; (90011af4 <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
900119ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
900119ce:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
900119d0:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
900119d2:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
900119d4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
900119d6:	2e00      	cmp	r6, #0
900119d8:	d040      	beq.n	90011a5c <xTaskIncrementTick.part.0+0x94>
900119da:	f8df b12c 	ldr.w	fp, [pc, #300]	; 90011b08 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
900119de:	f8db 3000 	ldr.w	r3, [fp]
900119e2:	429e      	cmp	r6, r3
900119e4:	d347      	bcc.n	90011a76 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900119e6:	4f44      	ldr	r7, [pc, #272]	; (90011af8 <xTaskIncrementTick.part.0+0x130>)
900119e8:	683b      	ldr	r3, [r7, #0]
900119ea:	681d      	ldr	r5, [r3, #0]
900119ec:	2d00      	cmp	r5, #0
900119ee:	d077      	beq.n	90011ae0 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
900119f0:	2500      	movs	r5, #0
900119f2:	f8df 9118 	ldr.w	r9, [pc, #280]	; 90011b0c <xTaskIncrementTick.part.0+0x144>
900119f6:	f8df a118 	ldr.w	sl, [pc, #280]	; 90011b10 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
900119fa:	f8df 8118 	ldr.w	r8, [pc, #280]	; 90011b14 <xTaskIncrementTick.part.0+0x14c>
900119fe:	e022      	b.n	90011a46 <xTaskIncrementTick.part.0+0x7e>
90011a00:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90011a02:	f7fe fc4f 	bl	900102a4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90011a06:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90011a08:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90011a0c:	9901      	ldr	r1, [sp, #4]
90011a0e:	b113      	cbz	r3, 90011a16 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90011a10:	f7fe fc48 	bl	900102a4 <uxListRemove>
90011a14:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
90011a16:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90011a18:	f8d8 2000 	ldr.w	r2, [r8]
90011a1c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90011a20:	4293      	cmp	r3, r2
90011a22:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90011a26:	d901      	bls.n	90011a2c <xTaskIncrementTick.part.0+0x64>
90011a28:	f8c8 3000 	str.w	r3, [r8]
90011a2c:	f7fe fc12 	bl	90010254 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90011a30:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011a34:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90011a36:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90011a38:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011a3a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
90011a3c:	4291      	cmp	r1, r2
90011a3e:	bf28      	it	cs
90011a40:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011a42:	2b00      	cmp	r3, #0
90011a44:	d050      	beq.n	90011ae8 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011a46:	683b      	ldr	r3, [r7, #0]
90011a48:	68db      	ldr	r3, [r3, #12]
90011a4a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
90011a4c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90011a4e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
90011a50:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90011a52:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
90011a54:	d2d4      	bcs.n	90011a00 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
90011a56:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
90011a5a:	e011      	b.n	90011a80 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
90011a5c:	4b26      	ldr	r3, [pc, #152]	; (90011af8 <xTaskIncrementTick.part.0+0x130>)
90011a5e:	681a      	ldr	r2, [r3, #0]
90011a60:	6812      	ldr	r2, [r2, #0]
90011a62:	b30a      	cbz	r2, 90011aa8 <xTaskIncrementTick.part.0+0xe0>
90011a64:	f04f 0350 	mov.w	r3, #80	; 0x50
90011a68:	f383 8811 	msr	BASEPRI, r3
90011a6c:	f3bf 8f6f 	isb	sy
90011a70:	f3bf 8f4f 	dsb	sy
90011a74:	e7fe      	b.n	90011a74 <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
90011a76:	2500      	movs	r5, #0
90011a78:	f8df 9090 	ldr.w	r9, [pc, #144]	; 90011b0c <xTaskIncrementTick.part.0+0x144>
90011a7c:	f8df a090 	ldr.w	sl, [pc, #144]	; 90011b10 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90011a80:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
90011a84:	491d      	ldr	r1, [pc, #116]	; (90011afc <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90011a86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011a88:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90011a8c:	009b      	lsls	r3, r3, #2
90011a8e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
90011a92:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90011a94:	2a02      	cmp	r2, #2
90011a96:	bf28      	it	cs
90011a98:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
90011a9a:	2b00      	cmp	r3, #0
}
90011a9c:	bf0c      	ite	eq
90011a9e:	4628      	moveq	r0, r5
90011aa0:	2001      	movne	r0, #1
90011aa2:	b003      	add	sp, #12
90011aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90011aa8:	4a15      	ldr	r2, [pc, #84]	; (90011b00 <xTaskIncrementTick.part.0+0x138>)
90011aaa:	6818      	ldr	r0, [r3, #0]
90011aac:	6811      	ldr	r1, [r2, #0]
90011aae:	6019      	str	r1, [r3, #0]
90011ab0:	4914      	ldr	r1, [pc, #80]	; (90011b04 <xTaskIncrementTick.part.0+0x13c>)
90011ab2:	6010      	str	r0, [r2, #0]
90011ab4:	680a      	ldr	r2, [r1, #0]
90011ab6:	3201      	adds	r2, #1
90011ab8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011aba:	681a      	ldr	r2, [r3, #0]
90011abc:	6812      	ldr	r2, [r2, #0]
90011abe:	b932      	cbnz	r2, 90011ace <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
90011ac0:	f8df b044 	ldr.w	fp, [pc, #68]	; 90011b08 <xTaskIncrementTick.part.0+0x140>
90011ac4:	f04f 33ff 	mov.w	r3, #4294967295
90011ac8:	f8cb 3000 	str.w	r3, [fp]
90011acc:	e787      	b.n	900119de <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011ace:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011ad0:	f8df b034 	ldr.w	fp, [pc, #52]	; 90011b08 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011ad4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011ad6:	68db      	ldr	r3, [r3, #12]
90011ad8:	685b      	ldr	r3, [r3, #4]
90011ada:	f8cb 3000 	str.w	r3, [fp]
	}
}
90011ade:	e77e      	b.n	900119de <xTaskIncrementTick.part.0+0x16>
90011ae0:	f8df 9028 	ldr.w	r9, [pc, #40]	; 90011b0c <xTaskIncrementTick.part.0+0x144>
90011ae4:	f8df a028 	ldr.w	sl, [pc, #40]	; 90011b10 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011ae8:	f04f 33ff 	mov.w	r3, #4294967295
90011aec:	f8cb 3000 	str.w	r3, [fp]
					break;
90011af0:	e7c6      	b.n	90011a80 <xTaskIncrementTick.part.0+0xb8>
90011af2:	bf00      	nop
90011af4:	2403998c 	.word	0x2403998c
90011af8:	2403949c 	.word	0x2403949c
90011afc:	24039990 	.word	0x24039990
90011b00:	240394a0 	.word	0x240394a0
90011b04:	24039944 	.word	0x24039944
90011b08:	24039940 	.word	0x24039940
90011b0c:	240394a4 	.word	0x240394a4
90011b10:	24039498 	.word	0x24039498
90011b14:	24039914 	.word	0x24039914

90011b18 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
90011b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
90011b1c:	4d41      	ldr	r5, [pc, #260]	; (90011c24 <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
90011b1e:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
90011b20:	f7fe fc40 	bl	900103a4 <vPortEnterCritical>
		--uxSchedulerSuspended;
90011b24:	682b      	ldr	r3, [r5, #0]
90011b26:	3b01      	subs	r3, #1
90011b28:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011b2a:	682b      	ldr	r3, [r5, #0]
90011b2c:	2b00      	cmp	r3, #0
90011b2e:	d161      	bne.n	90011bf4 <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
90011b30:	4b3d      	ldr	r3, [pc, #244]	; (90011c28 <xTaskResumeAll.part.0+0x110>)
90011b32:	681b      	ldr	r3, [r3, #0]
90011b34:	2b00      	cmp	r3, #0
90011b36:	d05d      	beq.n	90011bf4 <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90011b38:	4e3c      	ldr	r6, [pc, #240]	; (90011c2c <xTaskResumeAll.part.0+0x114>)
90011b3a:	6833      	ldr	r3, [r6, #0]
90011b3c:	2b00      	cmp	r3, #0
90011b3e:	d06e      	beq.n	90011c1e <xTaskResumeAll.part.0+0x106>
90011b40:	4f3b      	ldr	r7, [pc, #236]	; (90011c30 <xTaskResumeAll.part.0+0x118>)
90011b42:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 90011c40 <xTaskResumeAll.part.0+0x128>
90011b46:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 90011c44 <xTaskResumeAll.part.0+0x12c>
90011b4a:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 90011c48 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011b4e:	68f3      	ldr	r3, [r6, #12]
90011b50:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90011b52:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90011b56:	f104 0018 	add.w	r0, r4, #24
90011b5a:	f7fe fba3 	bl	900102a4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90011b5e:	4658      	mov	r0, fp
90011b60:	f7fe fba0 	bl	900102a4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
90011b64:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90011b66:	683a      	ldr	r2, [r7, #0]
90011b68:	4659      	mov	r1, fp
90011b6a:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90011b6e:	4293      	cmp	r3, r2
90011b70:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90011b74:	d900      	bls.n	90011b78 <xTaskResumeAll.part.0+0x60>
90011b76:	603b      	str	r3, [r7, #0]
90011b78:	f7fe fb6c 	bl	90010254 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90011b7c:	f8d8 3000 	ldr.w	r3, [r8]
90011b80:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90011b82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011b84:	429a      	cmp	r2, r3
90011b86:	d33d      	bcc.n	90011c04 <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
90011b88:	2301      	movs	r3, #1
90011b8a:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90011b8e:	6833      	ldr	r3, [r6, #0]
90011b90:	2b00      	cmp	r3, #0
90011b92:	d1dc      	bne.n	90011b4e <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011b94:	4b27      	ldr	r3, [pc, #156]	; (90011c34 <xTaskResumeAll.part.0+0x11c>)
90011b96:	681a      	ldr	r2, [r3, #0]
90011b98:	6812      	ldr	r2, [r2, #0]
90011b9a:	2a00      	cmp	r2, #0
90011b9c:	d03a      	beq.n	90011c14 <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011b9e:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011ba0:	4b25      	ldr	r3, [pc, #148]	; (90011c38 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011ba2:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011ba4:	68d2      	ldr	r2, [r2, #12]
90011ba6:	6852      	ldr	r2, [r2, #4]
90011ba8:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
90011baa:	4e24      	ldr	r6, [pc, #144]	; (90011c3c <xTaskResumeAll.part.0+0x124>)
90011bac:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
90011bae:	b194      	cbz	r4, 90011bd6 <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
90011bb0:	2701      	movs	r7, #1
90011bb2:	e006      	b.n	90011bc2 <xTaskResumeAll.part.0+0xaa>
90011bb4:	f7ff ff08 	bl	900119c8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90011bb8:	b108      	cbz	r0, 90011bbe <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
90011bba:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
90011bbe:	3c01      	subs	r4, #1
90011bc0:	d008      	beq.n	90011bd4 <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011bc2:	682b      	ldr	r3, [r5, #0]
90011bc4:	2b00      	cmp	r3, #0
90011bc6:	d0f5      	beq.n	90011bb4 <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
90011bc8:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90011bca:	3c01      	subs	r4, #1
		++xPendedTicks;
90011bcc:	f103 0301 	add.w	r3, r3, #1
90011bd0:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90011bd2:	d1f6      	bne.n	90011bc2 <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
90011bd4:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
90011bd6:	f8da 3000 	ldr.w	r3, [sl]
90011bda:	b15b      	cbz	r3, 90011bf4 <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
90011bdc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011be0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011be4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011be8:	f3bf 8f4f 	dsb	sy
90011bec:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
90011bf0:	2001      	movs	r0, #1
90011bf2:	e000      	b.n	90011bf6 <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
90011bf4:	2000      	movs	r0, #0
90011bf6:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90011bf8:	f7fe fbf6 	bl	900103e8 <vPortExitCritical>
}
90011bfc:	9801      	ldr	r0, [sp, #4]
90011bfe:	b003      	add	sp, #12
90011c00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90011c04:	6833      	ldr	r3, [r6, #0]
90011c06:	2b00      	cmp	r3, #0
90011c08:	d1a1      	bne.n	90011b4e <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011c0a:	4b0a      	ldr	r3, [pc, #40]	; (90011c34 <xTaskResumeAll.part.0+0x11c>)
90011c0c:	681a      	ldr	r2, [r3, #0]
90011c0e:	6812      	ldr	r2, [r2, #0]
90011c10:	2a00      	cmp	r2, #0
90011c12:	d1c4      	bne.n	90011b9e <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
90011c14:	4b08      	ldr	r3, [pc, #32]	; (90011c38 <xTaskResumeAll.part.0+0x120>)
90011c16:	f04f 32ff 	mov.w	r2, #4294967295
90011c1a:	601a      	str	r2, [r3, #0]
90011c1c:	e7c5      	b.n	90011baa <xTaskResumeAll.part.0+0x92>
90011c1e:	f8df a028 	ldr.w	sl, [pc, #40]	; 90011c48 <xTaskResumeAll.part.0+0x130>
90011c22:	e7c2      	b.n	90011baa <xTaskResumeAll.part.0+0x92>
90011c24:	2403990c 	.word	0x2403990c
90011c28:	24039904 	.word	0x24039904
90011c2c:	2403994c 	.word	0x2403994c
90011c30:	24039914 	.word	0x24039914
90011c34:	2403949c 	.word	0x2403949c
90011c38:	24039940 	.word	0x24039940
90011c3c:	24039948 	.word	0x24039948
90011c40:	240394a4 	.word	0x240394a4
90011c44:	24039498 	.word	0x24039498
90011c48:	24039990 	.word	0x24039990

90011c4c <xTaskCreateStatic>:
	{
90011c4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011c50:	b083      	sub	sp, #12
90011c52:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
90011c54:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
90011c58:	b1bb      	cbz	r3, 90011c8a <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
90011c5a:	b16c      	cbz	r4, 90011c78 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
90011c5c:	2360      	movs	r3, #96	; 0x60
90011c5e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
90011c60:	9b01      	ldr	r3, [sp, #4]
90011c62:	2b60      	cmp	r3, #96	; 0x60
90011c64:	d01a      	beq.n	90011c9c <xTaskCreateStatic+0x50>
90011c66:	f04f 0350 	mov.w	r3, #80	; 0x50
90011c6a:	f383 8811 	msr	BASEPRI, r3
90011c6e:	f3bf 8f6f 	isb	sy
90011c72:	f3bf 8f4f 	dsb	sy
90011c76:	e7fe      	b.n	90011c76 <xTaskCreateStatic+0x2a>
90011c78:	f04f 0350 	mov.w	r3, #80	; 0x50
90011c7c:	f383 8811 	msr	BASEPRI, r3
90011c80:	f3bf 8f6f 	isb	sy
90011c84:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90011c88:	e7fe      	b.n	90011c88 <xTaskCreateStatic+0x3c>
90011c8a:	f04f 0350 	mov.w	r3, #80	; 0x50
90011c8e:	f383 8811 	msr	BASEPRI, r3
90011c92:	f3bf 8f6f 	isb	sy
90011c96:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90011c9a:	e7fe      	b.n	90011c9a <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011c9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011c9e:	0096      	lsls	r6, r2, #2
90011ca0:	4607      	mov	r7, r0
90011ca2:	460d      	mov	r5, r1
90011ca4:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011ca6:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90011ca8:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011caa:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011cac:	4632      	mov	r2, r6
90011cae:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011cb0:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011cb4:	f017 ff4c 	bl	90029b50 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011cb8:	1f32      	subs	r2, r6, #4
90011cba:	6b23      	ldr	r3, [r4, #48]	; 0x30
90011cbc:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90011cbe:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
90011cc2:	2d00      	cmp	r5, #0
90011cc4:	d069      	beq.n	90011d9a <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cc6:	782b      	ldrb	r3, [r5, #0]
90011cc8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90011ccc:	2b00      	cmp	r3, #0
90011cce:	d03b      	beq.n	90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cd0:	786b      	ldrb	r3, [r5, #1]
90011cd2:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90011cd6:	2b00      	cmp	r3, #0
90011cd8:	d036      	beq.n	90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cda:	78ab      	ldrb	r3, [r5, #2]
90011cdc:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90011ce0:	b393      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011ce2:	78eb      	ldrb	r3, [r5, #3]
90011ce4:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90011ce8:	b373      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cea:	792b      	ldrb	r3, [r5, #4]
90011cec:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90011cf0:	b353      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cf2:	796b      	ldrb	r3, [r5, #5]
90011cf4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90011cf8:	b333      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cfa:	79ab      	ldrb	r3, [r5, #6]
90011cfc:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90011d00:	b313      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011d02:	79eb      	ldrb	r3, [r5, #7]
90011d04:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90011d08:	b1f3      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011d0a:	7a2b      	ldrb	r3, [r5, #8]
90011d0c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90011d10:	b1d3      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011d12:	7a6b      	ldrb	r3, [r5, #9]
90011d14:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90011d18:	b1b3      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011d1a:	7aab      	ldrb	r3, [r5, #10]
90011d1c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90011d20:	b193      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011d22:	7aeb      	ldrb	r3, [r5, #11]
90011d24:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90011d28:	b173      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011d2a:	7b2b      	ldrb	r3, [r5, #12]
90011d2c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90011d30:	b153      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011d32:	7b6b      	ldrb	r3, [r5, #13]
90011d34:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90011d38:	b133      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011d3a:	7bab      	ldrb	r3, [r5, #14]
90011d3c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
90011d40:	b113      	cbz	r3, 90011d48 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011d42:	7beb      	ldrb	r3, [r5, #15]
90011d44:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011d48:	2300      	movs	r3, #0
90011d4a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011d4e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
90011d50:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011d52:	1d20      	adds	r0, r4, #4
90011d54:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
90011d56:	6526      	str	r6, [r4, #80]	; 0x50
90011d58:	bf28      	it	cs
90011d5a:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
90011d5c:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90011d5e:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011d60:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011d64:	f7fe fa72 	bl	9001024c <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011d68:	f104 0018 	add.w	r0, r4, #24
90011d6c:	f7fe fa6e 	bl	9001024c <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011d70:	4642      	mov	r2, r8
90011d72:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
90011d74:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011d76:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011d78:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90011d7a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90011d7c:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90011d7e:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011d80:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011d84:	f7fe fae0 	bl	90010348 <pxPortInitialiseStack>
90011d88:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
90011d8a:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011d8c:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011d8e:	f7ff fd45 	bl	9001181c <prvAddNewTaskToReadyList>
	}
90011d92:	4620      	mov	r0, r4
90011d94:	b003      	add	sp, #12
90011d96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90011d9a:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
90011d9e:	e7d6      	b.n	90011d4e <xTaskCreateStatic+0x102>

90011da0 <xTaskCreate>:
	{
90011da0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90011da4:	0096      	lsls	r6, r2, #2
	{
90011da6:	4680      	mov	r8, r0
90011da8:	460d      	mov	r5, r1
90011daa:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90011dac:	4630      	mov	r0, r6
90011dae:	f7fe f91f 	bl	9000fff0 <pvPortMalloc>
			if( pxStack != NULL )
90011db2:	2800      	cmp	r0, #0
90011db4:	f000 8083 	beq.w	90011ebe <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
90011db8:	4607      	mov	r7, r0
90011dba:	2060      	movs	r0, #96	; 0x60
90011dbc:	f7fe f918 	bl	9000fff0 <pvPortMalloc>
				if( pxNewTCB != NULL )
90011dc0:	4604      	mov	r4, r0
90011dc2:	2800      	cmp	r0, #0
90011dc4:	d07f      	beq.n	90011ec6 <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90011dc6:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
90011dc8:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011dca:	4632      	mov	r2, r6
90011dcc:	4638      	mov	r0, r7
90011dce:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90011dd0:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011dd4:	f017 febc 	bl	90029b50 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011dd8:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
90011ddc:	2d00      	cmp	r5, #0
90011dde:	d078      	beq.n	90011ed2 <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011de0:	782b      	ldrb	r3, [r5, #0]
90011de2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90011de6:	2b00      	cmp	r3, #0
90011de8:	d03b      	beq.n	90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011dea:	786b      	ldrb	r3, [r5, #1]
90011dec:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90011df0:	2b00      	cmp	r3, #0
90011df2:	d036      	beq.n	90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011df4:	78ab      	ldrb	r3, [r5, #2]
90011df6:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90011dfa:	b393      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011dfc:	78eb      	ldrb	r3, [r5, #3]
90011dfe:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90011e02:	b373      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e04:	792b      	ldrb	r3, [r5, #4]
90011e06:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90011e0a:	b353      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e0c:	796b      	ldrb	r3, [r5, #5]
90011e0e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90011e12:	b333      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e14:	79ab      	ldrb	r3, [r5, #6]
90011e16:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90011e1a:	b313      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e1c:	79eb      	ldrb	r3, [r5, #7]
90011e1e:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90011e22:	b1f3      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e24:	7a2b      	ldrb	r3, [r5, #8]
90011e26:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90011e2a:	b1d3      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e2c:	7a6b      	ldrb	r3, [r5, #9]
90011e2e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90011e32:	b1b3      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e34:	7aab      	ldrb	r3, [r5, #10]
90011e36:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90011e3a:	b193      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e3c:	7aeb      	ldrb	r3, [r5, #11]
90011e3e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90011e42:	b173      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e44:	7b2b      	ldrb	r3, [r5, #12]
90011e46:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90011e4a:	b153      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e4c:	7b6b      	ldrb	r3, [r5, #13]
90011e4e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90011e52:	b133      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e54:	7bab      	ldrb	r3, [r5, #14]
90011e56:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
90011e5a:	b113      	cbz	r3, 90011e62 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e5c:	7beb      	ldrb	r3, [r5, #15]
90011e5e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011e62:	2300      	movs	r3, #0
90011e64:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011e68:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
90011e6a:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011e6c:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011e6e:	3e04      	subs	r6, #4
90011e70:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
90011e72:	6527      	str	r7, [r4, #80]	; 0x50
90011e74:	bf28      	it	cs
90011e76:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
90011e78:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90011e7a:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011e7c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011e80:	f7fe f9e4 	bl	9001024c <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011e84:	f104 0018 	add.w	r0, r4, #24
90011e88:	f7fe f9e0 	bl	9001024c <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011e8c:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
90011e90:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011e92:	464a      	mov	r2, r9
90011e94:	4641      	mov	r1, r8
90011e96:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011e9a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90011e9c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90011e9e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90011ea0:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011ea2:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011ea6:	f7fe fa4f 	bl	90010348 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
90011eaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011eac:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
90011eae:	b103      	cbz	r3, 90011eb2 <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90011eb0:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011eb2:	4620      	mov	r0, r4
90011eb4:	f7ff fcb2 	bl	9001181c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
90011eb8:	2001      	movs	r0, #1
	}
90011eba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
90011ebe:	f04f 30ff 	mov.w	r0, #4294967295
	}
90011ec2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
90011ec6:	4638      	mov	r0, r7
90011ec8:	f7fe f950 	bl	9001016c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
90011ecc:	f04f 30ff 	mov.w	r0, #4294967295
90011ed0:	e7f3      	b.n	90011eba <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90011ed2:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
90011ed6:	e7c7      	b.n	90011e68 <xTaskCreate+0xc8>

90011ed8 <vTaskDelay>:
	{
90011ed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
90011eda:	b950      	cbnz	r0, 90011ef2 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
90011edc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011ee0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011ee4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011ee8:	f3bf 8f4f 	dsb	sy
90011eec:	f3bf 8f6f 	isb	sy
	}
90011ef0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90011ef2:	4d1e      	ldr	r5, [pc, #120]	; (90011f6c <vTaskDelay+0x94>)
90011ef4:	682b      	ldr	r3, [r5, #0]
90011ef6:	b143      	cbz	r3, 90011f0a <vTaskDelay+0x32>
90011ef8:	f04f 0350 	mov.w	r3, #80	; 0x50
90011efc:	f383 8811 	msr	BASEPRI, r3
90011f00:	f3bf 8f6f 	isb	sy
90011f04:	f3bf 8f4f 	dsb	sy
90011f08:	e7fe      	b.n	90011f08 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
90011f0a:	682b      	ldr	r3, [r5, #0]
90011f0c:	4604      	mov	r4, r0
90011f0e:	3301      	adds	r3, #1
90011f10:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
90011f12:	4b17      	ldr	r3, [pc, #92]	; (90011f70 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011f14:	4e17      	ldr	r6, [pc, #92]	; (90011f74 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
90011f16:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011f18:	6830      	ldr	r0, [r6, #0]
90011f1a:	3004      	adds	r0, #4
90011f1c:	f7fe f9c2 	bl	900102a4 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
90011f20:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011f22:	6833      	ldr	r3, [r6, #0]
90011f24:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
90011f26:	d315      	bcc.n	90011f54 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011f28:	4b13      	ldr	r3, [pc, #76]	; (90011f78 <vTaskDelay+0xa0>)
90011f2a:	6818      	ldr	r0, [r3, #0]
90011f2c:	6831      	ldr	r1, [r6, #0]
90011f2e:	3104      	adds	r1, #4
90011f30:	f7fe f9a0 	bl	90010274 <vListInsert>
	configASSERT( uxSchedulerSuspended );
90011f34:	682b      	ldr	r3, [r5, #0]
90011f36:	b943      	cbnz	r3, 90011f4a <vTaskDelay+0x72>
90011f38:	f04f 0350 	mov.w	r3, #80	; 0x50
90011f3c:	f383 8811 	msr	BASEPRI, r3
90011f40:	f3bf 8f6f 	isb	sy
90011f44:	f3bf 8f4f 	dsb	sy
90011f48:	e7fe      	b.n	90011f48 <vTaskDelay+0x70>
90011f4a:	f7ff fde5 	bl	90011b18 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
90011f4e:	2800      	cmp	r0, #0
90011f50:	d0c4      	beq.n	90011edc <vTaskDelay+0x4>
	}
90011f52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011f54:	4b09      	ldr	r3, [pc, #36]	; (90011f7c <vTaskDelay+0xa4>)
90011f56:	6818      	ldr	r0, [r3, #0]
90011f58:	6831      	ldr	r1, [r6, #0]
90011f5a:	3104      	adds	r1, #4
90011f5c:	f7fe f98a 	bl	90010274 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90011f60:	4b07      	ldr	r3, [pc, #28]	; (90011f80 <vTaskDelay+0xa8>)
90011f62:	681a      	ldr	r2, [r3, #0]
90011f64:	4294      	cmp	r4, r2
90011f66:	d2e5      	bcs.n	90011f34 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
90011f68:	601c      	str	r4, [r3, #0]
90011f6a:	e7e3      	b.n	90011f34 <vTaskDelay+0x5c>
90011f6c:	2403990c 	.word	0x2403990c
90011f70:	2403998c 	.word	0x2403998c
90011f74:	24039498 	.word	0x24039498
90011f78:	240394a0 	.word	0x240394a0
90011f7c:	2403949c 	.word	0x2403949c
90011f80:	24039940 	.word	0x24039940

90011f84 <vTaskStartScheduler>:
{
90011f84:	b570      	push	{r4, r5, r6, lr}
90011f86:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
90011f88:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90011f8a:	4668      	mov	r0, sp
90011f8c:	aa02      	add	r2, sp, #8
90011f8e:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
90011f90:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90011f94:	f7fe f80e 	bl	9000ffb4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
90011f98:	9d00      	ldr	r5, [sp, #0]
90011f9a:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
90011f9e:	b1b8      	cbz	r0, 90011fd0 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
90011fa0:	b16d      	cbz	r5, 90011fbe <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90011fa2:	2260      	movs	r2, #96	; 0x60
90011fa4:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
90011fa6:	9a03      	ldr	r2, [sp, #12]
90011fa8:	2a60      	cmp	r2, #96	; 0x60
90011faa:	d01a      	beq.n	90011fe2 <vTaskStartScheduler+0x5e>
90011fac:	f04f 0350 	mov.w	r3, #80	; 0x50
90011fb0:	f383 8811 	msr	BASEPRI, r3
90011fb4:	f3bf 8f6f 	isb	sy
90011fb8:	f3bf 8f4f 	dsb	sy
90011fbc:	e7fe      	b.n	90011fbc <vTaskStartScheduler+0x38>
90011fbe:	f04f 0350 	mov.w	r3, #80	; 0x50
90011fc2:	f383 8811 	msr	BASEPRI, r3
90011fc6:	f3bf 8f6f 	isb	sy
90011fca:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90011fce:	e7fe      	b.n	90011fce <vTaskStartScheduler+0x4a>
90011fd0:	f04f 0350 	mov.w	r3, #80	; 0x50
90011fd4:	f383 8811 	msr	BASEPRI, r3
90011fd8:	f3bf 8f6f 	isb	sy
90011fdc:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90011fe0:	e7fe      	b.n	90011fe0 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011fe2:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011fe4:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011fe6:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011fe8:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011fea:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011fec:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90011ff0:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011ff2:	f017 fdad 	bl	90029b50 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011ff6:	1f33      	subs	r3, r6, #4
90011ff8:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011ffa:	492a      	ldr	r1, [pc, #168]	; (900120a4 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011ffc:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011ffe:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012000:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
90012004:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90012006:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9001200a:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9001200e:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
90012010:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90012014:	f7fe f91a 	bl	9001024c <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90012018:	f105 0018 	add.w	r0, r5, #24
9001201c:	f7fe f916 	bl	9001024c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012020:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012022:	4622      	mov	r2, r4
90012024:	4920      	ldr	r1, [pc, #128]	; (900120a8 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
90012026:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012028:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001202a:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9001202c:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9001202e:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90012030:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90012032:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012036:	f7fe f987 	bl	90010348 <pxPortInitialiseStack>
9001203a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9001203c:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001203e:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90012040:	f7ff fbec 	bl	9001181c <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
90012044:	f000 fca4 	bl	90012990 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
90012048:	2801      	cmp	r0, #1
9001204a:	d00c      	beq.n	90012066 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9001204c:	3001      	adds	r0, #1
9001204e:	d001      	beq.n	90012054 <vTaskStartScheduler+0xd0>
}
90012050:	b004      	add	sp, #16
90012052:	bd70      	pop	{r4, r5, r6, pc}
90012054:	f04f 0350 	mov.w	r3, #80	; 0x50
90012058:	f383 8811 	msr	BASEPRI, r3
9001205c:	f3bf 8f6f 	isb	sy
90012060:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90012064:	e7fe      	b.n	90012064 <vTaskStartScheduler+0xe0>
90012066:	f04f 0350 	mov.w	r3, #80	; 0x50
9001206a:	f383 8811 	msr	BASEPRI, r3
9001206e:	f3bf 8f6f 	isb	sy
90012072:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
90012076:	4b0d      	ldr	r3, [pc, #52]	; (900120ac <vTaskStartScheduler+0x128>)
90012078:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9001207c:	490c      	ldr	r1, [pc, #48]	; (900120b0 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9001207e:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90012080:	4b0c      	ldr	r3, [pc, #48]	; (900120b4 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
90012082:	4a0d      	ldr	r2, [pc, #52]	; (900120b8 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
90012084:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90012086:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
90012088:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9001208a:	b143      	cbz	r3, 9001209e <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9001208c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001208e:	b10b      	cbz	r3, 90012094 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
90012090:	2000      	movs	r0, #0
90012092:	4798      	blx	r3
}
90012094:	b004      	add	sp, #16
90012096:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9001209a:	f7fe ba15 	b.w	900104c8 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9001209e:	6813      	ldr	r3, [r2, #0]
900120a0:	e7f4      	b.n	9001208c <vTaskStartScheduler+0x108>
900120a2:	bf00      	nop
900120a4:	454c4449 	.word	0x454c4449
900120a8:	9001192d 	.word	0x9001192d
900120ac:	24039940 	.word	0x24039940
900120b0:	24039960 	.word	0x24039960
900120b4:	2403998c 	.word	0x2403998c
900120b8:	24039498 	.word	0x24039498

900120bc <vTaskSuspendAll>:
	++uxSchedulerSuspended;
900120bc:	4a02      	ldr	r2, [pc, #8]	; (900120c8 <vTaskSuspendAll+0xc>)
900120be:	6813      	ldr	r3, [r2, #0]
900120c0:	3301      	adds	r3, #1
900120c2:	6013      	str	r3, [r2, #0]
}
900120c4:	4770      	bx	lr
900120c6:	bf00      	nop
900120c8:	2403990c 	.word	0x2403990c

900120cc <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
900120cc:	4b06      	ldr	r3, [pc, #24]	; (900120e8 <xTaskResumeAll+0x1c>)
900120ce:	681b      	ldr	r3, [r3, #0]
900120d0:	b943      	cbnz	r3, 900120e4 <xTaskResumeAll+0x18>
900120d2:	f04f 0350 	mov.w	r3, #80	; 0x50
900120d6:	f383 8811 	msr	BASEPRI, r3
900120da:	f3bf 8f6f 	isb	sy
900120de:	f3bf 8f4f 	dsb	sy
900120e2:	e7fe      	b.n	900120e2 <xTaskResumeAll+0x16>
900120e4:	f7ff bd18 	b.w	90011b18 <xTaskResumeAll.part.0>
900120e8:	2403990c 	.word	0x2403990c

900120ec <xTaskGetTickCount>:
		xTicks = xTickCount;
900120ec:	4b01      	ldr	r3, [pc, #4]	; (900120f4 <xTaskGetTickCount+0x8>)
900120ee:	6818      	ldr	r0, [r3, #0]
}
900120f0:	4770      	bx	lr
900120f2:	bf00      	nop
900120f4:	2403998c 	.word	0x2403998c

900120f8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900120f8:	4b05      	ldr	r3, [pc, #20]	; (90012110 <xTaskIncrementTick+0x18>)
900120fa:	681b      	ldr	r3, [r3, #0]
900120fc:	b90b      	cbnz	r3, 90012102 <xTaskIncrementTick+0xa>
900120fe:	f7ff bc63 	b.w	900119c8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90012102:	4a04      	ldr	r2, [pc, #16]	; (90012114 <xTaskIncrementTick+0x1c>)
}
90012104:	2000      	movs	r0, #0
		++xPendedTicks;
90012106:	6813      	ldr	r3, [r2, #0]
90012108:	3301      	adds	r3, #1
9001210a:	6013      	str	r3, [r2, #0]
}
9001210c:	4770      	bx	lr
9001210e:	bf00      	nop
90012110:	2403990c 	.word	0x2403990c
90012114:	24039948 	.word	0x24039948

90012118 <vTaskSetApplicationTaskTag>:
	{
90012118:	b538      	push	{r3, r4, r5, lr}
9001211a:	460d      	mov	r5, r1
		if( xTask == NULL )
9001211c:	b138      	cbz	r0, 9001212e <vTaskSetApplicationTaskTag+0x16>
9001211e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
90012120:	f7fe f940 	bl	900103a4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90012124:	6565      	str	r5, [r4, #84]	; 0x54
	}
90012126:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9001212a:	f7fe b95d 	b.w	900103e8 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9001212e:	4b04      	ldr	r3, [pc, #16]	; (90012140 <vTaskSetApplicationTaskTag+0x28>)
90012130:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90012132:	f7fe f937 	bl	900103a4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90012136:	6565      	str	r5, [r4, #84]	; 0x54
	}
90012138:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9001213c:	f7fe b954 	b.w	900103e8 <vPortExitCritical>
90012140:	24039498 	.word	0x24039498

90012144 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
90012144:	4b27      	ldr	r3, [pc, #156]	; (900121e4 <vTaskSwitchContext+0xa0>)
90012146:	681b      	ldr	r3, [r3, #0]
90012148:	b11b      	cbz	r3, 90012152 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9001214a:	4b27      	ldr	r3, [pc, #156]	; (900121e8 <vTaskSwitchContext+0xa4>)
9001214c:	2201      	movs	r2, #1
9001214e:	601a      	str	r2, [r3, #0]
90012150:	4770      	bx	lr
{
90012152:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
90012154:	4a24      	ldr	r2, [pc, #144]	; (900121e8 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
90012156:	4c25      	ldr	r4, [pc, #148]	; (900121ec <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
90012158:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9001215a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9001215c:	2b00      	cmp	r3, #0
9001215e:	d036      	beq.n	900121ce <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
90012160:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90012162:	b10b      	cbz	r3, 90012168 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90012164:	2001      	movs	r0, #1
90012166:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012168:	4d21      	ldr	r5, [pc, #132]	; (900121f0 <vTaskSwitchContext+0xac>)
9001216a:	4922      	ldr	r1, [pc, #136]	; (900121f4 <vTaskSwitchContext+0xb0>)
9001216c:	682b      	ldr	r3, [r5, #0]
9001216e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90012172:	0098      	lsls	r0, r3, #2
90012174:	0092      	lsls	r2, r2, #2
90012176:	588a      	ldr	r2, [r1, r2]
90012178:	b942      	cbnz	r2, 9001218c <vTaskSwitchContext+0x48>
9001217a:	b1fb      	cbz	r3, 900121bc <vTaskSwitchContext+0x78>
9001217c:	3b01      	subs	r3, #1
9001217e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90012182:	0098      	lsls	r0, r3, #2
90012184:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90012188:	2a00      	cmp	r2, #0
9001218a:	d0f6      	beq.n	9001217a <vTaskSwitchContext+0x36>
9001218c:	4418      	add	r0, r3
9001218e:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90012192:	f8dc 1004 	ldr.w	r1, [ip, #4]
90012196:	4662      	mov	r2, ip
90012198:	6849      	ldr	r1, [r1, #4]
9001219a:	3208      	adds	r2, #8
9001219c:	4291      	cmp	r1, r2
9001219e:	f8cc 1004 	str.w	r1, [ip, #4]
900121a2:	d01b      	beq.n	900121dc <vTaskSwitchContext+0x98>
900121a4:	68ca      	ldr	r2, [r1, #12]
900121a6:	6022      	str	r2, [r4, #0]
900121a8:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
900121aa:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
900121ac:	b1a3      	cbz	r3, 900121d8 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
900121ae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900121b0:	b11b      	cbz	r3, 900121ba <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
900121b2:	2000      	movs	r0, #0
}
900121b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
900121b8:	4718      	bx	r3
}
900121ba:	bd70      	pop	{r4, r5, r6, pc}
900121bc:	f04f 0350 	mov.w	r3, #80	; 0x50
900121c0:	f383 8811 	msr	BASEPRI, r3
900121c4:	f3bf 8f6f 	isb	sy
900121c8:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900121cc:	e7fe      	b.n	900121cc <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
900121ce:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
900121d0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900121d2:	2b00      	cmp	r3, #0
900121d4:	d1c6      	bne.n	90012164 <vTaskSwitchContext+0x20>
900121d6:	e7c7      	b.n	90012168 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
900121d8:	6823      	ldr	r3, [r4, #0]
900121da:	e7e8      	b.n	900121ae <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900121dc:	6849      	ldr	r1, [r1, #4]
900121de:	f8cc 1004 	str.w	r1, [ip, #4]
900121e2:	e7df      	b.n	900121a4 <vTaskSwitchContext+0x60>
900121e4:	2403990c 	.word	0x2403990c
900121e8:	24039990 	.word	0x24039990
900121ec:	24039498 	.word	0x24039498
900121f0:	24039914 	.word	0x24039914
900121f4:	240394a4 	.word	0x240394a4

900121f8 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
900121f8:	b1f0      	cbz	r0, 90012238 <vTaskPlaceOnEventList+0x40>
{
900121fa:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
900121fc:	4d1a      	ldr	r5, [pc, #104]	; (90012268 <vTaskPlaceOnEventList+0x70>)
900121fe:	460c      	mov	r4, r1
90012200:	6829      	ldr	r1, [r5, #0]
90012202:	3118      	adds	r1, #24
90012204:	f7fe f836 	bl	90010274 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90012208:	4b18      	ldr	r3, [pc, #96]	; (9001226c <vTaskPlaceOnEventList+0x74>)
9001220a:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001220c:	6828      	ldr	r0, [r5, #0]
9001220e:	3004      	adds	r0, #4
90012210:	f7fe f848 	bl	900102a4 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90012214:	1c63      	adds	r3, r4, #1
90012216:	d020      	beq.n	9001225a <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90012218:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9001221a:	682b      	ldr	r3, [r5, #0]
9001221c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9001221e:	d214      	bcs.n	9001224a <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012220:	4b13      	ldr	r3, [pc, #76]	; (90012270 <vTaskPlaceOnEventList+0x78>)
90012222:	6818      	ldr	r0, [r3, #0]
90012224:	6829      	ldr	r1, [r5, #0]
90012226:	3104      	adds	r1, #4
90012228:	f7fe f824 	bl	90010274 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9001222c:	4b11      	ldr	r3, [pc, #68]	; (90012274 <vTaskPlaceOnEventList+0x7c>)
9001222e:	681a      	ldr	r2, [r3, #0]
90012230:	4294      	cmp	r4, r2
90012232:	d200      	bcs.n	90012236 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
90012234:	601c      	str	r4, [r3, #0]
}
90012236:	bd70      	pop	{r4, r5, r6, pc}
90012238:	f04f 0350 	mov.w	r3, #80	; 0x50
9001223c:	f383 8811 	msr	BASEPRI, r3
90012240:	f3bf 8f6f 	isb	sy
90012244:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
90012248:	e7fe      	b.n	90012248 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001224a:	4b0b      	ldr	r3, [pc, #44]	; (90012278 <vTaskPlaceOnEventList+0x80>)
9001224c:	6818      	ldr	r0, [r3, #0]
9001224e:	6829      	ldr	r1, [r5, #0]
}
90012250:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012254:	3104      	adds	r1, #4
90012256:	f7fe b80d 	b.w	90010274 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001225a:	6829      	ldr	r1, [r5, #0]
9001225c:	4807      	ldr	r0, [pc, #28]	; (9001227c <vTaskPlaceOnEventList+0x84>)
9001225e:	3104      	adds	r1, #4
}
90012260:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012264:	f7fd bff6 	b.w	90010254 <vListInsertEnd>
90012268:	24039498 	.word	0x24039498
9001226c:	2403998c 	.word	0x2403998c
90012270:	2403949c 	.word	0x2403949c
90012274:	24039940 	.word	0x24039940
90012278:	240394a0 	.word	0x240394a0
9001227c:	24039964 	.word	0x24039964

90012280 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90012280:	b358      	cbz	r0, 900122da <vTaskPlaceOnEventListRestricted+0x5a>
	{
90012282:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90012284:	4e1d      	ldr	r6, [pc, #116]	; (900122fc <vTaskPlaceOnEventListRestricted+0x7c>)
90012286:	460c      	mov	r4, r1
90012288:	4615      	mov	r5, r2
9001228a:	6831      	ldr	r1, [r6, #0]
9001228c:	3118      	adds	r1, #24
9001228e:	f7fd ffe1 	bl	90010254 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
90012292:	b165      	cbz	r5, 900122ae <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90012294:	4b1a      	ldr	r3, [pc, #104]	; (90012300 <vTaskPlaceOnEventListRestricted+0x80>)
90012296:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90012298:	6830      	ldr	r0, [r6, #0]
9001229a:	3004      	adds	r0, #4
9001229c:	f7fe f802 	bl	900102a4 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900122a0:	6831      	ldr	r1, [r6, #0]
900122a2:	4818      	ldr	r0, [pc, #96]	; (90012304 <vTaskPlaceOnEventListRestricted+0x84>)
900122a4:	3104      	adds	r1, #4
	}
900122a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900122aa:	f7fd bfd3 	b.w	90010254 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
900122ae:	4b14      	ldr	r3, [pc, #80]	; (90012300 <vTaskPlaceOnEventListRestricted+0x80>)
900122b0:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900122b2:	6830      	ldr	r0, [r6, #0]
900122b4:	3004      	adds	r0, #4
900122b6:	f7fd fff5 	bl	900102a4 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
900122ba:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900122bc:	6833      	ldr	r3, [r6, #0]
900122be:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
900122c0:	d214      	bcs.n	900122ec <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900122c2:	4b11      	ldr	r3, [pc, #68]	; (90012308 <vTaskPlaceOnEventListRestricted+0x88>)
900122c4:	6818      	ldr	r0, [r3, #0]
900122c6:	6831      	ldr	r1, [r6, #0]
900122c8:	3104      	adds	r1, #4
900122ca:	f7fd ffd3 	bl	90010274 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
900122ce:	4b0f      	ldr	r3, [pc, #60]	; (9001230c <vTaskPlaceOnEventListRestricted+0x8c>)
900122d0:	681a      	ldr	r2, [r3, #0]
900122d2:	4294      	cmp	r4, r2
900122d4:	d200      	bcs.n	900122d8 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
900122d6:	601c      	str	r4, [r3, #0]
	}
900122d8:	bd70      	pop	{r4, r5, r6, pc}
900122da:	f04f 0350 	mov.w	r3, #80	; 0x50
900122de:	f383 8811 	msr	BASEPRI, r3
900122e2:	f3bf 8f6f 	isb	sy
900122e6:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
900122ea:	e7fe      	b.n	900122ea <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900122ec:	4b08      	ldr	r3, [pc, #32]	; (90012310 <vTaskPlaceOnEventListRestricted+0x90>)
900122ee:	6818      	ldr	r0, [r3, #0]
900122f0:	6831      	ldr	r1, [r6, #0]
	}
900122f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900122f6:	3104      	adds	r1, #4
900122f8:	f7fd bfbc 	b.w	90010274 <vListInsert>
900122fc:	24039498 	.word	0x24039498
90012300:	2403998c 	.word	0x2403998c
90012304:	24039964 	.word	0x24039964
90012308:	2403949c 	.word	0x2403949c
9001230c:	24039940 	.word	0x24039940
90012310:	240394a0 	.word	0x240394a0

90012314 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012314:	68c3      	ldr	r3, [r0, #12]
{
90012316:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012318:	68dc      	ldr	r4, [r3, #12]
{
9001231a:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
9001231c:	b35c      	cbz	r4, 90012376 <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9001231e:	f104 0518 	add.w	r5, r4, #24
90012322:	4628      	mov	r0, r5
90012324:	f7fd ffbe 	bl	900102a4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90012328:	4b19      	ldr	r3, [pc, #100]	; (90012390 <xTaskRemoveFromEventList+0x7c>)
9001232a:	681b      	ldr	r3, [r3, #0]
9001232c:	b17b      	cbz	r3, 9001234e <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9001232e:	4629      	mov	r1, r5
90012330:	4818      	ldr	r0, [pc, #96]	; (90012394 <xTaskRemoveFromEventList+0x80>)
90012332:	f7fd ff8f 	bl	90010254 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
90012336:	4b18      	ldr	r3, [pc, #96]	; (90012398 <xTaskRemoveFromEventList+0x84>)
90012338:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001233a:	681b      	ldr	r3, [r3, #0]
9001233c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001233e:	429a      	cmp	r2, r3
90012340:	d922      	bls.n	90012388 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
90012342:	2301      	movs	r3, #1
90012344:	4a15      	ldr	r2, [pc, #84]	; (9001239c <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
90012346:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
90012348:	6013      	str	r3, [r2, #0]
}
9001234a:	b003      	add	sp, #12
9001234c:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9001234e:	1d21      	adds	r1, r4, #4
90012350:	4608      	mov	r0, r1
90012352:	9101      	str	r1, [sp, #4]
90012354:	f7fd ffa6 	bl	900102a4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
90012358:	4a11      	ldr	r2, [pc, #68]	; (900123a0 <xTaskRemoveFromEventList+0x8c>)
9001235a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001235c:	6810      	ldr	r0, [r2, #0]
9001235e:	9901      	ldr	r1, [sp, #4]
90012360:	4283      	cmp	r3, r0
90012362:	d900      	bls.n	90012366 <xTaskRemoveFromEventList+0x52>
90012364:	6013      	str	r3, [r2, #0]
90012366:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001236a:	480e      	ldr	r0, [pc, #56]	; (900123a4 <xTaskRemoveFromEventList+0x90>)
9001236c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
90012370:	f7fd ff70 	bl	90010254 <vListInsertEnd>
90012374:	e7df      	b.n	90012336 <xTaskRemoveFromEventList+0x22>
90012376:	f04f 0350 	mov.w	r3, #80	; 0x50
9001237a:	f383 8811 	msr	BASEPRI, r3
9001237e:	f3bf 8f6f 	isb	sy
90012382:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90012386:	e7fe      	b.n	90012386 <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
90012388:	2000      	movs	r0, #0
}
9001238a:	b003      	add	sp, #12
9001238c:	bd30      	pop	{r4, r5, pc}
9001238e:	bf00      	nop
90012390:	2403990c 	.word	0x2403990c
90012394:	2403994c 	.word	0x2403994c
90012398:	24039498 	.word	0x24039498
9001239c:	24039990 	.word	0x24039990
900123a0:	24039914 	.word	0x24039914
900123a4:	240394a4 	.word	0x240394a4

900123a8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900123a8:	4a03      	ldr	r2, [pc, #12]	; (900123b8 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
900123aa:	4b04      	ldr	r3, [pc, #16]	; (900123bc <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900123ac:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900123ae:	681b      	ldr	r3, [r3, #0]
900123b0:	e9c0 2300 	strd	r2, r3, [r0]
}
900123b4:	4770      	bx	lr
900123b6:	bf00      	nop
900123b8:	24039944 	.word	0x24039944
900123bc:	2403998c 	.word	0x2403998c

900123c0 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
900123c0:	b328      	cbz	r0, 9001240e <xTaskCheckForTimeOut+0x4e>
{
900123c2:	b5f0      	push	{r4, r5, r6, r7, lr}
900123c4:	460d      	mov	r5, r1
900123c6:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
900123c8:	b1c1      	cbz	r1, 900123fc <xTaskCheckForTimeOut+0x3c>
900123ca:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
900123cc:	f7fd ffea 	bl	900103a4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
900123d0:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
900123d2:	4a1d      	ldr	r2, [pc, #116]	; (90012448 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
900123d4:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
900123d6:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
900123d8:	d030      	beq.n	9001243c <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
900123da:	f8df c070 	ldr.w	ip, [pc, #112]	; 9001244c <xTaskCheckForTimeOut+0x8c>
900123de:	6826      	ldr	r6, [r4, #0]
900123e0:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
900123e4:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
900123e6:	42be      	cmp	r6, r7
900123e8:	d01a      	beq.n	90012420 <xTaskCheckForTimeOut+0x60>
900123ea:	4288      	cmp	r0, r1
900123ec:	d818      	bhi.n	90012420 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
900123ee:	2001      	movs	r0, #1
900123f0:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
900123f2:	f7fd fff9 	bl	900103e8 <vPortExitCritical>
}
900123f6:	9801      	ldr	r0, [sp, #4]
900123f8:	b003      	add	sp, #12
900123fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
900123fc:	f04f 0350 	mov.w	r3, #80	; 0x50
90012400:	f383 8811 	msr	BASEPRI, r3
90012404:	f3bf 8f6f 	isb	sy
90012408:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9001240c:	e7fe      	b.n	9001240c <xTaskCheckForTimeOut+0x4c>
9001240e:	f04f 0350 	mov.w	r3, #80	; 0x50
90012412:	f383 8811 	msr	BASEPRI, r3
90012416:	f3bf 8f6f 	isb	sy
9001241a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9001241e:	e7fe      	b.n	9001241e <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90012420:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90012424:	4573      	cmp	r3, lr
90012426:	d90b      	bls.n	90012440 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
90012428:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9001242a:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9001242e:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
90012430:	4403      	add	r3, r0
			xReturn = pdFALSE;
90012432:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
90012434:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90012436:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
9001243a:	e7d9      	b.n	900123f0 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
9001243c:	2000      	movs	r0, #0
9001243e:	e7d7      	b.n	900123f0 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
90012440:	2300      	movs	r3, #0
			xReturn = pdTRUE;
90012442:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
90012444:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
90012446:	e7d3      	b.n	900123f0 <xTaskCheckForTimeOut+0x30>
90012448:	2403998c 	.word	0x2403998c
9001244c:	24039944 	.word	0x24039944

90012450 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90012450:	4b01      	ldr	r3, [pc, #4]	; (90012458 <vTaskMissedYield+0x8>)
90012452:	2201      	movs	r2, #1
90012454:	601a      	str	r2, [r3, #0]
}
90012456:	4770      	bx	lr
90012458:	24039990 	.word	0x24039990

9001245c <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
9001245c:	4b01      	ldr	r3, [pc, #4]	; (90012464 <xTaskGetCurrentTaskHandle+0x8>)
9001245e:	6818      	ldr	r0, [r3, #0]
	}
90012460:	4770      	bx	lr
90012462:	bf00      	nop
90012464:	24039498 	.word	0x24039498

90012468 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90012468:	4b05      	ldr	r3, [pc, #20]	; (90012480 <xTaskGetSchedulerState+0x18>)
9001246a:	681b      	ldr	r3, [r3, #0]
9001246c:	b133      	cbz	r3, 9001247c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001246e:	4b05      	ldr	r3, [pc, #20]	; (90012484 <xTaskGetSchedulerState+0x1c>)
90012470:	6818      	ldr	r0, [r3, #0]
90012472:	fab0 f080 	clz	r0, r0
90012476:	0940      	lsrs	r0, r0, #5
90012478:	0040      	lsls	r0, r0, #1
9001247a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9001247c:	2001      	movs	r0, #1
	}
9001247e:	4770      	bx	lr
90012480:	24039960 	.word	0x24039960
90012484:	2403990c 	.word	0x2403990c

90012488 <xTaskPriorityInherit>:
	{
90012488:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
9001248a:	4604      	mov	r4, r0
	{
9001248c:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
9001248e:	b1c8      	cbz	r0, 900124c4 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90012490:	4d1d      	ldr	r5, [pc, #116]	; (90012508 <xTaskPriorityInherit+0x80>)
90012492:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012494:	682a      	ldr	r2, [r5, #0]
90012496:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90012498:	4293      	cmp	r3, r2
9001249a:	d215      	bcs.n	900124c8 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001249c:	6982      	ldr	r2, [r0, #24]
9001249e:	2a00      	cmp	r2, #0
900124a0:	db04      	blt.n	900124ac <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900124a2:	682a      	ldr	r2, [r5, #0]
900124a4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900124a6:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
900124aa:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
900124ac:	4e17      	ldr	r6, [pc, #92]	; (9001250c <xTaskPriorityInherit+0x84>)
900124ae:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900124b2:	6962      	ldr	r2, [r4, #20]
900124b4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
900124b8:	429a      	cmp	r2, r3
900124ba:	d00e      	beq.n	900124da <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900124bc:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
900124be:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900124c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900124c2:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
900124c4:	b002      	add	sp, #8
900124c6:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
900124c8:	682b      	ldr	r3, [r5, #0]
900124ca:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
900124cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900124ce:	4298      	cmp	r0, r3
900124d0:	bf2c      	ite	cs
900124d2:	2000      	movcs	r0, #0
900124d4:	2001      	movcc	r0, #1
	}
900124d6:	b002      	add	sp, #8
900124d8:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900124da:	1d21      	adds	r1, r4, #4
900124dc:	4608      	mov	r0, r1
900124de:	9101      	str	r1, [sp, #4]
900124e0:	f7fd fee0 	bl	900102a4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900124e4:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
900124e6:	4b0a      	ldr	r3, [pc, #40]	; (90012510 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900124e8:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
900124ea:	681a      	ldr	r2, [r3, #0]
900124ec:	9901      	ldr	r1, [sp, #4]
900124ee:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900124f0:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
900124f2:	d900      	bls.n	900124f6 <xTaskPriorityInherit+0x6e>
900124f4:	6018      	str	r0, [r3, #0]
900124f6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900124fa:	eb06 0080 	add.w	r0, r6, r0, lsl #2
900124fe:	f7fd fea9 	bl	90010254 <vListInsertEnd>
				xReturn = pdTRUE;
90012502:	2001      	movs	r0, #1
90012504:	e7de      	b.n	900124c4 <xTaskPriorityInherit+0x3c>
90012506:	bf00      	nop
90012508:	24039498 	.word	0x24039498
9001250c:	240394a4 	.word	0x240394a4
90012510:	24039914 	.word	0x24039914

90012514 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90012514:	b318      	cbz	r0, 9001255e <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
90012516:	4b1f      	ldr	r3, [pc, #124]	; (90012594 <xTaskPriorityDisinherit+0x80>)
	{
90012518:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9001251a:	681c      	ldr	r4, [r3, #0]
	{
9001251c:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
9001251e:	4284      	cmp	r4, r0
90012520:	d008      	beq.n	90012534 <xTaskPriorityDisinherit+0x20>
90012522:	f04f 0350 	mov.w	r3, #80	; 0x50
90012526:	f383 8811 	msr	BASEPRI, r3
9001252a:	f3bf 8f6f 	isb	sy
9001252e:	f3bf 8f4f 	dsb	sy
90012532:	e7fe      	b.n	90012532 <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
90012534:	6d23      	ldr	r3, [r4, #80]	; 0x50
90012536:	b14b      	cbz	r3, 9001254c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90012538:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
9001253a:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9001253c:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
9001253e:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
90012540:	4291      	cmp	r1, r2
90012542:	d000      	beq.n	90012546 <xTaskPriorityDisinherit+0x32>
90012544:	b16b      	cbz	r3, 90012562 <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
90012546:	2000      	movs	r0, #0
	}
90012548:	b002      	add	sp, #8
9001254a:	bd10      	pop	{r4, pc}
9001254c:	f04f 0350 	mov.w	r3, #80	; 0x50
90012550:	f383 8811 	msr	BASEPRI, r3
90012554:	f3bf 8f6f 	isb	sy
90012558:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9001255c:	e7fe      	b.n	9001255c <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
9001255e:	2000      	movs	r0, #0
	}
90012560:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90012562:	1d21      	adds	r1, r4, #4
90012564:	4608      	mov	r0, r1
90012566:	9101      	str	r1, [sp, #4]
90012568:	f7fd fe9c 	bl	900102a4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9001256c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
9001256e:	4b0a      	ldr	r3, [pc, #40]	; (90012598 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012570:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
90012574:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90012576:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012578:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9001257a:	681a      	ldr	r2, [r3, #0]
9001257c:	4290      	cmp	r0, r2
9001257e:	d900      	bls.n	90012582 <xTaskPriorityDisinherit+0x6e>
90012580:	6018      	str	r0, [r3, #0]
90012582:	4b06      	ldr	r3, [pc, #24]	; (9001259c <xTaskPriorityDisinherit+0x88>)
90012584:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90012588:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9001258c:	f7fd fe62 	bl	90010254 <vListInsertEnd>
					xReturn = pdTRUE;
90012590:	2001      	movs	r0, #1
		return xReturn;
90012592:	e7d9      	b.n	90012548 <xTaskPriorityDisinherit+0x34>
90012594:	24039498 	.word	0x24039498
90012598:	24039914 	.word	0x24039914
9001259c:	240394a4 	.word	0x240394a4

900125a0 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
900125a0:	2800      	cmp	r0, #0
900125a2:	d040      	beq.n	90012626 <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
900125a4:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
900125a6:	b530      	push	{r4, r5, lr}
900125a8:	4604      	mov	r4, r0
900125aa:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
900125ac:	b153      	cbz	r3, 900125c4 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
900125ae:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
900125b0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900125b2:	4281      	cmp	r1, r0
900125b4:	bf38      	it	cc
900125b6:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
900125b8:	2b01      	cmp	r3, #1
900125ba:	d101      	bne.n	900125c0 <vTaskPriorityDisinheritAfterTimeout+0x20>
900125bc:	428a      	cmp	r2, r1
900125be:	d10a      	bne.n	900125d6 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
900125c0:	b003      	add	sp, #12
900125c2:	bd30      	pop	{r4, r5, pc}
900125c4:	f04f 0350 	mov.w	r3, #80	; 0x50
900125c8:	f383 8811 	msr	BASEPRI, r3
900125cc:	f3bf 8f6f 	isb	sy
900125d0:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900125d4:	e7fe      	b.n	900125d4 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
900125d6:	4b19      	ldr	r3, [pc, #100]	; (9001263c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
900125d8:	681b      	ldr	r3, [r3, #0]
900125da:	42a3      	cmp	r3, r4
900125dc:	d024      	beq.n	90012628 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900125de:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
900125e0:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900125e2:	2b00      	cmp	r3, #0
900125e4:	db02      	blt.n	900125ec <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900125e6:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
900125ea:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
900125ec:	4d14      	ldr	r5, [pc, #80]	; (90012640 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
900125ee:	eb02 0282 	add.w	r2, r2, r2, lsl #2
900125f2:	6961      	ldr	r1, [r4, #20]
900125f4:	eb05 0382 	add.w	r3, r5, r2, lsl #2
900125f8:	4299      	cmp	r1, r3
900125fa:	d1e1      	bne.n	900125c0 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900125fc:	1d21      	adds	r1, r4, #4
900125fe:	4608      	mov	r0, r1
90012600:	9101      	str	r1, [sp, #4]
90012602:	f7fd fe4f 	bl	900102a4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90012606:	4b0f      	ldr	r3, [pc, #60]	; (90012644 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
90012608:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9001260a:	681a      	ldr	r2, [r3, #0]
9001260c:	9901      	ldr	r1, [sp, #4]
9001260e:	4290      	cmp	r0, r2
90012610:	d900      	bls.n	90012614 <vTaskPriorityDisinheritAfterTimeout+0x74>
90012612:	6018      	str	r0, [r3, #0]
90012614:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90012618:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9001261c:	b003      	add	sp, #12
9001261e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
90012622:	f7fd be17 	b.w	90010254 <vListInsertEnd>
90012626:	4770      	bx	lr
90012628:	f04f 0350 	mov.w	r3, #80	; 0x50
9001262c:	f383 8811 	msr	BASEPRI, r3
90012630:	f3bf 8f6f 	isb	sy
90012634:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90012638:	e7fe      	b.n	90012638 <vTaskPriorityDisinheritAfterTimeout+0x98>
9001263a:	bf00      	nop
9001263c:	24039498 	.word	0x24039498
90012640:	240394a4 	.word	0x240394a4
90012644:	24039914 	.word	0x24039914

90012648 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90012648:	4b04      	ldr	r3, [pc, #16]	; (9001265c <pvTaskIncrementMutexHeldCount+0x14>)
9001264a:	681a      	ldr	r2, [r3, #0]
9001264c:	b11a      	cbz	r2, 90012656 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9001264e:	6819      	ldr	r1, [r3, #0]
90012650:	6d0a      	ldr	r2, [r1, #80]	; 0x50
90012652:	3201      	adds	r2, #1
90012654:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
90012656:	6818      	ldr	r0, [r3, #0]
	}
90012658:	4770      	bx	lr
9001265a:	bf00      	nop
9001265c:	24039498 	.word	0x24039498

90012660 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
90012660:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012664:	4e22      	ldr	r6, [pc, #136]	; (900126f0 <prvSwitchTimerLists+0x90>)
90012666:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
90012668:	f8df 908c 	ldr.w	r9, [pc, #140]	; 900126f8 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
9001266c:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90012670:	e00d      	b.n	9001268e <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90012672:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012674:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90012676:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90012678:	1d25      	adds	r5, r4, #4
9001267a:	4628      	mov	r0, r5
9001267c:	f7fd fe12 	bl	900102a4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90012680:	6a23      	ldr	r3, [r4, #32]
90012682:	4620      	mov	r0, r4
90012684:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90012686:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9001268a:	075b      	lsls	r3, r3, #29
9001268c:	d40a      	bmi.n	900126a4 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9001268e:	6833      	ldr	r3, [r6, #0]
90012690:	681a      	ldr	r2, [r3, #0]
90012692:	2a00      	cmp	r2, #0
90012694:	d1ed      	bne.n	90012672 <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
90012696:	4a17      	ldr	r2, [pc, #92]	; (900126f4 <prvSwitchTimerLists+0x94>)
90012698:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9001269a:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9001269c:	6031      	str	r1, [r6, #0]
}
9001269e:	b005      	add	sp, #20
900126a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
900126a4:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900126a6:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
900126a8:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
900126aa:	429f      	cmp	r7, r3
900126ac:	d205      	bcs.n	900126ba <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900126ae:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
900126b0:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900126b2:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900126b4:	f7fd fdde 	bl	90010274 <vListInsert>
900126b8:	e7e9      	b.n	9001268e <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
900126ba:	f8d9 3000 	ldr.w	r3, [r9]
900126be:	b16b      	cbz	r3, 900126dc <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
900126c0:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
900126c2:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900126c6:	f7ff fecf 	bl	90012468 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900126ca:	2300      	movs	r3, #0
900126cc:	4669      	mov	r1, sp
900126ce:	f8d9 0000 	ldr.w	r0, [r9]
900126d2:	461a      	mov	r2, r3
900126d4:	f7fe f95e 	bl	90010994 <xQueueGenericSend>
				configASSERT( xResult );
900126d8:	2800      	cmp	r0, #0
900126da:	d1d8      	bne.n	9001268e <prvSwitchTimerLists+0x2e>
900126dc:	f04f 0350 	mov.w	r3, #80	; 0x50
900126e0:	f383 8811 	msr	BASEPRI, r3
900126e4:	f3bf 8f6f 	isb	sy
900126e8:	f3bf 8f4f 	dsb	sy
900126ec:	e7fe      	b.n	900126ec <prvSwitchTimerLists+0x8c>
900126ee:	bf00      	nop
900126f0:	24039994 	.word	0x24039994
900126f4:	24039998 	.word	0x24039998
900126f8:	24039ab8 	.word	0x24039ab8

900126fc <prvTimerTask>:
{
900126fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012700:	4e9f      	ldr	r6, [pc, #636]	; (90012980 <prvTimerTask+0x284>)
90012702:	b089      	sub	sp, #36	; 0x24
90012704:	4d9f      	ldr	r5, [pc, #636]	; (90012984 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90012706:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9001270a:	4c9f      	ldr	r4, [pc, #636]	; (90012988 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9001270c:	6833      	ldr	r3, [r6, #0]
9001270e:	681f      	ldr	r7, [r3, #0]
90012710:	2f00      	cmp	r7, #0
90012712:	f000 80b2 	beq.w	9001287a <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90012716:	68db      	ldr	r3, [r3, #12]
90012718:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9001271a:	f7ff fccf 	bl	900120bc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9001271e:	f7ff fce5 	bl	900120ec <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90012722:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90012724:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90012726:	4290      	cmp	r0, r2
90012728:	f0c0 80af 	bcc.w	9001288a <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9001272c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9001272e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90012730:	f200 80d0 	bhi.w	900128d4 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90012734:	f7ff fcca 	bl	900120cc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012738:	6832      	ldr	r2, [r6, #0]
9001273a:	68d2      	ldr	r2, [r2, #12]
9001273c:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90012740:	f10b 0804 	add.w	r8, fp, #4
90012744:	4640      	mov	r0, r8
90012746:	f7fd fdad 	bl	900102a4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001274a:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
9001274e:	0741      	lsls	r1, r0, #29
90012750:	f100 80d0 	bmi.w	900128f4 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90012754:	f020 0001 	bic.w	r0, r0, #1
90012758:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9001275c:	f8db 3020 	ldr.w	r3, [fp, #32]
90012760:	4658      	mov	r0, fp
90012762:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90012764:	2200      	movs	r2, #0
90012766:	4669      	mov	r1, sp
90012768:	6820      	ldr	r0, [r4, #0]
9001276a:	f7fe fbff 	bl	90010f6c <xQueueReceive>
9001276e:	2800      	cmp	r0, #0
90012770:	d0cc      	beq.n	9001270c <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90012772:	9b00      	ldr	r3, [sp, #0]
90012774:	2b00      	cmp	r3, #0
90012776:	db77      	blt.n	90012868 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
90012778:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9001277a:	697b      	ldr	r3, [r7, #20]
9001277c:	b113      	cbz	r3, 90012784 <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9001277e:	1d38      	adds	r0, r7, #4
90012780:	f7fd fd90 	bl	900102a4 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90012784:	f7ff fcb2 	bl	900120ec <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90012788:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9001278a:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
9001278c:	4298      	cmp	r0, r3
9001278e:	f0c0 8083 	bcc.w	90012898 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
90012792:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
90012794:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
90012798:	2b09      	cmp	r3, #9
9001279a:	d8e3      	bhi.n	90012764 <prvTimerTask+0x68>
9001279c:	e8df f003 	tbb	[pc, r3]
900127a0:	54050505 	.word	0x54050505
900127a4:	05055b3e 	.word	0x05055b3e
900127a8:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900127aa:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
900127ae:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900127b0:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900127b4:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900127b6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
900127ba:	9b01      	ldr	r3, [sp, #4]
900127bc:	1899      	adds	r1, r3, r2
900127be:	bf2c      	ite	cs
900127c0:	2001      	movcs	r0, #1
900127c2:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
900127c4:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900127c6:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
900127c8:	f200 8086 	bhi.w	900128d8 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900127cc:	eba8 0303 	sub.w	r3, r8, r3
900127d0:	429a      	cmp	r2, r3
900127d2:	f200 80c0 	bhi.w	90012956 <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900127d6:	6a3b      	ldr	r3, [r7, #32]
900127d8:	4638      	mov	r0, r7
900127da:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900127dc:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900127e0:	075b      	lsls	r3, r3, #29
900127e2:	d5bf      	bpl.n	90012764 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
900127e4:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
900127e6:	9901      	ldr	r1, [sp, #4]
900127e8:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
900127ea:	b172      	cbz	r2, 9001280a <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
900127ec:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
900127ee:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
900127f2:	2300      	movs	r3, #0
900127f4:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900127f6:	f7ff fe37 	bl	90012468 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900127fa:	2300      	movs	r3, #0
900127fc:	a904      	add	r1, sp, #16
900127fe:	6820      	ldr	r0, [r4, #0]
90012800:	461a      	mov	r2, r3
90012802:	f7fe f8c7 	bl	90010994 <xQueueGenericSend>
							configASSERT( xResult );
90012806:	2800      	cmp	r0, #0
90012808:	d1ac      	bne.n	90012764 <prvTimerTask+0x68>
9001280a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001280e:	f383 8811 	msr	BASEPRI, r3
90012812:	f3bf 8f6f 	isb	sy
90012816:	f3bf 8f4f 	dsb	sy
9001281a:	e7fe      	b.n	9001281a <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001281c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90012820:	f043 0301 	orr.w	r3, r3, #1
90012824:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90012828:	9b01      	ldr	r3, [sp, #4]
9001282a:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9001282c:	2b00      	cmp	r3, #0
9001282e:	f000 809e 	beq.w	9001296e <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90012832:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90012834:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90012836:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
90012838:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9001283a:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9001283c:	d856      	bhi.n	900128ec <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9001283e:	4b53      	ldr	r3, [pc, #332]	; (9001298c <prvTimerTask+0x290>)
90012840:	6818      	ldr	r0, [r3, #0]
90012842:	f7fd fd17 	bl	90010274 <vListInsert>
	return xProcessTimerNow;
90012846:	e78d      	b.n	90012764 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90012848:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9001284c:	f023 0301 	bic.w	r3, r3, #1
90012850:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
90012854:	e786      	b.n	90012764 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
90012856:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9001285a:	079a      	lsls	r2, r3, #30
9001285c:	d572      	bpl.n	90012944 <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9001285e:	f023 0301 	bic.w	r3, r3, #1
90012862:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
90012866:	e77d      	b.n	90012764 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90012868:	9b01      	ldr	r3, [sp, #4]
9001286a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
9001286e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90012870:	9b00      	ldr	r3, [sp, #0]
90012872:	2b00      	cmp	r3, #0
90012874:	f6ff af76 	blt.w	90012764 <prvTimerTask+0x68>
90012878:	e77e      	b.n	90012778 <prvTimerTask+0x7c>
	vTaskSuspendAll();
9001287a:	f7ff fc1f 	bl	900120bc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9001287e:	f7ff fc35 	bl	900120ec <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90012882:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90012884:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90012886:	4282      	cmp	r2, r0
90012888:	d909      	bls.n	9001289e <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9001288a:	f7ff fee9 	bl	90012660 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9001288e:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90012892:	f7ff fc1b 	bl	900120cc <xTaskResumeAll>
90012896:	e765      	b.n	90012764 <prvTimerTask+0x68>
		prvSwitchTimerLists();
90012898:	f7ff fee2 	bl	90012660 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9001289c:	e779      	b.n	90012792 <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9001289e:	4b3b      	ldr	r3, [pc, #236]	; (9001298c <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
900128a0:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
900128a4:	681a      	ldr	r2, [r3, #0]
900128a6:	6812      	ldr	r2, [r2, #0]
900128a8:	fab2 f282 	clz	r2, r2
900128ac:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
900128ae:	eba7 010a 	sub.w	r1, r7, sl
900128b2:	6820      	ldr	r0, [r4, #0]
900128b4:	f7fe ff4e 	bl	90011754 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
900128b8:	f7ff fc08 	bl	900120cc <xTaskResumeAll>
900128bc:	2800      	cmp	r0, #0
900128be:	f47f af51 	bne.w	90012764 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
900128c2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
900128c6:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
900128ca:	f3bf 8f4f 	dsb	sy
900128ce:	f3bf 8f6f 	isb	sy
900128d2:	e747      	b.n	90012764 <prvTimerTask+0x68>
900128d4:	2200      	movs	r2, #0
900128d6:	e7ea      	b.n	900128ae <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
900128d8:	4543      	cmp	r3, r8
900128da:	d902      	bls.n	900128e2 <prvTimerTask+0x1e6>
900128dc:	2800      	cmp	r0, #0
900128de:	f43f af7a 	beq.w	900127d6 <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900128e2:	1d39      	adds	r1, r7, #4
900128e4:	6830      	ldr	r0, [r6, #0]
900128e6:	f7fd fcc5 	bl	90010274 <vListInsert>
	return xProcessTimerNow;
900128ea:	e73b      	b.n	90012764 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900128ec:	6830      	ldr	r0, [r6, #0]
900128ee:	f7fd fcc1 	bl	90010274 <vListInsert>
900128f2:	e737      	b.n	90012764 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
900128f4:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900128f8:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
900128fc:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
900128fe:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90012900:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90012904:	d322      	bcc.n	9001294c <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012906:	ebaa 0307 	sub.w	r3, sl, r7
9001290a:	429a      	cmp	r2, r3
9001290c:	d829      	bhi.n	90012962 <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
9001290e:	6823      	ldr	r3, [r4, #0]
90012910:	b17b      	cbz	r3, 90012932 <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
90012912:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90012914:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90012916:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
9001291a:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9001291c:	f7ff fda4 	bl	90012468 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90012920:	2300      	movs	r3, #0
90012922:	a904      	add	r1, sp, #16
90012924:	6820      	ldr	r0, [r4, #0]
90012926:	461a      	mov	r2, r3
90012928:	f7fe f834 	bl	90010994 <xQueueGenericSend>
			configASSERT( xResult );
9001292c:	2800      	cmp	r0, #0
9001292e:	f47f af15 	bne.w	9001275c <prvTimerTask+0x60>
90012932:	f04f 0350 	mov.w	r3, #80	; 0x50
90012936:	f383 8811 	msr	BASEPRI, r3
9001293a:	f3bf 8f6f 	isb	sy
9001293e:	f3bf 8f4f 	dsb	sy
90012942:	e7fe      	b.n	90012942 <prvTimerTask+0x246>
							vPortFree( pxTimer );
90012944:	4638      	mov	r0, r7
90012946:	f7fd fc11 	bl	9001016c <vPortFree>
9001294a:	e70b      	b.n	90012764 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001294c:	4641      	mov	r1, r8
9001294e:	6830      	ldr	r0, [r6, #0]
90012950:	f7fd fc90 	bl	90010274 <vListInsert>
	return xProcessTimerNow;
90012954:	e702      	b.n	9001275c <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90012956:	4b0d      	ldr	r3, [pc, #52]	; (9001298c <prvTimerTask+0x290>)
90012958:	1d39      	adds	r1, r7, #4
9001295a:	6818      	ldr	r0, [r3, #0]
9001295c:	f7fd fc8a 	bl	90010274 <vListInsert>
	return xProcessTimerNow;
90012960:	e700      	b.n	90012764 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90012962:	4b0a      	ldr	r3, [pc, #40]	; (9001298c <prvTimerTask+0x290>)
90012964:	4641      	mov	r1, r8
90012966:	6818      	ldr	r0, [r3, #0]
90012968:	f7fd fc84 	bl	90010274 <vListInsert>
	return xProcessTimerNow;
9001296c:	e6f6      	b.n	9001275c <prvTimerTask+0x60>
9001296e:	f04f 0350 	mov.w	r3, #80	; 0x50
90012972:	f383 8811 	msr	BASEPRI, r3
90012976:	f3bf 8f6f 	isb	sy
9001297a:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9001297e:	e7fe      	b.n	9001297e <prvTimerTask+0x282>
90012980:	24039994 	.word	0x24039994
90012984:	24039a64 	.word	0x24039a64
90012988:	24039ab8 	.word	0x24039ab8
9001298c:	24039998 	.word	0x24039998

90012990 <xTimerCreateTimerTask>:
{
90012990:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90012992:	4c23      	ldr	r4, [pc, #140]	; (90012a20 <xTimerCreateTimerTask+0x90>)
{
90012994:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
90012996:	f7fd fd05 	bl	900103a4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9001299a:	6825      	ldr	r5, [r4, #0]
9001299c:	b335      	cbz	r5, 900129ec <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9001299e:	f7fd fd23 	bl	900103e8 <vPortExitCritical>
	if( xTimerQueue != NULL )
900129a2:	6823      	ldr	r3, [r4, #0]
900129a4:	b1cb      	cbz	r3, 900129da <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
900129a6:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
900129a8:	aa07      	add	r2, sp, #28
900129aa:	a906      	add	r1, sp, #24
900129ac:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
900129ae:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
900129b0:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
900129b4:	f7fd fb0c 	bl	9000ffd0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
900129b8:	4623      	mov	r3, r4
900129ba:	9a07      	ldr	r2, [sp, #28]
900129bc:	9500      	str	r5, [sp, #0]
900129be:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
900129c2:	e9cd 1001 	strd	r1, r0, [sp, #4]
900129c6:	4917      	ldr	r1, [pc, #92]	; (90012a24 <xTimerCreateTimerTask+0x94>)
900129c8:	4817      	ldr	r0, [pc, #92]	; (90012a28 <xTimerCreateTimerTask+0x98>)
900129ca:	f7ff f93f 	bl	90011c4c <xTaskCreateStatic>
900129ce:	4b17      	ldr	r3, [pc, #92]	; (90012a2c <xTimerCreateTimerTask+0x9c>)
900129d0:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
900129d2:	b110      	cbz	r0, 900129da <xTimerCreateTimerTask+0x4a>
}
900129d4:	2001      	movs	r0, #1
900129d6:	b009      	add	sp, #36	; 0x24
900129d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900129da:	f04f 0350 	mov.w	r3, #80	; 0x50
900129de:	f383 8811 	msr	BASEPRI, r3
900129e2:	f3bf 8f6f 	isb	sy
900129e6:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
900129ea:	e7fe      	b.n	900129ea <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
900129ec:	4f10      	ldr	r7, [pc, #64]	; (90012a30 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
900129ee:	4e11      	ldr	r6, [pc, #68]	; (90012a34 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
900129f0:	4638      	mov	r0, r7
900129f2:	f7fd fc1f 	bl	90010234 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
900129f6:	4630      	mov	r0, r6
900129f8:	f7fd fc1c 	bl	90010234 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
900129fc:	4a0e      	ldr	r2, [pc, #56]	; (90012a38 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900129fe:	9500      	str	r5, [sp, #0]
90012a00:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90012a02:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012a04:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90012a06:	4a0d      	ldr	r2, [pc, #52]	; (90012a3c <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012a08:	4b0d      	ldr	r3, [pc, #52]	; (90012a40 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
90012a0a:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012a0c:	4a0d      	ldr	r2, [pc, #52]	; (90012a44 <xTimerCreateTimerTask+0xb4>)
90012a0e:	f7fd fe6b 	bl	900106e8 <xQueueGenericCreateStatic>
90012a12:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90012a14:	2800      	cmp	r0, #0
90012a16:	d0c2      	beq.n	9001299e <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90012a18:	490b      	ldr	r1, [pc, #44]	; (90012a48 <xTimerCreateTimerTask+0xb8>)
90012a1a:	f7fe fe73 	bl	90011704 <vQueueAddToRegistry>
90012a1e:	e7be      	b.n	9001299e <xTimerCreateTimerTask+0xe>
90012a20:	24039ab8 	.word	0x24039ab8
90012a24:	9002d65c 	.word	0x9002d65c
90012a28:	900126fd 	.word	0x900126fd
90012a2c:	24039abc 	.word	0x24039abc
90012a30:	24039a3c 	.word	0x24039a3c
90012a34:	24039a50 	.word	0x24039a50
90012a38:	24039994 	.word	0x24039994
90012a3c:	24039998 	.word	0x24039998
90012a40:	24039a68 	.word	0x24039a68
90012a44:	2403999c 	.word	0x2403999c
90012a48:	9002d654 	.word	0x9002d654

90012a4c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
90012a4c:	8880      	ldrh	r0, [r0, #4]
90012a4e:	4770      	bx	lr

90012a50 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90012a50:	b570      	push	{r4, r5, r6, lr}
90012a52:	6803      	ldr	r3, [r0, #0]
90012a54:	460c      	mov	r4, r1
90012a56:	2100      	movs	r1, #0
90012a58:	4605      	mov	r5, r0
90012a5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90012a5c:	4798      	blx	r3
90012a5e:	4606      	mov	r6, r0
90012a60:	682b      	ldr	r3, [r5, #0]
90012a62:	4628      	mov	r0, r5
90012a64:	1ba4      	subs	r4, r4, r6
90012a66:	6a1b      	ldr	r3, [r3, #32]
90012a68:	b2a4      	uxth	r4, r4
90012a6a:	4798      	blx	r3
90012a6c:	fbb4 f0f0 	udiv	r0, r4, r0
90012a70:	bd70      	pop	{r4, r5, r6, pc}

90012a72 <_ZN8touchgfx17AbstractPartition5clearEv>:
90012a72:	2300      	movs	r3, #0
90012a74:	8083      	strh	r3, [r0, #4]
90012a76:	4770      	bx	lr

90012a78 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90012a78:	b510      	push	{r4, lr}
90012a7a:	6803      	ldr	r3, [r0, #0]
90012a7c:	4604      	mov	r4, r0
90012a7e:	8881      	ldrh	r1, [r0, #4]
90012a80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90012a82:	4798      	blx	r3
90012a84:	88a3      	ldrh	r3, [r4, #4]
90012a86:	3301      	adds	r3, #1
90012a88:	80a3      	strh	r3, [r4, #4]
90012a8a:	bd10      	pop	{r4, pc}

90012a8c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
90012a8c:	6803      	ldr	r3, [r0, #0]
90012a8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90012a90:	4718      	bx	r3

90012a92 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90012a92:	4770      	bx	lr

90012a94 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90012a94:	4a02      	ldr	r2, [pc, #8]	; (90012aa0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90012a96:	6002      	str	r2, [r0, #0]
90012a98:	2200      	movs	r2, #0
90012a9a:	8082      	strh	r2, [r0, #4]
90012a9c:	4770      	bx	lr
90012a9e:	bf00      	nop
90012aa0:	9002d66c 	.word	0x9002d66c

90012aa4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90012aa4:	6a83      	ldr	r3, [r0, #40]	; 0x28
90012aa6:	2000      	movs	r0, #0
90012aa8:	b12b      	cbz	r3, 90012ab6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90012aaa:	b920      	cbnz	r0, 90012ab6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90012aac:	1a5a      	subs	r2, r3, r1
90012aae:	699b      	ldr	r3, [r3, #24]
90012ab0:	4250      	negs	r0, r2
90012ab2:	4150      	adcs	r0, r2
90012ab4:	e7f8      	b.n	90012aa8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90012ab6:	4770      	bx	lr

90012ab8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90012ab8:	2300      	movs	r3, #0
90012aba:	6148      	str	r0, [r1, #20]
90012abc:	618b      	str	r3, [r1, #24]
90012abe:	6a83      	ldr	r3, [r0, #40]	; 0x28
90012ac0:	b913      	cbnz	r3, 90012ac8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90012ac2:	6281      	str	r1, [r0, #40]	; 0x28
90012ac4:	4770      	bx	lr
90012ac6:	4613      	mov	r3, r2
90012ac8:	699a      	ldr	r2, [r3, #24]
90012aca:	2a00      	cmp	r2, #0
90012acc:	d1fb      	bne.n	90012ac6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90012ace:	6199      	str	r1, [r3, #24]
90012ad0:	4770      	bx	lr

90012ad2 <_ZN8touchgfx9Container9removeAllEv>:
90012ad2:	2200      	movs	r2, #0
90012ad4:	6a83      	ldr	r3, [r0, #40]	; 0x28
90012ad6:	b123      	cbz	r3, 90012ae2 <_ZN8touchgfx9Container9removeAllEv+0x10>
90012ad8:	6999      	ldr	r1, [r3, #24]
90012ada:	6281      	str	r1, [r0, #40]	; 0x28
90012adc:	e9c3 2205 	strd	r2, r2, [r3, #20]
90012ae0:	e7f8      	b.n	90012ad4 <_ZN8touchgfx9Container9removeAllEv+0x2>
90012ae2:	4770      	bx	lr

90012ae4 <_ZN8touchgfx9Container6unlinkEv>:
90012ae4:	2300      	movs	r3, #0
90012ae6:	6283      	str	r3, [r0, #40]	; 0x28
90012ae8:	4770      	bx	lr

90012aea <_ZNK8touchgfx9Container12getSolidRectEv>:
90012aea:	2200      	movs	r2, #0
90012aec:	8002      	strh	r2, [r0, #0]
90012aee:	8042      	strh	r2, [r0, #2]
90012af0:	8082      	strh	r2, [r0, #4]
90012af2:	80c2      	strh	r2, [r0, #6]
90012af4:	4770      	bx	lr

90012af6 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90012af6:	b570      	push	{r4, r5, r6, lr}
90012af8:	460d      	mov	r5, r1
90012afa:	4616      	mov	r6, r2
90012afc:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012afe:	b13c      	cbz	r4, 90012b10 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90012b00:	6823      	ldr	r3, [r4, #0]
90012b02:	4620      	mov	r0, r4
90012b04:	4632      	mov	r2, r6
90012b06:	4629      	mov	r1, r5
90012b08:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90012b0a:	4798      	blx	r3
90012b0c:	69a4      	ldr	r4, [r4, #24]
90012b0e:	e7f6      	b.n	90012afe <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90012b10:	bd70      	pop	{r4, r5, r6, pc}

90012b12 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90012b12:	b538      	push	{r3, r4, r5, lr}
90012b14:	460d      	mov	r5, r1
90012b16:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012b18:	b134      	cbz	r4, 90012b28 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
90012b1a:	682b      	ldr	r3, [r5, #0]
90012b1c:	4621      	mov	r1, r4
90012b1e:	4628      	mov	r0, r5
90012b20:	689b      	ldr	r3, [r3, #8]
90012b22:	4798      	blx	r3
90012b24:	69a4      	ldr	r4, [r4, #24]
90012b26:	e7f7      	b.n	90012b18 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
90012b28:	bd38      	pop	{r3, r4, r5, pc}

90012b2a <_ZN8touchgfx9ContainerD1Ev>:
90012b2a:	4770      	bx	lr

90012b2c <_ZN8touchgfx9ContainerD0Ev>:
90012b2c:	b510      	push	{r4, lr}
90012b2e:	4604      	mov	r4, r0
90012b30:	212c      	movs	r1, #44	; 0x2c
90012b32:	f016 fd57 	bl	900295e4 <_ZdlPvj>
90012b36:	4620      	mov	r0, r4
90012b38:	bd10      	pop	{r4, pc}

90012b3a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
90012b3a:	6a83      	ldr	r3, [r0, #40]	; 0x28
90012b3c:	b19b      	cbz	r3, 90012b66 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90012b3e:	428b      	cmp	r3, r1
90012b40:	d109      	bne.n	90012b56 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90012b42:	699a      	ldr	r2, [r3, #24]
90012b44:	2100      	movs	r1, #0
90012b46:	6159      	str	r1, [r3, #20]
90012b48:	6282      	str	r2, [r0, #40]	; 0x28
90012b4a:	b902      	cbnz	r2, 90012b4e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90012b4c:	4770      	bx	lr
90012b4e:	6199      	str	r1, [r3, #24]
90012b50:	4770      	bx	lr
90012b52:	4613      	mov	r3, r2
90012b54:	b13a      	cbz	r2, 90012b66 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90012b56:	699a      	ldr	r2, [r3, #24]
90012b58:	428a      	cmp	r2, r1
90012b5a:	d1fa      	bne.n	90012b52 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90012b5c:	698a      	ldr	r2, [r1, #24]
90012b5e:	619a      	str	r2, [r3, #24]
90012b60:	2300      	movs	r3, #0
90012b62:	e9c1 3305 	strd	r3, r3, [r1, #20]
90012b66:	4770      	bx	lr

90012b68 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90012b68:	b410      	push	{r4}
90012b6a:	6a83      	ldr	r3, [r0, #40]	; 0x28
90012b6c:	4604      	mov	r4, r0
90012b6e:	b92b      	cbnz	r3, 90012b7c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90012b70:	6803      	ldr	r3, [r0, #0]
90012b72:	4611      	mov	r1, r2
90012b74:	f85d 4b04 	ldr.w	r4, [sp], #4
90012b78:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90012b7a:	4718      	bx	r3
90012b7c:	b941      	cbnz	r1, 90012b90 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90012b7e:	6193      	str	r3, [r2, #24]
90012b80:	6282      	str	r2, [r0, #40]	; 0x28
90012b82:	6154      	str	r4, [r2, #20]
90012b84:	f85d 4b04 	ldr.w	r4, [sp], #4
90012b88:	4770      	bx	lr
90012b8a:	4603      	mov	r3, r0
90012b8c:	2800      	cmp	r0, #0
90012b8e:	d0f9      	beq.n	90012b84 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90012b90:	4299      	cmp	r1, r3
90012b92:	6998      	ldr	r0, [r3, #24]
90012b94:	d1f9      	bne.n	90012b8a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90012b96:	6190      	str	r0, [r2, #24]
90012b98:	618a      	str	r2, [r1, #24]
90012b9a:	e7f2      	b.n	90012b82 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90012b9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90012b9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012ba0:	461f      	mov	r7, r3
90012ba2:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90012ba6:	460d      	mov	r5, r1
90012ba8:	4616      	mov	r6, r2
90012baa:	b103      	cbz	r3, 90012bae <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90012bac:	6038      	str	r0, [r7, #0]
90012bae:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012bb0:	b314      	cbz	r4, 90012bf8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90012bb2:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90012bb6:	b1eb      	cbz	r3, 90012bf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012bb8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90012bbc:	428d      	cmp	r5, r1
90012bbe:	db19      	blt.n	90012bf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012bc0:	b289      	uxth	r1, r1
90012bc2:	8923      	ldrh	r3, [r4, #8]
90012bc4:	440b      	add	r3, r1
90012bc6:	b21b      	sxth	r3, r3
90012bc8:	429d      	cmp	r5, r3
90012bca:	da13      	bge.n	90012bf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012bcc:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90012bd0:	4296      	cmp	r6, r2
90012bd2:	db0f      	blt.n	90012bf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012bd4:	b292      	uxth	r2, r2
90012bd6:	8963      	ldrh	r3, [r4, #10]
90012bd8:	4413      	add	r3, r2
90012bda:	b21b      	sxth	r3, r3
90012bdc:	429e      	cmp	r6, r3
90012bde:	da09      	bge.n	90012bf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012be0:	6823      	ldr	r3, [r4, #0]
90012be2:	1ab2      	subs	r2, r6, r2
90012be4:	1a69      	subs	r1, r5, r1
90012be6:	4620      	mov	r0, r4
90012be8:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
90012bec:	b212      	sxth	r2, r2
90012bee:	463b      	mov	r3, r7
90012bf0:	b209      	sxth	r1, r1
90012bf2:	47c0      	blx	r8
90012bf4:	69a4      	ldr	r4, [r4, #24]
90012bf6:	e7db      	b.n	90012bb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90012bf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012bfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90012bfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012c00:	4c6d      	ldr	r4, [pc, #436]	; (90012db8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90012c02:	b0a1      	sub	sp, #132	; 0x84
90012c04:	4606      	mov	r6, r0
90012c06:	6824      	ldr	r4, [r4, #0]
90012c08:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90012c0a:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
90012c0e:	2400      	movs	r4, #0
90012c10:	9303      	str	r3, [sp, #12]
90012c12:	802c      	strh	r4, [r5, #0]
90012c14:	9d2b      	ldr	r5, [sp, #172]	; 0xac
90012c16:	802c      	strh	r4, [r5, #0]
90012c18:	601c      	str	r4, [r3, #0]
90012c1a:	e9cd 1201 	strd	r1, r2, [sp, #4]
90012c1e:	f7ff ffbd 	bl	90012b9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90012c22:	f1b9 0f03 	cmp.w	r9, #3
90012c26:	f340 80c1 	ble.w	90012dac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
90012c2a:	4631      	mov	r1, r6
90012c2c:	a80c      	add	r0, sp, #48	; 0x30
90012c2e:	f006 fcd7 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012c32:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
90012c36:	9306      	str	r3, [sp, #24]
90012c38:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90012c3c:	9307      	str	r3, [sp, #28]
90012c3e:	9b03      	ldr	r3, [sp, #12]
90012c40:	f8d3 a000 	ldr.w	sl, [r3]
90012c44:	f1ba 0f00 	cmp.w	sl, #0
90012c48:	f000 80b3 	beq.w	90012db2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90012c4c:	4651      	mov	r1, sl
90012c4e:	a810      	add	r0, sp, #64	; 0x40
90012c50:	f006 fcc6 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012c54:	2002      	movs	r0, #2
90012c56:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
90012c5a:	9b01      	ldr	r3, [sp, #4]
90012c5c:	9a06      	ldr	r2, [sp, #24]
90012c5e:	fb91 f1f0 	sdiv	r1, r1, r0
90012c62:	189d      	adds	r5, r3, r2
90012c64:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
90012c68:	9a07      	ldr	r2, [sp, #28]
90012c6a:	4419      	add	r1, r3
90012c6c:	9b02      	ldr	r3, [sp, #8]
90012c6e:	4413      	add	r3, r2
90012c70:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
90012c74:	1a6d      	subs	r5, r5, r1
90012c76:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
90012c7a:	fb92 f2f0 	sdiv	r2, r2, r0
90012c7e:	440a      	add	r2, r1
90012c80:	1a9b      	subs	r3, r3, r2
90012c82:	435b      	muls	r3, r3
90012c84:	fb05 3505 	mla	r5, r5, r5, r3
90012c88:	4f4c      	ldr	r7, [pc, #304]	; (90012dbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90012c8a:	ac10      	add	r4, sp, #64	; 0x40
90012c8c:	f1b9 0f0c 	cmp.w	r9, #12
90012c90:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90012c92:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012c94:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90012c96:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012c98:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90012c9a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012c9c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90012ca0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90012ca4:	f04f 0303 	mov.w	r3, #3
90012ca8:	bfd8      	it	le
90012caa:	f109 32ff 	addle.w	r2, r9, #4294967295
90012cae:	f04f 0400 	mov.w	r4, #0
90012cb2:	f8cd 9000 	str.w	r9, [sp]
90012cb6:	bfcc      	ite	gt
90012cb8:	4698      	movgt	r8, r3
90012cba:	fb92 f8f3 	sdivle	r8, r2, r3
90012cbe:	1c63      	adds	r3, r4, #1
90012cc0:	aa10      	add	r2, sp, #64	; 0x40
90012cc2:	f004 0401 	and.w	r4, r4, #1
90012cc6:	f04f 0b00 	mov.w	fp, #0
90012cca:	9308      	str	r3, [sp, #32]
90012ccc:	9b00      	ldr	r3, [sp, #0]
90012cce:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90012cd2:	fb93 f3f8 	sdiv	r3, r3, r8
90012cd6:	3404      	adds	r4, #4
90012cd8:	b29b      	uxth	r3, r3
90012cda:	9304      	str	r3, [sp, #16]
90012cdc:	9a04      	ldr	r2, [sp, #16]
90012cde:	f854 3c04 	ldr.w	r3, [r4, #-4]
90012ce2:	fb13 f302 	smulbb	r3, r3, r2
90012ce6:	9a01      	ldr	r2, [sp, #4]
90012ce8:	b29b      	uxth	r3, r3
90012cea:	1899      	adds	r1, r3, r2
90012cec:	9305      	str	r3, [sp, #20]
90012cee:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90012cf2:	b209      	sxth	r1, r1
90012cf4:	4299      	cmp	r1, r3
90012cf6:	db4d      	blt.n	90012d94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012cf8:	8932      	ldrh	r2, [r6, #8]
90012cfa:	4413      	add	r3, r2
90012cfc:	b21b      	sxth	r3, r3
90012cfe:	4299      	cmp	r1, r3
90012d00:	da48      	bge.n	90012d94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012d02:	9b04      	ldr	r3, [sp, #16]
90012d04:	6827      	ldr	r7, [r4, #0]
90012d06:	fb17 f703 	smulbb	r7, r7, r3
90012d0a:	9b02      	ldr	r3, [sp, #8]
90012d0c:	b2bf      	uxth	r7, r7
90012d0e:	18fa      	adds	r2, r7, r3
90012d10:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90012d14:	b212      	sxth	r2, r2
90012d16:	429a      	cmp	r2, r3
90012d18:	db3c      	blt.n	90012d94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012d1a:	8970      	ldrh	r0, [r6, #10]
90012d1c:	4403      	add	r3, r0
90012d1e:	b21b      	sxth	r3, r3
90012d20:	429a      	cmp	r2, r3
90012d22:	da37      	bge.n	90012d94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012d24:	2300      	movs	r3, #0
90012d26:	4630      	mov	r0, r6
90012d28:	930b      	str	r3, [sp, #44]	; 0x2c
90012d2a:	ab0b      	add	r3, sp, #44	; 0x2c
90012d2c:	f7ff ff36 	bl	90012b9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90012d30:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90012d32:	b37a      	cbz	r2, 90012d94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012d34:	4552      	cmp	r2, sl
90012d36:	d02d      	beq.n	90012d94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012d38:	4611      	mov	r1, r2
90012d3a:	a80e      	add	r0, sp, #56	; 0x38
90012d3c:	9209      	str	r2, [sp, #36]	; 0x24
90012d3e:	f006 fc4f 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012d42:	f04f 0e02 	mov.w	lr, #2
90012d46:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
90012d4a:	9a06      	ldr	r2, [sp, #24]
90012d4c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
90012d50:	9b01      	ldr	r3, [sp, #4]
90012d52:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
90012d56:	4413      	add	r3, r2
90012d58:	9a07      	ldr	r2, [sp, #28]
90012d5a:	fb91 f1fe 	sdiv	r1, r1, lr
90012d5e:	fb9c fcfe 	sdiv	ip, ip, lr
90012d62:	4401      	add	r1, r0
90012d64:	1a58      	subs	r0, r3, r1
90012d66:	9b02      	ldr	r3, [sp, #8]
90012d68:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
90012d6c:	4413      	add	r3, r2
90012d6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90012d70:	448c      	add	ip, r1
90012d72:	eba3 030c 	sub.w	r3, r3, ip
90012d76:	435b      	muls	r3, r3
90012d78:	fb00 3300 	mla	r3, r0, r0, r3
90012d7c:	42ab      	cmp	r3, r5
90012d7e:	d208      	bcs.n	90012d92 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90012d80:	990b      	ldr	r1, [sp, #44]	; 0x2c
90012d82:	461d      	mov	r5, r3
90012d84:	9803      	ldr	r0, [sp, #12]
90012d86:	6001      	str	r1, [r0, #0]
90012d88:	992a      	ldr	r1, [sp, #168]	; 0xa8
90012d8a:	9805      	ldr	r0, [sp, #20]
90012d8c:	8008      	strh	r0, [r1, #0]
90012d8e:	992b      	ldr	r1, [sp, #172]	; 0xac
90012d90:	800f      	strh	r7, [r1, #0]
90012d92:	4692      	mov	sl, r2
90012d94:	f10b 0b01 	add.w	fp, fp, #1
90012d98:	3408      	adds	r4, #8
90012d9a:	f1bb 0f04 	cmp.w	fp, #4
90012d9e:	d19d      	bne.n	90012cdc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90012da0:	9b00      	ldr	r3, [sp, #0]
90012da2:	9c08      	ldr	r4, [sp, #32]
90012da4:	444b      	add	r3, r9
90012da6:	4544      	cmp	r4, r8
90012da8:	9300      	str	r3, [sp, #0]
90012daa:	d188      	bne.n	90012cbe <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90012dac:	b021      	add	sp, #132	; 0x84
90012dae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012db2:	f04f 35ff 	mov.w	r5, #4294967295
90012db6:	e767      	b.n	90012c88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90012db8:	24039acc 	.word	0x24039acc
90012dbc:	9002a6c0 	.word	0x9002a6c0

90012dc0 <_ZN8touchgfx4RectaNERKS0_>:
90012dc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012dc4:	f9b1 7000 	ldrsh.w	r7, [r1]
90012dc8:	888c      	ldrh	r4, [r1, #4]
90012dca:	f9b0 9000 	ldrsh.w	r9, [r0]
90012dce:	443c      	add	r4, r7
90012dd0:	b2a4      	uxth	r4, r4
90012dd2:	fa0f f884 	sxth.w	r8, r4
90012dd6:	45c1      	cmp	r9, r8
90012dd8:	da2f      	bge.n	90012e3a <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012dda:	8882      	ldrh	r2, [r0, #4]
90012ddc:	444a      	add	r2, r9
90012dde:	b292      	uxth	r2, r2
90012de0:	fa0f fe82 	sxth.w	lr, r2
90012de4:	4577      	cmp	r7, lr
90012de6:	da28      	bge.n	90012e3a <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012de8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90012dec:	88cb      	ldrh	r3, [r1, #6]
90012dee:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90012df2:	442b      	add	r3, r5
90012df4:	b21b      	sxth	r3, r3
90012df6:	429e      	cmp	r6, r3
90012df8:	da1f      	bge.n	90012e3a <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012dfa:	88c3      	ldrh	r3, [r0, #6]
90012dfc:	4433      	add	r3, r6
90012dfe:	b29b      	uxth	r3, r3
90012e00:	fa0f fc83 	sxth.w	ip, r3
90012e04:	4565      	cmp	r5, ip
90012e06:	da18      	bge.n	90012e3a <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012e08:	454f      	cmp	r7, r9
90012e0a:	bfb8      	it	lt
90012e0c:	464f      	movlt	r7, r9
90012e0e:	42b5      	cmp	r5, r6
90012e10:	bfb8      	it	lt
90012e12:	4635      	movlt	r5, r6
90012e14:	45f0      	cmp	r8, lr
90012e16:	bfd8      	it	le
90012e18:	4622      	movle	r2, r4
90012e1a:	1bd2      	subs	r2, r2, r7
90012e1c:	8082      	strh	r2, [r0, #4]
90012e1e:	884a      	ldrh	r2, [r1, #2]
90012e20:	88c9      	ldrh	r1, [r1, #6]
90012e22:	8007      	strh	r7, [r0, #0]
90012e24:	440a      	add	r2, r1
90012e26:	8045      	strh	r5, [r0, #2]
90012e28:	b292      	uxth	r2, r2
90012e2a:	b211      	sxth	r1, r2
90012e2c:	458c      	cmp	ip, r1
90012e2e:	bfa8      	it	ge
90012e30:	4613      	movge	r3, r2
90012e32:	1b5b      	subs	r3, r3, r5
90012e34:	80c3      	strh	r3, [r0, #6]
90012e36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012e3a:	2300      	movs	r3, #0
90012e3c:	8003      	strh	r3, [r0, #0]
90012e3e:	8043      	strh	r3, [r0, #2]
90012e40:	8083      	strh	r3, [r0, #4]
90012e42:	80c3      	strh	r3, [r0, #6]
90012e44:	e7f7      	b.n	90012e36 <_ZN8touchgfx4RectaNERKS0_+0x76>

90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>:
90012e46:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90012e4a:	2b00      	cmp	r3, #0
90012e4c:	dd06      	ble.n	90012e5c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90012e4e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90012e52:	2800      	cmp	r0, #0
90012e54:	bfcc      	ite	gt
90012e56:	2000      	movgt	r0, #0
90012e58:	2001      	movle	r0, #1
90012e5a:	4770      	bx	lr
90012e5c:	2001      	movs	r0, #1
90012e5e:	4770      	bx	lr

90012e60 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90012e60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012e64:	2300      	movs	r3, #0
90012e66:	4604      	mov	r4, r0
90012e68:	6a8d      	ldr	r5, [r1, #40]	; 0x28
90012e6a:	8003      	strh	r3, [r0, #0]
90012e6c:	8043      	strh	r3, [r0, #2]
90012e6e:	8083      	strh	r3, [r0, #4]
90012e70:	80c3      	strh	r3, [r0, #6]
90012e72:	2d00      	cmp	r5, #0
90012e74:	d040      	beq.n	90012ef8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90012e76:	1d28      	adds	r0, r5, #4
90012e78:	f7ff ffe5 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
90012e7c:	b988      	cbnz	r0, 90012ea2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90012e7e:	4620      	mov	r0, r4
90012e80:	f7ff ffe1 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
90012e84:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90012e88:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90012e8c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90012e90:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90012e94:	b138      	cbz	r0, 90012ea6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90012e96:	8022      	strh	r2, [r4, #0]
90012e98:	8063      	strh	r3, [r4, #2]
90012e9a:	f8a4 e004 	strh.w	lr, [r4, #4]
90012e9e:	f8a4 c006 	strh.w	ip, [r4, #6]
90012ea2:	69ad      	ldr	r5, [r5, #24]
90012ea4:	e7e5      	b.n	90012e72 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
90012ea6:	f9b4 0000 	ldrsh.w	r0, [r4]
90012eaa:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90012eae:	4290      	cmp	r0, r2
90012eb0:	4607      	mov	r7, r0
90012eb2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90012eb6:	460e      	mov	r6, r1
90012eb8:	bfa8      	it	ge
90012eba:	4617      	movge	r7, r2
90012ebc:	4299      	cmp	r1, r3
90012ebe:	4472      	add	r2, lr
90012ec0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90012ec4:	bfa8      	it	ge
90012ec6:	461e      	movge	r6, r3
90012ec8:	4440      	add	r0, r8
90012eca:	4471      	add	r1, lr
90012ecc:	4463      	add	r3, ip
90012ece:	b200      	sxth	r0, r0
90012ed0:	8027      	strh	r7, [r4, #0]
90012ed2:	b212      	sxth	r2, r2
90012ed4:	8066      	strh	r6, [r4, #2]
90012ed6:	b209      	sxth	r1, r1
90012ed8:	b21b      	sxth	r3, r3
90012eda:	4290      	cmp	r0, r2
90012edc:	bfac      	ite	ge
90012ede:	ebc7 0200 	rsbge	r2, r7, r0
90012ee2:	ebc7 0202 	rsblt	r2, r7, r2
90012ee6:	4299      	cmp	r1, r3
90012ee8:	bfac      	ite	ge
90012eea:	ebc6 0301 	rsbge	r3, r6, r1
90012eee:	ebc6 0303 	rsblt	r3, r6, r3
90012ef2:	80a2      	strh	r2, [r4, #4]
90012ef4:	80e3      	strh	r3, [r4, #6]
90012ef6:	e7d4      	b.n	90012ea2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90012ef8:	4620      	mov	r0, r4
90012efa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012efe <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90012efe:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90012f02:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90012f06:	b383      	cbz	r3, 90012f6a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90012f08:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012f0a:	b374      	cbz	r4, 90012f6a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90012f0c:	f9b1 5000 	ldrsh.w	r5, [r1]
90012f10:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90012f14:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90012f18:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90012f1c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90012f20:	b303      	cbz	r3, 90012f64 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90012f22:	4668      	mov	r0, sp
90012f24:	1d21      	adds	r1, r4, #4
90012f26:	f8ad 5000 	strh.w	r5, [sp]
90012f2a:	f8ad 6002 	strh.w	r6, [sp, #2]
90012f2e:	f8ad 7004 	strh.w	r7, [sp, #4]
90012f32:	f8ad 8006 	strh.w	r8, [sp, #6]
90012f36:	f7ff ff43 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90012f3a:	4668      	mov	r0, sp
90012f3c:	f7ff ff83 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
90012f40:	b980      	cbnz	r0, 90012f64 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90012f42:	f8bd 3000 	ldrh.w	r3, [sp]
90012f46:	4669      	mov	r1, sp
90012f48:	88a2      	ldrh	r2, [r4, #4]
90012f4a:	4620      	mov	r0, r4
90012f4c:	1a9b      	subs	r3, r3, r2
90012f4e:	88e2      	ldrh	r2, [r4, #6]
90012f50:	f8ad 3000 	strh.w	r3, [sp]
90012f54:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012f58:	1a9b      	subs	r3, r3, r2
90012f5a:	f8ad 3002 	strh.w	r3, [sp, #2]
90012f5e:	6823      	ldr	r3, [r4, #0]
90012f60:	689b      	ldr	r3, [r3, #8]
90012f62:	4798      	blx	r3
90012f64:	69a4      	ldr	r4, [r4, #24]
90012f66:	2c00      	cmp	r4, #0
90012f68:	d1d8      	bne.n	90012f1c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90012f6a:	b002      	add	sp, #8
90012f6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012f70 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90012f70:	b573      	push	{r0, r1, r4, r5, r6, lr}
90012f72:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90012f76:	460d      	mov	r5, r1
90012f78:	4616      	mov	r6, r2
90012f7a:	b323      	cbz	r3, 90012fc6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90012f7c:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012f7e:	b314      	cbz	r4, 90012fc6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90012f80:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90012f84:	b1eb      	cbz	r3, 90012fc2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90012f86:	6828      	ldr	r0, [r5, #0]
90012f88:	466b      	mov	r3, sp
90012f8a:	6869      	ldr	r1, [r5, #4]
90012f8c:	c303      	stmia	r3!, {r0, r1}
90012f8e:	4668      	mov	r0, sp
90012f90:	1d21      	adds	r1, r4, #4
90012f92:	f7ff ff15 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90012f96:	4668      	mov	r0, sp
90012f98:	f7ff ff55 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
90012f9c:	b988      	cbnz	r0, 90012fc2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90012f9e:	f8bd 3000 	ldrh.w	r3, [sp]
90012fa2:	4669      	mov	r1, sp
90012fa4:	88a2      	ldrh	r2, [r4, #4]
90012fa6:	4620      	mov	r0, r4
90012fa8:	1a9b      	subs	r3, r3, r2
90012faa:	88e2      	ldrh	r2, [r4, #6]
90012fac:	f8ad 3000 	strh.w	r3, [sp]
90012fb0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012fb4:	1a9b      	subs	r3, r3, r2
90012fb6:	4632      	mov	r2, r6
90012fb8:	f8ad 3002 	strh.w	r3, [sp, #2]
90012fbc:	6823      	ldr	r3, [r4, #0]
90012fbe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90012fc0:	4798      	blx	r3
90012fc2:	69a4      	ldr	r4, [r4, #24]
90012fc4:	e7db      	b.n	90012f7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
90012fc6:	b002      	add	sp, #8
90012fc8:	bd70      	pop	{r4, r5, r6, pc}

90012fca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90012fca:	6803      	ldr	r3, [r0, #0]
90012fcc:	b513      	push	{r0, r1, r4, lr}
90012fce:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
90012fd2:	2300      	movs	r3, #0
90012fd4:	e9cd 3300 	strd	r3, r3, [sp]
90012fd8:	466b      	mov	r3, sp
90012fda:	47a0      	blx	r4
90012fdc:	b002      	add	sp, #8
90012fde:	bd10      	pop	{r4, pc}

90012fe0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90012fe0:	2301      	movs	r3, #1
90012fe2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90012fe6:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90012fea:	4770      	bx	lr

90012fec <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90012fec:	2301      	movs	r3, #1
90012fee:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90012ff2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90012ff6:	4770      	bx	lr

90012ff8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90012ff8:	6843      	ldr	r3, [r0, #4]
90012ffa:	2201      	movs	r2, #1
90012ffc:	725a      	strb	r2, [r3, #9]
90012ffe:	6840      	ldr	r0, [r0, #4]
90013000:	6803      	ldr	r3, [r0, #0]
90013002:	691b      	ldr	r3, [r3, #16]
90013004:	4718      	bx	r3

90013006 <_ZN8touchgfx3HAL8flushDMAEv>:
90013006:	6840      	ldr	r0, [r0, #4]
90013008:	6803      	ldr	r3, [r0, #0]
9001300a:	689b      	ldr	r3, [r3, #8]
9001300c:	4718      	bx	r3

9001300e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
9001300e:	b530      	push	{r4, r5, lr}
90013010:	b08b      	sub	sp, #44	; 0x2c
90013012:	6804      	ldr	r4, [r0, #0]
90013014:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90013018:	9509      	str	r5, [sp, #36]	; 0x24
9001301a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
9001301e:	9508      	str	r5, [sp, #32]
90013020:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
90013024:	9507      	str	r5, [sp, #28]
90013026:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
9001302a:	9506      	str	r5, [sp, #24]
9001302c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
90013030:	9505      	str	r5, [sp, #20]
90013032:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
90013036:	9504      	str	r5, [sp, #16]
90013038:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
9001303c:	9503      	str	r5, [sp, #12]
9001303e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
90013042:	9502      	str	r5, [sp, #8]
90013044:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
90013048:	e9cd 3500 	strd	r3, r5, [sp]
9001304c:	4613      	mov	r3, r2
9001304e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
90013050:	2200      	movs	r2, #0
90013052:	47a0      	blx	r4
90013054:	b00b      	add	sp, #44	; 0x2c
90013056:	bd30      	pop	{r4, r5, pc}

90013058 <_ZN8touchgfx3HAL10beginFrameEv>:
90013058:	4b04      	ldr	r3, [pc, #16]	; (9001306c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
9001305a:	781b      	ldrb	r3, [r3, #0]
9001305c:	b123      	cbz	r3, 90013068 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
9001305e:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
90013062:	f080 0001 	eor.w	r0, r0, #1
90013066:	4770      	bx	lr
90013068:	2001      	movs	r0, #1
9001306a:	4770      	bx	lr
9001306c:	24039aca 	.word	0x24039aca

90013070 <_ZN8touchgfx3HAL8endFrameEv>:
90013070:	b510      	push	{r4, lr}
90013072:	4604      	mov	r4, r0
90013074:	6840      	ldr	r0, [r0, #4]
90013076:	6803      	ldr	r3, [r0, #0]
90013078:	689b      	ldr	r3, [r3, #8]
9001307a:	4798      	blx	r3
9001307c:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
90013080:	b113      	cbz	r3, 90013088 <_ZN8touchgfx3HAL8endFrameEv+0x18>
90013082:	2301      	movs	r3, #1
90013084:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90013088:	bd10      	pop	{r4, pc}

9001308a <_ZN8touchgfx3HAL10initializeEv>:
9001308a:	b510      	push	{r4, lr}
9001308c:	4604      	mov	r4, r0
9001308e:	f7ee fbd1 	bl	90001834 <_ZN8touchgfx10OSWrappers10initializeEv>
90013092:	f7ed fa35 	bl	90000500 <_ZN8touchgfx4GPIO4initEv>
90013096:	6860      	ldr	r0, [r4, #4]
90013098:	6803      	ldr	r3, [r0, #0]
9001309a:	68db      	ldr	r3, [r3, #12]
9001309c:	4798      	blx	r3
9001309e:	68e0      	ldr	r0, [r4, #12]
900130a0:	6803      	ldr	r3, [r0, #0]
900130a2:	689b      	ldr	r3, [r3, #8]
900130a4:	4798      	blx	r3
900130a6:	6823      	ldr	r3, [r4, #0]
900130a8:	4620      	mov	r0, r4
900130aa:	6f5b      	ldr	r3, [r3, #116]	; 0x74
900130ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900130b0:	4718      	bx	r3
	...

900130b4 <_ZN8touchgfx3HAL4tickEv>:
900130b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900130b6:	6803      	ldr	r3, [r0, #0]
900130b8:	4604      	mov	r4, r0
900130ba:	4d5b      	ldr	r5, [pc, #364]	; (90013228 <_ZN8touchgfx3HAL4tickEv+0x174>)
900130bc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
900130c0:	4798      	blx	r3
900130c2:	2800      	cmp	r0, #0
900130c4:	f000 8095 	beq.w	900131f2 <_ZN8touchgfx3HAL4tickEv+0x13e>
900130c8:	2001      	movs	r0, #1
900130ca:	2600      	movs	r6, #0
900130cc:	f7ed fa42 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900130d0:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
900130d4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
900130d8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
900130dc:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
900130e0:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
900130e4:	b133      	cbz	r3, 900130f4 <_ZN8touchgfx3HAL4tickEv+0x40>
900130e6:	6823      	ldr	r3, [r4, #0]
900130e8:	4620      	mov	r0, r4
900130ea:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
900130ee:	4798      	blx	r3
900130f0:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
900130f4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
900130f8:	2601      	movs	r6, #1
900130fa:	6862      	ldr	r2, [r4, #4]
900130fc:	f083 0301 	eor.w	r3, r3, #1
90013100:	702e      	strb	r6, [r5, #0]
90013102:	7253      	strb	r3, [r2, #9]
90013104:	f005 f930 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
90013108:	6803      	ldr	r3, [r0, #0]
9001310a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9001310c:	4798      	blx	r3
9001310e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90013112:	b90b      	cbnz	r3, 90013118 <_ZN8touchgfx3HAL4tickEv+0x64>
90013114:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
90013118:	f005 f926 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
9001311c:	6803      	ldr	r3, [r0, #0]
9001311e:	695b      	ldr	r3, [r3, #20]
90013120:	4798      	blx	r3
90013122:	6de0      	ldr	r0, [r4, #92]	; 0x5c
90013124:	6803      	ldr	r3, [r0, #0]
90013126:	691b      	ldr	r3, [r3, #16]
90013128:	4798      	blx	r3
9001312a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
9001312e:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
90013132:	3b01      	subs	r3, #1
90013134:	b2db      	uxtb	r3, r3
90013136:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
9001313a:	b10a      	cbz	r2, 90013140 <_ZN8touchgfx3HAL4tickEv+0x8c>
9001313c:	2b00      	cmp	r3, #0
9001313e:	d1eb      	bne.n	90013118 <_ZN8touchgfx3HAL4tickEv+0x64>
90013140:	4a3a      	ldr	r2, [pc, #232]	; (9001322c <_ZN8touchgfx3HAL4tickEv+0x178>)
90013142:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
90013146:	7813      	ldrb	r3, [r2, #0]
90013148:	3301      	adds	r3, #1
9001314a:	b25b      	sxtb	r3, r3
9001314c:	4299      	cmp	r1, r3
9001314e:	7013      	strb	r3, [r2, #0]
90013150:	dc10      	bgt.n	90013174 <_ZN8touchgfx3HAL4tickEv+0xc0>
90013152:	2300      	movs	r3, #0
90013154:	68e0      	ldr	r0, [r4, #12]
90013156:	a902      	add	r1, sp, #8
90013158:	7013      	strb	r3, [r2, #0]
9001315a:	aa03      	add	r2, sp, #12
9001315c:	6803      	ldr	r3, [r0, #0]
9001315e:	68db      	ldr	r3, [r3, #12]
90013160:	4798      	blx	r3
90013162:	6823      	ldr	r3, [r4, #0]
90013164:	2800      	cmp	r0, #0
90013166:	d050      	beq.n	9001320a <_ZN8touchgfx3HAL4tickEv+0x156>
90013168:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
9001316c:	4620      	mov	r0, r4
9001316e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90013172:	4798      	blx	r3
90013174:	2300      	movs	r3, #0
90013176:	6960      	ldr	r0, [r4, #20]
90013178:	f88d 3007 	strb.w	r3, [sp, #7]
9001317c:	b158      	cbz	r0, 90013196 <_ZN8touchgfx3HAL4tickEv+0xe2>
9001317e:	6803      	ldr	r3, [r0, #0]
90013180:	f10d 0107 	add.w	r1, sp, #7
90013184:	68db      	ldr	r3, [r3, #12]
90013186:	4798      	blx	r3
90013188:	b128      	cbz	r0, 90013196 <_ZN8touchgfx3HAL4tickEv+0xe2>
9001318a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9001318c:	f89d 1007 	ldrb.w	r1, [sp, #7]
90013190:	6803      	ldr	r3, [r0, #0]
90013192:	68db      	ldr	r3, [r3, #12]
90013194:	4798      	blx	r3
90013196:	f104 001c 	add.w	r0, r4, #28
9001319a:	f015 fe27 	bl	90028dec <_ZN8touchgfx8Gestures4tickEv>
9001319e:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
900131a2:	b30b      	cbz	r3, 900131e8 <_ZN8touchgfx3HAL4tickEv+0x134>
900131a4:	6920      	ldr	r0, [r4, #16]
900131a6:	6803      	ldr	r3, [r0, #0]
900131a8:	691b      	ldr	r3, [r3, #16]
900131aa:	4798      	blx	r3
900131ac:	6f63      	ldr	r3, [r4, #116]	; 0x74
900131ae:	4606      	mov	r6, r0
900131b0:	b903      	cbnz	r3, 900131b4 <_ZN8touchgfx3HAL4tickEv+0x100>
900131b2:	6760      	str	r0, [r4, #116]	; 0x74
900131b4:	6f63      	ldr	r3, [r4, #116]	; 0x74
900131b6:	4a1e      	ldr	r2, [pc, #120]	; (90013230 <_ZN8touchgfx3HAL4tickEv+0x17c>)
900131b8:	1af3      	subs	r3, r6, r3
900131ba:	4293      	cmp	r3, r2
900131bc:	d914      	bls.n	900131e8 <_ZN8touchgfx3HAL4tickEv+0x134>
900131be:	6920      	ldr	r0, [r4, #16]
900131c0:	6803      	ldr	r3, [r0, #0]
900131c2:	699b      	ldr	r3, [r3, #24]
900131c4:	4798      	blx	r3
900131c6:	6f63      	ldr	r3, [r4, #116]	; 0x74
900131c8:	2264      	movs	r2, #100	; 0x64
900131ca:	1af3      	subs	r3, r6, r3
900131cc:	fbb3 f3f2 	udiv	r3, r3, r2
900131d0:	fbb0 f0f3 	udiv	r0, r0, r3
900131d4:	2800      	cmp	r0, #0
900131d6:	dc1d      	bgt.n	90013214 <_ZN8touchgfx3HAL4tickEv+0x160>
900131d8:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
900131dc:	6920      	ldr	r0, [r4, #16]
900131de:	2100      	movs	r1, #0
900131e0:	6803      	ldr	r3, [r0, #0]
900131e2:	69db      	ldr	r3, [r3, #28]
900131e4:	4798      	blx	r3
900131e6:	6766      	str	r6, [r4, #116]	; 0x74
900131e8:	f005 f8be 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
900131ec:	6803      	ldr	r3, [r0, #0]
900131ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900131f0:	4798      	blx	r3
900131f2:	6823      	ldr	r3, [r4, #0]
900131f4:	4620      	mov	r0, r4
900131f6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
900131fa:	4798      	blx	r3
900131fc:	2001      	movs	r0, #1
900131fe:	f7ed f9dd 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90013202:	2300      	movs	r3, #0
90013204:	702b      	strb	r3, [r5, #0]
90013206:	b004      	add	sp, #16
90013208:	bd70      	pop	{r4, r5, r6, pc}
9001320a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
9001320e:	4620      	mov	r0, r4
90013210:	4798      	blx	r3
90013212:	e7af      	b.n	90013174 <_ZN8touchgfx3HAL4tickEv+0xc0>
90013214:	2863      	cmp	r0, #99	; 0x63
90013216:	bfcb      	itete	gt
90013218:	2300      	movgt	r3, #0
9001321a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
9001321e:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
90013222:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
90013226:	e7d9      	b.n	900131dc <_ZN8touchgfx3HAL4tickEv+0x128>
90013228:	24039ad0 	.word	0x24039ad0
9001322c:	24039ad1 	.word	0x24039ad1
90013230:	05f5e100 	.word	0x05f5e100

90013234 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90013234:	b510      	push	{r4, lr}
90013236:	4604      	mov	r4, r0
90013238:	f7ee fb2e 	bl	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
9001323c:	2200      	movs	r2, #0
9001323e:	6863      	ldr	r3, [r4, #4]
90013240:	729a      	strb	r2, [r3, #10]
90013242:	bd10      	pop	{r4, pc}

90013244 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90013244:	65c1      	str	r1, [r0, #92]	; 0x5c
90013246:	301c      	adds	r0, #28
90013248:	f015 bdce 	b.w	90028de8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

9001324c <_ZN8touchgfx3HAL5touchEll>:
9001324c:	b530      	push	{r4, r5, lr}
9001324e:	b087      	sub	sp, #28
90013250:	4604      	mov	r4, r0
90013252:	a804      	add	r0, sp, #16
90013254:	e9cd 1204 	strd	r1, r2, [sp, #16]
90013258:	f004 fe50 	bl	90017efc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
9001325c:	9b04      	ldr	r3, [sp, #16]
9001325e:	a906      	add	r1, sp, #24
90013260:	a803      	add	r0, sp, #12
90013262:	f8ad 300c 	strh.w	r3, [sp, #12]
90013266:	9b05      	ldr	r3, [sp, #20]
90013268:	f821 3d0a 	strh.w	r3, [r1, #-10]!
9001326c:	f004 fe98 	bl	90017fa0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90013270:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
90013274:	f104 001c 	add.w	r0, r4, #28
90013278:	f8bd 200c 	ldrh.w	r2, [sp, #12]
9001327c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90013280:	b189      	cbz	r1, 900132a6 <_ZN8touchgfx3HAL5touchEll+0x5a>
90013282:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
90013286:	9300      	str	r3, [sp, #0]
90013288:	4613      	mov	r3, r2
9001328a:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
9001328e:	462a      	mov	r2, r5
90013290:	f015 fdba 	bl	90028e08 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90013294:	b128      	cbz	r0, 900132a2 <_ZN8touchgfx3HAL5touchEll+0x56>
90013296:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001329a:	6623      	str	r3, [r4, #96]	; 0x60
9001329c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900132a0:	6663      	str	r3, [r4, #100]	; 0x64
900132a2:	b007      	add	sp, #28
900132a4:	bd30      	pop	{r4, r5, pc}
900132a6:	f015 fdef 	bl	90028e88 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900132aa:	2301      	movs	r3, #1
900132ac:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
900132b0:	e7f1      	b.n	90013296 <_ZN8touchgfx3HAL5touchEll+0x4a>

900132b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
900132b2:	b510      	push	{r4, lr}
900132b4:	2b00      	cmp	r3, #0
900132b6:	d046      	beq.n	90013346 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900132b8:	ea81 0002 	eor.w	r0, r1, r2
900132bc:	07c4      	lsls	r4, r0, #31
900132be:	d508      	bpl.n	900132d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
900132c0:	440b      	add	r3, r1
900132c2:	3a01      	subs	r2, #1
900132c4:	428b      	cmp	r3, r1
900132c6:	d93e      	bls.n	90013346 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900132c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900132cc:	f801 0b01 	strb.w	r0, [r1], #1
900132d0:	e7f8      	b.n	900132c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
900132d2:	07d0      	lsls	r0, r2, #31
900132d4:	bf42      	ittt	mi
900132d6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900132da:	f103 33ff 	addmi.w	r3, r3, #4294967295
900132de:	f801 0b01 	strbmi.w	r0, [r1], #1
900132e2:	2b01      	cmp	r3, #1
900132e4:	d911      	bls.n	9001330a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900132e6:	ea81 0402 	eor.w	r4, r1, r2
900132ea:	4610      	mov	r0, r2
900132ec:	07a4      	lsls	r4, r4, #30
900132ee:	d022      	beq.n	90013336 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
900132f0:	f023 0401 	bic.w	r4, r3, #1
900132f4:	440c      	add	r4, r1
900132f6:	428c      	cmp	r4, r1
900132f8:	4602      	mov	r2, r0
900132fa:	d904      	bls.n	90013306 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
900132fc:	8812      	ldrh	r2, [r2, #0]
900132fe:	3002      	adds	r0, #2
90013300:	f821 2b02 	strh.w	r2, [r1], #2
90013304:	e7f7      	b.n	900132f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90013306:	f003 0301 	and.w	r3, r3, #1
9001330a:	f023 0003 	bic.w	r0, r3, #3
9001330e:	4408      	add	r0, r1
90013310:	4288      	cmp	r0, r1
90013312:	4614      	mov	r4, r2
90013314:	d904      	bls.n	90013320 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90013316:	6824      	ldr	r4, [r4, #0]
90013318:	3204      	adds	r2, #4
9001331a:	f841 4b04 	str.w	r4, [r1], #4
9001331e:	e7f7      	b.n	90013310 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90013320:	f003 0303 	and.w	r3, r3, #3
90013324:	3a01      	subs	r2, #1
90013326:	440b      	add	r3, r1
90013328:	428b      	cmp	r3, r1
9001332a:	d90c      	bls.n	90013346 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
9001332c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90013330:	f801 0b01 	strb.w	r0, [r1], #1
90013334:	e7f8      	b.n	90013328 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90013336:	0790      	lsls	r0, r2, #30
90013338:	d0e7      	beq.n	9001330a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001333a:	f832 0b02 	ldrh.w	r0, [r2], #2
9001333e:	3b02      	subs	r3, #2
90013340:	f821 0b02 	strh.w	r0, [r1], #2
90013344:	e7e1      	b.n	9001330a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90013346:	2001      	movs	r0, #1
90013348:	bd10      	pop	{r4, pc}

9001334a <_ZN8touchgfx3HAL7noTouchEv>:
9001334a:	b510      	push	{r4, lr}
9001334c:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
90013350:	4604      	mov	r4, r0
90013352:	b153      	cbz	r3, 9001336a <_ZN8touchgfx3HAL7noTouchEv+0x20>
90013354:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
90013358:	2101      	movs	r1, #1
9001335a:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
9001335e:	301c      	adds	r0, #28
90013360:	f015 fd92 	bl	90028e88 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90013364:	2300      	movs	r3, #0
90013366:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
9001336a:	bd10      	pop	{r4, pc}

9001336c <_ZN8touchgfx8Drawable5setXYEss>:
9001336c:	b570      	push	{r4, r5, r6, lr}
9001336e:	6803      	ldr	r3, [r0, #0]
90013370:	4604      	mov	r4, r0
90013372:	4615      	mov	r5, r2
90013374:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90013376:	4798      	blx	r3
90013378:	6823      	ldr	r3, [r4, #0]
9001337a:	4629      	mov	r1, r5
9001337c:	4620      	mov	r0, r4
9001337e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90013380:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013384:	4718      	bx	r3
	...

90013388 <_ZN8touchgfx3HAL3lcdEv>:
90013388:	4b04      	ldr	r3, [pc, #16]	; (9001339c <_ZN8touchgfx3HAL3lcdEv+0x14>)
9001338a:	681b      	ldr	r3, [r3, #0]
9001338c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013390:	b10a      	cbz	r2, 90013396 <_ZN8touchgfx3HAL3lcdEv+0xe>
90013392:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90013394:	b900      	cbnz	r0, 90013398 <_ZN8touchgfx3HAL3lcdEv+0x10>
90013396:	6898      	ldr	r0, [r3, #8]
90013398:	4770      	bx	lr
9001339a:	bf00      	nop
9001339c:	24039acc 	.word	0x24039acc

900133a0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
900133a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900133a4:	b085      	sub	sp, #20
900133a6:	4604      	mov	r4, r0
900133a8:	2000      	movs	r0, #0
900133aa:	4699      	mov	r9, r3
900133ac:	ad04      	add	r5, sp, #16
900133ae:	460f      	mov	r7, r1
900133b0:	4690      	mov	r8, r2
900133b2:	f845 0d04 	str.w	r0, [r5, #-4]!
900133b6:	69a0      	ldr	r0, [r4, #24]
900133b8:	6806      	ldr	r6, [r0, #0]
900133ba:	9501      	str	r5, [sp, #4]
900133bc:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
900133c0:	9500      	str	r5, [sp, #0]
900133c2:	6835      	ldr	r5, [r6, #0]
900133c4:	47a8      	blx	r5
900133c6:	4d10      	ldr	r5, [pc, #64]	; (90013408 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
900133c8:	4606      	mov	r6, r0
900133ca:	f8a5 9000 	strh.w	r9, [r5]
900133ce:	f7ff ffdb 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
900133d2:	6803      	ldr	r3, [r0, #0]
900133d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900133d6:	4798      	blx	r3
900133d8:	b128      	cbz	r0, 900133e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
900133da:	2801      	cmp	r0, #1
900133dc:	d00b      	beq.n	900133f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
900133de:	4630      	mov	r0, r6
900133e0:	b005      	add	sp, #20
900133e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900133e6:	882b      	ldrh	r3, [r5, #0]
900133e8:	fb08 7203 	mla	r2, r8, r3, r7
900133ec:	9b03      	ldr	r3, [sp, #12]
900133ee:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
900133f2:	63e3      	str	r3, [r4, #60]	; 0x3c
900133f4:	e7f3      	b.n	900133de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900133f6:	882a      	ldrh	r2, [r5, #0]
900133f8:	9b03      	ldr	r3, [sp, #12]
900133fa:	fb08 7202 	mla	r2, r8, r2, r7
900133fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90013402:	1a9a      	subs	r2, r3, r2
90013404:	63e2      	str	r2, [r4, #60]	; 0x3c
90013406:	e7ea      	b.n	900133de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90013408:	24039ac6 	.word	0x24039ac6

9001340c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
9001340c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001340e:	b08b      	sub	sp, #44	; 0x2c
90013410:	4617      	mov	r7, r2
90013412:	4604      	mov	r4, r0
90013414:	460e      	mov	r6, r1
90013416:	461d      	mov	r5, r3
90013418:	f7ff ffb6 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
9001341c:	6803      	ldr	r3, [r0, #0]
9001341e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013420:	4798      	blx	r3
90013422:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90013426:	9007      	str	r0, [sp, #28]
90013428:	4631      	mov	r1, r6
9001342a:	6822      	ldr	r2, [r4, #0]
9001342c:	e9cd 0308 	strd	r0, r3, [sp, #32]
90013430:	4b0c      	ldr	r3, [pc, #48]	; (90013464 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90013432:	4620      	mov	r0, r4
90013434:	881b      	ldrh	r3, [r3, #0]
90013436:	9306      	str	r3, [sp, #24]
90013438:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
9001343c:	9305      	str	r3, [sp, #20]
9001343e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
90013442:	9304      	str	r3, [sp, #16]
90013444:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013448:	9303      	str	r3, [sp, #12]
9001344a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001344e:	9302      	str	r3, [sp, #8]
90013450:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90013454:	e9cd 5300 	strd	r5, r3, [sp]
90013458:	463b      	mov	r3, r7
9001345a:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
9001345c:	2200      	movs	r2, #0
9001345e:	47a8      	blx	r5
90013460:	b00b      	add	sp, #44	; 0x2c
90013462:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013464:	24039ac6 	.word	0x24039ac6

90013468 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90013468:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001346c:	4698      	mov	r8, r3
9001346e:	6803      	ldr	r3, [r0, #0]
90013470:	b08b      	sub	sp, #44	; 0x2c
90013472:	4617      	mov	r7, r2
90013474:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
90013476:	460e      	mov	r6, r1
90013478:	4b13      	ldr	r3, [pc, #76]	; (900134c8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
9001347a:	4604      	mov	r4, r0
9001347c:	f8b3 9000 	ldrh.w	r9, [r3]
90013480:	f7ff ff82 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
90013484:	6803      	ldr	r3, [r0, #0]
90013486:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013488:	4798      	blx	r3
9001348a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
9001348e:	2200      	movs	r2, #0
90013490:	4631      	mov	r1, r6
90013492:	e9cd 0308 	strd	r0, r3, [sp, #32]
90013496:	2302      	movs	r3, #2
90013498:	4620      	mov	r0, r4
9001349a:	e9cd 9306 	strd	r9, r3, [sp, #24]
9001349e:	2301      	movs	r3, #1
900134a0:	9305      	str	r3, [sp, #20]
900134a2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900134a6:	9304      	str	r3, [sp, #16]
900134a8:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
900134ac:	9303      	str	r3, [sp, #12]
900134ae:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900134b2:	9302      	str	r3, [sp, #8]
900134b4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900134b8:	e9cd 8300 	strd	r8, r3, [sp]
900134bc:	463b      	mov	r3, r7
900134be:	47a8      	blx	r5
900134c0:	b00b      	add	sp, #44	; 0x2c
900134c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900134c6:	bf00      	nop
900134c8:	24039ac6 	.word	0x24039ac6

900134cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
900134cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900134d0:	4698      	mov	r8, r3
900134d2:	6803      	ldr	r3, [r0, #0]
900134d4:	b087      	sub	sp, #28
900134d6:	460e      	mov	r6, r1
900134d8:	6d9d      	ldr	r5, [r3, #88]	; 0x58
900134da:	4617      	mov	r7, r2
900134dc:	4b0f      	ldr	r3, [pc, #60]	; (9001351c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
900134de:	4604      	mov	r4, r0
900134e0:	f8b3 9000 	ldrh.w	r9, [r3]
900134e4:	f7ff ff50 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
900134e8:	6803      	ldr	r3, [r0, #0]
900134ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900134ec:	4798      	blx	r3
900134ee:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
900134f2:	463a      	mov	r2, r7
900134f4:	4631      	mov	r1, r6
900134f6:	f8cd 900c 	str.w	r9, [sp, #12]
900134fa:	e9cd 0304 	strd	r0, r3, [sp, #16]
900134fe:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90013502:	4620      	mov	r0, r4
90013504:	9302      	str	r3, [sp, #8]
90013506:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
9001350a:	9301      	str	r3, [sp, #4]
9001350c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90013510:	9300      	str	r3, [sp, #0]
90013512:	4643      	mov	r3, r8
90013514:	47a8      	blx	r5
90013516:	b007      	add	sp, #28
90013518:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001351c:	24039ac6 	.word	0x24039ac6

90013520 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90013520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013524:	4604      	mov	r4, r0
90013526:	b08f      	sub	sp, #60	; 0x3c
90013528:	4610      	mov	r0, r2
9001352a:	460d      	mov	r5, r1
9001352c:	4691      	mov	r9, r2
9001352e:	461e      	mov	r6, r3
90013530:	f008 f830 	bl	9001b594 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90013534:	2800      	cmp	r0, #0
90013536:	f000 809d 	beq.w	90013674 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
9001353a:	6823      	ldr	r3, [r4, #0]
9001353c:	4620      	mov	r0, r4
9001353e:	f8df b198 	ldr.w	fp, [pc, #408]	; 900136d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90013542:	f10d 0838 	add.w	r8, sp, #56	; 0x38
90013546:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90013548:	4798      	blx	r3
9001354a:	6823      	ldr	r3, [r4, #0]
9001354c:	4620      	mov	r0, r4
9001354e:	f8df a18c 	ldr.w	sl, [pc, #396]	; 900136dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90013552:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013554:	4798      	blx	r3
90013556:	f8bb 3000 	ldrh.w	r3, [fp]
9001355a:	4f5c      	ldr	r7, [pc, #368]	; (900136cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001355c:	9301      	str	r3, [sp, #4]
9001355e:	f8ba 3000 	ldrh.w	r3, [sl]
90013562:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90013566:	4640      	mov	r0, r8
90013568:	9302      	str	r3, [sp, #8]
9001356a:	883b      	ldrh	r3, [r7, #0]
9001356c:	9303      	str	r3, [sp, #12]
9001356e:	4b58      	ldr	r3, [pc, #352]	; (900136d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90013570:	881a      	ldrh	r2, [r3, #0]
90013572:	9305      	str	r3, [sp, #20]
90013574:	9204      	str	r2, [sp, #16]
90013576:	f008 f8a1 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
9001357a:	8038      	strh	r0, [r7, #0]
9001357c:	4640      	mov	r0, r8
9001357e:	f008 f8d1 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013582:	9b05      	ldr	r3, [sp, #20]
90013584:	b280      	uxth	r0, r0
90013586:	8018      	strh	r0, [r3, #0]
90013588:	4b52      	ldr	r3, [pc, #328]	; (900136d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
9001358a:	781b      	ldrb	r3, [r3, #0]
9001358c:	2b00      	cmp	r3, #0
9001358e:	d174      	bne.n	9001367a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90013590:	883b      	ldrh	r3, [r7, #0]
90013592:	f8aa 0000 	strh.w	r0, [sl]
90013596:	f8ab 3000 	strh.w	r3, [fp]
9001359a:	4648      	mov	r0, r9
9001359c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
900135a0:	f007 fff8 	bl	9001b594 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900135a4:	2200      	movs	r2, #0
900135a6:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
900135aa:	4611      	mov	r1, r2
900135ac:	4628      	mov	r0, r5
900135ae:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
900135b2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
900135b6:	f7ff fed9 	bl	9001336c <_ZN8touchgfx8Drawable5setXYEss>
900135ba:	2301      	movs	r3, #1
900135bc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
900135c0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
900135c4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900135c8:	2b00      	cmp	r3, #0
900135ca:	dd5c      	ble.n	90013686 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900135cc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900135d0:	2b00      	cmp	r3, #0
900135d2:	dd58      	ble.n	90013686 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900135d4:	462a      	mov	r2, r5
900135d6:	ab0a      	add	r3, sp, #40	; 0x28
900135d8:	f852 0f04 	ldr.w	r0, [r2, #4]!
900135dc:	6851      	ldr	r1, [r2, #4]
900135de:	c303      	stmia	r3!, {r0, r1}
900135e0:	4631      	mov	r1, r6
900135e2:	a80a      	add	r0, sp, #40	; 0x28
900135e4:	f7ff fbec 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
900135e8:	4b38      	ldr	r3, [pc, #224]	; (900136cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900135ea:	2100      	movs	r1, #0
900135ec:	f9b3 2000 	ldrsh.w	r2, [r3]
900135f0:	4b37      	ldr	r3, [pc, #220]	; (900136d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900135f2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
900135f6:	aa0a      	add	r2, sp, #40	; 0x28
900135f8:	f9b3 3000 	ldrsh.w	r3, [r3]
900135fc:	910c      	str	r1, [sp, #48]	; 0x30
900135fe:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90013602:	ab08      	add	r3, sp, #32
90013604:	e892 0003 	ldmia.w	r2, {r0, r1}
90013608:	e883 0003 	stmia.w	r3, {r0, r1}
9001360c:	4618      	mov	r0, r3
9001360e:	a90c      	add	r1, sp, #48	; 0x30
90013610:	f7ff fbd6 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90013614:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90013616:	2b00      	cmp	r3, #0
90013618:	d13c      	bne.n	90013694 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
9001361a:	2000      	movs	r0, #0
9001361c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
90013620:	2600      	movs	r6, #0
90013622:	696b      	ldr	r3, [r5, #20]
90013624:	a908      	add	r1, sp, #32
90013626:	682a      	ldr	r2, [r5, #0]
90013628:	4628      	mov	r0, r5
9001362a:	9305      	str	r3, [sp, #20]
9001362c:	616e      	str	r6, [r5, #20]
9001362e:	6892      	ldr	r2, [r2, #8]
90013630:	4790      	blx	r2
90013632:	9b05      	ldr	r3, [sp, #20]
90013634:	4652      	mov	r2, sl
90013636:	4649      	mov	r1, r9
90013638:	616b      	str	r3, [r5, #20]
9001363a:	4628      	mov	r0, r5
9001363c:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
90013640:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
90013644:	f7ff fe92 	bl	9001336c <_ZN8touchgfx8Drawable5setXYEss>
90013648:	9a01      	ldr	r2, [sp, #4]
9001364a:	4b23      	ldr	r3, [pc, #140]	; (900136d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
9001364c:	4620      	mov	r0, r4
9001364e:	801a      	strh	r2, [r3, #0]
90013650:	9a02      	ldr	r2, [sp, #8]
90013652:	4b22      	ldr	r3, [pc, #136]	; (900136dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90013654:	801a      	strh	r2, [r3, #0]
90013656:	9a03      	ldr	r2, [sp, #12]
90013658:	4b1c      	ldr	r3, [pc, #112]	; (900136cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001365a:	801a      	strh	r2, [r3, #0]
9001365c:	4b1c      	ldr	r3, [pc, #112]	; (900136d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
9001365e:	9a04      	ldr	r2, [sp, #16]
90013660:	801a      	strh	r2, [r3, #0]
90013662:	6823      	ldr	r3, [r4, #0]
90013664:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
90013668:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001366a:	4798      	blx	r3
9001366c:	6823      	ldr	r3, [r4, #0]
9001366e:	4620      	mov	r0, r4
90013670:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013672:	4798      	blx	r3
90013674:	b00f      	add	sp, #60	; 0x3c
90013676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001367a:	883b      	ldrh	r3, [r7, #0]
9001367c:	f8ab 0000 	strh.w	r0, [fp]
90013680:	f8aa 3000 	strh.w	r3, [sl]
90013684:	e789      	b.n	9001359a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90013686:	462a      	mov	r2, r5
90013688:	ab0a      	add	r3, sp, #40	; 0x28
9001368a:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001368e:	6851      	ldr	r1, [r2, #4]
90013690:	c303      	stmia	r3!, {r0, r1}
90013692:	e7a9      	b.n	900135e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90013694:	a807      	add	r0, sp, #28
90013696:	f008 f981 	bl	9001b99c <_ZNK8touchgfx6Bitmap9getFormatEv>
9001369a:	4606      	mov	r6, r0
9001369c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9001369e:	6803      	ldr	r3, [r0, #0]
900136a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900136a2:	4798      	blx	r3
900136a4:	4286      	cmp	r6, r0
900136a6:	d1b8      	bne.n	9001361a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
900136a8:	f7ff fe6e 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
900136ac:	6803      	ldr	r3, [r0, #0]
900136ae:	4606      	mov	r6, r0
900136b0:	a807      	add	r0, sp, #28
900136b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900136b4:	9305      	str	r3, [sp, #20]
900136b6:	f008 f971 	bl	9001b99c <_ZNK8touchgfx6Bitmap9getFormatEv>
900136ba:	9b05      	ldr	r3, [sp, #20]
900136bc:	4601      	mov	r1, r0
900136be:	4630      	mov	r0, r6
900136c0:	4798      	blx	r3
900136c2:	f080 0001 	eor.w	r0, r0, #1
900136c6:	b2c0      	uxtb	r0, r0
900136c8:	e7a8      	b.n	9001361c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
900136ca:	bf00      	nop
900136cc:	24039ac0 	.word	0x24039ac0
900136d0:	24039ac2 	.word	0x24039ac2
900136d4:	24039ac4 	.word	0x24039ac4
900136d8:	24039ac6 	.word	0x24039ac6
900136dc:	24039ac8 	.word	0x24039ac8

900136e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
900136e0:	4b07      	ldr	r3, [pc, #28]	; (90013700 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
900136e2:	b510      	push	{r4, lr}
900136e4:	781b      	ldrb	r3, [r3, #0]
900136e6:	4604      	mov	r4, r0
900136e8:	b13b      	cbz	r3, 900136fa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
900136ea:	6803      	ldr	r3, [r0, #0]
900136ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900136ee:	4798      	blx	r3
900136f0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
900136f2:	4283      	cmp	r3, r0
900136f4:	d101      	bne.n	900136fa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
900136f6:	6c20      	ldr	r0, [r4, #64]	; 0x40
900136f8:	bd10      	pop	{r4, pc}
900136fa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
900136fc:	e7fc      	b.n	900136f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
900136fe:	bf00      	nop
90013700:	24039aca 	.word	0x24039aca

90013704 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90013704:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013708:	461d      	mov	r5, r3
9001370a:	b08a      	sub	sp, #40	; 0x28
9001370c:	f44f 6380 	mov.w	r3, #1024	; 0x400
90013710:	4690      	mov	r8, r2
90013712:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
90013716:	2400      	movs	r4, #0
90013718:	4607      	mov	r7, r0
9001371a:	fb06 8505 	mla	r5, r6, r5, r8
9001371e:	9404      	str	r4, [sp, #16]
90013720:	f88d 4020 	strb.w	r4, [sp, #32]
90013724:	e9cd 3101 	strd	r3, r1, [sp, #4]
90013728:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001372c:	f8ad 3018 	strh.w	r3, [sp, #24]
90013730:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90013734:	f8ad 301a 	strh.w	r3, [sp, #26]
90013738:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9001373c:	f8ad 301c 	strh.w	r3, [sp, #28]
90013740:	f7ff ffce 	bl	900136e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013744:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90013748:	6878      	ldr	r0, [r7, #4]
9001374a:	f8ad 601e 	strh.w	r6, [sp, #30]
9001374e:	a901      	add	r1, sp, #4
90013750:	9505      	str	r5, [sp, #20]
90013752:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90013756:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
9001375a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
9001375e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
90013762:	6803      	ldr	r3, [r0, #0]
90013764:	685b      	ldr	r3, [r3, #4]
90013766:	4798      	blx	r3
90013768:	b00a      	add	sp, #40	; 0x28
9001376a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001376e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
9001376e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013772:	b08b      	sub	sp, #44	; 0x2c
90013774:	2400      	movs	r4, #0
90013776:	4691      	mov	r9, r2
90013778:	461d      	mov	r5, r3
9001377a:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
9001377e:	f44f 6300 	mov.w	r3, #2048	; 0x800
90013782:	4688      	mov	r8, r1
90013784:	4607      	mov	r7, r0
90013786:	9404      	str	r4, [sp, #16]
90013788:	fb06 9505 	mla	r5, r6, r5, r9
9001378c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90013790:	f7ff ffa6 	bl	900136e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013794:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013798:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001379c:	6878      	ldr	r0, [r7, #4]
9001379e:	f8ad 3018 	strh.w	r3, [sp, #24]
900137a2:	a901      	add	r1, sp, #4
900137a4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900137a8:	9505      	str	r5, [sp, #20]
900137aa:	f8ad 301a 	strh.w	r3, [sp, #26]
900137ae:	f8ad 401c 	strh.w	r4, [sp, #28]
900137b2:	f8ad 601e 	strh.w	r6, [sp, #30]
900137b6:	f8cd 8010 	str.w	r8, [sp, #16]
900137ba:	f8ad 4020 	strh.w	r4, [sp, #32]
900137be:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900137c2:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
900137c6:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
900137ca:	6803      	ldr	r3, [r0, #0]
900137cc:	685b      	ldr	r3, [r3, #4]
900137ce:	4798      	blx	r3
900137d0:	b00b      	add	sp, #44	; 0x2c
900137d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

900137d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
900137d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900137dc:	b08a      	sub	sp, #40	; 0x28
900137de:	4698      	mov	r8, r3
900137e0:	2300      	movs	r3, #0
900137e2:	4606      	mov	r6, r0
900137e4:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
900137e8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
900137ec:	2d0b      	cmp	r5, #11
900137ee:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
900137f2:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
900137f6:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
900137fa:	9304      	str	r3, [sp, #16]
900137fc:	d137      	bne.n	9001386e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
900137fe:	2380      	movs	r3, #128	; 0x80
90013800:	f88d 0020 	strb.w	r0, [sp, #32]
90013804:	4630      	mov	r0, r6
90013806:	9203      	str	r2, [sp, #12]
90013808:	e9cd 3101 	strd	r3, r1, [sp, #4]
9001380c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90013810:	f8ad 3018 	strh.w	r3, [sp, #24]
90013814:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013818:	f8ad 301a 	strh.w	r3, [sp, #26]
9001381c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90013820:	f8ad 301c 	strh.w	r3, [sp, #28]
90013824:	f7ff ff5c 	bl	900136e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013828:	2c0b      	cmp	r4, #11
9001382a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
9001382e:	f8ad 701e 	strh.w	r7, [sp, #30]
90013832:	bf94      	ite	ls
90013834:	4b19      	ldrls	r3, [pc, #100]	; (9001389c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90013836:	2100      	movhi	r1, #0
90013838:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
9001383c:	bf98      	it	ls
9001383e:	5d19      	ldrbls	r1, [r3, r4]
90013840:	fb02 8307 	mla	r3, r2, r7, r8
90013844:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90013848:	10c9      	asrs	r1, r1, #3
9001384a:	fb01 0003 	mla	r0, r1, r3, r0
9001384e:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
90013852:	a901      	add	r1, sp, #4
90013854:	9005      	str	r0, [sp, #20]
90013856:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
9001385a:	2300      	movs	r3, #0
9001385c:	6870      	ldr	r0, [r6, #4]
9001385e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90013862:	6803      	ldr	r3, [r0, #0]
90013864:	685b      	ldr	r3, [r3, #4]
90013866:	4798      	blx	r3
90013868:	b00a      	add	sp, #40	; 0x28
9001386a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001386e:	2d02      	cmp	r5, #2
90013870:	d109      	bne.n	90013886 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90013872:	28ff      	cmp	r0, #255	; 0xff
90013874:	d105      	bne.n	90013882 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90013876:	f1bc 0f00 	cmp.w	ip, #0
9001387a:	bf14      	ite	ne
9001387c:	2340      	movne	r3, #64	; 0x40
9001387e:	2320      	moveq	r3, #32
90013880:	e7be      	b.n	90013800 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013882:	2340      	movs	r3, #64	; 0x40
90013884:	e7bc      	b.n	90013800 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013886:	28ff      	cmp	r0, #255	; 0xff
90013888:	d105      	bne.n	90013896 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
9001388a:	f1bc 0f00 	cmp.w	ip, #0
9001388e:	bf14      	ite	ne
90013890:	2304      	movne	r3, #4
90013892:	2301      	moveq	r3, #1
90013894:	e7b4      	b.n	90013800 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013896:	2304      	movs	r3, #4
90013898:	e7b2      	b.n	90013800 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001389a:	bf00      	nop
9001389c:	9002d728 	.word	0x9002d728

900138a0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
900138a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900138a4:	b08b      	sub	sp, #44	; 0x2c
900138a6:	461d      	mov	r5, r3
900138a8:	2400      	movs	r4, #0
900138aa:	4688      	mov	r8, r1
900138ac:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
900138b0:	4693      	mov	fp, r2
900138b2:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
900138b6:	4607      	mov	r7, r0
900138b8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900138bc:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
900138c0:	9404      	str	r4, [sp, #16]
900138c2:	bf14      	ite	ne
900138c4:	2308      	movne	r3, #8
900138c6:	2302      	moveq	r3, #2
900138c8:	fb05 b50a 	mla	r5, r5, sl, fp
900138cc:	e9cd 3401 	strd	r3, r4, [sp, #4]
900138d0:	f7ff ff06 	bl	900136e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900138d4:	2e0b      	cmp	r6, #11
900138d6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
900138da:	a901      	add	r1, sp, #4
900138dc:	bf98      	it	ls
900138de:	4b13      	ldrls	r3, [pc, #76]	; (9001392c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
900138e0:	f8ad a01e 	strh.w	sl, [sp, #30]
900138e4:	bf98      	it	ls
900138e6:	5d9c      	ldrbls	r4, [r3, r6]
900138e8:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
900138ec:	10e4      	asrs	r4, r4, #3
900138ee:	f8cd 8010 	str.w	r8, [sp, #16]
900138f2:	f8ad 3018 	strh.w	r3, [sp, #24]
900138f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
900138fa:	fb04 0405 	mla	r4, r4, r5, r0
900138fe:	6878      	ldr	r0, [r7, #4]
90013900:	f8ad 301a 	strh.w	r3, [sp, #26]
90013904:	2300      	movs	r3, #0
90013906:	9405      	str	r4, [sp, #20]
90013908:	f8ad 301c 	strh.w	r3, [sp, #28]
9001390c:	f88d 9020 	strb.w	r9, [sp, #32]
90013910:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
90013914:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90013918:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
9001391c:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
90013920:	6803      	ldr	r3, [r0, #0]
90013922:	685b      	ldr	r3, [r3, #4]
90013924:	4798      	blx	r3
90013926:	b00b      	add	sp, #44	; 0x2c
90013928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001392c:	9002d728 	.word	0x9002d728

90013930 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90013930:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013934:	461e      	mov	r6, r3
90013936:	4b0a      	ldr	r3, [pc, #40]	; (90013960 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90013938:	460f      	mov	r7, r1
9001393a:	4690      	mov	r8, r2
9001393c:	881d      	ldrh	r5, [r3, #0]
9001393e:	f7ff fd23 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
90013942:	6803      	ldr	r3, [r0, #0]
90013944:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013946:	4798      	blx	r3
90013948:	280b      	cmp	r0, #11
9001394a:	bf96      	itet	ls
9001394c:	4b05      	ldrls	r3, [pc, #20]	; (90013964 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
9001394e:	2400      	movhi	r4, #0
90013950:	5c1c      	ldrbls	r4, [r3, r0]
90013952:	fb08 7005 	mla	r0, r8, r5, r7
90013956:	10e4      	asrs	r4, r4, #3
90013958:	fb04 6000 	mla	r0, r4, r0, r6
9001395c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013960:	24039ac6 	.word	0x24039ac6
90013964:	9002d728 	.word	0x9002d728

90013968 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90013968:	b5f0      	push	{r4, r5, r6, r7, lr}
9001396a:	b08b      	sub	sp, #44	; 0x2c
9001396c:	461f      	mov	r7, r3
9001396e:	4604      	mov	r4, r0
90013970:	4616      	mov	r6, r2
90013972:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90013976:	2500      	movs	r5, #0
90013978:	e9cd 3101 	strd	r3, r1, [sp, #4]
9001397c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90013980:	9504      	str	r5, [sp, #16]
90013982:	f8ad 3018 	strh.w	r3, [sp, #24]
90013986:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001398a:	f8ad 301a 	strh.w	r3, [sp, #26]
9001398e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013992:	f8ad 301c 	strh.w	r3, [sp, #28]
90013996:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
9001399a:	f88d 3020 	strb.w	r3, [sp, #32]
9001399e:	f7ff fe9f 	bl	900136e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900139a2:	463a      	mov	r2, r7
900139a4:	4631      	mov	r1, r6
900139a6:	4603      	mov	r3, r0
900139a8:	4620      	mov	r0, r4
900139aa:	f7ff ffc1 	bl	90013930 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900139ae:	4b0e      	ldr	r3, [pc, #56]	; (900139e8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
900139b0:	9005      	str	r0, [sp, #20]
900139b2:	881b      	ldrh	r3, [r3, #0]
900139b4:	f8ad 301e 	strh.w	r3, [sp, #30]
900139b8:	f7ff fce6 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
900139bc:	6803      	ldr	r3, [r0, #0]
900139be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900139c0:	4798      	blx	r3
900139c2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900139c4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
900139c8:	a901      	add	r1, sp, #4
900139ca:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
900139ce:	9304      	str	r3, [sp, #16]
900139d0:	6860      	ldr	r0, [r4, #4]
900139d2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
900139d6:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
900139da:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
900139de:	6803      	ldr	r3, [r0, #0]
900139e0:	685b      	ldr	r3, [r3, #4]
900139e2:	4798      	blx	r3
900139e4:	b00b      	add	sp, #44	; 0x2c
900139e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
900139e8:	24039ac6 	.word	0x24039ac6

900139ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
900139ec:	b5f0      	push	{r4, r5, r6, r7, lr}
900139ee:	b08d      	sub	sp, #52	; 0x34
900139f0:	2501      	movs	r5, #1
900139f2:	4604      	mov	r4, r0
900139f4:	466b      	mov	r3, sp
900139f6:	9503      	str	r5, [sp, #12]
900139f8:	e883 0006 	stmia.w	r3, {r1, r2}
900139fc:	2300      	movs	r3, #0
900139fe:	f8bd 6000 	ldrh.w	r6, [sp]
90013a02:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90013a06:	9306      	str	r3, [sp, #24]
90013a08:	6803      	ldr	r3, [r0, #0]
90013a0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90013a0c:	4798      	blx	r3
90013a0e:	463a      	mov	r2, r7
90013a10:	4631      	mov	r1, r6
90013a12:	4603      	mov	r3, r0
90013a14:	4620      	mov	r0, r4
90013a16:	f7ff ff8b 	bl	90013930 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90013a1a:	6c63      	ldr	r3, [r4, #68]	; 0x44
90013a1c:	9004      	str	r0, [sp, #16]
90013a1e:	9307      	str	r3, [sp, #28]
90013a20:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90013a24:	f8ad 3020 	strh.w	r3, [sp, #32]
90013a28:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90013a2c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90013a30:	4b0e      	ldr	r3, [pc, #56]	; (90013a6c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90013a32:	881b      	ldrh	r3, [r3, #0]
90013a34:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90013a38:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90013a3c:	f7ff fca4 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
90013a40:	6803      	ldr	r3, [r0, #0]
90013a42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013a44:	4798      	blx	r3
90013a46:	23ff      	movs	r3, #255	; 0xff
90013a48:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90013a4c:	a903      	add	r1, sp, #12
90013a4e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90013a52:	6860      	ldr	r0, [r4, #4]
90013a54:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90013a58:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90013a5c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90013a60:	6803      	ldr	r3, [r0, #0]
90013a62:	685b      	ldr	r3, [r3, #4]
90013a64:	4798      	blx	r3
90013a66:	6c60      	ldr	r0, [r4, #68]	; 0x44
90013a68:	b00d      	add	sp, #52	; 0x34
90013a6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013a6c:	24039ac6 	.word	0x24039ac6

90013a70 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90013a70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013a74:	b08c      	sub	sp, #48	; 0x30
90013a76:	461e      	mov	r6, r3
90013a78:	2300      	movs	r3, #0
90013a7a:	4604      	mov	r4, r0
90013a7c:	466d      	mov	r5, sp
90013a7e:	9306      	str	r3, [sp, #24]
90013a80:	6803      	ldr	r3, [r0, #0]
90013a82:	e885 0006 	stmia.w	r5, {r1, r2}
90013a86:	2501      	movs	r5, #1
90013a88:	f8bd 7000 	ldrh.w	r7, [sp]
90013a8c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90013a90:	9503      	str	r5, [sp, #12]
90013a92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90013a94:	4798      	blx	r3
90013a96:	4642      	mov	r2, r8
90013a98:	4639      	mov	r1, r7
90013a9a:	4603      	mov	r3, r0
90013a9c:	4620      	mov	r0, r4
90013a9e:	f7ff ff47 	bl	90013930 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90013aa2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90013aa6:	9004      	str	r0, [sp, #16]
90013aa8:	f8ad 3020 	strh.w	r3, [sp, #32]
90013aac:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90013ab0:	9607      	str	r6, [sp, #28]
90013ab2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90013ab6:	4b10      	ldr	r3, [pc, #64]	; (90013af8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90013ab8:	881b      	ldrh	r3, [r3, #0]
90013aba:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90013abe:	9b12      	ldr	r3, [sp, #72]	; 0x48
90013ac0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90013ac4:	f7ff fc60 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
90013ac8:	6803      	ldr	r3, [r0, #0]
90013aca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013acc:	4798      	blx	r3
90013ace:	23ff      	movs	r3, #255	; 0xff
90013ad0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90013ad4:	a903      	add	r1, sp, #12
90013ad6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90013ada:	6860      	ldr	r0, [r4, #4]
90013adc:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90013ae0:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90013ae4:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90013ae8:	6803      	ldr	r3, [r0, #0]
90013aea:	685b      	ldr	r3, [r3, #4]
90013aec:	4798      	blx	r3
90013aee:	4630      	mov	r0, r6
90013af0:	b00c      	add	sp, #48	; 0x30
90013af2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013af6:	bf00      	nop
90013af8:	24039ac6 	.word	0x24039ac6

90013afc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90013afc:	b5f0      	push	{r4, r5, r6, r7, lr}
90013afe:	b085      	sub	sp, #20
90013b00:	4605      	mov	r5, r0
90013b02:	ac02      	add	r4, sp, #8
90013b04:	e884 0006 	stmia.w	r4, {r1, r2}
90013b08:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90013b0c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90013b10:	f7ff fde6 	bl	900136e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013b14:	4631      	mov	r1, r6
90013b16:	4603      	mov	r3, r0
90013b18:	463a      	mov	r2, r7
90013b1a:	4628      	mov	r0, r5
90013b1c:	f7ff ff08 	bl	90013930 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90013b20:	4a05      	ldr	r2, [pc, #20]	; (90013b38 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90013b22:	682b      	ldr	r3, [r5, #0]
90013b24:	8812      	ldrh	r2, [r2, #0]
90013b26:	9200      	str	r2, [sp, #0]
90013b28:	6ede      	ldr	r6, [r3, #108]	; 0x6c
90013b2a:	4603      	mov	r3, r0
90013b2c:	4628      	mov	r0, r5
90013b2e:	e894 0006 	ldmia.w	r4, {r1, r2}
90013b32:	47b0      	blx	r6
90013b34:	b005      	add	sp, #20
90013b36:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013b38:	24039ac6 	.word	0x24039ac6

90013b3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90013b3c:	b570      	push	{r4, r5, r6, lr}
90013b3e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
90013b42:	4604      	mov	r4, r0
90013b44:	b19b      	cbz	r3, 90013b6e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90013b46:	2002      	movs	r0, #2
90013b48:	f7ec fd6c 	bl	90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90013b4c:	2300      	movs	r3, #0
90013b4e:	4620      	mov	r0, r4
90013b50:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90013b54:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
90013b58:	6823      	ldr	r3, [r4, #0]
90013b5a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
90013b5e:	f7ff fdbf 	bl	900136e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013b62:	4601      	mov	r1, r0
90013b64:	4620      	mov	r0, r4
90013b66:	462b      	mov	r3, r5
90013b68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013b6c:	4718      	bx	r3
90013b6e:	bd70      	pop	{r4, r5, r6, pc}

90013b70 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90013b70:	b570      	push	{r4, r5, r6, lr}
90013b72:	4605      	mov	r5, r0
90013b74:	460c      	mov	r4, r1
90013b76:	2003      	movs	r0, #3
90013b78:	b149      	cbz	r1, 90013b8e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90013b7a:	f7ec fceb 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90013b7e:	6928      	ldr	r0, [r5, #16]
90013b80:	b168      	cbz	r0, 90013b9e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90013b82:	6803      	ldr	r3, [r0, #0]
90013b84:	2101      	movs	r1, #1
90013b86:	695b      	ldr	r3, [r3, #20]
90013b88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013b8c:	4718      	bx	r3
90013b8e:	f7ec fd15 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90013b92:	6928      	ldr	r0, [r5, #16]
90013b94:	b118      	cbz	r0, 90013b9e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90013b96:	6803      	ldr	r3, [r0, #0]
90013b98:	4621      	mov	r1, r4
90013b9a:	695b      	ldr	r3, [r3, #20]
90013b9c:	e7f4      	b.n	90013b88 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90013b9e:	bd70      	pop	{r4, r5, r6, pc}

90013ba0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90013ba0:	b538      	push	{r3, r4, r5, lr}
90013ba2:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
90013ba6:	4604      	mov	r4, r0
90013ba8:	460d      	mov	r5, r1
90013baa:	428b      	cmp	r3, r1
90013bac:	d006      	beq.n	90013bbc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90013bae:	6803      	ldr	r3, [r0, #0]
90013bb0:	b929      	cbnz	r1, 90013bbe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90013bb2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90013bb6:	4798      	blx	r3
90013bb8:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
90013bbc:	bd38      	pop	{r3, r4, r5, pc}
90013bbe:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90013bc2:	e7f8      	b.n	90013bb6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90013bc4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90013bc4:	4b0d      	ldr	r3, [pc, #52]	; (90013bfc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90013bc6:	b510      	push	{r4, lr}
90013bc8:	781b      	ldrb	r3, [r3, #0]
90013bca:	4604      	mov	r4, r0
90013bcc:	b95b      	cbnz	r3, 90013be6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90013bce:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90013bd2:	2b02      	cmp	r3, #2
90013bd4:	d007      	beq.n	90013be6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90013bd6:	6840      	ldr	r0, [r0, #4]
90013bd8:	f000 f91a 	bl	90013e10 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90013bdc:	b118      	cbz	r0, 90013be6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90013bde:	6862      	ldr	r2, [r4, #4]
90013be0:	7a53      	ldrb	r3, [r2, #9]
90013be2:	2b00      	cmp	r3, #0
90013be4:	d0fc      	beq.n	90013be0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90013be6:	f7ed fe4f 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90013bea:	4620      	mov	r0, r4
90013bec:	2100      	movs	r1, #0
90013bee:	f7ff ffd7 	bl	90013ba0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90013bf2:	4620      	mov	r0, r4
90013bf4:	f7ff fd74 	bl	900136e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013bf8:	bd10      	pop	{r4, pc}
90013bfa:	bf00      	nop
90013bfc:	24039aca 	.word	0x24039aca

90013c00 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90013c00:	b570      	push	{r4, r5, r6, lr}
90013c02:	4604      	mov	r4, r0
90013c04:	6803      	ldr	r3, [r0, #0]
90013c06:	b919      	cbnz	r1, 90013c10 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90013c08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90013c0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013c0e:	4718      	bx	r3
90013c10:	2200      	movs	r2, #0
90013c12:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
90013c16:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
90013c1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90013c1c:	4798      	blx	r3
90013c1e:	6863      	ldr	r3, [r4, #4]
90013c20:	2101      	movs	r1, #1
90013c22:	4605      	mov	r5, r0
90013c24:	4620      	mov	r0, r4
90013c26:	7299      	strb	r1, [r3, #10]
90013c28:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
90013c2c:	f7ff ffb8 	bl	90013ba0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90013c30:	4628      	mov	r0, r5
90013c32:	bd70      	pop	{r4, r5, r6, pc}

90013c34 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90013c34:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90013c38:	1a13      	subs	r3, r2, r0
90013c3a:	4258      	negs	r0, r3
90013c3c:	4158      	adcs	r0, r3
90013c3e:	4770      	bx	lr

90013c40 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90013c40:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90013c44:	1a9b      	subs	r3, r3, r2
90013c46:	2b00      	cmp	r3, #0
90013c48:	bfdc      	itt	le
90013c4a:	6882      	ldrle	r2, [r0, #8]
90013c4c:	189b      	addle	r3, r3, r2
90013c4e:	2b01      	cmp	r3, #1
90013c50:	bfcc      	ite	gt
90013c52:	2000      	movgt	r0, #0
90013c54:	2001      	movle	r0, #1
90013c56:	4770      	bx	lr

90013c58 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90013c58:	6902      	ldr	r2, [r0, #16]
90013c5a:	6843      	ldr	r3, [r0, #4]
90013c5c:	2024      	movs	r0, #36	; 0x24
90013c5e:	fb00 3002 	mla	r0, r0, r2, r3
90013c62:	4770      	bx	lr

90013c64 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90013c64:	6803      	ldr	r3, [r0, #0]
90013c66:	691b      	ldr	r3, [r3, #16]
90013c68:	4718      	bx	r3

90013c6a <_ZN8touchgfx13DMA_Interface7executeEv>:
90013c6a:	2301      	movs	r3, #1
90013c6c:	b570      	push	{r4, r5, r6, lr}
90013c6e:	7203      	strb	r3, [r0, #8]
90013c70:	4604      	mov	r4, r0
90013c72:	6840      	ldr	r0, [r0, #4]
90013c74:	6803      	ldr	r3, [r0, #0]
90013c76:	699b      	ldr	r3, [r3, #24]
90013c78:	4798      	blx	r3
90013c7a:	6803      	ldr	r3, [r0, #0]
90013c7c:	4605      	mov	r5, r0
90013c7e:	2b40      	cmp	r3, #64	; 0x40
90013c80:	d00c      	beq.n	90013c9c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013c82:	d810      	bhi.n	90013ca6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90013c84:	2b04      	cmp	r3, #4
90013c86:	d01d      	beq.n	90013cc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90013c88:	d804      	bhi.n	90013c94 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90013c8a:	2b01      	cmp	r3, #1
90013c8c:	d006      	beq.n	90013c9c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013c8e:	2b02      	cmp	r3, #2
90013c90:	d02c      	beq.n	90013cec <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90013c92:	bd70      	pop	{r4, r5, r6, pc}
90013c94:	2b08      	cmp	r3, #8
90013c96:	d01d      	beq.n	90013cd4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90013c98:	2b20      	cmp	r3, #32
90013c9a:	d1fa      	bne.n	90013c92 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90013c9c:	6823      	ldr	r3, [r4, #0]
90013c9e:	4620      	mov	r0, r4
90013ca0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90013ca2:	4798      	blx	r3
90013ca4:	e013      	b.n	90013cce <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90013ca6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90013caa:	d0f7      	beq.n	90013c9c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013cac:	d804      	bhi.n	90013cb8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90013cae:	2b80      	cmp	r3, #128	; 0x80
90013cb0:	d0f4      	beq.n	90013c9c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013cb2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90013cb6:	e7f0      	b.n	90013c9a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90013cb8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90013cbc:	d0ee      	beq.n	90013c9c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013cbe:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90013cc2:	e7e5      	b.n	90013c90 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90013cc4:	6823      	ldr	r3, [r4, #0]
90013cc6:	7f01      	ldrb	r1, [r0, #28]
90013cc8:	4620      	mov	r0, r4
90013cca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013ccc:	4798      	blx	r3
90013cce:	6823      	ldr	r3, [r4, #0]
90013cd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90013cd2:	e006      	b.n	90013ce2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90013cd4:	6823      	ldr	r3, [r4, #0]
90013cd6:	7f01      	ldrb	r1, [r0, #28]
90013cd8:	4620      	mov	r0, r4
90013cda:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013cdc:	4798      	blx	r3
90013cde:	6823      	ldr	r3, [r4, #0]
90013ce0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90013ce2:	4629      	mov	r1, r5
90013ce4:	4620      	mov	r0, r4
90013ce6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013cea:	4718      	bx	r3
90013cec:	6823      	ldr	r3, [r4, #0]
90013cee:	4620      	mov	r0, r4
90013cf0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90013cf2:	4798      	blx	r3
90013cf4:	e7f3      	b.n	90013cde <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90013cf6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90013cf6:	4770      	bx	lr

90013cf8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90013cf8:	4770      	bx	lr

90013cfa <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90013cfa:	4770      	bx	lr

90013cfc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90013cfc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90013d00:	b510      	push	{r4, lr}
90013d02:	1ad2      	subs	r2, r2, r3
90013d04:	2a00      	cmp	r2, #0
90013d06:	bfdc      	itt	le
90013d08:	6884      	ldrle	r4, [r0, #8]
90013d0a:	1912      	addle	r2, r2, r4
90013d0c:	2a01      	cmp	r2, #1
90013d0e:	dd16      	ble.n	90013d3e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90013d10:	6842      	ldr	r2, [r0, #4]
90013d12:	2424      	movs	r4, #36	; 0x24
90013d14:	fb04 2303 	mla	r3, r4, r3, r2
90013d18:	f101 0220 	add.w	r2, r1, #32
90013d1c:	f851 4b04 	ldr.w	r4, [r1], #4
90013d20:	4291      	cmp	r1, r2
90013d22:	f843 4b04 	str.w	r4, [r3], #4
90013d26:	d1f9      	bne.n	90013d1c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90013d28:	780a      	ldrb	r2, [r1, #0]
90013d2a:	701a      	strb	r2, [r3, #0]
90013d2c:	68c3      	ldr	r3, [r0, #12]
90013d2e:	6882      	ldr	r2, [r0, #8]
90013d30:	f3bf 8f5b 	dmb	ish
90013d34:	3301      	adds	r3, #1
90013d36:	429a      	cmp	r2, r3
90013d38:	bfd8      	it	le
90013d3a:	1a9b      	suble	r3, r3, r2
90013d3c:	60c3      	str	r3, [r0, #12]
90013d3e:	bd10      	pop	{r4, pc}

90013d40 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90013d40:	6903      	ldr	r3, [r0, #16]
90013d42:	6882      	ldr	r2, [r0, #8]
90013d44:	f3bf 8f5b 	dmb	ish
90013d48:	3301      	adds	r3, #1
90013d4a:	429a      	cmp	r2, r3
90013d4c:	bfd8      	it	le
90013d4e:	1a9b      	suble	r3, r3, r2
90013d50:	6103      	str	r3, [r0, #16]
90013d52:	4770      	bx	lr

90013d54 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90013d54:	b570      	push	{r4, r5, r6, lr}
90013d56:	4604      	mov	r4, r0
90013d58:	460e      	mov	r6, r1
90013d5a:	6860      	ldr	r0, [r4, #4]
90013d5c:	6803      	ldr	r3, [r0, #0]
90013d5e:	685b      	ldr	r3, [r3, #4]
90013d60:	4798      	blx	r3
90013d62:	2800      	cmp	r0, #0
90013d64:	d1f9      	bne.n	90013d5a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90013d66:	4d0d      	ldr	r5, [pc, #52]	; (90013d9c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90013d68:	6828      	ldr	r0, [r5, #0]
90013d6a:	6803      	ldr	r3, [r0, #0]
90013d6c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013d6e:	4798      	blx	r3
90013d70:	f7ed fd98 	bl	900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90013d74:	6828      	ldr	r0, [r5, #0]
90013d76:	2101      	movs	r1, #1
90013d78:	f7ff ff12 	bl	90013ba0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90013d7c:	6860      	ldr	r0, [r4, #4]
90013d7e:	4631      	mov	r1, r6
90013d80:	6803      	ldr	r3, [r0, #0]
90013d82:	689b      	ldr	r3, [r3, #8]
90013d84:	4798      	blx	r3
90013d86:	6823      	ldr	r3, [r4, #0]
90013d88:	4620      	mov	r0, r4
90013d8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013d8c:	4798      	blx	r3
90013d8e:	6828      	ldr	r0, [r5, #0]
90013d90:	6803      	ldr	r3, [r0, #0]
90013d92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013d96:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90013d98:	4718      	bx	r3
90013d9a:	bf00      	nop
90013d9c:	24039acc 	.word	0x24039acc

90013da0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90013da0:	b508      	push	{r3, lr}
90013da2:	f7ed fd71 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90013da6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90013daa:	f7ed bd75 	b.w	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90013dae <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90013dae:	b510      	push	{r4, lr}
90013db0:	4604      	mov	r4, r0
90013db2:	2114      	movs	r1, #20
90013db4:	f015 fc16 	bl	900295e4 <_ZdlPvj>
90013db8:	4620      	mov	r0, r4
90013dba:	bd10      	pop	{r4, pc}

90013dbc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90013dbc:	b570      	push	{r4, r5, r6, lr}
90013dbe:	4604      	mov	r4, r0
90013dc0:	6840      	ldr	r0, [r0, #4]
90013dc2:	6803      	ldr	r3, [r0, #0]
90013dc4:	681b      	ldr	r3, [r3, #0]
90013dc6:	4798      	blx	r3
90013dc8:	4605      	mov	r5, r0
90013dca:	b930      	cbnz	r0, 90013dda <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90013dcc:	7a23      	ldrb	r3, [r4, #8]
90013dce:	b123      	cbz	r3, 90013dda <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90013dd0:	6860      	ldr	r0, [r4, #4]
90013dd2:	6803      	ldr	r3, [r0, #0]
90013dd4:	695b      	ldr	r3, [r3, #20]
90013dd6:	4798      	blx	r3
90013dd8:	7225      	strb	r5, [r4, #8]
90013dda:	6860      	ldr	r0, [r4, #4]
90013ddc:	6803      	ldr	r3, [r0, #0]
90013dde:	681b      	ldr	r3, [r3, #0]
90013de0:	4798      	blx	r3
90013de2:	b928      	cbnz	r0, 90013df0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90013de4:	6823      	ldr	r3, [r4, #0]
90013de6:	4620      	mov	r0, r4
90013de8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90013dea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013dee:	4718      	bx	r3
90013df0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013df4:	f7ed bd5e 	b.w	900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90013df8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90013df8:	b510      	push	{r4, lr}
90013dfa:	6082      	str	r2, [r0, #8]
90013dfc:	2200      	movs	r2, #0
90013dfe:	4c03      	ldr	r4, [pc, #12]	; (90013e0c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90013e00:	e9c0 2203 	strd	r2, r2, [r0, #12]
90013e04:	e9c0 4100 	strd	r4, r1, [r0]
90013e08:	bd10      	pop	{r4, pc}
90013e0a:	bf00      	nop
90013e0c:	9002d73c 	.word	0x9002d73c

90013e10 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90013e10:	6840      	ldr	r0, [r0, #4]
90013e12:	6803      	ldr	r3, [r0, #0]
90013e14:	681b      	ldr	r3, [r3, #0]
90013e16:	4718      	bx	r3

90013e18 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90013e18:	094a      	lsrs	r2, r1, #5
90013e1a:	4b06      	ldr	r3, [pc, #24]	; (90013e34 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90013e1c:	60c1      	str	r1, [r0, #12]
90013e1e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90013e22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90013e26:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90013e2a:	4313      	orrs	r3, r2
90013e2c:	4319      	orrs	r1, r3
90013e2e:	8201      	strh	r1, [r0, #16]
90013e30:	4770      	bx	lr
90013e32:	bf00      	nop
90013e34:	fffff800 	.word	0xfffff800

90013e38 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90013e38:	f1a0 0008 	sub.w	r0, r0, #8
90013e3c:	e7ec      	b.n	90013e18 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90013e3e:	bf00      	nop

90013e40 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90013e40:	b508      	push	{r3, lr}
90013e42:	4b05      	ldr	r3, [pc, #20]	; (90013e58 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90013e44:	6818      	ldr	r0, [r3, #0]
90013e46:	6803      	ldr	r3, [r0, #0]
90013e48:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
90013e4c:	4798      	blx	r3
90013e4e:	1e43      	subs	r3, r0, #1
90013e50:	4258      	negs	r0, r3
90013e52:	4158      	adcs	r0, r3
90013e54:	bd08      	pop	{r3, pc}
90013e56:	bf00      	nop
90013e58:	24039acc 	.word	0x24039acc

90013e5c <_ZN8touchgfx13PainterRGB565D1Ev>:
90013e5c:	4770      	bx	lr

90013e5e <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90013e5e:	3808      	subs	r0, #8
90013e60:	4770      	bx	lr

90013e62 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90013e62:	b430      	push	{r4, r5}
90013e64:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90013e68:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90013e6c:	8a02      	ldrh	r2, [r0, #16]
90013e6e:	f89d 3010 	ldrb.w	r3, [sp, #16]
90013e72:	4629      	mov	r1, r5
90013e74:	9202      	str	r2, [sp, #8]
90013e76:	68c2      	ldr	r2, [r0, #12]
90013e78:	4620      	mov	r0, r4
90013e7a:	bc30      	pop	{r4, r5}
90013e7c:	f7ed bff0 	b.w	90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90013e80 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90013e80:	f7ed bfe4 	b.w	90001e4c <_ZN8touchgfx5paint8tearDownEv>

90013e84 <_ZN8touchgfx13PainterRGB565D0Ev>:
90013e84:	b510      	push	{r4, lr}
90013e86:	4604      	mov	r4, r0
90013e88:	2114      	movs	r1, #20
90013e8a:	f015 fbab 	bl	900295e4 <_ZdlPvj>
90013e8e:	4620      	mov	r0, r4
90013e90:	bd10      	pop	{r4, pc}

90013e92 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90013e92:	f1a0 0008 	sub.w	r0, r0, #8
90013e96:	e7f5      	b.n	90013e84 <_ZN8touchgfx13PainterRGB565D0Ev>

90013e98 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90013e98:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90013e9a:	6803      	ldr	r3, [r0, #0]
90013e9c:	460d      	mov	r5, r1
90013e9e:	4604      	mov	r4, r0
90013ea0:	4601      	mov	r1, r0
90013ea2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90013ea4:	a802      	add	r0, sp, #8
90013ea6:	4798      	blx	r3
90013ea8:	6828      	ldr	r0, [r5, #0]
90013eaa:	6869      	ldr	r1, [r5, #4]
90013eac:	466b      	mov	r3, sp
90013eae:	c303      	stmia	r3!, {r0, r1}
90013eb0:	4668      	mov	r0, sp
90013eb2:	4619      	mov	r1, r3
90013eb4:	f7fe ff84 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90013eb8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90013eba:	b188      	cbz	r0, 90013ee0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013ebc:	6803      	ldr	r3, [r0, #0]
90013ebe:	1d21      	adds	r1, r4, #4
90013ec0:	68db      	ldr	r3, [r3, #12]
90013ec2:	4798      	blx	r3
90013ec4:	b160      	cbz	r0, 90013ee0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013ec6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013eca:	2b00      	cmp	r3, #0
90013ecc:	dd08      	ble.n	90013ee0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013ece:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90013ed2:	2d00      	cmp	r5, #0
90013ed4:	dd04      	ble.n	90013ee0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013ed6:	4a2b      	ldr	r2, [pc, #172]	; (90013f84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90013ed8:	7812      	ldrb	r2, [r2, #0]
90013eda:	b11a      	cbz	r2, 90013ee4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90013edc:	2a01      	cmp	r2, #1
90013ede:	d029      	beq.n	90013f34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90013ee0:	b004      	add	sp, #16
90013ee2:	bd70      	pop	{r4, r5, r6, pc}
90013ee4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013ee8:	441d      	add	r5, r3
90013eea:	b2ad      	uxth	r5, r5
90013eec:	b22e      	sxth	r6, r5
90013eee:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90013ef2:	42b3      	cmp	r3, r6
90013ef4:	daf4      	bge.n	90013ee0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013ef6:	6823      	ldr	r3, [r4, #0]
90013ef8:	4669      	mov	r1, sp
90013efa:	4620      	mov	r0, r4
90013efc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90013efe:	4798      	blx	r3
90013f00:	b940      	cbnz	r0, 90013f14 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013f02:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90013f06:	2b01      	cmp	r3, #1
90013f08:	d004      	beq.n	90013f14 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013f0a:	3301      	adds	r3, #1
90013f0c:	105b      	asrs	r3, r3, #1
90013f0e:	f8ad 3006 	strh.w	r3, [sp, #6]
90013f12:	e7f0      	b.n	90013ef6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90013f14:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90013f18:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013f1c:	4413      	add	r3, r2
90013f1e:	b29b      	uxth	r3, r3
90013f20:	441a      	add	r2, r3
90013f22:	f8ad 3002 	strh.w	r3, [sp, #2]
90013f26:	b212      	sxth	r2, r2
90013f28:	4296      	cmp	r6, r2
90013f2a:	dae0      	bge.n	90013eee <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013f2c:	1aeb      	subs	r3, r5, r3
90013f2e:	f8ad 3006 	strh.w	r3, [sp, #6]
90013f32:	e7dc      	b.n	90013eee <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013f34:	f8bd 5000 	ldrh.w	r5, [sp]
90013f38:	441d      	add	r5, r3
90013f3a:	b2ad      	uxth	r5, r5
90013f3c:	b22e      	sxth	r6, r5
90013f3e:	f9bd 3000 	ldrsh.w	r3, [sp]
90013f42:	42b3      	cmp	r3, r6
90013f44:	dacc      	bge.n	90013ee0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013f46:	6823      	ldr	r3, [r4, #0]
90013f48:	4669      	mov	r1, sp
90013f4a:	4620      	mov	r0, r4
90013f4c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90013f4e:	4798      	blx	r3
90013f50:	b940      	cbnz	r0, 90013f64 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013f52:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013f56:	2b01      	cmp	r3, #1
90013f58:	d004      	beq.n	90013f64 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013f5a:	3301      	adds	r3, #1
90013f5c:	105b      	asrs	r3, r3, #1
90013f5e:	f8ad 3004 	strh.w	r3, [sp, #4]
90013f62:	e7f0      	b.n	90013f46 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90013f64:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90013f68:	f8bd 3000 	ldrh.w	r3, [sp]
90013f6c:	4413      	add	r3, r2
90013f6e:	b29b      	uxth	r3, r3
90013f70:	441a      	add	r2, r3
90013f72:	f8ad 3000 	strh.w	r3, [sp]
90013f76:	b212      	sxth	r2, r2
90013f78:	4296      	cmp	r6, r2
90013f7a:	dae0      	bge.n	90013f3e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013f7c:	1aeb      	subs	r3, r5, r3
90013f7e:	f8ad 3004 	strh.w	r3, [sp, #4]
90013f82:	e7dc      	b.n	90013f3e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013f84:	24039ac4 	.word	0x24039ac4

90013f88 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90013f88:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90013f8a:	6803      	ldr	r3, [r0, #0]
90013f8c:	4604      	mov	r4, r0
90013f8e:	4601      	mov	r1, r0
90013f90:	4668      	mov	r0, sp
90013f92:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90013f94:	4798      	blx	r3
90013f96:	2100      	movs	r1, #0
90013f98:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013f9c:	4668      	mov	r0, sp
90013f9e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013fa2:	9102      	str	r1, [sp, #8]
90013fa4:	a902      	add	r1, sp, #8
90013fa6:	f8ad 200c 	strh.w	r2, [sp, #12]
90013faa:	f8ad 300e 	strh.w	r3, [sp, #14]
90013fae:	f7fe ff07 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90013fb2:	6823      	ldr	r3, [r4, #0]
90013fb4:	4669      	mov	r1, sp
90013fb6:	4620      	mov	r0, r4
90013fb8:	691b      	ldr	r3, [r3, #16]
90013fba:	4798      	blx	r3
90013fbc:	b004      	add	sp, #16
90013fbe:	bd10      	pop	{r4, pc}

90013fc0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90013fc0:	2101      	movs	r1, #1
90013fc2:	2200      	movs	r2, #0
90013fc4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90013fc8:	490a      	ldr	r1, [pc, #40]	; (90013ff4 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90013fca:	8082      	strh	r2, [r0, #4]
90013fcc:	6001      	str	r1, [r0, #0]
90013fce:	21ff      	movs	r1, #255	; 0xff
90013fd0:	80c2      	strh	r2, [r0, #6]
90013fd2:	8102      	strh	r2, [r0, #8]
90013fd4:	8142      	strh	r2, [r0, #10]
90013fd6:	8182      	strh	r2, [r0, #12]
90013fd8:	81c2      	strh	r2, [r0, #14]
90013fda:	8202      	strh	r2, [r0, #16]
90013fdc:	8242      	strh	r2, [r0, #18]
90013fde:	61c2      	str	r2, [r0, #28]
90013fe0:	8402      	strh	r2, [r0, #32]
90013fe2:	8442      	strh	r2, [r0, #34]	; 0x22
90013fe4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90013fe8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
90013fec:	6282      	str	r2, [r0, #40]	; 0x28
90013fee:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013ff2:	4770      	bx	lr
90013ff4:	9002d798 	.word	0x9002d798

90013ff8 <_ZNK8touchgfx4Line14getMinimalRectEv>:
90013ff8:	f101 0364 	add.w	r3, r1, #100	; 0x64
90013ffc:	4602      	mov	r2, r0
90013ffe:	cb03      	ldmia	r3!, {r0, r1}
90014000:	6010      	str	r0, [r2, #0]
90014002:	4610      	mov	r0, r2
90014004:	6051      	str	r1, [r2, #4]
90014006:	4770      	bx	lr

90014008 <_ZN8touchgfx4LineD1Ev>:
90014008:	4770      	bx	lr

9001400a <_ZN8touchgfx4LineD0Ev>:
9001400a:	b510      	push	{r4, lr}
9001400c:	4604      	mov	r4, r0
9001400e:	2170      	movs	r1, #112	; 0x70
90014010:	f015 fae8 	bl	900295e4 <_ZdlPvj>
90014014:	4620      	mov	r0, r4
90014016:	bd10      	pop	{r4, pc}

90014018 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90014018:	b507      	push	{r0, r1, r2, lr}
9001401a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
9001401e:	ab01      	add	r3, sp, #4
90014020:	6809      	ldr	r1, [r1, #0]
90014022:	6800      	ldr	r0, [r0, #0]
90014024:	f005 fc0e 	bl	90019844 <_ZN8touchgfx6muldivElllRl>
90014028:	b003      	add	sp, #12
9001402a:	f85d fb04 	ldr.w	pc, [sp], #4

9001402e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
9001402e:	6800      	ldr	r0, [r0, #0]
90014030:	2800      	cmp	r0, #0
90014032:	bfb9      	ittee	lt
90014034:	2320      	movlt	r3, #32
90014036:	fb90 f0f3 	sdivlt	r0, r0, r3
9001403a:	301f      	addge	r0, #31
9001403c:	1140      	asrge	r0, r0, #5
9001403e:	4770      	bx	lr

90014040 <_ZNK8touchgfx4Line17invalidateContentEv>:
90014040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014044:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
90014048:	b089      	sub	sp, #36	; 0x24
9001404a:	4604      	mov	r4, r0
9001404c:	b353      	cbz	r3, 900140a4 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
9001404e:	6803      	ldr	r3, [r0, #0]
90014050:	4601      	mov	r1, r0
90014052:	a802      	add	r0, sp, #8
90014054:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90014056:	4798      	blx	r3
90014058:	2220      	movs	r2, #32
9001405a:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
9001405e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90014060:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90014062:	f8d4 b000 	ldr.w	fp, [r4]
90014066:	fb9a f0f2 	sdiv	r0, sl, r2
9001406a:	fb91 f5f2 	sdiv	r5, r1, r2
9001406e:	fb93 f6f2 	sdiv	r6, r3, r2
90014072:	1b40      	subs	r0, r0, r5
90014074:	0076      	lsls	r6, r6, #1
90014076:	2800      	cmp	r0, #0
90014078:	bfb8      	it	lt
9001407a:	4240      	neglt	r0, r0
9001407c:	4286      	cmp	r6, r0
9001407e:	dc0c      	bgt.n	9001409a <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
90014080:	6b25      	ldr	r5, [r4, #48]	; 0x30
90014082:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90014086:	fb95 f0f2 	sdiv	r0, r5, r2
9001408a:	fb98 f7f2 	sdiv	r7, r8, r2
9001408e:	1bc0      	subs	r0, r0, r7
90014090:	2800      	cmp	r0, #0
90014092:	bfb8      	it	lt
90014094:	4240      	neglt	r0, r0
90014096:	4286      	cmp	r6, r0
90014098:	dd07      	ble.n	900140aa <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
9001409a:	f8db 3010 	ldr.w	r3, [fp, #16]
9001409e:	a902      	add	r1, sp, #8
900140a0:	4620      	mov	r0, r4
900140a2:	4798      	blx	r3
900140a4:	b009      	add	sp, #36	; 0x24
900140a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900140aa:	eb01 060a 	add.w	r6, r1, sl
900140ae:	2002      	movs	r0, #2
900140b0:	eb08 0705 	add.w	r7, r8, r5
900140b4:	3301      	adds	r3, #1
900140b6:	f10d 0920 	add.w	r9, sp, #32
900140ba:	9101      	str	r1, [sp, #4]
900140bc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
900140c0:	fb96 f6f0 	sdiv	r6, r6, r0
900140c4:	fb97 f7f0 	sdiv	r7, r7, r0
900140c8:	4103      	asrs	r3, r0
900140ca:	b236      	sxth	r6, r6
900140cc:	b23f      	sxth	r7, r7
900140ce:	f849 3d08 	str.w	r3, [r9, #-8]!
900140d2:	4648      	mov	r0, r9
900140d4:	fb96 f6f2 	sdiv	r6, r6, r2
900140d8:	fb97 f7f2 	sdiv	r7, r7, r2
900140dc:	f7ff ffa7 	bl	9001402e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
900140e0:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900140e4:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
900140e8:	fa1f fe87 	uxth.w	lr, r7
900140ec:	9901      	ldr	r1, [sp, #4]
900140ee:	fa1f fc86 	uxth.w	ip, r6
900140f2:	4293      	cmp	r3, r2
900140f4:	b280      	uxth	r0, r0
900140f6:	eba1 0a0a 	sub.w	sl, r1, sl
900140fa:	da54      	bge.n	900141a6 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
900140fc:	ebac 0100 	sub.w	r1, ip, r0
90014100:	f1ba 0f00 	cmp.w	sl, #0
90014104:	4460      	add	r0, ip
90014106:	f9bd a008 	ldrsh.w	sl, [sp, #8]
9001410a:	b289      	uxth	r1, r1
9001410c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
90014110:	b280      	uxth	r0, r0
90014112:	b20e      	sxth	r6, r1
90014114:	da29      	bge.n	9001416a <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
90014116:	eba8 0505 	sub.w	r5, r8, r5
9001411a:	2d00      	cmp	r5, #0
9001411c:	da2a      	bge.n	90014174 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
9001411e:	fa1f f88a 	uxth.w	r8, sl
90014122:	f8ad a010 	strh.w	sl, [sp, #16]
90014126:	fa1f f58c 	uxth.w	r5, ip
9001412a:	f8ad c012 	strh.w	ip, [sp, #18]
9001412e:	eba0 0008 	sub.w	r0, r0, r8
90014132:	4443      	add	r3, r8
90014134:	f8ad 6018 	strh.w	r6, [sp, #24]
90014138:	f8ad 0014 	strh.w	r0, [sp, #20]
9001413c:	1a59      	subs	r1, r3, r1
9001413e:	ebae 0005 	sub.w	r0, lr, r5
90014142:	f8ad 701a 	strh.w	r7, [sp, #26]
90014146:	f8ad 101c 	strh.w	r1, [sp, #28]
9001414a:	f8ad 0016 	strh.w	r0, [sp, #22]
9001414e:	442a      	add	r2, r5
90014150:	eba2 0e0e 	sub.w	lr, r2, lr
90014154:	f8ad e01e 	strh.w	lr, [sp, #30]
90014158:	f8db 3010 	ldr.w	r3, [fp, #16]
9001415c:	a904      	add	r1, sp, #16
9001415e:	4620      	mov	r0, r4
90014160:	4798      	blx	r3
90014162:	6823      	ldr	r3, [r4, #0]
90014164:	4649      	mov	r1, r9
90014166:	691b      	ldr	r3, [r3, #16]
90014168:	e79a      	b.n	900140a0 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
9001416a:	d003      	beq.n	90014174 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
9001416c:	eba8 0505 	sub.w	r5, r8, r5
90014170:	2d00      	cmp	r5, #0
90014172:	dcd4      	bgt.n	9001411e <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
90014174:	fa1f f88a 	uxth.w	r8, sl
90014178:	f8ad 6010 	strh.w	r6, [sp, #16]
9001417c:	fa1f f58c 	uxth.w	r5, ip
90014180:	f8ad c012 	strh.w	ip, [sp, #18]
90014184:	4443      	add	r3, r8
90014186:	eba0 0008 	sub.w	r0, r0, r8
9001418a:	f8ad a018 	strh.w	sl, [sp, #24]
9001418e:	1a59      	subs	r1, r3, r1
90014190:	ebae 0305 	sub.w	r3, lr, r5
90014194:	f8ad 701a 	strh.w	r7, [sp, #26]
90014198:	f8ad 1014 	strh.w	r1, [sp, #20]
9001419c:	f8ad 3016 	strh.w	r3, [sp, #22]
900141a0:	f8ad 001c 	strh.w	r0, [sp, #28]
900141a4:	e7d3      	b.n	9001414e <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
900141a6:	ebae 0100 	sub.w	r1, lr, r0
900141aa:	f1ba 0f00 	cmp.w	sl, #0
900141ae:	4470      	add	r0, lr
900141b0:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
900141b4:	b289      	uxth	r1, r1
900141b6:	f9bd e008 	ldrsh.w	lr, [sp, #8]
900141ba:	b280      	uxth	r0, r0
900141bc:	b20f      	sxth	r7, r1
900141be:	da20      	bge.n	90014202 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
900141c0:	eba8 0505 	sub.w	r5, r8, r5
900141c4:	2d00      	cmp	r5, #0
900141c6:	da21      	bge.n	9001420c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
900141c8:	fa1f f88e 	uxth.w	r8, lr
900141cc:	f8ad e010 	strh.w	lr, [sp, #16]
900141d0:	fa1f f58a 	uxth.w	r5, sl
900141d4:	f8ad a012 	strh.w	sl, [sp, #18]
900141d8:	4443      	add	r3, r8
900141da:	ebac 0e08 	sub.w	lr, ip, r8
900141de:	442a      	add	r2, r5
900141e0:	1b40      	subs	r0, r0, r5
900141e2:	eba3 0c0c 	sub.w	ip, r3, ip
900141e6:	f8ad e014 	strh.w	lr, [sp, #20]
900141ea:	1a51      	subs	r1, r2, r1
900141ec:	f8ad 0016 	strh.w	r0, [sp, #22]
900141f0:	f8ad 6018 	strh.w	r6, [sp, #24]
900141f4:	f8ad 701a 	strh.w	r7, [sp, #26]
900141f8:	f8ad c01c 	strh.w	ip, [sp, #28]
900141fc:	f8ad 101e 	strh.w	r1, [sp, #30]
90014200:	e7aa      	b.n	90014158 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
90014202:	d003      	beq.n	9001420c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90014204:	eba8 0505 	sub.w	r5, r8, r5
90014208:	2d00      	cmp	r5, #0
9001420a:	dcdd      	bgt.n	900141c8 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
9001420c:	fa1f f58e 	uxth.w	r5, lr
90014210:	f8ad 7012 	strh.w	r7, [sp, #18]
90014214:	fa1f f88a 	uxth.w	r8, sl
90014218:	f8ad e010 	strh.w	lr, [sp, #16]
9001421c:	442b      	add	r3, r5
9001421e:	ebac 0705 	sub.w	r7, ip, r5
90014222:	4442      	add	r2, r8
90014224:	eba0 0008 	sub.w	r0, r0, r8
90014228:	eba3 0c0c 	sub.w	ip, r3, ip
9001422c:	f8ad 7014 	strh.w	r7, [sp, #20]
90014230:	1a51      	subs	r1, r2, r1
90014232:	f8ad 6018 	strh.w	r6, [sp, #24]
90014236:	f8ad a01a 	strh.w	sl, [sp, #26]
9001423a:	f8ad 1016 	strh.w	r1, [sp, #22]
9001423e:	f8ad c01c 	strh.w	ip, [sp, #28]
90014242:	f8ad 001e 	strh.w	r0, [sp, #30]
90014246:	e787      	b.n	90014158 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

90014248 <_ZN8touchgfx7CWRUtil4sineEi>:
90014248:	f44f 73b4 	mov.w	r3, #360	; 0x168
9001424c:	fb90 f2f3 	sdiv	r2, r0, r3
90014250:	fb02 0013 	mls	r0, r2, r3, r0
90014254:	2800      	cmp	r0, #0
90014256:	bfb8      	it	lt
90014258:	18c0      	addlt	r0, r0, r3
9001425a:	4b0a      	ldr	r3, [pc, #40]	; (90014284 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
9001425c:	285a      	cmp	r0, #90	; 0x5a
9001425e:	dc02      	bgt.n	90014266 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90014260:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90014264:	4770      	bx	lr
90014266:	28b4      	cmp	r0, #180	; 0xb4
90014268:	dc02      	bgt.n	90014270 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
9001426a:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
9001426e:	e7f7      	b.n	90014260 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90014270:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
90014274:	bfd4      	ite	le
90014276:	38b4      	suble	r0, #180	; 0xb4
90014278:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
9001427c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90014280:	4240      	negs	r0, r0
90014282:	4770      	bx	lr
90014284:	9002d864 	.word	0x9002d864

90014288 <_ZN8touchgfx7CWRUtil5isqrtEm>:
90014288:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
9001428c:	f04f 0300 	mov.w	r3, #0
90014290:	bf2c      	ite	cs
90014292:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
90014296:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
9001429a:	1899      	adds	r1, r3, r2
9001429c:	4288      	cmp	r0, r1
9001429e:	bf24      	itt	cs
900142a0:	1853      	addcs	r3, r2, r1
900142a2:	1a40      	subcs	r0, r0, r1
900142a4:	0892      	lsrs	r2, r2, #2
900142a6:	ea4f 0353 	mov.w	r3, r3, lsr #1
900142aa:	d1f6      	bne.n	9001429a <_ZN8touchgfx7CWRUtil5isqrtEm+0x12>
900142ac:	4618      	mov	r0, r3
900142ae:	4770      	bx	lr

900142b0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
900142b0:	b510      	push	{r4, lr}
900142b2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
900142b6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
900142ba:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
900142be:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
900142c2:	139b      	asrs	r3, r3, #14
900142c4:	13a4      	asrs	r4, r4, #14
900142c6:	429c      	cmp	r4, r3
900142c8:	bfb8      	it	lt
900142ca:	461c      	movlt	r4, r3
900142cc:	2c01      	cmp	r4, #1
900142ce:	dd07      	ble.n	900142e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
900142d0:	fb91 f1f4 	sdiv	r1, r1, r4
900142d4:	fb90 f0f4 	sdiv	r0, r0, r4
900142d8:	f7ff ffea 	bl	900142b0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
900142dc:	4360      	muls	r0, r4
900142de:	bd10      	pop	{r4, pc}
900142e0:	4340      	muls	r0, r0
900142e2:	fb01 0001 	mla	r0, r1, r1, r0
900142e6:	f7ff ffcf 	bl	90014288 <_ZN8touchgfx7CWRUtil5isqrtEm>
900142ea:	e7f8      	b.n	900142de <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

900142ec <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
900142ec:	2800      	cmp	r0, #0
900142ee:	b508      	push	{r3, lr}
900142f0:	da05      	bge.n	900142fe <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
900142f2:	4240      	negs	r0, r0
900142f4:	f7ff fffa 	bl	900142ec <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
900142f8:	4240      	negs	r0, r0
900142fa:	b240      	sxtb	r0, r0
900142fc:	bd08      	pop	{r3, pc}
900142fe:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
90014302:	dc11      	bgt.n	90014328 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
90014304:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
90014308:	dd09      	ble.n	9001431e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
9001430a:	4340      	muls	r0, r0
9001430c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
90014310:	f7ff ffba 	bl	90014288 <_ZN8touchgfx7CWRUtil5isqrtEm>
90014314:	f7ff ffea 	bl	900142ec <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90014318:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
9001431c:	e7ed      	b.n	900142fa <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
9001431e:	3003      	adds	r0, #3
90014320:	4b02      	ldr	r3, [pc, #8]	; (9001432c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
90014322:	10c0      	asrs	r0, r0, #3
90014324:	5618      	ldrsb	r0, [r3, r0]
90014326:	e7e9      	b.n	900142fc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
90014328:	2000      	movs	r0, #0
9001432a:	e7e7      	b.n	900142fc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
9001432c:	9002d808 	.word	0x9002d808

90014330 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
90014330:	4281      	cmp	r1, r0
90014332:	b537      	push	{r0, r1, r2, r4, r5, lr}
90014334:	460c      	mov	r4, r1
90014336:	4615      	mov	r5, r2
90014338:	dd07      	ble.n	9001434a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
9001433a:	4601      	mov	r1, r0
9001433c:	4620      	mov	r0, r4
9001433e:	f7ff fff7 	bl	90014330 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90014342:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
90014346:	b003      	add	sp, #12
90014348:	bd30      	pop	{r4, r5, pc}
9001434a:	f7ff ffb1 	bl	900142b0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
9001434e:	6028      	str	r0, [r5, #0]
90014350:	2800      	cmp	r0, #0
90014352:	d0f8      	beq.n	90014346 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
90014354:	4602      	mov	r2, r0
90014356:	ab01      	add	r3, sp, #4
90014358:	f44f 6180 	mov.w	r1, #1024	; 0x400
9001435c:	4620      	mov	r0, r4
9001435e:	f005 fa71 	bl	90019844 <_ZN8touchgfx6muldivElllRl>
90014362:	f7ff ffc3 	bl	900142ec <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90014366:	e7ee      	b.n	90014346 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

90014368 <_ZN8touchgfx4LineC1Ev>:
90014368:	b510      	push	{r4, lr}
9001436a:	4604      	mov	r4, r0
9001436c:	f7ff fe28 	bl	90013fc0 <_ZN8touchgfx12CanvasWidgetC1Ev>
90014370:	4b0c      	ldr	r3, [pc, #48]	; (900143a4 <_ZN8touchgfx4LineC1Ev+0x3c>)
90014372:	2220      	movs	r2, #32
90014374:	4620      	mov	r0, r4
90014376:	6023      	str	r3, [r4, #0]
90014378:	2300      	movs	r3, #0
9001437a:	63e2      	str	r2, [r4, #60]	; 0x3c
9001437c:	2212      	movs	r2, #18
9001437e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90014382:	66e2      	str	r2, [r4, #108]	; 0x6c
90014384:	60a3      	str	r3, [r4, #8]
90014386:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
9001438a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
9001438e:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90014392:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
90014396:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
9001439a:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
9001439e:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
900143a2:	bd10      	pop	{r4, pc}
900143a4:	9002d924 	.word	0x9002d924

900143a8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
900143a8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
900143ac:	6b47      	ldr	r7, [r0, #52]	; 0x34
900143ae:	4604      	mov	r4, r0
900143b0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900143b2:	6b85      	ldr	r5, [r0, #56]	; 0x38
900143b4:	6b02      	ldr	r2, [r0, #48]	; 0x30
900143b6:	1aff      	subs	r7, r7, r3
900143b8:	eba5 0502 	sub.w	r5, r5, r2
900143bc:	d142      	bne.n	90014444 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
900143be:	b955      	cbnz	r5, 900143d6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
900143c0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
900143c4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
900143c8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
900143cc:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
900143d0:	b002      	add	sp, #8
900143d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900143d6:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
900143da:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
900143de:	4629      	mov	r1, r5
900143e0:	2502      	movs	r5, #2
900143e2:	4642      	mov	r2, r8
900143e4:	6be0      	ldr	r0, [r4, #60]	; 0x3c
900143e6:	f005 fa4c 	bl	90019882 <_ZN8touchgfx6muldivElll>
900143ea:	4642      	mov	r2, r8
900143ec:	4639      	mov	r1, r7
900143ee:	fb90 f6f5 	sdiv	r6, r0, r5
900143f2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
900143f4:	f005 fa45 	bl	90019882 <_ZN8touchgfx6muldivElll>
900143f8:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
900143fc:	fb90 f5f5 	sdiv	r5, r0, r5
90014400:	f1b9 0f00 	cmp.w	r9, #0
90014404:	d067      	beq.n	900144d6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
90014406:	f1b9 0f02 	cmp.w	r9, #2
9001440a:	d878      	bhi.n	900144fe <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
9001440c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001440e:	6b60      	ldr	r0, [r4, #52]	; 0x34
90014410:	1b93      	subs	r3, r2, r6
90014412:	4432      	add	r2, r6
90014414:	1b5b      	subs	r3, r3, r5
90014416:	1b52      	subs	r2, r2, r5
90014418:	6463      	str	r3, [r4, #68]	; 0x44
9001441a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9001441c:	6522      	str	r2, [r4, #80]	; 0x50
9001441e:	18e9      	adds	r1, r5, r3
90014420:	1b5b      	subs	r3, r3, r5
90014422:	1b89      	subs	r1, r1, r6
90014424:	1b9b      	subs	r3, r3, r6
90014426:	6561      	str	r1, [r4, #84]	; 0x54
90014428:	1b81      	subs	r1, r0, r6
9001442a:	4430      	add	r0, r6
9001442c:	4429      	add	r1, r5
9001442e:	4428      	add	r0, r5
90014430:	64a1      	str	r1, [r4, #72]	; 0x48
90014432:	6ba1      	ldr	r1, [r4, #56]	; 0x38
90014434:	64e0      	str	r0, [r4, #76]	; 0x4c
90014436:	186f      	adds	r7, r5, r1
90014438:	1b49      	subs	r1, r1, r5
9001443a:	4437      	add	r7, r6
9001443c:	4431      	add	r1, r6
9001443e:	65a7      	str	r7, [r4, #88]	; 0x58
90014440:	65e1      	str	r1, [r4, #92]	; 0x5c
90014442:	e05b      	b.n	900144fc <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
90014444:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
90014448:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
9001444c:	2d00      	cmp	r5, #0
9001444e:	d0c6      	beq.n	900143de <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90014450:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
90014454:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
90014458:	fb93 f2f8 	sdiv	r2, r3, r8
9001445c:	fb08 3312 	mls	r3, r8, r2, r3
90014460:	b353      	cbz	r3, 900144b8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
90014462:	fb98 f2f3 	sdiv	r2, r8, r3
90014466:	fb03 8812 	mls	r8, r3, r2, r8
9001446a:	f1b8 0f00 	cmp.w	r8, #0
9001446e:	d1f3      	bne.n	90014458 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
90014470:	2b01      	cmp	r3, #1
90014472:	f24b 5104 	movw	r1, #46340	; 0xb504
90014476:	bf1c      	itt	ne
90014478:	fb97 f7f3 	sdivne	r7, r7, r3
9001447c:	fb95 f5f3 	sdivne	r5, r5, r3
90014480:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
90014484:	4608      	mov	r0, r1
90014486:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
9001448a:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
9001448e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
90014492:	428b      	cmp	r3, r1
90014494:	dd01      	ble.n	9001449a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
90014496:	428a      	cmp	r2, r1
90014498:	dc10      	bgt.n	900144bc <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
9001449a:	fb90 f3f3 	sdiv	r3, r0, r3
9001449e:	fb90 f2f2 	sdiv	r2, r0, r2
900144a2:	4293      	cmp	r3, r2
900144a4:	bfa8      	it	ge
900144a6:	4613      	movge	r3, r2
900144a8:	435f      	muls	r7, r3
900144aa:	435d      	muls	r5, r3
900144ac:	4629      	mov	r1, r5
900144ae:	4638      	mov	r0, r7
900144b0:	f7ff fefe 	bl	900142b0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
900144b4:	4680      	mov	r8, r0
900144b6:	e792      	b.n	900143de <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
900144b8:	4643      	mov	r3, r8
900144ba:	e7d9      	b.n	90014470 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
900144bc:	fb93 f3f1 	sdiv	r3, r3, r1
900144c0:	fb92 f2f1 	sdiv	r2, r2, r1
900144c4:	4293      	cmp	r3, r2
900144c6:	bfcc      	ite	gt
900144c8:	3301      	addgt	r3, #1
900144ca:	1c53      	addle	r3, r2, #1
900144cc:	fb97 f7f3 	sdiv	r7, r7, r3
900144d0:	fb95 f5f3 	sdiv	r5, r5, r3
900144d4:	e7ea      	b.n	900144ac <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
900144d6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900144d8:	6b60      	ldr	r0, [r4, #52]	; 0x34
900144da:	1b93      	subs	r3, r2, r6
900144dc:	4432      	add	r2, r6
900144de:	6463      	str	r3, [r4, #68]	; 0x44
900144e0:	6b23      	ldr	r3, [r4, #48]	; 0x30
900144e2:	6522      	str	r2, [r4, #80]	; 0x50
900144e4:	18e9      	adds	r1, r5, r3
900144e6:	1b5b      	subs	r3, r3, r5
900144e8:	6561      	str	r1, [r4, #84]	; 0x54
900144ea:	1b81      	subs	r1, r0, r6
900144ec:	4430      	add	r0, r6
900144ee:	64a1      	str	r1, [r4, #72]	; 0x48
900144f0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
900144f2:	64e0      	str	r0, [r4, #76]	; 0x4c
900144f4:	186f      	adds	r7, r5, r1
900144f6:	1b49      	subs	r1, r1, r5
900144f8:	65a7      	str	r7, [r4, #88]	; 0x58
900144fa:	65e1      	str	r1, [r4, #92]	; 0x5c
900144fc:	6623      	str	r3, [r4, #96]	; 0x60
900144fe:	6c62      	ldr	r2, [r4, #68]	; 0x44
90014500:	f104 0148 	add.w	r1, r4, #72	; 0x48
90014504:	6d63      	ldr	r3, [r4, #84]	; 0x54
90014506:	f104 0c54 	add.w	ip, r4, #84	; 0x54
9001450a:	9200      	str	r2, [sp, #0]
9001450c:	9301      	str	r3, [sp, #4]
9001450e:	680f      	ldr	r7, [r1, #0]
90014510:	3104      	adds	r1, #4
90014512:	9800      	ldr	r0, [sp, #0]
90014514:	42ba      	cmp	r2, r7
90014516:	bfa8      	it	ge
90014518:	463a      	movge	r2, r7
9001451a:	4287      	cmp	r7, r0
9001451c:	9801      	ldr	r0, [sp, #4]
9001451e:	bfc8      	it	gt
90014520:	9700      	strgt	r7, [sp, #0]
90014522:	68cf      	ldr	r7, [r1, #12]
90014524:	42bb      	cmp	r3, r7
90014526:	bfa8      	it	ge
90014528:	463b      	movge	r3, r7
9001452a:	4287      	cmp	r7, r0
9001452c:	bfc8      	it	gt
9001452e:	9701      	strgt	r7, [sp, #4]
90014530:	458c      	cmp	ip, r1
90014532:	d1ec      	bne.n	9001450e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
90014534:	2720      	movs	r7, #32
90014536:	4668      	mov	r0, sp
90014538:	fb92 f8f7 	sdiv	r8, r2, r7
9001453c:	fb93 f7f7 	sdiv	r7, r3, r7
90014540:	f7ff fd75 	bl	9001402e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90014544:	4682      	mov	sl, r0
90014546:	a801      	add	r0, sp, #4
90014548:	f7ff fd71 	bl	9001402e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
9001454c:	ebaa 0208 	sub.w	r2, sl, r8
90014550:	1bc0      	subs	r0, r0, r7
90014552:	f1b9 0f01 	cmp.w	r9, #1
90014556:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
9001455a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
9001455e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
90014562:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
90014566:	f47f af33 	bne.w	900143d0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
9001456a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9001456c:	6b61      	ldr	r1, [r4, #52]	; 0x34
9001456e:	1b83      	subs	r3, r0, r6
90014570:	6463      	str	r3, [r4, #68]	; 0x44
90014572:	6b23      	ldr	r3, [r4, #48]	; 0x30
90014574:	18ea      	adds	r2, r5, r3
90014576:	6562      	str	r2, [r4, #84]	; 0x54
90014578:	1b8a      	subs	r2, r1, r6
9001457a:	4431      	add	r1, r6
9001457c:	4406      	add	r6, r0
9001457e:	64a2      	str	r2, [r4, #72]	; 0x48
90014580:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90014582:	64e1      	str	r1, [r4, #76]	; 0x4c
90014584:	18af      	adds	r7, r5, r2
90014586:	1b52      	subs	r2, r2, r5
90014588:	1b5d      	subs	r5, r3, r5
9001458a:	6526      	str	r6, [r4, #80]	; 0x50
9001458c:	65a7      	str	r7, [r4, #88]	; 0x58
9001458e:	65e2      	str	r2, [r4, #92]	; 0x5c
90014590:	6625      	str	r5, [r4, #96]	; 0x60
90014592:	e71d      	b.n	900143d0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

90014594 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
90014594:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90014596:	428b      	cmp	r3, r1
90014598:	d102      	bne.n	900145a0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
9001459a:	6b03      	ldr	r3, [r0, #48]	; 0x30
9001459c:	4293      	cmp	r3, r2
9001459e:	d003      	beq.n	900145a8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
900145a0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
900145a4:	f7ff bf00 	b.w	900143a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
900145a8:	4770      	bx	lr

900145aa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
900145aa:	6b43      	ldr	r3, [r0, #52]	; 0x34
900145ac:	428b      	cmp	r3, r1
900145ae:	d102      	bne.n	900145b6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
900145b0:	6b83      	ldr	r3, [r0, #56]	; 0x38
900145b2:	4293      	cmp	r3, r2
900145b4:	d003      	beq.n	900145be <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
900145b6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
900145ba:	f7ff bef5 	b.w	900143a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
900145be:	4770      	bx	lr

900145c0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
900145c0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
900145c4:	f7ff bef0 	b.w	900143a8 <_ZN8touchgfx4Line17updateCachedShapeEv>

900145c8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
900145c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900145cc:	b0a0      	sub	sp, #128	; 0x80
900145ce:	4604      	mov	r4, r0
900145d0:	460a      	mov	r2, r1
900145d2:	4601      	mov	r1, r0
900145d4:	a804      	add	r0, sp, #16
900145d6:	f014 fda5 	bl	90029124 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
900145da:	2300      	movs	r3, #0
900145dc:	9301      	str	r3, [sp, #4]
900145de:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
900145e2:	2b01      	cmp	r3, #1
900145e4:	d17c      	bne.n	900146e0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
900145e6:	6c60      	ldr	r0, [r4, #68]	; 0x44
900145e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900145ea:	6d61      	ldr	r1, [r4, #84]	; 0x54
900145ec:	6b22      	ldr	r2, [r4, #48]	; 0x30
900145ee:	1ac0      	subs	r0, r0, r3
900145f0:	eba1 0102 	sub.w	r1, r1, r2
900145f4:	d437      	bmi.n	90014666 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
900145f6:	2900      	cmp	r1, #0
900145f8:	aa01      	add	r2, sp, #4
900145fa:	db2e      	blt.n	9001465a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
900145fc:	f7ff fe98 	bl	90014330 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90014600:	f100 065a 	add.w	r6, r0, #90	; 0x5a
90014604:	6d62      	ldr	r2, [r4, #84]	; 0x54
90014606:	a804      	add	r0, sp, #16
90014608:	6c61      	ldr	r1, [r4, #68]	; 0x44
9001460a:	f014 ff0b 	bl	90029424 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001460e:	6da2      	ldr	r2, [r4, #88]	; 0x58
90014610:	6ca1      	ldr	r1, [r4, #72]	; 0x48
90014612:	a804      	add	r0, sp, #16
90014614:	f014 ff53 	bl	900294be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014618:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9001461a:	2db3      	cmp	r5, #179	; 0xb3
9001461c:	dc33      	bgt.n	90014686 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
9001461e:	eba6 0805 	sub.w	r8, r6, r5
90014622:	4640      	mov	r0, r8
90014624:	f7ff fe10 	bl	90014248 <_ZN8touchgfx7CWRUtil4sineEi>
90014628:	a902      	add	r1, sp, #8
9001462a:	9002      	str	r0, [sp, #8]
9001462c:	a801      	add	r0, sp, #4
9001462e:	f7ff fcf3 	bl	90014018 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014632:	6b61      	ldr	r1, [r4, #52]	; 0x34
90014634:	1847      	adds	r7, r0, r1
90014636:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
9001463a:	f7ff fe05 	bl	90014248 <_ZN8touchgfx7CWRUtil4sineEi>
9001463e:	a903      	add	r1, sp, #12
90014640:	9003      	str	r0, [sp, #12]
90014642:	a801      	add	r0, sp, #4
90014644:	f7ff fce8 	bl	90014018 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014648:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9001464a:	4639      	mov	r1, r7
9001464c:	1a12      	subs	r2, r2, r0
9001464e:	a804      	add	r0, sp, #16
90014650:	f014 ff35 	bl	900294be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014654:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
90014656:	441d      	add	r5, r3
90014658:	e7df      	b.n	9001461a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
9001465a:	4249      	negs	r1, r1
9001465c:	f7ff fe68 	bl	90014330 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90014660:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
90014664:	e7ce      	b.n	90014604 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90014666:	2900      	cmp	r1, #0
90014668:	f1c0 0000 	rsb	r0, r0, #0
9001466c:	aa01      	add	r2, sp, #4
9001466e:	db04      	blt.n	9001467a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
90014670:	f7ff fe5e 	bl	90014330 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90014674:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
90014678:	e7c4      	b.n	90014604 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
9001467a:	4249      	negs	r1, r1
9001467c:	f7ff fe58 	bl	90014330 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90014680:	f500 7687 	add.w	r6, r0, #270	; 0x10e
90014684:	e7be      	b.n	90014604 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90014686:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90014688:	a804      	add	r0, sp, #16
9001468a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9001468c:	f014 ff17 	bl	900294be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014690:	6e22      	ldr	r2, [r4, #96]	; 0x60
90014692:	6d21      	ldr	r1, [r4, #80]	; 0x50
90014694:	a804      	add	r0, sp, #16
90014696:	f014 ff12 	bl	900294be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001469a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9001469c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
900146a0:	2d00      	cmp	r5, #0
900146a2:	dd31      	ble.n	90014708 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
900146a4:	eb05 0806 	add.w	r8, r5, r6
900146a8:	4640      	mov	r0, r8
900146aa:	f7ff fdcd 	bl	90014248 <_ZN8touchgfx7CWRUtil4sineEi>
900146ae:	a902      	add	r1, sp, #8
900146b0:	9002      	str	r0, [sp, #8]
900146b2:	a801      	add	r0, sp, #4
900146b4:	f7ff fcb0 	bl	90014018 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900146b8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900146ba:	1847      	adds	r7, r0, r1
900146bc:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
900146c0:	f7ff fdc2 	bl	90014248 <_ZN8touchgfx7CWRUtil4sineEi>
900146c4:	a903      	add	r1, sp, #12
900146c6:	9003      	str	r0, [sp, #12]
900146c8:	a801      	add	r0, sp, #4
900146ca:	f7ff fca5 	bl	90014018 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900146ce:	6b22      	ldr	r2, [r4, #48]	; 0x30
900146d0:	4639      	mov	r1, r7
900146d2:	1a12      	subs	r2, r2, r0
900146d4:	a804      	add	r0, sp, #16
900146d6:	f014 fef2 	bl	900294be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900146da:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
900146dc:	1aed      	subs	r5, r5, r3
900146de:	e7df      	b.n	900146a0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
900146e0:	6d62      	ldr	r2, [r4, #84]	; 0x54
900146e2:	a804      	add	r0, sp, #16
900146e4:	6c61      	ldr	r1, [r4, #68]	; 0x44
900146e6:	f014 fe9d 	bl	90029424 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900146ea:	6da2      	ldr	r2, [r4, #88]	; 0x58
900146ec:	6ca1      	ldr	r1, [r4, #72]	; 0x48
900146ee:	a804      	add	r0, sp, #16
900146f0:	f014 fee5 	bl	900294be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900146f4:	6de2      	ldr	r2, [r4, #92]	; 0x5c
900146f6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
900146f8:	a804      	add	r0, sp, #16
900146fa:	f014 fee0 	bl	900294be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900146fe:	6e22      	ldr	r2, [r4, #96]	; 0x60
90014700:	6d21      	ldr	r1, [r4, #80]	; 0x50
90014702:	a804      	add	r0, sp, #16
90014704:	f014 fedb 	bl	900294be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014708:	21ff      	movs	r1, #255	; 0xff
9001470a:	a804      	add	r0, sp, #16
9001470c:	f014 fdc6 	bl	9002929c <_ZN8touchgfx6Canvas6renderEh>
90014710:	4b04      	ldr	r3, [pc, #16]	; (90014724 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
90014712:	4604      	mov	r4, r0
90014714:	a80c      	add	r0, sp, #48	; 0x30
90014716:	9304      	str	r3, [sp, #16]
90014718:	f001 fa9c 	bl	90015c54 <_ZN8touchgfx7OutlineD1Ev>
9001471c:	4620      	mov	r0, r4
9001471e:	b020      	add	sp, #128	; 0x80
90014720:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014724:	9002e148 	.word	0x9002e148

90014728 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
90014728:	b508      	push	{r3, lr}
9001472a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
9001472e:	b10b      	cbz	r3, 90014734 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
90014730:	f7ed fda2 	bl	90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90014734:	bd08      	pop	{r3, pc}

90014736 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
90014736:	6803      	ldr	r3, [r0, #0]
90014738:	f64f 71fe 	movw	r1, #65534	; 0xfffe
9001473c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
9001473e:	4718      	bx	r3

90014740 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
90014740:	4770      	bx	lr

90014742 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
90014742:	b510      	push	{r4, lr}
90014744:	4604      	mov	r4, r0
90014746:	212c      	movs	r1, #44	; 0x2c
90014748:	f014 ff4c 	bl	900295e4 <_ZdlPvj>
9001474c:	4620      	mov	r0, r4
9001474e:	bd10      	pop	{r4, pc}

90014750 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
90014750:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90014754:	2bff      	cmp	r3, #255	; 0xff
90014756:	b510      	push	{r4, lr}
90014758:	d104      	bne.n	90014764 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
9001475a:	8cca      	ldrh	r2, [r1, #38]	; 0x26
9001475c:	f64f 73ff 	movw	r3, #65535	; 0xffff
90014760:	429a      	cmp	r2, r3
90014762:	d105      	bne.n	90014770 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
90014764:	2300      	movs	r3, #0
90014766:	8003      	strh	r3, [r0, #0]
90014768:	8043      	strh	r3, [r0, #2]
9001476a:	8083      	strh	r3, [r0, #4]
9001476c:	80c3      	strh	r3, [r0, #6]
9001476e:	bd10      	pop	{r4, pc}
90014770:	2300      	movs	r3, #0
90014772:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
90014776:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
9001477a:	8003      	strh	r3, [r0, #0]
9001477c:	8043      	strh	r3, [r0, #2]
9001477e:	8084      	strh	r4, [r0, #4]
90014780:	80c2      	strh	r2, [r0, #6]
90014782:	e7f4      	b.n	9001476e <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

90014784 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
90014784:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014788:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
9001478c:	b087      	sub	sp, #28
9001478e:	4604      	mov	r4, r0
90014790:	4689      	mov	r9, r1
90014792:	b363      	cbz	r3, 900147ee <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
90014794:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
90014796:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001479a:	429a      	cmp	r2, r3
9001479c:	d027      	beq.n	900147ee <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
9001479e:	ad06      	add	r5, sp, #24
900147a0:	2700      	movs	r7, #0
900147a2:	f825 2d0c 	strh.w	r2, [r5, #-12]!
900147a6:	4628      	mov	r0, r5
900147a8:	f006 ff88 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
900147ac:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900147b0:	a904      	add	r1, sp, #16
900147b2:	f8ad 0014 	strh.w	r0, [sp, #20]
900147b6:	f8ad 3016 	strh.w	r3, [sp, #22]
900147ba:	4620      	mov	r0, r4
900147bc:	6823      	ldr	r3, [r4, #0]
900147be:	9704      	str	r7, [sp, #16]
900147c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900147c2:	4798      	blx	r3
900147c4:	f7fe fde0 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
900147c8:	6803      	ldr	r3, [r0, #0]
900147ca:	4606      	mov	r6, r0
900147cc:	4628      	mov	r0, r5
900147ce:	f8d3 800c 	ldr.w	r8, [r3, #12]
900147d2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
900147d4:	f8ad 300c 	strh.w	r3, [sp, #12]
900147d8:	f007 f85c 	bl	9001b894 <_ZNK8touchgfx6Bitmap7getDataEv>
900147dc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
900147e0:	4601      	mov	r1, r0
900147e2:	9701      	str	r7, [sp, #4]
900147e4:	aa04      	add	r2, sp, #16
900147e6:	9300      	str	r3, [sp, #0]
900147e8:	4630      	mov	r0, r6
900147ea:	464b      	mov	r3, r9
900147ec:	47c0      	blx	r8
900147ee:	b007      	add	sp, #28
900147f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

900147f4 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
900147f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900147f6:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900147fa:	460d      	mov	r5, r1
900147fc:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90014800:	2100      	movs	r1, #0
90014802:	f8ad 3006 	strh.w	r3, [sp, #6]
90014806:	4604      	mov	r4, r0
90014808:	6803      	ldr	r3, [r0, #0]
9001480a:	f8ad 2004 	strh.w	r2, [sp, #4]
9001480e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90014810:	9100      	str	r1, [sp, #0]
90014812:	4669      	mov	r1, sp
90014814:	4798      	blx	r3
90014816:	4621      	mov	r1, r4
90014818:	a802      	add	r0, sp, #8
9001481a:	f004 fee1 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001481e:	f7fe fdb3 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
90014822:	6803      	ldr	r3, [r0, #0]
90014824:	aa02      	add	r2, sp, #8
90014826:	4669      	mov	r1, sp
90014828:	695e      	ldr	r6, [r3, #20]
9001482a:	462b      	mov	r3, r5
9001482c:	47b0      	blx	r6
9001482e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90014832:	2800      	cmp	r0, #0
90014834:	bf08      	it	eq
90014836:	461d      	moveq	r5, r3
90014838:	84e5      	strh	r5, [r4, #38]	; 0x26
9001483a:	b004      	add	sp, #16
9001483c:	bd70      	pop	{r4, r5, r6, pc}
	...

90014840 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
90014840:	2200      	movs	r2, #0
90014842:	8082      	strh	r2, [r0, #4]
90014844:	80c2      	strh	r2, [r0, #6]
90014846:	8102      	strh	r2, [r0, #8]
90014848:	8142      	strh	r2, [r0, #10]
9001484a:	8182      	strh	r2, [r0, #12]
9001484c:	81c2      	strh	r2, [r0, #14]
9001484e:	8202      	strh	r2, [r0, #16]
90014850:	8242      	strh	r2, [r0, #18]
90014852:	61c2      	str	r2, [r0, #28]
90014854:	8402      	strh	r2, [r0, #32]
90014856:	8442      	strh	r2, [r0, #34]	; 0x22
90014858:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
9001485c:	e9c0 2205 	strd	r2, r2, [r0, #20]
90014860:	2201      	movs	r2, #1
90014862:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
90014866:	4a04      	ldr	r2, [pc, #16]	; (90014878 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
90014868:	6002      	str	r2, [r0, #0]
9001486a:	f64f 72ff 	movw	r2, #65535	; 0xffff
9001486e:	84c2      	strh	r2, [r0, #38]	; 0x26
90014870:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
90014874:	4770      	bx	lr
90014876:	bf00      	nop
90014878:	9002d99c 	.word	0x9002d99c

9001487c <_ZNK8touchgfx5Image17invalidateContentEv>:
9001487c:	b508      	push	{r3, lr}
9001487e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90014882:	b10b      	cbz	r3, 90014888 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
90014884:	f7ed fcf8 	bl	90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90014888:	bd08      	pop	{r3, pc}

9001488a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
9001488a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
9001488e:	4770      	bx	lr

90014890 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
90014890:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
90014894:	4770      	bx	lr

90014896 <_ZN8touchgfx13ScalableImageD1Ev>:
90014896:	4770      	bx	lr

90014898 <_ZN8touchgfx13ScalableImageD0Ev>:
90014898:	b510      	push	{r4, lr}
9001489a:	4604      	mov	r4, r0
9001489c:	212c      	movs	r1, #44	; 0x2c
9001489e:	f014 fea1 	bl	900295e4 <_ZdlPvj>
900148a2:	4620      	mov	r0, r4
900148a4:	bd10      	pop	{r4, pc}

900148a6 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
900148a6:	b5f0      	push	{r4, r5, r6, r7, lr}
900148a8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900148ac:	b085      	sub	sp, #20
900148ae:	4604      	mov	r4, r0
900148b0:	460d      	mov	r5, r1
900148b2:	2bff      	cmp	r3, #255	; 0xff
900148b4:	d128      	bne.n	90014908 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900148b6:	f101 0626 	add.w	r6, r1, #38	; 0x26
900148ba:	4668      	mov	r0, sp
900148bc:	4631      	mov	r1, r6
900148be:	f006 ff65 	bl	9001b78c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900148c2:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
900148c6:	4630      	mov	r0, r6
900148c8:	f006 fef8 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
900148cc:	4287      	cmp	r7, r0
900148ce:	d11b      	bne.n	90014908 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900148d0:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
900148d4:	4630      	mov	r0, r6
900148d6:	f006 ff25 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
900148da:	4287      	cmp	r7, r0
900148dc:	d114      	bne.n	90014908 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900148de:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
900148e2:	2100      	movs	r1, #0
900148e4:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
900148e8:	f8ad 300e 	strh.w	r3, [sp, #14]
900148ec:	466b      	mov	r3, sp
900148ee:	9102      	str	r1, [sp, #8]
900148f0:	f8ad 200c 	strh.w	r2, [sp, #12]
900148f4:	cb03      	ldmia	r3!, {r0, r1}
900148f6:	6020      	str	r0, [r4, #0]
900148f8:	4620      	mov	r0, r4
900148fa:	6061      	str	r1, [r4, #4]
900148fc:	4619      	mov	r1, r3
900148fe:	f7fe fa5f 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90014902:	4620      	mov	r0, r4
90014904:	b005      	add	sp, #20
90014906:	bdf0      	pop	{r4, r5, r6, r7, pc}
90014908:	2300      	movs	r3, #0
9001490a:	8023      	strh	r3, [r4, #0]
9001490c:	8063      	strh	r3, [r4, #2]
9001490e:	80a3      	strh	r3, [r4, #4]
90014910:	80e3      	strh	r3, [r4, #6]
90014912:	e7f6      	b.n	90014902 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

90014914 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
90014914:	b538      	push	{r3, r4, r5, lr}
90014916:	2300      	movs	r3, #0
90014918:	2501      	movs	r5, #1
9001491a:	4604      	mov	r4, r0
9001491c:	8083      	strh	r3, [r0, #4]
9001491e:	80c3      	strh	r3, [r0, #6]
90014920:	8103      	strh	r3, [r0, #8]
90014922:	8143      	strh	r3, [r0, #10]
90014924:	8183      	strh	r3, [r0, #12]
90014926:	81c3      	strh	r3, [r0, #14]
90014928:	8203      	strh	r3, [r0, #16]
9001492a:	8243      	strh	r3, [r0, #18]
9001492c:	61c3      	str	r3, [r0, #28]
9001492e:	8403      	strh	r3, [r0, #32]
90014930:	8443      	strh	r3, [r0, #34]	; 0x22
90014932:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
90014936:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
9001493a:	e9c0 3305 	strd	r3, r3, [r0, #20]
9001493e:	4b07      	ldr	r3, [pc, #28]	; (9001495c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
90014940:	6003      	str	r3, [r0, #0]
90014942:	880b      	ldrh	r3, [r1, #0]
90014944:	84c3      	strh	r3, [r0, #38]	; 0x26
90014946:	23ff      	movs	r3, #255	; 0xff
90014948:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
9001494c:	f001 f81d 	bl	9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90014950:	4b03      	ldr	r3, [pc, #12]	; (90014960 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
90014952:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
90014956:	4620      	mov	r0, r4
90014958:	6023      	str	r3, [r4, #0]
9001495a:	bd38      	pop	{r3, r4, r5, pc}
9001495c:	9002dc58 	.word	0x9002dc58
90014960:	9002da0c 	.word	0x9002da0c

90014964 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
90014964:	4603      	mov	r3, r0
90014966:	3026      	adds	r0, #38	; 0x26
90014968:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
9001496c:	b90b      	cbnz	r3, 90014972 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
9001496e:	f004 bedb 	b.w	90019728 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
90014972:	f004 bee9 	b.w	90019748 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

90014978 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
90014978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001497c:	4604      	mov	r4, r0
9001497e:	b0b3      	sub	sp, #204	; 0xcc
90014980:	469b      	mov	fp, r3
90014982:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90014986:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001498a:	2500      	movs	r5, #0
9001498c:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
90014990:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
90014994:	ab11      	add	r3, sp, #68	; 0x44
90014996:	9206      	str	r2, [sp, #24]
90014998:	4618      	mov	r0, r3
9001499a:	9511      	str	r5, [sp, #68]	; 0x44
9001499c:	9307      	str	r3, [sp, #28]
9001499e:	ad13      	add	r5, sp, #76	; 0x4c
900149a0:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
900149a4:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
900149a8:	f7fe fa0a 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
900149ac:	9b07      	ldr	r3, [sp, #28]
900149ae:	e893 0003 	ldmia.w	r3, {r0, r1}
900149b2:	e885 0003 	stmia.w	r5, {r0, r1}
900149b6:	6821      	ldr	r1, [r4, #0]
900149b8:	4620      	mov	r0, r4
900149ba:	6ace      	ldr	r6, [r1, #44]	; 0x2c
900149bc:	4629      	mov	r1, r5
900149be:	47b0      	blx	r6
900149c0:	4621      	mov	r1, r4
900149c2:	a815      	add	r0, sp, #84	; 0x54
900149c4:	1d26      	adds	r6, r4, #4
900149c6:	f004 fe0b 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900149ca:	a815      	add	r0, sp, #84	; 0x54
900149cc:	f003 fb16 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900149d0:	9b07      	ldr	r3, [sp, #28]
900149d2:	4631      	mov	r1, r6
900149d4:	4618      	mov	r0, r3
900149d6:	f003 fb55 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900149da:	4628      	mov	r0, r5
900149dc:	f104 0526 	add.w	r5, r4, #38	; 0x26
900149e0:	f003 fb0c 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900149e4:	4628      	mov	r0, r5
900149e6:	f006 ff55 	bl	9001b894 <_ZNK8touchgfx6Bitmap7getDataEv>
900149ea:	9007      	str	r0, [sp, #28]
900149ec:	2800      	cmp	r0, #0
900149ee:	f000 80ce 	beq.w	90014b8e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
900149f2:	f8db 200c 	ldr.w	r2, [fp, #12]
900149f6:	a809      	add	r0, sp, #36	; 0x24
900149f8:	f8db 1000 	ldr.w	r1, [fp]
900149fc:	920c      	str	r2, [sp, #48]	; 0x30
900149fe:	f8da 2000 	ldr.w	r2, [sl]
90014a02:	9109      	str	r1, [sp, #36]	; 0x24
90014a04:	920d      	str	r2, [sp, #52]	; 0x34
90014a06:	f8da 2004 	ldr.w	r2, [sl, #4]
90014a0a:	f8db 1004 	ldr.w	r1, [fp, #4]
90014a0e:	920e      	str	r2, [sp, #56]	; 0x38
90014a10:	f8da 2008 	ldr.w	r2, [sl, #8]
90014a14:	910a      	str	r1, [sp, #40]	; 0x28
90014a16:	920f      	str	r2, [sp, #60]	; 0x3c
90014a18:	f8db 1008 	ldr.w	r1, [fp, #8]
90014a1c:	f8da 200c 	ldr.w	r2, [sl, #12]
90014a20:	910b      	str	r1, [sp, #44]	; 0x2c
90014a22:	a90d      	add	r1, sp, #52	; 0x34
90014a24:	9210      	str	r2, [sp, #64]	; 0x40
90014a26:	4632      	mov	r2, r6
90014a28:	f003 fb10 	bl	9001804c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90014a2c:	4632      	mov	r2, r6
90014a2e:	a90e      	add	r1, sp, #56	; 0x38
90014a30:	a80a      	add	r0, sp, #40	; 0x28
90014a32:	f003 fb0b 	bl	9001804c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90014a36:	4632      	mov	r2, r6
90014a38:	a90f      	add	r1, sp, #60	; 0x3c
90014a3a:	a80b      	add	r0, sp, #44	; 0x2c
90014a3c:	f003 fb06 	bl	9001804c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90014a40:	4632      	mov	r2, r6
90014a42:	a910      	add	r1, sp, #64	; 0x40
90014a44:	a80c      	add	r0, sp, #48	; 0x30
90014a46:	f003 fb01 	bl	9001804c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90014a4a:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
90014a4e:	ed97 3a00 	vldr	s6, [r7]
90014a52:	eef0 6a67 	vmov.f32	s13, s15
90014a56:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
90014a5a:	edd7 4a01 	vldr	s9, [r7, #4]
90014a5e:	eeb0 7a67 	vmov.f32	s14, s15
90014a62:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
90014a66:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
90014a6a:	ed99 2a00 	vldr	s4, [r9]
90014a6e:	eeb0 6a67 	vmov.f32	s12, s15
90014a72:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
90014a76:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
90014a7a:	edd8 2a00 	vldr	s5, [r8]
90014a7e:	edd9 3a01 	vldr	s7, [r9, #4]
90014a82:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014a86:	ed98 4a01 	vldr	s8, [r8, #4]
90014a8a:	ed99 5a02 	vldr	s10, [r9, #8]
90014a8e:	edd8 5a02 	vldr	s11, [r8, #8]
90014a92:	ee16 6a10 	vmov	r6, s12
90014a96:	eeb0 6a67 	vmov.f32	s12, s15
90014a9a:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
90014a9e:	f8d9 e00c 	ldr.w	lr, [r9, #12]
90014aa2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014aa6:	f8d8 c00c 	ldr.w	ip, [r8, #12]
90014aaa:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
90014aae:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
90014ab2:	ee16 0a10 	vmov	r0, s12
90014ab6:	eeb0 6a67 	vmov.f32	s12, s15
90014aba:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
90014abe:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
90014ac2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014ac6:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
90014aca:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
90014ace:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
90014ad2:	ee16 1a10 	vmov	r1, s12
90014ad6:	eeb0 6a67 	vmov.f32	s12, s15
90014ada:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
90014ade:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
90014ae2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014ae6:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
90014aea:	f8d7 a008 	ldr.w	sl, [r7, #8]
90014aee:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90014af2:	68ff      	ldr	r7, [r7, #12]
90014af4:	ee16 2a10 	vmov	r2, s12
90014af8:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
90014afc:	9624      	str	r6, [sp, #144]	; 0x90
90014afe:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014b02:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
90014b06:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
90014b0a:	4628      	mov	r0, r5
90014b0c:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
90014b10:	9b06      	ldr	r3, [sp, #24]
90014b12:	922d      	str	r2, [sp, #180]	; 0xb4
90014b14:	4a1f      	ldr	r2, [pc, #124]	; (90014b94 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90014b16:	9317      	str	r3, [sp, #92]	; 0x5c
90014b18:	8812      	ldrh	r2, [r2, #0]
90014b1a:	9b07      	ldr	r3, [sp, #28]
90014b1c:	9218      	str	r2, [sp, #96]	; 0x60
90014b1e:	9319      	str	r3, [sp, #100]	; 0x64
90014b20:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
90014b24:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
90014b28:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
90014b2c:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
90014b30:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
90014b34:	9731      	str	r7, [sp, #196]	; 0xc4
90014b36:	f006 fedd 	bl	9001b8f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90014b3a:	901a      	str	r0, [sp, #104]	; 0x68
90014b3c:	4628      	mov	r0, r5
90014b3e:	f006 fdbd 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
90014b42:	901b      	str	r0, [sp, #108]	; 0x6c
90014b44:	4628      	mov	r0, r5
90014b46:	f006 fded 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014b4a:	901c      	str	r0, [sp, #112]	; 0x70
90014b4c:	4628      	mov	r0, r5
90014b4e:	f006 fdb5 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
90014b52:	4b11      	ldr	r3, [pc, #68]	; (90014b98 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
90014b54:	901d      	str	r0, [sp, #116]	; 0x74
90014b56:	681b      	ldr	r3, [r3, #0]
90014b58:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90014b5c:	b10a      	cbz	r2, 90014b62 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
90014b5e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
90014b60:	b905      	cbnz	r5, 90014b64 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
90014b62:	689d      	ldr	r5, [r3, #8]
90014b64:	682b      	ldr	r3, [r5, #0]
90014b66:	4620      	mov	r0, r4
90014b68:	6c1e      	ldr	r6, [r3, #64]	; 0x40
90014b6a:	f7ff fefb 	bl	90014964 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
90014b6e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90014b72:	aa1e      	add	r2, sp, #120	; 0x78
90014b74:	a917      	add	r1, sp, #92	; 0x5c
90014b76:	9304      	str	r3, [sp, #16]
90014b78:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90014b7c:	e9cd 0302 	strd	r0, r3, [sp, #8]
90014b80:	ab13      	add	r3, sp, #76	; 0x4c
90014b82:	4628      	mov	r0, r5
90014b84:	9301      	str	r3, [sp, #4]
90014b86:	ab15      	add	r3, sp, #84	; 0x54
90014b88:	9300      	str	r3, [sp, #0]
90014b8a:	ab19      	add	r3, sp, #100	; 0x64
90014b8c:	47b0      	blx	r6
90014b8e:	b033      	add	sp, #204	; 0xcc
90014b90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014b94:	24039ac6 	.word	0x24039ac6
90014b98:	24039acc 	.word	0x24039acc

90014b9c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
90014b9c:	b570      	push	{r4, r5, r6, lr}
90014b9e:	ed2d 8b04 	vpush	{d8-d9}
90014ba2:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90014ba6:	b098      	sub	sp, #96	; 0x60
90014ba8:	4604      	mov	r4, r0
90014baa:	460e      	mov	r6, r1
90014bac:	2b00      	cmp	r3, #0
90014bae:	d065      	beq.n	90014c7c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90014bb0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90014bb4:	f100 0526 	add.w	r5, r0, #38	; 0x26
90014bb8:	ed9f 8a37 	vldr	s16, [pc, #220]	; 90014c98 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
90014bbc:	ee09 3a10 	vmov	s18, r3
90014bc0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90014bc4:	4628      	mov	r0, r5
90014bc6:	ee08 3a90 	vmov	s17, r3
90014bca:	4b34      	ldr	r3, [pc, #208]	; (90014c9c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90014bcc:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90014bd0:	930c      	str	r3, [sp, #48]	; 0x30
90014bd2:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90014bd6:	930d      	str	r3, [sp, #52]	; 0x34
90014bd8:	930e      	str	r3, [sp, #56]	; 0x38
90014bda:	ee39 9a08 	vadd.f32	s18, s18, s16
90014bde:	930f      	str	r3, [sp, #60]	; 0x3c
90014be0:	f006 fd6c 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
90014be4:	ee07 0a90 	vmov	s15, r0
90014be8:	4628      	mov	r0, r5
90014bea:	ee78 8a88 	vadd.f32	s17, s17, s16
90014bee:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90014bf2:	f006 fd97 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014bf6:	4b2a      	ldr	r3, [pc, #168]	; (90014ca0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90014bf8:	ee07 0a90 	vmov	s15, r0
90014bfc:	781b      	ldrb	r3, [r3, #0]
90014bfe:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90014c02:	eef0 7a48 	vmov.f32	s15, s16
90014c06:	2b01      	cmp	r3, #1
90014c08:	d13c      	bne.n	90014c84 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90014c0a:	eef0 6a69 	vmov.f32	s13, s19
90014c0e:	ee19 3a90 	vmov	r3, s19
90014c12:	eeb0 6a47 	vmov.f32	s12, s14
90014c16:	eef0 5a47 	vmov.f32	s11, s14
90014c1a:	eef0 9a48 	vmov.f32	s19, s16
90014c1e:	eeb0 7a48 	vmov.f32	s14, s16
90014c22:	9314      	str	r3, [sp, #80]	; 0x50
90014c24:	ab14      	add	r3, sp, #80	; 0x50
90014c26:	2200      	movs	r2, #0
90014c28:	4631      	mov	r1, r6
90014c2a:	9303      	str	r3, [sp, #12]
90014c2c:	ab10      	add	r3, sp, #64	; 0x40
90014c2e:	4620      	mov	r0, r4
90014c30:	edcd 7a04 	vstr	s15, [sp, #16]
90014c34:	9302      	str	r3, [sp, #8]
90014c36:	ab0c      	add	r3, sp, #48	; 0x30
90014c38:	ed8d 9a05 	vstr	s18, [sp, #20]
90014c3c:	9301      	str	r3, [sp, #4]
90014c3e:	ab08      	add	r3, sp, #32
90014c40:	ed8d 9a06 	vstr	s18, [sp, #24]
90014c44:	9300      	str	r3, [sp, #0]
90014c46:	ab04      	add	r3, sp, #16
90014c48:	edcd 7a07 	vstr	s15, [sp, #28]
90014c4c:	edcd 7a08 	vstr	s15, [sp, #32]
90014c50:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
90014c54:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
90014c58:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
90014c5c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
90014c60:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
90014c64:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
90014c68:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
90014c6c:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
90014c70:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
90014c74:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
90014c78:	f7ff fe7e 	bl	90014978 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
90014c7c:	b018      	add	sp, #96	; 0x60
90014c7e:	ecbd 8b04 	vpop	{d8-d9}
90014c82:	bd70      	pop	{r4, r5, r6, pc}
90014c84:	eef0 6a47 	vmov.f32	s13, s14
90014c88:	ee18 3a10 	vmov	r3, s16
90014c8c:	eef0 5a69 	vmov.f32	s11, s19
90014c90:	eeb0 6a48 	vmov.f32	s12, s16
90014c94:	e7c5      	b.n	90014c22 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
90014c96:	bf00      	nop
90014c98:	00000000 	.word	0x00000000
90014c9c:	42c80000 	.word	0x42c80000
90014ca0:	24039ac4 	.word	0x24039ac4

90014ca4 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90014ca4:	2000      	movs	r0, #0
90014ca6:	4770      	bx	lr

90014ca8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90014ca8:	4b07      	ldr	r3, [pc, #28]	; (90014cc8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90014caa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90014cac:	881b      	ldrh	r3, [r3, #0]
90014cae:	4293      	cmp	r3, r2
90014cb0:	bf81      	itttt	hi
90014cb2:	4b06      	ldrhi	r3, [pc, #24]	; (90014ccc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90014cb4:	681b      	ldrhi	r3, [r3, #0]
90014cb6:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90014cba:	7858      	ldrbhi	r0, [r3, #1]
90014cbc:	bf8c      	ite	hi
90014cbe:	f000 0003 	andhi.w	r0, r0, #3
90014cc2:	2000      	movls	r0, #0
90014cc4:	4770      	bx	lr
90014cc6:	bf00      	nop
90014cc8:	24039b28 	.word	0x24039b28
90014ccc:	24039b24 	.word	0x24039b24

90014cd0 <_ZN8touchgfx8TextAreaD1Ev>:
90014cd0:	4770      	bx	lr
	...

90014cd4 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90014cd4:	4b11      	ldr	r3, [pc, #68]	; (90014d1c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90014cd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014cda:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90014cdc:	4604      	mov	r4, r0
90014cde:	881b      	ldrh	r3, [r3, #0]
90014ce0:	428b      	cmp	r3, r1
90014ce2:	d918      	bls.n	90014d16 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90014ce4:	6803      	ldr	r3, [r0, #0]
90014ce6:	6f9d      	ldr	r5, [r3, #120]	; 0x78
90014ce8:	4b0d      	ldr	r3, [pc, #52]	; (90014d20 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90014cea:	6818      	ldr	r0, [r3, #0]
90014cec:	f7ef fcac 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014cf0:	6823      	ldr	r3, [r4, #0]
90014cf2:	4606      	mov	r6, r0
90014cf4:	4620      	mov	r0, r4
90014cf6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014cf8:	4798      	blx	r3
90014cfa:	6823      	ldr	r3, [r4, #0]
90014cfc:	4607      	mov	r7, r0
90014cfe:	4620      	mov	r0, r4
90014d00:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90014d04:	4798      	blx	r3
90014d06:	463a      	mov	r2, r7
90014d08:	4603      	mov	r3, r0
90014d0a:	4631      	mov	r1, r6
90014d0c:	4620      	mov	r0, r4
90014d0e:	46ac      	mov	ip, r5
90014d10:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90014d14:	4760      	bx	ip
90014d16:	2000      	movs	r0, #0
90014d18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014d1c:	24039b28 	.word	0x24039b28
90014d20:	24039b30 	.word	0x24039b30

90014d24 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90014d24:	4b18      	ldr	r3, [pc, #96]	; (90014d88 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90014d26:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90014d2a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90014d2c:	4604      	mov	r4, r0
90014d2e:	881b      	ldrh	r3, [r3, #0]
90014d30:	428b      	cmp	r3, r1
90014d32:	d926      	bls.n	90014d82 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90014d34:	4b15      	ldr	r3, [pc, #84]	; (90014d8c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90014d36:	681b      	ldr	r3, [r3, #0]
90014d38:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90014d3c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90014d40:	4b13      	ldr	r3, [pc, #76]	; (90014d90 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90014d42:	7855      	ldrb	r5, [r2, #1]
90014d44:	681b      	ldr	r3, [r3, #0]
90014d46:	f3c5 0581 	ubfx	r5, r5, #2, #2
90014d4a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90014d4e:	6833      	ldr	r3, [r6, #0]
90014d50:	69df      	ldr	r7, [r3, #28]
90014d52:	4b10      	ldr	r3, [pc, #64]	; (90014d94 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90014d54:	6818      	ldr	r0, [r3, #0]
90014d56:	f7ef fc77 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014d5a:	6823      	ldr	r3, [r4, #0]
90014d5c:	4680      	mov	r8, r0
90014d5e:	4620      	mov	r0, r4
90014d60:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014d62:	4798      	blx	r3
90014d64:	6823      	ldr	r3, [r4, #0]
90014d66:	4681      	mov	r9, r0
90014d68:	4620      	mov	r0, r4
90014d6a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90014d6e:	4798      	blx	r3
90014d70:	464b      	mov	r3, r9
90014d72:	9000      	str	r0, [sp, #0]
90014d74:	4642      	mov	r2, r8
90014d76:	4629      	mov	r1, r5
90014d78:	4630      	mov	r0, r6
90014d7a:	47b8      	blx	r7
90014d7c:	b003      	add	sp, #12
90014d7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014d82:	2000      	movs	r0, #0
90014d84:	e7fa      	b.n	90014d7c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90014d86:	bf00      	nop
90014d88:	24039b28 	.word	0x24039b28
90014d8c:	24039b24 	.word	0x24039b24
90014d90:	24039b2c 	.word	0x24039b2c
90014d94:	24039b30 	.word	0x24039b30

90014d98 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90014d98:	b40e      	push	{r1, r2, r3}
90014d9a:	4b30      	ldr	r3, [pc, #192]	; (90014e5c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90014d9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014da0:	881a      	ldrh	r2, [r3, #0]
90014da2:	b09d      	sub	sp, #116	; 0x74
90014da4:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
90014da6:	4604      	mov	r4, r0
90014da8:	429a      	cmp	r2, r3
90014daa:	d954      	bls.n	90014e56 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90014dac:	aa26      	add	r2, sp, #152	; 0x98
90014dae:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 90014e60 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90014db2:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90014e64 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90014db6:	9202      	str	r2, [sp, #8]
90014db8:	f8d9 2000 	ldr.w	r2, [r9]
90014dbc:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90014dc0:	f8d8 3000 	ldr.w	r3, [r8]
90014dc4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014dc8:	682b      	ldr	r3, [r5, #0]
90014dca:	4628      	mov	r0, r5
90014dcc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014dce:	4798      	blx	r3
90014dd0:	4606      	mov	r6, r0
90014dd2:	b207      	sxth	r7, r0
90014dd4:	a803      	add	r0, sp, #12
90014dd6:	f005 f8e4 	bl	90019fa2 <_ZN8touchgfx12TextProviderC1Ev>
90014dda:	682b      	ldr	r3, [r5, #0]
90014ddc:	4628      	mov	r0, r5
90014dde:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90014de0:	4798      	blx	r3
90014de2:	682b      	ldr	r3, [r5, #0]
90014de4:	4682      	mov	sl, r0
90014de6:	4628      	mov	r0, r5
90014de8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014dea:	4798      	blx	r3
90014dec:	4653      	mov	r3, sl
90014dee:	9000      	str	r0, [sp, #0]
90014df0:	a803      	add	r0, sp, #12
90014df2:	9a02      	ldr	r2, [sp, #8]
90014df4:	9925      	ldr	r1, [sp, #148]	; 0x94
90014df6:	f005 f92f 	bl	9001a058 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014dfa:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90014dfc:	f8d9 3000 	ldr.w	r3, [r9]
90014e00:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90014e04:	8925      	ldrh	r5, [r4, #8]
90014e06:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90014e0a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90014e0e:	eba5 050c 	sub.w	r5, r5, ip
90014e12:	784a      	ldrb	r2, [r1, #1]
90014e14:	f8d8 3000 	ldr.w	r3, [r8]
90014e18:	b22d      	sxth	r5, r5
90014e1a:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
90014e1e:	f3c2 0281 	ubfx	r2, r2, #2, #2
90014e22:	9500      	str	r5, [sp, #0]
90014e24:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90014e28:	a803      	add	r0, sp, #12
90014e2a:	f002 fded 	bl	90017a08 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90014e2e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
90014e32:	b203      	sxth	r3, r0
90014e34:	18b9      	adds	r1, r7, r2
90014e36:	2900      	cmp	r1, #0
90014e38:	dd0b      	ble.n	90014e52 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90014e3a:	3b01      	subs	r3, #1
90014e3c:	fb13 f302 	smulbb	r3, r3, r2
90014e40:	fb16 3300 	smlabb	r3, r6, r0, r3
90014e44:	b21f      	sxth	r7, r3
90014e46:	4638      	mov	r0, r7
90014e48:	b01d      	add	sp, #116	; 0x74
90014e4a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014e4e:	b003      	add	sp, #12
90014e50:	4770      	bx	lr
90014e52:	2b00      	cmp	r3, #0
90014e54:	dcf7      	bgt.n	90014e46 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90014e56:	2700      	movs	r7, #0
90014e58:	e7f5      	b.n	90014e46 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90014e5a:	bf00      	nop
90014e5c:	24039b28 	.word	0x24039b28
90014e60:	24039b24 	.word	0x24039b24
90014e64:	24039b2c 	.word	0x24039b2c

90014e68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90014e68:	4bbd      	ldr	r3, [pc, #756]	; (90015160 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90014e6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014e6e:	460c      	mov	r4, r1
90014e70:	881b      	ldrh	r3, [r3, #0]
90014e72:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
90014e74:	b0a9      	sub	sp, #164	; 0xa4
90014e76:	4680      	mov	r8, r0
90014e78:	428b      	cmp	r3, r1
90014e7a:	d809      	bhi.n	90014e90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90014e7c:	2300      	movs	r3, #0
90014e7e:	f04f 32ff 	mov.w	r2, #4294967295
90014e82:	6083      	str	r3, [r0, #8]
90014e84:	e9c0 3200 	strd	r3, r2, [r0]
90014e88:	4640      	mov	r0, r8
90014e8a:	b029      	add	sp, #164	; 0xa4
90014e8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014e90:	4eb4      	ldr	r6, [pc, #720]	; (90015164 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90014e92:	6833      	ldr	r3, [r6, #0]
90014e94:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90014e98:	4bb3      	ldr	r3, [pc, #716]	; (90015168 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90014e9a:	681b      	ldr	r3, [r3, #0]
90014e9c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014ea0:	4bb2      	ldr	r3, [pc, #712]	; (9001516c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90014ea2:	6818      	ldr	r0, [r3, #0]
90014ea4:	f7ef fbd0 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014ea8:	682b      	ldr	r3, [r5, #0]
90014eaa:	4681      	mov	r9, r0
90014eac:	4628      	mov	r0, r5
90014eae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014eb0:	4798      	blx	r3
90014eb2:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
90014eb4:	b203      	sxth	r3, r0
90014eb6:	4682      	mov	sl, r0
90014eb8:	4407      	add	r7, r0
90014eba:	a80f      	add	r0, sp, #60	; 0x3c
90014ebc:	9304      	str	r3, [sp, #16]
90014ebe:	b2bb      	uxth	r3, r7
90014ec0:	9303      	str	r3, [sp, #12]
90014ec2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90014ec6:	2b00      	cmp	r3, #0
90014ec8:	f040 80a5 	bne.w	90015016 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90014ecc:	f005 f869 	bl	90019fa2 <_ZN8touchgfx12TextProviderC1Ev>
90014ed0:	682b      	ldr	r3, [r5, #0]
90014ed2:	4628      	mov	r0, r5
90014ed4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90014ed6:	4798      	blx	r3
90014ed8:	682b      	ldr	r3, [r5, #0]
90014eda:	4606      	mov	r6, r0
90014edc:	4628      	mov	r0, r5
90014ede:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014ee0:	4798      	blx	r3
90014ee2:	6823      	ldr	r3, [r4, #0]
90014ee4:	4607      	mov	r7, r0
90014ee6:	4620      	mov	r0, r4
90014ee8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014eea:	4798      	blx	r3
90014eec:	6823      	ldr	r3, [r4, #0]
90014eee:	4683      	mov	fp, r0
90014ef0:	4620      	mov	r0, r4
90014ef2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90014ef6:	4798      	blx	r3
90014ef8:	463b      	mov	r3, r7
90014efa:	4649      	mov	r1, r9
90014efc:	4632      	mov	r2, r6
90014efe:	2600      	movs	r6, #0
90014f00:	e9cd b000 	strd	fp, r0, [sp]
90014f04:	a80f      	add	r0, sp, #60	; 0x3c
90014f06:	4637      	mov	r7, r6
90014f08:	f005 f8bb 	bl	9001a082 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90014f0c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90014f10:	f8df b250 	ldr.w	fp, [pc, #592]	; 90015164 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90014f14:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90014f18:	bf0c      	ite	eq
90014f1a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90014f1e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90014f22:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90014f24:	4629      	mov	r1, r5
90014f26:	f8db 3000 	ldr.w	r3, [fp]
90014f2a:	a80f      	add	r0, sp, #60	; 0x3c
90014f2c:	3701      	adds	r7, #1
90014f2e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90014f32:	f647 72ff 	movw	r2, #32767	; 0x7fff
90014f36:	b2bf      	uxth	r7, r7
90014f38:	785b      	ldrb	r3, [r3, #1]
90014f3a:	f3c3 0381 	ubfx	r3, r3, #2, #2
90014f3e:	f002 fa7e 	bl	9001743e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90014f42:	9b03      	ldr	r3, [sp, #12]
90014f44:	4286      	cmp	r6, r0
90014f46:	eba9 0903 	sub.w	r9, r9, r3
90014f4a:	bfb8      	it	lt
90014f4c:	4606      	movlt	r6, r0
90014f4e:	a80f      	add	r0, sp, #60	; 0x3c
90014f50:	fa0f f989 	sxth.w	r9, r9
90014f54:	b236      	sxth	r6, r6
90014f56:	f005 f84b 	bl	90019ff0 <_ZN8touchgfx12TextProvider11endOfStringEv>
90014f5a:	b918      	cbnz	r0, 90014f64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014f5c:	7a2b      	ldrb	r3, [r5, #8]
90014f5e:	444b      	add	r3, r9
90014f60:	2b00      	cmp	r3, #0
90014f62:	dcde      	bgt.n	90014f22 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90014f64:	9b03      	ldr	r3, [sp, #12]
90014f66:	4620      	mov	r0, r4
90014f68:	9a04      	ldr	r2, [sp, #16]
90014f6a:	fb13 f707 	smulbb	r7, r3, r7
90014f6e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90014f70:	f895 9009 	ldrb.w	r9, [r5, #9]
90014f74:	1aff      	subs	r7, r7, r3
90014f76:	b2bf      	uxth	r7, r7
90014f78:	b23b      	sxth	r3, r7
90014f7a:	429a      	cmp	r2, r3
90014f7c:	bfa8      	it	ge
90014f7e:	4657      	movge	r7, sl
90014f80:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90014f84:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90014f88:	6823      	ldr	r3, [r4, #0]
90014f8a:	444f      	add	r7, r9
90014f8c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90014f8e:	bf08      	it	eq
90014f90:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90014f94:	fa1f f987 	uxth.w	r9, r7
90014f98:	bf18      	it	ne
90014f9a:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90014f9e:	4798      	blx	r3
90014fa0:	2801      	cmp	r0, #1
90014fa2:	fa0f f789 	sxth.w	r7, r9
90014fa6:	b2b3      	uxth	r3, r6
90014fa8:	f000 80e2 	beq.w	90015170 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90014fac:	2802      	cmp	r0, #2
90014fae:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
90014fb2:	f000 80e3 	beq.w	9001517c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90014fb6:	7aea      	ldrb	r2, [r5, #11]
90014fb8:	b236      	sxth	r6, r6
90014fba:	7b2d      	ldrb	r5, [r5, #12]
90014fbc:	1ab6      	subs	r6, r6, r2
90014fbe:	442a      	add	r2, r5
90014fc0:	fa1f fa86 	uxth.w	sl, r6
90014fc4:	4413      	add	r3, r2
90014fc6:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90014fca:	fa0f fb8a 	sxth.w	fp, sl
90014fce:	b29b      	uxth	r3, r3
90014fd0:	2a02      	cmp	r2, #2
90014fd2:	b21e      	sxth	r6, r3
90014fd4:	f000 80d6 	beq.w	90015184 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90014fd8:	2a03      	cmp	r2, #3
90014fda:	f000 80de 	beq.w	9001519a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90014fde:	2a01      	cmp	r2, #1
90014fe0:	f040 80e6 	bne.w	900151b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90014fe4:	8925      	ldrh	r5, [r4, #8]
90014fe6:	4633      	mov	r3, r6
90014fe8:	463e      	mov	r6, r7
90014fea:	eba5 0909 	sub.w	r9, r5, r9
90014fee:	461f      	mov	r7, r3
90014ff0:	465d      	mov	r5, fp
90014ff2:	fa0f fb89 	sxth.w	fp, r9
90014ff6:	4b5d      	ldr	r3, [pc, #372]	; (9001516c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90014ff8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90014ffa:	6818      	ldr	r0, [r3, #0]
90014ffc:	f7ef fb24 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90015000:	f8a8 b000 	strh.w	fp, [r8]
90015004:	f8a8 5002 	strh.w	r5, [r8, #2]
90015008:	f8a8 6004 	strh.w	r6, [r8, #4]
9001500c:	f8a8 7006 	strh.w	r7, [r8, #6]
90015010:	f8c8 0008 	str.w	r0, [r8, #8]
90015014:	e738      	b.n	90014e88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90015016:	f004 ffc4 	bl	90019fa2 <_ZN8touchgfx12TextProviderC1Ev>
9001501a:	682b      	ldr	r3, [r5, #0]
9001501c:	4628      	mov	r0, r5
9001501e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015020:	4798      	blx	r3
90015022:	682b      	ldr	r3, [r5, #0]
90015024:	4607      	mov	r7, r0
90015026:	4628      	mov	r0, r5
90015028:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001502a:	4798      	blx	r3
9001502c:	6823      	ldr	r3, [r4, #0]
9001502e:	4683      	mov	fp, r0
90015030:	4620      	mov	r0, r4
90015032:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90015034:	4798      	blx	r3
90015036:	6822      	ldr	r2, [r4, #0]
90015038:	9005      	str	r0, [sp, #20]
9001503a:	4620      	mov	r0, r4
9001503c:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
90015040:	4790      	blx	r2
90015042:	9b05      	ldr	r3, [sp, #20]
90015044:	463a      	mov	r2, r7
90015046:	4649      	mov	r1, r9
90015048:	9001      	str	r0, [sp, #4]
9001504a:	a80f      	add	r0, sp, #60	; 0x3c
9001504c:	9300      	str	r3, [sp, #0]
9001504e:	465b      	mov	r3, fp
90015050:	f005 f817 	bl	9001a082 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90015054:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90015058:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
9001505c:	af0f      	add	r7, sp, #60	; 0x3c
9001505e:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90015062:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90015066:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90015068:	bf0a      	itet	eq
9001506a:	464a      	moveq	r2, r9
9001506c:	461a      	movne	r2, r3
9001506e:	4699      	moveq	r9, r3
90015070:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
90015074:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
90015078:	1ad2      	subs	r2, r2, r3
9001507a:	6833      	ldr	r3, [r6, #0]
9001507c:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
90015080:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90015084:	7859      	ldrb	r1, [r3, #1]
90015086:	2300      	movs	r3, #0
90015088:	9707      	str	r7, [sp, #28]
9001508a:	f3c1 0181 	ubfx	r1, r1, #2, #2
9001508e:	f8ad 3018 	strh.w	r3, [sp, #24]
90015092:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90015096:	f88d 1020 	strb.w	r1, [sp, #32]
9001509a:	9509      	str	r5, [sp, #36]	; 0x24
9001509c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
900150a0:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
900150a4:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
900150a8:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900150ac:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
900150b0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900150b4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
900150b8:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900150bc:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
900150c0:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
900150c4:	b350      	cbz	r0, 9001511c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900150c6:	682b      	ldr	r3, [r5, #0]
900150c8:	4628      	mov	r0, r5
900150ca:	695b      	ldr	r3, [r3, #20]
900150cc:	4798      	blx	r3
900150ce:	4607      	mov	r7, r0
900150d0:	b320      	cbz	r0, 9001511c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900150d2:	9809      	ldr	r0, [sp, #36]	; 0x24
900150d4:	4639      	mov	r1, r7
900150d6:	6803      	ldr	r3, [r0, #0]
900150d8:	68db      	ldr	r3, [r3, #12]
900150da:	4798      	blx	r3
900150dc:	4606      	mov	r6, r0
900150de:	b1e8      	cbz	r0, 9001511c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900150e0:	7b43      	ldrb	r3, [r0, #13]
900150e2:	7a82      	ldrb	r2, [r0, #10]
900150e4:	005b      	lsls	r3, r3, #1
900150e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
900150ea:	4313      	orrs	r3, r2
900150ec:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
900150f0:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
900150f4:	2b06      	cmp	r3, #6
900150f6:	d111      	bne.n	9001511c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900150f8:	9809      	ldr	r0, [sp, #36]	; 0x24
900150fa:	4632      	mov	r2, r6
900150fc:	4639      	mov	r1, r7
900150fe:	6803      	ldr	r3, [r0, #0]
90015100:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015102:	4798      	blx	r3
90015104:	7b73      	ldrb	r3, [r6, #13]
90015106:	005b      	lsls	r3, r3, #1
90015108:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001510c:	7ab3      	ldrb	r3, [r6, #10]
9001510e:	4313      	orrs	r3, r2
90015110:	4418      	add	r0, r3
90015112:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90015116:	4418      	add	r0, r3
90015118:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
9001511c:	2600      	movs	r6, #0
9001511e:	4637      	mov	r7, r6
90015120:	a806      	add	r0, sp, #24
90015122:	3701      	adds	r7, #1
90015124:	f002 fb6d 	bl	90017802 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015128:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
9001512c:	9b03      	ldr	r3, [sp, #12]
9001512e:	b2bf      	uxth	r7, r7
90015130:	4286      	cmp	r6, r0
90015132:	eba9 0903 	sub.w	r9, r9, r3
90015136:	f8bd 3018 	ldrh.w	r3, [sp, #24]
9001513a:	bfb8      	it	lt
9001513c:	4606      	movlt	r6, r0
9001513e:	fa0f f989 	sxth.w	r9, r9
90015142:	b236      	sxth	r6, r6
90015144:	2b00      	cmp	r3, #0
90015146:	f43f af0d 	beq.w	90014f64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001514a:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
9001514e:	2b00      	cmp	r3, #0
90015150:	f47f af08 	bne.w	90014f64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90015154:	7a2b      	ldrb	r3, [r5, #8]
90015156:	444b      	add	r3, r9
90015158:	2b00      	cmp	r3, #0
9001515a:	dce1      	bgt.n	90015120 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
9001515c:	e702      	b.n	90014f64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001515e:	bf00      	nop
90015160:	24039b28 	.word	0x24039b28
90015164:	24039b24 	.word	0x24039b24
90015168:	24039b2c 	.word	0x24039b2c
9001516c:	24039b30 	.word	0x24039b30
90015170:	ebaa 0606 	sub.w	r6, sl, r6
90015174:	2002      	movs	r0, #2
90015176:	fb96 f6f0 	sdiv	r6, r6, r0
9001517a:	e71c      	b.n	90014fb6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
9001517c:	441e      	add	r6, r3
9001517e:	ebaa 0606 	sub.w	r6, sl, r6
90015182:	e718      	b.n	90014fb6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90015184:	8925      	ldrh	r5, [r4, #8]
90015186:	1aed      	subs	r5, r5, r3
90015188:	eba5 050a 	sub.w	r5, r5, sl
9001518c:	fa0f fb85 	sxth.w	fp, r5
90015190:	8965      	ldrh	r5, [r4, #10]
90015192:	eba5 0509 	sub.w	r5, r5, r9
90015196:	b22d      	sxth	r5, r5
90015198:	e72d      	b.n	90014ff6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
9001519a:	8965      	ldrh	r5, [r4, #10]
9001519c:	f04f 0b00 	mov.w	fp, #0
900151a0:	1aed      	subs	r5, r5, r3
900151a2:	4633      	mov	r3, r6
900151a4:	463e      	mov	r6, r7
900151a6:	eba5 050a 	sub.w	r5, r5, sl
900151aa:	461f      	mov	r7, r3
900151ac:	b22d      	sxth	r5, r5
900151ae:	e722      	b.n	90014ff6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
900151b0:	2500      	movs	r5, #0
900151b2:	e720      	b.n	90014ff6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

900151b4 <_ZN8touchgfx8TextAreaD0Ev>:
900151b4:	b510      	push	{r4, lr}
900151b6:	4604      	mov	r4, r0
900151b8:	2148      	movs	r1, #72	; 0x48
900151ba:	f014 fa13 	bl	900295e4 <_ZdlPvj>
900151be:	4620      	mov	r0, r4
900151c0:	bd10      	pop	{r4, pc}
	...

900151c4 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
900151c4:	b513      	push	{r0, r1, r4, lr}
900151c6:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
900151ca:	4604      	mov	r4, r0
900151cc:	b1fb      	cbz	r3, 9001520e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900151ce:	4b16      	ldr	r3, [pc, #88]	; (90015228 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
900151d0:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
900151d2:	881b      	ldrh	r3, [r3, #0]
900151d4:	428b      	cmp	r3, r1
900151d6:	d91a      	bls.n	9001520e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900151d8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900151dc:	2b00      	cmp	r3, #0
900151de:	dd16      	ble.n	9001520e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900151e0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900151e4:	2b00      	cmp	r3, #0
900151e6:	dd12      	ble.n	9001520e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900151e8:	4b10      	ldr	r3, [pc, #64]	; (9001522c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
900151ea:	6818      	ldr	r0, [r3, #0]
900151ec:	f7ef fa2c 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
900151f0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
900151f4:	6822      	ldr	r2, [r4, #0]
900151f6:	2b00      	cmp	r3, #0
900151f8:	db06      	blt.n	90015208 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900151fa:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
900151fe:	2b00      	cmp	r3, #0
90015200:	db02      	blt.n	90015208 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90015202:	6c63      	ldr	r3, [r4, #68]	; 0x44
90015204:	4298      	cmp	r0, r3
90015206:	d004      	beq.n	90015212 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90015208:	6953      	ldr	r3, [r2, #20]
9001520a:	4620      	mov	r0, r4
9001520c:	4798      	blx	r3
9001520e:	b002      	add	sp, #8
90015210:	bd10      	pop	{r4, pc}
90015212:	f104 013c 	add.w	r1, r4, #60	; 0x3c
90015216:	466b      	mov	r3, sp
90015218:	6912      	ldr	r2, [r2, #16]
9001521a:	c903      	ldmia	r1, {r0, r1}
9001521c:	e883 0003 	stmia.w	r3, {r0, r1}
90015220:	4619      	mov	r1, r3
90015222:	4620      	mov	r0, r4
90015224:	4790      	blx	r2
90015226:	e7f2      	b.n	9001520e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015228:	24039b28 	.word	0x24039b28
9001522c:	24039b30 	.word	0x24039b30

90015230 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90015230:	4b45      	ldr	r3, [pc, #276]	; (90015348 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90015232:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015236:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90015238:	b08e      	sub	sp, #56	; 0x38
9001523a:	881b      	ldrh	r3, [r3, #0]
9001523c:	4604      	mov	r4, r0
9001523e:	4293      	cmp	r3, r2
90015240:	d97e      	bls.n	90015340 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015242:	6808      	ldr	r0, [r1, #0]
90015244:	ab05      	add	r3, sp, #20
90015246:	6849      	ldr	r1, [r1, #4]
90015248:	4d40      	ldr	r5, [pc, #256]	; (9001534c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
9001524a:	c303      	stmia	r3!, {r0, r1}
9001524c:	4611      	mov	r1, r2
9001524e:	6828      	ldr	r0, [r5, #0]
90015250:	f7ef f9fa 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90015254:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90015258:	2b00      	cmp	r3, #0
9001525a:	db11      	blt.n	90015280 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001525c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90015260:	2b00      	cmp	r3, #0
90015262:	db0d      	blt.n	90015280 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90015264:	6c63      	ldr	r3, [r4, #68]	; 0x44
90015266:	4298      	cmp	r0, r3
90015268:	d10a      	bne.n	90015280 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001526a:	f104 023c 	add.w	r2, r4, #60	; 0x3c
9001526e:	ab09      	add	r3, sp, #36	; 0x24
90015270:	e892 0003 	ldmia.w	r2, {r0, r1}
90015274:	e883 0003 	stmia.w	r3, {r0, r1}
90015278:	4619      	mov	r1, r3
9001527a:	a805      	add	r0, sp, #20
9001527c:	f7fd fda0 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90015280:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90015284:	2b00      	cmp	r3, #0
90015286:	dd5b      	ble.n	90015340 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015288:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
9001528c:	2b00      	cmp	r3, #0
9001528e:	dd57      	ble.n	90015340 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015290:	4f2f      	ldr	r7, [pc, #188]	; (90015350 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90015292:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90015294:	683b      	ldr	r3, [r7, #0]
90015296:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9001529a:	4b2e      	ldr	r3, [pc, #184]	; (90015354 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
9001529c:	681b      	ldr	r3, [r3, #0]
9001529e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900152a2:	2e00      	cmp	r6, #0
900152a4:	d04c      	beq.n	90015340 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900152a6:	6823      	ldr	r3, [r4, #0]
900152a8:	4620      	mov	r0, r4
900152aa:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
900152ae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
900152b0:	4798      	blx	r3
900152b2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
900152b4:	683b      	ldr	r3, [r7, #0]
900152b6:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
900152ba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900152be:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
900152c2:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
900152c6:	785b      	ldrb	r3, [r3, #1]
900152c8:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
900152cc:	f3c3 0381 	ubfx	r3, r3, #2, #2
900152d0:	6b21      	ldr	r1, [r4, #48]	; 0x30
900152d2:	9609      	str	r6, [sp, #36]	; 0x24
900152d4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
900152d8:	4b1f      	ldr	r3, [pc, #124]	; (90015358 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
900152da:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
900152de:	681b      	ldr	r3, [r3, #0]
900152e0:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
900152e4:	910b      	str	r1, [sp, #44]	; 0x2c
900152e6:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
900152ea:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
900152ee:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
900152f2:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
900152f6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900152fa:	b10a      	cbz	r2, 90015300 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
900152fc:	6cde      	ldr	r6, [r3, #76]	; 0x4c
900152fe:	b906      	cbnz	r6, 90015302 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90015300:	689e      	ldr	r6, [r3, #8]
90015302:	af07      	add	r7, sp, #28
90015304:	4621      	mov	r1, r4
90015306:	4638      	mov	r0, r7
90015308:	f004 f96a 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001530c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
9001530e:	6828      	ldr	r0, [r5, #0]
90015310:	f7ef f99a 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90015314:	6823      	ldr	r3, [r4, #0]
90015316:	4605      	mov	r5, r0
90015318:	4620      	mov	r0, r4
9001531a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001531c:	4798      	blx	r3
9001531e:	6823      	ldr	r3, [r4, #0]
90015320:	4680      	mov	r8, r0
90015322:	4620      	mov	r0, r4
90015324:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90015328:	4798      	blx	r3
9001532a:	ab09      	add	r3, sp, #36	; 0x24
9001532c:	9501      	str	r5, [sp, #4]
9001532e:	9300      	str	r3, [sp, #0]
90015330:	ab05      	add	r3, sp, #20
90015332:	e9cd 8002 	strd	r8, r0, [sp, #8]
90015336:	4630      	mov	r0, r6
90015338:	e897 0006 	ldmia.w	r7, {r1, r2}
9001533c:	f7ef f934 	bl	900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90015340:	b00e      	add	sp, #56	; 0x38
90015342:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015346:	bf00      	nop
90015348:	24039b28 	.word	0x24039b28
9001534c:	24039b30 	.word	0x24039b30
90015350:	24039b24 	.word	0x24039b24
90015354:	24039b2c 	.word	0x24039b2c
90015358:	24039acc 	.word	0x24039acc

9001535c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
9001535c:	b570      	push	{r4, r5, r6, lr}
9001535e:	6803      	ldr	r3, [r0, #0]
90015360:	4604      	mov	r4, r0
90015362:	4615      	mov	r5, r2
90015364:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015366:	4798      	blx	r3
90015368:	6823      	ldr	r3, [r4, #0]
9001536a:	4629      	mov	r1, r5
9001536c:	4620      	mov	r0, r4
9001536e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90015370:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015374:	4718      	bx	r3
	...

90015378 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90015378:	b538      	push	{r3, r4, r5, lr}
9001537a:	4b0e      	ldr	r3, [pc, #56]	; (900153b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
9001537c:	4604      	mov	r4, r0
9001537e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90015380:	881b      	ldrh	r3, [r3, #0]
90015382:	429a      	cmp	r2, r3
90015384:	d214      	bcs.n	900153b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90015386:	6803      	ldr	r3, [r0, #0]
90015388:	6f5b      	ldr	r3, [r3, #116]	; 0x74
9001538a:	4798      	blx	r3
9001538c:	6823      	ldr	r3, [r4, #0]
9001538e:	4605      	mov	r5, r0
90015390:	4620      	mov	r0, r4
90015392:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90015394:	4798      	blx	r3
90015396:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
9001539a:	b22d      	sxth	r5, r5
9001539c:	4601      	mov	r1, r0
9001539e:	f013 0ffd 	tst.w	r3, #253	; 0xfd
900153a2:	bf06      	itte	eq
900153a4:	4602      	moveq	r2, r0
900153a6:	4629      	moveq	r1, r5
900153a8:	462a      	movne	r2, r5
900153aa:	4620      	mov	r0, r4
900153ac:	f7ff ffd6 	bl	9001535c <_ZN8touchgfx8Drawable14setWidthHeightEss>
900153b0:	bd38      	pop	{r3, r4, r5, pc}
900153b2:	bf00      	nop
900153b4:	24039b28 	.word	0x24039b28

900153b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
900153b8:	b530      	push	{r4, r5, lr}
900153ba:	888b      	ldrh	r3, [r1, #4]
900153bc:	b085      	sub	sp, #20
900153be:	4604      	mov	r4, r0
900153c0:	8583      	strh	r3, [r0, #44]	; 0x2c
900153c2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900153c6:	b923      	cbnz	r3, 900153d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
900153c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900153cc:	b90b      	cbnz	r3, 900153d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
900153ce:	f7ff ffd3 	bl	90015378 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
900153d2:	6823      	ldr	r3, [r4, #0]
900153d4:	466d      	mov	r5, sp
900153d6:	4621      	mov	r1, r4
900153d8:	343c      	adds	r4, #60	; 0x3c
900153da:	4628      	mov	r0, r5
900153dc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
900153e0:	4798      	blx	r3
900153e2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900153e6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
900153ea:	b005      	add	sp, #20
900153ec:	bd30      	pop	{r4, r5, pc}

900153ee <_ZNK8touchgfx3Box12getSolidRectEv>:
900153ee:	2300      	movs	r3, #0
900153f0:	8083      	strh	r3, [r0, #4]
900153f2:	80c3      	strh	r3, [r0, #6]
900153f4:	8003      	strh	r3, [r0, #0]
900153f6:	8043      	strh	r3, [r0, #2]
900153f8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
900153fc:	2bff      	cmp	r3, #255	; 0xff
900153fe:	bf01      	itttt	eq
90015400:	890b      	ldrheq	r3, [r1, #8]
90015402:	8083      	strheq	r3, [r0, #4]
90015404:	894b      	ldrheq	r3, [r1, #10]
90015406:	80c3      	strheq	r3, [r0, #6]
90015408:	4770      	bx	lr
	...

9001540c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
9001540c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001540e:	4604      	mov	r4, r0
90015410:	466b      	mov	r3, sp
90015412:	6808      	ldr	r0, [r1, #0]
90015414:	6849      	ldr	r1, [r1, #4]
90015416:	c303      	stmia	r3!, {r0, r1}
90015418:	6823      	ldr	r3, [r4, #0]
9001541a:	4669      	mov	r1, sp
9001541c:	4620      	mov	r0, r4
9001541e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015420:	4798      	blx	r3
90015422:	4b08      	ldr	r3, [pc, #32]	; (90015444 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90015424:	681b      	ldr	r3, [r3, #0]
90015426:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9001542a:	b10a      	cbz	r2, 90015430 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
9001542c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9001542e:	b900      	cbnz	r0, 90015432 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90015430:	6898      	ldr	r0, [r3, #8]
90015432:	6803      	ldr	r3, [r0, #0]
90015434:	4669      	mov	r1, sp
90015436:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90015438:	6a1d      	ldr	r5, [r3, #32]
9001543a:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
9001543e:	47a8      	blx	r5
90015440:	b003      	add	sp, #12
90015442:	bd30      	pop	{r4, r5, pc}
90015444:	24039acc 	.word	0x24039acc

90015448 <_ZN8touchgfx3BoxD1Ev>:
90015448:	4770      	bx	lr

9001544a <_ZN8touchgfx3BoxD0Ev>:
9001544a:	b510      	push	{r4, lr}
9001544c:	4604      	mov	r4, r0
9001544e:	212c      	movs	r1, #44	; 0x2c
90015450:	f014 f8c8 	bl	900295e4 <_ZdlPvj>
90015454:	4620      	mov	r0, r4
90015456:	bd10      	pop	{r4, pc}

90015458 <_ZNK8touchgfx3Box17invalidateContentEv>:
90015458:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
9001545c:	b12a      	cbz	r2, 9001546a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001545e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90015462:	b112      	cbz	r2, 9001546a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90015464:	6803      	ldr	r3, [r0, #0]
90015466:	695b      	ldr	r3, [r3, #20]
90015468:	4718      	bx	r3
9001546a:	4770      	bx	lr

9001546c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
9001546c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
90015470:	4770      	bx	lr

90015472 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90015472:	b570      	push	{r4, r5, r6, lr}
90015474:	880b      	ldrh	r3, [r1, #0]
90015476:	4605      	mov	r5, r0
90015478:	4604      	mov	r4, r0
9001547a:	85c3      	strh	r3, [r0, #46]	; 0x2e
9001547c:	8813      	ldrh	r3, [r2, #0]
9001547e:	f825 3f30 	strh.w	r3, [r5, #48]!
90015482:	4628      	mov	r0, r5
90015484:	f006 f91a 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
90015488:	4606      	mov	r6, r0
9001548a:	4628      	mov	r0, r5
9001548c:	f006 f94a 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015490:	6823      	ldr	r3, [r4, #0]
90015492:	4605      	mov	r5, r0
90015494:	4631      	mov	r1, r6
90015496:	4620      	mov	r0, r4
90015498:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001549a:	4798      	blx	r3
9001549c:	6823      	ldr	r3, [r4, #0]
9001549e:	4629      	mov	r1, r5
900154a0:	4620      	mov	r0, r4
900154a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900154a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900154a8:	4718      	bx	r3

900154aa <_ZN8touchgfx14AbstractButton13executeActionEv>:
900154aa:	b510      	push	{r4, lr}
900154ac:	4604      	mov	r4, r0
900154ae:	6a80      	ldr	r0, [r0, #40]	; 0x28
900154b0:	b150      	cbz	r0, 900154c8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900154b2:	6803      	ldr	r3, [r0, #0]
900154b4:	68db      	ldr	r3, [r3, #12]
900154b6:	4798      	blx	r3
900154b8:	b130      	cbz	r0, 900154c8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900154ba:	6aa0      	ldr	r0, [r4, #40]	; 0x28
900154bc:	4621      	mov	r1, r4
900154be:	6803      	ldr	r3, [r0, #0]
900154c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900154c4:	689b      	ldr	r3, [r3, #8]
900154c6:	4718      	bx	r3
900154c8:	bd10      	pop	{r4, pc}

900154ca <_ZNK8touchgfx6Button12getSolidRectEv>:
900154ca:	b510      	push	{r4, lr}
900154cc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
900154d0:	4604      	mov	r4, r0
900154d2:	2bff      	cmp	r3, #255	; 0xff
900154d4:	d006      	beq.n	900154e4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
900154d6:	2300      	movs	r3, #0
900154d8:	8003      	strh	r3, [r0, #0]
900154da:	8043      	strh	r3, [r0, #2]
900154dc:	8083      	strh	r3, [r0, #4]
900154de:	80c3      	strh	r3, [r0, #6]
900154e0:	4620      	mov	r0, r4
900154e2:	bd10      	pop	{r4, pc}
900154e4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
900154e8:	b11b      	cbz	r3, 900154f2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
900154ea:	3130      	adds	r1, #48	; 0x30
900154ec:	f006 f94e 	bl	9001b78c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900154f0:	e7f6      	b.n	900154e0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
900154f2:	312e      	adds	r1, #46	; 0x2e
900154f4:	e7fa      	b.n	900154ec <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

900154f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
900154f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900154fc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90015500:	b08a      	sub	sp, #40	; 0x28
90015502:	4604      	mov	r4, r0
90015504:	4688      	mov	r8, r1
90015506:	2b00      	cmp	r3, #0
90015508:	d066      	beq.n	900155d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
9001550a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
9001550c:	a805      	add	r0, sp, #20
9001550e:	f8ad 3014 	strh.w	r3, [sp, #20]
90015512:	f006 f8d3 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
90015516:	4607      	mov	r7, r0
90015518:	a805      	add	r0, sp, #20
9001551a:	f006 f903 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001551e:	f9b8 6000 	ldrsh.w	r6, [r8]
90015522:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90015526:	2300      	movs	r3, #0
90015528:	4432      	add	r2, r6
9001552a:	9306      	str	r3, [sp, #24]
9001552c:	b292      	uxth	r2, r2
9001552e:	fa0f fc82 	sxth.w	ip, r2
90015532:	459c      	cmp	ip, r3
90015534:	dd52      	ble.n	900155dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90015536:	42b7      	cmp	r7, r6
90015538:	dd50      	ble.n	900155dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001553a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
9001553e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90015542:	442b      	add	r3, r5
90015544:	b29b      	uxth	r3, r3
90015546:	b219      	sxth	r1, r3
90015548:	2900      	cmp	r1, #0
9001554a:	dd47      	ble.n	900155dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001554c:	42a8      	cmp	r0, r5
9001554e:	dd45      	ble.n	900155dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90015550:	4567      	cmp	r7, ip
90015552:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90015556:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9001555a:	bfb8      	it	lt
9001555c:	b2ba      	uxthlt	r2, r7
9001555e:	4288      	cmp	r0, r1
90015560:	f8ad 6018 	strh.w	r6, [sp, #24]
90015564:	bfb8      	it	lt
90015566:	b283      	uxthlt	r3, r0
90015568:	1b92      	subs	r2, r2, r6
9001556a:	f8ad 501a 	strh.w	r5, [sp, #26]
9001556e:	1b5b      	subs	r3, r3, r5
90015570:	f8ad 201c 	strh.w	r2, [sp, #28]
90015574:	f8ad 301e 	strh.w	r3, [sp, #30]
90015578:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9001557c:	f64f 73ff 	movw	r3, #65535	; 0xffff
90015580:	429a      	cmp	r2, r3
90015582:	d026      	beq.n	900155d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015584:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90015588:	2b00      	cmp	r3, #0
9001558a:	dd22      	ble.n	900155d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001558c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90015590:	2b00      	cmp	r3, #0
90015592:	dd1e      	ble.n	900155d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015594:	2300      	movs	r3, #0
90015596:	a908      	add	r1, sp, #32
90015598:	4620      	mov	r0, r4
9001559a:	e9cd 3308 	strd	r3, r3, [sp, #32]
9001559e:	6823      	ldr	r3, [r4, #0]
900155a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900155a2:	4798      	blx	r3
900155a4:	4b0f      	ldr	r3, [pc, #60]	; (900155e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
900155a6:	681b      	ldr	r3, [r3, #0]
900155a8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900155ac:	b10a      	cbz	r2, 900155b2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
900155ae:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900155b0:	b900      	cbnz	r0, 900155b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
900155b2:	6898      	ldr	r0, [r3, #8]
900155b4:	2501      	movs	r5, #1
900155b6:	6801      	ldr	r1, [r0, #0]
900155b8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
900155bc:	9502      	str	r5, [sp, #8]
900155be:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
900155c2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
900155c6:	9401      	str	r4, [sp, #4]
900155c8:	ac06      	add	r4, sp, #24
900155ca:	9400      	str	r4, [sp, #0]
900155cc:	688c      	ldr	r4, [r1, #8]
900155ce:	a905      	add	r1, sp, #20
900155d0:	47a0      	blx	r4
900155d2:	b00a      	add	sp, #40	; 0x28
900155d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900155d8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
900155da:	e797      	b.n	9001550c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
900155dc:	2300      	movs	r3, #0
900155de:	9307      	str	r3, [sp, #28]
900155e0:	e7ca      	b.n	90015578 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
900155e2:	bf00      	nop
900155e4:	24039acc 	.word	0x24039acc

900155e8 <_ZNK8touchgfx6Button17invalidateContentEv>:
900155e8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
900155ec:	b12a      	cbz	r2, 900155fa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900155ee:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900155f2:	b112      	cbz	r2, 900155fa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900155f4:	6803      	ldr	r3, [r0, #0]
900155f6:	695b      	ldr	r3, [r3, #20]
900155f8:	4718      	bx	r3
900155fa:	4770      	bx	lr

900155fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
900155fc:	4b30      	ldr	r3, [pc, #192]	; (900156c0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
900155fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015602:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90015604:	b08d      	sub	sp, #52	; 0x34
90015606:	881b      	ldrh	r3, [r3, #0]
90015608:	4604      	mov	r4, r0
9001560a:	460f      	mov	r7, r1
9001560c:	4293      	cmp	r3, r2
9001560e:	d954      	bls.n	900156ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90015610:	4b2c      	ldr	r3, [pc, #176]	; (900156c4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90015612:	6819      	ldr	r1, [r3, #0]
90015614:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90015618:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
9001561c:	4a2a      	ldr	r2, [pc, #168]	; (900156c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
9001561e:	6812      	ldr	r2, [r2, #0]
90015620:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90015624:	2900      	cmp	r1, #0
90015626:	d048      	beq.n	900156ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90015628:	785a      	ldrb	r2, [r3, #1]
9001562a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
9001562e:	f3c2 0801 	ubfx	r8, r2, #0, #2
90015632:	f3c2 0281 	ubfx	r2, r2, #2, #2
90015636:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
9001563a:	4b24      	ldr	r3, [pc, #144]	; (900156cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
9001563c:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
90015640:	681a      	ldr	r2, [r3, #0]
90015642:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
90015646:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
9001564a:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
9001564e:	6b26      	ldr	r6, [r4, #48]	; 0x30
90015650:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
90015654:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
90015658:	9107      	str	r1, [sp, #28]
9001565a:	f88d 8020 	strb.w	r8, [sp, #32]
9001565e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
90015662:	9609      	str	r6, [sp, #36]	; 0x24
90015664:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
90015668:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
9001566c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
90015670:	b10b      	cbz	r3, 90015676 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
90015672:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
90015674:	b905      	cbnz	r5, 90015678 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
90015676:	6895      	ldr	r5, [r2, #8]
90015678:	ae05      	add	r6, sp, #20
9001567a:	4621      	mov	r1, r4
9001567c:	4630      	mov	r0, r6
9001567e:	f003 ffaf 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015682:	4b13      	ldr	r3, [pc, #76]	; (900156d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90015684:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90015686:	6818      	ldr	r0, [r3, #0]
90015688:	f7ee ffde 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
9001568c:	6823      	ldr	r3, [r4, #0]
9001568e:	4680      	mov	r8, r0
90015690:	4620      	mov	r0, r4
90015692:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90015694:	4798      	blx	r3
90015696:	6823      	ldr	r3, [r4, #0]
90015698:	4681      	mov	r9, r0
9001569a:	4620      	mov	r0, r4
9001569c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900156a0:	4798      	blx	r3
900156a2:	ab07      	add	r3, sp, #28
900156a4:	f8cd 8004 	str.w	r8, [sp, #4]
900156a8:	9300      	str	r3, [sp, #0]
900156aa:	463b      	mov	r3, r7
900156ac:	e9cd 9002 	strd	r9, r0, [sp, #8]
900156b0:	4628      	mov	r0, r5
900156b2:	e896 0006 	ldmia.w	r6, {r1, r2}
900156b6:	f7ee ff77 	bl	900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900156ba:	b00d      	add	sp, #52	; 0x34
900156bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900156c0:	24039b28 	.word	0x24039b28
900156c4:	24039b24 	.word	0x24039b24
900156c8:	24039b2c 	.word	0x24039b2c
900156cc:	24039acc 	.word	0x24039acc
900156d0:	24039b30 	.word	0x24039b30

900156d4 <_ZN8touchgfx13BoxWithBorderD1Ev>:
900156d4:	4770      	bx	lr

900156d6 <_ZN8touchgfx13BoxWithBorderD0Ev>:
900156d6:	b510      	push	{r4, lr}
900156d8:	4604      	mov	r4, r0
900156da:	2134      	movs	r1, #52	; 0x34
900156dc:	f013 ff82 	bl	900295e4 <_ZdlPvj>
900156e0:	4620      	mov	r0, r4
900156e2:	bd10      	pop	{r4, pc}

900156e4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
900156e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900156e8:	8e03      	ldrh	r3, [r0, #48]	; 0x30
900156ea:	4604      	mov	r4, r0
900156ec:	460e      	mov	r6, r1
900156ee:	b08e      	sub	sp, #56	; 0x38
900156f0:	b218      	sxth	r0, r3
900156f2:	8921      	ldrh	r1, [r4, #8]
900156f4:	005b      	lsls	r3, r3, #1
900156f6:	8962      	ldrh	r2, [r4, #10]
900156f8:	f8ad 0000 	strh.w	r0, [sp]
900156fc:	b29b      	uxth	r3, r3
900156fe:	f8ad 0002 	strh.w	r0, [sp, #2]
90015702:	1ac9      	subs	r1, r1, r3
90015704:	1ad3      	subs	r3, r2, r3
90015706:	b209      	sxth	r1, r1
90015708:	b21b      	sxth	r3, r3
9001570a:	2900      	cmp	r1, #0
9001570c:	f8ad 1004 	strh.w	r1, [sp, #4]
90015710:	f8ad 3006 	strh.w	r3, [sp, #6]
90015714:	dd5e      	ble.n	900157d4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90015716:	2b00      	cmp	r3, #0
90015718:	dd5c      	ble.n	900157d4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
9001571a:	6830      	ldr	r0, [r6, #0]
9001571c:	ab02      	add	r3, sp, #8
9001571e:	6871      	ldr	r1, [r6, #4]
90015720:	c303      	stmia	r3!, {r0, r1}
90015722:	4669      	mov	r1, sp
90015724:	a802      	add	r0, sp, #8
90015726:	f7fd fb4b 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
9001572a:	4620      	mov	r0, r4
9001572c:	a902      	add	r1, sp, #8
9001572e:	f7ff fe6d 	bl	9001540c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
90015732:	8e20      	ldrh	r0, [r4, #48]	; 0x30
90015734:	2800      	cmp	r0, #0
90015736:	d05f      	beq.n	900157f8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90015738:	8963      	ldrh	r3, [r4, #10]
9001573a:	b202      	sxth	r2, r0
9001573c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90015740:	2500      	movs	r5, #0
90015742:	1a1f      	subs	r7, r3, r0
90015744:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
90015748:	f8ad 101c 	strh.w	r1, [sp, #28]
9001574c:	b21b      	sxth	r3, r3
9001574e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90015752:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
90015756:	af04      	add	r7, sp, #16
90015758:	1a09      	subs	r1, r1, r0
9001575a:	9506      	str	r5, [sp, #24]
9001575c:	f8ad 201e 	strh.w	r2, [sp, #30]
90015760:	f8ad 5020 	strh.w	r5, [sp, #32]
90015764:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
90015768:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
9001576c:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90015770:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
90015774:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90015778:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
9001577c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90015780:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90015784:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90015788:	ab06      	add	r3, sp, #24
9001578a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001578e:	e893 0003 	ldmia.w	r3, {r0, r1}
90015792:	e887 0003 	stmia.w	r7, {r0, r1}
90015796:	4631      	mov	r1, r6
90015798:	4638      	mov	r0, r7
9001579a:	f7fd fb11 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
9001579e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
900157a2:	2b00      	cmp	r3, #0
900157a4:	dd12      	ble.n	900157cc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
900157a6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900157aa:	2b00      	cmp	r3, #0
900157ac:	dd0e      	ble.n	900157cc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
900157ae:	6823      	ldr	r3, [r4, #0]
900157b0:	4639      	mov	r1, r7
900157b2:	4620      	mov	r0, r4
900157b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900157b6:	4798      	blx	r3
900157b8:	f7fd fde6 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
900157bc:	6803      	ldr	r3, [r0, #0]
900157be:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900157c0:	4639      	mov	r1, r7
900157c2:	f8d3 8020 	ldr.w	r8, [r3, #32]
900157c6:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
900157ca:	47c0      	blx	r8
900157cc:	3501      	adds	r5, #1
900157ce:	2d04      	cmp	r5, #4
900157d0:	d1da      	bne.n	90015788 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
900157d2:	e011      	b.n	900157f8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
900157d4:	6830      	ldr	r0, [r6, #0]
900157d6:	ab06      	add	r3, sp, #24
900157d8:	6871      	ldr	r1, [r6, #4]
900157da:	c303      	stmia	r3!, {r0, r1}
900157dc:	6823      	ldr	r3, [r4, #0]
900157de:	a906      	add	r1, sp, #24
900157e0:	4620      	mov	r0, r4
900157e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900157e4:	4798      	blx	r3
900157e6:	f7fd fdcf 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
900157ea:	6803      	ldr	r3, [r0, #0]
900157ec:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900157ee:	a906      	add	r1, sp, #24
900157f0:	6a1d      	ldr	r5, [r3, #32]
900157f2:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
900157f6:	47a8      	blx	r5
900157f8:	b00e      	add	sp, #56	; 0x38
900157fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900157fe <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
900157fe:	4770      	bx	lr

90015800 <_ZN8touchgfx14ButtonWithIconD1Ev>:
90015800:	4770      	bx	lr

90015802 <_ZN8touchgfx14ButtonWithIconD0Ev>:
90015802:	b510      	push	{r4, lr}
90015804:	4604      	mov	r4, r0
90015806:	213c      	movs	r1, #60	; 0x3c
90015808:	f013 feec 	bl	900295e4 <_ZdlPvj>
9001580c:	4620      	mov	r0, r4
9001580e:	bd10      	pop	{r4, pc}

90015810 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
90015810:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015814:	461c      	mov	r4, r3
90015816:	4606      	mov	r6, r0
90015818:	9f06      	ldr	r7, [sp, #24]
9001581a:	f7ff fe2a 	bl	90015472 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
9001581e:	8823      	ldrh	r3, [r4, #0]
90015820:	f04f 0802 	mov.w	r8, #2
90015824:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
90015828:	4638      	mov	r0, r7
9001582a:	86b3      	strh	r3, [r6, #52]	; 0x34
9001582c:	883b      	ldrh	r3, [r7, #0]
9001582e:	fb95 f5f8 	sdiv	r5, r5, r8
90015832:	86f3      	strh	r3, [r6, #54]	; 0x36
90015834:	b2ad      	uxth	r5, r5
90015836:	f005 ff41 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
9001583a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
9001583e:	fb90 f0f8 	sdiv	r0, r0, r8
90015842:	1a2d      	subs	r5, r5, r0
90015844:	4638      	mov	r0, r7
90015846:	fb94 f4f8 	sdiv	r4, r4, r8
9001584a:	8735      	strh	r5, [r6, #56]	; 0x38
9001584c:	b2a4      	uxth	r4, r4
9001584e:	f005 ff69 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015852:	fb90 f0f8 	sdiv	r0, r0, r8
90015856:	1a24      	subs	r4, r4, r0
90015858:	8774      	strh	r4, [r6, #58]	; 0x3a
9001585a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90015860 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
90015860:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015864:	4604      	mov	r4, r0
90015866:	b08c      	sub	sp, #48	; 0x30
90015868:	460d      	mov	r5, r1
9001586a:	f7ff fe45 	bl	900154f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
9001586e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
90015872:	2b00      	cmp	r3, #0
90015874:	d05d      	beq.n	90015932 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
90015876:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90015878:	a805      	add	r0, sp, #20
9001587a:	f8ad 3014 	strh.w	r3, [sp, #20]
9001587e:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
90015882:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
90015886:	f005 ff19 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
9001588a:	4606      	mov	r6, r0
9001588c:	a805      	add	r0, sp, #20
9001588e:	f005 ff49 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015892:	6869      	ldr	r1, [r5, #4]
90015894:	f8ad 001e 	strh.w	r0, [sp, #30]
90015898:	ab08      	add	r3, sp, #32
9001589a:	6828      	ldr	r0, [r5, #0]
9001589c:	ad08      	add	r5, sp, #32
9001589e:	f8ad 8018 	strh.w	r8, [sp, #24]
900158a2:	f8ad 701a 	strh.w	r7, [sp, #26]
900158a6:	f8ad 601c 	strh.w	r6, [sp, #28]
900158aa:	c303      	stmia	r3!, {r0, r1}
900158ac:	a906      	add	r1, sp, #24
900158ae:	4628      	mov	r0, r5
900158b0:	f7fd fa86 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
900158b4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900158b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
900158bc:	429a      	cmp	r2, r3
900158be:	d035      	beq.n	9001592c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900158c0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
900158c4:	2b00      	cmp	r3, #0
900158c6:	dd31      	ble.n	9001592c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900158c8:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
900158cc:	2b00      	cmp	r3, #0
900158ce:	dd2d      	ble.n	9001592c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900158d0:	2300      	movs	r3, #0
900158d2:	a90a      	add	r1, sp, #40	; 0x28
900158d4:	4620      	mov	r0, r4
900158d6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
900158da:	6823      	ldr	r3, [r4, #0]
900158dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900158de:	4798      	blx	r3
900158e0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900158e4:	8f22      	ldrh	r2, [r4, #56]	; 0x38
900158e6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
900158ea:	1a9b      	subs	r3, r3, r2
900158ec:	f8ad 3020 	strh.w	r3, [sp, #32]
900158f0:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
900158f2:	1ac9      	subs	r1, r1, r3
900158f4:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
900158f8:	490f      	ldr	r1, [pc, #60]	; (90015938 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
900158fa:	6809      	ldr	r1, [r1, #0]
900158fc:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
90015900:	b108      	cbz	r0, 90015906 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
90015902:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90015904:	b900      	cbnz	r0, 90015908 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
90015906:	6888      	ldr	r0, [r1, #8]
90015908:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
9001590c:	2601      	movs	r6, #1
9001590e:	440b      	add	r3, r1
90015910:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
90015914:	440a      	add	r2, r1
90015916:	6801      	ldr	r1, [r0, #0]
90015918:	9602      	str	r6, [sp, #8]
9001591a:	b21b      	sxth	r3, r3
9001591c:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90015920:	b212      	sxth	r2, r2
90015922:	e9cd 5400 	strd	r5, r4, [sp]
90015926:	688c      	ldr	r4, [r1, #8]
90015928:	a905      	add	r1, sp, #20
9001592a:	47a0      	blx	r4
9001592c:	b00c      	add	sp, #48	; 0x30
9001592e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015932:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90015934:	e7a0      	b.n	90015878 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
90015936:	bf00      	nop
90015938:	24039acc 	.word	0x24039acc

9001593c <_ZN8touchgfx14ButtonWithIconC1Ev>:
9001593c:	2101      	movs	r1, #1
9001593e:	2200      	movs	r2, #0
90015940:	b510      	push	{r4, lr}
90015942:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90015946:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
9001594a:	f64f 71ff 	movw	r1, #65535	; 0xffff
9001594e:	4c0d      	ldr	r4, [pc, #52]	; (90015984 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
90015950:	8082      	strh	r2, [r0, #4]
90015952:	80c2      	strh	r2, [r0, #6]
90015954:	8102      	strh	r2, [r0, #8]
90015956:	8142      	strh	r2, [r0, #10]
90015958:	8182      	strh	r2, [r0, #12]
9001595a:	81c2      	strh	r2, [r0, #14]
9001595c:	8202      	strh	r2, [r0, #16]
9001595e:	8242      	strh	r2, [r0, #18]
90015960:	61c2      	str	r2, [r0, #28]
90015962:	8402      	strh	r2, [r0, #32]
90015964:	8442      	strh	r2, [r0, #34]	; 0x22
90015966:	6282      	str	r2, [r0, #40]	; 0x28
90015968:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
9001596c:	85c1      	strh	r1, [r0, #46]	; 0x2e
9001596e:	8601      	strh	r1, [r0, #48]	; 0x30
90015970:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90015974:	6004      	str	r4, [r0, #0]
90015976:	8681      	strh	r1, [r0, #52]	; 0x34
90015978:	86c1      	strh	r1, [r0, #54]	; 0x36
9001597a:	8702      	strh	r2, [r0, #56]	; 0x38
9001597c:	8742      	strh	r2, [r0, #58]	; 0x3a
9001597e:	e9c0 2205 	strd	r2, r2, [r0, #20]
90015982:	bd10      	pop	{r4, pc}
90015984:	9002dbe0 	.word	0x9002dbe0

90015988 <_ZN8touchgfx5ImageD1Ev>:
90015988:	4770      	bx	lr

9001598a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
9001598a:	b570      	push	{r4, r5, r6, lr}
9001598c:	880b      	ldrh	r3, [r1, #0]
9001598e:	460d      	mov	r5, r1
90015990:	4604      	mov	r4, r0
90015992:	84c3      	strh	r3, [r0, #38]	; 0x26
90015994:	4608      	mov	r0, r1
90015996:	f005 fe91 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
9001599a:	4606      	mov	r6, r0
9001599c:	4628      	mov	r0, r5
9001599e:	f005 fec1 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
900159a2:	6823      	ldr	r3, [r4, #0]
900159a4:	4605      	mov	r5, r0
900159a6:	4631      	mov	r1, r6
900159a8:	4620      	mov	r0, r4
900159aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900159ac:	4798      	blx	r3
900159ae:	6823      	ldr	r3, [r4, #0]
900159b0:	4629      	mov	r1, r5
900159b2:	4620      	mov	r0, r4
900159b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900159b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900159ba:	4718      	bx	r3

900159bc <_ZN8touchgfx5ImageD0Ev>:
900159bc:	b510      	push	{r4, lr}
900159be:	4604      	mov	r4, r0
900159c0:	212c      	movs	r1, #44	; 0x2c
900159c2:	f013 fe0f 	bl	900295e4 <_ZdlPvj>
900159c6:	4620      	mov	r0, r4
900159c8:	bd10      	pop	{r4, pc}

900159ca <_ZNK8touchgfx5Image12getSolidRectEv>:
900159ca:	b510      	push	{r4, lr}
900159cc:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900159d0:	4604      	mov	r4, r0
900159d2:	2bff      	cmp	r3, #255	; 0xff
900159d4:	d006      	beq.n	900159e4 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
900159d6:	2300      	movs	r3, #0
900159d8:	8003      	strh	r3, [r0, #0]
900159da:	8043      	strh	r3, [r0, #2]
900159dc:	8083      	strh	r3, [r0, #4]
900159de:	80c3      	strh	r3, [r0, #6]
900159e0:	4620      	mov	r0, r4
900159e2:	bd10      	pop	{r4, pc}
900159e4:	3126      	adds	r1, #38	; 0x26
900159e6:	f005 fed1 	bl	9001b78c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900159ea:	e7f9      	b.n	900159e0 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

900159ec <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
900159ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900159f0:	4604      	mov	r4, r0
900159f2:	b088      	sub	sp, #32
900159f4:	2500      	movs	r5, #0
900159f6:	460f      	mov	r7, r1
900159f8:	f854 3b26 	ldr.w	r3, [r4], #38
900159fc:	a904      	add	r1, sp, #16
900159fe:	4606      	mov	r6, r0
90015a00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015a02:	e9cd 5504 	strd	r5, r5, [sp, #16]
90015a06:	4798      	blx	r3
90015a08:	4620      	mov	r0, r4
90015a0a:	f005 fe57 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
90015a0e:	4680      	mov	r8, r0
90015a10:	4620      	mov	r0, r4
90015a12:	f005 fe87 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015a16:	9506      	str	r5, [sp, #24]
90015a18:	ad06      	add	r5, sp, #24
90015a1a:	f8ad 001e 	strh.w	r0, [sp, #30]
90015a1e:	4639      	mov	r1, r7
90015a20:	f8ad 801c 	strh.w	r8, [sp, #28]
90015a24:	4628      	mov	r0, r5
90015a26:	f7fd f9cb 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90015a2a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90015a2e:	2b00      	cmp	r3, #0
90015a30:	dd19      	ble.n	90015a66 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90015a32:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90015a36:	2b00      	cmp	r3, #0
90015a38:	dd15      	ble.n	90015a66 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90015a3a:	4b0c      	ldr	r3, [pc, #48]	; (90015a6c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90015a3c:	681b      	ldr	r3, [r3, #0]
90015a3e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90015a42:	b10a      	cbz	r2, 90015a48 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90015a44:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90015a46:	b900      	cbnz	r0, 90015a4a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90015a48:	6898      	ldr	r0, [r3, #8]
90015a4a:	2701      	movs	r7, #1
90015a4c:	6801      	ldr	r1, [r0, #0]
90015a4e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90015a52:	9702      	str	r7, [sp, #8]
90015a54:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
90015a58:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90015a5c:	e9cd 5600 	strd	r5, r6, [sp]
90015a60:	688d      	ldr	r5, [r1, #8]
90015a62:	4621      	mov	r1, r4
90015a64:	47a8      	blx	r5
90015a66:	b008      	add	sp, #32
90015a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015a6c:	24039acc 	.word	0x24039acc

90015a70 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
90015a70:	4770      	bx	lr

90015a72 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
90015a72:	b510      	push	{r4, lr}
90015a74:	4604      	mov	r4, r0
90015a76:	2148      	movs	r1, #72	; 0x48
90015a78:	f013 fdb4 	bl	900295e4 <_ZdlPvj>
90015a7c:	4620      	mov	r0, r4
90015a7e:	bd10      	pop	{r4, pc}

90015a80 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90015a80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015a84:	b08d      	sub	sp, #52	; 0x34
90015a86:	4604      	mov	r4, r0
90015a88:	460f      	mov	r7, r1
90015a8a:	f7ff fd35 	bl	900154f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90015a8e:	4a55      	ldr	r2, [pc, #340]	; (90015be4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
90015a90:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90015a92:	8812      	ldrh	r2, [r2, #0]
90015a94:	429a      	cmp	r2, r3
90015a96:	f240 8082 	bls.w	90015b9e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015a9a:	4d53      	ldr	r5, [pc, #332]	; (90015be8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
90015a9c:	682a      	ldr	r2, [r5, #0]
90015a9e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90015aa2:	4b52      	ldr	r3, [pc, #328]	; (90015bec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90015aa4:	681b      	ldr	r3, [r3, #0]
90015aa6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90015aaa:	2200      	movs	r2, #0
90015aac:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
90015ab0:	e9cd 2203 	strd	r2, r2, [sp, #12]
90015ab4:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
90015ab8:	2a03      	cmp	r2, #3
90015aba:	d811      	bhi.n	90015ae0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90015abc:	e8df f002 	tbb	[pc, r2]
90015ac0:	89727902 	.word	0x89727902
90015ac4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90015ac8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90015acc:	1ad2      	subs	r2, r2, r3
90015ace:	2002      	movs	r0, #2
90015ad0:	f8ad 1010 	strh.w	r1, [sp, #16]
90015ad4:	f8ad 3012 	strh.w	r3, [sp, #18]
90015ad8:	fb92 f2f0 	sdiv	r2, r2, r0
90015adc:	f8ad 200e 	strh.w	r2, [sp, #14]
90015ae0:	f10d 080c 	add.w	r8, sp, #12
90015ae4:	f10d 0914 	add.w	r9, sp, #20
90015ae8:	e898 0003 	ldmia.w	r8, {r0, r1}
90015aec:	e889 0003 	stmia.w	r9, {r0, r1}
90015af0:	4639      	mov	r1, r7
90015af2:	4648      	mov	r0, r9
90015af4:	f7fd f964 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90015af8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90015afc:	2b00      	cmp	r3, #0
90015afe:	dd4e      	ble.n	90015b9e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015b00:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90015b04:	2b00      	cmp	r3, #0
90015b06:	dd4a      	ble.n	90015b9e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015b08:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90015b0c:	4641      	mov	r1, r8
90015b0e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90015b12:	4620      	mov	r0, r4
90015b14:	1a9b      	subs	r3, r3, r2
90015b16:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90015b1a:	f8ad 3014 	strh.w	r3, [sp, #20]
90015b1e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90015b22:	1a9b      	subs	r3, r3, r2
90015b24:	f8ad 3016 	strh.w	r3, [sp, #22]
90015b28:	6823      	ldr	r3, [r4, #0]
90015b2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015b2c:	4798      	blx	r3
90015b2e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
90015b32:	2b00      	cmp	r3, #0
90015b34:	d053      	beq.n	90015bde <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90015b36:	6c22      	ldr	r2, [r4, #64]	; 0x40
90015b38:	8f21      	ldrh	r1, [r4, #56]	; 0x38
90015b3a:	682b      	ldr	r3, [r5, #0]
90015b3c:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
90015b40:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90015b44:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
90015b48:	785b      	ldrb	r3, [r3, #1]
90015b4a:	9209      	str	r2, [sp, #36]	; 0x24
90015b4c:	f3c3 0501 	ubfx	r5, r3, #0, #2
90015b50:	f3c3 0381 	ubfx	r3, r3, #2, #2
90015b54:	9607      	str	r6, [sp, #28]
90015b56:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
90015b5a:	2300      	movs	r3, #0
90015b5c:	f88d 5020 	strb.w	r5, [sp, #32]
90015b60:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
90015b64:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
90015b68:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
90015b6c:	4b20      	ldr	r3, [pc, #128]	; (90015bf0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
90015b6e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90015b72:	681b      	ldr	r3, [r3, #0]
90015b74:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90015b78:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90015b7c:	b10a      	cbz	r2, 90015b82 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
90015b7e:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
90015b80:	b904      	cbnz	r4, 90015b84 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90015b82:	689c      	ldr	r4, [r3, #8]
90015b84:	4b1b      	ldr	r3, [pc, #108]	; (90015bf4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
90015b86:	6818      	ldr	r0, [r3, #0]
90015b88:	f7ee fd5e 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90015b8c:	ab07      	add	r3, sp, #28
90015b8e:	9001      	str	r0, [sp, #4]
90015b90:	4620      	mov	r0, r4
90015b92:	9300      	str	r3, [sp, #0]
90015b94:	464b      	mov	r3, r9
90015b96:	e898 0006 	ldmia.w	r8, {r1, r2}
90015b9a:	f7ee fd05 	bl	900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90015b9e:	b00d      	add	sp, #52	; 0x34
90015ba0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015ba4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90015ba8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90015bac:	1ad2      	subs	r2, r2, r3
90015bae:	3201      	adds	r2, #1
90015bb0:	e78d      	b.n	90015ace <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90015bb2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90015bb6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90015bba:	1ad2      	subs	r2, r2, r3
90015bbc:	3201      	adds	r2, #1
90015bbe:	2002      	movs	r0, #2
90015bc0:	f8ad 3010 	strh.w	r3, [sp, #16]
90015bc4:	f8ad 1012 	strh.w	r1, [sp, #18]
90015bc8:	fb92 f2f0 	sdiv	r2, r2, r0
90015bcc:	f8ad 200c 	strh.w	r2, [sp, #12]
90015bd0:	e786      	b.n	90015ae0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90015bd2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90015bd6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90015bda:	1ad2      	subs	r2, r2, r3
90015bdc:	e7ef      	b.n	90015bbe <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
90015bde:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90015be0:	e7aa      	b.n	90015b38 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90015be2:	bf00      	nop
90015be4:	24039b28 	.word	0x24039b28
90015be8:	24039b24 	.word	0x24039b24
90015bec:	24039b2c 	.word	0x24039b2c
90015bf0:	24039acc 	.word	0x24039acc
90015bf4:	24039b30 	.word	0x24039b30

90015bf8 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90015bf8:	2101      	movs	r1, #1
90015bfa:	2200      	movs	r2, #0
90015bfc:	b510      	push	{r4, lr}
90015bfe:	4c13      	ldr	r4, [pc, #76]	; (90015c4c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90015c00:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90015c04:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90015c08:	f64f 71ff 	movw	r1, #65535	; 0xffff
90015c0c:	6004      	str	r4, [r0, #0]
90015c0e:	4c10      	ldr	r4, [pc, #64]	; (90015c50 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90015c10:	8082      	strh	r2, [r0, #4]
90015c12:	80c2      	strh	r2, [r0, #6]
90015c14:	8102      	strh	r2, [r0, #8]
90015c16:	8142      	strh	r2, [r0, #10]
90015c18:	8182      	strh	r2, [r0, #12]
90015c1a:	81c2      	strh	r2, [r0, #14]
90015c1c:	8202      	strh	r2, [r0, #16]
90015c1e:	8242      	strh	r2, [r0, #18]
90015c20:	61c2      	str	r2, [r0, #28]
90015c22:	8402      	strh	r2, [r0, #32]
90015c24:	8442      	strh	r2, [r0, #34]	; 0x22
90015c26:	6282      	str	r2, [r0, #40]	; 0x28
90015c28:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
90015c2c:	85c1      	strh	r1, [r0, #46]	; 0x2e
90015c2e:	8601      	strh	r1, [r0, #48]	; 0x30
90015c30:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90015c34:	6344      	str	r4, [r0, #52]	; 0x34
90015c36:	8701      	strh	r1, [r0, #56]	; 0x38
90015c38:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
90015c3c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
90015c40:	e9c0 2205 	strd	r2, r2, [r0, #20]
90015c44:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
90015c48:	bd10      	pop	{r4, pc}
90015c4a:	bf00      	nop
90015c4c:	9002dcc4 	.word	0x9002dcc4
90015c50:	9002c22c 	.word	0x9002c22c

90015c54 <_ZN8touchgfx7OutlineD1Ev>:
90015c54:	4770      	bx	lr

90015c56 <_ZN8touchgfx7OutlineD0Ev>:
90015c56:	b510      	push	{r4, lr}
90015c58:	4604      	mov	r4, r0
90015c5a:	2130      	movs	r1, #48	; 0x30
90015c5c:	f013 fcc2 	bl	900295e4 <_ZdlPvj>
90015c60:	4620      	mov	r0, r4
90015c62:	bd10      	pop	{r4, pc}

90015c64 <_ZN8touchgfx7Outline5resetEv>:
90015c64:	b510      	push	{r4, lr}
90015c66:	4604      	mov	r4, r0
90015c68:	f000 fe86 	bl	90016978 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90015c6c:	60e0      	str	r0, [r4, #12]
90015c6e:	f000 fe89 	bl	90016984 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90015c72:	68e3      	ldr	r3, [r4, #12]
90015c74:	08c0      	lsrs	r0, r0, #3
90015c76:	2200      	movs	r2, #0
90015c78:	f647 71ff 	movw	r1, #32767	; 0x7fff
90015c7c:	6123      	str	r3, [r4, #16]
90015c7e:	3801      	subs	r0, #1
90015c80:	60a2      	str	r2, [r4, #8]
90015c82:	6060      	str	r0, [r4, #4]
90015c84:	8019      	strh	r1, [r3, #0]
90015c86:	8059      	strh	r1, [r3, #2]
90015c88:	809a      	strh	r2, [r3, #4]
90015c8a:	80da      	strh	r2, [r3, #6]
90015c8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90015c8e:	f023 0301 	bic.w	r3, r3, #1
90015c92:	f043 0302 	orr.w	r3, r3, #2
90015c96:	6263      	str	r3, [r4, #36]	; 0x24
90015c98:	bd10      	pop	{r4, pc}
	...

90015c9c <_ZN8touchgfx7OutlineC1Ev>:
90015c9c:	4b0a      	ldr	r3, [pc, #40]	; (90015cc8 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90015c9e:	b510      	push	{r4, lr}
90015ca0:	6003      	str	r3, [r0, #0]
90015ca2:	2300      	movs	r3, #0
90015ca4:	4604      	mov	r4, r0
90015ca6:	6243      	str	r3, [r0, #36]	; 0x24
90015ca8:	e9c0 3301 	strd	r3, r3, [r0, #4]
90015cac:	e9c0 3303 	strd	r3, r3, [r0, #12]
90015cb0:	e9c0 3305 	strd	r3, r3, [r0, #20]
90015cb4:	e9c0 3307 	strd	r3, r3, [r0, #28]
90015cb8:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
90015cbc:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
90015cc0:	f7ff ffd0 	bl	90015c64 <_ZN8touchgfx7Outline5resetEv>
90015cc4:	4620      	mov	r0, r4
90015cc6:	bd10      	pop	{r4, pc}
90015cc8:	9002dd38 	.word	0x9002dd38

90015ccc <_ZN8touchgfx7Outline10renderLineEiiii>:
90015ccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015cd0:	b093      	sub	sp, #76	; 0x4c
90015cd2:	1156      	asrs	r6, r2, #5
90015cd4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90015cd6:	9305      	str	r3, [sp, #20]
90015cd8:	1153      	asrs	r3, r2, #5
90015cda:	f004 051f 	and.w	r5, r4, #31
90015cde:	9303      	str	r3, [sp, #12]
90015ce0:	1163      	asrs	r3, r4, #5
90015ce2:	9504      	str	r5, [sp, #16]
90015ce4:	1165      	asrs	r5, r4, #5
90015ce6:	9306      	str	r3, [sp, #24]
90015ce8:	f002 031f 	and.w	r3, r2, #31
90015cec:	42ae      	cmp	r6, r5
90015cee:	f040 80f4 	bne.w	90015eda <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90015cf2:	9c04      	ldr	r4, [sp, #16]
90015cf4:	9a05      	ldr	r2, [sp, #20]
90015cf6:	42a3      	cmp	r3, r4
90015cf8:	ea4f 1e62 	mov.w	lr, r2, asr #5
90015cfc:	6902      	ldr	r2, [r0, #16]
90015cfe:	d125      	bne.n	90015d4c <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90015d00:	f9b2 3000 	ldrsh.w	r3, [r2]
90015d04:	459e      	cmp	lr, r3
90015d06:	d103      	bne.n	90015d10 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90015d08:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90015d0c:	429e      	cmp	r6, r3
90015d0e:	d035      	beq.n	90015d7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015d10:	88d1      	ldrh	r1, [r2, #6]
90015d12:	8893      	ldrh	r3, [r2, #4]
90015d14:	430b      	orrs	r3, r1
90015d16:	d010      	beq.n	90015d3a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015d18:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90015d1c:	2b00      	cmp	r3, #0
90015d1e:	db0c      	blt.n	90015d3a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015d20:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90015d22:	428b      	cmp	r3, r1
90015d24:	da09      	bge.n	90015d3a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015d26:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90015d2a:	428b      	cmp	r3, r1
90015d2c:	f103 0301 	add.w	r3, r3, #1
90015d30:	bf38      	it	cc
90015d32:	3208      	addcc	r2, #8
90015d34:	6083      	str	r3, [r0, #8]
90015d36:	bf38      	it	cc
90015d38:	6102      	strcc	r2, [r0, #16]
90015d3a:	6903      	ldr	r3, [r0, #16]
90015d3c:	9a03      	ldr	r2, [sp, #12]
90015d3e:	f8a3 e000 	strh.w	lr, [r3]
90015d42:	805a      	strh	r2, [r3, #2]
90015d44:	2200      	movs	r2, #0
90015d46:	809a      	strh	r2, [r3, #4]
90015d48:	80da      	strh	r2, [r3, #6]
90015d4a:	e017      	b.n	90015d7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015d4c:	9c05      	ldr	r4, [sp, #20]
90015d4e:	114e      	asrs	r6, r1, #5
90015d50:	f001 0c1f 	and.w	ip, r1, #31
90015d54:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90015d58:	f004 041f 	and.w	r4, r4, #31
90015d5c:	4576      	cmp	r6, lr
90015d5e:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90015d62:	9402      	str	r4, [sp, #8]
90015d64:	9c04      	ldr	r4, [sp, #16]
90015d66:	eba4 0403 	sub.w	r4, r4, r3
90015d6a:	d10a      	bne.n	90015d82 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90015d6c:	9b02      	ldr	r3, [sp, #8]
90015d6e:	44a0      	add	r8, r4
90015d70:	449c      	add	ip, r3
90015d72:	f8a2 8004 	strh.w	r8, [r2, #4]
90015d76:	fb04 a40c 	mla	r4, r4, ip, sl
90015d7a:	80d4      	strh	r4, [r2, #6]
90015d7c:	b013      	add	sp, #76	; 0x4c
90015d7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015d82:	9d05      	ldr	r5, [sp, #20]
90015d84:	1a69      	subs	r1, r5, r1
90015d86:	bf51      	iteee	pl
90015d88:	f1cc 0520 	rsbpl	r5, ip, #32
90015d8c:	fb04 f40c 	mulmi.w	r4, r4, ip
90015d90:	4249      	negmi	r1, r1
90015d92:	2500      	movmi	r5, #0
90015d94:	bf5d      	ittte	pl
90015d96:	436c      	mulpl	r4, r5
90015d98:	2520      	movpl	r5, #32
90015d9a:	f04f 0901 	movpl.w	r9, #1
90015d9e:	f04f 39ff 	movmi.w	r9, #4294967295
90015da2:	9501      	str	r5, [sp, #4]
90015da4:	9f01      	ldr	r7, [sp, #4]
90015da6:	444e      	add	r6, r9
90015da8:	fb94 f5f1 	sdiv	r5, r4, r1
90015dac:	fb01 4415 	mls	r4, r1, r5, r4
90015db0:	44bc      	add	ip, r7
90015db2:	2c00      	cmp	r4, #0
90015db4:	bfbc      	itt	lt
90015db6:	f105 35ff 	addlt.w	r5, r5, #4294967295
90015dba:	1864      	addlt	r4, r4, r1
90015dbc:	44a8      	add	r8, r5
90015dbe:	fb05 ac0c 	mla	ip, r5, ip, sl
90015dc2:	f8a2 8004 	strh.w	r8, [r2, #4]
90015dc6:	f8a2 c006 	strh.w	ip, [r2, #6]
90015dca:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015dce:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90015dd2:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90015dd6:	ea58 0202 	orrs.w	r2, r8, r2
90015dda:	d011      	beq.n	90015e00 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015ddc:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90015de0:	f1b8 0f00 	cmp.w	r8, #0
90015de4:	db0c      	blt.n	90015e00 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015de6:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90015de8:	4590      	cmp	r8, r2
90015dea:	da09      	bge.n	90015e00 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015dec:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90015df0:	4590      	cmp	r8, r2
90015df2:	bf3c      	itt	cc
90015df4:	f10c 0208 	addcc.w	r2, ip, #8
90015df8:	6102      	strcc	r2, [r0, #16]
90015dfa:	f108 0201 	add.w	r2, r8, #1
90015dfe:	6082      	str	r2, [r0, #8]
90015e00:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015e04:	2700      	movs	r7, #0
90015e06:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90015e0a:	45b6      	cmp	lr, r6
90015e0c:	f8ac 6000 	strh.w	r6, [ip]
90015e10:	442b      	add	r3, r5
90015e12:	f8ac 2002 	strh.w	r2, [ip, #2]
90015e16:	f8ac 7004 	strh.w	r7, [ip, #4]
90015e1a:	f8ac 7006 	strh.w	r7, [ip, #6]
90015e1e:	d04b      	beq.n	90015eb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90015e20:	9f04      	ldr	r7, [sp, #16]
90015e22:	1a64      	subs	r4, r4, r1
90015e24:	f04f 0a00 	mov.w	sl, #0
90015e28:	1aff      	subs	r7, r7, r3
90015e2a:	443d      	add	r5, r7
90015e2c:	016d      	lsls	r5, r5, #5
90015e2e:	fb95 f8f1 	sdiv	r8, r5, r1
90015e32:	fb01 5518 	mls	r5, r1, r8, r5
90015e36:	2d00      	cmp	r5, #0
90015e38:	bfbc      	itt	lt
90015e3a:	f108 38ff 	addlt.w	r8, r8, #4294967295
90015e3e:	186d      	addlt	r5, r5, r1
90015e40:	f108 0701 	add.w	r7, r8, #1
90015e44:	9703      	str	r7, [sp, #12]
90015e46:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015e4a:	1964      	adds	r4, r4, r5
90015e4c:	444e      	add	r6, r9
90015e4e:	bf54      	ite	pl
90015e50:	9f03      	ldrpl	r7, [sp, #12]
90015e52:	4647      	movmi	r7, r8
90015e54:	f8bc b004 	ldrh.w	fp, [ip, #4]
90015e58:	bf58      	it	pl
90015e5a:	1a64      	subpl	r4, r4, r1
90015e5c:	443b      	add	r3, r7
90015e5e:	44bb      	add	fp, r7
90015e60:	f8ac b004 	strh.w	fp, [ip, #4]
90015e64:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015e68:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90015e6c:	f8ac b006 	strh.w	fp, [ip, #6]
90015e70:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015e74:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015e78:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90015e7c:	ea5b 0707 	orrs.w	r7, fp, r7
90015e80:	d011      	beq.n	90015ea6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015e82:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90015e86:	f1bb 0f00 	cmp.w	fp, #0
90015e8a:	db0c      	blt.n	90015ea6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015e8c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90015e8e:	45bb      	cmp	fp, r7
90015e90:	da09      	bge.n	90015ea6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015e92:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90015e96:	45bb      	cmp	fp, r7
90015e98:	bf3c      	itt	cc
90015e9a:	f10c 0708 	addcc.w	r7, ip, #8
90015e9e:	6107      	strcc	r7, [r0, #16]
90015ea0:	f10b 0701 	add.w	r7, fp, #1
90015ea4:	6087      	str	r7, [r0, #8]
90015ea6:	6907      	ldr	r7, [r0, #16]
90015ea8:	45b6      	cmp	lr, r6
90015eaa:	803e      	strh	r6, [r7, #0]
90015eac:	807a      	strh	r2, [r7, #2]
90015eae:	f8a7 a004 	strh.w	sl, [r7, #4]
90015eb2:	f8a7 a006 	strh.w	sl, [r7, #6]
90015eb6:	d1c6      	bne.n	90015e46 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90015eb8:	9a04      	ldr	r2, [sp, #16]
90015eba:	1ad3      	subs	r3, r2, r3
90015ebc:	6902      	ldr	r2, [r0, #16]
90015ebe:	8891      	ldrh	r1, [r2, #4]
90015ec0:	88d6      	ldrh	r6, [r2, #6]
90015ec2:	4419      	add	r1, r3
90015ec4:	8091      	strh	r1, [r2, #4]
90015ec6:	9902      	ldr	r1, [sp, #8]
90015ec8:	f101 0c20 	add.w	ip, r1, #32
90015ecc:	9901      	ldr	r1, [sp, #4]
90015ece:	ebac 0c01 	sub.w	ip, ip, r1
90015ed2:	fb03 630c 	mla	r3, r3, ip, r6
90015ed6:	80d3      	strh	r3, [r2, #6]
90015ed8:	e750      	b.n	90015d7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015eda:	9d05      	ldr	r5, [sp, #20]
90015edc:	1aa2      	subs	r2, r4, r2
90015ede:	eba5 0501 	sub.w	r5, r5, r1
90015ee2:	9202      	str	r2, [sp, #8]
90015ee4:	9508      	str	r5, [sp, #32]
90015ee6:	f140 8128 	bpl.w	9001613a <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90015eea:	9a03      	ldr	r2, [sp, #12]
90015eec:	2a00      	cmp	r2, #0
90015eee:	f6ff af45 	blt.w	90015d7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015ef2:	9a02      	ldr	r2, [sp, #8]
90015ef4:	f04f 34ff 	mov.w	r4, #4294967295
90015ef8:	4252      	negs	r2, r2
90015efa:	940b      	str	r4, [sp, #44]	; 0x2c
90015efc:	2400      	movs	r4, #0
90015efe:	9202      	str	r2, [sp, #8]
90015f00:	9a06      	ldr	r2, [sp, #24]
90015f02:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90015f06:	9206      	str	r2, [sp, #24]
90015f08:	462a      	mov	r2, r5
90015f0a:	435a      	muls	r2, r3
90015f0c:	9401      	str	r4, [sp, #4]
90015f0e:	9c02      	ldr	r4, [sp, #8]
90015f10:	9d02      	ldr	r5, [sp, #8]
90015f12:	fb92 f4f4 	sdiv	r4, r2, r4
90015f16:	fb05 2214 	mls	r2, r5, r4, r2
90015f1a:	2a00      	cmp	r2, #0
90015f1c:	9207      	str	r2, [sp, #28]
90015f1e:	bfbc      	itt	lt
90015f20:	1952      	addlt	r2, r2, r5
90015f22:	f104 34ff 	addlt.w	r4, r4, #4294967295
90015f26:	6905      	ldr	r5, [r0, #16]
90015f28:	bfb8      	it	lt
90015f2a:	9207      	strlt	r2, [sp, #28]
90015f2c:	eb04 0901 	add.w	r9, r4, r1
90015f30:	9a01      	ldr	r2, [sp, #4]
90015f32:	ea4f 1669 	mov.w	r6, r9, asr #5
90015f36:	429a      	cmp	r2, r3
90015f38:	f040 8111 	bne.w	9001615e <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90015f3c:	f9b5 3000 	ldrsh.w	r3, [r5]
90015f40:	429e      	cmp	r6, r3
90015f42:	d104      	bne.n	90015f4e <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90015f44:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90015f48:	9a03      	ldr	r2, [sp, #12]
90015f4a:	429a      	cmp	r2, r3
90015f4c:	d01b      	beq.n	90015f86 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90015f4e:	88ea      	ldrh	r2, [r5, #6]
90015f50:	88ab      	ldrh	r3, [r5, #4]
90015f52:	4313      	orrs	r3, r2
90015f54:	d010      	beq.n	90015f78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015f56:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015f5a:	2a00      	cmp	r2, #0
90015f5c:	db0c      	blt.n	90015f78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015f5e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90015f60:	429a      	cmp	r2, r3
90015f62:	da09      	bge.n	90015f78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015f64:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90015f68:	429a      	cmp	r2, r3
90015f6a:	f102 0201 	add.w	r2, r2, #1
90015f6e:	bf38      	it	cc
90015f70:	3508      	addcc	r5, #8
90015f72:	6082      	str	r2, [r0, #8]
90015f74:	bf38      	it	cc
90015f76:	6105      	strcc	r5, [r0, #16]
90015f78:	6903      	ldr	r3, [r0, #16]
90015f7a:	9a03      	ldr	r2, [sp, #12]
90015f7c:	801e      	strh	r6, [r3, #0]
90015f7e:	805a      	strh	r2, [r3, #2]
90015f80:	2200      	movs	r2, #0
90015f82:	809a      	strh	r2, [r3, #4]
90015f84:	80da      	strh	r2, [r3, #6]
90015f86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90015f88:	9a03      	ldr	r2, [sp, #12]
90015f8a:	6901      	ldr	r1, [r0, #16]
90015f8c:	441a      	add	r2, r3
90015f8e:	f9b1 3000 	ldrsh.w	r3, [r1]
90015f92:	42b3      	cmp	r3, r6
90015f94:	d103      	bne.n	90015f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90015f96:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90015f9a:	429a      	cmp	r2, r3
90015f9c:	d01a      	beq.n	90015fd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90015f9e:	88cc      	ldrh	r4, [r1, #6]
90015fa0:	888b      	ldrh	r3, [r1, #4]
90015fa2:	4323      	orrs	r3, r4
90015fa4:	d010      	beq.n	90015fc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015fa6:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90015faa:	2c00      	cmp	r4, #0
90015fac:	db0c      	blt.n	90015fc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015fae:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90015fb0:	429c      	cmp	r4, r3
90015fb2:	da09      	bge.n	90015fc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015fb4:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90015fb8:	429c      	cmp	r4, r3
90015fba:	f104 0401 	add.w	r4, r4, #1
90015fbe:	bf38      	it	cc
90015fc0:	3108      	addcc	r1, #8
90015fc2:	6084      	str	r4, [r0, #8]
90015fc4:	bf38      	it	cc
90015fc6:	6101      	strcc	r1, [r0, #16]
90015fc8:	6903      	ldr	r3, [r0, #16]
90015fca:	2100      	movs	r1, #0
90015fcc:	801e      	strh	r6, [r3, #0]
90015fce:	805a      	strh	r2, [r3, #2]
90015fd0:	8099      	strh	r1, [r3, #4]
90015fd2:	80d9      	strh	r1, [r3, #6]
90015fd4:	9b06      	ldr	r3, [sp, #24]
90015fd6:	4293      	cmp	r3, r2
90015fd8:	f000 8082 	beq.w	900160e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90015fdc:	9b08      	ldr	r3, [sp, #32]
90015fde:	9902      	ldr	r1, [sp, #8]
90015fe0:	015b      	lsls	r3, r3, #5
90015fe2:	9c02      	ldr	r4, [sp, #8]
90015fe4:	fb93 f1f1 	sdiv	r1, r3, r1
90015fe8:	fb04 3311 	mls	r3, r4, r1, r3
90015fec:	9103      	str	r1, [sp, #12]
90015fee:	2b00      	cmp	r3, #0
90015ff0:	9308      	str	r3, [sp, #32]
90015ff2:	da04      	bge.n	90015ffe <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90015ff4:	1e4b      	subs	r3, r1, #1
90015ff6:	9303      	str	r3, [sp, #12]
90015ff8:	9b08      	ldr	r3, [sp, #32]
90015ffa:	4423      	add	r3, r4
90015ffc:	9308      	str	r3, [sp, #32]
90015ffe:	9b07      	ldr	r3, [sp, #28]
90016000:	464f      	mov	r7, r9
90016002:	9902      	ldr	r1, [sp, #8]
90016004:	2600      	movs	r6, #0
90016006:	1a5b      	subs	r3, r3, r1
90016008:	9307      	str	r3, [sp, #28]
9001600a:	9b01      	ldr	r3, [sp, #4]
9001600c:	f1c3 0320 	rsb	r3, r3, #32
90016010:	930e      	str	r3, [sp, #56]	; 0x38
90016012:	990e      	ldr	r1, [sp, #56]	; 0x38
90016014:	9b01      	ldr	r3, [sp, #4]
90016016:	1a5b      	subs	r3, r3, r1
90016018:	930a      	str	r3, [sp, #40]	; 0x28
9001601a:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
9001601e:	185b      	adds	r3, r3, r1
90016020:	bf58      	it	pl
90016022:	9902      	ldrpl	r1, [sp, #8]
90016024:	9307      	str	r3, [sp, #28]
90016026:	bf57      	itett	pl
90016028:	1a5b      	subpl	r3, r3, r1
9001602a:	9903      	ldrmi	r1, [sp, #12]
9001602c:	9307      	strpl	r3, [sp, #28]
9001602e:	9b03      	ldrpl	r3, [sp, #12]
90016030:	bf58      	it	pl
90016032:	1c59      	addpl	r1, r3, #1
90016034:	2a00      	cmp	r2, #0
90016036:	4489      	add	r9, r1
90016038:	ea4f 1a69 	mov.w	sl, r9, asr #5
9001603c:	db2e      	blt.n	9001609c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001603e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90016040:	4293      	cmp	r3, r2
90016042:	dd2b      	ble.n	9001609c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016044:	9c01      	ldr	r4, [sp, #4]
90016046:	6905      	ldr	r5, [r0, #16]
90016048:	46a0      	mov	r8, r4
9001604a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001604c:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90016050:	45a0      	cmp	r8, r4
90016052:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90016056:	f040 814c 	bne.w	900162f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
9001605a:	f9b5 1000 	ldrsh.w	r1, [r5]
9001605e:	4551      	cmp	r1, sl
90016060:	d103      	bne.n	9001606a <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90016062:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90016066:	4291      	cmp	r1, r2
90016068:	d018      	beq.n	9001609c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001606a:	ea5c 010e 	orrs.w	r1, ip, lr
9001606e:	d00f      	beq.n	90016090 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90016070:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90016074:	2900      	cmp	r1, #0
90016076:	db0b      	blt.n	90016090 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90016078:	428b      	cmp	r3, r1
9001607a:	dd09      	ble.n	90016090 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
9001607c:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90016080:	4299      	cmp	r1, r3
90016082:	f101 0101 	add.w	r1, r1, #1
90016086:	bf38      	it	cc
90016088:	3508      	addcc	r5, #8
9001608a:	6081      	str	r1, [r0, #8]
9001608c:	bf38      	it	cc
9001608e:	6105      	strcc	r5, [r0, #16]
90016090:	6903      	ldr	r3, [r0, #16]
90016092:	f8a3 a000 	strh.w	sl, [r3]
90016096:	805a      	strh	r2, [r3, #2]
90016098:	809e      	strh	r6, [r3, #4]
9001609a:	80de      	strh	r6, [r3, #6]
9001609c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001609e:	6901      	ldr	r1, [r0, #16]
900160a0:	441a      	add	r2, r3
900160a2:	88cc      	ldrh	r4, [r1, #6]
900160a4:	888b      	ldrh	r3, [r1, #4]
900160a6:	4323      	orrs	r3, r4
900160a8:	d010      	beq.n	900160cc <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900160aa:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900160ae:	2c00      	cmp	r4, #0
900160b0:	db0c      	blt.n	900160cc <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900160b2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900160b4:	429c      	cmp	r4, r3
900160b6:	da09      	bge.n	900160cc <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900160b8:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900160bc:	429c      	cmp	r4, r3
900160be:	f104 0401 	add.w	r4, r4, #1
900160c2:	bf38      	it	cc
900160c4:	3108      	addcc	r1, #8
900160c6:	6084      	str	r4, [r0, #8]
900160c8:	bf38      	it	cc
900160ca:	6101      	strcc	r1, [r0, #16]
900160cc:	6903      	ldr	r3, [r0, #16]
900160ce:	464f      	mov	r7, r9
900160d0:	f8a3 a000 	strh.w	sl, [r3]
900160d4:	805a      	strh	r2, [r3, #2]
900160d6:	809e      	strh	r6, [r3, #4]
900160d8:	80de      	strh	r6, [r3, #6]
900160da:	9b06      	ldr	r3, [sp, #24]
900160dc:	4293      	cmp	r3, r2
900160de:	d19c      	bne.n	9001601a <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
900160e0:	9b01      	ldr	r3, [sp, #4]
900160e2:	6907      	ldr	r7, [r0, #16]
900160e4:	f1c3 0620 	rsb	r6, r3, #32
900160e8:	9b05      	ldr	r3, [sp, #20]
900160ea:	ea4f 1e63 	mov.w	lr, r3, asr #5
900160ee:	9b04      	ldr	r3, [sp, #16]
900160f0:	429e      	cmp	r6, r3
900160f2:	f040 81c7 	bne.w	90016484 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
900160f6:	f9b7 3000 	ldrsh.w	r3, [r7]
900160fa:	459e      	cmp	lr, r3
900160fc:	d104      	bne.n	90016108 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
900160fe:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90016102:	429a      	cmp	r2, r3
90016104:	f43f ae3a 	beq.w	90015d7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016108:	88f9      	ldrh	r1, [r7, #6]
9001610a:	88bb      	ldrh	r3, [r7, #4]
9001610c:	430b      	orrs	r3, r1
9001610e:	d010      	beq.n	90016132 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90016110:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90016114:	2b00      	cmp	r3, #0
90016116:	db0c      	blt.n	90016132 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90016118:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9001611a:	428b      	cmp	r3, r1
9001611c:	da09      	bge.n	90016132 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001611e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90016122:	428b      	cmp	r3, r1
90016124:	f103 0301 	add.w	r3, r3, #1
90016128:	bf38      	it	cc
9001612a:	3708      	addcc	r7, #8
9001612c:	6083      	str	r3, [r0, #8]
9001612e:	bf38      	it	cc
90016130:	6107      	strcc	r7, [r0, #16]
90016132:	6903      	ldr	r3, [r0, #16]
90016134:	f8a3 e000 	strh.w	lr, [r3]
90016138:	e603      	b.n	90015d42 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
9001613a:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
9001613c:	9c03      	ldr	r4, [sp, #12]
9001613e:	42a2      	cmp	r2, r4
90016140:	f6ff ae1c 	blt.w	90015d7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016144:	9c06      	ldr	r4, [sp, #24]
90016146:	42a2      	cmp	r2, r4
90016148:	9c08      	ldr	r4, [sp, #32]
9001614a:	bfbc      	itt	lt
9001614c:	3201      	addlt	r2, #1
9001614e:	9206      	strlt	r2, [sp, #24]
90016150:	f1c3 0220 	rsb	r2, r3, #32
90016154:	4362      	muls	r2, r4
90016156:	2401      	movs	r4, #1
90016158:	940b      	str	r4, [sp, #44]	; 0x2c
9001615a:	2420      	movs	r4, #32
9001615c:	e6d6      	b.n	90015f0c <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
9001615e:	ea4f 1861 	mov.w	r8, r1, asr #5
90016162:	f009 021f 	and.w	r2, r9, #31
90016166:	f001 011f 	and.w	r1, r1, #31
9001616a:	f8b5 e004 	ldrh.w	lr, [r5, #4]
9001616e:	920c      	str	r2, [sp, #48]	; 0x30
90016170:	45b0      	cmp	r8, r6
90016172:	9a01      	ldr	r2, [sp, #4]
90016174:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90016178:	eba2 0203 	sub.w	r2, r2, r3
9001617c:	d108      	bne.n	90016190 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
9001617e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90016180:	4496      	add	lr, r2
90016182:	4419      	add	r1, r3
90016184:	f8a5 e004 	strh.w	lr, [r5, #4]
90016188:	fb02 a101 	mla	r1, r2, r1, sl
9001618c:	80e9      	strh	r1, [r5, #6]
9001618e:	e6fa      	b.n	90015f86 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90016190:	2c00      	cmp	r4, #0
90016192:	f2c0 80a7 	blt.w	900162e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90016196:	2701      	movs	r7, #1
90016198:	f1c1 0c20 	rsb	ip, r1, #32
9001619c:	970a      	str	r7, [sp, #40]	; 0x28
9001619e:	2720      	movs	r7, #32
900161a0:	fb02 f20c 	mul.w	r2, r2, ip
900161a4:	9709      	str	r7, [sp, #36]	; 0x24
900161a6:	9f09      	ldr	r7, [sp, #36]	; 0x24
900161a8:	fb92 fcf4 	sdiv	ip, r2, r4
900161ac:	fb04 221c 	mls	r2, r4, ip, r2
900161b0:	4439      	add	r1, r7
900161b2:	2a00      	cmp	r2, #0
900161b4:	bfbc      	itt	lt
900161b6:	f10c 3cff 	addlt.w	ip, ip, #4294967295
900161ba:	1912      	addlt	r2, r2, r4
900161bc:	fb0c a101 	mla	r1, ip, r1, sl
900161c0:	44e6      	add	lr, ip
900161c2:	80e9      	strh	r1, [r5, #6]
900161c4:	990a      	ldr	r1, [sp, #40]	; 0x28
900161c6:	f8a5 e004 	strh.w	lr, [r5, #4]
900161ca:	eb08 0501 	add.w	r5, r8, r1
900161ce:	6901      	ldr	r1, [r0, #16]
900161d0:	f8b1 8006 	ldrh.w	r8, [r1, #6]
900161d4:	f8b1 e004 	ldrh.w	lr, [r1, #4]
900161d8:	ea58 070e 	orrs.w	r7, r8, lr
900161dc:	d010      	beq.n	90016200 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900161de:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
900161e2:	f1be 0f00 	cmp.w	lr, #0
900161e6:	db0b      	blt.n	90016200 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900161e8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900161ea:	45be      	cmp	lr, r7
900161ec:	da08      	bge.n	90016200 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900161ee:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900161f2:	45be      	cmp	lr, r7
900161f4:	bf3c      	itt	cc
900161f6:	3108      	addcc	r1, #8
900161f8:	6101      	strcc	r1, [r0, #16]
900161fa:	f10e 0101 	add.w	r1, lr, #1
900161fe:	6081      	str	r1, [r0, #8]
90016200:	6901      	ldr	r1, [r0, #16]
90016202:	f04f 0e00 	mov.w	lr, #0
90016206:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001620a:	42ae      	cmp	r6, r5
9001620c:	800d      	strh	r5, [r1, #0]
9001620e:	4463      	add	r3, ip
90016210:	f8a1 8002 	strh.w	r8, [r1, #2]
90016214:	f8a1 e004 	strh.w	lr, [r1, #4]
90016218:	f8a1 e006 	strh.w	lr, [r1, #6]
9001621c:	d053      	beq.n	900162c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
9001621e:	9901      	ldr	r1, [sp, #4]
90016220:	1b12      	subs	r2, r2, r4
90016222:	1ac9      	subs	r1, r1, r3
90016224:	4461      	add	r1, ip
90016226:	0149      	lsls	r1, r1, #5
90016228:	fb91 fef4 	sdiv	lr, r1, r4
9001622c:	fb04 111e 	mls	r1, r4, lr, r1
90016230:	2900      	cmp	r1, #0
90016232:	bfbc      	itt	lt
90016234:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90016238:	1909      	addlt	r1, r1, r4
9001623a:	f10e 0701 	add.w	r7, lr, #1
9001623e:	970d      	str	r7, [sp, #52]	; 0x34
90016240:	f8d0 a010 	ldr.w	sl, [r0, #16]
90016244:	1852      	adds	r2, r2, r1
90016246:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90016248:	bf54      	ite	pl
9001624a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
9001624e:	46f4      	movmi	ip, lr
90016250:	f8ba b004 	ldrh.w	fp, [sl, #4]
90016254:	bf58      	it	pl
90016256:	1b12      	subpl	r2, r2, r4
90016258:	4463      	add	r3, ip
9001625a:	443d      	add	r5, r7
9001625c:	44e3      	add	fp, ip
9001625e:	f8aa b004 	strh.w	fp, [sl, #4]
90016262:	f8ba b006 	ldrh.w	fp, [sl, #6]
90016266:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
9001626a:	f8aa b006 	strh.w	fp, [sl, #6]
9001626e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016272:	f8bc b006 	ldrh.w	fp, [ip, #6]
90016276:	f8bc a004 	ldrh.w	sl, [ip, #4]
9001627a:	ea5b 070a 	orrs.w	r7, fp, sl
9001627e:	d014      	beq.n	900162aa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016280:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90016284:	f1ba 0f00 	cmp.w	sl, #0
90016288:	db0f      	blt.n	900162aa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
9001628a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001628c:	45ba      	cmp	sl, r7
9001628e:	da0c      	bge.n	900162aa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016290:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90016294:	45ba      	cmp	sl, r7
90016296:	f10a 0a01 	add.w	sl, sl, #1
9001629a:	bf38      	it	cc
9001629c:	f10c 0c08 	addcc.w	ip, ip, #8
900162a0:	f8c0 a008 	str.w	sl, [r0, #8]
900162a4:	bf38      	it	cc
900162a6:	f8c0 c010 	strcc.w	ip, [r0, #16]
900162aa:	f8d0 c010 	ldr.w	ip, [r0, #16]
900162ae:	f04f 0700 	mov.w	r7, #0
900162b2:	42ae      	cmp	r6, r5
900162b4:	f8ac 5000 	strh.w	r5, [ip]
900162b8:	f8ac 8002 	strh.w	r8, [ip, #2]
900162bc:	f8ac 7004 	strh.w	r7, [ip, #4]
900162c0:	f8ac 7006 	strh.w	r7, [ip, #6]
900162c4:	d1bc      	bne.n	90016240 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
900162c6:	6904      	ldr	r4, [r0, #16]
900162c8:	9a01      	ldr	r2, [sp, #4]
900162ca:	990c      	ldr	r1, [sp, #48]	; 0x30
900162cc:	1ad3      	subs	r3, r2, r3
900162ce:	88a2      	ldrh	r2, [r4, #4]
900162d0:	3120      	adds	r1, #32
900162d2:	441a      	add	r2, r3
900162d4:	80a2      	strh	r2, [r4, #4]
900162d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
900162d8:	1a89      	subs	r1, r1, r2
900162da:	88e2      	ldrh	r2, [r4, #6]
900162dc:	fb03 2301 	mla	r3, r3, r1, r2
900162e0:	80e3      	strh	r3, [r4, #6]
900162e2:	e650      	b.n	90015f86 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900162e4:	f04f 37ff 	mov.w	r7, #4294967295
900162e8:	434a      	muls	r2, r1
900162ea:	4264      	negs	r4, r4
900162ec:	970a      	str	r7, [sp, #40]	; 0x28
900162ee:	2700      	movs	r7, #0
900162f0:	e758      	b.n	900161a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
900162f2:	ea4f 1867 	mov.w	r8, r7, asr #5
900162f6:	f009 031f 	and.w	r3, r9, #31
900162fa:	f007 071f 	and.w	r7, r7, #31
900162fe:	fa1f fc8c 	uxth.w	ip, ip
90016302:	45d0      	cmp	r8, sl
90016304:	930f      	str	r3, [sp, #60]	; 0x3c
90016306:	fa1f fe8e 	uxth.w	lr, lr
9001630a:	d10a      	bne.n	90016322 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
9001630c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001630e:	449c      	add	ip, r3
90016310:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90016312:	441f      	add	r7, r3
90016314:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90016316:	f8a5 c004 	strh.w	ip, [r5, #4]
9001631a:	fb03 e707 	mla	r7, r3, r7, lr
9001631e:	80ef      	strh	r7, [r5, #6]
90016320:	e6bc      	b.n	9001609c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016322:	2900      	cmp	r1, #0
90016324:	f2c0 80a6 	blt.w	90016474 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90016328:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001632a:	f1c7 0320 	rsb	r3, r7, #32
9001632e:	4363      	muls	r3, r4
90016330:	2401      	movs	r4, #1
90016332:	940d      	str	r4, [sp, #52]	; 0x34
90016334:	2420      	movs	r4, #32
90016336:	940c      	str	r4, [sp, #48]	; 0x30
90016338:	fb93 f4f1 	sdiv	r4, r3, r1
9001633c:	fb01 3b14 	mls	fp, r1, r4, r3
90016340:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90016342:	f1bb 0f00 	cmp.w	fp, #0
90016346:	441f      	add	r7, r3
90016348:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001634a:	bfbc      	itt	lt
9001634c:	f104 34ff 	addlt.w	r4, r4, #4294967295
90016350:	448b      	addlt	fp, r1
90016352:	fb04 e707 	mla	r7, r4, r7, lr
90016356:	44a4      	add	ip, r4
90016358:	80ef      	strh	r7, [r5, #6]
9001635a:	f8a5 c004 	strh.w	ip, [r5, #4]
9001635e:	eb08 0503 	add.w	r5, r8, r3
90016362:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016366:	f8bc e006 	ldrh.w	lr, [ip, #6]
9001636a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
9001636e:	ea5e 0307 	orrs.w	r3, lr, r7
90016372:	d011      	beq.n	90016398 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90016374:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90016378:	f1be 0f00 	cmp.w	lr, #0
9001637c:	db0c      	blt.n	90016398 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001637e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016380:	45be      	cmp	lr, r7
90016382:	da09      	bge.n	90016398 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90016384:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90016388:	45be      	cmp	lr, r7
9001638a:	bf3c      	itt	cc
9001638c:	f10c 0708 	addcc.w	r7, ip, #8
90016390:	6107      	strcc	r7, [r0, #16]
90016392:	f10e 0701 	add.w	r7, lr, #1
90016396:	6087      	str	r7, [r0, #8]
90016398:	6907      	ldr	r7, [r0, #16]
9001639a:	b213      	sxth	r3, r2
9001639c:	4555      	cmp	r5, sl
9001639e:	9310      	str	r3, [sp, #64]	; 0x40
900163a0:	807b      	strh	r3, [r7, #2]
900163a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900163a4:	803d      	strh	r5, [r7, #0]
900163a6:	80be      	strh	r6, [r7, #4]
900163a8:	eb04 0c03 	add.w	ip, r4, r3
900163ac:	80fe      	strh	r6, [r7, #6]
900163ae:	d050      	beq.n	90016452 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
900163b0:	9b01      	ldr	r3, [sp, #4]
900163b2:	eba3 070c 	sub.w	r7, r3, ip
900163b6:	ebab 0301 	sub.w	r3, fp, r1
900163ba:	443c      	add	r4, r7
900163bc:	9309      	str	r3, [sp, #36]	; 0x24
900163be:	0164      	lsls	r4, r4, #5
900163c0:	fb94 f8f1 	sdiv	r8, r4, r1
900163c4:	fb01 4418 	mls	r4, r1, r8, r4
900163c8:	2c00      	cmp	r4, #0
900163ca:	bfbc      	itt	lt
900163cc:	f108 38ff 	addlt.w	r8, r8, #4294967295
900163d0:	1864      	addlt	r4, r4, r1
900163d2:	f108 0701 	add.w	r7, r8, #1
900163d6:	9711      	str	r7, [sp, #68]	; 0x44
900163d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900163da:	f8d0 e010 	ldr.w	lr, [r0, #16]
900163de:	191b      	adds	r3, r3, r4
900163e0:	f8be b004 	ldrh.w	fp, [lr, #4]
900163e4:	bf54      	ite	pl
900163e6:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
900163e8:	4647      	movmi	r7, r8
900163ea:	9309      	str	r3, [sp, #36]	; 0x24
900163ec:	bf58      	it	pl
900163ee:	1a5b      	subpl	r3, r3, r1
900163f0:	44bb      	add	fp, r7
900163f2:	44bc      	add	ip, r7
900163f4:	bf58      	it	pl
900163f6:	9309      	strpl	r3, [sp, #36]	; 0x24
900163f8:	f8ae b004 	strh.w	fp, [lr, #4]
900163fc:	f8be b006 	ldrh.w	fp, [lr, #6]
90016400:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90016404:	9f0d      	ldr	r7, [sp, #52]	; 0x34
90016406:	f8ae b006 	strh.w	fp, [lr, #6]
9001640a:	443d      	add	r5, r7
9001640c:	f8d0 e010 	ldr.w	lr, [r0, #16]
90016410:	f8be b006 	ldrh.w	fp, [lr, #6]
90016414:	f8be 7004 	ldrh.w	r7, [lr, #4]
90016418:	ea5b 0307 	orrs.w	r3, fp, r7
9001641c:	d011      	beq.n	90016442 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001641e:	f9be b002 	ldrsh.w	fp, [lr, #2]
90016422:	f1bb 0f00 	cmp.w	fp, #0
90016426:	db0c      	blt.n	90016442 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90016428:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001642a:	45bb      	cmp	fp, r7
9001642c:	da09      	bge.n	90016442 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001642e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90016432:	45bb      	cmp	fp, r7
90016434:	bf3c      	itt	cc
90016436:	f10e 0708 	addcc.w	r7, lr, #8
9001643a:	6107      	strcc	r7, [r0, #16]
9001643c:	f10b 0701 	add.w	r7, fp, #1
90016440:	6087      	str	r7, [r0, #8]
90016442:	6907      	ldr	r7, [r0, #16]
90016444:	4555      	cmp	r5, sl
90016446:	9b10      	ldr	r3, [sp, #64]	; 0x40
90016448:	803d      	strh	r5, [r7, #0]
9001644a:	807b      	strh	r3, [r7, #2]
9001644c:	80be      	strh	r6, [r7, #4]
9001644e:	80fe      	strh	r6, [r7, #6]
90016450:	d1c2      	bne.n	900163d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90016452:	9b01      	ldr	r3, [sp, #4]
90016454:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90016456:	eba3 0c0c 	sub.w	ip, r3, ip
9001645a:	6903      	ldr	r3, [r0, #16]
9001645c:	3720      	adds	r7, #32
9001645e:	8899      	ldrh	r1, [r3, #4]
90016460:	4461      	add	r1, ip
90016462:	8099      	strh	r1, [r3, #4]
90016464:	990c      	ldr	r1, [sp, #48]	; 0x30
90016466:	1a7f      	subs	r7, r7, r1
90016468:	88d9      	ldrh	r1, [r3, #6]
9001646a:	fb0c 1c07 	mla	ip, ip, r7, r1
9001646e:	f8a3 c006 	strh.w	ip, [r3, #6]
90016472:	e613      	b.n	9001609c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016474:	f04f 34ff 	mov.w	r4, #4294967295
90016478:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001647a:	4249      	negs	r1, r1
9001647c:	940d      	str	r4, [sp, #52]	; 0x34
9001647e:	2400      	movs	r4, #0
90016480:	437b      	muls	r3, r7
90016482:	e758      	b.n	90016336 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90016484:	9905      	ldr	r1, [sp, #20]
90016486:	ea4f 1b69 	mov.w	fp, r9, asr #5
9001648a:	f009 0c1f 	and.w	ip, r9, #31
9001648e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90016492:	f001 011f 	and.w	r1, r1, #31
90016496:	45f3      	cmp	fp, lr
90016498:	f8b7 a006 	ldrh.w	sl, [r7, #6]
9001649c:	9102      	str	r1, [sp, #8]
9001649e:	9904      	ldr	r1, [sp, #16]
900164a0:	eba1 0406 	sub.w	r4, r1, r6
900164a4:	d108      	bne.n	900164b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
900164a6:	9b02      	ldr	r3, [sp, #8]
900164a8:	44a0      	add	r8, r4
900164aa:	449c      	add	ip, r3
900164ac:	f8a7 8004 	strh.w	r8, [r7, #4]
900164b0:	fb04 a40c 	mla	r4, r4, ip, sl
900164b4:	80fc      	strh	r4, [r7, #6]
900164b6:	e461      	b.n	90015d7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900164b8:	9905      	ldr	r1, [sp, #20]
900164ba:	ebb1 0109 	subs.w	r1, r1, r9
900164be:	bf51      	iteee	pl
900164c0:	f1cc 0520 	rsbpl	r5, ip, #32
900164c4:	fb04 f40c 	mulmi.w	r4, r4, ip
900164c8:	4249      	negmi	r1, r1
900164ca:	2500      	movmi	r5, #0
900164cc:	bf5d      	ittte	pl
900164ce:	436c      	mulpl	r4, r5
900164d0:	2520      	movpl	r5, #32
900164d2:	f04f 0901 	movpl.w	r9, #1
900164d6:	f04f 39ff 	movmi.w	r9, #4294967295
900164da:	9501      	str	r5, [sp, #4]
900164dc:	9b01      	ldr	r3, [sp, #4]
900164de:	fb94 f5f1 	sdiv	r5, r4, r1
900164e2:	fb01 4415 	mls	r4, r1, r5, r4
900164e6:	449c      	add	ip, r3
900164e8:	eb0b 0309 	add.w	r3, fp, r9
900164ec:	2c00      	cmp	r4, #0
900164ee:	bfbc      	itt	lt
900164f0:	f105 35ff 	addlt.w	r5, r5, #4294967295
900164f4:	1864      	addlt	r4, r4, r1
900164f6:	44a8      	add	r8, r5
900164f8:	fb05 ac0c 	mla	ip, r5, ip, sl
900164fc:	f8a7 8004 	strh.w	r8, [r7, #4]
90016500:	f8a7 c006 	strh.w	ip, [r7, #6]
90016504:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016508:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001650c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016510:	ea58 0707 	orrs.w	r7, r8, r7
90016514:	d011      	beq.n	9001653a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016516:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
9001651a:	f1b8 0f00 	cmp.w	r8, #0
9001651e:	db0c      	blt.n	9001653a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016520:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016522:	45b8      	cmp	r8, r7
90016524:	da09      	bge.n	9001653a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016526:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
9001652a:	45b8      	cmp	r8, r7
9001652c:	bf3c      	itt	cc
9001652e:	f10c 0708 	addcc.w	r7, ip, #8
90016532:	6107      	strcc	r7, [r0, #16]
90016534:	f108 0701 	add.w	r7, r8, #1
90016538:	6087      	str	r7, [r0, #8]
9001653a:	6907      	ldr	r7, [r0, #16]
9001653c:	f04f 0c00 	mov.w	ip, #0
90016540:	b212      	sxth	r2, r2
90016542:	459e      	cmp	lr, r3
90016544:	803b      	strh	r3, [r7, #0]
90016546:	442e      	add	r6, r5
90016548:	807a      	strh	r2, [r7, #2]
9001654a:	f8a7 c004 	strh.w	ip, [r7, #4]
9001654e:	f8a7 c006 	strh.w	ip, [r7, #6]
90016552:	d04b      	beq.n	900165ec <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90016554:	9f04      	ldr	r7, [sp, #16]
90016556:	1a64      	subs	r4, r4, r1
90016558:	f04f 0a00 	mov.w	sl, #0
9001655c:	1bbf      	subs	r7, r7, r6
9001655e:	443d      	add	r5, r7
90016560:	016d      	lsls	r5, r5, #5
90016562:	fb95 f8f1 	sdiv	r8, r5, r1
90016566:	fb01 5518 	mls	r5, r1, r8, r5
9001656a:	4565      	cmp	r5, ip
9001656c:	bfbc      	itt	lt
9001656e:	f108 38ff 	addlt.w	r8, r8, #4294967295
90016572:	186d      	addlt	r5, r5, r1
90016574:	f108 0701 	add.w	r7, r8, #1
90016578:	9703      	str	r7, [sp, #12]
9001657a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001657e:	1964      	adds	r4, r4, r5
90016580:	444b      	add	r3, r9
90016582:	bf54      	ite	pl
90016584:	9f03      	ldrpl	r7, [sp, #12]
90016586:	4647      	movmi	r7, r8
90016588:	f8bc b004 	ldrh.w	fp, [ip, #4]
9001658c:	bf58      	it	pl
9001658e:	1a64      	subpl	r4, r4, r1
90016590:	443e      	add	r6, r7
90016592:	44bb      	add	fp, r7
90016594:	f8ac b004 	strh.w	fp, [ip, #4]
90016598:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001659c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900165a0:	f8ac b006 	strh.w	fp, [ip, #6]
900165a4:	f8d0 c010 	ldr.w	ip, [r0, #16]
900165a8:	f8bc b006 	ldrh.w	fp, [ip, #6]
900165ac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900165b0:	ea5b 0707 	orrs.w	r7, fp, r7
900165b4:	d011      	beq.n	900165da <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900165b6:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900165ba:	f1bb 0f00 	cmp.w	fp, #0
900165be:	db0c      	blt.n	900165da <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900165c0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900165c2:	45bb      	cmp	fp, r7
900165c4:	da09      	bge.n	900165da <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900165c6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900165ca:	45bb      	cmp	fp, r7
900165cc:	bf3c      	itt	cc
900165ce:	f10c 0708 	addcc.w	r7, ip, #8
900165d2:	6107      	strcc	r7, [r0, #16]
900165d4:	f10b 0701 	add.w	r7, fp, #1
900165d8:	6087      	str	r7, [r0, #8]
900165da:	6907      	ldr	r7, [r0, #16]
900165dc:	459e      	cmp	lr, r3
900165de:	803b      	strh	r3, [r7, #0]
900165e0:	807a      	strh	r2, [r7, #2]
900165e2:	f8a7 a004 	strh.w	sl, [r7, #4]
900165e6:	f8a7 a006 	strh.w	sl, [r7, #6]
900165ea:	d1c6      	bne.n	9001657a <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
900165ec:	9b04      	ldr	r3, [sp, #16]
900165ee:	1b9e      	subs	r6, r3, r6
900165f0:	6903      	ldr	r3, [r0, #16]
900165f2:	889a      	ldrh	r2, [r3, #4]
900165f4:	4432      	add	r2, r6
900165f6:	809a      	strh	r2, [r3, #4]
900165f8:	9a02      	ldr	r2, [sp, #8]
900165fa:	f102 0c20 	add.w	ip, r2, #32
900165fe:	9a01      	ldr	r2, [sp, #4]
90016600:	ebac 0c02 	sub.w	ip, ip, r2
90016604:	88da      	ldrh	r2, [r3, #6]
90016606:	fb06 260c 	mla	r6, r6, ip, r2
9001660a:	80de      	strh	r6, [r3, #6]
9001660c:	f7ff bbb6 	b.w	90015d7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90016610 <_ZN8touchgfx7Outline6lineToEii>:
90016610:	6a43      	ldr	r3, [r0, #36]	; 0x24
90016612:	079b      	lsls	r3, r3, #30
90016614:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90016616:	460e      	mov	r6, r1
90016618:	4615      	mov	r5, r2
9001661a:	d511      	bpl.n	90016640 <_ZN8touchgfx7Outline6lineToEii+0x30>
9001661c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90016620:	ea86 0701 	eor.w	r7, r6, r1
90016624:	ea85 0302 	eor.w	r3, r5, r2
90016628:	433b      	orrs	r3, r7
9001662a:	d009      	beq.n	90016640 <_ZN8touchgfx7Outline6lineToEii+0x30>
9001662c:	4633      	mov	r3, r6
9001662e:	9500      	str	r5, [sp, #0]
90016630:	f7ff fb4c 	bl	90015ccc <_ZN8touchgfx7Outline10renderLineEiiii>
90016634:	6a43      	ldr	r3, [r0, #36]	; 0x24
90016636:	f043 0301 	orr.w	r3, r3, #1
9001663a:	e9c0 6505 	strd	r6, r5, [r0, #20]
9001663e:	6243      	str	r3, [r0, #36]	; 0x24
90016640:	b003      	add	sp, #12
90016642:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016644 <_ZN8touchgfx7Outline6moveToEii>:
90016644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016646:	6a43      	ldr	r3, [r0, #36]	; 0x24
90016648:	4615      	mov	r5, r2
9001664a:	4604      	mov	r4, r0
9001664c:	460e      	mov	r6, r1
9001664e:	079a      	lsls	r2, r3, #30
90016650:	d401      	bmi.n	90016656 <_ZN8touchgfx7Outline6moveToEii+0x12>
90016652:	f7ff fb07 	bl	90015c64 <_ZN8touchgfx7Outline5resetEv>
90016656:	6a63      	ldr	r3, [r4, #36]	; 0x24
90016658:	07db      	lsls	r3, r3, #31
9001665a:	d504      	bpl.n	90016666 <_ZN8touchgfx7Outline6moveToEii+0x22>
9001665c:	4620      	mov	r0, r4
9001665e:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90016662:	f7ff ffd5 	bl	90016610 <_ZN8touchgfx7Outline6lineToEii>
90016666:	6923      	ldr	r3, [r4, #16]
90016668:	1170      	asrs	r0, r6, #5
9001666a:	1169      	asrs	r1, r5, #5
9001666c:	f9b3 2000 	ldrsh.w	r2, [r3]
90016670:	4290      	cmp	r0, r2
90016672:	d103      	bne.n	9001667c <_ZN8touchgfx7Outline6moveToEii+0x38>
90016674:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016678:	4291      	cmp	r1, r2
9001667a:	d01a      	beq.n	900166b2 <_ZN8touchgfx7Outline6moveToEii+0x6e>
9001667c:	88df      	ldrh	r7, [r3, #6]
9001667e:	889a      	ldrh	r2, [r3, #4]
90016680:	433a      	orrs	r2, r7
90016682:	d010      	beq.n	900166a6 <_ZN8touchgfx7Outline6moveToEii+0x62>
90016684:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016688:	2a00      	cmp	r2, #0
9001668a:	db0c      	blt.n	900166a6 <_ZN8touchgfx7Outline6moveToEii+0x62>
9001668c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
9001668e:	42ba      	cmp	r2, r7
90016690:	da09      	bge.n	900166a6 <_ZN8touchgfx7Outline6moveToEii+0x62>
90016692:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90016696:	42ba      	cmp	r2, r7
90016698:	f102 0201 	add.w	r2, r2, #1
9001669c:	bf38      	it	cc
9001669e:	3308      	addcc	r3, #8
900166a0:	60a2      	str	r2, [r4, #8]
900166a2:	bf38      	it	cc
900166a4:	6123      	strcc	r3, [r4, #16]
900166a6:	6923      	ldr	r3, [r4, #16]
900166a8:	2200      	movs	r2, #0
900166aa:	8018      	strh	r0, [r3, #0]
900166ac:	8059      	strh	r1, [r3, #2]
900166ae:	809a      	strh	r2, [r3, #4]
900166b0:	80da      	strh	r2, [r3, #6]
900166b2:	6166      	str	r6, [r4, #20]
900166b4:	6225      	str	r5, [r4, #32]
900166b6:	e9c4 5606 	strd	r5, r6, [r4, #24]
900166ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900166bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
900166bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900166c0:	b0d0      	sub	sp, #320	; 0x140
900166c2:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
900166c6:	466c      	mov	r4, sp
900166c8:	4627      	mov	r7, r4
900166ca:	1a0d      	subs	r5, r1, r0
900166cc:	f100 0308 	add.w	r3, r0, #8
900166d0:	2d48      	cmp	r5, #72	; 0x48
900166d2:	f340 80d5 	ble.w	90016880 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900166d6:	112d      	asrs	r5, r5, #4
900166d8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900166dc:	f9b0 9000 	ldrsh.w	r9, [r0]
900166e0:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
900166e4:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
900166e8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900166ec:	6816      	ldr	r6, [r2, #0]
900166ee:	6006      	str	r6, [r0, #0]
900166f0:	6856      	ldr	r6, [r2, #4]
900166f2:	6046      	str	r6, [r0, #4]
900166f4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900166f8:	f8a2 8002 	strh.w	r8, [r2, #2]
900166fc:	f8a2 e004 	strh.w	lr, [r2, #4]
90016700:	f8a2 c006 	strh.w	ip, [r2, #6]
90016704:	f1a1 0208 	sub.w	r2, r1, #8
90016708:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
9001670c:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90016710:	4565      	cmp	r5, ip
90016712:	db06      	blt.n	90016722 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90016714:	d119      	bne.n	9001674a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90016716:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
9001671a:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
9001671e:	42ae      	cmp	r6, r5
90016720:	dd13      	ble.n	9001674a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90016722:	460e      	mov	r6, r1
90016724:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90016728:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
9001672c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90016730:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90016734:	601d      	str	r5, [r3, #0]
90016736:	6875      	ldr	r5, [r6, #4]
90016738:	605d      	str	r5, [r3, #4]
9001673a:	f821 9c08 	strh.w	r9, [r1, #-8]
9001673e:	f821 cc06 	strh.w	ip, [r1, #-6]
90016742:	f821 8c04 	strh.w	r8, [r1, #-4]
90016746:	f821 ec02 	strh.w	lr, [r1, #-2]
9001674a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9001674e:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
90016752:	42ae      	cmp	r6, r5
90016754:	db06      	blt.n	90016764 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90016756:	d116      	bne.n	90016786 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90016758:	f9b0 c000 	ldrsh.w	ip, [r0]
9001675c:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90016760:	45ac      	cmp	ip, r5
90016762:	da10      	bge.n	90016786 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90016764:	681d      	ldr	r5, [r3, #0]
90016766:	f9b0 8000 	ldrsh.w	r8, [r0]
9001676a:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
9001676e:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90016772:	6005      	str	r5, [r0, #0]
90016774:	685d      	ldr	r5, [r3, #4]
90016776:	f8a0 8008 	strh.w	r8, [r0, #8]
9001677a:	6045      	str	r5, [r0, #4]
9001677c:	8146      	strh	r6, [r0, #10]
9001677e:	f8a0 e00c 	strh.w	lr, [r0, #12]
90016782:	f8a0 c00e 	strh.w	ip, [r0, #14]
90016786:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
9001678a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001678e:	4565      	cmp	r5, ip
90016790:	db06      	blt.n	900167a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90016792:	d119      	bne.n	900167c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016794:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90016798:	f9b0 5000 	ldrsh.w	r5, [r0]
9001679c:	42ae      	cmp	r6, r5
9001679e:	da13      	bge.n	900167c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900167a0:	460e      	mov	r6, r1
900167a2:	f9b0 9000 	ldrsh.w	r9, [r0]
900167a6:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
900167aa:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900167ae:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
900167b2:	6005      	str	r5, [r0, #0]
900167b4:	6875      	ldr	r5, [r6, #4]
900167b6:	6045      	str	r5, [r0, #4]
900167b8:	f821 9c08 	strh.w	r9, [r1, #-8]
900167bc:	f821 cc06 	strh.w	ip, [r1, #-6]
900167c0:	f821 8c04 	strh.w	r8, [r1, #-4]
900167c4:	f821 ec02 	strh.w	lr, [r1, #-2]
900167c8:	3308      	adds	r3, #8
900167ca:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900167ce:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900167d2:	45e6      	cmp	lr, ip
900167d4:	dbf8      	blt.n	900167c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900167d6:	d105      	bne.n	900167e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900167d8:	f9b3 6000 	ldrsh.w	r6, [r3]
900167dc:	f9b0 5000 	ldrsh.w	r5, [r0]
900167e0:	42ae      	cmp	r6, r5
900167e2:	dbf1      	blt.n	900167c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900167e4:	4615      	mov	r5, r2
900167e6:	3a08      	subs	r2, #8
900167e8:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
900167ec:	45b4      	cmp	ip, r6
900167ee:	dbf9      	blt.n	900167e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900167f0:	d105      	bne.n	900167fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
900167f2:	f9b0 8000 	ldrsh.w	r8, [r0]
900167f6:	f9b2 6000 	ldrsh.w	r6, [r2]
900167fa:	45b0      	cmp	r8, r6
900167fc:	dbf2      	blt.n	900167e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900167fe:	4293      	cmp	r3, r2
90016800:	f1a5 0608 	sub.w	r6, r5, #8
90016804:	d816      	bhi.n	90016834 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90016806:	f8d6 c000 	ldr.w	ip, [r6]
9001680a:	f9b3 a000 	ldrsh.w	sl, [r3]
9001680e:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90016812:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90016816:	f8c3 c000 	str.w	ip, [r3]
9001681a:	f8d6 c004 	ldr.w	ip, [r6, #4]
9001681e:	f8c3 c004 	str.w	ip, [r3, #4]
90016822:	f825 ac08 	strh.w	sl, [r5, #-8]
90016826:	f825 ec06 	strh.w	lr, [r5, #-6]
9001682a:	f825 9c04 	strh.w	r9, [r5, #-4]
9001682e:	f825 8c02 	strh.w	r8, [r5, #-2]
90016832:	e7c9      	b.n	900167c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016834:	f8d6 e000 	ldr.w	lr, [r6]
90016838:	f9b0 a000 	ldrsh.w	sl, [r0]
9001683c:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90016840:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90016844:	f8c0 e000 	str.w	lr, [r0]
90016848:	f8d6 e004 	ldr.w	lr, [r6, #4]
9001684c:	1a16      	subs	r6, r2, r0
9001684e:	f8c0 e004 	str.w	lr, [r0, #4]
90016852:	f825 ac08 	strh.w	sl, [r5, #-8]
90016856:	f825 cc06 	strh.w	ip, [r5, #-6]
9001685a:	f825 9c04 	strh.w	r9, [r5, #-4]
9001685e:	f825 8c02 	strh.w	r8, [r5, #-2]
90016862:	1acd      	subs	r5, r1, r3
90016864:	10ed      	asrs	r5, r5, #3
90016866:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
9001686a:	bfb5      	itete	lt
9001686c:	e9c4 0200 	strdlt	r0, r2, [r4]
90016870:	e9c4 3100 	strdge	r3, r1, [r4]
90016874:	460a      	movlt	r2, r1
90016876:	4603      	movge	r3, r0
90016878:	3408      	adds	r4, #8
9001687a:	4618      	mov	r0, r3
9001687c:	4611      	mov	r1, r2
9001687e:	e724      	b.n	900166ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90016880:	4299      	cmp	r1, r3
90016882:	d927      	bls.n	900168d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90016884:	f1a3 0210 	sub.w	r2, r3, #16
90016888:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
9001688c:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90016890:	45ac      	cmp	ip, r5
90016892:	db06      	blt.n	900168a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90016894:	d11c      	bne.n	900168d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90016896:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
9001689a:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
9001689e:	42ae      	cmp	r6, r5
900168a0:	da16      	bge.n	900168d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900168a2:	4615      	mov	r5, r2
900168a4:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900168a8:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900168ac:	3a08      	subs	r2, #8
900168ae:	f855 6f08 	ldr.w	r6, [r5, #8]!
900168b2:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
900168b6:	6196      	str	r6, [r2, #24]
900168b8:	42a8      	cmp	r0, r5
900168ba:	686e      	ldr	r6, [r5, #4]
900168bc:	f8a2 9010 	strh.w	r9, [r2, #16]
900168c0:	61d6      	str	r6, [r2, #28]
900168c2:	f8a2 c012 	strh.w	ip, [r2, #18]
900168c6:	f8a2 8014 	strh.w	r8, [r2, #20]
900168ca:	f8a2 e016 	strh.w	lr, [r2, #22]
900168ce:	d1db      	bne.n	90016888 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
900168d0:	3308      	adds	r3, #8
900168d2:	e7d5      	b.n	90016880 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900168d4:	42bc      	cmp	r4, r7
900168d6:	d903      	bls.n	900168e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
900168d8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
900168dc:	3c08      	subs	r4, #8
900168de:	e6f4      	b.n	900166ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900168e0:	b050      	add	sp, #320	; 0x140
900168e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900168e6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
900168e6:	b510      	push	{r4, lr}
900168e8:	6a43      	ldr	r3, [r0, #36]	; 0x24
900168ea:	4604      	mov	r4, r0
900168ec:	07da      	lsls	r2, r3, #31
900168ee:	d507      	bpl.n	90016900 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
900168f0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
900168f4:	f7ff fe8c 	bl	90016610 <_ZN8touchgfx7Outline6lineToEii>
900168f8:	6a43      	ldr	r3, [r0, #36]	; 0x24
900168fa:	f023 0301 	bic.w	r3, r3, #1
900168fe:	6243      	str	r3, [r0, #36]	; 0x24
90016900:	6a63      	ldr	r3, [r4, #36]	; 0x24
90016902:	079b      	lsls	r3, r3, #30
90016904:	d521      	bpl.n	9001694a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90016906:	6923      	ldr	r3, [r4, #16]
90016908:	88d9      	ldrh	r1, [r3, #6]
9001690a:	889a      	ldrh	r2, [r3, #4]
9001690c:	430a      	orrs	r2, r1
9001690e:	d010      	beq.n	90016932 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016910:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016914:	2a00      	cmp	r2, #0
90016916:	db0c      	blt.n	90016932 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016918:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9001691a:	428a      	cmp	r2, r1
9001691c:	da09      	bge.n	90016932 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001691e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90016922:	4291      	cmp	r1, r2
90016924:	f102 0201 	add.w	r2, r2, #1
90016928:	bf88      	it	hi
9001692a:	3308      	addhi	r3, #8
9001692c:	60a2      	str	r2, [r4, #8]
9001692e:	bf88      	it	hi
90016930:	6123      	strhi	r3, [r4, #16]
90016932:	68a1      	ldr	r1, [r4, #8]
90016934:	b129      	cbz	r1, 90016942 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90016936:	6863      	ldr	r3, [r4, #4]
90016938:	4299      	cmp	r1, r3
9001693a:	d802      	bhi.n	90016942 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
9001693c:	68e0      	ldr	r0, [r4, #12]
9001693e:	f7ff febd 	bl	900166bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90016942:	6a63      	ldr	r3, [r4, #36]	; 0x24
90016944:	f023 0302 	bic.w	r3, r3, #2
90016948:	6263      	str	r3, [r4, #36]	; 0x24
9001694a:	68e0      	ldr	r0, [r4, #12]
9001694c:	bd10      	pop	{r4, pc}
	...

90016950 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90016950:	4b02      	ldr	r3, [pc, #8]	; (9001695c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
90016952:	6018      	str	r0, [r3, #0]
90016954:	4b02      	ldr	r3, [pc, #8]	; (90016960 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
90016956:	6019      	str	r1, [r3, #0]
90016958:	4770      	bx	lr
9001695a:	bf00      	nop
9001695c:	24039ad4 	.word	0x24039ad4
90016960:	24039ad8 	.word	0x24039ad8

90016964 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
90016964:	2300      	movs	r3, #0
90016966:	4a02      	ldr	r2, [pc, #8]	; (90016970 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
90016968:	6013      	str	r3, [r2, #0]
9001696a:	4a02      	ldr	r2, [pc, #8]	; (90016974 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
9001696c:	6013      	str	r3, [r2, #0]
9001696e:	4770      	bx	lr
90016970:	24039ad4 	.word	0x24039ad4
90016974:	24039ad8 	.word	0x24039ad8

90016978 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90016978:	4b01      	ldr	r3, [pc, #4]	; (90016980 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
9001697a:	6818      	ldr	r0, [r3, #0]
9001697c:	4770      	bx	lr
9001697e:	bf00      	nop
90016980:	24039ad4 	.word	0x24039ad4

90016984 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90016984:	4b01      	ldr	r3, [pc, #4]	; (9001698c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90016986:	6818      	ldr	r0, [r3, #0]
90016988:	4770      	bx	lr
9001698a:	bf00      	nop
9001698c:	24039ad8 	.word	0x24039ad8

90016990 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90016990:	b510      	push	{r4, lr}
90016992:	6803      	ldr	r3, [r0, #0]
90016994:	460c      	mov	r4, r1
90016996:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016998:	4798      	blx	r3
9001699a:	1b03      	subs	r3, r0, r4
9001699c:	4258      	negs	r0, r3
9001699e:	4158      	adcs	r0, r3
900169a0:	bd10      	pop	{r4, pc}
	...

900169a4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
900169a4:	4b01      	ldr	r3, [pc, #4]	; (900169ac <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
900169a6:	6019      	str	r1, [r3, #0]
900169a8:	4770      	bx	lr
900169aa:	bf00      	nop
900169ac:	24039adc 	.word	0x24039adc

900169b0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900169b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900169b4:	4696      	mov	lr, r2
900169b6:	b097      	sub	sp, #92	; 0x5c
900169b8:	4605      	mov	r5, r0
900169ba:	4614      	mov	r4, r2
900169bc:	460e      	mov	r6, r1
900169be:	461f      	mov	r7, r3
900169c0:	f10d 0c1c 	add.w	ip, sp, #28
900169c4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
900169c8:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
900169cc:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
900169d0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900169d4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900169d8:	f8de 3000 	ldr.w	r3, [lr]
900169dc:	f104 0e14 	add.w	lr, r4, #20
900169e0:	f8cc 3000 	str.w	r3, [ip]
900169e4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
900169e8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900169ec:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900169f0:	f8de 3000 	ldr.w	r3, [lr]
900169f4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
900169f8:	f8cc 3000 	str.w	r3, [ip]
900169fc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90016a00:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016a04:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016a08:	f8de 3000 	ldr.w	r3, [lr]
90016a0c:	4631      	mov	r1, r6
90016a0e:	9a21      	ldr	r2, [sp, #132]	; 0x84
90016a10:	4628      	mov	r0, r5
90016a12:	f8cc 3000 	str.w	r3, [ip]
90016a16:	682b      	ldr	r3, [r5, #0]
90016a18:	9201      	str	r2, [sp, #4]
90016a1a:	9a20      	ldr	r2, [sp, #128]	; 0x80
90016a1c:	f8cd 8008 	str.w	r8, [sp, #8]
90016a20:	9200      	str	r2, [sp, #0]
90016a22:	aa07      	add	r2, sp, #28
90016a24:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90016a28:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
90016a2c:	463b      	mov	r3, r7
90016a2e:	47d8      	blx	fp
90016a30:	46a6      	mov	lr, r4
90016a32:	f10d 0c1c 	add.w	ip, sp, #28
90016a36:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016a3a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016a3e:	f8de 3000 	ldr.w	r3, [lr]
90016a42:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90016a46:	343c      	adds	r4, #60	; 0x3c
90016a48:	f8cc 3000 	str.w	r3, [ip]
90016a4c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90016a50:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016a54:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016a58:	f8de 3000 	ldr.w	r3, [lr]
90016a5c:	f8cc 3000 	str.w	r3, [ip]
90016a60:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90016a64:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90016a66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016a6a:	6823      	ldr	r3, [r4, #0]
90016a6c:	4631      	mov	r1, r6
90016a6e:	4628      	mov	r0, r5
90016a70:	f8cc 3000 	str.w	r3, [ip]
90016a74:	682b      	ldr	r3, [r5, #0]
90016a76:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90016a7a:	9a21      	ldr	r2, [sp, #132]	; 0x84
90016a7c:	f8cd 8008 	str.w	r8, [sp, #8]
90016a80:	9201      	str	r2, [sp, #4]
90016a82:	9a20      	ldr	r2, [sp, #128]	; 0x80
90016a84:	9200      	str	r2, [sp, #0]
90016a86:	aa07      	add	r2, sp, #28
90016a88:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
90016a8a:	463b      	mov	r3, r7
90016a8c:	47a0      	blx	r4
90016a8e:	b017      	add	sp, #92	; 0x5c
90016a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90016a94 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90016a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016a98:	b08d      	sub	sp, #52	; 0x34
90016a9a:	4688      	mov	r8, r1
90016a9c:	f8d3 c000 	ldr.w	ip, [r3]
90016aa0:	9916      	ldr	r1, [sp, #88]	; 0x58
90016aa2:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
90016aa6:	680f      	ldr	r7, [r1, #0]
90016aa8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
90016aac:	eba7 070c 	sub.w	r7, r7, ip
90016ab0:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
90016ab4:	edd3 6a07 	vldr	s13, [r3, #28]
90016ab8:	42bc      	cmp	r4, r7
90016aba:	9918      	ldr	r1, [sp, #96]	; 0x60
90016abc:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
90016ac0:	bfa8      	it	ge
90016ac2:	463c      	movge	r4, r7
90016ac4:	f9b1 9000 	ldrsh.w	r9, [r1]
90016ac8:	f9ba 1000 	ldrsh.w	r1, [sl]
90016acc:	ee07 4a90 	vmov	s15, r4
90016ad0:	eb09 0e0c 	add.w	lr, r9, ip
90016ad4:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
90016ad8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90016adc:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
90016ae0:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
90016ae4:	4571      	cmp	r1, lr
90016ae6:	ee25 4a04 	vmul.f32	s8, s10, s8
90016aea:	ee65 4a24 	vmul.f32	s9, s10, s9
90016aee:	ee25 5a27 	vmul.f32	s10, s10, s15
90016af2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
90016af6:	ee71 0aa4 	vadd.f32	s1, s3, s9
90016afa:	ee32 1a05 	vadd.f32	s2, s4, s10
90016afe:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90016b02:	ee36 0a84 	vadd.f32	s0, s13, s8
90016b06:	ee61 1a87 	vmul.f32	s3, s3, s14
90016b0a:	ee22 2a07 	vmul.f32	s4, s4, s14
90016b0e:	f340 808c 	ble.w	90016c2a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90016b12:	eba1 060e 	sub.w	r6, r1, lr
90016b16:	fb96 f5f4 	sdiv	r5, r6, r4
90016b1a:	ee07 5a10 	vmov	s14, r5
90016b1e:	2d00      	cmp	r5, #0
90016b20:	fb04 6615 	mls	r6, r4, r5, r6
90016b24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90016b28:	eea7 0a04 	vfma.f32	s0, s14, s8
90016b2c:	eee7 0a24 	vfma.f32	s1, s14, s9
90016b30:	eea7 1a05 	vfma.f32	s2, s14, s10
90016b34:	dd12      	ble.n	90016b5c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90016b36:	ee70 6a44 	vsub.f32	s13, s0, s8
90016b3a:	ee70 1ae4 	vsub.f32	s3, s1, s9
90016b3e:	ee31 2a45 	vsub.f32	s4, s2, s10
90016b42:	eef5 6a40 	vcmp.f32	s13, #0.0
90016b46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016b4a:	bf14      	ite	ne
90016b4c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90016b50:	eeb0 7a67 	vmoveq.f32	s14, s15
90016b54:	ee61 1a87 	vmul.f32	s3, s3, s14
90016b58:	ee22 2a07 	vmul.f32	s4, s4, s14
90016b5c:	fb05 f204 	mul.w	r2, r5, r4
90016b60:	1abf      	subs	r7, r7, r2
90016b62:	4494      	add	ip, r2
90016b64:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90016b68:	4411      	add	r1, r2
90016b6a:	eb09 020c 	add.w	r2, r9, ip
90016b6e:	b209      	sxth	r1, r1
90016b70:	443a      	add	r2, r7
90016b72:	428a      	cmp	r2, r1
90016b74:	bfc4      	itt	gt
90016b76:	eba1 0209 	subgt.w	r2, r1, r9
90016b7a:	eba2 070c 	subgt.w	r7, r2, ip
90016b7e:	2f00      	cmp	r7, #0
90016b80:	dd50      	ble.n	90016c24 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90016b82:	fb97 f1f4 	sdiv	r1, r7, r4
90016b86:	fb04 7211 	mls	r2, r4, r1, r7
90016b8a:	b90a      	cbnz	r2, 90016b90 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90016b8c:	3901      	subs	r1, #1
90016b8e:	4622      	mov	r2, r4
90016b90:	eec7 3a80 	vdiv.f32	s7, s15, s0
90016b94:	6840      	ldr	r0, [r0, #4]
90016b96:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
90016b9a:	44b6      	add	lr, r6
90016b9c:	f8d0 a000 	ldr.w	sl, [r0]
90016ba0:	2900      	cmp	r1, #0
90016ba2:	bfcc      	ite	gt
90016ba4:	46a1      	movgt	r9, r4
90016ba6:	4691      	movle	r9, r2
90016ba8:	900b      	str	r0, [sp, #44]	; 0x2c
90016baa:	9817      	ldr	r0, [sp, #92]	; 0x5c
90016bac:	fb04 e505 	mla	r5, r4, r5, lr
90016bb0:	eef0 6a42 	vmov.f32	s13, s4
90016bb4:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
90016bb8:	9008      	str	r0, [sp, #32]
90016bba:	eeb0 7a61 	vmov.f32	s14, s3
90016bbe:	9818      	ldr	r0, [sp, #96]	; 0x60
90016bc0:	695b      	ldr	r3, [r3, #20]
90016bc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90016bc6:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90016bca:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90016bce:	980b      	ldr	r0, [sp, #44]	; 0x2c
90016bd0:	445b      	add	r3, fp
90016bd2:	9307      	str	r3, [sp, #28]
90016bd4:	ee16 3a90 	vmov	r3, s13
90016bd8:	e9cd 8505 	strd	r8, r5, [sp, #20]
90016bdc:	ee60 2aa3 	vmul.f32	s5, s1, s7
90016be0:	ee21 3a23 	vmul.f32	s6, s2, s7
90016be4:	ee72 7ae1 	vsub.f32	s15, s5, s3
90016be8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90016bec:	ee17 7a90 	vmov	r7, s15
90016bf0:	ee73 7a42 	vsub.f32	s15, s6, s4
90016bf4:	fb97 f7f4 	sdiv	r7, r7, r4
90016bf8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90016bfc:	ee17 ca90 	vmov	ip, s15
90016c00:	fb9c fcf4 	sdiv	ip, ip, r4
90016c04:	fb0c 3306 	mla	r3, ip, r6, r3
90016c08:	9302      	str	r3, [sp, #8]
90016c0a:	ee17 3a10 	vmov	r3, s14
90016c0e:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90016c12:	fb07 3706 	mla	r7, r7, r6, r3
90016c16:	eba9 0306 	sub.w	r3, r9, r6
90016c1a:	e9cd 4700 	strd	r4, r7, [sp]
90016c1e:	f8da 4008 	ldr.w	r4, [sl, #8]
90016c22:	47a0      	blx	r4
90016c24:	b00d      	add	sp, #52	; 0x34
90016c26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016c2a:	2500      	movs	r5, #0
90016c2c:	462e      	mov	r6, r5
90016c2e:	e799      	b.n	90016b64 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90016c30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90016c30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016c34:	b0db      	sub	sp, #364	; 0x16c
90016c36:	461d      	mov	r5, r3
90016c38:	4614      	mov	r4, r2
90016c3a:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
90016c3e:	910f      	str	r1, [sp, #60]	; 0x3c
90016c40:	4629      	mov	r1, r5
90016c42:	930a      	str	r3, [sp, #40]	; 0x28
90016c44:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
90016c48:	9009      	str	r0, [sp, #36]	; 0x24
90016c4a:	930b      	str	r3, [sp, #44]	; 0x2c
90016c4c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
90016c50:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
90016c54:	9310      	str	r3, [sp, #64]	; 0x40
90016c56:	6803      	ldr	r3, [r0, #0]
90016c58:	6c5f      	ldr	r7, [r3, #68]	; 0x44
90016c5a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
90016c5e:	47b8      	blx	r7
90016c60:	9b09      	ldr	r3, [sp, #36]	; 0x24
90016c62:	6058      	str	r0, [r3, #4]
90016c64:	2800      	cmp	r0, #0
90016c66:	f000 83a1 	beq.w	900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016c6a:	682b      	ldr	r3, [r5, #0]
90016c6c:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
90016c70:	ed94 7a02 	vldr	s14, [r4, #8]
90016c74:	9314      	str	r3, [sp, #80]	; 0x50
90016c76:	686b      	ldr	r3, [r5, #4]
90016c78:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016c7c:	9315      	str	r3, [sp, #84]	; 0x54
90016c7e:	4bc1      	ldr	r3, [pc, #772]	; (90016f84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90016c80:	7819      	ldrb	r1, [r3, #0]
90016c82:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90016c86:	2900      	cmp	r1, #0
90016c88:	bf16      	itet	ne
90016c8a:	4619      	movne	r1, r3
90016c8c:	4611      	moveq	r1, r2
90016c8e:	4613      	movne	r3, r2
90016c90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016c94:	9116      	str	r1, [sp, #88]	; 0x58
90016c96:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
90016c9a:	f240 8387 	bls.w	900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016c9e:	ed94 7a07 	vldr	s14, [r4, #28]
90016ca2:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016ca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016caa:	f240 837f 	bls.w	900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016cae:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
90016cb2:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016cb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016cba:	f240 8377 	bls.w	900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016cbe:	6822      	ldr	r2, [r4, #0]
90016cc0:	4bb1      	ldr	r3, [pc, #708]	; (90016f88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90016cc2:	429a      	cmp	r2, r3
90016cc4:	f2c0 8372 	blt.w	900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016cc8:	49b0      	ldr	r1, [pc, #704]	; (90016f8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90016cca:	6963      	ldr	r3, [r4, #20]
90016ccc:	428a      	cmp	r2, r1
90016cce:	f300 836d 	bgt.w	900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016cd2:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90016cd6:	48ae      	ldr	r0, [pc, #696]	; (90016f90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90016cd8:	33ff      	adds	r3, #255	; 0xff
90016cda:	4283      	cmp	r3, r0
90016cdc:	f200 8366 	bhi.w	900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016ce0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90016ce2:	4dac      	ldr	r5, [pc, #688]	; (90016f94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90016ce4:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90016ce8:	33ff      	adds	r3, #255	; 0xff
90016cea:	42ab      	cmp	r3, r5
90016cec:	f200 835e 	bhi.w	900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016cf0:	6862      	ldr	r2, [r4, #4]
90016cf2:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
90016cf6:	33ff      	adds	r3, #255	; 0xff
90016cf8:	4283      	cmp	r3, r0
90016cfa:	f200 8357 	bhi.w	900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016cfe:	69a1      	ldr	r1, [r4, #24]
90016d00:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
90016d04:	33ff      	adds	r3, #255	; 0xff
90016d06:	4283      	cmp	r3, r0
90016d08:	f200 8350 	bhi.w	900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016d0c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90016d0e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
90016d12:	30ff      	adds	r0, #255	; 0xff
90016d14:	42a8      	cmp	r0, r5
90016d16:	f200 8349 	bhi.w	900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016d1a:	428a      	cmp	r2, r1
90016d1c:	f280 8110 	bge.w	90016f40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90016d20:	429a      	cmp	r2, r3
90016d22:	f300 8119 	bgt.w	90016f58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90016d26:	4299      	cmp	r1, r3
90016d28:	f280 811d 	bge.w	90016f66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90016d2c:	2502      	movs	r5, #2
90016d2e:	2701      	movs	r7, #1
90016d30:	46a9      	mov	r9, r5
90016d32:	46b8      	mov	r8, r7
90016d34:	f04f 0a00 	mov.w	sl, #0
90016d38:	4621      	mov	r1, r4
90016d3a:	a849      	add	r0, sp, #292	; 0x124
90016d3c:	f003 fe7c 	bl	9001aa38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90016d40:	4622      	mov	r2, r4
90016d42:	4653      	mov	r3, sl
90016d44:	a949      	add	r1, sp, #292	; 0x124
90016d46:	f8cd 9000 	str.w	r9, [sp]
90016d4a:	a819      	add	r0, sp, #100	; 0x64
90016d4c:	f003 ffa4 	bl	9001ac98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016d50:	4622      	mov	r2, r4
90016d52:	4653      	mov	r3, sl
90016d54:	a949      	add	r1, sp, #292	; 0x124
90016d56:	f8cd 8000 	str.w	r8, [sp]
90016d5a:	a829      	add	r0, sp, #164	; 0xa4
90016d5c:	f003 ff9c 	bl	9001ac98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016d60:	4643      	mov	r3, r8
90016d62:	4622      	mov	r2, r4
90016d64:	a949      	add	r1, sp, #292	; 0x124
90016d66:	f8cd 9000 	str.w	r9, [sp]
90016d6a:	a839      	add	r0, sp, #228	; 0xe4
90016d6c:	f003 ff94 	bl	9001ac98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016d70:	42af      	cmp	r7, r5
90016d72:	af12      	add	r7, sp, #72	; 0x48
90016d74:	bfb7      	itett	lt
90016d76:	2300      	movlt	r3, #0
90016d78:	2301      	movge	r3, #1
90016d7a:	ad29      	addlt	r5, sp, #164	; 0xa4
90016d7c:	ac19      	addlt	r4, sp, #100	; 0x64
90016d7e:	bfb1      	iteee	lt
90016d80:	930e      	strlt	r3, [sp, #56]	; 0x38
90016d82:	ad19      	addge	r5, sp, #100	; 0x64
90016d84:	930e      	strge	r3, [sp, #56]	; 0x38
90016d86:	ac29      	addge	r4, sp, #164	; 0xa4
90016d88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90016d8a:	e893 0003 	ldmia.w	r3, {r0, r1}
90016d8e:	e887 0003 	stmia.w	r7, {r0, r1}
90016d92:	b928      	cbnz	r0, 90016da0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90016d94:	4b80      	ldr	r3, [pc, #512]	; (90016f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90016d96:	6818      	ldr	r0, [r3, #0]
90016d98:	6803      	ldr	r3, [r0, #0]
90016d9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90016d9c:	4798      	blx	r3
90016d9e:	6038      	str	r0, [r7, #0]
90016da0:	9b64      	ldr	r3, [sp, #400]	; 0x190
90016da2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90016da6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90016daa:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
90016dac:	930c      	str	r3, [sp, #48]	; 0x30
90016dae:	990c      	ldr	r1, [sp, #48]	; 0x30
90016db0:	6963      	ldr	r3, [r4, #20]
90016db2:	440b      	add	r3, r1
90016db4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90016db8:	4408      	add	r0, r1
90016dba:	b200      	sxth	r0, r0
90016dbc:	4283      	cmp	r3, r0
90016dbe:	900d      	str	r0, [sp, #52]	; 0x34
90016dc0:	f280 80dd 	bge.w	90016f7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90016dc4:	428b      	cmp	r3, r1
90016dc6:	da08      	bge.n	90016dda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016dc8:	2a00      	cmp	r2, #0
90016dca:	dd06      	ble.n	90016dda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016dcc:	1acb      	subs	r3, r1, r3
90016dce:	429a      	cmp	r2, r3
90016dd0:	f2c0 80e4 	blt.w	90016f9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90016dd4:	2b00      	cmp	r3, #0
90016dd6:	f300 80e2 	bgt.w	90016f9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90016dda:	6967      	ldr	r7, [r4, #20]
90016ddc:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90016de0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90016de2:	443b      	add	r3, r7
90016de4:	461f      	mov	r7, r3
90016de6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90016de8:	1bdf      	subs	r7, r3, r7
90016dea:	4297      	cmp	r7, r2
90016dec:	bfa8      	it	ge
90016dee:	4617      	movge	r7, r2
90016df0:	2f00      	cmp	r7, #0
90016df2:	f340 8166 	ble.w	900170c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90016df6:	9b64      	ldr	r3, [sp, #400]	; 0x190
90016df8:	6829      	ldr	r1, [r5, #0]
90016dfa:	f9b3 2000 	ldrsh.w	r2, [r3]
90016dfe:	f9bb 3000 	ldrsh.w	r3, [fp]
90016e02:	4411      	add	r1, r2
90016e04:	6820      	ldr	r0, [r4, #0]
90016e06:	4299      	cmp	r1, r3
90016e08:	dd1a      	ble.n	90016e40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90016e0a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90016e0e:	4402      	add	r2, r0
90016e10:	440b      	add	r3, r1
90016e12:	b21b      	sxth	r3, r3
90016e14:	429a      	cmp	r2, r3
90016e16:	dc13      	bgt.n	90016e40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90016e18:	9a10      	ldr	r2, [sp, #64]	; 0x40
90016e1a:	a912      	add	r1, sp, #72	; 0x48
90016e1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90016e1e:	9809      	ldr	r0, [sp, #36]	; 0x24
90016e20:	681b      	ldr	r3, [r3, #0]
90016e22:	9206      	str	r2, [sp, #24]
90016e24:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90016e26:	9500      	str	r5, [sp, #0]
90016e28:	9205      	str	r2, [sp, #20]
90016e2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90016e2c:	e9cd b203 	strd	fp, r2, [sp, #12]
90016e30:	9a64      	ldr	r2, [sp, #400]	; 0x190
90016e32:	e9cd 8201 	strd	r8, r2, [sp, #4]
90016e36:	aa49      	add	r2, sp, #292	; 0x124
90016e38:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90016e3c:	4623      	mov	r3, r4
90016e3e:	47c8      	blx	r9
90016e40:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90016e44:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90016e48:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90016e4c:	ee37 7a27 	vadd.f32	s14, s14, s15
90016e50:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90016e54:	68a1      	ldr	r1, [r4, #8]
90016e56:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016e5a:	ed94 6a08 	vldr	s12, [r4, #32]
90016e5e:	edd4 6a07 	vldr	s13, [r4, #28]
90016e62:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90016e66:	ee76 6a86 	vadd.f32	s13, s13, s12
90016e6a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90016e6e:	e9d4 2300 	ldrd	r2, r3, [r4]
90016e72:	edc4 6a07 	vstr	s13, [r4, #28]
90016e76:	441a      	add	r2, r3
90016e78:	6963      	ldr	r3, [r4, #20]
90016e7a:	3301      	adds	r3, #1
90016e7c:	6022      	str	r2, [r4, #0]
90016e7e:	6163      	str	r3, [r4, #20]
90016e80:	69a3      	ldr	r3, [r4, #24]
90016e82:	3b01      	subs	r3, #1
90016e84:	61a3      	str	r3, [r4, #24]
90016e86:	6923      	ldr	r3, [r4, #16]
90016e88:	440b      	add	r3, r1
90016e8a:	68e1      	ldr	r1, [r4, #12]
90016e8c:	428b      	cmp	r3, r1
90016e8e:	6123      	str	r3, [r4, #16]
90016e90:	db15      	blt.n	90016ebe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90016e92:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90016e96:	3201      	adds	r2, #1
90016e98:	1a5b      	subs	r3, r3, r1
90016e9a:	ee76 6a26 	vadd.f32	s13, s12, s13
90016e9e:	6022      	str	r2, [r4, #0]
90016ea0:	6123      	str	r3, [r4, #16]
90016ea2:	edc4 6a07 	vstr	s13, [r4, #28]
90016ea6:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90016eaa:	ee36 7a87 	vadd.f32	s14, s13, s14
90016eae:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90016eb2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90016eb6:	ee77 7a27 	vadd.f32	s15, s14, s15
90016eba:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90016ebe:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90016ec2:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90016ec6:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90016eca:	ee37 7a27 	vadd.f32	s14, s14, s15
90016ece:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90016ed2:	68a9      	ldr	r1, [r5, #8]
90016ed4:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016ed8:	ed95 6a08 	vldr	s12, [r5, #32]
90016edc:	edd5 6a07 	vldr	s13, [r5, #28]
90016ee0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90016ee4:	ee76 6a86 	vadd.f32	s13, s13, s12
90016ee8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90016eec:	e9d5 2300 	ldrd	r2, r3, [r5]
90016ef0:	edc5 6a07 	vstr	s13, [r5, #28]
90016ef4:	441a      	add	r2, r3
90016ef6:	696b      	ldr	r3, [r5, #20]
90016ef8:	3301      	adds	r3, #1
90016efa:	602a      	str	r2, [r5, #0]
90016efc:	616b      	str	r3, [r5, #20]
90016efe:	69ab      	ldr	r3, [r5, #24]
90016f00:	3b01      	subs	r3, #1
90016f02:	61ab      	str	r3, [r5, #24]
90016f04:	692b      	ldr	r3, [r5, #16]
90016f06:	440b      	add	r3, r1
90016f08:	68e9      	ldr	r1, [r5, #12]
90016f0a:	428b      	cmp	r3, r1
90016f0c:	612b      	str	r3, [r5, #16]
90016f0e:	db15      	blt.n	90016f3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90016f10:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90016f14:	3201      	adds	r2, #1
90016f16:	1a5b      	subs	r3, r3, r1
90016f18:	ee76 6a26 	vadd.f32	s13, s12, s13
90016f1c:	602a      	str	r2, [r5, #0]
90016f1e:	612b      	str	r3, [r5, #16]
90016f20:	edc5 6a07 	vstr	s13, [r5, #28]
90016f24:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90016f28:	ee36 7a87 	vadd.f32	s14, s13, s14
90016f2c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90016f30:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90016f34:	ee77 7a27 	vadd.f32	s15, s14, s15
90016f38:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90016f3c:	3f01      	subs	r7, #1
90016f3e:	e757      	b.n	90016df0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90016f40:	4299      	cmp	r1, r3
90016f42:	dc13      	bgt.n	90016f6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90016f44:	429a      	cmp	r2, r3
90016f46:	da14      	bge.n	90016f72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90016f48:	2502      	movs	r5, #2
90016f4a:	2703      	movs	r7, #3
90016f4c:	f04f 0800 	mov.w	r8, #0
90016f50:	46a9      	mov	r9, r5
90016f52:	f04f 0a01 	mov.w	sl, #1
90016f56:	e6ef      	b.n	90016d38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90016f58:	2501      	movs	r5, #1
90016f5a:	2700      	movs	r7, #0
90016f5c:	46a9      	mov	r9, r5
90016f5e:	46b8      	mov	r8, r7
90016f60:	f04f 0a02 	mov.w	sl, #2
90016f64:	e6e8      	b.n	90016d38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90016f66:	2501      	movs	r5, #1
90016f68:	2702      	movs	r7, #2
90016f6a:	e6e1      	b.n	90016d30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90016f6c:	2500      	movs	r5, #0
90016f6e:	2701      	movs	r7, #1
90016f70:	e7f4      	b.n	90016f5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90016f72:	2702      	movs	r7, #2
90016f74:	2503      	movs	r5, #3
90016f76:	f04f 0900 	mov.w	r9, #0
90016f7a:	46b8      	mov	r8, r7
90016f7c:	e7e9      	b.n	90016f52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90016f7e:	4613      	mov	r3, r2
90016f80:	e728      	b.n	90016dd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90016f82:	bf00      	nop
90016f84:	24039ac4 	.word	0x24039ac4
90016f88:	fffd8f01 	.word	0xfffd8f01
90016f8c:	00027100 	.word	0x00027100
90016f90:	0004e1ff 	.word	0x0004e1ff
90016f94:	0004e1fe 	.word	0x0004e1fe
90016f98:	24039acc 	.word	0x24039acc
90016f9c:	4613      	mov	r3, r2
90016f9e:	992b      	ldr	r1, [sp, #172]	; 0xac
90016fa0:	469e      	mov	lr, r3
90016fa2:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
90016fa4:	469c      	mov	ip, r3
90016fa6:	9111      	str	r1, [sp, #68]	; 0x44
90016fa8:	f04f 0900 	mov.w	r9, #0
90016fac:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
90016fb0:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
90016fb4:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
90016fb8:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
90016fbc:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
90016fc0:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
90016fc4:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
90016fc8:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
90016fcc:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
90016fd0:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
90016fd4:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
90016fd8:	f1bc 0f00 	cmp.w	ip, #0
90016fdc:	d147      	bne.n	9001706e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90016fde:	eb03 0c07 	add.w	ip, r3, r7
90016fe2:	1ad7      	subs	r7, r2, r3
90016fe4:	f1b9 0f00 	cmp.w	r9, #0
90016fe8:	d009      	beq.n	90016ffe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90016fea:	9029      	str	r0, [sp, #164]	; 0xa4
90016fec:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
90016ff0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
90016ff4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
90016ff8:	912d      	str	r1, [sp, #180]	; 0xb4
90016ffa:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
90016ffe:	991b      	ldr	r1, [sp, #108]	; 0x6c
90017000:	f04f 0800 	mov.w	r8, #0
90017004:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90017008:	9111      	str	r1, [sp, #68]	; 0x44
9001700a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
9001700e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90017012:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90017016:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
9001701a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
9001701e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90017022:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90017026:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
9001702a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
9001702e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90017032:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90017036:	f1be 0f00 	cmp.w	lr, #0
9001703a:	d031      	beq.n	900170a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
9001703c:	9e11      	ldr	r6, [sp, #68]	; 0x44
9001703e:	4450      	add	r0, sl
90017040:	ee76 6aa4 	vadd.f32	s13, s13, s9
90017044:	4431      	add	r1, r6
90017046:	ee37 7a04 	vadd.f32	s14, s14, s8
9001704a:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001704e:	4549      	cmp	r1, r9
90017050:	db08      	blt.n	90017064 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90017052:	ee77 7a85 	vadd.f32	s15, s15, s10
90017056:	3001      	adds	r0, #1
90017058:	ee76 6aa5 	vadd.f32	s13, s13, s11
9001705c:	eba1 0109 	sub.w	r1, r1, r9
90017060:	ee37 7a06 	vadd.f32	s14, s14, s12
90017064:	f10e 3eff 	add.w	lr, lr, #4294967295
90017068:	f04f 0801 	mov.w	r8, #1
9001706c:	e7e3      	b.n	90017036 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
9001706e:	9e11      	ldr	r6, [sp, #68]	; 0x44
90017070:	4450      	add	r0, sl
90017072:	ee37 7a24 	vadd.f32	s14, s14, s9
90017076:	4431      	add	r1, r6
90017078:	ee77 7a84 	vadd.f32	s15, s15, s8
9001707c:	ee76 6aa3 	vadd.f32	s13, s13, s7
90017080:	4541      	cmp	r1, r8
90017082:	db08      	blt.n	90017096 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90017084:	ee76 6a85 	vadd.f32	s13, s13, s10
90017088:	3001      	adds	r0, #1
9001708a:	ee37 7a25 	vadd.f32	s14, s14, s11
9001708e:	eba1 0108 	sub.w	r1, r1, r8
90017092:	ee77 7a86 	vadd.f32	s15, s15, s12
90017096:	f10c 3cff 	add.w	ip, ip, #4294967295
9001709a:	f04f 0901 	mov.w	r9, #1
9001709e:	e79b      	b.n	90016fd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
900170a0:	449c      	add	ip, r3
900170a2:	1aff      	subs	r7, r7, r3
900170a4:	f1b8 0f00 	cmp.w	r8, #0
900170a8:	d009      	beq.n	900170be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
900170aa:	9019      	str	r0, [sp, #100]	; 0x64
900170ac:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
900170b0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
900170b4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
900170b8:	911d      	str	r1, [sp, #116]	; 0x74
900170ba:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
900170be:	1ad2      	subs	r2, r2, r3
900170c0:	e68b      	b.n	90016dda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900170c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900170c4:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
900170c6:	2b00      	cmp	r3, #0
900170c8:	f000 80d1 	beq.w	9001726e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
900170cc:	ad19      	add	r5, sp, #100	; 0x64
900170ce:	ac39      	add	r4, sp, #228	; 0xe4
900170d0:	9b64      	ldr	r3, [sp, #400]	; 0x190
900170d2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900170d6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900170da:	930c      	str	r3, [sp, #48]	; 0x30
900170dc:	990c      	ldr	r1, [sp, #48]	; 0x30
900170de:	6963      	ldr	r3, [r4, #20]
900170e0:	440b      	add	r3, r1
900170e2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900170e6:	4408      	add	r0, r1
900170e8:	b200      	sxth	r0, r0
900170ea:	4283      	cmp	r3, r0
900170ec:	900d      	str	r0, [sp, #52]	; 0x34
900170ee:	f280 80c1 	bge.w	90017274 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
900170f2:	428b      	cmp	r3, r1
900170f4:	da08      	bge.n	90017108 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900170f6:	2a00      	cmp	r2, #0
900170f8:	dd06      	ble.n	90017108 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900170fa:	1acb      	subs	r3, r1, r3
900170fc:	429a      	cmp	r2, r3
900170fe:	f2c0 80bb 	blt.w	90017278 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90017102:	2b00      	cmp	r3, #0
90017104:	f300 80b9 	bgt.w	9001727a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90017108:	6967      	ldr	r7, [r4, #20]
9001710a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
9001710e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90017110:	443b      	add	r3, r7
90017112:	461f      	mov	r7, r3
90017114:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017116:	1bdf      	subs	r7, r3, r7
90017118:	4297      	cmp	r7, r2
9001711a:	bfa8      	it	ge
9001711c:	4617      	movge	r7, r2
9001711e:	2f00      	cmp	r7, #0
90017120:	f340 813c 	ble.w	9001739c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90017124:	9b64      	ldr	r3, [sp, #400]	; 0x190
90017126:	6829      	ldr	r1, [r5, #0]
90017128:	f9b3 2000 	ldrsh.w	r2, [r3]
9001712c:	f9bb 3000 	ldrsh.w	r3, [fp]
90017130:	4411      	add	r1, r2
90017132:	6820      	ldr	r0, [r4, #0]
90017134:	4299      	cmp	r1, r3
90017136:	dd1a      	ble.n	9001716e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90017138:	f8bb 1004 	ldrh.w	r1, [fp, #4]
9001713c:	4402      	add	r2, r0
9001713e:	440b      	add	r3, r1
90017140:	b21b      	sxth	r3, r3
90017142:	429a      	cmp	r2, r3
90017144:	dc13      	bgt.n	9001716e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90017146:	9a10      	ldr	r2, [sp, #64]	; 0x40
90017148:	a912      	add	r1, sp, #72	; 0x48
9001714a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001714c:	9809      	ldr	r0, [sp, #36]	; 0x24
9001714e:	681b      	ldr	r3, [r3, #0]
90017150:	9206      	str	r2, [sp, #24]
90017152:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90017154:	9500      	str	r5, [sp, #0]
90017156:	9205      	str	r2, [sp, #20]
90017158:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001715a:	e9cd b203 	strd	fp, r2, [sp, #12]
9001715e:	9a64      	ldr	r2, [sp, #400]	; 0x190
90017160:	e9cd 8201 	strd	r8, r2, [sp, #4]
90017164:	aa49      	add	r2, sp, #292	; 0x124
90017166:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
9001716a:	4623      	mov	r3, r4
9001716c:	47c8      	blx	r9
9001716e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90017172:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90017176:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
9001717a:	ee37 7a27 	vadd.f32	s14, s14, s15
9001717e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90017182:	68a1      	ldr	r1, [r4, #8]
90017184:	ee77 7aa6 	vadd.f32	s15, s15, s13
90017188:	ed94 6a08 	vldr	s12, [r4, #32]
9001718c:	edd4 6a07 	vldr	s13, [r4, #28]
90017190:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90017194:	ee76 6a86 	vadd.f32	s13, s13, s12
90017198:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
9001719c:	e9d4 2300 	ldrd	r2, r3, [r4]
900171a0:	edc4 6a07 	vstr	s13, [r4, #28]
900171a4:	441a      	add	r2, r3
900171a6:	6963      	ldr	r3, [r4, #20]
900171a8:	3301      	adds	r3, #1
900171aa:	6022      	str	r2, [r4, #0]
900171ac:	6163      	str	r3, [r4, #20]
900171ae:	69a3      	ldr	r3, [r4, #24]
900171b0:	3b01      	subs	r3, #1
900171b2:	61a3      	str	r3, [r4, #24]
900171b4:	6923      	ldr	r3, [r4, #16]
900171b6:	440b      	add	r3, r1
900171b8:	68e1      	ldr	r1, [r4, #12]
900171ba:	428b      	cmp	r3, r1
900171bc:	6123      	str	r3, [r4, #16]
900171be:	db15      	blt.n	900171ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
900171c0:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
900171c4:	3201      	adds	r2, #1
900171c6:	1a5b      	subs	r3, r3, r1
900171c8:	ee76 6a26 	vadd.f32	s13, s12, s13
900171cc:	6022      	str	r2, [r4, #0]
900171ce:	6123      	str	r3, [r4, #16]
900171d0:	edc4 6a07 	vstr	s13, [r4, #28]
900171d4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
900171d8:	ee36 7a87 	vadd.f32	s14, s13, s14
900171dc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
900171e0:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
900171e4:	ee77 7a27 	vadd.f32	s15, s14, s15
900171e8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
900171ec:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
900171f0:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
900171f4:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
900171f8:	ee37 7a27 	vadd.f32	s14, s14, s15
900171fc:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90017200:	68a9      	ldr	r1, [r5, #8]
90017202:	ee77 7aa6 	vadd.f32	s15, s15, s13
90017206:	ed95 6a08 	vldr	s12, [r5, #32]
9001720a:	edd5 6a07 	vldr	s13, [r5, #28]
9001720e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90017212:	ee76 6a86 	vadd.f32	s13, s13, s12
90017216:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
9001721a:	e9d5 2300 	ldrd	r2, r3, [r5]
9001721e:	edc5 6a07 	vstr	s13, [r5, #28]
90017222:	441a      	add	r2, r3
90017224:	696b      	ldr	r3, [r5, #20]
90017226:	3301      	adds	r3, #1
90017228:	602a      	str	r2, [r5, #0]
9001722a:	616b      	str	r3, [r5, #20]
9001722c:	69ab      	ldr	r3, [r5, #24]
9001722e:	3b01      	subs	r3, #1
90017230:	61ab      	str	r3, [r5, #24]
90017232:	692b      	ldr	r3, [r5, #16]
90017234:	440b      	add	r3, r1
90017236:	68e9      	ldr	r1, [r5, #12]
90017238:	428b      	cmp	r3, r1
9001723a:	612b      	str	r3, [r5, #16]
9001723c:	db15      	blt.n	9001726a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
9001723e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90017242:	3201      	adds	r2, #1
90017244:	1a5b      	subs	r3, r3, r1
90017246:	ee76 6a26 	vadd.f32	s13, s12, s13
9001724a:	602a      	str	r2, [r5, #0]
9001724c:	612b      	str	r3, [r5, #16]
9001724e:	edc5 6a07 	vstr	s13, [r5, #28]
90017252:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90017256:	ee36 7a87 	vadd.f32	s14, s13, s14
9001725a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
9001725e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90017262:	ee77 7a27 	vadd.f32	s15, s14, s15
90017266:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
9001726a:	3f01      	subs	r7, #1
9001726c:	e757      	b.n	9001711e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
9001726e:	ad39      	add	r5, sp, #228	; 0xe4
90017270:	ac19      	add	r4, sp, #100	; 0x64
90017272:	e72d      	b.n	900170d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90017274:	4613      	mov	r3, r2
90017276:	e744      	b.n	90017102 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90017278:	4613      	mov	r3, r2
9001727a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
9001727c:	469e      	mov	lr, r3
9001727e:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
90017282:	461f      	mov	r7, r3
90017284:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
90017288:	f04f 0900 	mov.w	r9, #0
9001728c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
90017290:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
90017294:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
90017298:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
9001729c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
900172a0:	993d      	ldr	r1, [sp, #244]	; 0xf4
900172a2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
900172a6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
900172aa:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
900172ae:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
900172b2:	960e      	str	r6, [sp, #56]	; 0x38
900172b4:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
900172b8:	2f00      	cmp	r7, #0
900172ba:	d146      	bne.n	9001734a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
900172bc:	449c      	add	ip, r3
900172be:	1ad7      	subs	r7, r2, r3
900172c0:	f1b9 0f00 	cmp.w	r9, #0
900172c4:	d009      	beq.n	900172da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
900172c6:	9039      	str	r0, [sp, #228]	; 0xe4
900172c8:	913d      	str	r1, [sp, #244]	; 0xf4
900172ca:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
900172ce:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
900172d2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
900172d6:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
900172da:	991b      	ldr	r1, [sp, #108]	; 0x6c
900172dc:	f04f 0800 	mov.w	r8, #0
900172e0:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
900172e4:	910e      	str	r1, [sp, #56]	; 0x38
900172e6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
900172ea:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
900172ee:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
900172f2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
900172f6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
900172fa:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
900172fe:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90017302:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90017306:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
9001730a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
9001730e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90017312:	f1be 0f00 	cmp.w	lr, #0
90017316:	d030      	beq.n	9001737a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90017318:	9e0e      	ldr	r6, [sp, #56]	; 0x38
9001731a:	4450      	add	r0, sl
9001731c:	ee76 6aa4 	vadd.f32	s13, s13, s9
90017320:	4431      	add	r1, r6
90017322:	ee37 7a04 	vadd.f32	s14, s14, s8
90017326:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001732a:	4549      	cmp	r1, r9
9001732c:	db08      	blt.n	90017340 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
9001732e:	ee77 7a85 	vadd.f32	s15, s15, s10
90017332:	3001      	adds	r0, #1
90017334:	ee76 6aa5 	vadd.f32	s13, s13, s11
90017338:	eba1 0109 	sub.w	r1, r1, r9
9001733c:	ee37 7a06 	vadd.f32	s14, s14, s12
90017340:	f10e 3eff 	add.w	lr, lr, #4294967295
90017344:	f04f 0801 	mov.w	r8, #1
90017348:	e7e3      	b.n	90017312 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
9001734a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
9001734c:	4450      	add	r0, sl
9001734e:	ee37 7a24 	vadd.f32	s14, s14, s9
90017352:	4431      	add	r1, r6
90017354:	ee77 7a84 	vadd.f32	s15, s15, s8
90017358:	ee76 6aa3 	vadd.f32	s13, s13, s7
9001735c:	4541      	cmp	r1, r8
9001735e:	db08      	blt.n	90017372 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90017360:	ee76 6a85 	vadd.f32	s13, s13, s10
90017364:	3001      	adds	r0, #1
90017366:	ee37 7a25 	vadd.f32	s14, s14, s11
9001736a:	eba1 0108 	sub.w	r1, r1, r8
9001736e:	ee77 7a86 	vadd.f32	s15, s15, s12
90017372:	3f01      	subs	r7, #1
90017374:	f04f 0901 	mov.w	r9, #1
90017378:	e79e      	b.n	900172b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
9001737a:	449c      	add	ip, r3
9001737c:	1aff      	subs	r7, r7, r3
9001737e:	f1b8 0f00 	cmp.w	r8, #0
90017382:	d009      	beq.n	90017398 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90017384:	9019      	str	r0, [sp, #100]	; 0x64
90017386:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
9001738a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
9001738e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90017392:	911d      	str	r1, [sp, #116]	; 0x74
90017394:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90017398:	1ad2      	subs	r2, r2, r3
9001739a:	e6b5      	b.n	90017108 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9001739c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001739e:	681b      	ldr	r3, [r3, #0]
900173a0:	b923      	cbnz	r3, 900173ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900173a2:	4b04      	ldr	r3, [pc, #16]	; (900173b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
900173a4:	6818      	ldr	r0, [r3, #0]
900173a6:	6803      	ldr	r3, [r0, #0]
900173a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900173aa:	4798      	blx	r3
900173ac:	b05b      	add	sp, #364	; 0x16c
900173ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900173b2:	bf00      	nop
900173b4:	24039acc 	.word	0x24039acc

900173b8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
900173b8:	b570      	push	{r4, r5, r6, lr}
900173ba:	4604      	mov	r4, r0
900173bc:	2500      	movs	r5, #0
900173be:	9805      	ldr	r0, [sp, #20]
900173c0:	f89d 601c 	ldrb.w	r6, [sp, #28]
900173c4:	6061      	str	r1, [r4, #4]
900173c6:	8263      	strh	r3, [r4, #18]
900173c8:	f89d 1010 	ldrb.w	r1, [sp, #16]
900173cc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900173d0:	8025      	strh	r5, [r4, #0]
900173d2:	7221      	strb	r1, [r4, #8]
900173d4:	7266      	strb	r6, [r4, #9]
900173d6:	60e0      	str	r0, [r4, #12]
900173d8:	8222      	strh	r2, [r4, #16]
900173da:	82a3      	strh	r3, [r4, #20]
900173dc:	82e5      	strh	r5, [r4, #22]
900173de:	8325      	strh	r5, [r4, #24]
900173e0:	8365      	strh	r5, [r4, #26]
900173e2:	83a5      	strh	r5, [r4, #28]
900173e4:	83e5      	strh	r5, [r4, #30]
900173e6:	8425      	strh	r5, [r4, #32]
900173e8:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
900173ec:	b32e      	cbz	r6, 9001743a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900173ee:	6803      	ldr	r3, [r0, #0]
900173f0:	695b      	ldr	r3, [r3, #20]
900173f2:	4798      	blx	r3
900173f4:	4606      	mov	r6, r0
900173f6:	b300      	cbz	r0, 9001743a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900173f8:	68e0      	ldr	r0, [r4, #12]
900173fa:	4631      	mov	r1, r6
900173fc:	6803      	ldr	r3, [r0, #0]
900173fe:	68db      	ldr	r3, [r3, #12]
90017400:	4798      	blx	r3
90017402:	4605      	mov	r5, r0
90017404:	b1c8      	cbz	r0, 9001743a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90017406:	7b43      	ldrb	r3, [r0, #13]
90017408:	7a82      	ldrb	r2, [r0, #10]
9001740a:	005b      	lsls	r3, r3, #1
9001740c:	f403 7380 	and.w	r3, r3, #256	; 0x100
90017410:	4313      	orrs	r3, r2
90017412:	8423      	strh	r3, [r4, #32]
90017414:	7a63      	ldrb	r3, [r4, #9]
90017416:	2b06      	cmp	r3, #6
90017418:	d10f      	bne.n	9001743a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001741a:	68e0      	ldr	r0, [r4, #12]
9001741c:	462a      	mov	r2, r5
9001741e:	4631      	mov	r1, r6
90017420:	6803      	ldr	r3, [r0, #0]
90017422:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017424:	4798      	blx	r3
90017426:	7b6b      	ldrb	r3, [r5, #13]
90017428:	005b      	lsls	r3, r3, #1
9001742a:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001742e:	7aab      	ldrb	r3, [r5, #10]
90017430:	4313      	orrs	r3, r2
90017432:	4418      	add	r0, r3
90017434:	8c23      	ldrh	r3, [r4, #32]
90017436:	4418      	add	r0, r3
90017438:	8420      	strh	r0, [r4, #32]
9001743a:	4620      	mov	r0, r4
9001743c:	bd70      	pop	{r4, r5, r6, pc}

9001743e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
9001743e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017442:	2400      	movs	r4, #0
90017444:	b085      	sub	sp, #20
90017446:	4681      	mov	r9, r0
90017448:	4688      	mov	r8, r1
9001744a:	4692      	mov	sl, r2
9001744c:	469b      	mov	fp, r3
9001744e:	4627      	mov	r7, r4
90017450:	4625      	mov	r5, r4
90017452:	4626      	mov	r6, r4
90017454:	4554      	cmp	r4, sl
90017456:	da2a      	bge.n	900174ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90017458:	2300      	movs	r3, #0
9001745a:	9303      	str	r3, [sp, #12]
9001745c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017460:	429d      	cmp	r5, r3
90017462:	d004      	beq.n	9001746e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90017464:	f242 030b 	movw	r3, #8203	; 0x200b
90017468:	429d      	cmp	r5, r3
9001746a:	bf18      	it	ne
9001746c:	462f      	movne	r7, r5
9001746e:	ab03      	add	r3, sp, #12
90017470:	4642      	mov	r2, r8
90017472:	4659      	mov	r1, fp
90017474:	4648      	mov	r0, r9
90017476:	f003 f8f5 	bl	9001a664 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001747a:	4605      	mov	r5, r0
9001747c:	b1b8      	cbz	r0, 900174ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001747e:	280a      	cmp	r0, #10
90017480:	d015      	beq.n	900174ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90017482:	9a03      	ldr	r2, [sp, #12]
90017484:	b18a      	cbz	r2, 900174aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90017486:	7b50      	ldrb	r0, [r2, #13]
90017488:	4639      	mov	r1, r7
9001748a:	7a93      	ldrb	r3, [r2, #10]
9001748c:	0040      	lsls	r0, r0, #1
9001748e:	8895      	ldrh	r5, [r2, #4]
90017490:	f400 7080 	and.w	r0, r0, #256	; 0x100
90017494:	4303      	orrs	r3, r0
90017496:	4640      	mov	r0, r8
90017498:	9301      	str	r3, [sp, #4]
9001749a:	f8d8 3000 	ldr.w	r3, [r8]
9001749e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900174a0:	4798      	blx	r3
900174a2:	9b01      	ldr	r3, [sp, #4]
900174a4:	4418      	add	r0, r3
900174a6:	4406      	add	r6, r0
900174a8:	b2b6      	uxth	r6, r6
900174aa:	3401      	adds	r4, #1
900174ac:	e7d2      	b.n	90017454 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900174ae:	4630      	mov	r0, r6
900174b0:	b005      	add	sp, #20
900174b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900174b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
900174b6:	2a02      	cmp	r2, #2
900174b8:	b530      	push	{r4, r5, lr}
900174ba:	d011      	beq.n	900174e0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
900174bc:	2a03      	cmp	r2, #3
900174be:	d01c      	beq.n	900174fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
900174c0:	2a01      	cmp	r2, #1
900174c2:	d10c      	bne.n	900174de <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900174c4:	888b      	ldrh	r3, [r1, #4]
900174c6:	8801      	ldrh	r1, [r0, #0]
900174c8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
900174cc:	1a5b      	subs	r3, r3, r1
900174ce:	8844      	ldrh	r4, [r0, #2]
900174d0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900174d4:	1a9b      	subs	r3, r3, r2
900174d6:	8004      	strh	r4, [r0, #0]
900174d8:	8081      	strh	r1, [r0, #4]
900174da:	8043      	strh	r3, [r0, #2]
900174dc:	80c2      	strh	r2, [r0, #6]
900174de:	bd30      	pop	{r4, r5, pc}
900174e0:	88cb      	ldrh	r3, [r1, #6]
900174e2:	8842      	ldrh	r2, [r0, #2]
900174e4:	1a9b      	subs	r3, r3, r2
900174e6:	88c2      	ldrh	r2, [r0, #6]
900174e8:	1a9b      	subs	r3, r3, r2
900174ea:	888a      	ldrh	r2, [r1, #4]
900174ec:	8801      	ldrh	r1, [r0, #0]
900174ee:	8043      	strh	r3, [r0, #2]
900174f0:	1a52      	subs	r2, r2, r1
900174f2:	8881      	ldrh	r1, [r0, #4]
900174f4:	1a52      	subs	r2, r2, r1
900174f6:	8002      	strh	r2, [r0, #0]
900174f8:	e7f1      	b.n	900174de <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900174fa:	88cb      	ldrh	r3, [r1, #6]
900174fc:	8841      	ldrh	r1, [r0, #2]
900174fe:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90017502:	1a5b      	subs	r3, r3, r1
90017504:	f9b0 5000 	ldrsh.w	r5, [r0]
90017508:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
9001750c:	1a9b      	subs	r3, r3, r2
9001750e:	8045      	strh	r5, [r0, #2]
90017510:	8082      	strh	r2, [r0, #4]
90017512:	8003      	strh	r3, [r0, #0]
90017514:	80c4      	strh	r4, [r0, #6]
90017516:	e7e2      	b.n	900174de <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90017518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90017518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001751c:	b09f      	sub	sp, #124	; 0x7c
9001751e:	9116      	str	r1, [sp, #88]	; 0x58
90017520:	9317      	str	r3, [sp, #92]	; 0x5c
90017522:	9929      	ldr	r1, [sp, #164]	; 0xa4
90017524:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90017526:	8809      	ldrh	r1, [r1, #0]
90017528:	889b      	ldrh	r3, [r3, #4]
9001752a:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
9001752e:	440b      	add	r3, r1
90017530:	9212      	str	r2, [sp, #72]	; 0x48
90017532:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
90017536:	b21b      	sxth	r3, r3
90017538:	9011      	str	r0, [sp, #68]	; 0x44
9001753a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
9001753e:	9310      	str	r3, [sp, #64]	; 0x40
90017540:	f8d8 3000 	ldr.w	r3, [r8]
90017544:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
90017548:	7b19      	ldrb	r1, [r3, #12]
9001754a:	7adb      	ldrb	r3, [r3, #11]
9001754c:	9114      	str	r1, [sp, #80]	; 0x50
9001754e:	9315      	str	r3, [sp, #84]	; 0x54
90017550:	2a00      	cmp	r2, #0
90017552:	d06a      	beq.n	9001762a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90017554:	f898 3010 	ldrb.w	r3, [r8, #16]
90017558:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9001755a:	2b06      	cmp	r3, #6
9001755c:	bf14      	ite	ne
9001755e:	2301      	movne	r3, #1
90017560:	2302      	moveq	r3, #2
90017562:	4413      	add	r3, r2
90017564:	f04f 0900 	mov.w	r9, #0
90017568:	930f      	str	r3, [sp, #60]	; 0x3c
9001756a:	464c      	mov	r4, r9
9001756c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
90017570:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
90017574:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
90017578:	4293      	cmp	r3, r2
9001757a:	f280 808f 	bge.w	9001769c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
9001757e:	2300      	movs	r3, #0
90017580:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
90017584:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
90017588:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001758c:	429c      	cmp	r4, r3
9001758e:	d006      	beq.n	9001759e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
90017590:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017592:	f242 020b 	movw	r2, #8203	; 0x200b
90017596:	4294      	cmp	r4, r2
90017598:	bf18      	it	ne
9001759a:	4623      	movne	r3, r4
9001759c:	930d      	str	r3, [sp, #52]	; 0x34
9001759e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900175a0:	992d      	ldr	r1, [sp, #180]	; 0xb4
900175a2:	f8d8 2000 	ldr.w	r2, [r8]
900175a6:	428b      	cmp	r3, r1
900175a8:	db41      	blt.n	9001762e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
900175aa:	6813      	ldr	r3, [r2, #0]
900175ac:	4610      	mov	r0, r2
900175ae:	695b      	ldr	r3, [r3, #20]
900175b0:	4798      	blx	r3
900175b2:	4604      	mov	r4, r0
900175b4:	f8d8 0000 	ldr.w	r0, [r8]
900175b8:	aa1d      	add	r2, sp, #116	; 0x74
900175ba:	4621      	mov	r1, r4
900175bc:	6803      	ldr	r3, [r0, #0]
900175be:	689d      	ldr	r5, [r3, #8]
900175c0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
900175c4:	47a8      	blx	r5
900175c6:	901c      	str	r0, [sp, #112]	; 0x70
900175c8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900175cc:	429c      	cmp	r4, r3
900175ce:	f000 80ec 	beq.w	900177aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900175d2:	f242 030b 	movw	r3, #8203	; 0x200b
900175d6:	429c      	cmp	r4, r3
900175d8:	f000 80e7 	beq.w	900177aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900175dc:	2c00      	cmp	r4, #0
900175de:	f000 80f9 	beq.w	900177d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
900175e2:	2c0a      	cmp	r4, #10
900175e4:	d060      	beq.n	900176a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
900175e6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
900175e8:	b36a      	cbz	r2, 90017646 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
900175ea:	8894      	ldrh	r4, [r2, #4]
900175ec:	f1bb 0f00 	cmp.w	fp, #0
900175f0:	d03b      	beq.n	9001766a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
900175f2:	f892 900d 	ldrb.w	r9, [r2, #13]
900175f6:	f1bb 0f01 	cmp.w	fp, #1
900175fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
900175fe:	f409 7380 	and.w	r3, r9, #256	; 0x100
90017602:	f892 900a 	ldrb.w	r9, [r2, #10]
90017606:	ea49 0903 	orr.w	r9, r9, r3
9001760a:	d134      	bne.n	90017676 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
9001760c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001760e:	eba6 0609 	sub.w	r6, r6, r9
90017612:	2b00      	cmp	r3, #0
90017614:	d14f      	bne.n	900176b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90017616:	9a14      	ldr	r2, [sp, #80]	; 0x50
90017618:	eb09 0306 	add.w	r3, r9, r6
9001761c:	4413      	add	r3, r2
9001761e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90017620:	f9b2 2000 	ldrsh.w	r2, [r2]
90017624:	4293      	cmp	r3, r2
90017626:	da51      	bge.n	900176cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
90017628:	e038      	b.n	9001769c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
9001762a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001762c:	e79a      	b.n	90017564 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
9001762e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90017632:	4659      	mov	r1, fp
90017634:	982c      	ldr	r0, [sp, #176]	; 0xb0
90017636:	9301      	str	r3, [sp, #4]
90017638:	ab1d      	add	r3, sp, #116	; 0x74
9001763a:	9300      	str	r3, [sp, #0]
9001763c:	ab1c      	add	r3, sp, #112	; 0x70
9001763e:	f003 f85a 	bl	9001a6f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90017642:	4604      	mov	r4, r0
90017644:	e7c0      	b.n	900175c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90017646:	f8d8 0000 	ldr.w	r0, [r8]
9001764a:	6803      	ldr	r3, [r0, #0]
9001764c:	691b      	ldr	r3, [r3, #16]
9001764e:	4798      	blx	r3
90017650:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017654:	4298      	cmp	r0, r3
90017656:	f000 80a8 	beq.w	900177aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001765a:	f242 030b 	movw	r3, #8203	; 0x200b
9001765e:	4298      	cmp	r0, r3
90017660:	f000 80a3 	beq.w	900177aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90017664:	f1bb 0f00 	cmp.w	fp, #0
90017668:	d100      	bne.n	9001766c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
9001766a:	444e      	add	r6, r9
9001766c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9001766e:	2a00      	cmp	r2, #0
90017670:	d1bf      	bne.n	900175f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90017672:	4691      	mov	r9, r2
90017674:	e099      	b.n	900177aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90017676:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017678:	2b00      	cmp	r3, #0
9001767a:	f000 80ad 	beq.w	900177d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
9001767e:	f1bb 0f00 	cmp.w	fp, #0
90017682:	d118      	bne.n	900176b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90017684:	f8d8 0000 	ldr.w	r0, [r8]
90017688:	990d      	ldr	r1, [sp, #52]	; 0x34
9001768a:	6803      	ldr	r3, [r0, #0]
9001768c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001768e:	4798      	blx	r3
90017690:	4406      	add	r6, r0
90017692:	9b15      	ldr	r3, [sp, #84]	; 0x54
90017694:	9a10      	ldr	r2, [sp, #64]	; 0x40
90017696:	1af3      	subs	r3, r6, r3
90017698:	4293      	cmp	r3, r2
9001769a:	dd17      	ble.n	900176cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
9001769c:	2c00      	cmp	r4, #0
9001769e:	f000 8099 	beq.w	900177d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
900176a2:	2c0a      	cmp	r4, #10
900176a4:	f040 8087 	bne.w	900177b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
900176a8:	240a      	movs	r4, #10
900176aa:	fab4 f084 	clz	r0, r4
900176ae:	0940      	lsrs	r0, r0, #5
900176b0:	b01f      	add	sp, #124	; 0x7c
900176b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900176b6:	f8d8 0000 	ldr.w	r0, [r8]
900176ba:	990d      	ldr	r1, [sp, #52]	; 0x34
900176bc:	6803      	ldr	r3, [r0, #0]
900176be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900176c0:	4798      	blx	r3
900176c2:	f1bb 0f01 	cmp.w	fp, #1
900176c6:	eba6 0600 	sub.w	r6, r6, r0
900176ca:	d0a4      	beq.n	90017616 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
900176cc:	981c      	ldr	r0, [sp, #112]	; 0x70
900176ce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900176d0:	f990 1009 	ldrsb.w	r1, [r0, #9]
900176d4:	f9b3 7000 	ldrsh.w	r7, [r3]
900176d8:	7b43      	ldrb	r3, [r0, #13]
900176da:	4431      	add	r1, r6
900176dc:	015b      	lsls	r3, r3, #5
900176de:	f403 7280 	and.w	r2, r3, #256	; 0x100
900176e2:	7983      	ldrb	r3, [r0, #6]
900176e4:	4313      	orrs	r3, r2
900176e6:	440b      	add	r3, r1
900176e8:	42bb      	cmp	r3, r7
900176ea:	db5e      	blt.n	900177aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900176ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
900176ee:	4299      	cmp	r1, r3
900176f0:	da5b      	bge.n	900177aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900176f2:	f8d8 0000 	ldr.w	r0, [r8]
900176f6:	42b7      	cmp	r7, r6
900176f8:	6803      	ldr	r3, [r0, #0]
900176fa:	bfcc      	ite	gt
900176fc:	1bbf      	subgt	r7, r7, r6
900176fe:	2700      	movle	r7, #0
90017700:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90017702:	bfc8      	it	gt
90017704:	b2bf      	uxthgt	r7, r7
90017706:	4798      	blx	r3
90017708:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001770a:	7b5a      	ldrb	r2, [r3, #13]
9001770c:	00d1      	lsls	r1, r2, #3
9001770e:	f401 7580 	and.w	r5, r1, #256	; 0x100
90017712:	7a19      	ldrb	r1, [r3, #8]
90017714:	4329      	orrs	r1, r5
90017716:	0655      	lsls	r5, r2, #25
90017718:	9d17      	ldr	r5, [sp, #92]	; 0x5c
9001771a:	bf48      	it	mi
9001771c:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
90017720:	4405      	add	r5, r0
90017722:	bf48      	it	mi
90017724:	b209      	sxthmi	r1, r1
90017726:	1a6d      	subs	r5, r5, r1
90017728:	9929      	ldr	r1, [sp, #164]	; 0xa4
9001772a:	b2ad      	uxth	r5, r5
9001772c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90017730:	fa0f fa85 	sxth.w	sl, r5
90017734:	4551      	cmp	r1, sl
90017736:	dd3c      	ble.n	900177b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
90017738:	0112      	lsls	r2, r2, #4
9001773a:	79d8      	ldrb	r0, [r3, #7]
9001773c:	f402 7280 	and.w	r2, r2, #256	; 0x100
90017740:	4302      	orrs	r2, r0
90017742:	4492      	add	sl, r2
90017744:	4551      	cmp	r1, sl
90017746:	dc30      	bgt.n	900177aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90017748:	1b4d      	subs	r5, r1, r5
9001774a:	468a      	mov	sl, r1
9001774c:	b22d      	sxth	r5, r5
9001774e:	9319      	str	r3, [sp, #100]	; 0x64
90017750:	b2ad      	uxth	r5, r5
90017752:	9b11      	ldr	r3, [sp, #68]	; 0x44
90017754:	f8d8 0000 	ldr.w	r0, [r8]
90017758:	681a      	ldr	r2, [r3, #0]
9001775a:	6801      	ldr	r1, [r0, #0]
9001775c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
9001775e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90017760:	9313      	str	r3, [sp, #76]	; 0x4c
90017762:	9218      	str	r2, [sp, #96]	; 0x60
90017764:	6c09      	ldr	r1, [r1, #64]	; 0x40
90017766:	4788      	blx	r1
90017768:	f898 1006 	ldrb.w	r1, [r8, #6]
9001776c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001776e:	910b      	str	r1, [sp, #44]	; 0x2c
90017770:	f898 100e 	ldrb.w	r1, [r8, #14]
90017774:	9a18      	ldr	r2, [sp, #96]	; 0x60
90017776:	910a      	str	r1, [sp, #40]	; 0x28
90017778:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
9001777c:	9109      	str	r1, [sp, #36]	; 0x24
9001777e:	f8d8 1008 	ldr.w	r1, [r8, #8]
90017782:	9305      	str	r3, [sp, #20]
90017784:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90017786:	9206      	str	r2, [sp, #24]
90017788:	9304      	str	r3, [sp, #16]
9001778a:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001778c:	f8cd a004 	str.w	sl, [sp, #4]
90017790:	e9cd 7502 	strd	r7, r5, [sp, #8]
90017794:	4437      	add	r7, r6
90017796:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90017798:	b23f      	sxth	r7, r7
9001779a:	e9cd 0107 	strd	r0, r1, [sp, #28]
9001779e:	9700      	str	r7, [sp, #0]
900177a0:	9916      	ldr	r1, [sp, #88]	; 0x58
900177a2:	681a      	ldr	r2, [r3, #0]
900177a4:	9811      	ldr	r0, [sp, #68]	; 0x44
900177a6:	685b      	ldr	r3, [r3, #4]
900177a8:	47a8      	blx	r5
900177aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900177ac:	3301      	adds	r3, #1
900177ae:	930e      	str	r3, [sp, #56]	; 0x38
900177b0:	e6e0      	b.n	90017574 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
900177b2:	2500      	movs	r5, #0
900177b4:	e7cb      	b.n	9001774e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
900177b6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900177b8:	3501      	adds	r5, #1
900177ba:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
900177bc:	429d      	cmp	r5, r3
900177be:	f6bf af74 	bge.w	900176aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
900177c2:	4659      	mov	r1, fp
900177c4:	982c      	ldr	r0, [sp, #176]	; 0xb0
900177c6:	f7ec fe9d 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900177ca:	4604      	mov	r4, r0
900177cc:	b110      	cbz	r0, 900177d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
900177ce:	280a      	cmp	r0, #10
900177d0:	d1f2      	bne.n	900177b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
900177d2:	e769      	b.n	900176a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
900177d4:	2400      	movs	r4, #0
900177d6:	e768      	b.n	900176aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
900177d8:	f1bb 0f00 	cmp.w	fp, #0
900177dc:	f43f af59 	beq.w	90017692 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
900177e0:	e774      	b.n	900176cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

900177e2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
900177e2:	b530      	push	{r4, r5, lr}
900177e4:	8ac4      	ldrh	r4, [r0, #22]
900177e6:	8b45      	ldrh	r5, [r0, #26]
900177e8:	8343      	strh	r3, [r0, #26]
900177ea:	442c      	add	r4, r5
900177ec:	1ae4      	subs	r4, r4, r3
900177ee:	8b83      	ldrh	r3, [r0, #28]
900177f0:	82c4      	strh	r4, [r0, #22]
900177f2:	8b04      	ldrh	r4, [r0, #24]
900177f4:	4422      	add	r2, r4
900177f6:	440c      	add	r4, r1
900177f8:	1a59      	subs	r1, r3, r1
900177fa:	83c2      	strh	r2, [r0, #30]
900177fc:	8304      	strh	r4, [r0, #24]
900177fe:	8381      	strh	r1, [r0, #28]
90017800:	bd30      	pop	{r4, r5, pc}

90017802 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90017802:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017806:	4604      	mov	r4, r0
90017808:	8a47      	ldrh	r7, [r0, #18]
9001780a:	68c0      	ldr	r0, [r0, #12]
9001780c:	b085      	sub	sp, #20
9001780e:	6803      	ldr	r3, [r0, #0]
90017810:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90017812:	4798      	blx	r3
90017814:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90017818:	7a63      	ldrb	r3, [r4, #9]
9001781a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001781e:	3b01      	subs	r3, #1
90017820:	42b7      	cmp	r7, r6
90017822:	bfac      	ite	ge
90017824:	f04f 0900 	movge.w	r9, #0
90017828:	f04f 0901 	movlt.w	r9, #1
9001782c:	2b05      	cmp	r3, #5
9001782e:	d804      	bhi.n	9001783a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90017830:	e8df f003 	tbb	[pc, r3]
90017834:	470f0854 	.word	0x470f0854
90017838:	4c4c      	.short	0x4c4c
9001783a:	2500      	movs	r5, #0
9001783c:	46a9      	mov	r9, r5
9001783e:	462e      	mov	r6, r5
90017840:	462f      	mov	r7, r5
90017842:	e00e      	b.n	90017862 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90017844:	42b7      	cmp	r7, r6
90017846:	f04f 0500 	mov.w	r5, #0
9001784a:	bfb4      	ite	lt
9001784c:	2600      	movlt	r6, #0
9001784e:	2601      	movge	r6, #1
90017850:	e7f6      	b.n	90017840 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90017852:	42b7      	cmp	r7, r6
90017854:	464d      	mov	r5, r9
90017856:	f04f 0900 	mov.w	r9, #0
9001785a:	bfb4      	ite	lt
9001785c:	2600      	movlt	r6, #0
9001785e:	2601      	movge	r6, #1
90017860:	464f      	mov	r7, r9
90017862:	f04f 0800 	mov.w	r8, #0
90017866:	f8a4 8016 	strh.w	r8, [r4, #22]
9001786a:	f8a4 8018 	strh.w	r8, [r4, #24]
9001786e:	f8cd 8004 	str.w	r8, [sp, #4]
90017872:	2300      	movs	r3, #0
90017874:	9303      	str	r3, [sp, #12]
90017876:	8823      	ldrh	r3, [r4, #0]
90017878:	2b20      	cmp	r3, #32
9001787a:	d033      	beq.n	900178e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
9001787c:	f242 010b 	movw	r1, #8203	; 0x200b
90017880:	1a5a      	subs	r2, r3, r1
90017882:	f1d2 0a00 	rsbs	sl, r2, #0
90017886:	eb4a 0a02 	adc.w	sl, sl, r2
9001788a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
9001788e:	4293      	cmp	r3, r2
90017890:	d008      	beq.n	900178a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90017892:	428b      	cmp	r3, r1
90017894:	9a01      	ldr	r2, [sp, #4]
90017896:	bf0e      	itee	eq
90017898:	f04f 0a01 	moveq.w	sl, #1
9001789c:	461a      	movne	r2, r3
9001789e:	f04f 0a00 	movne.w	sl, #0
900178a2:	9201      	str	r2, [sp, #4]
900178a4:	ab03      	add	r3, sp, #12
900178a6:	68e2      	ldr	r2, [r4, #12]
900178a8:	7a21      	ldrb	r1, [r4, #8]
900178aa:	6860      	ldr	r0, [r4, #4]
900178ac:	f002 feda 	bl	9001a664 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900178b0:	8020      	strh	r0, [r4, #0]
900178b2:	b9d8      	cbnz	r0, 900178ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
900178b4:	8ba2      	ldrh	r2, [r4, #28]
900178b6:	2300      	movs	r3, #0
900178b8:	4611      	mov	r1, r2
900178ba:	4620      	mov	r0, r4
900178bc:	f7ff ff91 	bl	900177e2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900178c0:	e06e      	b.n	900179a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900178c2:	2500      	movs	r5, #0
900178c4:	2701      	movs	r7, #1
900178c6:	46a9      	mov	r9, r5
900178c8:	462e      	mov	r6, r5
900178ca:	e7ca      	b.n	90017862 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900178cc:	42b7      	cmp	r7, r6
900178ce:	f04f 0500 	mov.w	r5, #0
900178d2:	bfb4      	ite	lt
900178d4:	2700      	movlt	r7, #0
900178d6:	2701      	movge	r7, #1
900178d8:	462e      	mov	r6, r5
900178da:	e7c2      	b.n	90017862 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900178dc:	2500      	movs	r5, #0
900178de:	2601      	movs	r6, #1
900178e0:	46a9      	mov	r9, r5
900178e2:	e7ad      	b.n	90017840 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900178e4:	9301      	str	r3, [sp, #4]
900178e6:	f04f 0a01 	mov.w	sl, #1
900178ea:	e7db      	b.n	900178a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900178ec:	8b63      	ldrh	r3, [r4, #26]
900178ee:	280a      	cmp	r0, #10
900178f0:	f103 0301 	add.w	r3, r3, #1
900178f4:	8363      	strh	r3, [r4, #26]
900178f6:	d0dd      	beq.n	900178b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
900178f8:	9a03      	ldr	r2, [sp, #12]
900178fa:	bb62      	cbnz	r2, 90017956 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
900178fc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017900:	4298      	cmp	r0, r3
90017902:	d003      	beq.n	9001790c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017904:	f242 030b 	movw	r3, #8203	; 0x200b
90017908:	4298      	cmp	r0, r3
9001790a:	d1b2      	bne.n	90017872 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001790c:	8823      	ldrh	r3, [r4, #0]
9001790e:	8ba1      	ldrh	r1, [r4, #28]
90017910:	2b20      	cmp	r3, #32
90017912:	d003      	beq.n	9001791c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90017914:	f242 000b 	movw	r0, #8203	; 0x200b
90017918:	4283      	cmp	r3, r0
9001791a:	d131      	bne.n	90017980 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
9001791c:	f1ba 0f00 	cmp.w	sl, #0
90017920:	bf0a      	itet	eq
90017922:	4688      	moveq	r8, r1
90017924:	4650      	movne	r0, sl
90017926:	2001      	moveq	r0, #1
90017928:	440a      	add	r2, r1
9001792a:	8b23      	ldrh	r3, [r4, #24]
9001792c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90017930:	b292      	uxth	r2, r2
90017932:	83a2      	strh	r2, [r4, #28]
90017934:	4413      	add	r3, r2
90017936:	f1b9 0f00 	cmp.w	r9, #0
9001793a:	d102      	bne.n	90017942 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
9001793c:	2d00      	cmp	r5, #0
9001793e:	d042      	beq.n	900179c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90017940:	b300      	cbz	r0, 90017984 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90017942:	8c21      	ldrh	r1, [r4, #32]
90017944:	4419      	add	r1, r3
90017946:	458c      	cmp	ip, r1
90017948:	da37      	bge.n	900179ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001794a:	8ae1      	ldrh	r1, [r4, #22]
9001794c:	2900      	cmp	r1, #0
9001794e:	d034      	beq.n	900179ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90017950:	4563      	cmp	r3, ip
90017952:	dd8e      	ble.n	90017872 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017954:	e01d      	b.n	90017992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90017956:	8893      	ldrh	r3, [r2, #4]
90017958:	9901      	ldr	r1, [sp, #4]
9001795a:	8023      	strh	r3, [r4, #0]
9001795c:	f892 b00d 	ldrb.w	fp, [r2, #13]
90017960:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90017964:	f40b 7080 	and.w	r0, fp, #256	; 0x100
90017968:	f892 b00a 	ldrb.w	fp, [r2, #10]
9001796c:	ea4b 0b00 	orr.w	fp, fp, r0
90017970:	68e0      	ldr	r0, [r4, #12]
90017972:	6803      	ldr	r3, [r0, #0]
90017974:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017976:	4798      	blx	r3
90017978:	eb0b 0200 	add.w	r2, fp, r0
9001797c:	b292      	uxth	r2, r2
9001797e:	e7c5      	b.n	9001790c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017980:	2000      	movs	r0, #0
90017982:	e7d1      	b.n	90017928 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90017984:	4563      	cmp	r3, ip
90017986:	f77f af74 	ble.w	90017872 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001798a:	8ae3      	ldrh	r3, [r4, #22]
9001798c:	2b00      	cmp	r3, #0
9001798e:	f43f af70 	beq.w	90017872 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017992:	2301      	movs	r3, #1
90017994:	8c22      	ldrh	r2, [r4, #32]
90017996:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
9001799a:	8be3      	ldrh	r3, [r4, #30]
9001799c:	4413      	add	r3, r2
9001799e:	83e3      	strh	r3, [r4, #30]
900179a0:	68e0      	ldr	r0, [r4, #12]
900179a2:	6803      	ldr	r3, [r0, #0]
900179a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900179a6:	4798      	blx	r3
900179a8:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
900179ac:	4418      	add	r0, r3
900179ae:	8a63      	ldrh	r3, [r4, #18]
900179b0:	1a18      	subs	r0, r3, r0
900179b2:	8260      	strh	r0, [r4, #18]
900179b4:	b005      	add	sp, #20
900179b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900179ba:	2300      	movs	r3, #0
900179bc:	4611      	mov	r1, r2
900179be:	4620      	mov	r0, r4
900179c0:	f7ff ff0f 	bl	900177e2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900179c4:	e755      	b.n	90017872 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900179c6:	4563      	cmp	r3, ip
900179c8:	dd14      	ble.n	900179f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
900179ca:	b117      	cbz	r7, 900179d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
900179cc:	2301      	movs	r3, #1
900179ce:	460a      	mov	r2, r1
900179d0:	e772      	b.n	900178b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
900179d2:	2e00      	cmp	r6, #0
900179d4:	f43f af4d 	beq.w	90017872 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900179d8:	2800      	cmp	r0, #0
900179da:	f47f af4a 	bne.w	90017872 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900179de:	f1ba 0f00 	cmp.w	sl, #0
900179e2:	d002      	beq.n	900179ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
900179e4:	2301      	movs	r3, #1
900179e6:	4642      	mov	r2, r8
900179e8:	e767      	b.n	900178ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
900179ea:	8ae3      	ldrh	r3, [r4, #22]
900179ec:	2b00      	cmp	r3, #0
900179ee:	f43f af40 	beq.w	90017872 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900179f2:	e7d5      	b.n	900179a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900179f4:	2800      	cmp	r0, #0
900179f6:	f47f af3c 	bne.w	90017872 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900179fa:	f1ba 0f00 	cmp.w	sl, #0
900179fe:	f43f af38 	beq.w	90017872 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017a02:	2301      	movs	r3, #1
90017a04:	4642      	mov	r2, r8
90017a06:	e7da      	b.n	900179be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90017a08 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90017a08:	b5f0      	push	{r4, r5, r6, r7, lr}
90017a0a:	4605      	mov	r5, r0
90017a0c:	b08f      	sub	sp, #60	; 0x3c
90017a0e:	4617      	mov	r7, r2
90017a10:	461c      	mov	r4, r3
90017a12:	460e      	mov	r6, r1
90017a14:	b1d1      	cbz	r1, 90017a4c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90017a16:	681b      	ldr	r3, [r3, #0]
90017a18:	4620      	mov	r0, r4
90017a1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90017a1c:	4798      	blx	r3
90017a1e:	4240      	negs	r0, r0
90017a20:	9603      	str	r6, [sp, #12]
90017a22:	f64f 73ff 	movw	r3, #65535	; 0xffff
90017a26:	b200      	sxth	r0, r0
90017a28:	9700      	str	r7, [sp, #0]
90017a2a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
90017a2e:	4629      	mov	r1, r5
90017a30:	e9cd 4001 	strd	r4, r0, [sp, #4]
90017a34:	2401      	movs	r4, #1
90017a36:	a805      	add	r0, sp, #20
90017a38:	f7ff fcbe 	bl	900173b8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90017a3c:	a805      	add	r0, sp, #20
90017a3e:	f7ff fee0 	bl	90017802 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017a42:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90017a46:	b163      	cbz	r3, 90017a62 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90017a48:	3401      	adds	r4, #1
90017a4a:	e7f7      	b.n	90017a3c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90017a4c:	2401      	movs	r4, #1
90017a4e:	f002 fed5 	bl	9001a7fc <_ZN8touchgfx12TextProvider11getNextCharEv>
90017a52:	280a      	cmp	r0, #10
90017a54:	4628      	mov	r0, r5
90017a56:	bf08      	it	eq
90017a58:	3401      	addeq	r4, #1
90017a5a:	f002 fecf 	bl	9001a7fc <_ZN8touchgfx12TextProvider11getNextCharEv>
90017a5e:	2800      	cmp	r0, #0
90017a60:	d1f7      	bne.n	90017a52 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90017a62:	b2a0      	uxth	r0, r4
90017a64:	b00f      	add	sp, #60	; 0x3c
90017a66:	bdf0      	pop	{r4, r5, r6, r7, pc}

90017a68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90017a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017a6c:	b0e3      	sub	sp, #396	; 0x18c
90017a6e:	461c      	mov	r4, r3
90017a70:	4683      	mov	fp, r0
90017a72:	4688      	mov	r8, r1
90017a74:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
90017a76:	2b00      	cmp	r3, #0
90017a78:	f000 8112 	beq.w	90017ca0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017a7c:	6823      	ldr	r3, [r4, #0]
90017a7e:	2b00      	cmp	r3, #0
90017a80:	f000 810e 	beq.w	90017ca0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017a84:	7ba3      	ldrb	r3, [r4, #14]
90017a86:	2b00      	cmp	r3, #0
90017a88:	f000 810a 	beq.w	90017ca0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017a8c:	ad0a      	add	r5, sp, #40	; 0x28
90017a8e:	6810      	ldr	r0, [r2, #0]
90017a90:	6851      	ldr	r1, [r2, #4]
90017a92:	462b      	mov	r3, r5
90017a94:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90017a98:	c303      	stmia	r3!, {r0, r1}
90017a9a:	2100      	movs	r1, #0
90017a9c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90017aa0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90017aa4:	4628      	mov	r0, r5
90017aa6:	910c      	str	r1, [sp, #48]	; 0x30
90017aa8:	a90c      	add	r1, sp, #48	; 0x30
90017aaa:	79a2      	ldrb	r2, [r4, #6]
90017aac:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90017ab0:	f7ff fd01 	bl	900174b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90017ab4:	a90c      	add	r1, sp, #48	; 0x30
90017ab6:	79a2      	ldrb	r2, [r4, #6]
90017ab8:	4608      	mov	r0, r1
90017aba:	f7ff fcfc 	bl	900174b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90017abe:	a817      	add	r0, sp, #92	; 0x5c
90017ac0:	f002 fa6f 	bl	90019fa2 <_ZN8touchgfx12TextProviderC1Ev>
90017ac4:	6820      	ldr	r0, [r4, #0]
90017ac6:	6803      	ldr	r3, [r0, #0]
90017ac8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017aca:	4798      	blx	r3
90017acc:	4606      	mov	r6, r0
90017ace:	6820      	ldr	r0, [r4, #0]
90017ad0:	6803      	ldr	r3, [r0, #0]
90017ad2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017ad4:	4798      	blx	r3
90017ad6:	4633      	mov	r3, r6
90017ad8:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
90017ada:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90017adc:	9000      	str	r0, [sp, #0]
90017ade:	a817      	add	r0, sp, #92	; 0x5c
90017ae0:	f002 faba 	bl	9001a058 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017ae4:	6820      	ldr	r0, [r4, #0]
90017ae6:	f894 a004 	ldrb.w	sl, [r4, #4]
90017aea:	6803      	ldr	r3, [r0, #0]
90017aec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90017aee:	4798      	blx	r3
90017af0:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90017af4:	6823      	ldr	r3, [r4, #0]
90017af6:	4607      	mov	r7, r0
90017af8:	4406      	add	r6, r0
90017afa:	a830      	add	r0, sp, #192	; 0xc0
90017afc:	f893 9009 	ldrb.w	r9, [r3, #9]
90017b00:	f002 fa4f 	bl	90019fa2 <_ZN8touchgfx12TextProviderC1Ev>
90017b04:	7c23      	ldrb	r3, [r4, #16]
90017b06:	b17b      	cbz	r3, 90017b28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90017b08:	6820      	ldr	r0, [r4, #0]
90017b0a:	6803      	ldr	r3, [r0, #0]
90017b0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017b0e:	4798      	blx	r3
90017b10:	9009      	str	r0, [sp, #36]	; 0x24
90017b12:	6820      	ldr	r0, [r4, #0]
90017b14:	6802      	ldr	r2, [r0, #0]
90017b16:	6d12      	ldr	r2, [r2, #80]	; 0x50
90017b18:	4790      	blx	r2
90017b1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017b1c:	9000      	str	r0, [sp, #0]
90017b1e:	a830      	add	r0, sp, #192	; 0xc0
90017b20:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
90017b22:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90017b24:	f002 fa98 	bl	9001a058 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017b28:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
90017b2c:	a80e      	add	r0, sp, #56	; 0x38
90017b2e:	7be2      	ldrb	r2, [r4, #15]
90017b30:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90017b34:	1a8a      	subs	r2, r1, r2
90017b36:	7c21      	ldrb	r1, [r4, #16]
90017b38:	9103      	str	r1, [sp, #12]
90017b3a:	b292      	uxth	r2, r2
90017b3c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90017b40:	9102      	str	r1, [sp, #8]
90017b42:	6821      	ldr	r1, [r4, #0]
90017b44:	9101      	str	r1, [sp, #4]
90017b46:	7961      	ldrb	r1, [r4, #5]
90017b48:	9100      	str	r1, [sp, #0]
90017b4a:	a930      	add	r1, sp, #192	; 0xc0
90017b4c:	f7ff fc34 	bl	900173b8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90017b50:	2e00      	cmp	r6, #0
90017b52:	dc5b      	bgt.n	90017c0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90017b54:	af17      	add	r7, sp, #92	; 0x5c
90017b56:	f04f 0900 	mov.w	r9, #0
90017b5a:	7c23      	ldrb	r3, [r4, #16]
90017b5c:	2b00      	cmp	r3, #0
90017b5e:	f000 80b1 	beq.w	90017cc4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90017b62:	a80e      	add	r0, sp, #56	; 0x38
90017b64:	f7ff fe4d 	bl	90017802 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017b68:	f1ba 0f00 	cmp.w	sl, #0
90017b6c:	f000 80a5 	beq.w	90017cba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90017b70:	7c23      	ldrb	r3, [r4, #16]
90017b72:	2264      	movs	r2, #100	; 0x64
90017b74:	4639      	mov	r1, r7
90017b76:	a849      	add	r0, sp, #292	; 0x124
90017b78:	9309      	str	r3, [sp, #36]	; 0x24
90017b7a:	f012 f8c9 	bl	90029d10 <memcpy>
90017b7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017b80:	2b00      	cmp	r3, #0
90017b82:	f000 80a7 	beq.w	90017cd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90017b86:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
90017b8a:	7922      	ldrb	r2, [r4, #4]
90017b8c:	2a01      	cmp	r2, #1
90017b8e:	f040 808a 	bne.w	90017ca6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90017b92:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
90017b96:	1ac0      	subs	r0, r0, r3
90017b98:	2302      	movs	r3, #2
90017b9a:	fb90 f0f3 	sdiv	r0, r0, r3
90017b9e:	b200      	sxth	r0, r0
90017ba0:	7c23      	ldrb	r3, [r4, #16]
90017ba2:	2b00      	cmp	r3, #0
90017ba4:	f000 808b 	beq.w	90017cbe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90017ba8:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
90017bac:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
90017bb0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90017bb4:	e9cd 2105 	strd	r2, r1, [sp, #20]
90017bb8:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
90017bbc:	2100      	movs	r1, #0
90017bbe:	4410      	add	r0, r2
90017bc0:	4642      	mov	r2, r8
90017bc2:	b200      	sxth	r0, r0
90017bc4:	e9cd 9703 	strd	r9, r7, [sp, #12]
90017bc8:	9000      	str	r0, [sp, #0]
90017bca:	4658      	mov	r0, fp
90017bcc:	e9cd 5401 	strd	r5, r4, [sp, #4]
90017bd0:	f7ff fca2 	bl	90017518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90017bd4:	2800      	cmp	r0, #0
90017bd6:	d163      	bne.n	90017ca0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017bd8:	b2b2      	uxth	r2, r6
90017bda:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90017bde:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90017be2:	4413      	add	r3, r2
90017be4:	1a8a      	subs	r2, r1, r2
90017be6:	b21b      	sxth	r3, r3
90017be8:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
90017bec:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
90017bf0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90017bf4:	2a00      	cmp	r2, #0
90017bf6:	d153      	bne.n	90017ca0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017bf8:	6822      	ldr	r2, [r4, #0]
90017bfa:	8869      	ldrh	r1, [r5, #2]
90017bfc:	7a12      	ldrb	r2, [r2, #8]
90017bfe:	1a9b      	subs	r3, r3, r2
90017c00:	88ea      	ldrh	r2, [r5, #6]
90017c02:	440a      	add	r2, r1
90017c04:	b212      	sxth	r2, r2
90017c06:	4293      	cmp	r3, r2
90017c08:	dda7      	ble.n	90017b5a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90017c0a:	e049      	b.n	90017ca0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017c0c:	7c23      	ldrb	r3, [r4, #16]
90017c0e:	444f      	add	r7, r9
90017c10:	b1c3      	cbz	r3, 90017c44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90017c12:	f64f 79ff 	movw	r9, #65535	; 0xffff
90017c16:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90017c1a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017c1e:	443b      	add	r3, r7
90017c20:	4293      	cmp	r3, r2
90017c22:	da97      	bge.n	90017b54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90017c24:	a80e      	add	r0, sp, #56	; 0x38
90017c26:	f7ff fdec 	bl	90017802 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017c2a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
90017c2e:	3b01      	subs	r3, #1
90017c30:	b29b      	uxth	r3, r3
90017c32:	454b      	cmp	r3, r9
90017c34:	9309      	str	r3, [sp, #36]	; 0x24
90017c36:	d021      	beq.n	90017c7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90017c38:	7961      	ldrb	r1, [r4, #5]
90017c3a:	a817      	add	r0, sp, #92	; 0x5c
90017c3c:	f7ec fc62 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017c40:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017c42:	e7f4      	b.n	90017c2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90017c44:	fa1f f986 	uxth.w	r9, r6
90017c48:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90017c4c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017c50:	443b      	add	r3, r7
90017c52:	4293      	cmp	r3, r2
90017c54:	f6bf af7e 	bge.w	90017b54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90017c58:	a817      	add	r0, sp, #92	; 0x5c
90017c5a:	f002 fdcf 	bl	9001a7fc <_ZN8touchgfx12TextProvider11getNextCharEv>
90017c5e:	b1f8      	cbz	r0, 90017ca0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017c60:	280a      	cmp	r0, #10
90017c62:	d1f1      	bne.n	90017c48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90017c64:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90017c68:	444b      	add	r3, r9
90017c6a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90017c6e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90017c72:	eba3 0309 	sub.w	r3, r3, r9
90017c76:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90017c7a:	e7e5      	b.n	90017c48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90017c7c:	b2b3      	uxth	r3, r6
90017c7e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
90017c82:	441a      	add	r2, r3
90017c84:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90017c88:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
90017c8c:	1ad3      	subs	r3, r2, r3
90017c8e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90017c92:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90017c96:	b11b      	cbz	r3, 90017ca0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017c98:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
90017c9c:	2b00      	cmp	r3, #0
90017c9e:	d0ba      	beq.n	90017c16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90017ca0:	b063      	add	sp, #396	; 0x18c
90017ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017ca6:	2a02      	cmp	r2, #2
90017ca8:	d105      	bne.n	90017cb6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90017caa:	7be2      	ldrb	r2, [r4, #15]
90017cac:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90017cb0:	1a80      	subs	r0, r0, r2
90017cb2:	1ac0      	subs	r0, r0, r3
90017cb4:	e773      	b.n	90017b9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90017cb6:	2000      	movs	r0, #0
90017cb8:	e772      	b.n	90017ba0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90017cba:	7be0      	ldrb	r0, [r4, #15]
90017cbc:	e770      	b.n	90017ba0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90017cbe:	f647 72ff 	movw	r2, #32767	; 0x7fff
90017cc2:	e773      	b.n	90017bac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90017cc4:	f1ba 0f00 	cmp.w	sl, #0
90017cc8:	d0f7      	beq.n	90017cba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90017cca:	2264      	movs	r2, #100	; 0x64
90017ccc:	4639      	mov	r1, r7
90017cce:	a849      	add	r0, sp, #292	; 0x124
90017cd0:	f012 f81e 	bl	90029d10 <memcpy>
90017cd4:	2300      	movs	r3, #0
90017cd6:	f647 72ff 	movw	r2, #32767	; 0x7fff
90017cda:	6821      	ldr	r1, [r4, #0]
90017cdc:	a849      	add	r0, sp, #292	; 0x124
90017cde:	f7ff fbae 	bl	9001743e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90017ce2:	b203      	sxth	r3, r0
90017ce4:	e751      	b.n	90017b8a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90017ce6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90017ce6:	2b03      	cmp	r3, #3
90017ce8:	d818      	bhi.n	90017d1c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90017cea:	e8df f003 	tbb	[pc, r3]
90017cee:	0602      	.short	0x0602
90017cf0:	130d      	.short	0x130d
90017cf2:	f9b0 2000 	ldrsh.w	r2, [r0]
90017cf6:	1850      	adds	r0, r2, r1
90017cf8:	4770      	bx	lr
90017cfa:	8803      	ldrh	r3, [r0, #0]
90017cfc:	8880      	ldrh	r0, [r0, #4]
90017cfe:	4418      	add	r0, r3
90017d00:	b200      	sxth	r0, r0
90017d02:	1a80      	subs	r0, r0, r2
90017d04:	3801      	subs	r0, #1
90017d06:	4770      	bx	lr
90017d08:	8803      	ldrh	r3, [r0, #0]
90017d0a:	8880      	ldrh	r0, [r0, #4]
90017d0c:	4418      	add	r0, r3
90017d0e:	b200      	sxth	r0, r0
90017d10:	1a40      	subs	r0, r0, r1
90017d12:	e7f7      	b.n	90017d04 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90017d14:	f9b0 0000 	ldrsh.w	r0, [r0]
90017d18:	4410      	add	r0, r2
90017d1a:	4770      	bx	lr
90017d1c:	2000      	movs	r0, #0
90017d1e:	4770      	bx	lr

90017d20 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90017d20:	2b03      	cmp	r3, #3
90017d22:	d817      	bhi.n	90017d54 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90017d24:	e8df f003 	tbb	[pc, r3]
90017d28:	10090602 	.word	0x10090602
90017d2c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90017d30:	1850      	adds	r0, r2, r1
90017d32:	4770      	bx	lr
90017d34:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90017d38:	e7fa      	b.n	90017d30 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90017d3a:	8843      	ldrh	r3, [r0, #2]
90017d3c:	88c0      	ldrh	r0, [r0, #6]
90017d3e:	4418      	add	r0, r3
90017d40:	b200      	sxth	r0, r0
90017d42:	1a80      	subs	r0, r0, r2
90017d44:	3801      	subs	r0, #1
90017d46:	4770      	bx	lr
90017d48:	8843      	ldrh	r3, [r0, #2]
90017d4a:	88c0      	ldrh	r0, [r0, #6]
90017d4c:	4418      	add	r0, r3
90017d4e:	b200      	sxth	r0, r0
90017d50:	1a40      	subs	r0, r0, r1
90017d52:	e7f7      	b.n	90017d44 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90017d54:	2000      	movs	r0, #0
90017d56:	4770      	bx	lr

90017d58 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90017d58:	4b01      	ldr	r3, [pc, #4]	; (90017d60 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90017d5a:	2200      	movs	r2, #0
90017d5c:	601a      	str	r2, [r3, #0]
90017d5e:	4770      	bx	lr
90017d60:	24039adc 	.word	0x24039adc

90017d64 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90017d64:	4603      	mov	r3, r0
90017d66:	b1c8      	cbz	r0, 90017d9c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90017d68:	0c02      	lsrs	r2, r0, #16
90017d6a:	0412      	lsls	r2, r2, #16
90017d6c:	b9a2      	cbnz	r2, 90017d98 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90017d6e:	0403      	lsls	r3, r0, #16
90017d70:	2010      	movs	r0, #16
90017d72:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
90017d76:	bf04      	itt	eq
90017d78:	021b      	lsleq	r3, r3, #8
90017d7a:	3008      	addeq	r0, #8
90017d7c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90017d80:	bf04      	itt	eq
90017d82:	011b      	lsleq	r3, r3, #4
90017d84:	3004      	addeq	r0, #4
90017d86:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90017d8a:	bf04      	itt	eq
90017d8c:	009b      	lsleq	r3, r3, #2
90017d8e:	3002      	addeq	r0, #2
90017d90:	2b00      	cmp	r3, #0
90017d92:	db04      	blt.n	90017d9e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90017d94:	3001      	adds	r0, #1
90017d96:	4770      	bx	lr
90017d98:	2000      	movs	r0, #0
90017d9a:	e7ea      	b.n	90017d72 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90017d9c:	2020      	movs	r0, #32
90017d9e:	4770      	bx	lr

90017da0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90017da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017da4:	b087      	sub	sp, #28
90017da6:	460d      	mov	r5, r1
90017da8:	4616      	mov	r6, r2
90017daa:	4698      	mov	r8, r3
90017dac:	4601      	mov	r1, r0
90017dae:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
90017db2:	b120      	cbz	r0, 90017dbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017db4:	b11a      	cbz	r2, 90017dbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017db6:	2d1f      	cmp	r5, #31
90017db8:	d801      	bhi.n	90017dbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017dba:	2b1f      	cmp	r3, #31
90017dbc:	d904      	bls.n	90017dc8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90017dbe:	2000      	movs	r0, #0
90017dc0:	6038      	str	r0, [r7, #0]
90017dc2:	b007      	add	sp, #28
90017dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017dc8:	b97d      	cbnz	r5, 90017dea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90017dca:	b143      	cbz	r3, 90017dde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90017dcc:	4602      	mov	r2, r0
90017dce:	462b      	mov	r3, r5
90017dd0:	4641      	mov	r1, r8
90017dd2:	4630      	mov	r0, r6
90017dd4:	e9cd 4700 	strd	r4, r7, [sp]
90017dd8:	f7ff ffe2 	bl	90017da0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017ddc:	e7f1      	b.n	90017dc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017dde:	f04f 33ff 	mov.w	r3, #4294967295
90017de2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90017de6:	603b      	str	r3, [r7, #0]
90017de8:	e7eb      	b.n	90017dc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017dea:	fa32 fa05 	lsrs.w	sl, r2, r5
90017dee:	d106      	bne.n	90017dfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90017df0:	4346      	muls	r6, r0
90017df2:	fbb6 f0f4 	udiv	r0, r6, r4
90017df6:	fb04 6610 	mls	r6, r4, r0, r6
90017dfa:	603e      	str	r6, [r7, #0]
90017dfc:	e7e1      	b.n	90017dc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017dfe:	2201      	movs	r2, #1
90017e00:	fa00 fb05 	lsl.w	fp, r0, r5
90017e04:	40aa      	lsls	r2, r5
90017e06:	fbbb f9f4 	udiv	r9, fp, r4
90017e0a:	3a01      	subs	r2, #1
90017e0c:	fb0a f309 	mul.w	r3, sl, r9
90017e10:	fb04 b919 	mls	r9, r4, r9, fp
90017e14:	4016      	ands	r6, r2
90017e16:	9303      	str	r3, [sp, #12]
90017e18:	4630      	mov	r0, r6
90017e1a:	f7ff ffa3 	bl	90017d64 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017e1e:	462b      	mov	r3, r5
90017e20:	460a      	mov	r2, r1
90017e22:	4601      	mov	r1, r0
90017e24:	4630      	mov	r0, r6
90017e26:	e9cd 4700 	strd	r4, r7, [sp]
90017e2a:	f7ff ffb9 	bl	90017da0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017e2e:	4606      	mov	r6, r0
90017e30:	4648      	mov	r0, r9
90017e32:	eb05 0108 	add.w	r1, r5, r8
90017e36:	f7ff ff95 	bl	90017d64 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017e3a:	ab05      	add	r3, sp, #20
90017e3c:	464a      	mov	r2, r9
90017e3e:	e9cd 4300 	strd	r4, r3, [sp]
90017e42:	4603      	mov	r3, r0
90017e44:	4650      	mov	r0, sl
90017e46:	f7ff ffab 	bl	90017da0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017e4a:	6839      	ldr	r1, [r7, #0]
90017e4c:	9a05      	ldr	r2, [sp, #20]
90017e4e:	9b03      	ldr	r3, [sp, #12]
90017e50:	4411      	add	r1, r2
90017e52:	fbb1 f2f4 	udiv	r2, r1, r4
90017e56:	18d3      	adds	r3, r2, r3
90017e58:	fb04 1412 	mls	r4, r4, r2, r1
90017e5c:	441e      	add	r6, r3
90017e5e:	603c      	str	r4, [r7, #0]
90017e60:	4430      	add	r0, r6
90017e62:	e7ae      	b.n	90017dc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90017e64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90017e64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90017e68:	b085      	sub	sp, #20
90017e6a:	f1b0 0900 	subs.w	r9, r0, #0
90017e6e:	461d      	mov	r5, r3
90017e70:	4617      	mov	r7, r2
90017e72:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90017e74:	bfbb      	ittet	lt
90017e76:	f1c9 0900 	rsblt	r9, r9, #0
90017e7a:	f04f 36ff 	movlt.w	r6, #4294967295
90017e7e:	2601      	movge	r6, #1
90017e80:	6823      	ldrlt	r3, [r4, #0]
90017e82:	bfbc      	itt	lt
90017e84:	425b      	neglt	r3, r3
90017e86:	6023      	strlt	r3, [r4, #0]
90017e88:	2a00      	cmp	r2, #0
90017e8a:	da04      	bge.n	90017e96 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90017e8c:	6823      	ldr	r3, [r4, #0]
90017e8e:	4257      	negs	r7, r2
90017e90:	4276      	negs	r6, r6
90017e92:	425b      	negs	r3, r3
90017e94:	6023      	str	r3, [r4, #0]
90017e96:	2d00      	cmp	r5, #0
90017e98:	4638      	mov	r0, r7
90017e9a:	bfba      	itte	lt
90017e9c:	426d      	neglt	r5, r5
90017e9e:	f04f 38ff 	movlt.w	r8, #4294967295
90017ea2:	f04f 0801 	movge.w	r8, #1
90017ea6:	f7ff ff5d 	bl	90017d64 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017eaa:	ab03      	add	r3, sp, #12
90017eac:	463a      	mov	r2, r7
90017eae:	e9cd 5300 	strd	r5, r3, [sp]
90017eb2:	4603      	mov	r3, r0
90017eb4:	4648      	mov	r0, r9
90017eb6:	f7ff ff73 	bl	90017da0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017eba:	6823      	ldr	r3, [r4, #0]
90017ebc:	9a03      	ldr	r2, [sp, #12]
90017ebe:	4546      	cmp	r6, r8
90017ec0:	441a      	add	r2, r3
90017ec2:	fb92 f3f5 	sdiv	r3, r2, r5
90017ec6:	4418      	add	r0, r3
90017ec8:	fb05 2313 	mls	r3, r5, r3, r2
90017ecc:	bf18      	it	ne
90017ece:	4240      	negne	r0, r0
90017ed0:	1c72      	adds	r2, r6, #1
90017ed2:	6023      	str	r3, [r4, #0]
90017ed4:	d105      	bne.n	90017ee2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90017ed6:	2b00      	cmp	r3, #0
90017ed8:	f1c3 0200 	rsb	r2, r3, #0
90017edc:	db0b      	blt.n	90017ef6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90017ede:	6022      	str	r2, [r4, #0]
90017ee0:	e006      	b.n	90017ef0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017ee2:	2e01      	cmp	r6, #1
90017ee4:	d104      	bne.n	90017ef0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017ee6:	2b00      	cmp	r3, #0
90017ee8:	da02      	bge.n	90017ef0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017eea:	442b      	add	r3, r5
90017eec:	3801      	subs	r0, #1
90017eee:	6023      	str	r3, [r4, #0]
90017ef0:	b005      	add	sp, #20
90017ef2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90017ef6:	3801      	subs	r0, #1
90017ef8:	1b52      	subs	r2, r2, r5
90017efa:	e7f0      	b.n	90017ede <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90017efc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90017efc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90017f00:	4c1c      	ldr	r4, [pc, #112]	; (90017f74 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90017f02:	4605      	mov	r5, r0
90017f04:	6807      	ldr	r7, [r0, #0]
90017f06:	69a3      	ldr	r3, [r4, #24]
90017f08:	b92b      	cbnz	r3, 90017f16 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90017f0a:	6840      	ldr	r0, [r0, #4]
90017f0c:	e9c5 7000 	strd	r7, r0, [r5]
90017f10:	b004      	add	sp, #16
90017f12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017f16:	f04f 0802 	mov.w	r8, #2
90017f1a:	68a2      	ldr	r2, [r4, #8]
90017f1c:	ae04      	add	r6, sp, #16
90017f1e:	6820      	ldr	r0, [r4, #0]
90017f20:	fb93 f1f8 	sdiv	r1, r3, r8
90017f24:	440a      	add	r2, r1
90017f26:	69e1      	ldr	r1, [r4, #28]
90017f28:	f846 2d04 	str.w	r2, [r6, #-4]!
90017f2c:	463a      	mov	r2, r7
90017f2e:	9600      	str	r6, [sp, #0]
90017f30:	f7ff ff98 	bl	90017e64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017f34:	69a3      	ldr	r3, [r4, #24]
90017f36:	4607      	mov	r7, r0
90017f38:	686a      	ldr	r2, [r5, #4]
90017f3a:	6a21      	ldr	r1, [r4, #32]
90017f3c:	9600      	str	r6, [sp, #0]
90017f3e:	6860      	ldr	r0, [r4, #4]
90017f40:	f7ff ff90 	bl	90017e64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017f44:	69a3      	ldr	r3, [r4, #24]
90017f46:	6962      	ldr	r2, [r4, #20]
90017f48:	4407      	add	r7, r0
90017f4a:	6a61      	ldr	r1, [r4, #36]	; 0x24
90017f4c:	9600      	str	r6, [sp, #0]
90017f4e:	68e0      	ldr	r0, [r4, #12]
90017f50:	fb93 f8f8 	sdiv	r8, r3, r8
90017f54:	4442      	add	r2, r8
90017f56:	9203      	str	r2, [sp, #12]
90017f58:	682a      	ldr	r2, [r5, #0]
90017f5a:	f7ff ff83 	bl	90017e64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017f5e:	4680      	mov	r8, r0
90017f60:	9600      	str	r6, [sp, #0]
90017f62:	69a3      	ldr	r3, [r4, #24]
90017f64:	686a      	ldr	r2, [r5, #4]
90017f66:	6aa1      	ldr	r1, [r4, #40]	; 0x28
90017f68:	6920      	ldr	r0, [r4, #16]
90017f6a:	f7ff ff7b 	bl	90017e64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017f6e:	4440      	add	r0, r8
90017f70:	e7cc      	b.n	90017f0c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90017f72:	bf00      	nop
90017f74:	24039ae0 	.word	0x24039ae0

90017f78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90017f78:	4b07      	ldr	r3, [pc, #28]	; (90017f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90017f7a:	781b      	ldrb	r3, [r3, #0]
90017f7c:	2b01      	cmp	r3, #1
90017f7e:	d109      	bne.n	90017f94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90017f80:	f9b1 3000 	ldrsh.w	r3, [r1]
90017f84:	f9b0 2000 	ldrsh.w	r2, [r0]
90017f88:	8003      	strh	r3, [r0, #0]
90017f8a:	4b04      	ldr	r3, [pc, #16]	; (90017f9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90017f8c:	881b      	ldrh	r3, [r3, #0]
90017f8e:	3b01      	subs	r3, #1
90017f90:	1a9b      	subs	r3, r3, r2
90017f92:	800b      	strh	r3, [r1, #0]
90017f94:	4770      	bx	lr
90017f96:	bf00      	nop
90017f98:	24039ac4 	.word	0x24039ac4
90017f9c:	24039ac0 	.word	0x24039ac0

90017fa0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90017fa0:	4b07      	ldr	r3, [pc, #28]	; (90017fc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90017fa2:	b510      	push	{r4, lr}
90017fa4:	781b      	ldrb	r3, [r3, #0]
90017fa6:	2b01      	cmp	r3, #1
90017fa8:	d108      	bne.n	90017fbc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90017faa:	4b06      	ldr	r3, [pc, #24]	; (90017fc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90017fac:	880c      	ldrh	r4, [r1, #0]
90017fae:	881b      	ldrh	r3, [r3, #0]
90017fb0:	f9b0 2000 	ldrsh.w	r2, [r0]
90017fb4:	3b01      	subs	r3, #1
90017fb6:	1b1b      	subs	r3, r3, r4
90017fb8:	8003      	strh	r3, [r0, #0]
90017fba:	800a      	strh	r2, [r1, #0]
90017fbc:	bd10      	pop	{r4, pc}
90017fbe:	bf00      	nop
90017fc0:	24039ac4 	.word	0x24039ac4
90017fc4:	24039ac0 	.word	0x24039ac0

90017fc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90017fc8:	4b0a      	ldr	r3, [pc, #40]	; (90017ff4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90017fca:	b510      	push	{r4, lr}
90017fcc:	781b      	ldrb	r3, [r3, #0]
90017fce:	2b01      	cmp	r3, #1
90017fd0:	d10e      	bne.n	90017ff0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90017fd2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90017fd6:	8843      	ldrh	r3, [r0, #2]
90017fd8:	f9b0 4000 	ldrsh.w	r4, [r0]
90017fdc:	18ca      	adds	r2, r1, r3
90017fde:	4b06      	ldr	r3, [pc, #24]	; (90017ff8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90017fe0:	8044      	strh	r4, [r0, #2]
90017fe2:	881b      	ldrh	r3, [r3, #0]
90017fe4:	1a9b      	subs	r3, r3, r2
90017fe6:	8003      	strh	r3, [r0, #0]
90017fe8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90017fec:	8081      	strh	r1, [r0, #4]
90017fee:	80c3      	strh	r3, [r0, #6]
90017ff0:	bd10      	pop	{r4, pc}
90017ff2:	bf00      	nop
90017ff4:	24039ac4 	.word	0x24039ac4
90017ff8:	24039ac0 	.word	0x24039ac0

90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90017ffc:	4b08      	ldr	r3, [pc, #32]	; (90018020 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90017ffe:	781b      	ldrb	r3, [r3, #0]
90018000:	2b01      	cmp	r3, #1
90018002:	d10c      	bne.n	9001801e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90018004:	8803      	ldrh	r3, [r0, #0]
90018006:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
9001800a:	8842      	ldrh	r2, [r0, #2]
9001800c:	8002      	strh	r2, [r0, #0]
9001800e:	185a      	adds	r2, r3, r1
90018010:	4b04      	ldr	r3, [pc, #16]	; (90018024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90018012:	881b      	ldrh	r3, [r3, #0]
90018014:	1a9b      	subs	r3, r3, r2
90018016:	8043      	strh	r3, [r0, #2]
90018018:	88c3      	ldrh	r3, [r0, #6]
9001801a:	80c1      	strh	r1, [r0, #6]
9001801c:	8083      	strh	r3, [r0, #4]
9001801e:	4770      	bx	lr
90018020:	24039ac4 	.word	0x24039ac4
90018024:	24039ac0 	.word	0x24039ac0

90018028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90018028:	4b07      	ldr	r3, [pc, #28]	; (90018048 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
9001802a:	b510      	push	{r4, lr}
9001802c:	781b      	ldrb	r3, [r3, #0]
9001802e:	2b01      	cmp	r3, #1
90018030:	d108      	bne.n	90018044 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90018032:	f9b1 3000 	ldrsh.w	r3, [r1]
90018036:	f9b0 4000 	ldrsh.w	r4, [r0]
9001803a:	8003      	strh	r3, [r0, #0]
9001803c:	8893      	ldrh	r3, [r2, #4]
9001803e:	3b01      	subs	r3, #1
90018040:	1b1b      	subs	r3, r3, r4
90018042:	800b      	strh	r3, [r1, #0]
90018044:	bd10      	pop	{r4, pc}
90018046:	bf00      	nop
90018048:	24039ac4 	.word	0x24039ac4

9001804c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
9001804c:	4b0b      	ldr	r3, [pc, #44]	; (9001807c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
9001804e:	781b      	ldrb	r3, [r3, #0]
90018050:	2b01      	cmp	r3, #1
90018052:	d111      	bne.n	90018078 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90018054:	680b      	ldr	r3, [r1, #0]
90018056:	ed90 7a00 	vldr	s14, [r0]
9001805a:	6003      	str	r3, [r0, #0]
9001805c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90018060:	eddf 6a07 	vldr	s13, [pc, #28]	; 90018080 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90018064:	ee07 3a90 	vmov	s15, r3
90018068:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001806c:	ee77 7ae6 	vsub.f32	s15, s15, s13
90018070:	ee77 7ac7 	vsub.f32	s15, s15, s14
90018074:	edc1 7a00 	vstr	s15, [r1]
90018078:	4770      	bx	lr
9001807a:	bf00      	nop
9001807c:	24039ac4 	.word	0x24039ac4
90018080:	38d1b717 	.word	0x38d1b717

90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90018084:	4b0a      	ldr	r3, [pc, #40]	; (900180b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90018086:	460a      	mov	r2, r1
90018088:	b510      	push	{r4, lr}
9001808a:	781b      	ldrb	r3, [r3, #0]
9001808c:	2b01      	cmp	r3, #1
9001808e:	d10d      	bne.n	900180ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90018090:	8881      	ldrh	r1, [r0, #4]
90018092:	8803      	ldrh	r3, [r0, #0]
90018094:	440b      	add	r3, r1
90018096:	4601      	mov	r1, r0
90018098:	3b01      	subs	r3, #1
9001809a:	f821 3b02 	strh.w	r3, [r1], #2
9001809e:	f7ff ffc3 	bl	90018028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
900180a2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900180a6:	88c2      	ldrh	r2, [r0, #6]
900180a8:	80c3      	strh	r3, [r0, #6]
900180aa:	8082      	strh	r2, [r0, #4]
900180ac:	bd10      	pop	{r4, pc}
900180ae:	bf00      	nop
900180b0:	24039ac4 	.word	0x24039ac4

900180b4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
900180b4:	4770      	bx	lr
	...

900180b8 <_ZN8touchgfx11Application13requestRedrawEv>:
900180b8:	4b06      	ldr	r3, [pc, #24]	; (900180d4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
900180ba:	2100      	movs	r1, #0
900180bc:	f9b3 2000 	ldrsh.w	r2, [r3]
900180c0:	4b05      	ldr	r3, [pc, #20]	; (900180d8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
900180c2:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
900180c6:	f9b3 3000 	ldrsh.w	r3, [r3]
900180ca:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
900180ce:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
900180d2:	4770      	bx	lr
900180d4:	24039ac0 	.word	0x24039ac0
900180d8:	24039ac2 	.word	0x24039ac2

900180dc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
900180dc:	4b03      	ldr	r3, [pc, #12]	; (900180ec <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
900180de:	6818      	ldr	r0, [r3, #0]
900180e0:	b110      	cbz	r0, 900180e8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
900180e2:	6803      	ldr	r3, [r0, #0]
900180e4:	699b      	ldr	r3, [r3, #24]
900180e6:	4718      	bx	r3
900180e8:	4770      	bx	lr
900180ea:	bf00      	nop
900180ec:	24039b10 	.word	0x24039b10

900180f0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
900180f0:	4770      	bx	lr
	...

900180f4 <_ZN8touchgfx11Application4drawEv>:
900180f4:	4b09      	ldr	r3, [pc, #36]	; (9001811c <_ZN8touchgfx11Application4drawEv+0x28>)
900180f6:	b507      	push	{r0, r1, r2, lr}
900180f8:	f9b3 2000 	ldrsh.w	r2, [r3]
900180fc:	2100      	movs	r1, #0
900180fe:	4b08      	ldr	r3, [pc, #32]	; (90018120 <_ZN8touchgfx11Application4drawEv+0x2c>)
90018100:	9100      	str	r1, [sp, #0]
90018102:	4669      	mov	r1, sp
90018104:	f9b3 3000 	ldrsh.w	r3, [r3]
90018108:	f8ad 2004 	strh.w	r2, [sp, #4]
9001810c:	f8ad 3006 	strh.w	r3, [sp, #6]
90018110:	6803      	ldr	r3, [r0, #0]
90018112:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90018114:	4798      	blx	r3
90018116:	b003      	add	sp, #12
90018118:	f85d fb04 	ldr.w	pc, [sp], #4
9001811c:	24039ac0 	.word	0x24039ac0
90018120:	24039ac2 	.word	0x24039ac2

90018124 <_ZN8touchgfx11Application10invalidateEv>:
90018124:	4b09      	ldr	r3, [pc, #36]	; (9001814c <_ZN8touchgfx11Application10invalidateEv+0x28>)
90018126:	b082      	sub	sp, #8
90018128:	2100      	movs	r1, #0
9001812a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001812e:	4b08      	ldr	r3, [pc, #32]	; (90018150 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90018130:	f8ad 2004 	strh.w	r2, [sp, #4]
90018134:	aa02      	add	r2, sp, #8
90018136:	f9b3 3000 	ldrsh.w	r3, [r3]
9001813a:	9100      	str	r1, [sp, #0]
9001813c:	f8ad 3006 	strh.w	r3, [sp, #6]
90018140:	6803      	ldr	r3, [r0, #0]
90018142:	e912 0006 	ldmdb	r2, {r1, r2}
90018146:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90018148:	b002      	add	sp, #8
9001814a:	4718      	bx	r3
9001814c:	24039ac0 	.word	0x24039ac0
90018150:	24039ac2 	.word	0x24039ac2

90018154 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90018154:	4b03      	ldr	r3, [pc, #12]	; (90018164 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90018156:	6818      	ldr	r0, [r3, #0]
90018158:	b110      	cbz	r0, 90018160 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
9001815a:	6803      	ldr	r3, [r0, #0]
9001815c:	69db      	ldr	r3, [r3, #28]
9001815e:	4718      	bx	r3
90018160:	4770      	bx	lr
90018162:	bf00      	nop
90018164:	24039b10 	.word	0x24039b10

90018168 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90018168:	4b03      	ldr	r3, [pc, #12]	; (90018178 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
9001816a:	6818      	ldr	r0, [r3, #0]
9001816c:	b110      	cbz	r0, 90018174 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
9001816e:	6803      	ldr	r3, [r0, #0]
90018170:	6a1b      	ldr	r3, [r3, #32]
90018172:	4718      	bx	r3
90018174:	4770      	bx	lr
90018176:	bf00      	nop
90018178:	24039b10 	.word	0x24039b10

9001817c <_ZN8touchgfx11Application16clearCachedAreasEv>:
9001817c:	2300      	movs	r3, #0
9001817e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
90018182:	4770      	bx	lr

90018184 <_ZN8touchgfx11Application14handleKeyEventEh>:
90018184:	4b03      	ldr	r3, [pc, #12]	; (90018194 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90018186:	6818      	ldr	r0, [r3, #0]
90018188:	b110      	cbz	r0, 90018190 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
9001818a:	6803      	ldr	r3, [r0, #0]
9001818c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001818e:	4718      	bx	r3
90018190:	4770      	bx	lr
90018192:	bf00      	nop
90018194:	24039b10 	.word	0x24039b10

90018198 <_ZN8touchgfx11ApplicationD1Ev>:
90018198:	4770      	bx	lr

9001819a <_ZN8touchgfx11ApplicationD0Ev>:
9001819a:	b510      	push	{r4, lr}
9001819c:	4604      	mov	r4, r0
9001819e:	f44f 719e 	mov.w	r1, #316	; 0x13c
900181a2:	f011 fa1f 	bl	900295e4 <_ZdlPvj>
900181a6:	4620      	mov	r0, r4
900181a8:	bd10      	pop	{r4, pc}

900181aa <_ZNK8touchgfx4Rect9intersectERKS0_>:
900181aa:	b510      	push	{r4, lr}
900181ac:	f9b1 4000 	ldrsh.w	r4, [r1]
900181b0:	888a      	ldrh	r2, [r1, #4]
900181b2:	f9b0 3000 	ldrsh.w	r3, [r0]
900181b6:	4422      	add	r2, r4
900181b8:	b212      	sxth	r2, r2
900181ba:	4293      	cmp	r3, r2
900181bc:	da15      	bge.n	900181ea <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900181be:	8882      	ldrh	r2, [r0, #4]
900181c0:	4413      	add	r3, r2
900181c2:	b21b      	sxth	r3, r3
900181c4:	429c      	cmp	r4, r3
900181c6:	da10      	bge.n	900181ea <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900181c8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900181cc:	88c9      	ldrh	r1, [r1, #6]
900181ce:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
900181d2:	4419      	add	r1, r3
900181d4:	b209      	sxth	r1, r1
900181d6:	428a      	cmp	r2, r1
900181d8:	da07      	bge.n	900181ea <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900181da:	88c0      	ldrh	r0, [r0, #6]
900181dc:	4410      	add	r0, r2
900181de:	b200      	sxth	r0, r0
900181e0:	4283      	cmp	r3, r0
900181e2:	bfac      	ite	ge
900181e4:	2000      	movge	r0, #0
900181e6:	2001      	movlt	r0, #1
900181e8:	bd10      	pop	{r4, pc}
900181ea:	2000      	movs	r0, #0
900181ec:	e7fc      	b.n	900181e8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

900181ee <_ZN8touchgfx4Rect10restrictToEss>:
900181ee:	f9b0 3000 	ldrsh.w	r3, [r0]
900181f2:	2b00      	cmp	r3, #0
900181f4:	b510      	push	{r4, lr}
900181f6:	da04      	bge.n	90018202 <_ZN8touchgfx4Rect10restrictToEss+0x14>
900181f8:	8884      	ldrh	r4, [r0, #4]
900181fa:	4423      	add	r3, r4
900181fc:	8083      	strh	r3, [r0, #4]
900181fe:	2300      	movs	r3, #0
90018200:	8003      	strh	r3, [r0, #0]
90018202:	f9b0 4000 	ldrsh.w	r4, [r0]
90018206:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001820a:	1b09      	subs	r1, r1, r4
9001820c:	428b      	cmp	r3, r1
9001820e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90018212:	bfc8      	it	gt
90018214:	8081      	strhgt	r1, [r0, #4]
90018216:	2b00      	cmp	r3, #0
90018218:	da04      	bge.n	90018224 <_ZN8touchgfx4Rect10restrictToEss+0x36>
9001821a:	88c1      	ldrh	r1, [r0, #6]
9001821c:	440b      	add	r3, r1
9001821e:	80c3      	strh	r3, [r0, #6]
90018220:	2300      	movs	r3, #0
90018222:	8043      	strh	r3, [r0, #2]
90018224:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90018228:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
9001822c:	1a52      	subs	r2, r2, r1
9001822e:	4293      	cmp	r3, r2
90018230:	bfc8      	it	gt
90018232:	80c2      	strhgt	r2, [r0, #6]
90018234:	bd10      	pop	{r4, pc}
	...

90018238 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90018238:	4b10      	ldr	r3, [pc, #64]	; (9001827c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
9001823a:	b510      	push	{r4, lr}
9001823c:	460c      	mov	r4, r1
9001823e:	f9b3 2000 	ldrsh.w	r2, [r3]
90018242:	4b0f      	ldr	r3, [pc, #60]	; (90018280 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90018244:	4620      	mov	r0, r4
90018246:	f9b3 1000 	ldrsh.w	r1, [r3]
9001824a:	f7ff ffd0 	bl	900181ee <_ZN8touchgfx4Rect10restrictToEss>
9001824e:	4b0d      	ldr	r3, [pc, #52]	; (90018284 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90018250:	6818      	ldr	r0, [r3, #0]
90018252:	b190      	cbz	r0, 9001827a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90018254:	6803      	ldr	r3, [r0, #0]
90018256:	4621      	mov	r1, r4
90018258:	689b      	ldr	r3, [r3, #8]
9001825a:	4798      	blx	r3
9001825c:	4b0a      	ldr	r3, [pc, #40]	; (90018288 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
9001825e:	6818      	ldr	r0, [r3, #0]
90018260:	b118      	cbz	r0, 9001826a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90018262:	6803      	ldr	r3, [r0, #0]
90018264:	4621      	mov	r1, r4
90018266:	689b      	ldr	r3, [r3, #8]
90018268:	4798      	blx	r3
9001826a:	4b08      	ldr	r3, [pc, #32]	; (9001828c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
9001826c:	4621      	mov	r1, r4
9001826e:	6818      	ldr	r0, [r3, #0]
90018270:	6803      	ldr	r3, [r0, #0]
90018272:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90018276:	69db      	ldr	r3, [r3, #28]
90018278:	4718      	bx	r3
9001827a:	bd10      	pop	{r4, pc}
9001827c:	24039ac2 	.word	0x24039ac2
90018280:	24039ac0 	.word	0x24039ac0
90018284:	24039b10 	.word	0x24039b10
90018288:	24039b0c 	.word	0x24039b0c
9001828c:	24039acc 	.word	0x24039acc

90018290 <_ZNK8touchgfx4Rect8includesERKS0_>:
90018290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018292:	4606      	mov	r6, r0
90018294:	4608      	mov	r0, r1
90018296:	460f      	mov	r7, r1
90018298:	f7fa fdd5 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
9001829c:	b9e8      	cbnz	r0, 900182da <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001829e:	f9b7 5000 	ldrsh.w	r5, [r7]
900182a2:	f9b6 4000 	ldrsh.w	r4, [r6]
900182a6:	42a5      	cmp	r5, r4
900182a8:	db17      	blt.n	900182da <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900182aa:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900182ae:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
900182b2:	429a      	cmp	r2, r3
900182b4:	db11      	blt.n	900182da <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900182b6:	88b9      	ldrh	r1, [r7, #4]
900182b8:	440d      	add	r5, r1
900182ba:	88b1      	ldrh	r1, [r6, #4]
900182bc:	440c      	add	r4, r1
900182be:	b22d      	sxth	r5, r5
900182c0:	b224      	sxth	r4, r4
900182c2:	42a5      	cmp	r5, r4
900182c4:	dc09      	bgt.n	900182da <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900182c6:	88f8      	ldrh	r0, [r7, #6]
900182c8:	4410      	add	r0, r2
900182ca:	88f2      	ldrh	r2, [r6, #6]
900182cc:	4413      	add	r3, r2
900182ce:	b200      	sxth	r0, r0
900182d0:	b21b      	sxth	r3, r3
900182d2:	4298      	cmp	r0, r3
900182d4:	bfcc      	ite	gt
900182d6:	2000      	movgt	r0, #0
900182d8:	2001      	movle	r0, #1
900182da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900182dc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
900182dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900182de:	4604      	mov	r4, r0
900182e0:	4608      	mov	r0, r1
900182e2:	460d      	mov	r5, r1
900182e4:	f7fa fdaf 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
900182e8:	b978      	cbnz	r0, 9001830a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
900182ea:	4620      	mov	r0, r4
900182ec:	f7fa fdab 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
900182f0:	f9b5 6000 	ldrsh.w	r6, [r5]
900182f4:	b150      	cbz	r0, 9001830c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
900182f6:	8026      	strh	r6, [r4, #0]
900182f8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900182fc:	8063      	strh	r3, [r4, #2]
900182fe:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90018302:	80a3      	strh	r3, [r4, #4]
90018304:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90018308:	80e3      	strh	r3, [r4, #6]
9001830a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001830c:	f9b4 1000 	ldrsh.w	r1, [r4]
90018310:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90018314:	42b1      	cmp	r1, r6
90018316:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001831a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001831e:	460f      	mov	r7, r1
90018320:	88ed      	ldrh	r5, [r5, #6]
90018322:	bfa8      	it	ge
90018324:	4637      	movge	r7, r6
90018326:	4293      	cmp	r3, r2
90018328:	4618      	mov	r0, r3
9001832a:	4466      	add	r6, ip
9001832c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90018330:	bfa8      	it	ge
90018332:	4610      	movge	r0, r2
90018334:	442a      	add	r2, r5
90018336:	88e5      	ldrh	r5, [r4, #6]
90018338:	4461      	add	r1, ip
9001833a:	b236      	sxth	r6, r6
9001833c:	8027      	strh	r7, [r4, #0]
9001833e:	442b      	add	r3, r5
90018340:	b209      	sxth	r1, r1
90018342:	b212      	sxth	r2, r2
90018344:	8060      	strh	r0, [r4, #2]
90018346:	b21b      	sxth	r3, r3
90018348:	428e      	cmp	r6, r1
9001834a:	bfac      	ite	ge
9001834c:	ebc7 0106 	rsbge	r1, r7, r6
90018350:	ebc7 0101 	rsblt	r1, r7, r1
90018354:	429a      	cmp	r2, r3
90018356:	bfac      	ite	ge
90018358:	ebc0 0202 	rsbge	r2, r0, r2
9001835c:	ebc0 0203 	rsblt	r2, r0, r3
90018360:	80a1      	strh	r1, [r4, #4]
90018362:	80e2      	strh	r2, [r4, #6]
90018364:	e7d1      	b.n	9001830a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90018368 <_ZN8touchgfx11Application11getInstanceEv>:
90018368:	4b01      	ldr	r3, [pc, #4]	; (90018370 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
9001836a:	6818      	ldr	r0, [r3, #0]
9001836c:	4770      	bx	lr
9001836e:	bf00      	nop
90018370:	24039b20 	.word	0x24039b20

90018374 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
90018374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018376:	4b10      	ldr	r3, [pc, #64]	; (900183b8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
90018378:	4605      	mov	r5, r0
9001837a:	781b      	ldrb	r3, [r3, #0]
9001837c:	b1d3      	cbz	r3, 900183b4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
9001837e:	4b0f      	ldr	r3, [pc, #60]	; (900183bc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
90018380:	f100 06ee 	add.w	r6, r0, #238	; 0xee
90018384:	4f0e      	ldr	r7, [pc, #56]	; (900183c0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
90018386:	881c      	ldrh	r4, [r3, #0]
90018388:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
9001838c:	42a3      	cmp	r3, r4
9001838e:	d90e      	bls.n	900183ae <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
90018390:	683b      	ldr	r3, [r7, #0]
90018392:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90018396:	b10a      	cbz	r2, 9001839c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
90018398:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9001839a:	b900      	cbnz	r0, 9001839e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
9001839c:	6898      	ldr	r0, [r3, #8]
9001839e:	6803      	ldr	r3, [r0, #0]
900183a0:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
900183a4:	3401      	adds	r4, #1
900183a6:	69db      	ldr	r3, [r3, #28]
900183a8:	4798      	blx	r3
900183aa:	b2a4      	uxth	r4, r4
900183ac:	e7ec      	b.n	90018388 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
900183ae:	2300      	movs	r3, #0
900183b0:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
900183b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900183b6:	bf00      	nop
900183b8:	24039aca 	.word	0x24039aca
900183bc:	24000084 	.word	0x24000084
900183c0:	24039acc 	.word	0x24039acc

900183c4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
900183c4:	2300      	movs	r3, #0
900183c6:	b510      	push	{r4, lr}
900183c8:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
900183cc:	4604      	mov	r4, r0
900183ce:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
900183d2:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
900183d6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
900183da:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
900183de:	429a      	cmp	r2, r3
900183e0:	d90e      	bls.n	90018400 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
900183e2:	18e2      	adds	r2, r4, r3
900183e4:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
900183e8:	b122      	cbz	r2, 900183f4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
900183ea:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
900183ee:	6803      	ldr	r3, [r0, #0]
900183f0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900183f2:	4798      	blx	r3
900183f4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
900183f8:	3301      	adds	r3, #1
900183fa:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
900183fe:	e7ea      	b.n	900183d6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90018400:	bd10      	pop	{r4, pc}

90018402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90018402:	2300      	movs	r3, #0
90018404:	f100 0284 	add.w	r2, r0, #132	; 0x84
90018408:	30a4      	adds	r0, #164	; 0xa4
9001840a:	f820 3c24 	strh.w	r3, [r0, #-36]
9001840e:	f802 3b01 	strb.w	r3, [r2], #1
90018412:	4282      	cmp	r2, r0
90018414:	d1fb      	bne.n	9001840e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90018416:	4770      	bx	lr

90018418 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90018418:	b570      	push	{r4, r5, r6, lr}
9001841a:	4c0b      	ldr	r4, [pc, #44]	; (90018448 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
9001841c:	4605      	mov	r5, r0
9001841e:	460e      	mov	r6, r1
90018420:	6820      	ldr	r0, [r4, #0]
90018422:	b110      	cbz	r0, 9001842a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90018424:	6803      	ldr	r3, [r0, #0]
90018426:	695b      	ldr	r3, [r3, #20]
90018428:	4798      	blx	r3
9001842a:	1d28      	adds	r0, r5, #4
9001842c:	f7ff ffe9 	bl	90018402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90018430:	6026      	str	r6, [r4, #0]
90018432:	6833      	ldr	r3, [r6, #0]
90018434:	4630      	mov	r0, r6
90018436:	68db      	ldr	r3, [r3, #12]
90018438:	4798      	blx	r3
9001843a:	682b      	ldr	r3, [r5, #0]
9001843c:	4628      	mov	r0, r5
9001843e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90018440:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018444:	4718      	bx	r3
90018446:	bf00      	nop
90018448:	24039b10 	.word	0x24039b10

9001844c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
9001844c:	2300      	movs	r3, #0
9001844e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
90018452:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
90018456:	461a      	mov	r2, r3
90018458:	b5f0      	push	{r4, r5, r6, r7, lr}
9001845a:	461c      	mov	r4, r3
9001845c:	461d      	mov	r5, r3
9001845e:	459c      	cmp	ip, r3
90018460:	dd1a      	ble.n	90018498 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90018462:	18c6      	adds	r6, r0, r3
90018464:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
90018468:	b16e      	cbz	r6, 90018486 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
9001846a:	429a      	cmp	r2, r3
9001846c:	d008      	beq.n	90018480 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
9001846e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90018472:	fa1f fe82 	uxth.w	lr, r2
90018476:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
9001847a:	1887      	adds	r7, r0, r2
9001847c:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
90018480:	3201      	adds	r2, #1
90018482:	3301      	adds	r3, #1
90018484:	e7eb      	b.n	9001845e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90018486:	4299      	cmp	r1, r3
90018488:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
9001848c:	bfa8      	it	ge
9001848e:	3501      	addge	r5, #1
90018490:	429e      	cmp	r6, r3
90018492:	bfc8      	it	gt
90018494:	3401      	addgt	r4, #1
90018496:	e7f4      	b.n	90018482 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90018498:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
9001849c:	1b49      	subs	r1, r1, r5
9001849e:	1b1b      	subs	r3, r3, r4
900184a0:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
900184a4:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
900184a8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
900184ac:	4293      	cmp	r3, r2
900184ae:	dd03      	ble.n	900184b8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
900184b0:	3b01      	subs	r3, #1
900184b2:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
900184b6:	e7f7      	b.n	900184a8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
900184b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

900184bc <_ZN8touchgfx11Application15handleTickEventEv>:
900184bc:	b570      	push	{r4, r5, r6, lr}
900184be:	4d16      	ldr	r5, [pc, #88]	; (90018518 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
900184c0:	4604      	mov	r4, r0
900184c2:	6828      	ldr	r0, [r5, #0]
900184c4:	b140      	cbz	r0, 900184d8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900184c6:	7a03      	ldrb	r3, [r0, #8]
900184c8:	b933      	cbnz	r3, 900184d8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900184ca:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
900184ce:	6803      	ldr	r3, [r0, #0]
900184d0:	689b      	ldr	r3, [r3, #8]
900184d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900184d6:	4718      	bx	r3
900184d8:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
900184dc:	4e0f      	ldr	r6, [pc, #60]	; (9001851c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900184de:	b973      	cbnz	r3, 900184fe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900184e0:	b168      	cbz	r0, 900184fe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900184e2:	7a03      	ldrb	r3, [r0, #8]
900184e4:	b15b      	cbz	r3, 900184fe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900184e6:	6830      	ldr	r0, [r6, #0]
900184e8:	b110      	cbz	r0, 900184f0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
900184ea:	6803      	ldr	r3, [r0, #0]
900184ec:	691b      	ldr	r3, [r3, #16]
900184ee:	4798      	blx	r3
900184f0:	6828      	ldr	r0, [r5, #0]
900184f2:	6803      	ldr	r3, [r0, #0]
900184f4:	68db      	ldr	r3, [r3, #12]
900184f6:	4798      	blx	r3
900184f8:	2301      	movs	r3, #1
900184fa:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
900184fe:	3404      	adds	r4, #4
90018500:	4620      	mov	r0, r4
90018502:	f7ff ff5f 	bl	900183c4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90018506:	4620      	mov	r0, r4
90018508:	f7ff ffa0 	bl	9001844c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001850c:	6830      	ldr	r0, [r6, #0]
9001850e:	b110      	cbz	r0, 90018516 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90018510:	6803      	ldr	r3, [r0, #0]
90018512:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90018514:	e7dd      	b.n	900184d2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90018516:	bd70      	pop	{r4, r5, r6, pc}
90018518:	24039b14 	.word	0x24039b14
9001851c:	24039b10 	.word	0x24039b10

90018520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90018520:	4603      	mov	r3, r0
90018522:	f100 0140 	add.w	r1, r0, #64	; 0x40
90018526:	2200      	movs	r2, #0
90018528:	801a      	strh	r2, [r3, #0]
9001852a:	3308      	adds	r3, #8
9001852c:	f823 2c06 	strh.w	r2, [r3, #-6]
90018530:	f823 2c04 	strh.w	r2, [r3, #-4]
90018534:	f823 2c02 	strh.w	r2, [r3, #-2]
90018538:	428b      	cmp	r3, r1
9001853a:	d1f5      	bne.n	90018528 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
9001853c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
90018540:	4770      	bx	lr
	...

90018544 <_ZN8touchgfx11ApplicationC1Ev>:
90018544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018546:	4b1d      	ldr	r3, [pc, #116]	; (900185bc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90018548:	4606      	mov	r6, r0
9001854a:	4604      	mov	r4, r0
9001854c:	2500      	movs	r5, #0
9001854e:	f846 3b04 	str.w	r3, [r6], #4
90018552:	22a8      	movs	r2, #168	; 0xa8
90018554:	2100      	movs	r1, #0
90018556:	4630      	mov	r0, r6
90018558:	f011 fafa 	bl	90029b50 <memset>
9001855c:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
90018560:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90018564:	4f16      	ldr	r7, [pc, #88]	; (900185c0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90018566:	f7ff ffdb 	bl	90018520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001856a:	f104 00ee 	add.w	r0, r4, #238	; 0xee
9001856e:	f7ff ffd7 	bl	90018520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90018572:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
90018576:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
9001857a:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
9001857e:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
90018582:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
90018586:	490f      	ldr	r1, [pc, #60]	; (900185c4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90018588:	480f      	ldr	r0, [pc, #60]	; (900185c8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
9001858a:	f010 fbdb 	bl	90028d44 <CRC_Lock>
9001858e:	4b0f      	ldr	r3, [pc, #60]	; (900185cc <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90018590:	b158      	cbz	r0, 900185aa <_ZN8touchgfx11ApplicationC1Ev+0x66>
90018592:	801d      	strh	r5, [r3, #0]
90018594:	2300      	movs	r3, #0
90018596:	4a0e      	ldr	r2, [pc, #56]	; (900185d0 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90018598:	4630      	mov	r0, r6
9001859a:	6013      	str	r3, [r2, #0]
9001859c:	4a0d      	ldr	r2, [pc, #52]	; (900185d4 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
9001859e:	603b      	str	r3, [r7, #0]
900185a0:	6013      	str	r3, [r2, #0]
900185a2:	f7ff ff2e 	bl	90018402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900185a6:	4620      	mov	r0, r4
900185a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900185aa:	f44f 6280 	mov.w	r2, #1024	; 0x400
900185ae:	2002      	movs	r0, #2
900185b0:	801a      	strh	r2, [r3, #0]
900185b2:	6038      	str	r0, [r7, #0]
900185b4:	f001 fb48 	bl	90019c48 <_ZN8touchgfx6Screen4drawEv>
900185b8:	e7ec      	b.n	90018594 <_ZN8touchgfx11ApplicationC1Ev+0x50>
900185ba:	bf00      	nop
900185bc:	9002dd48 	.word	0x9002dd48
900185c0:	24039b10 	.word	0x24039b10
900185c4:	b5e8b5cd 	.word	0xb5e8b5cd
900185c8:	f407a5c2 	.word	0xf407a5c2
900185cc:	24000084 	.word	0x24000084
900185d0:	24039b20 	.word	0x24039b20
900185d4:	24039b14 	.word	0x24039b14

900185d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
900185d8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
900185dc:	3b01      	subs	r3, #1
900185de:	b29b      	uxth	r3, r3
900185e0:	428b      	cmp	r3, r1
900185e2:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
900185e6:	b510      	push	{r4, lr}
900185e8:	d908      	bls.n	900185fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
900185ea:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
900185ee:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
900185f2:	681a      	ldr	r2, [r3, #0]
900185f4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
900185f8:	685a      	ldr	r2, [r3, #4]
900185fa:	6062      	str	r2, [r4, #4]
900185fc:	bd10      	pop	{r4, pc}
	...

90018600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90018600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018604:	b08f      	sub	sp, #60	; 0x3c
90018606:	4b8f      	ldr	r3, [pc, #572]	; (90018844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90018608:	4683      	mov	fp, r0
9001860a:	ac0a      	add	r4, sp, #40	; 0x28
9001860c:	e884 0006 	stmia.w	r4, {r1, r2}
90018610:	f9b3 2000 	ldrsh.w	r2, [r3]
90018614:	4620      	mov	r0, r4
90018616:	4b8c      	ldr	r3, [pc, #560]	; (90018848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90018618:	f9b3 1000 	ldrsh.w	r1, [r3]
9001861c:	f7ff fde7 	bl	900181ee <_ZN8touchgfx4Rect10restrictToEss>
90018620:	4620      	mov	r0, r4
90018622:	f7fa fc10 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
90018626:	2800      	cmp	r0, #0
90018628:	d16a      	bne.n	90018700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001862a:	9403      	str	r4, [sp, #12]
9001862c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90018630:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90018634:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90018638:	9301      	str	r3, [sp, #4]
9001863a:	35a4      	adds	r5, #164	; 0xa4
9001863c:	b15c      	cbz	r4, 90018656 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
9001863e:	4629      	mov	r1, r5
90018640:	9803      	ldr	r0, [sp, #12]
90018642:	f7ff fe25 	bl	90018290 <_ZNK8touchgfx4Rect8includesERKS0_>
90018646:	3c01      	subs	r4, #1
90018648:	b118      	cbz	r0, 90018652 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
9001864a:	b2a1      	uxth	r1, r4
9001864c:	9801      	ldr	r0, [sp, #4]
9001864e:	f7ff ffc3 	bl	900185d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018652:	3d08      	subs	r5, #8
90018654:	e7f2      	b.n	9001863c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
90018656:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
9001865a:	f10a 33ff 	add.w	r3, sl, #4294967295
9001865e:	f8cd a010 	str.w	sl, [sp, #16]
90018662:	9302      	str	r3, [sp, #8]
90018664:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90018668:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
9001866c:	9306      	str	r3, [sp, #24]
9001866e:	445c      	add	r4, fp
90018670:	2500      	movs	r5, #0
90018672:	4626      	mov	r6, r4
90018674:	f8cd a014 	str.w	sl, [sp, #20]
90018678:	462f      	mov	r7, r5
9001867a:	9b05      	ldr	r3, [sp, #20]
9001867c:	2b00      	cmp	r3, #0
9001867e:	d073      	beq.n	90018768 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90018680:	9903      	ldr	r1, [sp, #12]
90018682:	4630      	mov	r0, r6
90018684:	f7ff fd91 	bl	900181aa <_ZNK8touchgfx4Rect9intersectERKS0_>
90018688:	b350      	cbz	r0, 900186e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
9001868a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
9001868e:	f9b6 c000 	ldrsh.w	ip, [r6]
90018692:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
90018696:	45e6      	cmp	lr, ip
90018698:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
9001869c:	db33      	blt.n	90018706 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
9001869e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
900186a2:	88b3      	ldrh	r3, [r6, #4]
900186a4:	4472      	add	r2, lr
900186a6:	4463      	add	r3, ip
900186a8:	b212      	sxth	r2, r2
900186aa:	b21b      	sxth	r3, r3
900186ac:	429a      	cmp	r2, r3
900186ae:	dc2a      	bgt.n	90018706 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900186b0:	fa1f f289 	uxth.w	r2, r9
900186b4:	88f3      	ldrh	r3, [r6, #6]
900186b6:	45c8      	cmp	r8, r9
900186b8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
900186bc:	4413      	add	r3, r2
900186be:	fa1f fc88 	uxth.w	ip, r8
900186c2:	b29b      	uxth	r3, r3
900186c4:	fa0f fe83 	sxth.w	lr, r3
900186c8:	db0f      	blt.n	900186ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900186ca:	eba3 030c 	sub.w	r3, r3, ip
900186ce:	1ac9      	subs	r1, r1, r3
900186d0:	b209      	sxth	r1, r1
900186d2:	2900      	cmp	r1, #0
900186d4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900186d8:	dd12      	ble.n	90018700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900186da:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
900186de:	4605      	mov	r5, r0
900186e0:	9b05      	ldr	r3, [sp, #20]
900186e2:	3e08      	subs	r6, #8
900186e4:	3b01      	subs	r3, #1
900186e6:	9305      	str	r3, [sp, #20]
900186e8:	e7c7      	b.n	9001867a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
900186ea:	4461      	add	r1, ip
900186ec:	b209      	sxth	r1, r1
900186ee:	4571      	cmp	r1, lr
900186f0:	dc38      	bgt.n	90018764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900186f2:	eba2 020c 	sub.w	r2, r2, ip
900186f6:	b212      	sxth	r2, r2
900186f8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
900186fc:	2a00      	cmp	r2, #0
900186fe:	dcee      	bgt.n	900186de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90018700:	b00f      	add	sp, #60	; 0x3c
90018702:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018706:	45c8      	cmp	r8, r9
90018708:	db2c      	blt.n	90018764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001870a:	88f3      	ldrh	r3, [r6, #6]
9001870c:	4499      	add	r9, r3
9001870e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
90018712:	4498      	add	r8, r3
90018714:	fa0f f989 	sxth.w	r9, r9
90018718:	fa0f f888 	sxth.w	r8, r8
9001871c:	45c1      	cmp	r9, r8
9001871e:	db21      	blt.n	90018764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90018720:	fa1f f28c 	uxth.w	r2, ip
90018724:	88b3      	ldrh	r3, [r6, #4]
90018726:	45e6      	cmp	lr, ip
90018728:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001872c:	4413      	add	r3, r2
9001872e:	fa1f f88e 	uxth.w	r8, lr
90018732:	b29b      	uxth	r3, r3
90018734:	fa0f f983 	sxth.w	r9, r3
90018738:	db0a      	blt.n	90018750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
9001873a:	eba3 0308 	sub.w	r3, r3, r8
9001873e:	1ac9      	subs	r1, r1, r3
90018740:	b209      	sxth	r1, r1
90018742:	2900      	cmp	r1, #0
90018744:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
90018748:	ddda      	ble.n	90018700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001874a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001874e:	e7c6      	b.n	900186de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90018750:	4441      	add	r1, r8
90018752:	b209      	sxth	r1, r1
90018754:	4549      	cmp	r1, r9
90018756:	dc05      	bgt.n	90018764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90018758:	eba2 0208 	sub.w	r2, r2, r8
9001875c:	b212      	sxth	r2, r2
9001875e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
90018762:	e7cb      	b.n	900186fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90018764:	4607      	mov	r7, r0
90018766:	e7bb      	b.n	900186e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90018768:	2d00      	cmp	r5, #0
9001876a:	d181      	bne.n	90018670 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
9001876c:	2f00      	cmp	r7, #0
9001876e:	f000 81dd 	beq.w	90018b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90018772:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
90018776:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
9001877a:	b2b3      	uxth	r3, r6
9001877c:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
90018780:	9305      	str	r3, [sp, #20]
90018782:	9a05      	ldr	r2, [sp, #20]
90018784:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90018788:	4413      	add	r3, r2
9001878a:	b2ba      	uxth	r2, r7
9001878c:	4492      	add	sl, r2
9001878e:	b29b      	uxth	r3, r3
90018790:	fa1f fa8a 	uxth.w	sl, sl
90018794:	fa0f f883 	sxth.w	r8, r3
90018798:	fa0f f98a 	sxth.w	r9, sl
9001879c:	e9cd 2307 	strd	r2, r3, [sp, #28]
900187a0:	9b04      	ldr	r3, [sp, #16]
900187a2:	2b00      	cmp	r3, #0
900187a4:	d052      	beq.n	9001884c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
900187a6:	9903      	ldr	r1, [sp, #12]
900187a8:	4620      	mov	r0, r4
900187aa:	f7ff fcfe 	bl	900181aa <_ZNK8touchgfx4Rect9intersectERKS0_>
900187ae:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
900187b2:	b1c0      	cbz	r0, 900187e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900187b4:	f9b4 e000 	ldrsh.w	lr, [r4]
900187b8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900187bc:	4576      	cmp	r6, lr
900187be:	dc22      	bgt.n	90018806 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
900187c0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900187c4:	44f4      	add	ip, lr
900187c6:	fa0f fc8c 	sxth.w	ip, ip
900187ca:	45e0      	cmp	r8, ip
900187cc:	db1b      	blt.n	90018806 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
900187ce:	428f      	cmp	r7, r1
900187d0:	fa1f fc81 	uxth.w	ip, r1
900187d4:	88e1      	ldrh	r1, [r4, #6]
900187d6:	dc0d      	bgt.n	900187f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900187d8:	ebaa 0c0c 	sub.w	ip, sl, ip
900187dc:	f8a4 9002 	strh.w	r9, [r4, #2]
900187e0:	eba1 010c 	sub.w	r1, r1, ip
900187e4:	80e1      	strh	r1, [r4, #6]
900187e6:	4628      	mov	r0, r5
900187e8:	9904      	ldr	r1, [sp, #16]
900187ea:	3c08      	subs	r4, #8
900187ec:	4605      	mov	r5, r0
900187ee:	3901      	subs	r1, #1
900187f0:	9104      	str	r1, [sp, #16]
900187f2:	e7d3      	b.n	9001879c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
900187f4:	4461      	add	r1, ip
900187f6:	b209      	sxth	r1, r1
900187f8:	4549      	cmp	r1, r9
900187fa:	dcf5      	bgt.n	900187e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900187fc:	eba2 0c0c 	sub.w	ip, r2, ip
90018800:	f8a4 c006 	strh.w	ip, [r4, #6]
90018804:	e7ef      	b.n	900187e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90018806:	428f      	cmp	r7, r1
90018808:	dcee      	bgt.n	900187e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001880a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001880e:	4461      	add	r1, ip
90018810:	b209      	sxth	r1, r1
90018812:	4589      	cmp	r9, r1
90018814:	dbe8      	blt.n	900187e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90018816:	4576      	cmp	r6, lr
90018818:	fa1f fc8e 	uxth.w	ip, lr
9001881c:	88a1      	ldrh	r1, [r4, #4]
9001881e:	dc07      	bgt.n	90018830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90018820:	eba3 0c0c 	sub.w	ip, r3, ip
90018824:	f8a4 8000 	strh.w	r8, [r4]
90018828:	eba1 010c 	sub.w	r1, r1, ip
9001882c:	80a1      	strh	r1, [r4, #4]
9001882e:	e7da      	b.n	900187e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90018830:	4461      	add	r1, ip
90018832:	b209      	sxth	r1, r1
90018834:	4588      	cmp	r8, r1
90018836:	dbd7      	blt.n	900187e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90018838:	9905      	ldr	r1, [sp, #20]
9001883a:	eba1 0c0c 	sub.w	ip, r1, ip
9001883e:	f8a4 c004 	strh.w	ip, [r4, #4]
90018842:	e7d0      	b.n	900187e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90018844:	24039ac2 	.word	0x24039ac2
90018848:	24039ac0 	.word	0x24039ac0
9001884c:	2d00      	cmp	r5, #0
9001884e:	f000 816d 	beq.w	90018b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90018852:	9b06      	ldr	r3, [sp, #24]
90018854:	445b      	add	r3, fp
90018856:	461c      	mov	r4, r3
90018858:	9b02      	ldr	r3, [sp, #8]
9001885a:	3301      	adds	r3, #1
9001885c:	f000 8166 	beq.w	90018b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90018860:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
90018864:	9803      	ldr	r0, [sp, #12]
90018866:	4629      	mov	r1, r5
90018868:	f7ff fd12 	bl	90018290 <_ZNK8touchgfx4Rect8includesERKS0_>
9001886c:	b120      	cbz	r0, 90018878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
9001886e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90018872:	9801      	ldr	r0, [sp, #4]
90018874:	f7ff feb0 	bl	900185d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018878:	9903      	ldr	r1, [sp, #12]
9001887a:	4628      	mov	r0, r5
9001887c:	f7ff fc95 	bl	900181aa <_ZNK8touchgfx4Rect9intersectERKS0_>
90018880:	2800      	cmp	r0, #0
90018882:	f000 809c 	beq.w	900189be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90018886:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
9001888a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
9001888e:	fa1f f189 	uxth.w	r1, r9
90018892:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90018896:	9309      	str	r3, [sp, #36]	; 0x24
90018898:	eb01 0c03 	add.w	ip, r1, r3
9001889c:	b283      	uxth	r3, r0
9001889e:	4548      	cmp	r0, r9
900188a0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
900188a4:	fa1f fa8c 	uxth.w	sl, ip
900188a8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
900188ac:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
900188b0:	eb03 050c 	add.w	r5, r3, ip
900188b4:	b2ad      	uxth	r5, r5
900188b6:	9505      	str	r5, [sp, #20]
900188b8:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
900188bc:	9504      	str	r5, [sp, #16]
900188be:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
900188c2:	f340 8099 	ble.w	900189f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
900188c6:	1a5b      	subs	r3, r3, r1
900188c8:	4596      	cmp	lr, r2
900188ca:	fa0f f08a 	sxth.w	r0, sl
900188ce:	b29b      	uxth	r3, r3
900188d0:	b21e      	sxth	r6, r3
900188d2:	dd2e      	ble.n	90018932 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
900188d4:	9f02      	ldr	r7, [sp, #8]
900188d6:	fa1f fe8e 	uxth.w	lr, lr
900188da:	b292      	uxth	r2, r2
900188dc:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
900188e0:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
900188e4:	9f04      	ldr	r7, [sp, #16]
900188e6:	ebae 0102 	sub.w	r1, lr, r2
900188ea:	44a6      	add	lr, r4
900188ec:	1a3f      	subs	r7, r7, r0
900188ee:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
900188f2:	b289      	uxth	r1, r1
900188f4:	4402      	add	r2, r0
900188f6:	fa0f fe8e 	sxth.w	lr, lr
900188fa:	b20d      	sxth	r5, r1
900188fc:	b212      	sxth	r2, r2
900188fe:	436f      	muls	r7, r5
90018900:	ebae 0202 	sub.w	r2, lr, r2
90018904:	4372      	muls	r2, r6
90018906:	4297      	cmp	r7, r2
90018908:	db09      	blt.n	9001891e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
9001890a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
9001890e:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
90018912:	449c      	add	ip, r3
90018914:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90018918:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
9001891c:	e686      	b.n	9001862c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001891e:	4421      	add	r1, r4
90018920:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
90018924:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
90018928:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001892c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90018930:	e67c      	b.n	9001862c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018932:	9f04      	ldr	r7, [sp, #16]
90018934:	42b8      	cmp	r0, r7
90018936:	da27      	bge.n	90018988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90018938:	9902      	ldr	r1, [sp, #8]
9001893a:	1a3f      	subs	r7, r7, r0
9001893c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
90018940:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90018944:	eb05 010e 	add.w	r1, r5, lr
90018948:	fa1f f881 	uxth.w	r8, r1
9001894c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
90018950:	4411      	add	r1, r2
90018952:	fa0f f988 	sxth.w	r9, r8
90018956:	eba2 020e 	sub.w	r2, r2, lr
9001895a:	eba1 0108 	sub.w	r1, r1, r8
9001895e:	4372      	muls	r2, r6
90018960:	b289      	uxth	r1, r1
90018962:	fa0f f881 	sxth.w	r8, r1
90018966:	fb08 f707 	mul.w	r7, r8, r7
9001896a:	42ba      	cmp	r2, r7
9001896c:	dc06      	bgt.n	9001897c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
9001896e:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
90018972:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
90018976:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
9001897a:	e7ca      	b.n	90018912 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
9001897c:	4429      	add	r1, r5
9001897e:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
90018982:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90018986:	e651      	b.n	9001862c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018988:	9805      	ldr	r0, [sp, #20]
9001898a:	2d06      	cmp	r5, #6
9001898c:	ebaa 0000 	sub.w	r0, sl, r0
90018990:	b280      	uxth	r0, r0
90018992:	fa0f fe80 	sxth.w	lr, r0
90018996:	d817      	bhi.n	900189c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90018998:	9b04      	ldr	r3, [sp, #16]
9001899a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
9001899e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
900189a2:	1c6b      	adds	r3, r5, #1
900189a4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
900189a8:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
900189ac:	9b01      	ldr	r3, [sp, #4]
900189ae:	9801      	ldr	r0, [sp, #4]
900189b0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900189b4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900189b8:	805a      	strh	r2, [r3, #2]
900189ba:	809e      	strh	r6, [r3, #4]
900189bc:	80d9      	strh	r1, [r3, #6]
900189be:	9b02      	ldr	r3, [sp, #8]
900189c0:	3c08      	subs	r4, #8
900189c2:	3b01      	subs	r3, #1
900189c4:	9302      	str	r3, [sp, #8]
900189c6:	e747      	b.n	90018858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
900189c8:	9a02      	ldr	r2, [sp, #8]
900189ca:	45b6      	cmp	lr, r6
900189cc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900189d0:	db0d      	blt.n	900189ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
900189d2:	449c      	add	ip, r3
900189d4:	445a      	add	r2, fp
900189d6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
900189da:	fa1f fc8c 	uxth.w	ip, ip
900189de:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
900189e2:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
900189e6:	448c      	add	ip, r1
900189e8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
900189ec:	e61e      	b.n	9001862c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900189ee:	445a      	add	r2, fp
900189f0:	4484      	add	ip, r0
900189f2:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
900189f6:	e78f      	b.n	90018918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900189f8:	fa1f f18e 	uxth.w	r1, lr
900189fc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
90018a00:	b293      	uxth	r3, r2
90018a02:	4596      	cmp	lr, r2
90018a04:	eb01 0806 	add.w	r8, r1, r6
90018a08:	9306      	str	r3, [sp, #24]
90018a0a:	fa1f f888 	uxth.w	r8, r8
90018a0e:	9f06      	ldr	r7, [sp, #24]
90018a10:	fa0f f388 	sxth.w	r3, r8
90018a14:	9307      	str	r3, [sp, #28]
90018a16:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90018a1a:	443b      	add	r3, r7
90018a1c:	b29b      	uxth	r3, r3
90018a1e:	9308      	str	r3, [sp, #32]
90018a20:	da24      	bge.n	90018a6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90018a22:	9905      	ldr	r1, [sp, #20]
90018a24:	eba3 0308 	sub.w	r3, r3, r8
90018a28:	eba2 020e 	sub.w	r2, r2, lr
90018a2c:	eba9 0000 	sub.w	r0, r9, r0
90018a30:	ebaa 0401 	sub.w	r4, sl, r1
90018a34:	b29b      	uxth	r3, r3
90018a36:	b2a4      	uxth	r4, r4
90018a38:	b219      	sxth	r1, r3
90018a3a:	b225      	sxth	r5, r4
90018a3c:	4348      	muls	r0, r1
90018a3e:	436a      	muls	r2, r5
90018a40:	4282      	cmp	r2, r0
90018a42:	9a02      	ldr	r2, [sp, #8]
90018a44:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90018a48:	445a      	add	r2, fp
90018a4a:	dc06      	bgt.n	90018a5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
90018a4c:	9b07      	ldr	r3, [sp, #28]
90018a4e:	44a4      	add	ip, r4
90018a50:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
90018a54:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
90018a58:	e75e      	b.n	90018918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90018a5a:	9904      	ldr	r1, [sp, #16]
90018a5c:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
90018a60:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
90018a64:	4433      	add	r3, r6
90018a66:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90018a6a:	e5df      	b.n	9001862c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018a6c:	9f06      	ldr	r7, [sp, #24]
90018a6e:	9b04      	ldr	r3, [sp, #16]
90018a70:	1bc9      	subs	r1, r1, r7
90018a72:	fa0f f78a 	sxth.w	r7, sl
90018a76:	b289      	uxth	r1, r1
90018a78:	429f      	cmp	r7, r3
90018a7a:	fa0f fe81 	sxth.w	lr, r1
90018a7e:	dd23      	ble.n	90018ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90018a80:	9a05      	ldr	r2, [sp, #20]
90018a82:	eba9 0000 	sub.w	r0, r9, r0
90018a86:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90018a8a:	ebaa 0202 	sub.w	r2, sl, r2
90018a8e:	9d07      	ldr	r5, [sp, #28]
90018a90:	fb0e f000 	mul.w	r0, lr, r0
90018a94:	b292      	uxth	r2, r2
90018a96:	eba5 0a03 	sub.w	sl, r5, r3
90018a9a:	9b02      	ldr	r3, [sp, #8]
90018a9c:	b214      	sxth	r4, r2
90018a9e:	00db      	lsls	r3, r3, #3
90018aa0:	fb04 fa0a 	mul.w	sl, r4, sl
90018aa4:	445b      	add	r3, fp
90018aa6:	4550      	cmp	r0, sl
90018aa8:	db03      	blt.n	90018ab2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
90018aaa:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
90018aae:	4494      	add	ip, r2
90018ab0:	e732      	b.n	90018918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90018ab2:	9a04      	ldr	r2, [sp, #16]
90018ab4:	4431      	add	r1, r6
90018ab6:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
90018aba:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
90018abe:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
90018ac2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90018ac6:	e75c      	b.n	90018982 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90018ac8:	9b08      	ldr	r3, [sp, #32]
90018aca:	2d06      	cmp	r5, #6
90018acc:	eba3 0308 	sub.w	r3, r3, r8
90018ad0:	b29b      	uxth	r3, r3
90018ad2:	b218      	sxth	r0, r3
90018ad4:	d813      	bhi.n	90018afe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90018ad6:	9b07      	ldr	r3, [sp, #28]
90018ad8:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
90018adc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
90018ae0:	1c6b      	adds	r3, r5, #1
90018ae2:	9901      	ldr	r1, [sp, #4]
90018ae4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90018ae8:	9b01      	ldr	r3, [sp, #4]
90018aea:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90018aee:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90018af2:	805a      	strh	r2, [r3, #2]
90018af4:	9a09      	ldr	r2, [sp, #36]	; 0x24
90018af6:	f8a3 e006 	strh.w	lr, [r3, #6]
90018afa:	809a      	strh	r2, [r3, #4]
90018afc:	e75f      	b.n	900189be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90018afe:	9c02      	ldr	r4, [sp, #8]
90018b00:	4570      	cmp	r0, lr
90018b02:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90018b06:	db0d      	blt.n	90018b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90018b08:	4431      	add	r1, r6
90018b0a:	9b06      	ldr	r3, [sp, #24]
90018b0c:	445c      	add	r4, fp
90018b0e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90018b12:	b289      	uxth	r1, r1
90018b14:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
90018b18:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90018b1c:	4419      	add	r1, r3
90018b1e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
90018b22:	e583      	b.n	9001862c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018b24:	445c      	add	r4, fp
90018b26:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
90018b2a:	e79b      	b.n	90018a64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
90018b2c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90018b30:	f64f 76ff 	movw	r6, #65535	; 0xffff
90018b34:	1e65      	subs	r5, r4, #1
90018b36:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90018b3a:	b2ad      	uxth	r5, r5
90018b3c:	42b5      	cmp	r5, r6
90018b3e:	d044      	beq.n	90018bca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90018b40:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
90018b44:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
90018b48:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
90018b4c:	4282      	cmp	r2, r0
90018b4e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
90018b52:	d11f      	bne.n	90018b94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90018b54:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
90018b58:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
90018b5c:	459c      	cmp	ip, r3
90018b5e:	d119      	bne.n	90018b94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90018b60:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
90018b64:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90018b68:	19d8      	adds	r0, r3, r7
90018b6a:	b200      	sxth	r0, r0
90018b6c:	4288      	cmp	r0, r1
90018b6e:	d109      	bne.n	90018b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90018b70:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
90018b74:	4413      	add	r3, r2
90018b76:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
90018b7a:	4629      	mov	r1, r5
90018b7c:	9801      	ldr	r0, [sp, #4]
90018b7e:	f7ff fd2b 	bl	900185d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018b82:	e003      	b.n	90018b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018b84:	4411      	add	r1, r2
90018b86:	b209      	sxth	r1, r1
90018b88:	42b9      	cmp	r1, r7
90018b8a:	d0f3      	beq.n	90018b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90018b8c:	3d01      	subs	r5, #1
90018b8e:	3c08      	subs	r4, #8
90018b90:	b2ad      	uxth	r5, r5
90018b92:	e7d3      	b.n	90018b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90018b94:	42b9      	cmp	r1, r7
90018b96:	d1f9      	bne.n	90018b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018b98:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
90018b9c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90018ba0:	4299      	cmp	r1, r3
90018ba2:	d1f3      	bne.n	90018b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018ba4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90018ba8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
90018bac:	181f      	adds	r7, r3, r0
90018bae:	b23f      	sxth	r7, r7
90018bb0:	42ba      	cmp	r2, r7
90018bb2:	d105      	bne.n	90018bc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90018bb4:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
90018bb8:	440b      	add	r3, r1
90018bba:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90018bbe:	e7dc      	b.n	90018b7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90018bc0:	440a      	add	r2, r1
90018bc2:	b212      	sxth	r2, r2
90018bc4:	4290      	cmp	r0, r2
90018bc6:	d1e1      	bne.n	90018b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018bc8:	e7f6      	b.n	90018bb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90018bca:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
90018bce:	2e07      	cmp	r6, #7
90018bd0:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90018bd4:	d812      	bhi.n	90018bfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90018bd6:	1c75      	adds	r5, r6, #1
90018bd8:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90018bdc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
90018be0:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
90018be4:	9d01      	ldr	r5, [sp, #4]
90018be6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90018bea:	442c      	add	r4, r5
90018bec:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
90018bf0:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90018bf4:	8061      	strh	r1, [r4, #2]
90018bf6:	80a2      	strh	r2, [r4, #4]
90018bf8:	80e3      	strh	r3, [r4, #6]
90018bfa:	e581      	b.n	90018700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90018bfc:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90018c00:	3e01      	subs	r6, #1
90018c02:	445c      	add	r4, fp
90018c04:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
90018c08:	f04f 37ff 	mov.w	r7, #4294967295
90018c0c:	2500      	movs	r5, #0
90018c0e:	9305      	str	r3, [sp, #20]
90018c10:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90018c14:	1e72      	subs	r2, r6, #1
90018c16:	9302      	str	r3, [sp, #8]
90018c18:	4691      	mov	r9, r2
90018c1a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
90018c1e:	9304      	str	r3, [sp, #16]
90018c20:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
90018c24:	f1b9 3fff 	cmp.w	r9, #4294967295
90018c28:	6818      	ldr	r0, [r3, #0]
90018c2a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90018c2e:	9207      	str	r2, [sp, #28]
90018c30:	bf16      	itet	ne
90018c32:	9905      	ldrne	r1, [sp, #20]
90018c34:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90018c38:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90018c3c:	9306      	str	r3, [sp, #24]
90018c3e:	f8be 1006 	ldrh.w	r1, [lr, #6]
90018c42:	f8be 8004 	ldrh.w	r8, [lr, #4]
90018c46:	fb18 f801 	smulbb	r8, r8, r1
90018c4a:	6859      	ldr	r1, [r3, #4]
90018c4c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90018c50:	4671      	mov	r1, lr
90018c52:	a80c      	add	r0, sp, #48	; 0x30
90018c54:	f7ff fb42 	bl	900182dc <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018c58:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90018c5c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90018c60:	f04f 0c08 	mov.w	ip, #8
90018c64:	9b04      	ldr	r3, [sp, #16]
90018c66:	9a02      	ldr	r2, [sp, #8]
90018c68:	fb10 f001 	smulbb	r0, r0, r1
90018c6c:	fb02 8803 	mla	r8, r2, r3, r8
90018c70:	eba0 0108 	sub.w	r1, r0, r8
90018c74:	fb90 f0fc 	sdiv	r0, r0, ip
90018c78:	4288      	cmp	r0, r1
90018c7a:	dc20      	bgt.n	90018cbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90018c7c:	4551      	cmp	r1, sl
90018c7e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90018c82:	da03      	bge.n	90018c8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90018c84:	b1d9      	cbz	r1, 90018cbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90018c86:	468a      	mov	sl, r1
90018c88:	464f      	mov	r7, r9
90018c8a:	4635      	mov	r5, r6
90018c8c:	f109 39ff 	add.w	r9, r9, #4294967295
90018c90:	f119 0f02 	cmn.w	r9, #2
90018c94:	d1c6      	bne.n	90018c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90018c96:	4616      	mov	r6, r2
90018c98:	3201      	adds	r2, #1
90018c9a:	f1a4 0408 	sub.w	r4, r4, #8
90018c9e:	d1b7      	bne.n	90018c10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90018ca0:	9b01      	ldr	r3, [sp, #4]
90018ca2:	b2ac      	uxth	r4, r5
90018ca4:	00ed      	lsls	r5, r5, #3
90018ca6:	1958      	adds	r0, r3, r5
90018ca8:	1c7b      	adds	r3, r7, #1
90018caa:	d10b      	bne.n	90018cc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90018cac:	4601      	mov	r1, r0
90018cae:	9803      	ldr	r0, [sp, #12]
90018cb0:	f7ff fb14 	bl	900182dc <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018cb4:	4621      	mov	r1, r4
90018cb6:	9801      	ldr	r0, [sp, #4]
90018cb8:	f7ff fc8e 	bl	900185d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018cbc:	e4b6      	b.n	9001862c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018cbe:	464f      	mov	r7, r9
90018cc0:	4635      	mov	r5, r6
90018cc2:	e7ed      	b.n	90018ca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90018cc4:	9b01      	ldr	r3, [sp, #4]
90018cc6:	00ff      	lsls	r7, r7, #3
90018cc8:	445d      	add	r5, fp
90018cca:	19d9      	adds	r1, r3, r7
90018ccc:	445f      	add	r7, fp
90018cce:	f7ff fb05 	bl	900182dc <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018cd2:	9b03      	ldr	r3, [sp, #12]
90018cd4:	cb03      	ldmia	r3!, {r0, r1}
90018cd6:	9b03      	ldr	r3, [sp, #12]
90018cd8:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
90018cdc:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
90018ce0:	f855 0fac 	ldr.w	r0, [r5, #172]!
90018ce4:	6869      	ldr	r1, [r5, #4]
90018ce6:	c303      	stmia	r3!, {r0, r1}
90018ce8:	e7e4      	b.n	90018cb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
90018cea:	bf00      	nop

90018cec <_ZN8touchgfx11Application15drawCachedAreasEv>:
90018cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018cf0:	f500 7698 	add.w	r6, r0, #304	; 0x130
90018cf4:	b09b      	sub	sp, #108	; 0x6c
90018cf6:	4604      	mov	r4, r0
90018cf8:	4630      	mov	r0, r6
90018cfa:	f7fa f8a4 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
90018cfe:	4605      	mov	r5, r0
90018d00:	b948      	cbnz	r0, 90018d16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90018d02:	6823      	ldr	r3, [r4, #0]
90018d04:	4620      	mov	r0, r4
90018d06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90018d08:	e896 0006 	ldmia.w	r6, {r1, r2}
90018d0c:	4798      	blx	r3
90018d0e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
90018d12:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
90018d16:	4bc5      	ldr	r3, [pc, #788]	; (9001902c <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90018d18:	681b      	ldr	r3, [r3, #0]
90018d1a:	2b00      	cmp	r3, #0
90018d1c:	d03f      	beq.n	90018d9e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90018d1e:	4dc4      	ldr	r5, [pc, #784]	; (90019030 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90018d20:	4628      	mov	r0, r5
90018d22:	f7fa f890 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
90018d26:	4606      	mov	r6, r0
90018d28:	2800      	cmp	r0, #0
90018d2a:	d138      	bne.n	90018d9e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90018d2c:	4628      	mov	r0, r5
90018d2e:	f7ff f94b 	bl	90017fc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90018d32:	6823      	ldr	r3, [r4, #0]
90018d34:	6829      	ldr	r1, [r5, #0]
90018d36:	4620      	mov	r0, r4
90018d38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90018d3a:	686a      	ldr	r2, [r5, #4]
90018d3c:	4798      	blx	r3
90018d3e:	802e      	strh	r6, [r5, #0]
90018d40:	806e      	strh	r6, [r5, #2]
90018d42:	80ae      	strh	r6, [r5, #4]
90018d44:	80ee      	strh	r6, [r5, #6]
90018d46:	f10d 0824 	add.w	r8, sp, #36	; 0x24
90018d4a:	4dba      	ldr	r5, [pc, #744]	; (90019034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90018d4c:	4640      	mov	r0, r8
90018d4e:	f7ff fbe7 	bl	90018520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90018d52:	882e      	ldrh	r6, [r5, #0]
90018d54:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90018d58:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90018d5c:	4633      	mov	r3, r6
90018d5e:	42bb      	cmp	r3, r7
90018d60:	d224      	bcs.n	90018dac <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90018d62:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
90018d66:	2907      	cmp	r1, #7
90018d68:	d816      	bhi.n	90018d98 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
90018d6a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90018d6e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90018d72:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90018d76:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
90018d7a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
90018d7e:	1c4a      	adds	r2, r1, #1
90018d80:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
90018d84:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90018d88:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90018d8c:	f8a2 a002 	strh.w	sl, [r2, #2]
90018d90:	f8a2 e004 	strh.w	lr, [r2, #4]
90018d94:	f8a2 c006 	strh.w	ip, [r2, #6]
90018d98:	3301      	adds	r3, #1
90018d9a:	b29b      	uxth	r3, r3
90018d9c:	e7df      	b.n	90018d5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
90018d9e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90018da2:	2b00      	cmp	r3, #0
90018da4:	d1cf      	bne.n	90018d46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90018da6:	b01b      	add	sp, #108	; 0x6c
90018da8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018dac:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
90018db0:	42b3      	cmp	r3, r6
90018db2:	d90c      	bls.n	90018dce <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90018db4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90018db8:	6822      	ldr	r2, [r4, #0]
90018dba:	3601      	adds	r6, #1
90018dbc:	4620      	mov	r0, r4
90018dbe:	6c17      	ldr	r7, [r2, #64]	; 0x40
90018dc0:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
90018dc4:	b2b6      	uxth	r6, r6
90018dc6:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
90018dca:	47b8      	blx	r7
90018dcc:	e7ee      	b.n	90018dac <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90018dce:	4a9a      	ldr	r2, [pc, #616]	; (90019038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90018dd0:	6813      	ldr	r3, [r2, #0]
90018dd2:	4691      	mov	r9, r2
90018dd4:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
90018dd8:	2b01      	cmp	r3, #1
90018dda:	f040 80e0 	bne.w	90018f9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
90018dde:	8829      	ldrh	r1, [r5, #0]
90018de0:	2600      	movs	r6, #0
90018de2:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90018de6:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
90018dea:	33ae      	adds	r3, #174	; 0xae
90018dec:	428f      	cmp	r7, r1
90018dee:	f103 0308 	add.w	r3, r3, #8
90018df2:	dd0a      	ble.n	90018e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90018df4:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90018df8:	3101      	adds	r1, #1
90018dfa:	f833 0c08 	ldrh.w	r0, [r3, #-8]
90018dfe:	4402      	add	r2, r0
90018e00:	b212      	sxth	r2, r2
90018e02:	4296      	cmp	r6, r2
90018e04:	bfb8      	it	lt
90018e06:	4616      	movlt	r6, r2
90018e08:	e7f0      	b.n	90018dec <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
90018e0a:	4b8c      	ldr	r3, [pc, #560]	; (9001903c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90018e0c:	f8df 9228 	ldr.w	r9, [pc, #552]	; 90019038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90018e10:	881b      	ldrh	r3, [r3, #0]
90018e12:	2b0f      	cmp	r3, #15
90018e14:	bf8c      	ite	hi
90018e16:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90018e1a:	f04f 0b01 	movls.w	fp, #1
90018e1e:	2300      	movs	r3, #0
90018e20:	e9cd 3305 	strd	r3, r3, [sp, #20]
90018e24:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90018e28:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90018e2c:	4b82      	ldr	r3, [pc, #520]	; (90019038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90018e2e:	4438      	add	r0, r7
90018e30:	b207      	sxth	r7, r0
90018e32:	6818      	ldr	r0, [r3, #0]
90018e34:	42b7      	cmp	r7, r6
90018e36:	6803      	ldr	r3, [r0, #0]
90018e38:	f280 8083 	bge.w	90018f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90018e3c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
90018e40:	4798      	blx	r3
90018e42:	eb07 030b 	add.w	r3, r7, fp
90018e46:	4298      	cmp	r0, r3
90018e48:	da07      	bge.n	90018e5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90018e4a:	42b0      	cmp	r0, r6
90018e4c:	da05      	bge.n	90018e5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90018e4e:	4287      	cmp	r7, r0
90018e50:	dd6c      	ble.n	90018f2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90018e52:	2f00      	cmp	r7, #0
90018e54:	dd6a      	ble.n	90018f2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90018e56:	4630      	mov	r0, r6
90018e58:	e004      	b.n	90018e64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90018e5a:	4287      	cmp	r7, r0
90018e5c:	dcfb      	bgt.n	90018e56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
90018e5e:	42b0      	cmp	r0, r6
90018e60:	bfa8      	it	ge
90018e62:	4630      	movge	r0, r6
90018e64:	4b76      	ldr	r3, [pc, #472]	; (90019040 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90018e66:	1bc0      	subs	r0, r0, r7
90018e68:	2200      	movs	r2, #0
90018e6a:	f8ad 7016 	strh.w	r7, [sp, #22]
90018e6e:	f9b3 3000 	ldrsh.w	r3, [r3]
90018e72:	882f      	ldrh	r7, [r5, #0]
90018e74:	f8ad 2014 	strh.w	r2, [sp, #20]
90018e78:	f8ad 3018 	strh.w	r3, [sp, #24]
90018e7c:	f8ad 001a 	strh.w	r0, [sp, #26]
90018e80:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90018e84:	42bb      	cmp	r3, r7
90018e86:	d9cd      	bls.n	90018e24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90018e88:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90018e8c:	ab07      	add	r3, sp, #28
90018e8e:	f852 0fac 	ldr.w	r0, [r2, #172]!
90018e92:	6851      	ldr	r1, [r2, #4]
90018e94:	c303      	stmia	r3!, {r0, r1}
90018e96:	a905      	add	r1, sp, #20
90018e98:	a807      	add	r0, sp, #28
90018e9a:	f7ff f986 	bl	900181aa <_ZNK8touchgfx4Rect9intersectERKS0_>
90018e9e:	2800      	cmp	r0, #0
90018ea0:	d04c      	beq.n	90018f3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90018ea2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90018ea6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90018eaa:	f8bd a020 	ldrh.w	sl, [sp, #32]
90018eae:	4686      	mov	lr, r0
90018eb0:	4290      	cmp	r0, r2
90018eb2:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90018eb6:	4450      	add	r0, sl
90018eb8:	f8bd a018 	ldrh.w	sl, [sp, #24]
90018ebc:	bfb8      	it	lt
90018ebe:	4696      	movlt	lr, r2
90018ec0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90018ec4:	4452      	add	r2, sl
90018ec6:	b280      	uxth	r0, r0
90018ec8:	4299      	cmp	r1, r3
90018eca:	468c      	mov	ip, r1
90018ecc:	b292      	uxth	r2, r2
90018ece:	9302      	str	r3, [sp, #8]
90018ed0:	bfb8      	it	lt
90018ed2:	469c      	movlt	ip, r3
90018ed4:	b203      	sxth	r3, r0
90018ed6:	fa0f fa82 	sxth.w	sl, r2
90018eda:	f8ad e01c 	strh.w	lr, [sp, #28]
90018ede:	f8ad c01e 	strh.w	ip, [sp, #30]
90018ee2:	4553      	cmp	r3, sl
90018ee4:	bfb8      	it	lt
90018ee6:	4602      	movlt	r2, r0
90018ee8:	9b02      	ldr	r3, [sp, #8]
90018eea:	eba2 020e 	sub.w	r2, r2, lr
90018eee:	f8ad 2020 	strh.w	r2, [sp, #32]
90018ef2:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90018ef6:	4411      	add	r1, r2
90018ef8:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90018efc:	4413      	add	r3, r2
90018efe:	b289      	uxth	r1, r1
90018f00:	b29b      	uxth	r3, r3
90018f02:	b208      	sxth	r0, r1
90018f04:	b21a      	sxth	r2, r3
90018f06:	4290      	cmp	r0, r2
90018f08:	bfb8      	it	lt
90018f0a:	460b      	movlt	r3, r1
90018f0c:	eba3 030c 	sub.w	r3, r3, ip
90018f10:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90018f14:	a807      	add	r0, sp, #28
90018f16:	f7f9 ff96 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
90018f1a:	b920      	cbnz	r0, 90018f26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90018f1c:	6823      	ldr	r3, [r4, #0]
90018f1e:	a907      	add	r1, sp, #28
90018f20:	4620      	mov	r0, r4
90018f22:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90018f24:	4798      	blx	r3
90018f26:	3701      	adds	r7, #1
90018f28:	b2bf      	uxth	r7, r7
90018f2a:	e7a9      	b.n	90018e80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90018f2c:	f8d9 0000 	ldr.w	r0, [r9]
90018f30:	2101      	movs	r1, #1
90018f32:	6803      	ldr	r3, [r0, #0]
90018f34:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
90018f38:	4798      	blx	r3
90018f3a:	e773      	b.n	90018e24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90018f3c:	e9cd 0007 	strd	r0, r0, [sp, #28]
90018f40:	e7e8      	b.n	90018f14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90018f42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90018f44:	4798      	blx	r3
90018f46:	4b3f      	ldr	r3, [pc, #252]	; (90019044 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90018f48:	781b      	ldrb	r3, [r3, #0]
90018f4a:	2b00      	cmp	r3, #0
90018f4c:	f43f af2b 	beq.w	90018da6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90018f50:	2300      	movs	r3, #0
90018f52:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90018f56:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
90018f5a:	882b      	ldrh	r3, [r5, #0]
90018f5c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
90018f60:	42ab      	cmp	r3, r5
90018f62:	f4bf af20 	bcs.w	90018da6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90018f66:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
90018f6a:	2907      	cmp	r1, #7
90018f6c:	d814      	bhi.n	90018f98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
90018f6e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90018f72:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90018f76:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90018f7a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
90018f7e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90018f82:	1c4a      	adds	r2, r1, #1
90018f84:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
90018f88:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90018f8c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90018f90:	f8a2 c002 	strh.w	ip, [r2, #2]
90018f94:	8097      	strh	r7, [r2, #4]
90018f96:	80d6      	strh	r6, [r2, #6]
90018f98:	3301      	adds	r3, #1
90018f9a:	b29b      	uxth	r3, r3
90018f9c:	e7e0      	b.n	90018f60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
90018f9e:	2b02      	cmp	r3, #2
90018fa0:	f040 8133 	bne.w	9001920a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90018fa4:	4b28      	ldr	r3, [pc, #160]	; (90019048 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90018fa6:	f104 0aac 	add.w	sl, r4, #172	; 0xac
90018faa:	781b      	ldrb	r3, [r3, #0]
90018fac:	2b01      	cmp	r3, #1
90018fae:	f000 8098 	beq.w	900190e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90018fb2:	882a      	ldrh	r2, [r5, #0]
90018fb4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
90018fb8:	3201      	adds	r2, #1
90018fba:	b292      	uxth	r2, r2
90018fbc:	2900      	cmp	r1, #0
90018fbe:	d0c2      	beq.n	90018f46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90018fc0:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
90018fc4:	4694      	mov	ip, r2
90018fc6:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
90018fca:	f04f 0900 	mov.w	r9, #0
90018fce:	441e      	add	r6, r3
90018fd0:	b236      	sxth	r6, r6
90018fd2:	fa1f f38c 	uxth.w	r3, ip
90018fd6:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90018fda:	4299      	cmp	r1, r3
90018fdc:	f240 80be 	bls.w	9001915c <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90018fe0:	4427      	add	r7, r4
90018fe2:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90018fe6:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
90018fea:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
90018fee:	4283      	cmp	r3, r0
90018ff0:	f340 80a0 	ble.w	90019134 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90018ff4:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
90018ff8:	46e1      	mov	r9, ip
90018ffa:	4406      	add	r6, r0
90018ffc:	b236      	sxth	r6, r6
90018ffe:	429e      	cmp	r6, r3
90019000:	bfa8      	it	ge
90019002:	461e      	movge	r6, r3
90019004:	f10c 0c01 	add.w	ip, ip, #1
90019008:	e7e3      	b.n	90018fd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
9001900a:	d10a      	bne.n	90019022 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
9001900c:	4562      	cmp	r2, ip
9001900e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
90019012:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
90019016:	bfb8      	it	lt
90019018:	4662      	movlt	r2, ip
9001901a:	4288      	cmp	r0, r1
9001901c:	bfb8      	it	lt
9001901e:	461f      	movlt	r7, r3
90019020:	e086      	b.n	90019130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90019022:	428a      	cmp	r2, r1
90019024:	bfb8      	it	lt
90019026:	460a      	movlt	r2, r1
90019028:	e082      	b.n	90019130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
9001902a:	bf00      	nop
9001902c:	24039b0c 	.word	0x24039b0c
90019030:	24039b18 	.word	0x24039b18
90019034:	24000084 	.word	0x24000084
90019038:	24039acc 	.word	0x24039acc
9001903c:	24039ac2 	.word	0x24039ac2
90019040:	24039ac0 	.word	0x24039ac0
90019044:	24039aca 	.word	0x24039aca
90019048:	24039ac4 	.word	0x24039ac4
9001904c:	19a1      	adds	r1, r4, r6
9001904e:	ab07      	add	r3, sp, #28
90019050:	f851 0fac 	ldr.w	r0, [r1, #172]!
90019054:	6849      	ldr	r1, [r1, #4]
90019056:	c303      	stmia	r3!, {r0, r1}
90019058:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001905c:	a807      	add	r0, sp, #28
9001905e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90019062:	2b13      	cmp	r3, #19
90019064:	440b      	add	r3, r1
90019066:	bfd8      	it	le
90019068:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
9001906c:	1a9b      	subs	r3, r3, r2
9001906e:	f8ad 201c 	strh.w	r2, [sp, #28]
90019072:	f8ad 3020 	strh.w	r3, [sp, #32]
90019076:	f7fe ffc1 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001907a:	a807      	add	r0, sp, #28
9001907c:	f7f9 fee3 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
90019080:	bb78      	cbnz	r0, 900190e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90019082:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90019086:	4426      	add	r6, r4
90019088:	f8d9 0000 	ldr.w	r0, [r9]
9001908c:	f1bc 0f14 	cmp.w	ip, #20
90019090:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90019094:	f8d0 e000 	ldr.w	lr, [r0]
90019098:	bfa8      	it	ge
9001909a:	f04f 0c14 	movge.w	ip, #20
9001909e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
900190a2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
900190a6:	fa1f fc8c 	uxth.w	ip, ip
900190aa:	f8cd c000 	str.w	ip, [sp]
900190ae:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
900190b2:	47d8      	blx	fp
900190b4:	4683      	mov	fp, r0
900190b6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
900190ba:	a807      	add	r0, sp, #28
900190bc:	f7fe ff84 	bl	90017fc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
900190c0:	6823      	ldr	r3, [r4, #0]
900190c2:	4620      	mov	r0, r4
900190c4:	a907      	add	r1, sp, #28
900190c6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900190c8:	4798      	blx	r3
900190ca:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
900190ce:	eba0 000b 	sub.w	r0, r0, fp
900190d2:	b200      	sxth	r0, r0
900190d4:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
900190d8:	b918      	cbnz	r0, 900190e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
900190da:	b2b9      	uxth	r1, r7
900190dc:	4650      	mov	r0, sl
900190de:	f7ff fa7b 	bl	900185d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900190e2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
900190e6:	f1bb 0f00 	cmp.w	fp, #0
900190ea:	f43f af2c 	beq.w	90018f46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900190ee:	882b      	ldrh	r3, [r5, #0]
900190f0:	2700      	movs	r7, #0
900190f2:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
900190f6:	3301      	adds	r3, #1
900190f8:	b29b      	uxth	r3, r3
900190fa:	b299      	uxth	r1, r3
900190fc:	00fe      	lsls	r6, r7, #3
900190fe:	458b      	cmp	fp, r1
90019100:	d9a4      	bls.n	9001904c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
90019102:	4426      	add	r6, r4
90019104:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90019108:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
9001910c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90019110:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
90019114:	4408      	add	r0, r1
90019116:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
9001911a:	4461      	add	r1, ip
9001911c:	b200      	sxth	r0, r0
9001911e:	b209      	sxth	r1, r1
90019120:	4288      	cmp	r0, r1
90019122:	f6bf af72 	bge.w	9001900a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90019126:	4584      	cmp	ip, r0
90019128:	4662      	mov	r2, ip
9001912a:	461f      	mov	r7, r3
9001912c:	bfb8      	it	lt
9001912e:	4602      	movlt	r2, r0
90019130:	3301      	adds	r3, #1
90019132:	e7e2      	b.n	900190fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90019134:	d10e      	bne.n	90019154 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90019136:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
9001913a:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
9001913e:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
90019142:	4473      	add	r3, lr
90019144:	b21b      	sxth	r3, r3
90019146:	429e      	cmp	r6, r3
90019148:	bfa8      	it	ge
9001914a:	461e      	movge	r6, r3
9001914c:	4287      	cmp	r7, r0
9001914e:	bfb8      	it	lt
90019150:	46e1      	movlt	r9, ip
90019152:	e757      	b.n	90019004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90019154:	4286      	cmp	r6, r0
90019156:	bfa8      	it	ge
90019158:	4606      	movge	r6, r0
9001915a:	e753      	b.n	90019004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
9001915c:	eb0a 0007 	add.w	r0, sl, r7
90019160:	4427      	add	r7, r4
90019162:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
90019166:	f1bb 0f13 	cmp.w	fp, #19
9001916a:	bfdc      	itt	le
9001916c:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
90019170:	445e      	addle	r6, fp
90019172:	e9cd 2102 	strd	r2, r1, [sp, #8]
90019176:	bfd8      	it	le
90019178:	b236      	sxthle	r6, r6
9001917a:	f7f9 fe64 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
9001917e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90019182:	2800      	cmp	r0, #0
90019184:	f47f af1a 	bne.w	90018fbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90019188:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
9001918c:	fa1f fb8b 	uxth.w	fp, fp
90019190:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90019194:	1ab6      	subs	r6, r6, r2
90019196:	4829      	ldr	r0, [pc, #164]	; (9001923c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90019198:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
9001919c:	2e14      	cmp	r6, #20
9001919e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
900191a2:	6800      	ldr	r0, [r0, #0]
900191a4:	bfa8      	it	ge
900191a6:	2614      	movge	r6, #20
900191a8:	f8ad 101c 	strh.w	r1, [sp, #28]
900191ac:	f8ad 201e 	strh.w	r2, [sp, #30]
900191b0:	b289      	uxth	r1, r1
900191b2:	f8ad 3020 	strh.w	r3, [sp, #32]
900191b6:	b2b6      	uxth	r6, r6
900191b8:	f8d0 c000 	ldr.w	ip, [r0]
900191bc:	b292      	uxth	r2, r2
900191be:	455e      	cmp	r6, fp
900191c0:	bf94      	ite	ls
900191c2:	9600      	strls	r6, [sp, #0]
900191c4:	f8cd b000 	strhi.w	fp, [sp]
900191c8:	b29b      	uxth	r3, r3
900191ca:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
900191ce:	47b0      	blx	r6
900191d0:	6823      	ldr	r3, [r4, #0]
900191d2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
900191d6:	a907      	add	r1, sp, #28
900191d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900191da:	4620      	mov	r0, r4
900191dc:	4798      	blx	r3
900191de:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
900191e2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
900191e6:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
900191ea:	1a5b      	subs	r3, r3, r1
900191ec:	440a      	add	r2, r1
900191ee:	b21b      	sxth	r3, r3
900191f0:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
900191f4:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
900191f8:	2b00      	cmp	r3, #0
900191fa:	f47f aeda 	bne.w	90018fb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900191fe:	fa1f f189 	uxth.w	r1, r9
90019202:	4650      	mov	r0, sl
90019204:	f7ff f9e8 	bl	900185d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019208:	e6d3      	b.n	90018fb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001920a:	882e      	ldrh	r6, [r5, #0]
9001920c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90019210:	42b3      	cmp	r3, r6
90019212:	f67f ae98 	bls.w	90018f46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90019216:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
9001921a:	ab07      	add	r3, sp, #28
9001921c:	f852 0fac 	ldr.w	r0, [r2, #172]!
90019220:	6851      	ldr	r1, [r2, #4]
90019222:	c303      	stmia	r3!, {r0, r1}
90019224:	a807      	add	r0, sp, #28
90019226:	f7f9 fe0e 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
9001922a:	b920      	cbnz	r0, 90019236 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
9001922c:	6823      	ldr	r3, [r4, #0]
9001922e:	a907      	add	r1, sp, #28
90019230:	4620      	mov	r0, r4
90019232:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90019234:	4798      	blx	r3
90019236:	3601      	adds	r6, #1
90019238:	b2b6      	uxth	r6, r6
9001923a:	e7e7      	b.n	9001920c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
9001923c:	24039acc 	.word	0x24039acc

90019240 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90019240:	4b03      	ldr	r3, [pc, #12]	; (90019250 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90019242:	2200      	movs	r2, #0
90019244:	801a      	strh	r2, [r3, #0]
90019246:	805a      	strh	r2, [r3, #2]
90019248:	809a      	strh	r2, [r3, #4]
9001924a:	80da      	strh	r2, [r3, #6]
9001924c:	4770      	bx	lr
9001924e:	bf00      	nop
90019250:	24039b18 	.word	0x24039b18

90019254 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90019254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019258:	b09d      	sub	sp, #116	; 0x74
9001925a:	4606      	mov	r6, r0
9001925c:	4614      	mov	r4, r2
9001925e:	468a      	mov	sl, r1
90019260:	a803      	add	r0, sp, #12
90019262:	461d      	mov	r5, r3
90019264:	f000 fe9d 	bl	90019fa2 <_ZN8touchgfx12TextProviderC1Ev>
90019268:	6833      	ldr	r3, [r6, #0]
9001926a:	4630      	mov	r0, r6
9001926c:	f242 0b0b 	movw	fp, #8203	; 0x200b
90019270:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90019272:	4798      	blx	r3
90019274:	6833      	ldr	r3, [r6, #0]
90019276:	4607      	mov	r7, r0
90019278:	4630      	mov	r0, r6
9001927a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001927c:	4798      	blx	r3
9001927e:	462a      	mov	r2, r5
90019280:	2500      	movs	r5, #0
90019282:	4621      	mov	r1, r4
90019284:	9000      	str	r0, [sp, #0]
90019286:	463b      	mov	r3, r7
90019288:	462c      	mov	r4, r5
9001928a:	46a9      	mov	r9, r5
9001928c:	46a8      	mov	r8, r5
9001928e:	a803      	add	r0, sp, #12
90019290:	f000 fee2 	bl	9001a058 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019294:	2300      	movs	r3, #0
90019296:	9302      	str	r3, [sp, #8]
90019298:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001929c:	429c      	cmp	r4, r3
9001929e:	d002      	beq.n	900192a6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
900192a0:	455c      	cmp	r4, fp
900192a2:	bf18      	it	ne
900192a4:	4625      	movne	r5, r4
900192a6:	ab02      	add	r3, sp, #8
900192a8:	4632      	mov	r2, r6
900192aa:	4651      	mov	r1, sl
900192ac:	a803      	add	r0, sp, #12
900192ae:	f001 f9d9 	bl	9001a664 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900192b2:	4604      	mov	r4, r0
900192b4:	b108      	cbz	r0, 900192ba <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
900192b6:	280a      	cmp	r0, #10
900192b8:	d10a      	bne.n	900192d0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
900192ba:	45c1      	cmp	r9, r8
900192bc:	bf38      	it	cc
900192be:	46c1      	movcc	r9, r8
900192c0:	f04f 0800 	mov.w	r8, #0
900192c4:	2c00      	cmp	r4, #0
900192c6:	d1e5      	bne.n	90019294 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900192c8:	4648      	mov	r0, r9
900192ca:	b01d      	add	sp, #116	; 0x74
900192cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900192d0:	9a02      	ldr	r2, [sp, #8]
900192d2:	2a00      	cmp	r2, #0
900192d4:	d0de      	beq.n	90019294 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900192d6:	7b57      	ldrb	r7, [r2, #13]
900192d8:	4629      	mov	r1, r5
900192da:	6833      	ldr	r3, [r6, #0]
900192dc:	007f      	lsls	r7, r7, #1
900192de:	8894      	ldrh	r4, [r2, #4]
900192e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900192e2:	f407 7080 	and.w	r0, r7, #256	; 0x100
900192e6:	7a97      	ldrb	r7, [r2, #10]
900192e8:	4307      	orrs	r7, r0
900192ea:	4630      	mov	r0, r6
900192ec:	4798      	blx	r3
900192ee:	4438      	add	r0, r7
900192f0:	4480      	add	r8, r0
900192f2:	fa1f f888 	uxth.w	r8, r8
900192f6:	e7e5      	b.n	900192c4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

900192f8 <_ZNK8touchgfx4Font12getCharWidthEt>:
900192f8:	b508      	push	{r3, lr}
900192fa:	6803      	ldr	r3, [r0, #0]
900192fc:	68db      	ldr	r3, [r3, #12]
900192fe:	4798      	blx	r3
90019300:	b128      	cbz	r0, 9001930e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90019302:	7b43      	ldrb	r3, [r0, #13]
90019304:	7a80      	ldrb	r0, [r0, #10]
90019306:	005b      	lsls	r3, r3, #1
90019308:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001930c:	4318      	orrs	r0, r3
9001930e:	bd08      	pop	{r3, pc}

90019310 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90019310:	b40e      	push	{r1, r2, r3}
90019312:	b5f0      	push	{r4, r5, r6, r7, lr}
90019314:	b09e      	sub	sp, #120	; 0x78
90019316:	4605      	mov	r5, r0
90019318:	ab23      	add	r3, sp, #140	; 0x8c
9001931a:	a805      	add	r0, sp, #20
9001931c:	f853 4b04 	ldr.w	r4, [r3], #4
90019320:	9303      	str	r3, [sp, #12]
90019322:	f000 fe3e 	bl	90019fa2 <_ZN8touchgfx12TextProviderC1Ev>
90019326:	682b      	ldr	r3, [r5, #0]
90019328:	4628      	mov	r0, r5
9001932a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001932c:	4798      	blx	r3
9001932e:	682b      	ldr	r3, [r5, #0]
90019330:	4606      	mov	r6, r0
90019332:	4628      	mov	r0, r5
90019334:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90019336:	4798      	blx	r3
90019338:	4633      	mov	r3, r6
9001933a:	4621      	mov	r1, r4
9001933c:	ae1e      	add	r6, sp, #120	; 0x78
9001933e:	2400      	movs	r4, #0
90019340:	9000      	str	r0, [sp, #0]
90019342:	9a03      	ldr	r2, [sp, #12]
90019344:	a805      	add	r0, sp, #20
90019346:	f000 fe87 	bl	9001a058 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001934a:	f846 4d68 	str.w	r4, [r6, #-104]!
9001934e:	462a      	mov	r2, r5
90019350:	4633      	mov	r3, r6
90019352:	4621      	mov	r1, r4
90019354:	a805      	add	r0, sp, #20
90019356:	f001 f985 	bl	9001a664 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001935a:	b300      	cbz	r0, 9001939e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
9001935c:	280a      	cmp	r0, #10
9001935e:	d01a      	beq.n	90019396 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90019360:	9f04      	ldr	r7, [sp, #16]
90019362:	b1c7      	cbz	r7, 90019396 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90019364:	7b78      	ldrb	r0, [r7, #13]
90019366:	7a3b      	ldrb	r3, [r7, #8]
90019368:	00c1      	lsls	r1, r0, #3
9001936a:	88ea      	ldrh	r2, [r5, #6]
9001936c:	f401 7180 	and.w	r1, r1, #256	; 0x100
90019370:	4319      	orrs	r1, r3
90019372:	0643      	lsls	r3, r0, #25
90019374:	ea4f 1000 	mov.w	r0, r0, lsl #4
90019378:	bf48      	it	mi
9001937a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
9001937e:	f400 7080 	and.w	r0, r0, #256	; 0x100
90019382:	bf48      	it	mi
90019384:	b219      	sxthmi	r1, r3
90019386:	79fb      	ldrb	r3, [r7, #7]
90019388:	4303      	orrs	r3, r0
9001938a:	4413      	add	r3, r2
9001938c:	1a5b      	subs	r3, r3, r1
9001938e:	b21b      	sxth	r3, r3
90019390:	429c      	cmp	r4, r3
90019392:	bfb8      	it	lt
90019394:	461c      	movlt	r4, r3
90019396:	4633      	mov	r3, r6
90019398:	462a      	mov	r2, r5
9001939a:	2100      	movs	r1, #0
9001939c:	e7da      	b.n	90019354 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001939e:	b2a0      	uxth	r0, r4
900193a0:	b01e      	add	sp, #120	; 0x78
900193a2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900193a6:	b003      	add	sp, #12
900193a8:	4770      	bx	lr

900193aa <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
900193aa:	7a43      	ldrb	r3, [r0, #9]
900193ac:	8880      	ldrh	r0, [r0, #4]
900193ae:	4418      	add	r0, r3
900193b0:	b280      	uxth	r0, r0
900193b2:	4770      	bx	lr

900193b4 <_ZNK8touchgfx4Font13getFontHeightEv>:
900193b4:	6803      	ldr	r3, [r0, #0]
900193b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900193b8:	4718      	bx	r3

900193ba <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
900193ba:	b40e      	push	{r1, r2, r3}
900193bc:	b570      	push	{r4, r5, r6, lr}
900193be:	b09d      	sub	sp, #116	; 0x74
900193c0:	4604      	mov	r4, r0
900193c2:	ab21      	add	r3, sp, #132	; 0x84
900193c4:	a803      	add	r0, sp, #12
900193c6:	f853 5b04 	ldr.w	r5, [r3], #4
900193ca:	9302      	str	r3, [sp, #8]
900193cc:	f000 fde9 	bl	90019fa2 <_ZN8touchgfx12TextProviderC1Ev>
900193d0:	6823      	ldr	r3, [r4, #0]
900193d2:	4620      	mov	r0, r4
900193d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900193d6:	4798      	blx	r3
900193d8:	6823      	ldr	r3, [r4, #0]
900193da:	4606      	mov	r6, r0
900193dc:	4620      	mov	r0, r4
900193de:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900193e0:	2401      	movs	r4, #1
900193e2:	4798      	blx	r3
900193e4:	4633      	mov	r3, r6
900193e6:	9000      	str	r0, [sp, #0]
900193e8:	4629      	mov	r1, r5
900193ea:	9a02      	ldr	r2, [sp, #8]
900193ec:	a803      	add	r0, sp, #12
900193ee:	f000 fe33 	bl	9001a058 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900193f2:	a803      	add	r0, sp, #12
900193f4:	f001 fa02 	bl	9001a7fc <_ZN8touchgfx12TextProvider11getNextCharEv>
900193f8:	b2a3      	uxth	r3, r4
900193fa:	b138      	cbz	r0, 9001940c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
900193fc:	280a      	cmp	r0, #10
900193fe:	a803      	add	r0, sp, #12
90019400:	bf04      	itt	eq
90019402:	3301      	addeq	r3, #1
90019404:	b21c      	sxtheq	r4, r3
90019406:	f001 f9f9 	bl	9001a7fc <_ZN8touchgfx12TextProvider11getNextCharEv>
9001940a:	e7f5      	b.n	900193f8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001940c:	4618      	mov	r0, r3
9001940e:	b01d      	add	sp, #116	; 0x74
90019410:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019414:	b003      	add	sp, #12
90019416:	4770      	bx	lr

90019418 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90019418:	b40e      	push	{r1, r2, r3}
9001941a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001941c:	b09e      	sub	sp, #120	; 0x78
9001941e:	4604      	mov	r4, r0
90019420:	ab23      	add	r3, sp, #140	; 0x8c
90019422:	a805      	add	r0, sp, #20
90019424:	f853 5b04 	ldr.w	r5, [r3], #4
90019428:	9303      	str	r3, [sp, #12]
9001942a:	f000 fdba 	bl	90019fa2 <_ZN8touchgfx12TextProviderC1Ev>
9001942e:	6823      	ldr	r3, [r4, #0]
90019430:	4620      	mov	r0, r4
90019432:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90019434:	4798      	blx	r3
90019436:	6823      	ldr	r3, [r4, #0]
90019438:	4606      	mov	r6, r0
9001943a:	4620      	mov	r0, r4
9001943c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001943e:	4798      	blx	r3
90019440:	4633      	mov	r3, r6
90019442:	4629      	mov	r1, r5
90019444:	9000      	str	r0, [sp, #0]
90019446:	9a03      	ldr	r2, [sp, #12]
90019448:	a805      	add	r0, sp, #20
9001944a:	f000 fe05 	bl	9001a058 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001944e:	ad1e      	add	r5, sp, #120	; 0x78
90019450:	2100      	movs	r1, #0
90019452:	f647 76ff 	movw	r6, #32767	; 0x7fff
90019456:	4622      	mov	r2, r4
90019458:	a805      	add	r0, sp, #20
9001945a:	f845 1d68 	str.w	r1, [r5, #-104]!
9001945e:	462b      	mov	r3, r5
90019460:	f001 f900 	bl	9001a664 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90019464:	b1d8      	cbz	r0, 9001949e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
90019466:	280a      	cmp	r0, #10
90019468:	d012      	beq.n	90019490 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001946a:	9804      	ldr	r0, [sp, #16]
9001946c:	b180      	cbz	r0, 90019490 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001946e:	7b47      	ldrb	r7, [r0, #13]
90019470:	88e2      	ldrh	r2, [r4, #6]
90019472:	00fb      	lsls	r3, r7, #3
90019474:	f403 7180 	and.w	r1, r3, #256	; 0x100
90019478:	7a03      	ldrb	r3, [r0, #8]
9001947a:	430b      	orrs	r3, r1
9001947c:	0679      	lsls	r1, r7, #25
9001947e:	bf44      	itt	mi
90019480:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90019484:	b21b      	sxthmi	r3, r3
90019486:	1ad3      	subs	r3, r2, r3
90019488:	b21b      	sxth	r3, r3
9001948a:	429e      	cmp	r6, r3
9001948c:	bfa8      	it	ge
9001948e:	461e      	movge	r6, r3
90019490:	462b      	mov	r3, r5
90019492:	4622      	mov	r2, r4
90019494:	2100      	movs	r1, #0
90019496:	a805      	add	r0, sp, #20
90019498:	f001 f8e4 	bl	9001a664 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001949c:	e7e2      	b.n	90019464 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001949e:	4630      	mov	r0, r6
900194a0:	b01e      	add	sp, #120	; 0x78
900194a2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900194a6:	b003      	add	sp, #12
900194a8:	4770      	bx	lr

900194aa <_ZNK8touchgfx8Drawable10invalidateEv>:
900194aa:	b513      	push	{r0, r1, r4, lr}
900194ac:	6803      	ldr	r3, [r0, #0]
900194ae:	2400      	movs	r4, #0
900194b0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900194b4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900194b8:	f8ad 1004 	strh.w	r1, [sp, #4]
900194bc:	4669      	mov	r1, sp
900194be:	691b      	ldr	r3, [r3, #16]
900194c0:	9400      	str	r4, [sp, #0]
900194c2:	f8ad 2006 	strh.w	r2, [sp, #6]
900194c6:	4798      	blx	r3
900194c8:	b002      	add	sp, #8
900194ca:	bd10      	pop	{r4, pc}

900194cc <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
900194cc:	b538      	push	{r3, r4, r5, lr}
900194ce:	680b      	ldr	r3, [r1, #0]
900194d0:	460c      	mov	r4, r1
900194d2:	4605      	mov	r5, r0
900194d4:	68db      	ldr	r3, [r3, #12]
900194d6:	4798      	blx	r3
900194d8:	6823      	ldr	r3, [r4, #0]
900194da:	4620      	mov	r0, r4
900194dc:	4629      	mov	r1, r5
900194de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900194e0:	4798      	blx	r3
900194e2:	4628      	mov	r0, r5
900194e4:	bd38      	pop	{r3, r4, r5, pc}

900194e6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
900194e6:	b410      	push	{r4}
900194e8:	880a      	ldrh	r2, [r1, #0]
900194ea:	8884      	ldrh	r4, [r0, #4]
900194ec:	4422      	add	r2, r4
900194ee:	800a      	strh	r2, [r1, #0]
900194f0:	884a      	ldrh	r2, [r1, #2]
900194f2:	88c4      	ldrh	r4, [r0, #6]
900194f4:	4422      	add	r2, r4
900194f6:	804a      	strh	r2, [r1, #2]
900194f8:	6940      	ldr	r0, [r0, #20]
900194fa:	b120      	cbz	r0, 90019506 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
900194fc:	6803      	ldr	r3, [r0, #0]
900194fe:	f85d 4b04 	ldr.w	r4, [sp], #4
90019502:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019504:	4718      	bx	r3
90019506:	f85d 4b04 	ldr.w	r4, [sp], #4
9001950a:	4770      	bx	lr

9001950c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001950c:	b570      	push	{r4, r5, r6, lr}
9001950e:	8882      	ldrh	r2, [r0, #4]
90019510:	460c      	mov	r4, r1
90019512:	880b      	ldrh	r3, [r1, #0]
90019514:	4605      	mov	r5, r0
90019516:	4413      	add	r3, r2
90019518:	800b      	strh	r3, [r1, #0]
9001951a:	884b      	ldrh	r3, [r1, #2]
9001951c:	88c2      	ldrh	r2, [r0, #6]
9001951e:	4413      	add	r3, r2
90019520:	804b      	strh	r3, [r1, #2]
90019522:	1d01      	adds	r1, r0, #4
90019524:	4620      	mov	r0, r4
90019526:	f7f9 fc4b 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
9001952a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001952e:	2b00      	cmp	r3, #0
90019530:	dd0b      	ble.n	9001954a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90019532:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90019536:	2b00      	cmp	r3, #0
90019538:	dd07      	ble.n	9001954a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001953a:	6968      	ldr	r0, [r5, #20]
9001953c:	b128      	cbz	r0, 9001954a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001953e:	6803      	ldr	r3, [r0, #0]
90019540:	4621      	mov	r1, r4
90019542:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90019544:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019548:	4718      	bx	r3
9001954a:	bd70      	pop	{r4, r5, r6, pc}

9001954c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
9001954c:	b570      	push	{r4, r5, r6, lr}
9001954e:	8882      	ldrh	r2, [r0, #4]
90019550:	460c      	mov	r4, r1
90019552:	880b      	ldrh	r3, [r1, #0]
90019554:	4605      	mov	r5, r0
90019556:	4413      	add	r3, r2
90019558:	800b      	strh	r3, [r1, #0]
9001955a:	884b      	ldrh	r3, [r1, #2]
9001955c:	88c2      	ldrh	r2, [r0, #6]
9001955e:	4413      	add	r3, r2
90019560:	804b      	strh	r3, [r1, #2]
90019562:	1d01      	adds	r1, r0, #4
90019564:	4620      	mov	r0, r4
90019566:	f7f9 fc2b 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
9001956a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001956e:	2b00      	cmp	r3, #0
90019570:	dd19      	ble.n	900195a6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90019572:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90019576:	2b00      	cmp	r3, #0
90019578:	dd15      	ble.n	900195a6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001957a:	6968      	ldr	r0, [r5, #20]
9001957c:	b128      	cbz	r0, 9001958a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
9001957e:	6803      	ldr	r3, [r0, #0]
90019580:	4621      	mov	r1, r4
90019582:	691b      	ldr	r3, [r3, #16]
90019584:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019588:	4718      	bx	r3
9001958a:	4b07      	ldr	r3, [pc, #28]	; (900195a8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001958c:	681b      	ldr	r3, [r3, #0]
9001958e:	3304      	adds	r3, #4
90019590:	429d      	cmp	r5, r3
90019592:	d108      	bne.n	900195a6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90019594:	f7fe fee8 	bl	90018368 <_ZN8touchgfx11Application11getInstanceEv>
90019598:	6803      	ldr	r3, [r0, #0]
9001959a:	6821      	ldr	r1, [r4, #0]
9001959c:	6862      	ldr	r2, [r4, #4]
9001959e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900195a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900195a4:	4718      	bx	r3
900195a6:	bd70      	pop	{r4, r5, r6, pc}
900195a8:	24039b10 	.word	0x24039b10

900195ac <_ZN8touchgfx8Drawable12moveRelativeEss>:
900195ac:	b570      	push	{r4, r5, r6, lr}
900195ae:	4604      	mov	r4, r0
900195b0:	4616      	mov	r6, r2
900195b2:	460d      	mov	r5, r1
900195b4:	b901      	cbnz	r1, 900195b8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
900195b6:	b192      	cbz	r2, 900195de <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
900195b8:	6823      	ldr	r3, [r4, #0]
900195ba:	4620      	mov	r0, r4
900195bc:	699b      	ldr	r3, [r3, #24]
900195be:	4798      	blx	r3
900195c0:	88e2      	ldrh	r2, [r4, #6]
900195c2:	88a1      	ldrh	r1, [r4, #4]
900195c4:	4620      	mov	r0, r4
900195c6:	4432      	add	r2, r6
900195c8:	4429      	add	r1, r5
900195ca:	b212      	sxth	r2, r2
900195cc:	b209      	sxth	r1, r1
900195ce:	f7f9 fecd 	bl	9001336c <_ZN8touchgfx8Drawable5setXYEss>
900195d2:	6823      	ldr	r3, [r4, #0]
900195d4:	4620      	mov	r0, r4
900195d6:	699b      	ldr	r3, [r3, #24]
900195d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900195dc:	4718      	bx	r3
900195de:	bd70      	pop	{r4, r5, r6, pc}

900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
900195e0:	b510      	push	{r4, lr}
900195e2:	2300      	movs	r3, #0
900195e4:	4604      	mov	r4, r0
900195e6:	4608      	mov	r0, r1
900195e8:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
900195ec:	8023      	strh	r3, [r4, #0]
900195ee:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900195f2:	8063      	strh	r3, [r4, #2]
900195f4:	6803      	ldr	r3, [r0, #0]
900195f6:	80a1      	strh	r1, [r4, #4]
900195f8:	4621      	mov	r1, r4
900195fa:	80e2      	strh	r2, [r4, #6]
900195fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900195fe:	4798      	blx	r3
90019600:	4620      	mov	r0, r4
90019602:	bd10      	pop	{r4, pc}

90019604 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90019604:	b530      	push	{r4, r5, lr}
90019606:	8083      	strh	r3, [r0, #4]
90019608:	f8bd 300c 	ldrh.w	r3, [sp, #12]
9001960c:	f89d 5018 	ldrb.w	r5, [sp, #24]
90019610:	80c3      	strh	r3, [r0, #6]
90019612:	f89d 3010 	ldrb.w	r3, [sp, #16]
90019616:	6141      	str	r1, [r0, #20]
90019618:	7203      	strb	r3, [r0, #8]
9001961a:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001961e:	8302      	strh	r2, [r0, #24]
90019620:	7243      	strb	r3, [r0, #9]
90019622:	7a83      	ldrb	r3, [r0, #10]
90019624:	f365 0306 	bfi	r3, r5, #0, #7
90019628:	f89d 501c 	ldrb.w	r5, [sp, #28]
9001962c:	f365 13c7 	bfi	r3, r5, #7, #1
90019630:	7283      	strb	r3, [r0, #10]
90019632:	f89d 3020 	ldrb.w	r3, [sp, #32]
90019636:	72c3      	strb	r3, [r0, #11]
90019638:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
9001963c:	7303      	strb	r3, [r0, #12]
9001963e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90019642:	81c3      	strh	r3, [r0, #14]
90019644:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90019648:	8203      	strh	r3, [r0, #16]
9001964a:	4b01      	ldr	r3, [pc, #4]	; (90019650 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
9001964c:	6003      	str	r3, [r0, #0]
9001964e:	bd30      	pop	{r4, r5, pc}
90019650:	9002dd9c 	.word	0x9002dd9c

90019654 <_ZNK8touchgfx9ConstFont4findEt>:
90019654:	b5f0      	push	{r4, r5, r6, r7, lr}
90019656:	6944      	ldr	r4, [r0, #20]
90019658:	b3bc      	cbz	r4, 900196ca <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001965a:	88a3      	ldrh	r3, [r4, #4]
9001965c:	8b02      	ldrh	r2, [r0, #24]
9001965e:	1acb      	subs	r3, r1, r3
90019660:	f102 32ff 	add.w	r2, r2, #4294967295
90019664:	d431      	bmi.n	900196ca <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019666:	4293      	cmp	r3, r2
90019668:	dd0c      	ble.n	90019684 <_ZNK8touchgfx9ConstFont4findEt+0x30>
9001966a:	230e      	movs	r3, #14
9001966c:	fb03 4302 	mla	r3, r3, r2, r4
90019670:	889b      	ldrh	r3, [r3, #4]
90019672:	1a5b      	subs	r3, r3, r1
90019674:	1ad3      	subs	r3, r2, r3
90019676:	429a      	cmp	r2, r3
90019678:	db27      	blt.n	900196ca <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001967a:	2b00      	cmp	r3, #0
9001967c:	bfbc      	itt	lt
9001967e:	2302      	movlt	r3, #2
90019680:	fb92 f3f3 	sdivlt	r3, r2, r3
90019684:	2500      	movs	r5, #0
90019686:	260e      	movs	r6, #14
90019688:	4295      	cmp	r5, r2
9001968a:	dc1e      	bgt.n	900196ca <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001968c:	fb06 4003 	mla	r0, r6, r3, r4
90019690:	8887      	ldrh	r7, [r0, #4]
90019692:	42b9      	cmp	r1, r7
90019694:	d01a      	beq.n	900196cc <_ZNK8touchgfx9ConstFont4findEt+0x78>
90019696:	d20d      	bcs.n	900196b4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90019698:	1e5a      	subs	r2, r3, #1
9001969a:	4295      	cmp	r5, r2
9001969c:	dc15      	bgt.n	900196ca <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001969e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
900196a2:	1a5b      	subs	r3, r3, r1
900196a4:	1ad3      	subs	r3, r2, r3
900196a6:	429a      	cmp	r2, r3
900196a8:	db0f      	blt.n	900196ca <_ZNK8touchgfx9ConstFont4findEt+0x76>
900196aa:	429d      	cmp	r5, r3
900196ac:	ddec      	ble.n	90019688 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900196ae:	1953      	adds	r3, r2, r5
900196b0:	105b      	asrs	r3, r3, #1
900196b2:	e7e9      	b.n	90019688 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900196b4:	1c5d      	adds	r5, r3, #1
900196b6:	42aa      	cmp	r2, r5
900196b8:	db07      	blt.n	900196ca <_ZNK8touchgfx9ConstFont4findEt+0x76>
900196ba:	8a43      	ldrh	r3, [r0, #18]
900196bc:	1acb      	subs	r3, r1, r3
900196be:	442b      	add	r3, r5
900196c0:	429d      	cmp	r5, r3
900196c2:	dc02      	bgt.n	900196ca <_ZNK8touchgfx9ConstFont4findEt+0x76>
900196c4:	429a      	cmp	r2, r3
900196c6:	dadf      	bge.n	90019688 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900196c8:	e7f1      	b.n	900196ae <_ZNK8touchgfx9ConstFont4findEt+0x5a>
900196ca:	2000      	movs	r0, #0
900196cc:	bdf0      	pop	{r4, r5, r6, r7, pc}

900196ce <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
900196ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900196d0:	4604      	mov	r4, r0
900196d2:	4617      	mov	r7, r2
900196d4:	461e      	mov	r6, r3
900196d6:	b911      	cbnz	r1, 900196de <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
900196d8:	2500      	movs	r5, #0
900196da:	4628      	mov	r0, r5
900196dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900196de:	290a      	cmp	r1, #10
900196e0:	d0fa      	beq.n	900196d8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900196e2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
900196e6:	4291      	cmp	r1, r2
900196e8:	d0f6      	beq.n	900196d8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900196ea:	f242 020b 	movw	r2, #8203	; 0x200b
900196ee:	4291      	cmp	r1, r2
900196f0:	d0f2      	beq.n	900196d8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900196f2:	f7ff ffaf 	bl	90019654 <_ZNK8touchgfx9ConstFont4findEt>
900196f6:	4605      	mov	r5, r0
900196f8:	b950      	cbnz	r0, 90019710 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
900196fa:	6823      	ldr	r3, [r4, #0]
900196fc:	4620      	mov	r0, r4
900196fe:	691b      	ldr	r3, [r3, #16]
90019700:	4798      	blx	r3
90019702:	4601      	mov	r1, r0
90019704:	4620      	mov	r0, r4
90019706:	f7ff ffa5 	bl	90019654 <_ZNK8touchgfx9ConstFont4findEt>
9001970a:	4605      	mov	r5, r0
9001970c:	2800      	cmp	r0, #0
9001970e:	d0e3      	beq.n	900196d8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019710:	6823      	ldr	r3, [r4, #0]
90019712:	4629      	mov	r1, r5
90019714:	4620      	mov	r0, r4
90019716:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90019718:	4798      	blx	r3
9001971a:	6038      	str	r0, [r7, #0]
9001971c:	6823      	ldr	r3, [r4, #0]
9001971e:	4620      	mov	r0, r4
90019720:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90019722:	4798      	blx	r3
90019724:	7030      	strb	r0, [r6, #0]
90019726:	e7d8      	b.n	900196da <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90019728 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90019728:	b538      	push	{r3, r4, r5, lr}
9001972a:	4605      	mov	r5, r0
9001972c:	f002 f936 	bl	9001b99c <_ZNK8touchgfx6Bitmap9getFormatEv>
90019730:	4604      	mov	r4, r0
90019732:	4628      	mov	r0, r5
90019734:	f002 f876 	bl	9001b824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90019738:	2800      	cmp	r0, #0
9001973a:	bf14      	ite	ne
9001973c:	2002      	movne	r0, #2
9001973e:	2000      	moveq	r0, #0
90019740:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90019744:	b280      	uxth	r0, r0
90019746:	bd38      	pop	{r3, r4, r5, pc}

90019748 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90019748:	b538      	push	{r3, r4, r5, lr}
9001974a:	4605      	mov	r5, r0
9001974c:	f002 f926 	bl	9001b99c <_ZNK8touchgfx6Bitmap9getFormatEv>
90019750:	4604      	mov	r4, r0
90019752:	4628      	mov	r0, r5
90019754:	f002 f866 	bl	9001b824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90019758:	2800      	cmp	r0, #0
9001975a:	bf14      	ite	ne
9001975c:	2002      	movne	r0, #2
9001975e:	2000      	moveq	r0, #0
90019760:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90019764:	f040 0001 	orr.w	r0, r0, #1
90019768:	b280      	uxth	r0, r0
9001976a:	bd38      	pop	{r3, r4, r5, pc}

9001976c <_ZN8touchgfx4clzuEm>:
9001976c:	4603      	mov	r3, r0
9001976e:	b1c8      	cbz	r0, 900197a4 <_ZN8touchgfx4clzuEm+0x38>
90019770:	0c02      	lsrs	r2, r0, #16
90019772:	0412      	lsls	r2, r2, #16
90019774:	b9a2      	cbnz	r2, 900197a0 <_ZN8touchgfx4clzuEm+0x34>
90019776:	0403      	lsls	r3, r0, #16
90019778:	2010      	movs	r0, #16
9001977a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
9001977e:	bf04      	itt	eq
90019780:	021b      	lsleq	r3, r3, #8
90019782:	3008      	addeq	r0, #8
90019784:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90019788:	bf04      	itt	eq
9001978a:	011b      	lsleq	r3, r3, #4
9001978c:	3004      	addeq	r0, #4
9001978e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90019792:	bf04      	itt	eq
90019794:	009b      	lsleq	r3, r3, #2
90019796:	3002      	addeq	r0, #2
90019798:	2b00      	cmp	r3, #0
9001979a:	db04      	blt.n	900197a6 <_ZN8touchgfx4clzuEm+0x3a>
9001979c:	3001      	adds	r0, #1
9001979e:	4770      	bx	lr
900197a0:	2000      	movs	r0, #0
900197a2:	e7ea      	b.n	9001977a <_ZN8touchgfx4clzuEm+0xe>
900197a4:	2020      	movs	r0, #32
900197a6:	4770      	bx	lr

900197a8 <_ZN8touchgfx7muldivuEmmmRm>:
900197a8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
900197ac:	460f      	mov	r7, r1
900197ae:	4615      	mov	r5, r2
900197b0:	461e      	mov	r6, r3
900197b2:	4601      	mov	r1, r0
900197b4:	b100      	cbz	r0, 900197b8 <_ZN8touchgfx7muldivuEmmmRm+0x10>
900197b6:	b927      	cbnz	r7, 900197c2 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
900197b8:	2000      	movs	r0, #0
900197ba:	6030      	str	r0, [r6, #0]
900197bc:	b002      	add	sp, #8
900197be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900197c2:	f7ff ffd3 	bl	9001976c <_ZN8touchgfx4clzuEm>
900197c6:	b980      	cbnz	r0, 900197ea <_ZN8touchgfx7muldivuEmmmRm+0x42>
900197c8:	4638      	mov	r0, r7
900197ca:	f7ff ffcf 	bl	9001976c <_ZN8touchgfx4clzuEm>
900197ce:	2800      	cmp	r0, #0
900197d0:	dd05      	ble.n	900197de <_ZN8touchgfx7muldivuEmmmRm+0x36>
900197d2:	4633      	mov	r3, r6
900197d4:	462a      	mov	r2, r5
900197d6:	4638      	mov	r0, r7
900197d8:	f7ff ffe6 	bl	900197a8 <_ZN8touchgfx7muldivuEmmmRm>
900197dc:	e7ee      	b.n	900197bc <_ZN8touchgfx7muldivuEmmmRm+0x14>
900197de:	f04f 33ff 	mov.w	r3, #4294967295
900197e2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
900197e6:	6033      	str	r3, [r6, #0]
900197e8:	e7e8      	b.n	900197bc <_ZN8touchgfx7muldivuEmmmRm+0x14>
900197ea:	fa37 f800 	lsrs.w	r8, r7, r0
900197ee:	fb07 f301 	mul.w	r3, r7, r1
900197f2:	d105      	bne.n	90019800 <_ZN8touchgfx7muldivuEmmmRm+0x58>
900197f4:	fbb3 f0f5 	udiv	r0, r3, r5
900197f8:	fb05 3510 	mls	r5, r5, r0, r3
900197fc:	6035      	str	r5, [r6, #0]
900197fe:	e7dd      	b.n	900197bc <_ZN8touchgfx7muldivuEmmmRm+0x14>
90019800:	2301      	movs	r3, #1
90019802:	fa01 fa00 	lsl.w	sl, r1, r0
90019806:	462a      	mov	r2, r5
90019808:	fa03 f000 	lsl.w	r0, r3, r0
9001980c:	4633      	mov	r3, r6
9001980e:	fbba f9f5 	udiv	r9, sl, r5
90019812:	3801      	subs	r0, #1
90019814:	fb08 f409 	mul.w	r4, r8, r9
90019818:	4038      	ands	r0, r7
9001981a:	f7ff ffc5 	bl	900197a8 <_ZN8touchgfx7muldivuEmmmRm>
9001981e:	462a      	mov	r2, r5
90019820:	4607      	mov	r7, r0
90019822:	ab01      	add	r3, sp, #4
90019824:	fb05 a119 	mls	r1, r5, r9, sl
90019828:	4640      	mov	r0, r8
9001982a:	f7ff ffbd 	bl	900197a8 <_ZN8touchgfx7muldivuEmmmRm>
9001982e:	9b01      	ldr	r3, [sp, #4]
90019830:	6832      	ldr	r2, [r6, #0]
90019832:	441a      	add	r2, r3
90019834:	fbb2 f3f5 	udiv	r3, r2, r5
90019838:	441c      	add	r4, r3
9001983a:	fb05 2513 	mls	r5, r5, r3, r2
9001983e:	443c      	add	r4, r7
90019840:	4420      	add	r0, r4
90019842:	e7db      	b.n	900197fc <_ZN8touchgfx7muldivuEmmmRm+0x54>

90019844 <_ZN8touchgfx6muldivElllRl>:
90019844:	b573      	push	{r0, r1, r4, r5, r6, lr}
90019846:	2800      	cmp	r0, #0
90019848:	461e      	mov	r6, r3
9001984a:	bfba      	itte	lt
9001984c:	4240      	neglt	r0, r0
9001984e:	f04f 34ff 	movlt.w	r4, #4294967295
90019852:	2401      	movge	r4, #1
90019854:	2900      	cmp	r1, #0
90019856:	bfbc      	itt	lt
90019858:	4249      	neglt	r1, r1
9001985a:	4264      	neglt	r4, r4
9001985c:	2a00      	cmp	r2, #0
9001985e:	bfb6      	itet	lt
90019860:	4265      	neglt	r5, r4
90019862:	4625      	movge	r5, r4
90019864:	4252      	neglt	r2, r2
90019866:	4288      	cmp	r0, r1
90019868:	bfc2      	ittt	gt
9001986a:	4603      	movgt	r3, r0
9001986c:	4608      	movgt	r0, r1
9001986e:	4619      	movgt	r1, r3
90019870:	ab01      	add	r3, sp, #4
90019872:	f7ff ff99 	bl	900197a8 <_ZN8touchgfx7muldivuEmmmRm>
90019876:	9b01      	ldr	r3, [sp, #4]
90019878:	4368      	muls	r0, r5
9001987a:	435c      	muls	r4, r3
9001987c:	6034      	str	r4, [r6, #0]
9001987e:	b002      	add	sp, #8
90019880:	bd70      	pop	{r4, r5, r6, pc}

90019882 <_ZN8touchgfx6muldivElll>:
90019882:	b573      	push	{r0, r1, r4, r5, r6, lr}
90019884:	4606      	mov	r6, r0
90019886:	ab01      	add	r3, sp, #4
90019888:	460d      	mov	r5, r1
9001988a:	4614      	mov	r4, r2
9001988c:	f7ff ffda 	bl	90019844 <_ZN8touchgfx6muldivElllRl>
90019890:	2e00      	cmp	r6, #0
90019892:	db20      	blt.n	900198d6 <_ZN8touchgfx6muldivElll+0x54>
90019894:	bf14      	ite	ne
90019896:	2301      	movne	r3, #1
90019898:	2300      	moveq	r3, #0
9001989a:	2d00      	cmp	r5, #0
9001989c:	db1e      	blt.n	900198dc <_ZN8touchgfx6muldivElll+0x5a>
9001989e:	bf14      	ite	ne
900198a0:	2201      	movne	r2, #1
900198a2:	2200      	moveq	r2, #0
900198a4:	2c00      	cmp	r4, #0
900198a6:	fb03 f202 	mul.w	r2, r3, r2
900198aa:	db1a      	blt.n	900198e2 <_ZN8touchgfx6muldivElll+0x60>
900198ac:	bf14      	ite	ne
900198ae:	2301      	movne	r3, #1
900198b0:	2300      	moveq	r3, #0
900198b2:	4353      	muls	r3, r2
900198b4:	2b01      	cmp	r3, #1
900198b6:	d117      	bne.n	900198e8 <_ZN8touchgfx6muldivElll+0x66>
900198b8:	2c00      	cmp	r4, #0
900198ba:	9b01      	ldr	r3, [sp, #4]
900198bc:	bfb8      	it	lt
900198be:	4264      	neglt	r4, r4
900198c0:	2b00      	cmp	r3, #0
900198c2:	f104 0401 	add.w	r4, r4, #1
900198c6:	bfb8      	it	lt
900198c8:	425b      	neglt	r3, r3
900198ca:	ebb3 0f64 	cmp.w	r3, r4, asr #1
900198ce:	db00      	blt.n	900198d2 <_ZN8touchgfx6muldivElll+0x50>
900198d0:	3001      	adds	r0, #1
900198d2:	b002      	add	sp, #8
900198d4:	bd70      	pop	{r4, r5, r6, pc}
900198d6:	f04f 33ff 	mov.w	r3, #4294967295
900198da:	e7de      	b.n	9001989a <_ZN8touchgfx6muldivElll+0x18>
900198dc:	f04f 32ff 	mov.w	r2, #4294967295
900198e0:	e7e0      	b.n	900198a4 <_ZN8touchgfx6muldivElll+0x22>
900198e2:	f04f 33ff 	mov.w	r3, #4294967295
900198e6:	e7e4      	b.n	900198b2 <_ZN8touchgfx6muldivElll+0x30>
900198e8:	3301      	adds	r3, #1
900198ea:	d1f2      	bne.n	900198d2 <_ZN8touchgfx6muldivElll+0x50>
900198ec:	9b01      	ldr	r3, [sp, #4]
900198ee:	2c00      	cmp	r4, #0
900198f0:	bfb8      	it	lt
900198f2:	4264      	neglt	r4, r4
900198f4:	2b00      	cmp	r3, #0
900198f6:	bfb8      	it	lt
900198f8:	425b      	neglt	r3, r3
900198fa:	ebb3 0f64 	cmp.w	r3, r4, asr #1
900198fe:	bfc8      	it	gt
90019900:	f100 30ff 	addgt.w	r0, r0, #4294967295
90019904:	e7e5      	b.n	900198d2 <_ZN8touchgfx6muldivElll+0x50>

90019906 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90019906:	2000      	movs	r0, #0
90019908:	4770      	bx	lr

9001990a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
9001990a:	2001      	movs	r0, #1
9001990c:	4770      	bx	lr

9001990e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001990e:	2002      	movs	r0, #2
90019910:	4770      	bx	lr

90019912 <_ZN8touchgfx6ScreenD1Ev>:
90019912:	4770      	bx	lr

90019914 <_ZN8touchgfx6Screen11setupScreenEv>:
90019914:	4770      	bx	lr

90019916 <_ZN8touchgfx12GestureEventD1Ev>:
90019916:	4770      	bx	lr

90019918 <_ZN8touchgfx9DragEventD1Ev>:
90019918:	4770      	bx	lr

9001991a <_ZN8touchgfx10ClickEventD1Ev>:
9001991a:	4770      	bx	lr

9001991c <_ZN8touchgfx10ClickEventD0Ev>:
9001991c:	b510      	push	{r4, lr}
9001991e:	4604      	mov	r4, r0
90019920:	210c      	movs	r1, #12
90019922:	f00f fe5f 	bl	900295e4 <_ZdlPvj>
90019926:	4620      	mov	r0, r4
90019928:	bd10      	pop	{r4, pc}

9001992a <_ZN8touchgfx9DragEventD0Ev>:
9001992a:	b510      	push	{r4, lr}
9001992c:	4604      	mov	r4, r0
9001992e:	2110      	movs	r1, #16
90019930:	f00f fe58 	bl	900295e4 <_ZdlPvj>
90019934:	4620      	mov	r0, r4
90019936:	bd10      	pop	{r4, pc}

90019938 <_ZN8touchgfx12GestureEventD0Ev>:
90019938:	b510      	push	{r4, lr}
9001993a:	4604      	mov	r4, r0
9001993c:	210c      	movs	r1, #12
9001993e:	f00f fe51 	bl	900295e4 <_ZdlPvj>
90019942:	4620      	mov	r0, r4
90019944:	bd10      	pop	{r4, pc}

90019946 <_ZN8touchgfx6ScreenD0Ev>:
90019946:	b510      	push	{r4, lr}
90019948:	4604      	mov	r4, r0
9001994a:	213c      	movs	r1, #60	; 0x3c
9001994c:	f00f fe4a 	bl	900295e4 <_ZdlPvj>
90019950:	4620      	mov	r0, r4
90019952:	bd10      	pop	{r4, pc}

90019954 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90019954:	b530      	push	{r4, r5, lr}
90019956:	460d      	mov	r5, r1
90019958:	6b01      	ldr	r1, [r0, #48]	; 0x30
9001995a:	b087      	sub	sp, #28
9001995c:	4604      	mov	r4, r0
9001995e:	b301      	cbz	r1, 900199a2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90019960:	a801      	add	r0, sp, #4
90019962:	f7ff fe3d 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019966:	892a      	ldrh	r2, [r5, #8]
90019968:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001996c:	7928      	ldrb	r0, [r5, #4]
9001996e:	1ad2      	subs	r2, r2, r3
90019970:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90019972:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90019976:	441a      	add	r2, r3
90019978:	896b      	ldrh	r3, [r5, #10]
9001997a:	f8bd 5006 	ldrh.w	r5, [sp, #6]
9001997e:	f88d 0010 	strb.w	r0, [sp, #16]
90019982:	1b5b      	subs	r3, r3, r5
90019984:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
90019986:	6b20      	ldr	r0, [r4, #48]	; 0x30
90019988:	442b      	add	r3, r5
9001998a:	4d07      	ldr	r5, [pc, #28]	; (900199a8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
9001998c:	f8ad 1012 	strh.w	r1, [sp, #18]
90019990:	a903      	add	r1, sp, #12
90019992:	9503      	str	r5, [sp, #12]
90019994:	f8ad 2014 	strh.w	r2, [sp, #20]
90019998:	f8ad 3016 	strh.w	r3, [sp, #22]
9001999c:	6803      	ldr	r3, [r0, #0]
9001999e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900199a0:	4798      	blx	r3
900199a2:	b007      	add	sp, #28
900199a4:	bd30      	pop	{r4, r5, pc}
900199a6:	bf00      	nop
900199a8:	9002de24 	.word	0x9002de24

900199ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
900199ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900199b0:	6b03      	ldr	r3, [r0, #48]	; 0x30
900199b2:	b08a      	sub	sp, #40	; 0x28
900199b4:	4604      	mov	r4, r0
900199b6:	460d      	mov	r5, r1
900199b8:	b113      	cbz	r3, 900199c0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
900199ba:	790b      	ldrb	r3, [r1, #4]
900199bc:	2b00      	cmp	r3, #0
900199be:	d044      	beq.n	90019a4a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900199c0:	f104 0804 	add.w	r8, r4, #4
900199c4:	a803      	add	r0, sp, #12
900199c6:	4641      	mov	r1, r8
900199c8:	f7ff fe0a 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900199cc:	792b      	ldrb	r3, [r5, #4]
900199ce:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
900199d2:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
900199d6:	b983      	cbnz	r3, 900199fa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
900199d8:	f104 0336 	add.w	r3, r4, #54	; 0x36
900199dc:	892a      	ldrh	r2, [r5, #8]
900199de:	88e9      	ldrh	r1, [r5, #6]
900199e0:	4640      	mov	r0, r8
900199e2:	1b92      	subs	r2, r2, r6
900199e4:	9301      	str	r3, [sp, #4]
900199e6:	1bc9      	subs	r1, r1, r7
900199e8:	f104 0334 	add.w	r3, r4, #52	; 0x34
900199ec:	b212      	sxth	r2, r2
900199ee:	9300      	str	r3, [sp, #0]
900199f0:	b209      	sxth	r1, r1
900199f2:	f104 0330 	add.w	r3, r4, #48	; 0x30
900199f6:	f7f9 f901 	bl	90012bfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
900199fa:	6b21      	ldr	r1, [r4, #48]	; 0x30
900199fc:	b329      	cbz	r1, 90019a4a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900199fe:	a805      	add	r0, sp, #20
90019a00:	f7ff fdee 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019a04:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90019a08:	792b      	ldrb	r3, [r5, #4]
90019a0a:	a907      	add	r1, sp, #28
90019a0c:	1abf      	subs	r7, r7, r2
90019a0e:	88ea      	ldrh	r2, [r5, #6]
90019a10:	6b20      	ldr	r0, [r4, #48]	; 0x30
90019a12:	4417      	add	r7, r2
90019a14:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
90019a16:	f88d 3020 	strb.w	r3, [sp, #32]
90019a1a:	4417      	add	r7, r2
90019a1c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90019a20:	1ab6      	subs	r6, r6, r2
90019a22:	892a      	ldrh	r2, [r5, #8]
90019a24:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90019a28:	4416      	add	r6, r2
90019a2a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90019a2c:	4416      	add	r6, r2
90019a2e:	4a08      	ldr	r2, [pc, #32]	; (90019a50 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90019a30:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
90019a34:	2600      	movs	r6, #0
90019a36:	9207      	str	r2, [sp, #28]
90019a38:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
90019a3c:	6803      	ldr	r3, [r0, #0]
90019a3e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90019a40:	4798      	blx	r3
90019a42:	792b      	ldrb	r3, [r5, #4]
90019a44:	b10b      	cbz	r3, 90019a4a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90019a46:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
90019a4a:	b00a      	add	sp, #40	; 0x28
90019a4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90019a50:	9002ddfc 	.word	0x9002ddfc

90019a54 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90019a54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019a58:	460c      	mov	r4, r1
90019a5a:	6b01      	ldr	r1, [r0, #48]	; 0x30
90019a5c:	b088      	sub	sp, #32
90019a5e:	4605      	mov	r5, r0
90019a60:	2900      	cmp	r1, #0
90019a62:	d06d      	beq.n	90019b40 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
90019a64:	4668      	mov	r0, sp
90019a66:	f7ff fdbb 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019a6a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
90019a6c:	88e3      	ldrh	r3, [r4, #6]
90019a6e:	f9bd 8000 	ldrsh.w	r8, [sp]
90019a72:	440b      	add	r3, r1
90019a74:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90019a78:	b21b      	sxth	r3, r3
90019a7a:	4543      	cmp	r3, r8
90019a7c:	db31      	blt.n	90019ae2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019a7e:	f8bd c004 	ldrh.w	ip, [sp, #4]
90019a82:	44c4      	add	ip, r8
90019a84:	fa0f fc8c 	sxth.w	ip, ip
90019a88:	4563      	cmp	r3, ip
90019a8a:	da2a      	bge.n	90019ae2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019a8c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
90019a8e:	8926      	ldrh	r6, [r4, #8]
90019a90:	4416      	add	r6, r2
90019a92:	b236      	sxth	r6, r6
90019a94:	42be      	cmp	r6, r7
90019a96:	db24      	blt.n	90019ae2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019a98:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90019a9c:	4438      	add	r0, r7
90019a9e:	b200      	sxth	r0, r0
90019aa0:	4286      	cmp	r6, r0
90019aa2:	da1e      	bge.n	90019ae2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019aa4:	8963      	ldrh	r3, [r4, #10]
90019aa6:	4419      	add	r1, r3
90019aa8:	b209      	sxth	r1, r1
90019aaa:	4541      	cmp	r1, r8
90019aac:	db08      	blt.n	90019ac0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90019aae:	4561      	cmp	r1, ip
90019ab0:	da06      	bge.n	90019ac0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90019ab2:	89a3      	ldrh	r3, [r4, #12]
90019ab4:	441a      	add	r2, r3
90019ab6:	b212      	sxth	r2, r2
90019ab8:	42ba      	cmp	r2, r7
90019aba:	db01      	blt.n	90019ac0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90019abc:	4282      	cmp	r2, r0
90019abe:	db10      	blt.n	90019ae2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019ac0:	4b21      	ldr	r3, [pc, #132]	; (90019b48 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90019ac2:	a904      	add	r1, sp, #16
90019ac4:	6b28      	ldr	r0, [r5, #48]	; 0x30
90019ac6:	9304      	str	r3, [sp, #16]
90019ac8:	2302      	movs	r3, #2
90019aca:	f88d 3014 	strb.w	r3, [sp, #20]
90019ace:	2300      	movs	r3, #0
90019ad0:	f8ad 3016 	strh.w	r3, [sp, #22]
90019ad4:	f8ad 3018 	strh.w	r3, [sp, #24]
90019ad8:	f8ad 301a 	strh.w	r3, [sp, #26]
90019adc:	6803      	ldr	r3, [r0, #0]
90019ade:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90019ae0:	4798      	blx	r3
90019ae2:	1d29      	adds	r1, r5, #4
90019ae4:	a802      	add	r0, sp, #8
90019ae6:	f7ff fd7b 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019aea:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90019aee:	88e0      	ldrh	r0, [r4, #6]
90019af0:	eba3 0808 	sub.w	r8, r3, r8
90019af4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90019af8:	7921      	ldrb	r1, [r4, #4]
90019afa:	fa1f f888 	uxth.w	r8, r8
90019afe:	1bdf      	subs	r7, r3, r7
90019b00:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
90019b04:	b2bb      	uxth	r3, r7
90019b06:	4440      	add	r0, r8
90019b08:	8922      	ldrh	r2, [r4, #8]
90019b0a:	8967      	ldrh	r7, [r4, #10]
90019b0c:	4460      	add	r0, ip
90019b0e:	89a4      	ldrh	r4, [r4, #12]
90019b10:	441a      	add	r2, r3
90019b12:	8eee      	ldrh	r6, [r5, #54]	; 0x36
90019b14:	44b8      	add	r8, r7
90019b16:	4423      	add	r3, r4
90019b18:	f8ad 0016 	strh.w	r0, [sp, #22]
90019b1c:	4432      	add	r2, r6
90019b1e:	44e0      	add	r8, ip
90019b20:	4433      	add	r3, r6
90019b22:	4c0a      	ldr	r4, [pc, #40]	; (90019b4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90019b24:	6b28      	ldr	r0, [r5, #48]	; 0x30
90019b26:	f88d 1014 	strb.w	r1, [sp, #20]
90019b2a:	a904      	add	r1, sp, #16
90019b2c:	9404      	str	r4, [sp, #16]
90019b2e:	f8ad 2018 	strh.w	r2, [sp, #24]
90019b32:	f8ad 801a 	strh.w	r8, [sp, #26]
90019b36:	f8ad 301c 	strh.w	r3, [sp, #28]
90019b3a:	6803      	ldr	r3, [r0, #0]
90019b3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90019b3e:	4798      	blx	r3
90019b40:	b008      	add	sp, #32
90019b42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90019b46:	bf00      	nop
90019b48:	9002ddfc 	.word	0x9002ddfc
90019b4c:	9002de10 	.word	0x9002de10

90019b50 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
90019b50:	b537      	push	{r0, r1, r2, r4, r5, lr}
90019b52:	4604      	mov	r4, r0
90019b54:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90019b58:	3201      	adds	r2, #1
90019b5a:	d112      	bne.n	90019b82 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90019b5c:	2500      	movs	r5, #0
90019b5e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90019b62:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90019b66:	6803      	ldr	r3, [r0, #0]
90019b68:	9500      	str	r5, [sp, #0]
90019b6a:	466d      	mov	r5, sp
90019b6c:	f8ad 1004 	strh.w	r1, [sp, #4]
90019b70:	f8ad 2006 	strh.w	r2, [sp, #6]
90019b74:	4629      	mov	r1, r5
90019b76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90019b78:	4798      	blx	r3
90019b7a:	e895 0003 	ldmia.w	r5, {r0, r1}
90019b7e:	e884 0003 	stmia.w	r4, {r0, r1}
90019b82:	4620      	mov	r0, r4
90019b84:	b003      	add	sp, #12
90019b86:	bd30      	pop	{r4, r5, pc}

90019b88 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90019b88:	b513      	push	{r0, r1, r4, lr}
90019b8a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
90019b8e:	4604      	mov	r4, r0
90019b90:	3301      	adds	r3, #1
90019b92:	d109      	bne.n	90019ba8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90019b94:	4601      	mov	r1, r0
90019b96:	4668      	mov	r0, sp
90019b98:	f7ff fd22 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019b9c:	f8bd 3000 	ldrh.w	r3, [sp]
90019ba0:	8423      	strh	r3, [r4, #32]
90019ba2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90019ba6:	8463      	strh	r3, [r4, #34]	; 0x22
90019ba8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90019bac:	b002      	add	sp, #8
90019bae:	bd10      	pop	{r4, pc}

90019bb0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90019bb0:	b513      	push	{r0, r1, r4, lr}
90019bb2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
90019bb6:	4604      	mov	r4, r0
90019bb8:	3301      	adds	r3, #1
90019bba:	d109      	bne.n	90019bd0 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90019bbc:	4601      	mov	r1, r0
90019bbe:	4668      	mov	r0, sp
90019bc0:	f7ff fd0e 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019bc4:	f8bd 3000 	ldrh.w	r3, [sp]
90019bc8:	8423      	strh	r3, [r4, #32]
90019bca:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90019bce:	8463      	strh	r3, [r4, #34]	; 0x22
90019bd0:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
90019bd4:	b002      	add	sp, #8
90019bd6:	bd10      	pop	{r4, pc}

90019bd8 <_ZN8touchgfx6ScreenC1Ev>:
90019bd8:	b570      	push	{r4, r5, r6, lr}
90019bda:	4b17      	ldr	r3, [pc, #92]	; (90019c38 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90019bdc:	4605      	mov	r5, r0
90019bde:	4a17      	ldr	r2, [pc, #92]	; (90019c3c <_ZN8touchgfx6ScreenC1Ev+0x64>)
90019be0:	2101      	movs	r1, #1
90019be2:	f845 3b04 	str.w	r3, [r5], #4
90019be6:	2300      	movs	r3, #0
90019be8:	6042      	str	r2, [r0, #4]
90019bea:	4604      	mov	r4, r0
90019bec:	8103      	strh	r3, [r0, #8]
90019bee:	8143      	strh	r3, [r0, #10]
90019bf0:	8183      	strh	r3, [r0, #12]
90019bf2:	81c3      	strh	r3, [r0, #14]
90019bf4:	8203      	strh	r3, [r0, #16]
90019bf6:	8243      	strh	r3, [r0, #18]
90019bf8:	8283      	strh	r3, [r0, #20]
90019bfa:	82c3      	strh	r3, [r0, #22]
90019bfc:	6203      	str	r3, [r0, #32]
90019bfe:	8483      	strh	r3, [r0, #36]	; 0x24
90019c00:	84c3      	strh	r3, [r0, #38]	; 0x26
90019c02:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90019c06:	6343      	str	r3, [r0, #52]	; 0x34
90019c08:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90019c0c:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
90019c10:	e9c0 3306 	strd	r3, r3, [r0, #24]
90019c14:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
90019c18:	4b09      	ldr	r3, [pc, #36]	; (90019c40 <_ZN8touchgfx6ScreenC1Ev+0x68>)
90019c1a:	4628      	mov	r0, r5
90019c1c:	f9b3 6000 	ldrsh.w	r6, [r3]
90019c20:	6b93      	ldr	r3, [r2, #56]	; 0x38
90019c22:	4a08      	ldr	r2, [pc, #32]	; (90019c44 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90019c24:	f9b2 1000 	ldrsh.w	r1, [r2]
90019c28:	4798      	blx	r3
90019c2a:	6863      	ldr	r3, [r4, #4]
90019c2c:	4628      	mov	r0, r5
90019c2e:	4631      	mov	r1, r6
90019c30:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90019c32:	4798      	blx	r3
90019c34:	4620      	mov	r0, r4
90019c36:	bd70      	pop	{r4, r5, r6, pc}
90019c38:	9002de38 	.word	0x9002de38
90019c3c:	9002d6a0 	.word	0x9002d6a0
90019c40:	24039ac2 	.word	0x24039ac2
90019c44:	24039ac0 	.word	0x24039ac0

90019c48 <_ZN8touchgfx6Screen4drawEv>:
90019c48:	4b09      	ldr	r3, [pc, #36]	; (90019c70 <_ZN8touchgfx6Screen4drawEv+0x28>)
90019c4a:	b507      	push	{r0, r1, r2, lr}
90019c4c:	f9b3 2000 	ldrsh.w	r2, [r3]
90019c50:	2100      	movs	r1, #0
90019c52:	4b08      	ldr	r3, [pc, #32]	; (90019c74 <_ZN8touchgfx6Screen4drawEv+0x2c>)
90019c54:	9100      	str	r1, [sp, #0]
90019c56:	4669      	mov	r1, sp
90019c58:	f9b3 3000 	ldrsh.w	r3, [r3]
90019c5c:	f8ad 2004 	strh.w	r2, [sp, #4]
90019c60:	f8ad 3006 	strh.w	r3, [sp, #6]
90019c64:	6803      	ldr	r3, [r0, #0]
90019c66:	689b      	ldr	r3, [r3, #8]
90019c68:	4798      	blx	r3
90019c6a:	b003      	add	sp, #12
90019c6c:	f85d fb04 	ldr.w	pc, [sp], #4
90019c70:	24039ac0 	.word	0x24039ac0
90019c74:	24039ac2 	.word	0x24039ac2

90019c78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90019c78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019c7c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
90019c80:	b089      	sub	sp, #36	; 0x24
90019c82:	4680      	mov	r8, r0
90019c84:	460c      	mov	r4, r1
90019c86:	2b00      	cmp	r3, #0
90019c88:	4615      	mov	r5, r2
90019c8a:	dd0e      	ble.n	90019caa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019c8c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
90019c90:	2b00      	cmp	r3, #0
90019c92:	dd0a      	ble.n	90019caa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019c94:	4628      	mov	r0, r5
90019c96:	f7ff ff5b 	bl	90019b50 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019c9a:	4621      	mov	r1, r4
90019c9c:	f7fe fa85 	bl	900181aa <_ZNK8touchgfx4Rect9intersectERKS0_>
90019ca0:	69eb      	ldr	r3, [r5, #28]
90019ca2:	b928      	cbnz	r0, 90019cb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90019ca4:	461d      	mov	r5, r3
90019ca6:	2b00      	cmp	r3, #0
90019ca8:	d1f4      	bne.n	90019c94 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90019caa:	b009      	add	sp, #36	; 0x24
90019cac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019cb0:	ae04      	add	r6, sp, #16
90019cb2:	2b00      	cmp	r3, #0
90019cb4:	f000 80b5 	beq.w	90019e22 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90019cb8:	682b      	ldr	r3, [r5, #0]
90019cba:	4629      	mov	r1, r5
90019cbc:	a802      	add	r0, sp, #8
90019cbe:	68db      	ldr	r3, [r3, #12]
90019cc0:	4798      	blx	r3
90019cc2:	4628      	mov	r0, r5
90019cc4:	f7ff ff60 	bl	90019b88 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90019cc8:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90019ccc:	4407      	add	r7, r0
90019cce:	4628      	mov	r0, r5
90019cd0:	f7ff ff6e 	bl	90019bb0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90019cd4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90019cd8:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90019cdc:	b23f      	sxth	r7, r7
90019cde:	4418      	add	r0, r3
90019ce0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90019ce4:	4621      	mov	r1, r4
90019ce6:	f8ad 2014 	strh.w	r2, [sp, #20]
90019cea:	f8ad 0012 	strh.w	r0, [sp, #18]
90019cee:	4630      	mov	r0, r6
90019cf0:	f8ad 3016 	strh.w	r3, [sp, #22]
90019cf4:	f8ad 7010 	strh.w	r7, [sp, #16]
90019cf8:	f7f9 f862 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90019cfc:	4628      	mov	r0, r5
90019cfe:	f7ff ff27 	bl	90019b50 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019d02:	ab06      	add	r3, sp, #24
90019d04:	4602      	mov	r2, r0
90019d06:	e896 0003 	ldmia.w	r6, {r0, r1}
90019d0a:	e883 0003 	stmia.w	r3, {r0, r1}
90019d0e:	4611      	mov	r1, r2
90019d10:	4618      	mov	r0, r3
90019d12:	f7f9 f855 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90019d16:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90019d1a:	f9b4 1000 	ldrsh.w	r1, [r4]
90019d1e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90019d22:	4299      	cmp	r1, r3
90019d24:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90019d28:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90019d2c:	d10b      	bne.n	90019d46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019d2e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90019d32:	4552      	cmp	r2, sl
90019d34:	d107      	bne.n	90019d46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019d36:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90019d3a:	455a      	cmp	r2, fp
90019d3c:	d103      	bne.n	90019d46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019d3e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90019d42:	454a      	cmp	r2, r9
90019d44:	d06d      	beq.n	90019e22 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90019d46:	f1bb 0f00 	cmp.w	fp, #0
90019d4a:	dd65      	ble.n	90019e18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90019d4c:	f1b9 0f00 	cmp.w	r9, #0
90019d50:	dd62      	ble.n	90019e18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90019d52:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90019d56:	fa1f f08a 	uxth.w	r0, sl
90019d5a:	4552      	cmp	r2, sl
90019d5c:	9000      	str	r0, [sp, #0]
90019d5e:	da12      	bge.n	90019d86 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
90019d60:	9301      	str	r3, [sp, #4]
90019d62:	9b00      	ldr	r3, [sp, #0]
90019d64:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90019d68:	f8ad 2012 	strh.w	r2, [sp, #18]
90019d6c:	1a9a      	subs	r2, r3, r2
90019d6e:	f8ad 1010 	strh.w	r1, [sp, #16]
90019d72:	4631      	mov	r1, r6
90019d74:	f8ad 0014 	strh.w	r0, [sp, #20]
90019d78:	4640      	mov	r0, r8
90019d7a:	f8ad 2016 	strh.w	r2, [sp, #22]
90019d7e:	69ea      	ldr	r2, [r5, #28]
90019d80:	f7ff ff7a 	bl	90019c78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019d84:	9b01      	ldr	r3, [sp, #4]
90019d86:	f9b4 2000 	ldrsh.w	r2, [r4]
90019d8a:	b29f      	uxth	r7, r3
90019d8c:	429a      	cmp	r2, r3
90019d8e:	da0d      	bge.n	90019dac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
90019d90:	f8ad 2010 	strh.w	r2, [sp, #16]
90019d94:	1aba      	subs	r2, r7, r2
90019d96:	f8ad a012 	strh.w	sl, [sp, #18]
90019d9a:	4631      	mov	r1, r6
90019d9c:	f8ad 2014 	strh.w	r2, [sp, #20]
90019da0:	4640      	mov	r0, r8
90019da2:	f8ad 9016 	strh.w	r9, [sp, #22]
90019da6:	69ea      	ldr	r2, [r5, #28]
90019da8:	f7ff ff66 	bl	90019c78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019dac:	8822      	ldrh	r2, [r4, #0]
90019dae:	445f      	add	r7, fp
90019db0:	88a3      	ldrh	r3, [r4, #4]
90019db2:	b2bf      	uxth	r7, r7
90019db4:	4413      	add	r3, r2
90019db6:	b23a      	sxth	r2, r7
90019db8:	b29b      	uxth	r3, r3
90019dba:	b219      	sxth	r1, r3
90019dbc:	4291      	cmp	r1, r2
90019dbe:	dd0d      	ble.n	90019ddc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90019dc0:	1bdb      	subs	r3, r3, r7
90019dc2:	f8ad 2010 	strh.w	r2, [sp, #16]
90019dc6:	f8ad a012 	strh.w	sl, [sp, #18]
90019dca:	4631      	mov	r1, r6
90019dcc:	f8ad 3014 	strh.w	r3, [sp, #20]
90019dd0:	4640      	mov	r0, r8
90019dd2:	f8ad 9016 	strh.w	r9, [sp, #22]
90019dd6:	69ea      	ldr	r2, [r5, #28]
90019dd8:	f7ff ff4e 	bl	90019c78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019ddc:	88e2      	ldrh	r2, [r4, #6]
90019dde:	8863      	ldrh	r3, [r4, #2]
90019de0:	4413      	add	r3, r2
90019de2:	9a00      	ldr	r2, [sp, #0]
90019de4:	444a      	add	r2, r9
90019de6:	b29b      	uxth	r3, r3
90019de8:	fa1f f982 	uxth.w	r9, r2
90019dec:	b219      	sxth	r1, r3
90019dee:	fa0f f289 	sxth.w	r2, r9
90019df2:	428a      	cmp	r2, r1
90019df4:	da15      	bge.n	90019e22 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90019df6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90019dfa:	eba3 0309 	sub.w	r3, r3, r9
90019dfe:	f9b4 0000 	ldrsh.w	r0, [r4]
90019e02:	f8ad 1014 	strh.w	r1, [sp, #20]
90019e06:	4631      	mov	r1, r6
90019e08:	f8ad 0010 	strh.w	r0, [sp, #16]
90019e0c:	f8ad 2012 	strh.w	r2, [sp, #18]
90019e10:	f8ad 3016 	strh.w	r3, [sp, #22]
90019e14:	69ea      	ldr	r2, [r5, #28]
90019e16:	e001      	b.n	90019e1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90019e18:	69ea      	ldr	r2, [r5, #28]
90019e1a:	4621      	mov	r1, r4
90019e1c:	4640      	mov	r0, r8
90019e1e:	f7ff ff2b 	bl	90019c78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019e22:	4628      	mov	r0, r5
90019e24:	f7ff fe94 	bl	90019b50 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019e28:	6861      	ldr	r1, [r4, #4]
90019e2a:	4602      	mov	r2, r0
90019e2c:	4633      	mov	r3, r6
90019e2e:	6820      	ldr	r0, [r4, #0]
90019e30:	c303      	stmia	r3!, {r0, r1}
90019e32:	4611      	mov	r1, r2
90019e34:	4630      	mov	r0, r6
90019e36:	f7f8 ffc3 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90019e3a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90019e3e:	2b00      	cmp	r3, #0
90019e40:	f77f af33 	ble.w	90019caa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019e44:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90019e48:	2b00      	cmp	r3, #0
90019e4a:	f77f af2e 	ble.w	90019caa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019e4e:	4628      	mov	r0, r5
90019e50:	f7ff fe9a 	bl	90019b88 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90019e54:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90019e58:	1a18      	subs	r0, r3, r0
90019e5a:	f8ad 0010 	strh.w	r0, [sp, #16]
90019e5e:	4628      	mov	r0, r5
90019e60:	f7ff fea6 	bl	90019bb0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90019e64:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90019e68:	4631      	mov	r1, r6
90019e6a:	1a18      	subs	r0, r3, r0
90019e6c:	f8ad 0012 	strh.w	r0, [sp, #18]
90019e70:	4628      	mov	r0, r5
90019e72:	682b      	ldr	r3, [r5, #0]
90019e74:	689b      	ldr	r3, [r3, #8]
90019e76:	4798      	blx	r3
90019e78:	e717      	b.n	90019caa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90019e7a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90019e7a:	b570      	push	{r4, r5, r6, lr}
90019e7c:	1d06      	adds	r6, r0, #4
90019e7e:	b086      	sub	sp, #24
90019e80:	460c      	mov	r4, r1
90019e82:	2300      	movs	r3, #0
90019e84:	4631      	mov	r1, r6
90019e86:	4605      	mov	r5, r0
90019e88:	a802      	add	r0, sp, #8
90019e8a:	9301      	str	r3, [sp, #4]
90019e8c:	f7ff fba8 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019e90:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90019e94:	8822      	ldrh	r2, [r4, #0]
90019e96:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90019e9a:	1ad2      	subs	r2, r2, r3
90019e9c:	8863      	ldrh	r3, [r4, #2]
90019e9e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90019ea2:	1a5b      	subs	r3, r3, r1
90019ea4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90019ea8:	f8ad 2010 	strh.w	r2, [sp, #16]
90019eac:	aa01      	add	r2, sp, #4
90019eae:	f8ad 0014 	strh.w	r0, [sp, #20]
90019eb2:	4630      	mov	r0, r6
90019eb4:	f8ad 1016 	strh.w	r1, [sp, #22]
90019eb8:	a904      	add	r1, sp, #16
90019eba:	f8ad 3012 	strh.w	r3, [sp, #18]
90019ebe:	f7f9 f857 	bl	90012f70 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90019ec2:	9a01      	ldr	r2, [sp, #4]
90019ec4:	b11a      	cbz	r2, 90019ece <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90019ec6:	4621      	mov	r1, r4
90019ec8:	4628      	mov	r0, r5
90019eca:	f7ff fed5 	bl	90019c78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019ece:	b006      	add	sp, #24
90019ed0:	bd70      	pop	{r4, r5, r6, pc}

90019ed2 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90019ed2:	4602      	mov	r2, r0
90019ed4:	b530      	push	{r4, r5, lr}
90019ed6:	4604      	mov	r4, r0
90019ed8:	b085      	sub	sp, #20
90019eda:	f852 0f08 	ldr.w	r0, [r2, #8]!
90019ede:	460d      	mov	r5, r1
90019ee0:	466b      	mov	r3, sp
90019ee2:	6851      	ldr	r1, [r2, #4]
90019ee4:	c303      	stmia	r3!, {r0, r1}
90019ee6:	4629      	mov	r1, r5
90019ee8:	4668      	mov	r0, sp
90019eea:	f7f8 ff69 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90019eee:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90019ef2:	b12b      	cbz	r3, 90019f00 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90019ef4:	4669      	mov	r1, sp
90019ef6:	4620      	mov	r0, r4
90019ef8:	f7ff ffbf 	bl	90019e7a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90019efc:	b005      	add	sp, #20
90019efe:	bd30      	pop	{r4, r5, pc}
90019f00:	3404      	adds	r4, #4
90019f02:	a802      	add	r0, sp, #8
90019f04:	4621      	mov	r1, r4
90019f06:	f7ff fb6b 	bl	900195e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019f0a:	f8bd 3000 	ldrh.w	r3, [sp]
90019f0e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90019f12:	4669      	mov	r1, sp
90019f14:	4620      	mov	r0, r4
90019f16:	1a9b      	subs	r3, r3, r2
90019f18:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90019f1c:	f8ad 3000 	strh.w	r3, [sp]
90019f20:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90019f24:	1a9b      	subs	r3, r3, r2
90019f26:	f8ad 3002 	strh.w	r3, [sp, #2]
90019f2a:	f7f8 ffe8 	bl	90012efe <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90019f2e:	e7e5      	b.n	90019efc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90019f30 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90019f30:	460b      	mov	r3, r1
90019f32:	680a      	ldr	r2, [r1, #0]
90019f34:	1d01      	adds	r1, r0, #4
90019f36:	6992      	ldr	r2, [r2, #24]
90019f38:	4618      	mov	r0, r3
90019f3a:	4710      	bx	r2

90019f3c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
90019f3c:	4298      	cmp	r0, r3
90019f3e:	d200      	bcs.n	90019f42 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
90019f40:	b913      	cbnz	r3, 90019f48 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
90019f42:	440a      	add	r2, r1
90019f44:	b210      	sxth	r0, r2
90019f46:	4770      	bx	lr
90019f48:	ee07 0a90 	vmov	s15, r0
90019f4c:	eef8 6a67 	vcvt.f32.u32	s13, s15
90019f50:	ee07 3a90 	vmov	s15, r3
90019f54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019f58:	ee86 7aa7 	vdiv.f32	s14, s13, s15
90019f5c:	ee07 2a90 	vmov	s15, r2
90019f60:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019f64:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
90019f68:	ee07 1a90 	vmov	s15, r1
90019f6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019f70:	ee37 7a66 	vsub.f32	s14, s14, s13
90019f74:	ee67 5a07 	vmul.f32	s11, s14, s14
90019f78:	eee5 6a87 	vfma.f32	s13, s11, s14
90019f7c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
90019f80:	eee6 7a26 	vfma.f32	s15, s12, s13
90019f84:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90019f88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019f8c:	bfcc      	ite	gt
90019f8e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
90019f92:	ee77 7ac7 	vsuble.f32	s15, s15, s14
90019f96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90019f9a:	ee17 3a90 	vmov	r3, s15
90019f9e:	b218      	sxth	r0, r3
90019fa0:	4770      	bx	lr

90019fa2 <_ZN8touchgfx12TextProviderC1Ev>:
90019fa2:	b538      	push	{r3, r4, r5, lr}
90019fa4:	2500      	movs	r5, #0
90019fa6:	2302      	movs	r3, #2
90019fa8:	4604      	mov	r4, r0
90019faa:	220e      	movs	r2, #14
90019fac:	7403      	strb	r3, [r0, #16]
90019fae:	4629      	mov	r1, r5
90019fb0:	6145      	str	r5, [r0, #20]
90019fb2:	7605      	strb	r5, [r0, #24]
90019fb4:	83c5      	strh	r5, [r0, #30]
90019fb6:	8405      	strh	r5, [r0, #32]
90019fb8:	86c5      	strh	r5, [r0, #54]	; 0x36
90019fba:	8705      	strh	r5, [r0, #56]	; 0x38
90019fbc:	87c5      	strh	r5, [r0, #62]	; 0x3e
90019fbe:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
90019fc2:	e9c0 5500 	strd	r5, r5, [r0]
90019fc6:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
90019fca:	304c      	adds	r0, #76	; 0x4c
90019fcc:	f00f fdc0 	bl	90029b50 <memset>
90019fd0:	2301      	movs	r3, #1
90019fd2:	4620      	mov	r0, r4
90019fd4:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
90019fd8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90019fdc:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
90019fe0:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
90019fe4:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
90019fe8:	f7ea fadc 	bl	900045a4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90019fec:	4620      	mov	r0, r4
90019fee:	bd38      	pop	{r3, r4, r5, pc}

90019ff0 <_ZN8touchgfx12TextProvider11endOfStringEv>:
90019ff0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90019ff2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90019ff6:	8c40      	ldrh	r0, [r0, #34]	; 0x22
90019ff8:	fab0 f080 	clz	r0, r0
90019ffc:	0940      	lsrs	r0, r0, #5
90019ffe:	4770      	bx	lr

9001a000 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001a000:	b530      	push	{r4, r5, lr}
9001a002:	2500      	movs	r5, #0
9001a004:	2401      	movs	r4, #1
9001a006:	6843      	ldr	r3, [r0, #4]
9001a008:	b913      	cbnz	r3, 9001a010 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
9001a00a:	6803      	ldr	r3, [r0, #0]
9001a00c:	b313      	cbz	r3, 9001a054 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001a00e:	6043      	str	r3, [r0, #4]
9001a010:	7e03      	ldrb	r3, [r0, #24]
9001a012:	b143      	cbz	r3, 9001a026 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001a014:	6943      	ldr	r3, [r0, #20]
9001a016:	b12b      	cbz	r3, 9001a024 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001a018:	881a      	ldrh	r2, [r3, #0]
9001a01a:	b11a      	cbz	r2, 9001a024 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001a01c:	1c9a      	adds	r2, r3, #2
9001a01e:	6142      	str	r2, [r0, #20]
9001a020:	8818      	ldrh	r0, [r3, #0]
9001a022:	bd30      	pop	{r4, r5, pc}
9001a024:	7605      	strb	r5, [r0, #24]
9001a026:	6843      	ldr	r3, [r0, #4]
9001a028:	8819      	ldrh	r1, [r3, #0]
9001a02a:	b199      	cbz	r1, 9001a054 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001a02c:	1c9a      	adds	r2, r3, #2
9001a02e:	2902      	cmp	r1, #2
9001a030:	6042      	str	r2, [r0, #4]
9001a032:	d1f5      	bne.n	9001a020 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001a034:	7c03      	ldrb	r3, [r0, #16]
9001a036:	2b01      	cmp	r3, #1
9001a038:	d8e5      	bhi.n	9001a006 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a03a:	1c5a      	adds	r2, r3, #1
9001a03c:	3302      	adds	r3, #2
9001a03e:	7402      	strb	r2, [r0, #16]
9001a040:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001a044:	6143      	str	r3, [r0, #20]
9001a046:	2b00      	cmp	r3, #0
9001a048:	d0dd      	beq.n	9001a006 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a04a:	881b      	ldrh	r3, [r3, #0]
9001a04c:	2b00      	cmp	r3, #0
9001a04e:	d0da      	beq.n	9001a006 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a050:	7604      	strb	r4, [r0, #24]
9001a052:	e7d8      	b.n	9001a006 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a054:	2000      	movs	r0, #0
9001a056:	e7e4      	b.n	9001a022 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001a058 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001a058:	6001      	str	r1, [r0, #0]
9001a05a:	2100      	movs	r1, #0
9001a05c:	b430      	push	{r4, r5}
9001a05e:	6041      	str	r1, [r0, #4]
9001a060:	6815      	ldr	r5, [r2, #0]
9001a062:	6085      	str	r5, [r0, #8]
9001a064:	6852      	ldr	r2, [r2, #4]
9001a066:	6443      	str	r3, [r0, #68]	; 0x44
9001a068:	9b02      	ldr	r3, [sp, #8]
9001a06a:	60c2      	str	r2, [r0, #12]
9001a06c:	7401      	strb	r1, [r0, #16]
9001a06e:	6141      	str	r1, [r0, #20]
9001a070:	7601      	strb	r1, [r0, #24]
9001a072:	8701      	strh	r1, [r0, #56]	; 0x38
9001a074:	8401      	strh	r1, [r0, #32]
9001a076:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
9001a07a:	6483      	str	r3, [r0, #72]	; 0x48
9001a07c:	bc30      	pop	{r4, r5}
9001a07e:	f7ea ba91 	b.w	900045a4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001a082 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
9001a082:	b408      	push	{r3}
9001a084:	b510      	push	{r4, lr}
9001a086:	b085      	sub	sp, #20
9001a088:	ac07      	add	r4, sp, #28
9001a08a:	f854 3b04 	ldr.w	r3, [r4], #4
9001a08e:	9300      	str	r3, [sp, #0]
9001a090:	4613      	mov	r3, r2
9001a092:	4622      	mov	r2, r4
9001a094:	9403      	str	r4, [sp, #12]
9001a096:	f7ff ffdf 	bl	9001a058 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a09a:	b005      	add	sp, #20
9001a09c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001a0a0:	b001      	add	sp, #4
9001a0a2:	4770      	bx	lr

9001a0a4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001a0a4:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a0a6:	4605      	mov	r5, r0
9001a0a8:	4608      	mov	r0, r1
9001a0aa:	b1f1      	cbz	r1, 9001a0ea <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
9001a0ac:	f105 044c 	add.w	r4, r5, #76	; 0x4c
9001a0b0:	460b      	mov	r3, r1
9001a0b2:	f101 0708 	add.w	r7, r1, #8
9001a0b6:	4622      	mov	r2, r4
9001a0b8:	6818      	ldr	r0, [r3, #0]
9001a0ba:	3308      	adds	r3, #8
9001a0bc:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001a0c0:	4626      	mov	r6, r4
9001a0c2:	42bb      	cmp	r3, r7
9001a0c4:	c603      	stmia	r6!, {r0, r1}
9001a0c6:	4634      	mov	r4, r6
9001a0c8:	d1f6      	bne.n	9001a0b8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001a0ca:	6818      	ldr	r0, [r3, #0]
9001a0cc:	6030      	str	r0, [r6, #0]
9001a0ce:	4610      	mov	r0, r2
9001a0d0:	889b      	ldrh	r3, [r3, #4]
9001a0d2:	80b3      	strh	r3, [r6, #4]
9001a0d4:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
9001a0d8:	015b      	lsls	r3, r3, #5
9001a0da:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001a0de:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
9001a0e2:	430b      	orrs	r3, r1
9001a0e4:	425b      	negs	r3, r3
9001a0e6:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
9001a0ea:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001a0ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
9001a0ec:	b538      	push	{r3, r4, r5, lr}
9001a0ee:	460c      	mov	r4, r1
9001a0f0:	6811      	ldr	r1, [r2, #0]
9001a0f2:	4610      	mov	r0, r2
9001a0f4:	68cd      	ldr	r5, [r1, #12]
9001a0f6:	4619      	mov	r1, r3
9001a0f8:	47a8      	blx	r5
9001a0fa:	2800      	cmp	r0, #0
9001a0fc:	bf08      	it	eq
9001a0fe:	4620      	moveq	r0, r4
9001a100:	bd38      	pop	{r3, r4, r5, pc}
	...

9001a104 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
9001a104:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001a106:	4604      	mov	r4, r0
9001a108:	4615      	mov	r5, r2
9001a10a:	4608      	mov	r0, r1
9001a10c:	b93a      	cbnz	r2, 9001a11e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
9001a10e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001a112:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
9001a116:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
9001a11a:	4628      	mov	r0, r5
9001a11c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001a11e:	f892 c00d 	ldrb.w	ip, [r2, #13]
9001a122:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
9001a126:	8893      	ldrh	r3, [r2, #4]
9001a128:	ea4f 160c 	mov.w	r6, ip, lsl #4
9001a12c:	f406 7280 	and.w	r2, r6, #256	; 0x100
9001a130:	79ee      	ldrb	r6, [r5, #7]
9001a132:	4316      	orrs	r6, r2
9001a134:	19da      	adds	r2, r3, r7
9001a136:	b291      	uxth	r1, r2
9001a138:	b2b7      	uxth	r7, r6
9001a13a:	291d      	cmp	r1, #29
9001a13c:	d87b      	bhi.n	9001a236 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001a13e:	2201      	movs	r2, #1
9001a140:	10f6      	asrs	r6, r6, #3
9001a142:	408a      	lsls	r2, r1
9001a144:	4974      	ldr	r1, [pc, #464]	; (9001a318 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
9001a146:	420a      	tst	r2, r1
9001a148:	d12e      	bne.n	9001a1a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001a14a:	f412 7f60 	tst.w	r2, #896	; 0x380
9001a14e:	d072      	beq.n	9001a236 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001a150:	f104 024c 	add.w	r2, r4, #76	; 0x4c
9001a154:	462b      	mov	r3, r5
9001a156:	f105 0e08 	add.w	lr, r5, #8
9001a15a:	4615      	mov	r5, r2
9001a15c:	6818      	ldr	r0, [r3, #0]
9001a15e:	3308      	adds	r3, #8
9001a160:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001a164:	4694      	mov	ip, r2
9001a166:	4573      	cmp	r3, lr
9001a168:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001a16c:	4662      	mov	r2, ip
9001a16e:	d1f5      	bne.n	9001a15c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
9001a170:	6818      	ldr	r0, [r3, #0]
9001a172:	f8cc 0000 	str.w	r0, [ip]
9001a176:	889b      	ldrh	r3, [r3, #4]
9001a178:	f8ac 3004 	strh.w	r3, [ip, #4]
9001a17c:	b2b3      	uxth	r3, r6
9001a17e:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
9001a182:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
9001a186:	1aca      	subs	r2, r1, r3
9001a188:	1bcf      	subs	r7, r1, r7
9001a18a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
9001a18e:	b292      	uxth	r2, r2
9001a190:	1afb      	subs	r3, r7, r3
9001a192:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
9001a196:	10d2      	asrs	r2, r2, #3
9001a198:	f002 0260 	and.w	r2, r2, #96	; 0x60
9001a19c:	4302      	orrs	r2, r0
9001a19e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
9001a1a2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001a1a6:	e7b8      	b.n	9001a11a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001a1a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
9001a1aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a1ae:	8c59      	ldrh	r1, [r3, #34]	; 0x22
9001a1b0:	f640 6333 	movw	r3, #3635	; 0xe33
9001a1b4:	4299      	cmp	r1, r3
9001a1b6:	d110      	bne.n	9001a1da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
9001a1b8:	6803      	ldr	r3, [r0, #0]
9001a1ba:	68db      	ldr	r3, [r3, #12]
9001a1bc:	4798      	blx	r3
9001a1be:	7b41      	ldrb	r1, [r0, #13]
9001a1c0:	00cb      	lsls	r3, r1, #3
9001a1c2:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a1c6:	7a03      	ldrb	r3, [r0, #8]
9001a1c8:	0648      	lsls	r0, r1, #25
9001a1ca:	ea43 0302 	orr.w	r3, r3, r2
9001a1ce:	bf44      	itt	mi
9001a1d0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a1d4:	b21b      	sxthmi	r3, r3
9001a1d6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a1da:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
9001a1de:	462a      	mov	r2, r5
9001a1e0:	f105 0c08 	add.w	ip, r5, #8
9001a1e4:	443b      	add	r3, r7
9001a1e6:	4433      	add	r3, r6
9001a1e8:	f104 064c 	add.w	r6, r4, #76	; 0x4c
9001a1ec:	b29b      	uxth	r3, r3
9001a1ee:	4635      	mov	r5, r6
9001a1f0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a1f4:	6810      	ldr	r0, [r2, #0]
9001a1f6:	3208      	adds	r2, #8
9001a1f8:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001a1fc:	4637      	mov	r7, r6
9001a1fe:	4562      	cmp	r2, ip
9001a200:	c703      	stmia	r7!, {r0, r1}
9001a202:	463e      	mov	r6, r7
9001a204:	d1f6      	bne.n	9001a1f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
9001a206:	6810      	ldr	r0, [r2, #0]
9001a208:	6038      	str	r0, [r7, #0]
9001a20a:	8892      	ldrh	r2, [r2, #4]
9001a20c:	80ba      	strh	r2, [r7, #4]
9001a20e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001a212:	10db      	asrs	r3, r3, #3
9001a214:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001a218:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001a21c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001a220:	4313      	orrs	r3, r2
9001a222:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
9001a226:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001a22a:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
9001a22e:	1a9b      	subs	r3, r3, r2
9001a230:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
9001a234:	e771      	b.n	9001a11a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001a236:	f023 0204 	bic.w	r2, r3, #4
9001a23a:	f640 611b 	movw	r1, #3611	; 0xe1b
9001a23e:	428a      	cmp	r2, r1
9001a240:	d003      	beq.n	9001a24a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
9001a242:	f640 621d 	movw	r2, #3613	; 0xe1d
9001a246:	4293      	cmp	r3, r2
9001a248:	d120      	bne.n	9001a28c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
9001a24a:	3b01      	subs	r3, #1
9001a24c:	4602      	mov	r2, r0
9001a24e:	4629      	mov	r1, r5
9001a250:	4620      	mov	r0, r4
9001a252:	b29b      	uxth	r3, r3
9001a254:	f7ff ff4a 	bl	9001a0ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001a258:	7b41      	ldrb	r1, [r0, #13]
9001a25a:	00cb      	lsls	r3, r1, #3
9001a25c:	0649      	lsls	r1, r1, #25
9001a25e:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a262:	7a03      	ldrb	r3, [r0, #8]
9001a264:	ea43 0302 	orr.w	r3, r3, r2
9001a268:	bf44      	itt	mi
9001a26a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a26e:	b21b      	sxthmi	r3, r3
9001a270:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a274:	7b6b      	ldrb	r3, [r5, #13]
9001a276:	7aaa      	ldrb	r2, [r5, #10]
9001a278:	005b      	lsls	r3, r3, #1
9001a27a:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001a27e:	4313      	orrs	r3, r2
9001a280:	115a      	asrs	r2, r3, #5
9001a282:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001a286:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
9001a28a:	e035      	b.n	9001a2f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
9001a28c:	ea4f 02cc 	mov.w	r2, ip, lsl #3
9001a290:	f01c 0f40 	tst.w	ip, #64	; 0x40
9001a294:	f402 7180 	and.w	r1, r2, #256	; 0x100
9001a298:	7a2a      	ldrb	r2, [r5, #8]
9001a29a:	ea42 0201 	orr.w	r2, r2, r1
9001a29e:	f640 6109 	movw	r1, #3593	; 0xe09
9001a2a2:	bf1c      	itt	ne
9001a2a4:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
9001a2a8:	b212      	sxthne	r2, r2
9001a2aa:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001a2ae:	f023 0210 	bic.w	r2, r3, #16
9001a2b2:	428a      	cmp	r2, r1
9001a2b4:	d003      	beq.n	9001a2be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001a2b6:	f640 6213 	movw	r2, #3603	; 0xe13
9001a2ba:	4293      	cmp	r3, r2
9001a2bc:	d129      	bne.n	9001a312 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
9001a2be:	7b6e      	ldrb	r6, [r5, #13]
9001a2c0:	4629      	mov	r1, r5
9001a2c2:	0076      	lsls	r6, r6, #1
9001a2c4:	f406 7280 	and.w	r2, r6, #256	; 0x100
9001a2c8:	7aae      	ldrb	r6, [r5, #10]
9001a2ca:	4316      	orrs	r6, r2
9001a2cc:	f640 6213 	movw	r2, #3603	; 0xe13
9001a2d0:	4293      	cmp	r3, r2
9001a2d2:	4602      	mov	r2, r0
9001a2d4:	4620      	mov	r0, r4
9001a2d6:	bf16      	itet	ne
9001a2d8:	f103 33ff 	addne.w	r3, r3, #4294967295
9001a2dc:	f640 630c 	movweq	r3, #3596	; 0xe0c
9001a2e0:	b29b      	uxthne	r3, r3
9001a2e2:	f7ff ff03 	bl	9001a0ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001a2e6:	7b43      	ldrb	r3, [r0, #13]
9001a2e8:	7a82      	ldrb	r2, [r0, #10]
9001a2ea:	005b      	lsls	r3, r3, #1
9001a2ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001a2f0:	4313      	orrs	r3, r2
9001a2f2:	1af6      	subs	r6, r6, r3
9001a2f4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
9001a2f8:	7b69      	ldrb	r1, [r5, #13]
9001a2fa:	00cb      	lsls	r3, r1, #3
9001a2fc:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a300:	7a2b      	ldrb	r3, [r5, #8]
9001a302:	4313      	orrs	r3, r2
9001a304:	064a      	lsls	r2, r1, #25
9001a306:	bf44      	itt	mi
9001a308:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a30c:	b21b      	sxthmi	r3, r3
9001a30e:	1bdb      	subs	r3, r3, r7
9001a310:	e747      	b.n	9001a1a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001a312:	2300      	movs	r3, #0
9001a314:	e7b7      	b.n	9001a286 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
9001a316:	bf00      	nop
9001a318:	3fc00079 	.word	0x3fc00079

9001a31c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001a31c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a320:	4604      	mov	r4, r0
9001a322:	b942      	cbnz	r2, 9001a336 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
9001a324:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001a328:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
9001a32c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
9001a330:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
9001a334:	e047      	b.n	9001a3c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001a336:	7b51      	ldrb	r1, [r2, #13]
9001a338:	8893      	ldrh	r3, [r2, #4]
9001a33a:	010d      	lsls	r5, r1, #4
9001a33c:	f405 7080 	and.w	r0, r5, #256	; 0x100
9001a340:	79d5      	ldrb	r5, [r2, #7]
9001a342:	4305      	orrs	r5, r0
9001a344:	2d04      	cmp	r5, #4
9001a346:	bfcc      	ite	gt
9001a348:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001a34c:	f04f 0e01 	movle.w	lr, #1
9001a350:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
9001a354:	f200 80ab 	bhi.w	9001a4ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001a358:	f240 60e7 	movw	r0, #1767	; 0x6e7
9001a35c:	4283      	cmp	r3, r0
9001a35e:	d216      	bcs.n	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a360:	f240 605b 	movw	r0, #1627	; 0x65b
9001a364:	4283      	cmp	r3, r0
9001a366:	d859      	bhi.n	9001a41c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001a368:	f240 6057 	movw	r0, #1623	; 0x657
9001a36c:	4283      	cmp	r3, r0
9001a36e:	d20e      	bcs.n	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a370:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
9001a374:	d24a      	bcs.n	9001a40c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001a376:	f240 604e 	movw	r0, #1614	; 0x64e
9001a37a:	4283      	cmp	r3, r0
9001a37c:	d207      	bcs.n	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a37e:	f240 601a 	movw	r0, #1562	; 0x61a
9001a382:	4283      	cmp	r3, r0
9001a384:	d02a      	beq.n	9001a3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a386:	d821      	bhi.n	9001a3cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001a388:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
9001a38c:	d35b      	bcc.n	9001a446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a38e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
9001a392:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a396:	f040 80d0 	bne.w	9001a53a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001a39a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
9001a39e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a3a2:	f040 80ca 	bne.w	9001a53a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001a3a6:	00cb      	lsls	r3, r1, #3
9001a3a8:	0649      	lsls	r1, r1, #25
9001a3aa:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a3ae:	7a13      	ldrb	r3, [r2, #8]
9001a3b0:	ea43 0300 	orr.w	r3, r3, r0
9001a3b4:	bf44      	itt	mi
9001a3b6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a3ba:	b21b      	sxthmi	r3, r3
9001a3bc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a3c0:	1b5d      	subs	r5, r3, r5
9001a3c2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a3c6:	4610      	mov	r0, r2
9001a3c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001a3cc:	f240 604b 	movw	r0, #1611	; 0x64b
9001a3d0:	4283      	cmp	r3, r0
9001a3d2:	d338      	bcc.n	9001a446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a3d4:	f240 604c 	movw	r0, #1612	; 0x64c
9001a3d8:	4283      	cmp	r3, r0
9001a3da:	d9d8      	bls.n	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a3dc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
9001a3e0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
9001a3e4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a3e8:	f040 80f3 	bne.w	9001a5d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001a3ec:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a3f0:	f040 80ef 	bne.w	9001a5d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001a3f4:	00cb      	lsls	r3, r1, #3
9001a3f6:	064e      	lsls	r6, r1, #25
9001a3f8:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a3fc:	7a13      	ldrb	r3, [r2, #8]
9001a3fe:	ea43 0300 	orr.w	r3, r3, r0
9001a402:	bf44      	itt	mi
9001a404:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a408:	b21b      	sxthmi	r3, r3
9001a40a:	e7d9      	b.n	9001a3c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001a40c:	f240 6054 	movw	r0, #1620	; 0x654
9001a410:	4283      	cmp	r3, r0
9001a412:	d8e3      	bhi.n	9001a3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a414:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
9001a418:	d9e0      	bls.n	9001a3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a41a:	e7b8      	b.n	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a41c:	f240 6074 	movw	r0, #1652	; 0x674
9001a420:	4283      	cmp	r3, r0
9001a422:	d0b4      	beq.n	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a424:	d82d      	bhi.n	9001a482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001a426:	f240 605e 	movw	r0, #1630	; 0x65e
9001a42a:	4283      	cmp	r3, r0
9001a42c:	d804      	bhi.n	9001a438 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001a42e:	f240 605d 	movw	r0, #1629	; 0x65d
9001a432:	4283      	cmp	r3, r0
9001a434:	d3d2      	bcc.n	9001a3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a436:	e7aa      	b.n	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a438:	f240 605f 	movw	r0, #1631	; 0x65f
9001a43c:	4283      	cmp	r3, r0
9001a43e:	d0cd      	beq.n	9001a3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a440:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
9001a444:	d0a3      	beq.n	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a446:	00cb      	lsls	r3, r1, #3
9001a448:	0649      	lsls	r1, r1, #25
9001a44a:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a44e:	7a13      	ldrb	r3, [r2, #8]
9001a450:	ea43 0300 	orr.w	r3, r3, r0
9001a454:	bf44      	itt	mi
9001a456:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a45a:	b21b      	sxthmi	r3, r3
9001a45c:	1b5d      	subs	r5, r3, r5
9001a45e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a462:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a466:	7b53      	ldrb	r3, [r2, #13]
9001a468:	015b      	lsls	r3, r3, #5
9001a46a:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001a46e:	7993      	ldrb	r3, [r2, #6]
9001a470:	430b      	orrs	r3, r1
9001a472:	2105      	movs	r1, #5
9001a474:	005b      	lsls	r3, r3, #1
9001a476:	fb93 f3f1 	sdiv	r3, r3, r1
9001a47a:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001a47e:	440b      	add	r3, r1
9001a480:	e756      	b.n	9001a330 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001a482:	f240 60e2 	movw	r0, #1762	; 0x6e2
9001a486:	4283      	cmp	r3, r0
9001a488:	d809      	bhi.n	9001a49e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001a48a:	f240 60df 	movw	r0, #1759	; 0x6df
9001a48e:	4283      	cmp	r3, r0
9001a490:	f4bf af7d 	bcs.w	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a494:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
9001a498:	2b05      	cmp	r3, #5
9001a49a:	d8d4      	bhi.n	9001a446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a49c:	e777      	b.n	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a49e:	f240 60e3 	movw	r0, #1763	; 0x6e3
9001a4a2:	4283      	cmp	r3, r0
9001a4a4:	d09a      	beq.n	9001a3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a4a6:	f240 60e4 	movw	r0, #1764	; 0x6e4
9001a4aa:	4283      	cmp	r3, r0
9001a4ac:	e7ca      	b.n	9001a444 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001a4ae:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
9001a4b2:	d22b      	bcs.n	9001a50c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
9001a4b4:	f640 00ed 	movw	r0, #2285	; 0x8ed
9001a4b8:	4283      	cmp	r3, r0
9001a4ba:	d28f      	bcs.n	9001a3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a4bc:	f640 00e5 	movw	r0, #2277	; 0x8e5
9001a4c0:	4283      	cmp	r3, r0
9001a4c2:	d816      	bhi.n	9001a4f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
9001a4c4:	f640 00e4 	movw	r0, #2276	; 0x8e4
9001a4c8:	4283      	cmp	r3, r0
9001a4ca:	f4bf af60 	bcs.w	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a4ce:	f240 60ec 	movw	r0, #1772	; 0x6ec
9001a4d2:	4283      	cmp	r3, r0
9001a4d4:	d80a      	bhi.n	9001a4ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001a4d6:	f240 60eb 	movw	r0, #1771	; 0x6eb
9001a4da:	4283      	cmp	r3, r0
9001a4dc:	f4bf af57 	bcs.w	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a4e0:	f240 60ea 	movw	r0, #1770	; 0x6ea
9001a4e4:	4283      	cmp	r3, r0
9001a4e6:	f43f af79 	beq.w	9001a3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a4ea:	e7ac      	b.n	9001a446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a4ec:	f240 60ed 	movw	r0, #1773	; 0x6ed
9001a4f0:	e7f8      	b.n	9001a4e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001a4f2:	f640 00e8 	movw	r0, #2280	; 0x8e8
9001a4f6:	4283      	cmp	r3, r0
9001a4f8:	d802      	bhi.n	9001a500 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001a4fa:	f640 00e7 	movw	r0, #2279	; 0x8e7
9001a4fe:	e798      	b.n	9001a432 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001a500:	f640 00e9 	movw	r0, #2281	; 0x8e9
9001a504:	4283      	cmp	r3, r0
9001a506:	f47f af42 	bne.w	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a50a:	e767      	b.n	9001a3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a50c:	f640 00f6 	movw	r0, #2294	; 0x8f6
9001a510:	4283      	cmp	r3, r0
9001a512:	f43f af63 	beq.w	9001a3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a516:	d802      	bhi.n	9001a51e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001a518:	f640 00f2 	movw	r0, #2290	; 0x8f2
9001a51c:	e7f2      	b.n	9001a504 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001a51e:	f640 00fa 	movw	r0, #2298	; 0x8fa
9001a522:	4283      	cmp	r3, r0
9001a524:	d805      	bhi.n	9001a532 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001a526:	f640 00f9 	movw	r0, #2297	; 0x8f9
9001a52a:	4283      	cmp	r3, r0
9001a52c:	f4ff af2f 	bcc.w	9001a38e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a530:	e754      	b.n	9001a3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a532:	f640 00fe 	movw	r0, #2302	; 0x8fe
9001a536:	4283      	cmp	r3, r0
9001a538:	e7af      	b.n	9001a49a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001a53a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001a53e:	4617      	mov	r7, r2
9001a540:	f102 0808 	add.w	r8, r2, #8
9001a544:	4666      	mov	r6, ip
9001a546:	6838      	ldr	r0, [r7, #0]
9001a548:	3708      	adds	r7, #8
9001a54a:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001a54e:	46e6      	mov	lr, ip
9001a550:	4547      	cmp	r7, r8
9001a552:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001a556:	46f4      	mov	ip, lr
9001a558:	d1f5      	bne.n	9001a546 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001a55a:	6838      	ldr	r0, [r7, #0]
9001a55c:	f8ce 0000 	str.w	r0, [lr]
9001a560:	88b9      	ldrh	r1, [r7, #4]
9001a562:	f8ae 1004 	strh.w	r1, [lr, #4]
9001a566:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001a56a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a56e:	d009      	beq.n	9001a584 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001a570:	7b51      	ldrb	r1, [r2, #13]
9001a572:	7992      	ldrb	r2, [r2, #6]
9001a574:	0149      	lsls	r1, r1, #5
9001a576:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001a57a:	4311      	orrs	r1, r2
9001a57c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001a580:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
9001a584:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a588:	b2ad      	uxth	r5, r5
9001a58a:	d00d      	beq.n	9001a5a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
9001a58c:	442b      	add	r3, r5
9001a58e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001a592:	b29b      	uxth	r3, r3
9001a594:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001a598:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001a59c:	10db      	asrs	r3, r3, #3
9001a59e:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001a5a2:	4313      	orrs	r3, r2
9001a5a4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001a5a8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
9001a5ac:	00cb      	lsls	r3, r1, #3
9001a5ae:	064f      	lsls	r7, r1, #25
9001a5b0:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a5b4:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001a5b8:	ea43 0302 	orr.w	r3, r3, r2
9001a5bc:	bf44      	itt	mi
9001a5be:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a5c2:	b21b      	sxthmi	r3, r3
9001a5c4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a5c8:	1b5b      	subs	r3, r3, r5
9001a5ca:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001a5ce:	4632      	mov	r2, r6
9001a5d0:	e6f9      	b.n	9001a3c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001a5d2:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001a5d6:	4617      	mov	r7, r2
9001a5d8:	f102 0908 	add.w	r9, r2, #8
9001a5dc:	4666      	mov	r6, ip
9001a5de:	6838      	ldr	r0, [r7, #0]
9001a5e0:	3708      	adds	r7, #8
9001a5e2:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001a5e6:	46e0      	mov	r8, ip
9001a5e8:	454f      	cmp	r7, r9
9001a5ea:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001a5ee:	46c4      	mov	ip, r8
9001a5f0:	d1f5      	bne.n	9001a5de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001a5f2:	6838      	ldr	r0, [r7, #0]
9001a5f4:	f8c8 0000 	str.w	r0, [r8]
9001a5f8:	88b9      	ldrh	r1, [r7, #4]
9001a5fa:	f8a8 1004 	strh.w	r1, [r8, #4]
9001a5fe:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001a602:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a606:	d009      	beq.n	9001a61c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001a608:	7b51      	ldrb	r1, [r2, #13]
9001a60a:	7992      	ldrb	r2, [r2, #6]
9001a60c:	0149      	lsls	r1, r1, #5
9001a60e:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001a612:	4311      	orrs	r1, r2
9001a614:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001a618:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
9001a61c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a620:	d00e      	beq.n	9001a640 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001a622:	eba3 030e 	sub.w	r3, r3, lr
9001a626:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001a62a:	b29b      	uxth	r3, r3
9001a62c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001a630:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001a634:	10db      	asrs	r3, r3, #3
9001a636:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001a63a:	4313      	orrs	r3, r2
9001a63c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001a640:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
9001a644:	00cb      	lsls	r3, r1, #3
9001a646:	0648      	lsls	r0, r1, #25
9001a648:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a64c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001a650:	ea43 0302 	orr.w	r3, r3, r2
9001a654:	bf44      	itt	mi
9001a656:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a65a:	b21b      	sxthmi	r3, r3
9001a65c:	1b5d      	subs	r5, r3, r5
9001a65e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a662:	e7b4      	b.n	9001a5ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

9001a664 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
9001a664:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001a668:	461e      	mov	r6, r3
9001a66a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001a66c:	4604      	mov	r4, r0
9001a66e:	4617      	mov	r7, r2
9001a670:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001a674:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001a678:	f7e9 ff44 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001a67c:	4605      	mov	r5, r0
9001a67e:	b918      	cbnz	r0, 9001a688 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001a680:	6030      	str	r0, [r6, #0]
9001a682:	4628      	mov	r0, r5
9001a684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001a688:	683b      	ldr	r3, [r7, #0]
9001a68a:	4601      	mov	r1, r0
9001a68c:	4638      	mov	r0, r7
9001a68e:	68db      	ldr	r3, [r3, #12]
9001a690:	4798      	blx	r3
9001a692:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001a696:	4602      	mov	r2, r0
9001a698:	6030      	str	r0, [r6, #0]
9001a69a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001a69e:	d213      	bcs.n	9001a6c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001a6a0:	4643      	mov	r3, r8
9001a6a2:	4639      	mov	r1, r7
9001a6a4:	4620      	mov	r0, r4
9001a6a6:	f7ff fe39 	bl	9001a31c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001a6aa:	6030      	str	r0, [r6, #0]
9001a6ac:	6833      	ldr	r3, [r6, #0]
9001a6ae:	b143      	cbz	r3, 9001a6c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001a6b0:	7b5a      	ldrb	r2, [r3, #13]
9001a6b2:	7a9b      	ldrb	r3, [r3, #10]
9001a6b4:	0052      	lsls	r2, r2, #1
9001a6b6:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001a6ba:	4313      	orrs	r3, r2
9001a6bc:	bf0c      	ite	eq
9001a6be:	2301      	moveq	r3, #1
9001a6c0:	2300      	movne	r3, #0
9001a6c2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001a6c6:	e7dc      	b.n	9001a682 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
9001a6c8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
9001a6cc:	b29b      	uxth	r3, r3
9001a6ce:	2b7f      	cmp	r3, #127	; 0x7f
9001a6d0:	d804      	bhi.n	9001a6dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001a6d2:	4639      	mov	r1, r7
9001a6d4:	4620      	mov	r0, r4
9001a6d6:	f7ff fd15 	bl	9001a104 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001a6da:	e7e6      	b.n	9001a6aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001a6dc:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001a6e0:	2b00      	cmp	r3, #0
9001a6e2:	d0e3      	beq.n	9001a6ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001a6e4:	f640 1302 	movw	r3, #2306	; 0x902
9001a6e8:	429d      	cmp	r5, r3
9001a6ea:	d1df      	bne.n	9001a6ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001a6ec:	4601      	mov	r1, r0
9001a6ee:	4620      	mov	r0, r4
9001a6f0:	f7ff fcd8 	bl	9001a0a4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001a6f4:	e7d9      	b.n	9001a6aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001a6f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001a6f6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001a6fa:	461e      	mov	r6, r3
9001a6fc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001a6fe:	4604      	mov	r4, r0
9001a700:	4617      	mov	r7, r2
9001a702:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001a706:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001a70a:	f7e9 fefb 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001a70e:	4605      	mov	r5, r0
9001a710:	b918      	cbnz	r0, 9001a71a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001a712:	6030      	str	r0, [r6, #0]
9001a714:	4628      	mov	r0, r5
9001a716:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001a71a:	683b      	ldr	r3, [r7, #0]
9001a71c:	4601      	mov	r1, r0
9001a71e:	4638      	mov	r0, r7
9001a720:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001a724:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001a728:	47c8      	blx	r9
9001a72a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001a72e:	4602      	mov	r2, r0
9001a730:	6030      	str	r0, [r6, #0]
9001a732:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001a736:	d213      	bcs.n	9001a760 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001a738:	4643      	mov	r3, r8
9001a73a:	4639      	mov	r1, r7
9001a73c:	4620      	mov	r0, r4
9001a73e:	f7ff fded 	bl	9001a31c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001a742:	6030      	str	r0, [r6, #0]
9001a744:	6833      	ldr	r3, [r6, #0]
9001a746:	b143      	cbz	r3, 9001a75a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001a748:	7b5a      	ldrb	r2, [r3, #13]
9001a74a:	7a9b      	ldrb	r3, [r3, #10]
9001a74c:	0052      	lsls	r2, r2, #1
9001a74e:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001a752:	4313      	orrs	r3, r2
9001a754:	bf0c      	ite	eq
9001a756:	2301      	moveq	r3, #1
9001a758:	2300      	movne	r3, #0
9001a75a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001a75e:	e7d9      	b.n	9001a714 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001a760:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
9001a764:	b29b      	uxth	r3, r3
9001a766:	2b7f      	cmp	r3, #127	; 0x7f
9001a768:	d804      	bhi.n	9001a774 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001a76a:	4639      	mov	r1, r7
9001a76c:	4620      	mov	r0, r4
9001a76e:	f7ff fcc9 	bl	9001a104 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001a772:	e7e6      	b.n	9001a742 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001a774:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001a778:	2b00      	cmp	r3, #0
9001a77a:	d0e3      	beq.n	9001a744 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001a77c:	f640 1302 	movw	r3, #2306	; 0x902
9001a780:	429d      	cmp	r5, r3
9001a782:	d1df      	bne.n	9001a744 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001a784:	4601      	mov	r1, r0
9001a786:	4620      	mov	r0, r4
9001a788:	f7ff fc8c 	bl	9001a0a4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001a78c:	e7d9      	b.n	9001a742 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001a78e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001a78e:	b510      	push	{r4, lr}
9001a790:	4604      	mov	r4, r0
9001a792:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
9001a796:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001a798:	b1e1      	cbz	r1, 9001a7d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001a79a:	2b0a      	cmp	r3, #10
9001a79c:	d02d      	beq.n	9001a7fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001a79e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
9001a7a0:	3901      	subs	r1, #1
9001a7a2:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001a7a6:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
9001a7a8:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
9001a7ac:	1c51      	adds	r1, r2, #1
9001a7ae:	b289      	uxth	r1, r1
9001a7b0:	2901      	cmp	r1, #1
9001a7b2:	bf8a      	itet	hi
9001a7b4:	f102 32ff 	addhi.w	r2, r2, #4294967295
9001a7b8:	87e1      	strhls	r1, [r4, #62]	; 0x3e
9001a7ba:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
9001a7bc:	1c5a      	adds	r2, r3, #1
9001a7be:	8722      	strh	r2, [r4, #56]	; 0x38
9001a7c0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001a7c2:	4413      	add	r3, r2
9001a7c4:	b29b      	uxth	r3, r3
9001a7c6:	2b09      	cmp	r3, #9
9001a7c8:	bf88      	it	hi
9001a7ca:	3b0a      	subhi	r3, #10
9001a7cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a7d0:	8458      	strh	r0, [r3, #34]	; 0x22
9001a7d2:	e7de      	b.n	9001a792 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001a7d4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001a7d6:	2b0a      	cmp	r3, #10
9001a7d8:	d00f      	beq.n	9001a7fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001a7da:	4620      	mov	r0, r4
9001a7dc:	f7ff fc10 	bl	9001a000 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001a7e0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001a7e2:	1c5a      	adds	r2, r3, #1
9001a7e4:	8722      	strh	r2, [r4, #56]	; 0x38
9001a7e6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001a7e8:	4413      	add	r3, r2
9001a7ea:	b29b      	uxth	r3, r3
9001a7ec:	2b09      	cmp	r3, #9
9001a7ee:	bf88      	it	hi
9001a7f0:	3b0a      	subhi	r3, #10
9001a7f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a7f6:	8458      	strh	r0, [r3, #34]	; 0x22
9001a7f8:	e7ec      	b.n	9001a7d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001a7fa:	bd10      	pop	{r4, pc}

9001a7fc <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001a7fc:	b538      	push	{r3, r4, r5, lr}
9001a7fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001a800:	4604      	mov	r4, r0
9001a802:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001a806:	8c55      	ldrh	r5, [r2, #34]	; 0x22
9001a808:	8f02      	ldrh	r2, [r0, #56]	; 0x38
9001a80a:	3a01      	subs	r2, #1
9001a80c:	8702      	strh	r2, [r0, #56]	; 0x38
9001a80e:	1c5a      	adds	r2, r3, #1
9001a810:	b292      	uxth	r2, r2
9001a812:	2a09      	cmp	r2, #9
9001a814:	bf8a      	itet	hi
9001a816:	3b09      	subhi	r3, #9
9001a818:	86c2      	strhls	r2, [r0, #54]	; 0x36
9001a81a:	86c3      	strhhi	r3, [r0, #54]	; 0x36
9001a81c:	f7ff ffb7 	bl	9001a78e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001a820:	8c23      	ldrh	r3, [r4, #32]
9001a822:	2b01      	cmp	r3, #1
9001a824:	bf9c      	itt	ls
9001a826:	3301      	addls	r3, #1
9001a828:	8423      	strhls	r3, [r4, #32]
9001a82a:	8be3      	ldrh	r3, [r4, #30]
9001a82c:	b90b      	cbnz	r3, 9001a832 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001a82e:	2302      	movs	r3, #2
9001a830:	83e3      	strh	r3, [r4, #30]
9001a832:	8be3      	ldrh	r3, [r4, #30]
9001a834:	4628      	mov	r0, r5
9001a836:	3b01      	subs	r3, #1
9001a838:	b29b      	uxth	r3, r3
9001a83a:	83e3      	strh	r3, [r4, #30]
9001a83c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a840:	8365      	strh	r5, [r4, #26]
9001a842:	bd38      	pop	{r3, r4, r5, pc}

9001a844 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001a844:	428a      	cmp	r2, r1
9001a846:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a84a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
9001a84c:	d932      	bls.n	9001a8b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001a84e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
9001a850:	1a54      	subs	r4, r2, r1
9001a852:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
9001a856:	19ee      	adds	r6, r5, r7
9001a858:	fa1f fe84 	uxth.w	lr, r4
9001a85c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
9001a860:	3e01      	subs	r6, #1
9001a862:	b2b4      	uxth	r4, r6
9001a864:	eba4 090e 	sub.w	r9, r4, lr
9001a868:	fa1f f989 	uxth.w	r9, r9
9001a86c:	2c09      	cmp	r4, #9
9001a86e:	4626      	mov	r6, r4
9001a870:	bf88      	it	hi
9001a872:	f1a4 060a 	subhi.w	r6, r4, #10
9001a876:	f1bc 0f00 	cmp.w	ip, #0
9001a87a:	f104 34ff 	add.w	r4, r4, #4294967295
9001a87e:	bf08      	it	eq
9001a880:	f04f 0c02 	moveq.w	ip, #2
9001a884:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001a888:	b2a4      	uxth	r4, r4
9001a88a:	f10c 3cff 	add.w	ip, ip, #4294967295
9001a88e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
9001a892:	454c      	cmp	r4, r9
9001a894:	fa1f fc8c 	uxth.w	ip, ip
9001a898:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001a89c:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
9001a8a0:	d1e4      	bne.n	9001a86c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001a8a2:	eba5 050e 	sub.w	r5, r5, lr
9001a8a6:	eb0e 0408 	add.w	r4, lr, r8
9001a8aa:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
9001a8ae:	8705      	strh	r5, [r0, #56]	; 0x38
9001a8b0:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
9001a8b4:	8f04      	ldrh	r4, [r0, #56]	; 0x38
9001a8b6:	250a      	movs	r5, #10
9001a8b8:	1a64      	subs	r4, r4, r1
9001a8ba:	4439      	add	r1, r7
9001a8bc:	b289      	uxth	r1, r1
9001a8be:	8704      	strh	r4, [r0, #56]	; 0x38
9001a8c0:	2909      	cmp	r1, #9
9001a8c2:	bf88      	it	hi
9001a8c4:	390a      	subhi	r1, #10
9001a8c6:	86c1      	strh	r1, [r0, #54]	; 0x36
9001a8c8:	b18a      	cbz	r2, 9001a8ee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001a8ca:	8f01      	ldrh	r1, [r0, #56]	; 0x38
9001a8cc:	3a01      	subs	r2, #1
9001a8ce:	3101      	adds	r1, #1
9001a8d0:	b292      	uxth	r2, r2
9001a8d2:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001a8d6:	8701      	strh	r1, [r0, #56]	; 0x38
9001a8d8:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001a8da:	b901      	cbnz	r1, 9001a8de <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001a8dc:	86c5      	strh	r5, [r0, #54]	; 0x36
9001a8de:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001a8e0:	3901      	subs	r1, #1
9001a8e2:	b289      	uxth	r1, r1
9001a8e4:	86c1      	strh	r1, [r0, #54]	; 0x36
9001a8e6:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001a8ea:	844c      	strh	r4, [r1, #34]	; 0x22
9001a8ec:	e7ec      	b.n	9001a8c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001a8ee:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a8f2:	f7ff bf4c 	b.w	9001a78e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001a8f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001a8f6:	b570      	push	{r4, r5, r6, lr}
9001a8f8:	2500      	movs	r5, #0
9001a8fa:	4295      	cmp	r5, r2
9001a8fc:	d011      	beq.n	9001a922 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001a8fe:	8bc4      	ldrh	r4, [r0, #30]
9001a900:	f831 6b02 	ldrh.w	r6, [r1], #2
9001a904:	4414      	add	r4, r2
9001a906:	3c01      	subs	r4, #1
9001a908:	1b64      	subs	r4, r4, r5
9001a90a:	b2a4      	uxth	r4, r4
9001a90c:	2c01      	cmp	r4, #1
9001a90e:	bf88      	it	hi
9001a910:	3c02      	subhi	r4, #2
9001a912:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001a916:	8b64      	ldrh	r4, [r4, #26]
9001a918:	42b4      	cmp	r4, r6
9001a91a:	d117      	bne.n	9001a94c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001a91c:	3501      	adds	r5, #1
9001a91e:	b2ad      	uxth	r5, r5
9001a920:	e7eb      	b.n	9001a8fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001a922:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001a926:	2400      	movs	r4, #0
9001a928:	4413      	add	r3, r2
9001a92a:	b2a2      	uxth	r2, r4
9001a92c:	429a      	cmp	r2, r3
9001a92e:	da0f      	bge.n	9001a950 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001a930:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
9001a932:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001a936:	3401      	adds	r4, #1
9001a938:	4432      	add	r2, r6
9001a93a:	b292      	uxth	r2, r2
9001a93c:	2a09      	cmp	r2, #9
9001a93e:	bf88      	it	hi
9001a940:	3a0a      	subhi	r2, #10
9001a942:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001a946:	8c52      	ldrh	r2, [r2, #34]	; 0x22
9001a948:	42aa      	cmp	r2, r5
9001a94a:	d0ee      	beq.n	9001a92a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001a94c:	2000      	movs	r0, #0
9001a94e:	bd70      	pop	{r4, r5, r6, pc}
9001a950:	2001      	movs	r0, #1
9001a952:	e7fc      	b.n	9001a94e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001a954 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001a954:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a958:	4605      	mov	r5, r0
9001a95a:	4616      	mov	r6, r2
9001a95c:	1c8c      	adds	r4, r1, #2
9001a95e:	8809      	ldrh	r1, [r1, #0]
9001a960:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001a964:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001a968:	42b3      	cmp	r3, r6
9001a96a:	d124      	bne.n	9001a9b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001a96c:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001a970:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001a974:	f001 070f 	and.w	r7, r1, #15
9001a978:	4652      	mov	r2, sl
9001a97a:	f8cd 8000 	str.w	r8, [sp]
9001a97e:	464b      	mov	r3, r9
9001a980:	4621      	mov	r1, r4
9001a982:	4628      	mov	r0, r5
9001a984:	f7ff ffb7 	bl	9001a8f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001a988:	4683      	mov	fp, r0
9001a98a:	b168      	cbz	r0, 9001a9a8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001a98c:	eb0a 0109 	add.w	r1, sl, r9
9001a990:	463a      	mov	r2, r7
9001a992:	4628      	mov	r0, r5
9001a994:	4441      	add	r1, r8
9001a996:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001a99a:	4649      	mov	r1, r9
9001a99c:	f7ff ff52 	bl	9001a844 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001a9a0:	4658      	mov	r0, fp
9001a9a2:	b003      	add	sp, #12
9001a9a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a9a8:	eb07 010a 	add.w	r1, r7, sl
9001a9ac:	4449      	add	r1, r9
9001a9ae:	4441      	add	r1, r8
9001a9b0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001a9b4:	e7d2      	b.n	9001a95c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001a9b6:	f04f 0b00 	mov.w	fp, #0
9001a9ba:	e7f1      	b.n	9001a9a0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001a9bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001a9bc:	b570      	push	{r4, r5, r6, lr}
9001a9be:	8810      	ldrh	r0, [r2, #0]
9001a9c0:	4298      	cmp	r0, r3
9001a9c2:	d817      	bhi.n	9001a9f4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a9c4:	1e48      	subs	r0, r1, #1
9001a9c6:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001a9ca:	4298      	cmp	r0, r3
9001a9cc:	d312      	bcc.n	9001a9f4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a9ce:	2400      	movs	r4, #0
9001a9d0:	428c      	cmp	r4, r1
9001a9d2:	d20f      	bcs.n	9001a9f4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a9d4:	1860      	adds	r0, r4, r1
9001a9d6:	1040      	asrs	r0, r0, #1
9001a9d8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001a9dc:	0085      	lsls	r5, r0, #2
9001a9de:	42b3      	cmp	r3, r6
9001a9e0:	d902      	bls.n	9001a9e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001a9e2:	3001      	adds	r0, #1
9001a9e4:	b284      	uxth	r4, r0
9001a9e6:	e7f3      	b.n	9001a9d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001a9e8:	d201      	bcs.n	9001a9ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001a9ea:	b281      	uxth	r1, r0
9001a9ec:	e7f0      	b.n	9001a9d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001a9ee:	442a      	add	r2, r5
9001a9f0:	8850      	ldrh	r0, [r2, #2]
9001a9f2:	bd70      	pop	{r4, r5, r6, pc}
9001a9f4:	2000      	movs	r0, #0
9001a9f6:	e7fc      	b.n	9001a9f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001a9f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001a9f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001a9fc:	6c45      	ldr	r5, [r0, #68]	; 0x44
9001a9fe:	4604      	mov	r4, r0
9001aa00:	260b      	movs	r6, #11
9001aa02:	886f      	ldrh	r7, [r5, #2]
9001aa04:	087f      	lsrs	r7, r7, #1
9001aa06:	3e01      	subs	r6, #1
9001aa08:	d013      	beq.n	9001aa32 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001aa0a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
9001aa0c:	462a      	mov	r2, r5
9001aa0e:	4639      	mov	r1, r7
9001aa10:	4620      	mov	r0, r4
9001aa12:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001aa16:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001aa1a:	4643      	mov	r3, r8
9001aa1c:	f7ff ffce 	bl	9001a9bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001aa20:	b138      	cbz	r0, 9001aa32 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001aa22:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001aa26:	4642      	mov	r2, r8
9001aa28:	4620      	mov	r0, r4
9001aa2a:	f7ff ff93 	bl	9001a954 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001aa2e:	2800      	cmp	r0, #0
9001aa30:	d1e9      	bne.n	9001aa06 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001aa32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001aa38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001aa38:	b570      	push	{r4, r5, r6, lr}
9001aa3a:	694a      	ldr	r2, [r1, #20]
9001aa3c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9001aa3e:	684b      	ldr	r3, [r1, #4]
9001aa40:	1b54      	subs	r4, r2, r5
9001aa42:	6ace      	ldr	r6, [r1, #44]	; 0x2c
9001aa44:	f000 8106 	beq.w	9001ac54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001aa48:	1b9b      	subs	r3, r3, r6
9001aa4a:	d003      	beq.n	9001aa54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001aa4c:	4363      	muls	r3, r4
9001aa4e:	2210      	movs	r2, #16
9001aa50:	fb93 f3f2 	sdiv	r3, r3, r2
9001aa54:	680c      	ldr	r4, [r1, #0]
9001aa56:	698a      	ldr	r2, [r1, #24]
9001aa58:	1b65      	subs	r5, r4, r5
9001aa5a:	f000 80fd 	beq.w	9001ac58 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001aa5e:	1b92      	subs	r2, r2, r6
9001aa60:	d003      	beq.n	9001aa6a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001aa62:	436a      	muls	r2, r5
9001aa64:	2410      	movs	r4, #16
9001aa66:	fb92 f2f4 	sdiv	r2, r2, r4
9001aa6a:	1a9b      	subs	r3, r3, r2
9001aa6c:	ed9f 4a89 	vldr	s8, [pc, #548]	; 9001ac94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001aa70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001aa74:	460a      	mov	r2, r1
9001aa76:	ee07 3a90 	vmov	s15, r3
9001aa7a:	f100 040c 	add.w	r4, r0, #12
9001aa7e:	4603      	mov	r3, r0
9001aa80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001aa84:	ee67 7a84 	vmul.f32	s15, s15, s8
9001aa88:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001aa8c:	eeb1 6a43 	vneg.f32	s12, s6
9001aa90:	edd2 7a02 	vldr	s15, [r2, #8]
9001aa94:	3214      	adds	r2, #20
9001aa96:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001aa9a:	ece3 6a01 	vstmia	r3!, {s13}
9001aa9e:	429c      	cmp	r4, r3
9001aaa0:	ed52 7a02 	vldr	s15, [r2, #-8]
9001aaa4:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001aaa8:	edc3 7a02 	vstr	s15, [r3, #8]
9001aaac:	ed52 7a01 	vldr	s15, [r2, #-4]
9001aab0:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001aab4:	edc3 7a05 	vstr	s15, [r3, #20]
9001aab8:	d1ea      	bne.n	9001aa90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001aaba:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001aabc:	698b      	ldr	r3, [r1, #24]
9001aabe:	edd0 4a02 	vldr	s9, [r0, #8]
9001aac2:	1a9b      	subs	r3, r3, r2
9001aac4:	edd0 3a00 	vldr	s7, [r0]
9001aac8:	edd0 6a01 	vldr	s13, [r0, #4]
9001aacc:	ee07 3a90 	vmov	s15, r3
9001aad0:	684b      	ldr	r3, [r1, #4]
9001aad2:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001aad6:	ed90 5a05 	vldr	s10, [r0, #20]
9001aada:	1a9b      	subs	r3, r3, r2
9001aadc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001aae0:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001aae4:	ed90 2a03 	vldr	s4, [r0, #12]
9001aae8:	ee07 3a10 	vmov	s14, r3
9001aaec:	edd0 5a04 	vldr	s11, [r0, #16]
9001aaf0:	ee67 7a84 	vmul.f32	s15, s15, s8
9001aaf4:	ed90 1a07 	vldr	s2, [r0, #28]
9001aaf8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001aafc:	edd0 2a06 	vldr	s5, [r0, #24]
9001ab00:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001ab04:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001ab08:	ee27 7a04 	vmul.f32	s14, s14, s8
9001ab0c:	ee32 5a45 	vsub.f32	s10, s4, s10
9001ab10:	eee6 7a87 	vfma.f32	s15, s13, s14
9001ab14:	ee67 7a83 	vmul.f32	s15, s15, s6
9001ab18:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
9001ab1c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001ab1e:	694a      	ldr	r2, [r1, #20]
9001ab20:	1b13      	subs	r3, r2, r4
9001ab22:	ee07 3a10 	vmov	s14, r3
9001ab26:	680b      	ldr	r3, [r1, #0]
9001ab28:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001ab2c:	1b1b      	subs	r3, r3, r4
9001ab2e:	ee27 7a04 	vmul.f32	s14, s14, s8
9001ab32:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001ab36:	ee07 3a10 	vmov	s14, r3
9001ab3a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001ab3e:	ee27 7a04 	vmul.f32	s14, s14, s8
9001ab42:	eee6 4a87 	vfma.f32	s9, s13, s14
9001ab46:	ee64 4a86 	vmul.f32	s9, s9, s12
9001ab4a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
9001ab4e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001ab50:	698b      	ldr	r3, [r1, #24]
9001ab52:	1a9b      	subs	r3, r3, r2
9001ab54:	ee06 3a90 	vmov	s13, r3
9001ab58:	684b      	ldr	r3, [r1, #4]
9001ab5a:	1a9b      	subs	r3, r3, r2
9001ab5c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001ab60:	ee07 3a10 	vmov	s14, r3
9001ab64:	ee66 6a84 	vmul.f32	s13, s13, s8
9001ab68:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001ab6c:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001ab70:	ee27 7a04 	vmul.f32	s14, s14, s8
9001ab74:	eee5 6a87 	vfma.f32	s13, s11, s14
9001ab78:	ee66 6a83 	vmul.f32	s13, s13, s6
9001ab7c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
9001ab80:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001ab82:	694a      	ldr	r2, [r1, #20]
9001ab84:	1b13      	subs	r3, r2, r4
9001ab86:	ee07 3a10 	vmov	s14, r3
9001ab8a:	680b      	ldr	r3, [r1, #0]
9001ab8c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001ab90:	1b1b      	subs	r3, r3, r4
9001ab92:	ee27 7a04 	vmul.f32	s14, s14, s8
9001ab96:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001ab9a:	ee07 3a10 	vmov	s14, r3
9001ab9e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001aba2:	ee27 7a04 	vmul.f32	s14, s14, s8
9001aba6:	eea5 5a87 	vfma.f32	s10, s11, s14
9001abaa:	edd0 5a08 	vldr	s11, [r0, #32]
9001abae:	ee31 1a65 	vsub.f32	s2, s2, s11
9001abb2:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001abb6:	ee25 5a06 	vmul.f32	s10, s10, s12
9001abba:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
9001abbe:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001abc0:	698b      	ldr	r3, [r1, #24]
9001abc2:	1a9b      	subs	r3, r3, r2
9001abc4:	ee07 3a10 	vmov	s14, r3
9001abc8:	684b      	ldr	r3, [r1, #4]
9001abca:	1a9b      	subs	r3, r3, r2
9001abcc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001abd0:	ee01 3a90 	vmov	s3, r3
9001abd4:	ee27 7a04 	vmul.f32	s14, s14, s8
9001abd8:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001abdc:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001abe0:	ee61 1a84 	vmul.f32	s3, s3, s8
9001abe4:	eea1 7a21 	vfma.f32	s14, s2, s3
9001abe8:	ee27 7a03 	vmul.f32	s14, s14, s6
9001abec:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001abf0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001abf2:	694a      	ldr	r2, [r1, #20]
9001abf4:	1b13      	subs	r3, r2, r4
9001abf6:	ee03 3a10 	vmov	s6, r3
9001abfa:	680b      	ldr	r3, [r1, #0]
9001abfc:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001ac00:	1b1b      	subs	r3, r3, r4
9001ac02:	ee23 3a04 	vmul.f32	s6, s6, s8
9001ac06:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001ac0a:	ee03 3a10 	vmov	s6, r3
9001ac0e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001ac12:	ee23 4a04 	vmul.f32	s8, s6, s8
9001ac16:	eee1 5a04 	vfma.f32	s11, s2, s8
9001ac1a:	ee25 6a86 	vmul.f32	s12, s11, s12
9001ac1e:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001ac22:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
9001ac26:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001ac2a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001ac2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001ac32:	dd13      	ble.n	9001ac5c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001ac34:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001ac38:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001ac3c:	63c3      	str	r3, [r0, #60]	; 0x3c
9001ac3e:	eee3 7a87 	vfma.f32	s15, s7, s14
9001ac42:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001ac46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001ac4a:	dd15      	ble.n	9001ac78 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001ac4c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001ac50:	6403      	str	r3, [r0, #64]	; 0x40
9001ac52:	bd70      	pop	{r4, r5, r6, pc}
9001ac54:	4623      	mov	r3, r4
9001ac56:	e6fd      	b.n	9001aa54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001ac58:	462a      	mov	r2, r5
9001ac5a:	e706      	b.n	9001aa6a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001ac5c:	d502      	bpl.n	9001ac64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001ac5e:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001ac62:	e7e9      	b.n	9001ac38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001ac64:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001ac68:	eea3 2a85 	vfma.f32	s4, s7, s10
9001ac6c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001ac70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001ac74:	dade      	bge.n	9001ac34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001ac76:	e7f2      	b.n	9001ac5e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001ac78:	d502      	bpl.n	9001ac80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001ac7a:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001ac7e:	e7e7      	b.n	9001ac50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001ac80:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001ac84:	eee3 4a86 	vfma.f32	s9, s7, s12
9001ac88:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001ac8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001ac90:	dadc      	bge.n	9001ac4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001ac92:	e7f2      	b.n	9001ac7a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001ac94:	3d800000 	.word	0x3d800000

9001ac98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001ac98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ac9c:	2714      	movs	r7, #20
9001ac9e:	435f      	muls	r7, r3
9001aca0:	eb02 0c07 	add.w	ip, r2, r7
9001aca4:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001aca8:	f115 0e0f 	adds.w	lr, r5, #15
9001acac:	f100 80a2 	bmi.w	9001adf4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001acb0:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001acb4:	9c08      	ldr	r4, [sp, #32]
9001acb6:	2614      	movs	r6, #20
9001acb8:	f8c0 e014 	str.w	lr, [r0, #20]
9001acbc:	4366      	muls	r6, r4
9001acbe:	eb02 0806 	add.w	r8, r2, r6
9001acc2:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001acc6:	f115 040f 	adds.w	r4, r5, #15
9001acca:	f100 809f 	bmi.w	9001ae0c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001acce:	1124      	asrs	r4, r4, #4
9001acd0:	eba4 040e 	sub.w	r4, r4, lr
9001acd4:	6184      	str	r4, [r0, #24]
9001acd6:	2c00      	cmp	r4, #0
9001acd8:	f000 808a 	beq.w	9001adf0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001acdc:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001ace0:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001ace4:	5995      	ldr	r5, [r2, r6]
9001ace6:	eba4 0809 	sub.w	r8, r4, r9
9001acea:	59d4      	ldr	r4, [r2, r7]
9001acec:	eba5 0a04 	sub.w	sl, r5, r4
9001acf0:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001acf4:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001acf8:	fb0e fe05 	mul.w	lr, lr, r5
9001acfc:	fb0a ee19 	mls	lr, sl, r9, lr
9001ad00:	fb08 e404 	mla	r4, r8, r4, lr
9001ad04:	3c01      	subs	r4, #1
9001ad06:	19a4      	adds	r4, r4, r6
9001ad08:	f100 808c 	bmi.w	9001ae24 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001ad0c:	fb94 fef6 	sdiv	lr, r4, r6
9001ad10:	fb06 441e 	mls	r4, r6, lr, r4
9001ad14:	f8c0 e000 	str.w	lr, [r0]
9001ad18:	6104      	str	r4, [r0, #16]
9001ad1a:	2d00      	cmp	r5, #0
9001ad1c:	f2c0 8095 	blt.w	9001ae4a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001ad20:	fb95 f4f6 	sdiv	r4, r5, r6
9001ad24:	fb06 5514 	mls	r5, r6, r4, r5
9001ad28:	6044      	str	r4, [r0, #4]
9001ad2a:	6085      	str	r5, [r0, #8]
9001ad2c:	60c6      	str	r6, [r0, #12]
9001ad2e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001ad32:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001ad36:	6945      	ldr	r5, [r0, #20]
9001ad38:	59d2      	ldr	r2, [r2, r7]
9001ad3a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001ad3e:	eddf 6a4b 	vldr	s13, [pc, #300]	; 9001ae6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001ad42:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
9001ad46:	ee07 4a10 	vmov	s14, r4
9001ad4a:	6804      	ldr	r4, [r0, #0]
9001ad4c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001ad50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001ad54:	ee07 2a90 	vmov	s15, r2
9001ad58:	ee27 7a26 	vmul.f32	s14, s14, s13
9001ad5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ad60:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001ad64:	edd3 6a00 	vldr	s13, [r3]
9001ad68:	eee6 6a07 	vfma.f32	s13, s12, s14
9001ad6c:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
9001ad70:	eee6 6a27 	vfma.f32	s13, s12, s15
9001ad74:	edc0 6a07 	vstr	s13, [r0, #28]
9001ad78:	edd0 6a01 	vldr	s13, [r0, #4]
9001ad7c:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
9001ad80:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001ad84:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
9001ad88:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001ad8c:	ed80 6a08 	vstr	s12, [r0, #32]
9001ad90:	6a4a      	ldr	r2, [r1, #36]	; 0x24
9001ad92:	6242      	str	r2, [r0, #36]	; 0x24
9001ad94:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
9001ad98:	ed93 6a03 	vldr	s12, [r3, #12]
9001ad9c:	eea5 6a87 	vfma.f32	s12, s11, s14
9001ada0:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001ada4:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001ada8:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
9001adac:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001adb0:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
9001adb4:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001adb8:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
9001adbc:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001adbe:	6302      	str	r2, [r0, #48]	; 0x30
9001adc0:	ed93 6a06 	vldr	s12, [r3, #24]
9001adc4:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
9001adc8:	eea5 6a87 	vfma.f32	s12, s11, s14
9001adcc:	eeb0 7a46 	vmov.f32	s14, s12
9001add0:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
9001add4:	eea6 7a27 	vfma.f32	s14, s12, s15
9001add8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001addc:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
9001ade0:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
9001ade4:	eee6 7a87 	vfma.f32	s15, s13, s14
9001ade8:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
9001adec:	6b4b      	ldr	r3, [r1, #52]	; 0x34
9001adee:	63c3      	str	r3, [r0, #60]	; 0x3c
9001adf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001adf4:	2410      	movs	r4, #16
9001adf6:	f1c5 0501 	rsb	r5, r5, #1
9001adfa:	fb9e fef4 	sdiv	lr, lr, r4
9001adfe:	f015 050f 	ands.w	r5, r5, #15
9001ae02:	bf18      	it	ne
9001ae04:	2501      	movne	r5, #1
9001ae06:	ebae 0e05 	sub.w	lr, lr, r5
9001ae0a:	e753      	b.n	9001acb4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001ae0c:	f04f 0910 	mov.w	r9, #16
9001ae10:	f1c5 0501 	rsb	r5, r5, #1
9001ae14:	fb94 f4f9 	sdiv	r4, r4, r9
9001ae18:	f015 050f 	ands.w	r5, r5, #15
9001ae1c:	bf18      	it	ne
9001ae1e:	2501      	movne	r5, #1
9001ae20:	1b64      	subs	r4, r4, r5
9001ae22:	e755      	b.n	9001acd0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001ae24:	4264      	negs	r4, r4
9001ae26:	fb94 fef6 	sdiv	lr, r4, r6
9001ae2a:	f1ce 0800 	rsb	r8, lr, #0
9001ae2e:	fb06 441e 	mls	r4, r6, lr, r4
9001ae32:	f8c0 8000 	str.w	r8, [r0]
9001ae36:	6104      	str	r4, [r0, #16]
9001ae38:	2c00      	cmp	r4, #0
9001ae3a:	f43f af6e 	beq.w	9001ad1a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001ae3e:	ea6f 0e0e 	mvn.w	lr, lr
9001ae42:	1b34      	subs	r4, r6, r4
9001ae44:	f8c0 e000 	str.w	lr, [r0]
9001ae48:	e766      	b.n	9001ad18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001ae4a:	426d      	negs	r5, r5
9001ae4c:	fb95 f4f6 	sdiv	r4, r5, r6
9001ae50:	f1c4 0e00 	rsb	lr, r4, #0
9001ae54:	fb06 5514 	mls	r5, r6, r4, r5
9001ae58:	f8c0 e004 	str.w	lr, [r0, #4]
9001ae5c:	6085      	str	r5, [r0, #8]
9001ae5e:	2d00      	cmp	r5, #0
9001ae60:	f43f af64 	beq.w	9001ad2c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001ae64:	43e4      	mvns	r4, r4
9001ae66:	1b75      	subs	r5, r6, r5
9001ae68:	6044      	str	r4, [r0, #4]
9001ae6a:	e75e      	b.n	9001ad2a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001ae6c:	3d800000 	.word	0x3d800000

9001ae70 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001ae70:	4602      	mov	r2, r0
9001ae72:	b148      	cbz	r0, 9001ae88 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001ae74:	2300      	movs	r3, #0
9001ae76:	b298      	uxth	r0, r3
9001ae78:	3301      	adds	r3, #1
9001ae7a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001ae7e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001ae82:	2900      	cmp	r1, #0
9001ae84:	d1f7      	bne.n	9001ae76 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001ae86:	4770      	bx	lr
9001ae88:	4770      	bx	lr

9001ae8a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
9001ae8a:	b530      	push	{r4, r5, lr}
9001ae8c:	4604      	mov	r4, r0
9001ae8e:	b159      	cbz	r1, 9001aea8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001ae90:	b148      	cbz	r0, 9001aea6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001ae92:	2300      	movs	r3, #0
9001ae94:	b298      	uxth	r0, r3
9001ae96:	4282      	cmp	r2, r0
9001ae98:	d905      	bls.n	9001aea6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001ae9a:	5ccd      	ldrb	r5, [r1, r3]
9001ae9c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001aea0:	3301      	adds	r3, #1
9001aea2:	2d00      	cmp	r5, #0
9001aea4:	d1f6      	bne.n	9001ae94 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001aea6:	bd30      	pop	{r4, r5, pc}
9001aea8:	4608      	mov	r0, r1
9001aeaa:	e7fc      	b.n	9001aea6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

9001aeac <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
9001aeac:	b5f0      	push	{r4, r5, r6, r7, lr}
9001aeae:	b08b      	sub	sp, #44	; 0x2c
9001aeb0:	468c      	mov	ip, r1
9001aeb2:	4604      	mov	r4, r0
9001aeb4:	2100      	movs	r1, #0
9001aeb6:	261f      	movs	r6, #31
9001aeb8:	af01      	add	r7, sp, #4
9001aeba:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001aebe:	1e71      	subs	r1, r6, #1
9001aec0:	fb94 fef3 	sdiv	lr, r4, r3
9001aec4:	fb03 441e 	mls	r4, r3, lr, r4
9001aec8:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001aecc:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001aed0:	b2ec      	uxtb	r4, r5
9001aed2:	2d09      	cmp	r5, #9
9001aed4:	bfd4      	ite	le
9001aed6:	3430      	addle	r4, #48	; 0x30
9001aed8:	3457      	addgt	r4, #87	; 0x57
9001aeda:	b2e4      	uxtb	r4, r4
9001aedc:	55bc      	strb	r4, [r7, r6]
9001aede:	4674      	mov	r4, lr
9001aee0:	b974      	cbnz	r4, 9001af00 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001aee2:	2800      	cmp	r0, #0
9001aee4:	da05      	bge.n	9001aef2 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001aee6:	ab0a      	add	r3, sp, #40	; 0x28
9001aee8:	4419      	add	r1, r3
9001aeea:	232d      	movs	r3, #45	; 0x2d
9001aeec:	f801 3c24 	strb.w	r3, [r1, #-36]
9001aef0:	1eb1      	subs	r1, r6, #2
9001aef2:	3101      	adds	r1, #1
9001aef4:	4660      	mov	r0, ip
9001aef6:	4439      	add	r1, r7
9001aef8:	f7ff ffc7 	bl	9001ae8a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001aefc:	b00b      	add	sp, #44	; 0x2c
9001aefe:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001af00:	460e      	mov	r6, r1
9001af02:	e7dc      	b.n	9001aebe <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

9001af04 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
9001af04:	b5f0      	push	{r4, r5, r6, r7, lr}
9001af06:	468c      	mov	ip, r1
9001af08:	b08b      	sub	sp, #44	; 0x2c
9001af0a:	2100      	movs	r1, #0
9001af0c:	ae01      	add	r6, sp, #4
9001af0e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001af12:	211f      	movs	r1, #31
9001af14:	fbb0 f7f3 	udiv	r7, r0, r3
9001af18:	fb03 0517 	mls	r5, r3, r7, r0
9001af1c:	4638      	mov	r0, r7
9001af1e:	b2ec      	uxtb	r4, r5
9001af20:	2d09      	cmp	r5, #9
9001af22:	bfd4      	ite	le
9001af24:	3430      	addle	r4, #48	; 0x30
9001af26:	3457      	addgt	r4, #87	; 0x57
9001af28:	b2e4      	uxtb	r4, r4
9001af2a:	558c      	strb	r4, [r1, r6]
9001af2c:	1e4c      	subs	r4, r1, #1
9001af2e:	b92f      	cbnz	r7, 9001af3c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001af30:	4431      	add	r1, r6
9001af32:	4660      	mov	r0, ip
9001af34:	f7ff ffa9 	bl	9001ae8a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001af38:	b00b      	add	sp, #44	; 0x2c
9001af3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001af3c:	4621      	mov	r1, r4
9001af3e:	e7e9      	b.n	9001af14 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001af40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001af40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001af44:	b085      	sub	sp, #20
9001af46:	4691      	mov	r9, r2
9001af48:	6802      	ldr	r2, [r0, #0]
9001af4a:	4688      	mov	r8, r1
9001af4c:	461c      	mov	r4, r3
9001af4e:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
9001af52:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
9001af56:	4683      	mov	fp, r0
9001af58:	4610      	mov	r0, r2
9001af5a:	9103      	str	r1, [sp, #12]
9001af5c:	9302      	str	r3, [sp, #8]
9001af5e:	9201      	str	r2, [sp, #4]
9001af60:	f7ff ff86 	bl	9001ae70 <_ZN8touchgfx7Unicode6strlenEPKt>
9001af64:	f1b8 0f00 	cmp.w	r8, #0
9001af68:	bf0c      	ite	eq
9001af6a:	4684      	moveq	ip, r0
9001af6c:	f100 0c01 	addne.w	ip, r0, #1
9001af70:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
9001af74:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
9001af78:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001af7a:	fa1f fc8c 	uxth.w	ip, ip
9001af7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001af80:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
9001af84:	9903      	ldr	r1, [sp, #12]
9001af86:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9001af8a:	d041      	beq.n	9001b010 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001af8c:	d834      	bhi.n	9001aff8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001af8e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
9001af92:	d059      	beq.n	9001b048 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001af94:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
9001af98:	d03a      	beq.n	9001b010 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001af9a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
9001af9e:	d034      	beq.n	9001b00a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001afa0:	2400      	movs	r4, #0
9001afa2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
9001afa6:	3a01      	subs	r2, #1
9001afa8:	b169      	cbz	r1, 9001afc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001afaa:	9911      	ldr	r1, [sp, #68]	; 0x44
9001afac:	458c      	cmp	ip, r1
9001afae:	da09      	bge.n	9001afc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001afb0:	eba1 010c 	sub.w	r1, r1, ip
9001afb4:	b289      	uxth	r1, r1
9001afb6:	b933      	cbnz	r3, 9001afc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001afb8:	2e00      	cmp	r6, #0
9001afba:	d051      	beq.n	9001b060 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001afbc:	2800      	cmp	r0, #0
9001afbe:	d04f      	beq.n	9001b060 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001afc0:	440c      	add	r4, r1
9001afc2:	b2a4      	uxth	r4, r4
9001afc4:	2100      	movs	r1, #0
9001afc6:	682b      	ldr	r3, [r5, #0]
9001afc8:	4293      	cmp	r3, r2
9001afca:	da07      	bge.n	9001afdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001afcc:	f1b8 0f00 	cmp.w	r8, #0
9001afd0:	d004      	beq.n	9001afdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001afd2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001afd6:	682b      	ldr	r3, [r5, #0]
9001afd8:	3301      	adds	r3, #1
9001afda:	602b      	str	r3, [r5, #0]
9001afdc:	2730      	movs	r7, #48	; 0x30
9001afde:	2c00      	cmp	r4, #0
9001afe0:	d04e      	beq.n	9001b080 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001afe2:	682e      	ldr	r6, [r5, #0]
9001afe4:	3c01      	subs	r4, #1
9001afe6:	42b2      	cmp	r2, r6
9001afe8:	b2a4      	uxth	r4, r4
9001afea:	dd49      	ble.n	9001b080 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001afec:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001aff0:	682b      	ldr	r3, [r5, #0]
9001aff2:	3301      	adds	r3, #1
9001aff4:	602b      	str	r3, [r5, #0]
9001aff6:	e7f2      	b.n	9001afde <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001aff8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
9001affc:	d01d      	beq.n	9001b03a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001affe:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
9001b002:	d002      	beq.n	9001b00a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001b004:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
9001b008:	e7c9      	b.n	9001af9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001b00a:	4684      	mov	ip, r0
9001b00c:	f04f 0800 	mov.w	r8, #0
9001b010:	2c00      	cmp	r4, #0
9001b012:	d0c6      	beq.n	9001afa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b014:	b947      	cbnz	r7, 9001b028 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001b016:	2801      	cmp	r0, #1
9001b018:	d106      	bne.n	9001b028 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001b01a:	8814      	ldrh	r4, [r2, #0]
9001b01c:	2c30      	cmp	r4, #48	; 0x30
9001b01e:	bf02      	ittt	eq
9001b020:	3202      	addeq	r2, #2
9001b022:	4638      	moveq	r0, r7
9001b024:	f8cb 2000 	streq.w	r2, [fp]
9001b028:	45bc      	cmp	ip, r7
9001b02a:	da14      	bge.n	9001b056 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001b02c:	b2bf      	uxth	r7, r7
9001b02e:	eba7 040c 	sub.w	r4, r7, ip
9001b032:	46bc      	mov	ip, r7
9001b034:	b2a4      	uxth	r4, r4
9001b036:	2600      	movs	r6, #0
9001b038:	e7b3      	b.n	9001afa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b03a:	4684      	mov	ip, r0
9001b03c:	b16c      	cbz	r4, 9001b05a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001b03e:	42b8      	cmp	r0, r7
9001b040:	dd00      	ble.n	9001b044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001b042:	b2b8      	uxth	r0, r7
9001b044:	2400      	movs	r4, #0
9001b046:	e003      	b.n	9001b050 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001b048:	f04f 0c01 	mov.w	ip, #1
9001b04c:	2400      	movs	r4, #0
9001b04e:	4660      	mov	r0, ip
9001b050:	4626      	mov	r6, r4
9001b052:	46a0      	mov	r8, r4
9001b054:	e7a5      	b.n	9001afa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b056:	2400      	movs	r4, #0
9001b058:	e7ed      	b.n	9001b036 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001b05a:	4626      	mov	r6, r4
9001b05c:	46a0      	mov	r8, r4
9001b05e:	e7a0      	b.n	9001afa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b060:	2900      	cmp	r1, #0
9001b062:	d0b0      	beq.n	9001afc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b064:	2720      	movs	r7, #32
9001b066:	682e      	ldr	r6, [r5, #0]
9001b068:	2900      	cmp	r1, #0
9001b06a:	d0ac      	beq.n	9001afc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b06c:	3901      	subs	r1, #1
9001b06e:	4296      	cmp	r6, r2
9001b070:	b289      	uxth	r1, r1
9001b072:	daa7      	bge.n	9001afc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001b074:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001b078:	682b      	ldr	r3, [r5, #0]
9001b07a:	3301      	adds	r3, #1
9001b07c:	602b      	str	r3, [r5, #0]
9001b07e:	e7f2      	b.n	9001b066 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001b080:	b188      	cbz	r0, 9001b0a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001b082:	682b      	ldr	r3, [r5, #0]
9001b084:	3801      	subs	r0, #1
9001b086:	429a      	cmp	r2, r3
9001b088:	b280      	uxth	r0, r0
9001b08a:	dd0c      	ble.n	9001b0a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001b08c:	f8db 3000 	ldr.w	r3, [fp]
9001b090:	1c9c      	adds	r4, r3, #2
9001b092:	f8cb 4000 	str.w	r4, [fp]
9001b096:	881c      	ldrh	r4, [r3, #0]
9001b098:	682b      	ldr	r3, [r5, #0]
9001b09a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001b09e:	682b      	ldr	r3, [r5, #0]
9001b0a0:	3301      	adds	r3, #1
9001b0a2:	602b      	str	r3, [r5, #0]
9001b0a4:	e7ec      	b.n	9001b080 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001b0a6:	2620      	movs	r6, #32
9001b0a8:	b151      	cbz	r1, 9001b0c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001b0aa:	6828      	ldr	r0, [r5, #0]
9001b0ac:	3901      	subs	r1, #1
9001b0ae:	4282      	cmp	r2, r0
9001b0b0:	b289      	uxth	r1, r1
9001b0b2:	dd05      	ble.n	9001b0c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001b0b4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001b0b8:	682b      	ldr	r3, [r5, #0]
9001b0ba:	3301      	adds	r3, #1
9001b0bc:	602b      	str	r3, [r5, #0]
9001b0be:	e7f3      	b.n	9001b0a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001b0c0:	b005      	add	sp, #20
9001b0c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b0c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001b0c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001b0ca:	2400      	movs	r4, #0
9001b0cc:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001b0d0:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
9001b0d4:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
9001b0d8:	8014      	strh	r4, [r2, #0]
9001b0da:	701c      	strb	r4, [r3, #0]
9001b0dc:	f888 4000 	strb.w	r4, [r8]
9001b0e0:	f88c 4000 	strb.w	r4, [ip]
9001b0e4:	f88e 4000 	strb.w	r4, [lr]
9001b0e8:	703c      	strb	r4, [r7, #0]
9001b0ea:	6804      	ldr	r4, [r0, #0]
9001b0ec:	b1a4      	cbz	r4, 9001b118 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001b0ee:	8824      	ldrh	r4, [r4, #0]
9001b0f0:	f04f 0901 	mov.w	r9, #1
9001b0f4:	b314      	cbz	r4, 9001b13c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b0f6:	2c2b      	cmp	r4, #43	; 0x2b
9001b0f8:	d001      	beq.n	9001b0fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001b0fa:	2c20      	cmp	r4, #32
9001b0fc:	d110      	bne.n	9001b120 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001b0fe:	8014      	strh	r4, [r2, #0]
9001b100:	6804      	ldr	r4, [r0, #0]
9001b102:	b10c      	cbz	r4, 9001b108 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001b104:	3402      	adds	r4, #2
9001b106:	6004      	str	r4, [r0, #0]
9001b108:	680c      	ldr	r4, [r1, #0]
9001b10a:	b10c      	cbz	r4, 9001b110 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001b10c:	3401      	adds	r4, #1
9001b10e:	600c      	str	r4, [r1, #0]
9001b110:	6804      	ldr	r4, [r0, #0]
9001b112:	b17c      	cbz	r4, 9001b134 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001b114:	8824      	ldrh	r4, [r4, #0]
9001b116:	e7ed      	b.n	9001b0f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001b118:	680c      	ldr	r4, [r1, #0]
9001b11a:	b17c      	cbz	r4, 9001b13c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b11c:	7824      	ldrb	r4, [r4, #0]
9001b11e:	e7e7      	b.n	9001b0f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001b120:	2c2d      	cmp	r4, #45	; 0x2d
9001b122:	d102      	bne.n	9001b12a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001b124:	f883 9000 	strb.w	r9, [r3]
9001b128:	e7ea      	b.n	9001b100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001b12a:	2c23      	cmp	r4, #35	; 0x23
9001b12c:	d107      	bne.n	9001b13e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001b12e:	f888 9000 	strb.w	r9, [r8]
9001b132:	e7e5      	b.n	9001b100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001b134:	680c      	ldr	r4, [r1, #0]
9001b136:	b10c      	cbz	r4, 9001b13c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b138:	7824      	ldrb	r4, [r4, #0]
9001b13a:	e7db      	b.n	9001b0f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001b13c:	2400      	movs	r4, #0
9001b13e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
9001b142:	2b09      	cmp	r3, #9
9001b144:	d901      	bls.n	9001b14a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001b146:	2c2a      	cmp	r4, #42	; 0x2a
9001b148:	d122      	bne.n	9001b190 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b14a:	2301      	movs	r3, #1
9001b14c:	2c30      	cmp	r4, #48	; 0x30
9001b14e:	f88e 3000 	strb.w	r3, [lr]
9001b152:	d10d      	bne.n	9001b170 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001b154:	f88c 3000 	strb.w	r3, [ip]
9001b158:	6803      	ldr	r3, [r0, #0]
9001b15a:	b10b      	cbz	r3, 9001b160 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001b15c:	3302      	adds	r3, #2
9001b15e:	6003      	str	r3, [r0, #0]
9001b160:	680b      	ldr	r3, [r1, #0]
9001b162:	b10b      	cbz	r3, 9001b168 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
9001b164:	3301      	adds	r3, #1
9001b166:	600b      	str	r3, [r1, #0]
9001b168:	6803      	ldr	r3, [r0, #0]
9001b16a:	2b00      	cmp	r3, #0
9001b16c:	d02f      	beq.n	9001b1ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001b16e:	881c      	ldrh	r4, [r3, #0]
9001b170:	2c2a      	cmp	r4, #42	; 0x2a
9001b172:	d135      	bne.n	9001b1e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001b174:	f04f 33ff 	mov.w	r3, #4294967295
9001b178:	6033      	str	r3, [r6, #0]
9001b17a:	6803      	ldr	r3, [r0, #0]
9001b17c:	b10b      	cbz	r3, 9001b182 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001b17e:	3302      	adds	r3, #2
9001b180:	6003      	str	r3, [r0, #0]
9001b182:	680b      	ldr	r3, [r1, #0]
9001b184:	b10b      	cbz	r3, 9001b18a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
9001b186:	3301      	adds	r3, #1
9001b188:	600b      	str	r3, [r1, #0]
9001b18a:	6803      	ldr	r3, [r0, #0]
9001b18c:	b31b      	cbz	r3, 9001b1d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001b18e:	881c      	ldrh	r4, [r3, #0]
9001b190:	2c2e      	cmp	r4, #46	; 0x2e
9001b192:	d11a      	bne.n	9001b1ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b194:	2301      	movs	r3, #1
9001b196:	703b      	strb	r3, [r7, #0]
9001b198:	6803      	ldr	r3, [r0, #0]
9001b19a:	b10b      	cbz	r3, 9001b1a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
9001b19c:	3302      	adds	r3, #2
9001b19e:	6003      	str	r3, [r0, #0]
9001b1a0:	680b      	ldr	r3, [r1, #0]
9001b1a2:	b10b      	cbz	r3, 9001b1a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
9001b1a4:	3301      	adds	r3, #1
9001b1a6:	600b      	str	r3, [r1, #0]
9001b1a8:	6803      	ldr	r3, [r0, #0]
9001b1aa:	2b00      	cmp	r3, #0
9001b1ac:	d036      	beq.n	9001b21c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001b1ae:	881b      	ldrh	r3, [r3, #0]
9001b1b0:	2b2a      	cmp	r3, #42	; 0x2a
9001b1b2:	d137      	bne.n	9001b224 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001b1b4:	f04f 33ff 	mov.w	r3, #4294967295
9001b1b8:	602b      	str	r3, [r5, #0]
9001b1ba:	6803      	ldr	r3, [r0, #0]
9001b1bc:	b10b      	cbz	r3, 9001b1c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001b1be:	3302      	adds	r3, #2
9001b1c0:	6003      	str	r3, [r0, #0]
9001b1c2:	680b      	ldr	r3, [r1, #0]
9001b1c4:	b10b      	cbz	r3, 9001b1ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b1c6:	3301      	adds	r3, #1
9001b1c8:	600b      	str	r3, [r1, #0]
9001b1ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001b1ce:	680c      	ldr	r4, [r1, #0]
9001b1d0:	b134      	cbz	r4, 9001b1e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001b1d2:	7824      	ldrb	r4, [r4, #0]
9001b1d4:	e7cc      	b.n	9001b170 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001b1d6:	680b      	ldr	r3, [r1, #0]
9001b1d8:	2b00      	cmp	r3, #0
9001b1da:	d0f6      	beq.n	9001b1ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b1dc:	781c      	ldrb	r4, [r3, #0]
9001b1de:	e7d7      	b.n	9001b190 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b1e0:	2300      	movs	r3, #0
9001b1e2:	220a      	movs	r2, #10
9001b1e4:	6033      	str	r3, [r6, #0]
9001b1e6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
9001b1ea:	fa1f f38c 	uxth.w	r3, ip
9001b1ee:	2b09      	cmp	r3, #9
9001b1f0:	d8ce      	bhi.n	9001b190 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b1f2:	6833      	ldr	r3, [r6, #0]
9001b1f4:	fb02 c303 	mla	r3, r2, r3, ip
9001b1f8:	6033      	str	r3, [r6, #0]
9001b1fa:	6803      	ldr	r3, [r0, #0]
9001b1fc:	b10b      	cbz	r3, 9001b202 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001b1fe:	3302      	adds	r3, #2
9001b200:	6003      	str	r3, [r0, #0]
9001b202:	680b      	ldr	r3, [r1, #0]
9001b204:	b10b      	cbz	r3, 9001b20a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001b206:	3301      	adds	r3, #1
9001b208:	600b      	str	r3, [r1, #0]
9001b20a:	6803      	ldr	r3, [r0, #0]
9001b20c:	b10b      	cbz	r3, 9001b212 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001b20e:	881c      	ldrh	r4, [r3, #0]
9001b210:	e7e9      	b.n	9001b1e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b212:	680c      	ldr	r4, [r1, #0]
9001b214:	2c00      	cmp	r4, #0
9001b216:	d0e6      	beq.n	9001b1e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b218:	7824      	ldrb	r4, [r4, #0]
9001b21a:	e7e4      	b.n	9001b1e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b21c:	680b      	ldr	r3, [r1, #0]
9001b21e:	b10b      	cbz	r3, 9001b224 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001b220:	781b      	ldrb	r3, [r3, #0]
9001b222:	e7c5      	b.n	9001b1b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001b224:	2200      	movs	r2, #0
9001b226:	240a      	movs	r4, #10
9001b228:	602a      	str	r2, [r5, #0]
9001b22a:	3b30      	subs	r3, #48	; 0x30
9001b22c:	682a      	ldr	r2, [r5, #0]
9001b22e:	b29e      	uxth	r6, r3
9001b230:	2e09      	cmp	r6, #9
9001b232:	d813      	bhi.n	9001b25c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001b234:	fb04 3302 	mla	r3, r4, r2, r3
9001b238:	602b      	str	r3, [r5, #0]
9001b23a:	6803      	ldr	r3, [r0, #0]
9001b23c:	b10b      	cbz	r3, 9001b242 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001b23e:	3302      	adds	r3, #2
9001b240:	6003      	str	r3, [r0, #0]
9001b242:	680b      	ldr	r3, [r1, #0]
9001b244:	b10b      	cbz	r3, 9001b24a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001b246:	3301      	adds	r3, #1
9001b248:	600b      	str	r3, [r1, #0]
9001b24a:	6803      	ldr	r3, [r0, #0]
9001b24c:	b10b      	cbz	r3, 9001b252 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001b24e:	881b      	ldrh	r3, [r3, #0]
9001b250:	e7eb      	b.n	9001b22a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b252:	680b      	ldr	r3, [r1, #0]
9001b254:	2b00      	cmp	r3, #0
9001b256:	d0e8      	beq.n	9001b22a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b258:	781b      	ldrb	r3, [r3, #0]
9001b25a:	e7e6      	b.n	9001b22a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b25c:	2a06      	cmp	r2, #6
9001b25e:	bfa8      	it	ge
9001b260:	2206      	movge	r2, #6
9001b262:	602a      	str	r2, [r5, #0]
9001b264:	e7b1      	b.n	9001b1ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

9001b266 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
9001b266:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b26a:	b0a3      	sub	sp, #140	; 0x8c
9001b26c:	2600      	movs	r6, #0
9001b26e:	4607      	mov	r7, r0
9001b270:	4688      	mov	r8, r1
9001b272:	f10d 0944 	add.w	r9, sp, #68	; 0x44
9001b276:	4631      	mov	r1, r6
9001b278:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
9001b27a:	4648      	mov	r0, r9
9001b27c:	960d      	str	r6, [sp, #52]	; 0x34
9001b27e:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001b282:	2242      	movs	r2, #66	; 0x42
9001b284:	f00e fc64 	bl	90029b50 <memset>
9001b288:	b15f      	cbz	r7, 9001b2a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
9001b28a:	f108 3aff 	add.w	sl, r8, #4294967295
9001b28e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001b290:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b292:	b152      	cbz	r2, 9001b2aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
9001b294:	8812      	ldrh	r2, [r2, #0]
9001b296:	b10a      	cbz	r2, 9001b29c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b298:	459a      	cmp	sl, r3
9001b29a:	dc2e      	bgt.n	9001b2fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
9001b29c:	2200      	movs	r2, #0
9001b29e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b2a2:	4638      	mov	r0, r7
9001b2a4:	b023      	add	sp, #140	; 0x8c
9001b2a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b2aa:	9a08      	ldr	r2, [sp, #32]
9001b2ac:	2a00      	cmp	r2, #0
9001b2ae:	d0f5      	beq.n	9001b29c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b2b0:	7812      	ldrb	r2, [r2, #0]
9001b2b2:	e7f0      	b.n	9001b296 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
9001b2b4:	2d00      	cmp	r5, #0
9001b2b6:	d0ea      	beq.n	9001b28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b2b8:	782a      	ldrb	r2, [r5, #0]
9001b2ba:	b142      	cbz	r2, 9001b2ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
9001b2bc:	2a25      	cmp	r2, #37	; 0x25
9001b2be:	d001      	beq.n	9001b2c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001b2c0:	459a      	cmp	sl, r3
9001b2c2:	dc08      	bgt.n	9001b2d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001b2c4:	f1bb 0f00 	cmp.w	fp, #0
9001b2c8:	d121      	bne.n	9001b30e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001b2ca:	2d00      	cmp	r5, #0
9001b2cc:	d0df      	beq.n	9001b28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b2ce:	782a      	ldrb	r2, [r5, #0]
9001b2d0:	f04f 0b00 	mov.w	fp, #0
9001b2d4:	e01d      	b.n	9001b312 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001b2d6:	f1bb 0f00 	cmp.w	fp, #0
9001b2da:	d077      	beq.n	9001b3cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
9001b2dc:	f8bb 2000 	ldrh.w	r2, [fp]
9001b2e0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b2e4:	f1bb 0f00 	cmp.w	fp, #0
9001b2e8:	d002      	beq.n	9001b2f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001b2ea:	f10b 0202 	add.w	r2, fp, #2
9001b2ee:	9209      	str	r2, [sp, #36]	; 0x24
9001b2f0:	b10d      	cbz	r5, 9001b2f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001b2f2:	3501      	adds	r5, #1
9001b2f4:	9508      	str	r5, [sp, #32]
9001b2f6:	3301      	adds	r3, #1
9001b2f8:	930d      	str	r3, [sp, #52]	; 0x34
9001b2fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b2fc:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001b300:	f1bb 0f00 	cmp.w	fp, #0
9001b304:	d0d6      	beq.n	9001b2b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001b306:	f8bb 2000 	ldrh.w	r2, [fp]
9001b30a:	2a00      	cmp	r2, #0
9001b30c:	d1d6      	bne.n	9001b2bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001b30e:	f8bb 2000 	ldrh.w	r2, [fp]
9001b312:	2a00      	cmp	r2, #0
9001b314:	d0bb      	beq.n	9001b28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b316:	459a      	cmp	sl, r3
9001b318:	ddb9      	ble.n	9001b28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b31a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
9001b31e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
9001b322:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
9001b326:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
9001b32a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
9001b32e:	960e      	str	r6, [sp, #56]	; 0x38
9001b330:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
9001b334:	960f      	str	r6, [sp, #60]	; 0x3c
9001b336:	f1bb 0f00 	cmp.w	fp, #0
9001b33a:	d002      	beq.n	9001b342 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001b33c:	f10b 0302 	add.w	r3, fp, #2
9001b340:	9309      	str	r3, [sp, #36]	; 0x24
9001b342:	b10d      	cbz	r5, 9001b348 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001b344:	1c6b      	adds	r3, r5, #1
9001b346:	9308      	str	r3, [sp, #32]
9001b348:	ab0f      	add	r3, sp, #60	; 0x3c
9001b34a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
9001b34e:	a908      	add	r1, sp, #32
9001b350:	a809      	add	r0, sp, #36	; 0x24
9001b352:	9305      	str	r3, [sp, #20]
9001b354:	f10d 0331 	add.w	r3, sp, #49	; 0x31
9001b358:	9304      	str	r3, [sp, #16]
9001b35a:	ab0e      	add	r3, sp, #56	; 0x38
9001b35c:	9303      	str	r3, [sp, #12]
9001b35e:	ab0c      	add	r3, sp, #48	; 0x30
9001b360:	9302      	str	r3, [sp, #8]
9001b362:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
9001b366:	9301      	str	r3, [sp, #4]
9001b368:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
9001b36c:	9300      	str	r3, [sp, #0]
9001b36e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
9001b372:	f7ff fea8 	bl	9001b0c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001b376:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b378:	2b00      	cmp	r3, #0
9001b37a:	bfbf      	itttt	lt
9001b37c:	6823      	ldrlt	r3, [r4, #0]
9001b37e:	3404      	addlt	r4, #4
9001b380:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001b384:	930e      	strlt	r3, [sp, #56]	; 0x38
9001b386:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001b388:	2b00      	cmp	r3, #0
9001b38a:	bfbe      	ittt	lt
9001b38c:	6823      	ldrlt	r3, [r4, #0]
9001b38e:	3404      	addlt	r4, #4
9001b390:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001b394:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001b398:	bfb8      	it	lt
9001b39a:	930f      	strlt	r3, [sp, #60]	; 0x3c
9001b39c:	b1d9      	cbz	r1, 9001b3d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001b39e:	880b      	ldrh	r3, [r1, #0]
9001b3a0:	2b69      	cmp	r3, #105	; 0x69
9001b3a2:	d01f      	beq.n	9001b3e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b3a4:	d82f      	bhi.n	9001b406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001b3a6:	2b58      	cmp	r3, #88	; 0x58
9001b3a8:	d01c      	beq.n	9001b3e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b3aa:	d818      	bhi.n	9001b3de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001b3ac:	2b25      	cmp	r3, #37	; 0x25
9001b3ae:	d034      	beq.n	9001b41a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001b3b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b3b2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001b3b6:	f1bb 0f00 	cmp.w	fp, #0
9001b3ba:	f000 80b7 	beq.w	9001b52c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001b3be:	f8bb 5000 	ldrh.w	r5, [fp]
9001b3c2:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001b3c6:	3301      	adds	r3, #1
9001b3c8:	930d      	str	r3, [sp, #52]	; 0x34
9001b3ca:	e029      	b.n	9001b420 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001b3cc:	b10d      	cbz	r5, 9001b3d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001b3ce:	782a      	ldrb	r2, [r5, #0]
9001b3d0:	e786      	b.n	9001b2e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001b3d2:	462a      	mov	r2, r5
9001b3d4:	e784      	b.n	9001b2e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001b3d6:	2a00      	cmp	r2, #0
9001b3d8:	d0ea      	beq.n	9001b3b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b3da:	7813      	ldrb	r3, [r2, #0]
9001b3dc:	e7e0      	b.n	9001b3a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001b3de:	3b63      	subs	r3, #99	; 0x63
9001b3e0:	2b01      	cmp	r3, #1
9001b3e2:	d8e5      	bhi.n	9001b3b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b3e4:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
9001b3e8:	b329      	cbz	r1, 9001b436 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001b3ea:	880b      	ldrh	r3, [r1, #0]
9001b3ec:	2b69      	cmp	r3, #105	; 0x69
9001b3ee:	d063      	beq.n	9001b4b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001b3f0:	d825      	bhi.n	9001b43e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001b3f2:	2b63      	cmp	r3, #99	; 0x63
9001b3f4:	d038      	beq.n	9001b468 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001b3f6:	2b64      	cmp	r3, #100	; 0x64
9001b3f8:	d05e      	beq.n	9001b4b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001b3fa:	2b58      	cmp	r3, #88	; 0x58
9001b3fc:	d07a      	beq.n	9001b4f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001b3fe:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
9001b402:	4625      	mov	r5, r4
9001b404:	e036      	b.n	9001b474 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b406:	2b73      	cmp	r3, #115	; 0x73
9001b408:	d0ec      	beq.n	9001b3e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b40a:	d802      	bhi.n	9001b412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001b40c:	2b6f      	cmp	r3, #111	; 0x6f
9001b40e:	d1cf      	bne.n	9001b3b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b410:	e7e8      	b.n	9001b3e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b412:	2b75      	cmp	r3, #117	; 0x75
9001b414:	d0e6      	beq.n	9001b3e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b416:	2b78      	cmp	r3, #120	; 0x78
9001b418:	e7f9      	b.n	9001b40e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001b41a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b41c:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001b420:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b422:	b10b      	cbz	r3, 9001b428 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001b424:	3302      	adds	r3, #2
9001b426:	9309      	str	r3, [sp, #36]	; 0x24
9001b428:	9b08      	ldr	r3, [sp, #32]
9001b42a:	2b00      	cmp	r3, #0
9001b42c:	f43f af2f 	beq.w	9001b28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b430:	3301      	adds	r3, #1
9001b432:	9308      	str	r3, [sp, #32]
9001b434:	e72b      	b.n	9001b28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b436:	2a00      	cmp	r2, #0
9001b438:	d0e1      	beq.n	9001b3fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b43a:	7813      	ldrb	r3, [r2, #0]
9001b43c:	e7d6      	b.n	9001b3ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001b43e:	2b73      	cmp	r3, #115	; 0x73
9001b440:	d036      	beq.n	9001b4b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001b442:	d807      	bhi.n	9001b454 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001b444:	2b6f      	cmp	r3, #111	; 0x6f
9001b446:	d1da      	bne.n	9001b3fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b448:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b44a:	1d25      	adds	r5, r4, #4
9001b44c:	2308      	movs	r3, #8
9001b44e:	eba8 0202 	sub.w	r2, r8, r2
9001b452:	e049      	b.n	9001b4e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001b454:	2b75      	cmp	r3, #117	; 0x75
9001b456:	d042      	beq.n	9001b4de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001b458:	2b78      	cmp	r3, #120	; 0x78
9001b45a:	d1d0      	bne.n	9001b3fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b45c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b45e:	1d25      	adds	r5, r4, #4
9001b460:	2310      	movs	r3, #16
9001b462:	eba8 0202 	sub.w	r2, r8, r2
9001b466:	e03f      	b.n	9001b4e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001b468:	6823      	ldr	r3, [r4, #0]
9001b46a:	1d25      	adds	r5, r4, #4
9001b46c:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
9001b470:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
9001b474:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b476:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
9001b47a:	2b00      	cmp	r3, #0
9001b47c:	d051      	beq.n	9001b522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001b47e:	881a      	ldrh	r2, [r3, #0]
9001b480:	a80d      	add	r0, sp, #52	; 0x34
9001b482:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
9001b486:	462c      	mov	r4, r5
9001b488:	9005      	str	r0, [sp, #20]
9001b48a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
9001b48e:	9004      	str	r0, [sp, #16]
9001b490:	980e      	ldr	r0, [sp, #56]	; 0x38
9001b492:	9003      	str	r0, [sp, #12]
9001b494:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
9001b498:	9002      	str	r0, [sp, #8]
9001b49a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001b49c:	9001      	str	r0, [sp, #4]
9001b49e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
9001b4a2:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001b4a6:	9000      	str	r0, [sp, #0]
9001b4a8:	a810      	add	r0, sp, #64	; 0x40
9001b4aa:	f7ff fd49 	bl	9001af40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001b4ae:	e7b7      	b.n	9001b420 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001b4b0:	1d25      	adds	r5, r4, #4
9001b4b2:	6823      	ldr	r3, [r4, #0]
9001b4b4:	9310      	str	r3, [sp, #64]	; 0x40
9001b4b6:	e7dd      	b.n	9001b474 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b4b8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b4ba:	230a      	movs	r3, #10
9001b4bc:	4649      	mov	r1, r9
9001b4be:	6820      	ldr	r0, [r4, #0]
9001b4c0:	eba8 0202 	sub.w	r2, r8, r2
9001b4c4:	1d25      	adds	r5, r4, #4
9001b4c6:	b292      	uxth	r2, r2
9001b4c8:	f7ff fcf0 	bl	9001aeac <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
9001b4cc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001b4d0:	2b2d      	cmp	r3, #45	; 0x2d
9001b4d2:	d1cf      	bne.n	9001b474 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b4d4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001b4d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b4da:	3302      	adds	r3, #2
9001b4dc:	e7ea      	b.n	9001b4b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001b4de:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b4e0:	1d25      	adds	r5, r4, #4
9001b4e2:	230a      	movs	r3, #10
9001b4e4:	eba8 0202 	sub.w	r2, r8, r2
9001b4e8:	b292      	uxth	r2, r2
9001b4ea:	4649      	mov	r1, r9
9001b4ec:	6820      	ldr	r0, [r4, #0]
9001b4ee:	f7ff fd09 	bl	9001af04 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001b4f2:	e7bf      	b.n	9001b474 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b4f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b4f6:	2310      	movs	r3, #16
9001b4f8:	4649      	mov	r1, r9
9001b4fa:	6820      	ldr	r0, [r4, #0]
9001b4fc:	eba8 0202 	sub.w	r2, r8, r2
9001b500:	1d25      	adds	r5, r4, #4
9001b502:	b292      	uxth	r2, r2
9001b504:	f7ff fcfe 	bl	9001af04 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001b508:	f10d 0242 	add.w	r2, sp, #66	; 0x42
9001b50c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001b510:	2b00      	cmp	r3, #0
9001b512:	d0af      	beq.n	9001b474 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b514:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
9001b518:	2919      	cmp	r1, #25
9001b51a:	d8f7      	bhi.n	9001b50c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001b51c:	3b20      	subs	r3, #32
9001b51e:	8013      	strh	r3, [r2, #0]
9001b520:	e7f4      	b.n	9001b50c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001b522:	9a08      	ldr	r2, [sp, #32]
9001b524:	2a00      	cmp	r2, #0
9001b526:	d0ab      	beq.n	9001b480 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001b528:	7812      	ldrb	r2, [r2, #0]
9001b52a:	e7a9      	b.n	9001b480 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001b52c:	2d00      	cmp	r5, #0
9001b52e:	f43f af48 	beq.w	9001b3c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001b532:	782d      	ldrb	r5, [r5, #0]
9001b534:	e745      	b.n	9001b3c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001b536 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001b536:	b507      	push	{r0, r1, r2, lr}
9001b538:	9300      	str	r3, [sp, #0]
9001b53a:	4613      	mov	r3, r2
9001b53c:	2200      	movs	r2, #0
9001b53e:	f7ff fe92 	bl	9001b266 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001b542:	b003      	add	sp, #12
9001b544:	f85d fb04 	ldr.w	pc, [sp], #4

9001b548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001b548:	b40c      	push	{r2, r3}
9001b54a:	b507      	push	{r0, r1, r2, lr}
9001b54c:	ab04      	add	r3, sp, #16
9001b54e:	f853 2b04 	ldr.w	r2, [r3], #4
9001b552:	9301      	str	r3, [sp, #4]
9001b554:	f7ff ffef 	bl	9001b536 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001b558:	b003      	add	sp, #12
9001b55a:	f85d eb04 	ldr.w	lr, [sp], #4
9001b55e:	b002      	add	sp, #8
9001b560:	4770      	bx	lr
	...

9001b564 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001b564:	4b01      	ldr	r3, [pc, #4]	; (9001b56c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001b566:	6018      	str	r0, [r3, #0]
9001b568:	4770      	bx	lr
9001b56a:	bf00      	nop
9001b56c:	24039b34 	.word	0x24039b34

9001b570 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001b570:	4b06      	ldr	r3, [pc, #24]	; (9001b58c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001b572:	881a      	ldrh	r2, [r3, #0]
9001b574:	4282      	cmp	r2, r0
9001b576:	d807      	bhi.n	9001b588 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001b578:	4b05      	ldr	r3, [pc, #20]	; (9001b590 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001b57a:	881b      	ldrh	r3, [r3, #0]
9001b57c:	4413      	add	r3, r2
9001b57e:	4298      	cmp	r0, r3
9001b580:	bfac      	ite	ge
9001b582:	2000      	movge	r0, #0
9001b584:	2001      	movlt	r0, #1
9001b586:	4770      	bx	lr
9001b588:	2000      	movs	r0, #0
9001b58a:	4770      	bx	lr
9001b58c:	24039b54 	.word	0x24039b54
9001b590:	24039b58 	.word	0x24039b58

9001b594 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001b594:	b508      	push	{r3, lr}
9001b596:	4601      	mov	r1, r0
9001b598:	f7ff ffea 	bl	9001b570 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001b59c:	b118      	cbz	r0, 9001b5a6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001b59e:	4b02      	ldr	r3, [pc, #8]	; (9001b5a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001b5a0:	681b      	ldr	r3, [r3, #0]
9001b5a2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001b5a6:	bd08      	pop	{r3, pc}
9001b5a8:	24039b38 	.word	0x24039b38

9001b5ac <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001b5ac:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b5ae:	4c24      	ldr	r4, [pc, #144]	; (9001b640 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001b5b0:	6823      	ldr	r3, [r4, #0]
9001b5b2:	2b00      	cmp	r3, #0
9001b5b4:	d042      	beq.n	9001b63c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001b5b6:	4a23      	ldr	r2, [pc, #140]	; (9001b644 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001b5b8:	4d23      	ldr	r5, [pc, #140]	; (9001b648 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001b5ba:	8811      	ldrh	r1, [r2, #0]
9001b5bc:	f8b5 c000 	ldrh.w	ip, [r5]
9001b5c0:	4822      	ldr	r0, [pc, #136]	; (9001b64c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001b5c2:	4461      	add	r1, ip
9001b5c4:	1c4a      	adds	r2, r1, #1
9001b5c6:	008f      	lsls	r7, r1, #2
9001b5c8:	f022 0201 	bic.w	r2, r2, #1
9001b5cc:	19de      	adds	r6, r3, r7
9001b5ce:	0412      	lsls	r2, r2, #16
9001b5d0:	6006      	str	r6, [r0, #0]
9001b5d2:	4e1f      	ldr	r6, [pc, #124]	; (9001b650 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001b5d4:	0c12      	lsrs	r2, r2, #16
9001b5d6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001b5da:	19da      	adds	r2, r3, r7
9001b5dc:	6032      	str	r2, [r6, #0]
9001b5de:	220e      	movs	r2, #14
9001b5e0:	fb02 f20c 	mul.w	r2, r2, ip
9001b5e4:	3203      	adds	r2, #3
9001b5e6:	f022 0203 	bic.w	r2, r2, #3
9001b5ea:	443a      	add	r2, r7
9001b5ec:	4f19      	ldr	r7, [pc, #100]	; (9001b654 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001b5ee:	4413      	add	r3, r2
9001b5f0:	603b      	str	r3, [r7, #0]
9001b5f2:	2300      	movs	r3, #0
9001b5f4:	4f18      	ldr	r7, [pc, #96]	; (9001b658 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001b5f6:	469c      	mov	ip, r3
9001b5f8:	803b      	strh	r3, [r7, #0]
9001b5fa:	4f18      	ldr	r7, [pc, #96]	; (9001b65c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001b5fc:	683f      	ldr	r7, [r7, #0]
9001b5fe:	1aba      	subs	r2, r7, r2
9001b600:	4f17      	ldr	r7, [pc, #92]	; (9001b660 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001b602:	603a      	str	r2, [r7, #0]
9001b604:	f64f 77ff 	movw	r7, #65535	; 0xffff
9001b608:	4a16      	ldr	r2, [pc, #88]	; (9001b664 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001b60a:	8013      	strh	r3, [r2, #0]
9001b60c:	428b      	cmp	r3, r1
9001b60e:	d10d      	bne.n	9001b62c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001b610:	882d      	ldrh	r5, [r5, #0]
9001b612:	2300      	movs	r3, #0
9001b614:	6830      	ldr	r0, [r6, #0]
9001b616:	240e      	movs	r4, #14
9001b618:	429d      	cmp	r5, r3
9001b61a:	d90f      	bls.n	9001b63c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001b61c:	fb04 0203 	mla	r2, r4, r3, r0
9001b620:	3301      	adds	r3, #1
9001b622:	7b11      	ldrb	r1, [r2, #12]
9001b624:	f36f 1145 	bfc	r1, #5, #1
9001b628:	7311      	strb	r1, [r2, #12]
9001b62a:	e7f5      	b.n	9001b618 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001b62c:	6822      	ldr	r2, [r4, #0]
9001b62e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001b632:	6802      	ldr	r2, [r0, #0]
9001b634:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001b638:	3301      	adds	r3, #1
9001b63a:	e7e7      	b.n	9001b60c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001b63c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001b63e:	bf00      	nop
9001b640:	24039b38 	.word	0x24039b38
9001b644:	24039b54 	.word	0x24039b54
9001b648:	24039b58 	.word	0x24039b58
9001b64c:	24039b4c 	.word	0x24039b4c
9001b650:	24039b3c 	.word	0x24039b3c
9001b654:	24039b44 	.word	0x24039b44
9001b658:	24039b56 	.word	0x24039b56
9001b65c:	24039b40 	.word	0x24039b40
9001b660:	24039b50 	.word	0x24039b50
9001b664:	24039b48 	.word	0x24039b48

9001b668 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001b668:	4b06      	ldr	r3, [pc, #24]	; (9001b684 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001b66a:	681b      	ldr	r3, [r3, #0]
9001b66c:	b943      	cbnz	r3, 9001b680 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001b66e:	b139      	cbz	r1, 9001b680 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001b670:	4b05      	ldr	r3, [pc, #20]	; (9001b688 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001b672:	801a      	strh	r2, [r3, #0]
9001b674:	4b05      	ldr	r3, [pc, #20]	; (9001b68c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001b676:	6019      	str	r1, [r3, #0]
9001b678:	4b05      	ldr	r3, [pc, #20]	; (9001b690 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001b67a:	6018      	str	r0, [r3, #0]
9001b67c:	f7ff bf96 	b.w	9001b5ac <_ZN8touchgfx6Bitmap10clearCacheEv>
9001b680:	4770      	bx	lr
9001b682:	bf00      	nop
9001b684:	24039b44 	.word	0x24039b44
9001b688:	24039b58 	.word	0x24039b58
9001b68c:	24039b40 	.word	0x24039b40
9001b690:	24039b38 	.word	0x24039b38

9001b694 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001b694:	b470      	push	{r4, r5, r6}
9001b696:	4c07      	ldr	r4, [pc, #28]	; (9001b6b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001b698:	4605      	mov	r5, r0
9001b69a:	4610      	mov	r0, r2
9001b69c:	9a03      	ldr	r2, [sp, #12]
9001b69e:	6826      	ldr	r6, [r4, #0]
9001b6a0:	b936      	cbnz	r6, 9001b6b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001b6a2:	6025      	str	r5, [r4, #0]
9001b6a4:	4c04      	ldr	r4, [pc, #16]	; (9001b6b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001b6a6:	8021      	strh	r1, [r4, #0]
9001b6a8:	4619      	mov	r1, r3
9001b6aa:	bc70      	pop	{r4, r5, r6}
9001b6ac:	f7ff bfdc 	b.w	9001b668 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001b6b0:	bc70      	pop	{r4, r5, r6}
9001b6b2:	4770      	bx	lr
9001b6b4:	24039b5c 	.word	0x24039b5c
9001b6b8:	24039b54 	.word	0x24039b54

9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001b6bc:	4a12      	ldr	r2, [pc, #72]	; (9001b708 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001b6be:	8803      	ldrh	r3, [r0, #0]
9001b6c0:	8812      	ldrh	r2, [r2, #0]
9001b6c2:	4293      	cmp	r3, r2
9001b6c4:	d207      	bcs.n	9001b6d6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001b6c6:	4a11      	ldr	r2, [pc, #68]	; (9001b70c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001b6c8:	2114      	movs	r1, #20
9001b6ca:	6812      	ldr	r2, [r2, #0]
9001b6cc:	fb01 2303 	mla	r3, r1, r3, r2
9001b6d0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001b6d4:	4770      	bx	lr
9001b6d6:	490e      	ldr	r1, [pc, #56]	; (9001b710 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001b6d8:	8809      	ldrh	r1, [r1, #0]
9001b6da:	4411      	add	r1, r2
9001b6dc:	428b      	cmp	r3, r1
9001b6de:	da04      	bge.n	9001b6ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001b6e0:	1a9b      	subs	r3, r3, r2
9001b6e2:	4a0c      	ldr	r2, [pc, #48]	; (9001b714 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001b6e4:	210e      	movs	r1, #14
9001b6e6:	6812      	ldr	r2, [r2, #0]
9001b6e8:	e7f0      	b.n	9001b6cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001b6ea:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b6ee:	4293      	cmp	r3, r2
9001b6f0:	d108      	bne.n	9001b704 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001b6f2:	4b09      	ldr	r3, [pc, #36]	; (9001b718 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001b6f4:	781b      	ldrb	r3, [r3, #0]
9001b6f6:	b91b      	cbnz	r3, 9001b700 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001b6f8:	4b08      	ldr	r3, [pc, #32]	; (9001b71c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001b6fa:	f9b3 0000 	ldrsh.w	r0, [r3]
9001b6fe:	4770      	bx	lr
9001b700:	4b07      	ldr	r3, [pc, #28]	; (9001b720 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001b702:	e7fa      	b.n	9001b6fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001b704:	2000      	movs	r0, #0
9001b706:	4770      	bx	lr
9001b708:	24039b54 	.word	0x24039b54
9001b70c:	24039b5c 	.word	0x24039b5c
9001b710:	24039b58 	.word	0x24039b58
9001b714:	24039b3c 	.word	0x24039b3c
9001b718:	24039ac4 	.word	0x24039ac4
9001b71c:	24039ac6 	.word	0x24039ac6
9001b720:	24039ac8 	.word	0x24039ac8

9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001b724:	4a12      	ldr	r2, [pc, #72]	; (9001b770 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001b726:	8803      	ldrh	r3, [r0, #0]
9001b728:	8812      	ldrh	r2, [r2, #0]
9001b72a:	4293      	cmp	r3, r2
9001b72c:	d207      	bcs.n	9001b73e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001b72e:	4a11      	ldr	r2, [pc, #68]	; (9001b774 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001b730:	2114      	movs	r1, #20
9001b732:	6812      	ldr	r2, [r2, #0]
9001b734:	fb01 2303 	mla	r3, r1, r3, r2
9001b738:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001b73c:	4770      	bx	lr
9001b73e:	490e      	ldr	r1, [pc, #56]	; (9001b778 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001b740:	8809      	ldrh	r1, [r1, #0]
9001b742:	4411      	add	r1, r2
9001b744:	428b      	cmp	r3, r1
9001b746:	da04      	bge.n	9001b752 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001b748:	1a9b      	subs	r3, r3, r2
9001b74a:	4a0c      	ldr	r2, [pc, #48]	; (9001b77c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001b74c:	210e      	movs	r1, #14
9001b74e:	6812      	ldr	r2, [r2, #0]
9001b750:	e7f0      	b.n	9001b734 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001b752:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b756:	4293      	cmp	r3, r2
9001b758:	d108      	bne.n	9001b76c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001b75a:	4b09      	ldr	r3, [pc, #36]	; (9001b780 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001b75c:	781b      	ldrb	r3, [r3, #0]
9001b75e:	b91b      	cbnz	r3, 9001b768 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001b760:	4b08      	ldr	r3, [pc, #32]	; (9001b784 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001b762:	f9b3 0000 	ldrsh.w	r0, [r3]
9001b766:	4770      	bx	lr
9001b768:	4b07      	ldr	r3, [pc, #28]	; (9001b788 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001b76a:	e7fa      	b.n	9001b762 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001b76c:	2000      	movs	r0, #0
9001b76e:	4770      	bx	lr
9001b770:	24039b54 	.word	0x24039b54
9001b774:	24039b5c 	.word	0x24039b5c
9001b778:	24039b58 	.word	0x24039b58
9001b77c:	24039b3c 	.word	0x24039b3c
9001b780:	24039ac4 	.word	0x24039ac4
9001b784:	24039ac8 	.word	0x24039ac8
9001b788:	24039ac6 	.word	0x24039ac6

9001b78c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001b78c:	4a1f      	ldr	r2, [pc, #124]	; (9001b80c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001b78e:	b510      	push	{r4, lr}
9001b790:	880b      	ldrh	r3, [r1, #0]
9001b792:	8812      	ldrh	r2, [r2, #0]
9001b794:	4293      	cmp	r3, r2
9001b796:	d213      	bcs.n	9001b7c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001b798:	4a1d      	ldr	r2, [pc, #116]	; (9001b810 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
9001b79a:	2114      	movs	r1, #20
9001b79c:	6812      	ldr	r2, [r2, #0]
9001b79e:	fb01 2303 	mla	r3, r1, r3, r2
9001b7a2:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001b7a6:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001b7aa:	8a1a      	ldrh	r2, [r3, #16]
9001b7ac:	8a5b      	ldrh	r3, [r3, #18]
9001b7ae:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001b7b2:	8004      	strh	r4, [r0, #0]
9001b7b4:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001b7b8:	8041      	strh	r1, [r0, #2]
9001b7ba:	8082      	strh	r2, [r0, #4]
9001b7bc:	80c3      	strh	r3, [r0, #6]
9001b7be:	e00e      	b.n	9001b7de <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001b7c0:	4914      	ldr	r1, [pc, #80]	; (9001b814 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001b7c2:	8809      	ldrh	r1, [r1, #0]
9001b7c4:	4411      	add	r1, r2
9001b7c6:	428b      	cmp	r3, r1
9001b7c8:	da0a      	bge.n	9001b7e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
9001b7ca:	1a9b      	subs	r3, r3, r2
9001b7cc:	4a12      	ldr	r2, [pc, #72]	; (9001b818 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001b7ce:	210e      	movs	r1, #14
9001b7d0:	6812      	ldr	r2, [r2, #0]
9001b7d2:	fb01 2303 	mla	r3, r1, r3, r2
9001b7d6:	681a      	ldr	r2, [r3, #0]
9001b7d8:	6002      	str	r2, [r0, #0]
9001b7da:	685a      	ldr	r2, [r3, #4]
9001b7dc:	6042      	str	r2, [r0, #4]
9001b7de:	bd10      	pop	{r4, pc}
9001b7e0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b7e4:	4293      	cmp	r3, r2
9001b7e6:	d10b      	bne.n	9001b800 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
9001b7e8:	4b0c      	ldr	r3, [pc, #48]	; (9001b81c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001b7ea:	f9b3 1000 	ldrsh.w	r1, [r3]
9001b7ee:	4b0c      	ldr	r3, [pc, #48]	; (9001b820 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001b7f0:	8081      	strh	r1, [r0, #4]
9001b7f2:	f9b3 2000 	ldrsh.w	r2, [r3]
9001b7f6:	2300      	movs	r3, #0
9001b7f8:	80c2      	strh	r2, [r0, #6]
9001b7fa:	8003      	strh	r3, [r0, #0]
9001b7fc:	8043      	strh	r3, [r0, #2]
9001b7fe:	e7ee      	b.n	9001b7de <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001b800:	2300      	movs	r3, #0
9001b802:	8003      	strh	r3, [r0, #0]
9001b804:	8043      	strh	r3, [r0, #2]
9001b806:	8083      	strh	r3, [r0, #4]
9001b808:	e7d8      	b.n	9001b7bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001b80a:	bf00      	nop
9001b80c:	24039b54 	.word	0x24039b54
9001b810:	24039b5c 	.word	0x24039b5c
9001b814:	24039b58 	.word	0x24039b58
9001b818:	24039b3c 	.word	0x24039b3c
9001b81c:	24039ac0 	.word	0x24039ac0
9001b820:	24039ac2 	.word	0x24039ac2

9001b824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001b824:	4a17      	ldr	r2, [pc, #92]	; (9001b884 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001b826:	8803      	ldrh	r3, [r0, #0]
9001b828:	8812      	ldrh	r2, [r2, #0]
9001b82a:	4293      	cmp	r3, r2
9001b82c:	d213      	bcs.n	9001b856 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001b82e:	4a16      	ldr	r2, [pc, #88]	; (9001b888 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001b830:	2114      	movs	r1, #20
9001b832:	6812      	ldr	r2, [r2, #0]
9001b834:	fb01 2303 	mla	r3, r1, r3, r2
9001b838:	8a1a      	ldrh	r2, [r3, #16]
9001b83a:	8919      	ldrh	r1, [r3, #8]
9001b83c:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001b840:	428a      	cmp	r2, r1
9001b842:	db1d      	blt.n	9001b880 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001b844:	8a58      	ldrh	r0, [r3, #18]
9001b846:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001b84a:	895b      	ldrh	r3, [r3, #10]
9001b84c:	4298      	cmp	r0, r3
9001b84e:	bfac      	ite	ge
9001b850:	2000      	movge	r0, #0
9001b852:	2001      	movlt	r0, #1
9001b854:	4770      	bx	lr
9001b856:	490d      	ldr	r1, [pc, #52]	; (9001b88c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001b858:	8809      	ldrh	r1, [r1, #0]
9001b85a:	4411      	add	r1, r2
9001b85c:	428b      	cmp	r3, r1
9001b85e:	da0d      	bge.n	9001b87c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001b860:	1a9b      	subs	r3, r3, r2
9001b862:	4a0b      	ldr	r2, [pc, #44]	; (9001b890 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001b864:	210e      	movs	r1, #14
9001b866:	6812      	ldr	r2, [r2, #0]
9001b868:	fb01 2303 	mla	r3, r1, r3, r2
9001b86c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001b870:	891a      	ldrh	r2, [r3, #8]
9001b872:	4291      	cmp	r1, r2
9001b874:	db04      	blt.n	9001b880 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001b876:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001b87a:	e7e6      	b.n	9001b84a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001b87c:	2000      	movs	r0, #0
9001b87e:	4770      	bx	lr
9001b880:	2001      	movs	r0, #1
9001b882:	4770      	bx	lr
9001b884:	24039b54 	.word	0x24039b54
9001b888:	24039b5c 	.word	0x24039b5c
9001b88c:	24039b58 	.word	0x24039b58
9001b890:	24039b3c 	.word	0x24039b3c

9001b894 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001b894:	4a12      	ldr	r2, [pc, #72]	; (9001b8e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001b896:	8803      	ldrh	r3, [r0, #0]
9001b898:	8811      	ldrh	r1, [r2, #0]
9001b89a:	428b      	cmp	r3, r1
9001b89c:	d20b      	bcs.n	9001b8b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001b89e:	4a11      	ldr	r2, [pc, #68]	; (9001b8e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001b8a0:	6812      	ldr	r2, [r2, #0]
9001b8a2:	b112      	cbz	r2, 9001b8aa <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001b8a4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001b8a8:	b9c0      	cbnz	r0, 9001b8dc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001b8aa:	4a0f      	ldr	r2, [pc, #60]	; (9001b8e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001b8ac:	6811      	ldr	r1, [r2, #0]
9001b8ae:	2214      	movs	r2, #20
9001b8b0:	4353      	muls	r3, r2
9001b8b2:	58c8      	ldr	r0, [r1, r3]
9001b8b4:	4770      	bx	lr
9001b8b6:	4a0d      	ldr	r2, [pc, #52]	; (9001b8ec <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001b8b8:	8812      	ldrh	r2, [r2, #0]
9001b8ba:	440a      	add	r2, r1
9001b8bc:	4293      	cmp	r3, r2
9001b8be:	da04      	bge.n	9001b8ca <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001b8c0:	4a08      	ldr	r2, [pc, #32]	; (9001b8e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001b8c2:	6812      	ldr	r2, [r2, #0]
9001b8c4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001b8c8:	4770      	bx	lr
9001b8ca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b8ce:	4293      	cmp	r3, r2
9001b8d0:	d103      	bne.n	9001b8da <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001b8d2:	4b07      	ldr	r3, [pc, #28]	; (9001b8f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001b8d4:	681b      	ldr	r3, [r3, #0]
9001b8d6:	6c58      	ldr	r0, [r3, #68]	; 0x44
9001b8d8:	4770      	bx	lr
9001b8da:	2000      	movs	r0, #0
9001b8dc:	4770      	bx	lr
9001b8de:	bf00      	nop
9001b8e0:	24039b54 	.word	0x24039b54
9001b8e4:	24039b38 	.word	0x24039b38
9001b8e8:	24039b5c 	.word	0x24039b5c
9001b8ec:	24039b58 	.word	0x24039b58
9001b8f0:	24039acc 	.word	0x24039acc

9001b8f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001b8f4:	4b24      	ldr	r3, [pc, #144]	; (9001b988 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001b8f6:	8802      	ldrh	r2, [r0, #0]
9001b8f8:	8818      	ldrh	r0, [r3, #0]
9001b8fa:	4282      	cmp	r2, r0
9001b8fc:	d221      	bcs.n	9001b942 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001b8fe:	4b23      	ldr	r3, [pc, #140]	; (9001b98c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001b900:	6819      	ldr	r1, [r3, #0]
9001b902:	2314      	movs	r3, #20
9001b904:	fb03 1302 	mla	r3, r3, r2, r1
9001b908:	6858      	ldr	r0, [r3, #4]
9001b90a:	2800      	cmp	r0, #0
9001b90c:	d03a      	beq.n	9001b984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b90e:	4920      	ldr	r1, [pc, #128]	; (9001b990 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001b910:	6809      	ldr	r1, [r1, #0]
9001b912:	2900      	cmp	r1, #0
9001b914:	d036      	beq.n	9001b984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b916:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001b91a:	2900      	cmp	r1, #0
9001b91c:	d032      	beq.n	9001b984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b91e:	891a      	ldrh	r2, [r3, #8]
9001b920:	8958      	ldrh	r0, [r3, #10]
9001b922:	4350      	muls	r0, r2
9001b924:	7c5a      	ldrb	r2, [r3, #17]
9001b926:	7cdb      	ldrb	r3, [r3, #19]
9001b928:	0952      	lsrs	r2, r2, #5
9001b92a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001b92e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001b932:	2b0b      	cmp	r3, #11
9001b934:	bf18      	it	ne
9001b936:	0040      	lslne	r0, r0, #1
9001b938:	3003      	adds	r0, #3
9001b93a:	f020 0003 	bic.w	r0, r0, #3
9001b93e:	4408      	add	r0, r1
9001b940:	4770      	bx	lr
9001b942:	4b14      	ldr	r3, [pc, #80]	; (9001b994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001b944:	881b      	ldrh	r3, [r3, #0]
9001b946:	4403      	add	r3, r0
9001b948:	429a      	cmp	r2, r3
9001b94a:	da1a      	bge.n	9001b982 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001b94c:	4b12      	ldr	r3, [pc, #72]	; (9001b998 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001b94e:	1a10      	subs	r0, r2, r0
9001b950:	210e      	movs	r1, #14
9001b952:	681b      	ldr	r3, [r3, #0]
9001b954:	fb01 3000 	mla	r0, r1, r0, r3
9001b958:	7b03      	ldrb	r3, [r0, #12]
9001b95a:	f003 031f 	and.w	r3, r3, #31
9001b95e:	2b0b      	cmp	r3, #11
9001b960:	d10b      	bne.n	9001b97a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001b962:	8903      	ldrh	r3, [r0, #8]
9001b964:	8940      	ldrh	r0, [r0, #10]
9001b966:	4358      	muls	r0, r3
9001b968:	4b09      	ldr	r3, [pc, #36]	; (9001b990 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001b96a:	3003      	adds	r0, #3
9001b96c:	6819      	ldr	r1, [r3, #0]
9001b96e:	f020 0303 	bic.w	r3, r0, #3
9001b972:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001b976:	4418      	add	r0, r3
9001b978:	4770      	bx	lr
9001b97a:	2b0d      	cmp	r3, #13
9001b97c:	d101      	bne.n	9001b982 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001b97e:	300d      	adds	r0, #13
9001b980:	4770      	bx	lr
9001b982:	2000      	movs	r0, #0
9001b984:	4770      	bx	lr
9001b986:	bf00      	nop
9001b988:	24039b54 	.word	0x24039b54
9001b98c:	24039b5c 	.word	0x24039b5c
9001b990:	24039b38 	.word	0x24039b38
9001b994:	24039b58 	.word	0x24039b58
9001b998:	24039b3c 	.word	0x24039b3c

9001b99c <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001b99c:	4a17      	ldr	r2, [pc, #92]	; (9001b9fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001b99e:	b510      	push	{r4, lr}
9001b9a0:	8803      	ldrh	r3, [r0, #0]
9001b9a2:	8812      	ldrh	r2, [r2, #0]
9001b9a4:	4293      	cmp	r3, r2
9001b9a6:	d20c      	bcs.n	9001b9c2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
9001b9a8:	4a15      	ldr	r2, [pc, #84]	; (9001ba00 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
9001b9aa:	2114      	movs	r1, #20
9001b9ac:	6812      	ldr	r2, [r2, #0]
9001b9ae:	fb01 2303 	mla	r3, r1, r3, r2
9001b9b2:	7c58      	ldrb	r0, [r3, #17]
9001b9b4:	0942      	lsrs	r2, r0, #5
9001b9b6:	7cd8      	ldrb	r0, [r3, #19]
9001b9b8:	f3c0 1042 	ubfx	r0, r0, #5, #3
9001b9bc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
9001b9c0:	bd10      	pop	{r4, pc}
9001b9c2:	4910      	ldr	r1, [pc, #64]	; (9001ba04 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
9001b9c4:	8809      	ldrh	r1, [r1, #0]
9001b9c6:	4411      	add	r1, r2
9001b9c8:	428b      	cmp	r3, r1
9001b9ca:	da09      	bge.n	9001b9e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
9001b9cc:	1a9b      	subs	r3, r3, r2
9001b9ce:	4a0e      	ldr	r2, [pc, #56]	; (9001ba08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001b9d0:	210e      	movs	r1, #14
9001b9d2:	6812      	ldr	r2, [r2, #0]
9001b9d4:	fb01 2303 	mla	r3, r1, r3, r2
9001b9d8:	7b18      	ldrb	r0, [r3, #12]
9001b9da:	f000 001f 	and.w	r0, r0, #31
9001b9de:	e7ef      	b.n	9001b9c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001b9e0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b9e4:	4293      	cmp	r3, r2
9001b9e6:	d106      	bne.n	9001b9f6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
9001b9e8:	f7f7 fcce 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
9001b9ec:	6803      	ldr	r3, [r0, #0]
9001b9ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001b9f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b9f4:	4718      	bx	r3
9001b9f6:	2000      	movs	r0, #0
9001b9f8:	e7e2      	b.n	9001b9c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001b9fa:	bf00      	nop
9001b9fc:	24039b54 	.word	0x24039b54
9001ba00:	24039b5c 	.word	0x24039b5c
9001ba04:	24039b58 	.word	0x24039b58
9001ba08:	24039b3c 	.word	0x24039b3c

9001ba0c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001ba0c:	2010      	movs	r0, #16
9001ba0e:	4770      	bx	lr

9001ba10 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001ba10:	4b02      	ldr	r3, [pc, #8]	; (9001ba1c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001ba12:	8818      	ldrh	r0, [r3, #0]
9001ba14:	0040      	lsls	r0, r0, #1
9001ba16:	b280      	uxth	r0, r0
9001ba18:	4770      	bx	lr
9001ba1a:	bf00      	nop
9001ba1c:	24039ac6 	.word	0x24039ac6

9001ba20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001ba20:	2bff      	cmp	r3, #255	; 0xff
9001ba22:	d050      	beq.n	9001bac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001ba24:	2a0b      	cmp	r2, #11
9001ba26:	d04a      	beq.n	9001babe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001ba28:	d80e      	bhi.n	9001ba48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001ba2a:	2a03      	cmp	r2, #3
9001ba2c:	d03f      	beq.n	9001baae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001ba2e:	d804      	bhi.n	9001ba3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001ba30:	2a01      	cmp	r2, #1
9001ba32:	d03e      	beq.n	9001bab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
9001ba34:	d93f      	bls.n	9001bab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
9001ba36:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001ba38:	4770      	bx	lr
9001ba3a:	2a09      	cmp	r2, #9
9001ba3c:	d03f      	beq.n	9001babe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001ba3e:	d83c      	bhi.n	9001baba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001ba40:	2a08      	cmp	r2, #8
9001ba42:	d03a      	beq.n	9001baba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001ba44:	2000      	movs	r0, #0
9001ba46:	4770      	bx	lr
9001ba48:	2a2f      	cmp	r2, #47	; 0x2f
9001ba4a:	d024      	beq.n	9001ba96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
9001ba4c:	d80d      	bhi.n	9001ba6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001ba4e:	2a2d      	cmp	r2, #45	; 0x2d
9001ba50:	d014      	beq.n	9001ba7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
9001ba52:	d826      	bhi.n	9001baa2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001ba54:	2a2c      	cmp	r2, #44	; 0x2c
9001ba56:	d1f5      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ba58:	684b      	ldr	r3, [r1, #4]
9001ba5a:	781b      	ldrb	r3, [r3, #0]
9001ba5c:	2b01      	cmp	r3, #1
9001ba5e:	d018      	beq.n	9001ba92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
9001ba60:	d323      	bcc.n	9001baaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
9001ba62:	2b02      	cmp	r3, #2
9001ba64:	d1ee      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ba66:	6880      	ldr	r0, [r0, #8]
9001ba68:	4770      	bx	lr
9001ba6a:	2a31      	cmp	r2, #49	; 0x31
9001ba6c:	d004      	beq.n	9001ba78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
9001ba6e:	d328      	bcc.n	9001bac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001ba70:	2a32      	cmp	r2, #50	; 0x32
9001ba72:	d026      	beq.n	9001bac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001ba74:	2a33      	cmp	r2, #51	; 0x33
9001ba76:	d1e5      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ba78:	6f00      	ldr	r0, [r0, #112]	; 0x70
9001ba7a:	4770      	bx	lr
9001ba7c:	684b      	ldr	r3, [r1, #4]
9001ba7e:	781b      	ldrb	r3, [r3, #0]
9001ba80:	2b01      	cmp	r3, #1
9001ba82:	d004      	beq.n	9001ba8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
9001ba84:	d30b      	bcc.n	9001ba9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ba86:	2b02      	cmp	r3, #2
9001ba88:	d1dc      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ba8a:	6900      	ldr	r0, [r0, #16]
9001ba8c:	4770      	bx	lr
9001ba8e:	6a00      	ldr	r0, [r0, #32]
9001ba90:	4770      	bx	lr
9001ba92:	6980      	ldr	r0, [r0, #24]
9001ba94:	4770      	bx	lr
9001ba96:	684b      	ldr	r3, [r1, #4]
9001ba98:	781b      	ldrb	r3, [r3, #0]
9001ba9a:	2b00      	cmp	r3, #0
9001ba9c:	d1d2      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ba9e:	6b00      	ldr	r0, [r0, #48]	; 0x30
9001baa0:	4770      	bx	lr
9001baa2:	684b      	ldr	r3, [r1, #4]
9001baa4:	781b      	ldrb	r3, [r3, #0]
9001baa6:	2b00      	cmp	r3, #0
9001baa8:	d1cc      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001baaa:	6a80      	ldr	r0, [r0, #40]	; 0x28
9001baac:	4770      	bx	lr
9001baae:	6c80      	ldr	r0, [r0, #72]	; 0x48
9001bab0:	4770      	bx	lr
9001bab2:	6d00      	ldr	r0, [r0, #80]	; 0x50
9001bab4:	4770      	bx	lr
9001bab6:	6c00      	ldr	r0, [r0, #64]	; 0x40
9001bab8:	4770      	bx	lr
9001baba:	6d80      	ldr	r0, [r0, #88]	; 0x58
9001babc:	4770      	bx	lr
9001babe:	6e00      	ldr	r0, [r0, #96]	; 0x60
9001bac0:	4770      	bx	lr
9001bac2:	6e80      	ldr	r0, [r0, #104]	; 0x68
9001bac4:	4770      	bx	lr
9001bac6:	2a0b      	cmp	r2, #11
9001bac8:	d049      	beq.n	9001bb5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001baca:	d80e      	bhi.n	9001baea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
9001bacc:	2a03      	cmp	r2, #3
9001bace:	d040      	beq.n	9001bb52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
9001bad0:	d804      	bhi.n	9001badc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
9001bad2:	2a01      	cmp	r2, #1
9001bad4:	d03f      	beq.n	9001bb56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
9001bad6:	d940      	bls.n	9001bb5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
9001bad8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
9001bada:	4770      	bx	lr
9001badc:	2a09      	cmp	r2, #9
9001bade:	d03e      	beq.n	9001bb5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001bae0:	d801      	bhi.n	9001bae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
9001bae2:	2a08      	cmp	r2, #8
9001bae4:	d1ae      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bae6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
9001bae8:	4770      	bx	lr
9001baea:	2a2f      	cmp	r2, #47	; 0x2f
9001baec:	d024      	beq.n	9001bb38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001baee:	d80d      	bhi.n	9001bb0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001baf0:	2a2d      	cmp	r2, #45	; 0x2d
9001baf2:	d014      	beq.n	9001bb1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
9001baf4:	d826      	bhi.n	9001bb44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
9001baf6:	2a2c      	cmp	r2, #44	; 0x2c
9001baf8:	d1a4      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bafa:	684b      	ldr	r3, [r1, #4]
9001bafc:	781b      	ldrb	r3, [r3, #0]
9001bafe:	2b01      	cmp	r3, #1
9001bb00:	d018      	beq.n	9001bb34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001bb02:	d324      	bcc.n	9001bb4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
9001bb04:	2b02      	cmp	r3, #2
9001bb06:	d19d      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bb08:	68c0      	ldr	r0, [r0, #12]
9001bb0a:	4770      	bx	lr
9001bb0c:	2a31      	cmp	r2, #49	; 0x31
9001bb0e:	d004      	beq.n	9001bb1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001bb10:	d327      	bcc.n	9001bb62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001bb12:	2a32      	cmp	r2, #50	; 0x32
9001bb14:	d025      	beq.n	9001bb62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001bb16:	2a33      	cmp	r2, #51	; 0x33
9001bb18:	d194      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bb1a:	6f40      	ldr	r0, [r0, #116]	; 0x74
9001bb1c:	4770      	bx	lr
9001bb1e:	684b      	ldr	r3, [r1, #4]
9001bb20:	781b      	ldrb	r3, [r3, #0]
9001bb22:	2b01      	cmp	r3, #1
9001bb24:	d004      	beq.n	9001bb30 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001bb26:	d30b      	bcc.n	9001bb40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
9001bb28:	2b02      	cmp	r3, #2
9001bb2a:	d18b      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bb2c:	6940      	ldr	r0, [r0, #20]
9001bb2e:	4770      	bx	lr
9001bb30:	6a40      	ldr	r0, [r0, #36]	; 0x24
9001bb32:	4770      	bx	lr
9001bb34:	69c0      	ldr	r0, [r0, #28]
9001bb36:	4770      	bx	lr
9001bb38:	684b      	ldr	r3, [r1, #4]
9001bb3a:	781b      	ldrb	r3, [r3, #0]
9001bb3c:	2b00      	cmp	r3, #0
9001bb3e:	d181      	bne.n	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bb40:	6b40      	ldr	r0, [r0, #52]	; 0x34
9001bb42:	4770      	bx	lr
9001bb44:	684b      	ldr	r3, [r1, #4]
9001bb46:	781b      	ldrb	r3, [r3, #0]
9001bb48:	2b00      	cmp	r3, #0
9001bb4a:	f47f af7b 	bne.w	9001ba44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bb4e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
9001bb50:	4770      	bx	lr
9001bb52:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001bb54:	4770      	bx	lr
9001bb56:	6d40      	ldr	r0, [r0, #84]	; 0x54
9001bb58:	4770      	bx	lr
9001bb5a:	6c40      	ldr	r0, [r0, #68]	; 0x44
9001bb5c:	4770      	bx	lr
9001bb5e:	6e40      	ldr	r0, [r0, #100]	; 0x64
9001bb60:	4770      	bx	lr
9001bb62:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
9001bb64:	4770      	bx	lr

9001bb66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bb66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bb6a:	b087      	sub	sp, #28
9001bb6c:	9815      	ldr	r0, [sp, #84]	; 0x54
9001bb6e:	9205      	str	r2, [sp, #20]
9001bb70:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001bb74:	9101      	str	r1, [sp, #4]
9001bb76:	9202      	str	r2, [sp, #8]
9001bb78:	6841      	ldr	r1, [r0, #4]
9001bb7a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001bb7e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001bb82:	fb01 2404 	mla	r4, r1, r4, r2
9001bb86:	6802      	ldr	r2, [r0, #0]
9001bb88:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bb8c:	f8de 2000 	ldr.w	r2, [lr]
9001bb90:	9203      	str	r2, [sp, #12]
9001bb92:	f8de 2004 	ldr.w	r2, [lr, #4]
9001bb96:	3204      	adds	r2, #4
9001bb98:	9204      	str	r2, [sp, #16]
9001bb9a:	9a02      	ldr	r2, [sp, #8]
9001bb9c:	43d6      	mvns	r6, r2
9001bb9e:	b2f6      	uxtb	r6, r6
9001bba0:	9a01      	ldr	r2, [sp, #4]
9001bba2:	2a00      	cmp	r2, #0
9001bba4:	dc03      	bgt.n	9001bbae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001bba6:	9a05      	ldr	r2, [sp, #20]
9001bba8:	2a00      	cmp	r2, #0
9001bbaa:	f340 8129 	ble.w	9001be00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001bbae:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001bbb0:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001bbb4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001bbb8:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001bbba:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001bbbe:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001bbc2:	2b00      	cmp	r3, #0
9001bbc4:	dd0e      	ble.n	9001bbe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001bbc6:	1408      	asrs	r0, r1, #16
9001bbc8:	d405      	bmi.n	9001bbd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bbca:	4560      	cmp	r0, ip
9001bbcc:	da03      	bge.n	9001bbd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bbce:	1410      	asrs	r0, r2, #16
9001bbd0:	d401      	bmi.n	9001bbd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bbd2:	42b8      	cmp	r0, r7
9001bbd4:	db07      	blt.n	9001bbe6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001bbd6:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bbd8:	3b01      	subs	r3, #1
9001bbda:	3402      	adds	r4, #2
9001bbdc:	4401      	add	r1, r0
9001bbde:	9814      	ldr	r0, [sp, #80]	; 0x50
9001bbe0:	4402      	add	r2, r0
9001bbe2:	e7ee      	b.n	9001bbc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001bbe4:	d071      	beq.n	9001bcca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bbe6:	1e58      	subs	r0, r3, #1
9001bbe8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001bbea:	fb05 1500 	mla	r5, r5, r0, r1
9001bbee:	142d      	asrs	r5, r5, #16
9001bbf0:	d45f      	bmi.n	9001bcb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001bbf2:	4565      	cmp	r5, ip
9001bbf4:	da5d      	bge.n	9001bcb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001bbf6:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001bbf8:	fb05 2000 	mla	r0, r5, r0, r2
9001bbfc:	1400      	asrs	r0, r0, #16
9001bbfe:	d458      	bmi.n	9001bcb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001bc00:	42b8      	cmp	r0, r7
9001bc02:	da56      	bge.n	9001bcb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001bc04:	4699      	mov	r9, r3
9001bc06:	46a2      	mov	sl, r4
9001bc08:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001bc0c:	f1b9 0f00 	cmp.w	r9, #0
9001bc10:	dd57      	ble.n	9001bcc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001bc12:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001bc16:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001bc1a:	9803      	ldr	r0, [sp, #12]
9001bc1c:	140d      	asrs	r5, r1, #16
9001bc1e:	f109 39ff 	add.w	r9, r9, #4294967295
9001bc22:	fb07 000c 	mla	r0, r7, ip, r0
9001bc26:	5d40      	ldrb	r0, [r0, r5]
9001bc28:	9d04      	ldr	r5, [sp, #16]
9001bc2a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001bc2e:	f8ba 5000 	ldrh.w	r5, [sl]
9001bc32:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001bc36:	122f      	asrs	r7, r5, #8
9001bc38:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001bc3c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001bc40:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bc44:	00ed      	lsls	r5, r5, #3
9001bc46:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001bc4a:	fb17 f706 	smulbb	r7, r7, r6
9001bc4e:	b2ed      	uxtb	r5, r5
9001bc50:	fb18 f806 	smulbb	r8, r8, r6
9001bc54:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001bc58:	10c7      	asrs	r7, r0, #3
9001bc5a:	fb15 f506 	smulbb	r5, r5, r6
9001bc5e:	00c0      	lsls	r0, r0, #3
9001bc60:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001bc64:	fa1f fc8c 	uxth.w	ip, ip
9001bc68:	b2c0      	uxtb	r0, r0
9001bc6a:	fb07 870b 	mla	r7, r7, fp, r8
9001bc6e:	fb00 500b 	mla	r0, r0, fp, r5
9001bc72:	f10c 0501 	add.w	r5, ip, #1
9001bc76:	b2bf      	uxth	r7, r7
9001bc78:	b280      	uxth	r0, r0
9001bc7a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bc7e:	f107 0801 	add.w	r8, r7, #1
9001bc82:	1c45      	adds	r5, r0, #1
9001bc84:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001bc88:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001bc8c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bc90:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bc92:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001bc96:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bc9a:	4401      	add	r1, r0
9001bc9c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001bca0:	9814      	ldr	r0, [sp, #80]	; 0x50
9001bca2:	ea45 0c0c 	orr.w	ip, r5, ip
9001bca6:	4402      	add	r2, r0
9001bca8:	ea4c 0c08 	orr.w	ip, ip, r8
9001bcac:	f82a cb02 	strh.w	ip, [sl], #2
9001bcb0:	e7ac      	b.n	9001bc0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001bcb2:	f04f 0800 	mov.w	r8, #0
9001bcb6:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001bcba:	eb03 0008 	add.w	r0, r3, r8
9001bcbe:	2800      	cmp	r0, #0
9001bcc0:	dc41      	bgt.n	9001bd46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001bcc2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bcc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bcca:	9b01      	ldr	r3, [sp, #4]
9001bccc:	2b00      	cmp	r3, #0
9001bcce:	f340 8097 	ble.w	9001be00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001bcd2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001bcd6:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bcd8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bcdc:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bce0:	eef0 6a62 	vmov.f32	s13, s5
9001bce4:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001bce8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bcec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bcf0:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001bcf4:	eef0 6a43 	vmov.f32	s13, s6
9001bcf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bcfc:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001bd00:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bd04:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bd08:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bd0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bd10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bd14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bd18:	ee12 2a90 	vmov	r2, s5
9001bd1c:	eef0 2a47 	vmov.f32	s5, s14
9001bd20:	fb92 f3f3 	sdiv	r3, r2, r3
9001bd24:	ee13 2a10 	vmov	r2, s6
9001bd28:	9313      	str	r3, [sp, #76]	; 0x4c
9001bd2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bd2c:	eeb0 3a67 	vmov.f32	s6, s15
9001bd30:	fb92 f3f3 	sdiv	r3, r2, r3
9001bd34:	9314      	str	r3, [sp, #80]	; 0x50
9001bd36:	9b01      	ldr	r3, [sp, #4]
9001bd38:	9a05      	ldr	r2, [sp, #20]
9001bd3a:	3b01      	subs	r3, #1
9001bd3c:	9301      	str	r3, [sp, #4]
9001bd3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bd40:	bf08      	it	eq
9001bd42:	4613      	moveq	r3, r2
9001bd44:	e72c      	b.n	9001bba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001bd46:	140f      	asrs	r7, r1, #16
9001bd48:	d453      	bmi.n	9001bdf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001bd4a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001bd4e:	42bd      	cmp	r5, r7
9001bd50:	dd4f      	ble.n	9001bdf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001bd52:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001bd56:	d44c      	bmi.n	9001bdf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001bd58:	f8de 000c 	ldr.w	r0, [lr, #12]
9001bd5c:	4560      	cmp	r0, ip
9001bd5e:	dd48      	ble.n	9001bdf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001bd60:	9803      	ldr	r0, [sp, #12]
9001bd62:	b22d      	sxth	r5, r5
9001bd64:	fb0c 0505 	mla	r5, ip, r5, r0
9001bd68:	5de8      	ldrb	r0, [r5, r7]
9001bd6a:	9d04      	ldr	r5, [sp, #16]
9001bd6c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001bd70:	f06f 0501 	mvn.w	r5, #1
9001bd74:	fb05 fb08 	mul.w	fp, r5, r8
9001bd78:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001bd7c:	f834 500b 	ldrh.w	r5, [r4, fp]
9001bd80:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001bd84:	122f      	asrs	r7, r5, #8
9001bd86:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001bd8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bd8e:	00ed      	lsls	r5, r5, #3
9001bd90:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001bd94:	fb17 f706 	smulbb	r7, r7, r6
9001bd98:	b2ed      	uxtb	r5, r5
9001bd9a:	fb19 f906 	smulbb	r9, r9, r6
9001bd9e:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001bda2:	10c7      	asrs	r7, r0, #3
9001bda4:	fb15 f506 	smulbb	r5, r5, r6
9001bda8:	00c0      	lsls	r0, r0, #3
9001bdaa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001bdae:	fa1f fc8c 	uxth.w	ip, ip
9001bdb2:	b2c0      	uxtb	r0, r0
9001bdb4:	fb07 970a 	mla	r7, r7, sl, r9
9001bdb8:	fb00 500a 	mla	r0, r0, sl, r5
9001bdbc:	f10c 0501 	add.w	r5, ip, #1
9001bdc0:	b2bf      	uxth	r7, r7
9001bdc2:	b280      	uxth	r0, r0
9001bdc4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bdc8:	f107 0901 	add.w	r9, r7, #1
9001bdcc:	1c45      	adds	r5, r0, #1
9001bdce:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001bdd2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001bdd6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bdda:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001bdde:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bde2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001bde6:	ea45 0c0c 	orr.w	ip, r5, ip
9001bdea:	ea4c 0c09 	orr.w	ip, ip, r9
9001bdee:	f824 c00b 	strh.w	ip, [r4, fp]
9001bdf2:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bdf4:	f108 38ff 	add.w	r8, r8, #4294967295
9001bdf8:	4401      	add	r1, r0
9001bdfa:	9814      	ldr	r0, [sp, #80]	; 0x50
9001bdfc:	4402      	add	r2, r0
9001bdfe:	e75c      	b.n	9001bcba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001be00:	b007      	add	sp, #28
9001be02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001be06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001be06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001be0a:	b085      	sub	sp, #20
9001be0c:	4693      	mov	fp, r2
9001be0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001be12:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001be14:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001be16:	6870      	ldr	r0, [r6, #4]
9001be18:	9100      	str	r1, [sp, #0]
9001be1a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001be1e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001be22:	fb00 2404 	mla	r4, r0, r4, r2
9001be26:	6832      	ldr	r2, [r6, #0]
9001be28:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001be2c:	682a      	ldr	r2, [r5, #0]
9001be2e:	9201      	str	r2, [sp, #4]
9001be30:	686a      	ldr	r2, [r5, #4]
9001be32:	3204      	adds	r2, #4
9001be34:	9202      	str	r2, [sp, #8]
9001be36:	9a00      	ldr	r2, [sp, #0]
9001be38:	2a00      	cmp	r2, #0
9001be3a:	dc03      	bgt.n	9001be44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001be3c:	f1bb 0f00 	cmp.w	fp, #0
9001be40:	f340 80a0 	ble.w	9001bf84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001be44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001be46:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001be4a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001be4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001be50:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001be54:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001be58:	2b00      	cmp	r3, #0
9001be5a:	dd0c      	ble.n	9001be76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001be5c:	1406      	asrs	r6, r0, #16
9001be5e:	d405      	bmi.n	9001be6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001be60:	454e      	cmp	r6, r9
9001be62:	da03      	bge.n	9001be6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001be64:	1416      	asrs	r6, r2, #16
9001be66:	d401      	bmi.n	9001be6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001be68:	4546      	cmp	r6, r8
9001be6a:	db05      	blt.n	9001be78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001be6c:	4470      	add	r0, lr
9001be6e:	4462      	add	r2, ip
9001be70:	3b01      	subs	r3, #1
9001be72:	3402      	adds	r4, #2
9001be74:	e7f0      	b.n	9001be58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001be76:	d00f      	beq.n	9001be98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001be78:	1e5e      	subs	r6, r3, #1
9001be7a:	fb0e 0706 	mla	r7, lr, r6, r0
9001be7e:	143f      	asrs	r7, r7, #16
9001be80:	d541      	bpl.n	9001bf06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001be82:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001be86:	4698      	mov	r8, r3
9001be88:	9603      	str	r6, [sp, #12]
9001be8a:	f1b8 0f00 	cmp.w	r8, #0
9001be8e:	dc59      	bgt.n	9001bf44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001be90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001be94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001be98:	9b00      	ldr	r3, [sp, #0]
9001be9a:	2b00      	cmp	r3, #0
9001be9c:	dd72      	ble.n	9001bf84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001be9e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bea2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bea4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bea8:	eeb0 6a62 	vmov.f32	s12, s5
9001beac:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001beb0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001beb4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001beb8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001bebc:	eeb0 6a43 	vmov.f32	s12, s6
9001bec0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bec4:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001bec8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001becc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bed0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bed4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bed8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bedc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bee0:	ee12 2a90 	vmov	r2, s5
9001bee4:	eef0 2a47 	vmov.f32	s5, s14
9001bee8:	fb92 fef3 	sdiv	lr, r2, r3
9001beec:	ee13 2a10 	vmov	r2, s6
9001bef0:	eeb0 3a67 	vmov.f32	s6, s15
9001bef4:	fb92 fcf3 	sdiv	ip, r2, r3
9001bef8:	9b00      	ldr	r3, [sp, #0]
9001befa:	3b01      	subs	r3, #1
9001befc:	9300      	str	r3, [sp, #0]
9001befe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bf00:	bf08      	it	eq
9001bf02:	465b      	moveq	r3, fp
9001bf04:	e797      	b.n	9001be36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001bf06:	454f      	cmp	r7, r9
9001bf08:	dabb      	bge.n	9001be82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001bf0a:	fb0c 2606 	mla	r6, ip, r6, r2
9001bf0e:	1436      	asrs	r6, r6, #16
9001bf10:	d4b7      	bmi.n	9001be82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001bf12:	4546      	cmp	r6, r8
9001bf14:	dab5      	bge.n	9001be82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001bf16:	461e      	mov	r6, r3
9001bf18:	46a0      	mov	r8, r4
9001bf1a:	2e00      	cmp	r6, #0
9001bf1c:	ddb8      	ble.n	9001be90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001bf1e:	1417      	asrs	r7, r2, #16
9001bf20:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001bf24:	9901      	ldr	r1, [sp, #4]
9001bf26:	ea4f 4920 	mov.w	r9, r0, asr #16
9001bf2a:	4462      	add	r2, ip
9001bf2c:	4470      	add	r0, lr
9001bf2e:	fb0a 1707 	mla	r7, sl, r7, r1
9001bf32:	9902      	ldr	r1, [sp, #8]
9001bf34:	3e01      	subs	r6, #1
9001bf36:	f817 7009 	ldrb.w	r7, [r7, r9]
9001bf3a:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001bf3e:	f828 7b02 	strh.w	r7, [r8], #2
9001bf42:	e7ea      	b.n	9001bf1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001bf44:	ea5f 4920 	movs.w	r9, r0, asr #16
9001bf48:	d417      	bmi.n	9001bf7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bf4a:	68ae      	ldr	r6, [r5, #8]
9001bf4c:	454e      	cmp	r6, r9
9001bf4e:	dd14      	ble.n	9001bf7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bf50:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001bf54:	d411      	bmi.n	9001bf7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bf56:	68ef      	ldr	r7, [r5, #12]
9001bf58:	4557      	cmp	r7, sl
9001bf5a:	dd0e      	ble.n	9001bf7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bf5c:	9f01      	ldr	r7, [sp, #4]
9001bf5e:	b236      	sxth	r6, r6
9001bf60:	f06f 0101 	mvn.w	r1, #1
9001bf64:	fb0a 7606 	mla	r6, sl, r6, r7
9001bf68:	9f02      	ldr	r7, [sp, #8]
9001bf6a:	f816 6009 	ldrb.w	r6, [r6, r9]
9001bf6e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001bf72:	fb01 f608 	mul.w	r6, r1, r8
9001bf76:	9903      	ldr	r1, [sp, #12]
9001bf78:	538f      	strh	r7, [r1, r6]
9001bf7a:	4470      	add	r0, lr
9001bf7c:	4462      	add	r2, ip
9001bf7e:	f108 38ff 	add.w	r8, r8, #4294967295
9001bf82:	e782      	b.n	9001be8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001bf84:	b005      	add	sp, #20
9001bf86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bf8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bf8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bf8e:	b087      	sub	sp, #28
9001bf90:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001bf92:	9205      	str	r2, [sp, #20]
9001bf94:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001bf98:	9102      	str	r1, [sp, #8]
9001bf9a:	9203      	str	r2, [sp, #12]
9001bf9c:	6861      	ldr	r1, [r4, #4]
9001bf9e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001bfa2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001bfa6:	fb01 2000 	mla	r0, r1, r0, r2
9001bfaa:	6822      	ldr	r2, [r4, #0]
9001bfac:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001bfb0:	9200      	str	r2, [sp, #0]
9001bfb2:	f8dc 2000 	ldr.w	r2, [ip]
9001bfb6:	9204      	str	r2, [sp, #16]
9001bfb8:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001bfbc:	3204      	adds	r2, #4
9001bfbe:	9201      	str	r2, [sp, #4]
9001bfc0:	9a03      	ldr	r2, [sp, #12]
9001bfc2:	43d5      	mvns	r5, r2
9001bfc4:	b2ed      	uxtb	r5, r5
9001bfc6:	9a02      	ldr	r2, [sp, #8]
9001bfc8:	2a00      	cmp	r2, #0
9001bfca:	dc03      	bgt.n	9001bfd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001bfcc:	9a05      	ldr	r2, [sp, #20]
9001bfce:	2a00      	cmp	r2, #0
9001bfd0:	f340 812c 	ble.w	9001c22c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001bfd4:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001bfd6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001bfda:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001bfde:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001bfe0:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001bfe4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001bfe8:	2b00      	cmp	r3, #0
9001bfea:	dd10      	ble.n	9001c00e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001bfec:	140c      	asrs	r4, r1, #16
9001bfee:	d405      	bmi.n	9001bffc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001bff0:	4574      	cmp	r4, lr
9001bff2:	da03      	bge.n	9001bffc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001bff4:	1414      	asrs	r4, r2, #16
9001bff6:	d401      	bmi.n	9001bffc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001bff8:	42bc      	cmp	r4, r7
9001bffa:	db09      	blt.n	9001c010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001bffc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001bffe:	3b01      	subs	r3, #1
9001c000:	9800      	ldr	r0, [sp, #0]
9001c002:	4421      	add	r1, r4
9001c004:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001c006:	3002      	adds	r0, #2
9001c008:	4422      	add	r2, r4
9001c00a:	9000      	str	r0, [sp, #0]
9001c00c:	e7ec      	b.n	9001bfe8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001c00e:	d071      	beq.n	9001c0f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001c010:	1e5c      	subs	r4, r3, #1
9001c012:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001c014:	fb06 1604 	mla	r6, r6, r4, r1
9001c018:	1436      	asrs	r6, r6, #16
9001c01a:	d45d      	bmi.n	9001c0d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c01c:	4576      	cmp	r6, lr
9001c01e:	da5b      	bge.n	9001c0d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c020:	9e14      	ldr	r6, [sp, #80]	; 0x50
9001c022:	fb06 2404 	mla	r4, r6, r4, r2
9001c026:	1424      	asrs	r4, r4, #16
9001c028:	d456      	bmi.n	9001c0d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c02a:	42bc      	cmp	r4, r7
9001c02c:	da54      	bge.n	9001c0d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c02e:	4698      	mov	r8, r3
9001c030:	f8dd 9000 	ldr.w	r9, [sp]
9001c034:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001c038:	f1b8 0f00 	cmp.w	r8, #0
9001c03c:	dd54      	ble.n	9001c0e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001c03e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001c042:	1414      	asrs	r4, r2, #16
9001c044:	9804      	ldr	r0, [sp, #16]
9001c046:	140e      	asrs	r6, r1, #16
9001c048:	f108 38ff 	add.w	r8, r8, #4294967295
9001c04c:	fb07 0404 	mla	r4, r7, r4, r0
9001c050:	9801      	ldr	r0, [sp, #4]
9001c052:	f814 e006 	ldrb.w	lr, [r4, r6]
9001c056:	f8b9 4000 	ldrh.w	r4, [r9]
9001c05a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c05e:	1227      	asrs	r7, r4, #8
9001c060:	eb00 0b0e 	add.w	fp, r0, lr
9001c064:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001c068:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c06c:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c06e:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001c072:	f89b b001 	ldrb.w	fp, [fp, #1]
9001c076:	4401      	add	r1, r0
9001c078:	fb16 f60a 	smulbb	r6, r6, sl
9001c07c:	9814      	ldr	r0, [sp, #80]	; 0x50
9001c07e:	fb1b fb0a 	smulbb	fp, fp, sl
9001c082:	fb07 6705 	mla	r7, r7, r5, r6
9001c086:	10e6      	asrs	r6, r4, #3
9001c088:	00e4      	lsls	r4, r4, #3
9001c08a:	4402      	add	r2, r0
9001c08c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c090:	b2bf      	uxth	r7, r7
9001c092:	b2e4      	uxtb	r4, r4
9001c094:	fb06 b605 	mla	r6, r6, r5, fp
9001c098:	fb14 f405 	smulbb	r4, r4, r5
9001c09c:	b2b6      	uxth	r6, r6
9001c09e:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001c0a2:	1c7c      	adds	r4, r7, #1
9001c0a4:	f106 0b01 	add.w	fp, r6, #1
9001c0a8:	fa1f fe8e 	uxth.w	lr, lr
9001c0ac:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001c0b0:	f10e 0401 	add.w	r4, lr, #1
9001c0b4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001c0b8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c0bc:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001c0c0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001c0c4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001c0c8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001c0cc:	4327      	orrs	r7, r4
9001c0ce:	ea47 070b 	orr.w	r7, r7, fp
9001c0d2:	f829 7b02 	strh.w	r7, [r9], #2
9001c0d6:	e7af      	b.n	9001c038 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001c0d8:	f04f 0e00 	mov.w	lr, #0
9001c0dc:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001c0e0:	eb03 040e 	add.w	r4, r3, lr
9001c0e4:	2c00      	cmp	r4, #0
9001c0e6:	dc43      	bgt.n	9001c170 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001c0e8:	9a00      	ldr	r2, [sp, #0]
9001c0ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c0ee:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001c0f2:	9300      	str	r3, [sp, #0]
9001c0f4:	9b02      	ldr	r3, [sp, #8]
9001c0f6:	2b00      	cmp	r3, #0
9001c0f8:	f340 8098 	ble.w	9001c22c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c0fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001c100:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c102:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c106:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c10a:	eef0 6a62 	vmov.f32	s13, s5
9001c10e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001c112:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c116:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c11a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001c11e:	eef0 6a43 	vmov.f32	s13, s6
9001c122:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c126:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001c12a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c12e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c132:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c136:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c13a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c13e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c142:	ee12 2a90 	vmov	r2, s5
9001c146:	eef0 2a47 	vmov.f32	s5, s14
9001c14a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c14e:	ee13 2a10 	vmov	r2, s6
9001c152:	9313      	str	r3, [sp, #76]	; 0x4c
9001c154:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c156:	eeb0 3a67 	vmov.f32	s6, s15
9001c15a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c15e:	9314      	str	r3, [sp, #80]	; 0x50
9001c160:	9b02      	ldr	r3, [sp, #8]
9001c162:	9a05      	ldr	r2, [sp, #20]
9001c164:	3b01      	subs	r3, #1
9001c166:	9302      	str	r3, [sp, #8]
9001c168:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c16a:	bf08      	it	eq
9001c16c:	4613      	moveq	r3, r2
9001c16e:	e72a      	b.n	9001bfc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c170:	140f      	asrs	r7, r1, #16
9001c172:	d454      	bmi.n	9001c21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c174:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001c178:	42be      	cmp	r6, r7
9001c17a:	dd50      	ble.n	9001c21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c17c:	ea5f 4822 	movs.w	r8, r2, asr #16
9001c180:	d44d      	bmi.n	9001c21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c182:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001c186:	4544      	cmp	r4, r8
9001c188:	dd49      	ble.n	9001c21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c18a:	9c04      	ldr	r4, [sp, #16]
9001c18c:	b236      	sxth	r6, r6
9001c18e:	f06f 0001 	mvn.w	r0, #1
9001c192:	fb08 4606 	mla	r6, r8, r6, r4
9001c196:	9c01      	ldr	r4, [sp, #4]
9001c198:	fb00 fa0e 	mul.w	sl, r0, lr
9001c19c:	9800      	ldr	r0, [sp, #0]
9001c19e:	f816 8007 	ldrb.w	r8, [r6, r7]
9001c1a2:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001c1a6:	eb04 0b08 	add.w	fp, r4, r8
9001c1aa:	f830 400a 	ldrh.w	r4, [r0, sl]
9001c1ae:	9801      	ldr	r0, [sp, #4]
9001c1b0:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001c1b4:	1227      	asrs	r7, r4, #8
9001c1b6:	f89b b001 	ldrb.w	fp, [fp, #1]
9001c1ba:	fb16 f609 	smulbb	r6, r6, r9
9001c1be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c1c2:	f810 8008 	ldrb.w	r8, [r0, r8]
9001c1c6:	fb1b fb09 	smulbb	fp, fp, r9
9001c1ca:	fb07 6705 	mla	r7, r7, r5, r6
9001c1ce:	10e6      	asrs	r6, r4, #3
9001c1d0:	00e4      	lsls	r4, r4, #3
9001c1d2:	9800      	ldr	r0, [sp, #0]
9001c1d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c1d8:	b2bf      	uxth	r7, r7
9001c1da:	b2e4      	uxtb	r4, r4
9001c1dc:	fb06 b605 	mla	r6, r6, r5, fp
9001c1e0:	fb14 f405 	smulbb	r4, r4, r5
9001c1e4:	b2b6      	uxth	r6, r6
9001c1e6:	fb08 4809 	mla	r8, r8, r9, r4
9001c1ea:	1c7c      	adds	r4, r7, #1
9001c1ec:	f106 0b01 	add.w	fp, r6, #1
9001c1f0:	fa1f f888 	uxth.w	r8, r8
9001c1f4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001c1f8:	f108 0401 	add.w	r4, r8, #1
9001c1fc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001c200:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c204:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001c208:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001c20c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001c210:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001c214:	4327      	orrs	r7, r4
9001c216:	ea47 070b 	orr.w	r7, r7, fp
9001c21a:	f820 700a 	strh.w	r7, [r0, sl]
9001c21e:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c220:	f10e 3eff 	add.w	lr, lr, #4294967295
9001c224:	4401      	add	r1, r0
9001c226:	9814      	ldr	r0, [sp, #80]	; 0x50
9001c228:	4402      	add	r2, r0
9001c22a:	e759      	b.n	9001c0e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001c22c:	b007      	add	sp, #28
9001c22e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001c234 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c238:	b085      	sub	sp, #20
9001c23a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c23e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001c240:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001c242:	9203      	str	r2, [sp, #12]
9001c244:	6870      	ldr	r0, [r6, #4]
9001c246:	686f      	ldr	r7, [r5, #4]
9001c248:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
9001c24c:	3704      	adds	r7, #4
9001c24e:	9101      	str	r1, [sp, #4]
9001c250:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001c254:	fb00 2404 	mla	r4, r0, r4, r2
9001c258:	6832      	ldr	r2, [r6, #0]
9001c25a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c25e:	682a      	ldr	r2, [r5, #0]
9001c260:	9202      	str	r2, [sp, #8]
9001c262:	9a01      	ldr	r2, [sp, #4]
9001c264:	2a00      	cmp	r2, #0
9001c266:	dc03      	bgt.n	9001c270 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c268:	9a03      	ldr	r2, [sp, #12]
9001c26a:	2a00      	cmp	r2, #0
9001c26c:	f340 80cc 	ble.w	9001c408 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001c270:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001c272:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c276:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001c27a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001c27c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c280:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c284:	2b00      	cmp	r3, #0
9001c286:	dd0d      	ble.n	9001c2a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c288:	1406      	asrs	r6, r0, #16
9001c28a:	d405      	bmi.n	9001c298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c28c:	454e      	cmp	r6, r9
9001c28e:	da03      	bge.n	9001c298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c290:	1416      	asrs	r6, r2, #16
9001c292:	d401      	bmi.n	9001c298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c294:	4546      	cmp	r6, r8
9001c296:	db06      	blt.n	9001c2a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c298:	9e12      	ldr	r6, [sp, #72]	; 0x48
9001c29a:	4460      	add	r0, ip
9001c29c:	3b01      	subs	r3, #1
9001c29e:	3402      	adds	r4, #2
9001c2a0:	4432      	add	r2, r6
9001c2a2:	e7ef      	b.n	9001c284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001c2a4:	d00f      	beq.n	9001c2c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c2a6:	1e5e      	subs	r6, r3, #1
9001c2a8:	fb0c 0e06 	mla	lr, ip, r6, r0
9001c2ac:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001c2b0:	d543      	bpl.n	9001c33a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001c2b2:	4698      	mov	r8, r3
9001c2b4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001c2b8:	f1b8 0f00 	cmp.w	r8, #0
9001c2bc:	dc71      	bgt.n	9001c3a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001c2be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c2c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c2c6:	9b01      	ldr	r3, [sp, #4]
9001c2c8:	2b00      	cmp	r3, #0
9001c2ca:	f340 809d 	ble.w	9001c408 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001c2ce:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c2d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c2d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c2d8:	eeb0 6a62 	vmov.f32	s12, s5
9001c2dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c2e0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c2e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c2e8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001c2ec:	eeb0 6a43 	vmov.f32	s12, s6
9001c2f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c2f4:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001c2f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c2fc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c300:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c304:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c308:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c30c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c310:	ee12 2a90 	vmov	r2, s5
9001c314:	eef0 2a47 	vmov.f32	s5, s14
9001c318:	fb92 fcf3 	sdiv	ip, r2, r3
9001c31c:	ee13 2a10 	vmov	r2, s6
9001c320:	eeb0 3a67 	vmov.f32	s6, s15
9001c324:	fb92 f3f3 	sdiv	r3, r2, r3
9001c328:	9312      	str	r3, [sp, #72]	; 0x48
9001c32a:	9b01      	ldr	r3, [sp, #4]
9001c32c:	9a03      	ldr	r2, [sp, #12]
9001c32e:	3b01      	subs	r3, #1
9001c330:	9301      	str	r3, [sp, #4]
9001c332:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c334:	bf08      	it	eq
9001c336:	4613      	moveq	r3, r2
9001c338:	e793      	b.n	9001c262 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001c33a:	45ce      	cmp	lr, r9
9001c33c:	dab9      	bge.n	9001c2b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c33e:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c340:	fb01 2606 	mla	r6, r1, r6, r2
9001c344:	1436      	asrs	r6, r6, #16
9001c346:	d4b4      	bmi.n	9001c2b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c348:	4546      	cmp	r6, r8
9001c34a:	dab2      	bge.n	9001c2b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c34c:	4698      	mov	r8, r3
9001c34e:	46a2      	mov	sl, r4
9001c350:	f1b8 0f00 	cmp.w	r8, #0
9001c354:	ddb3      	ble.n	9001c2be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001c356:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c35a:	1416      	asrs	r6, r2, #16
9001c35c:	9902      	ldr	r1, [sp, #8]
9001c35e:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001c362:	f108 38ff 	add.w	r8, r8, #4294967295
9001c366:	4460      	add	r0, ip
9001c368:	fb09 1606 	mla	r6, r9, r6, r1
9001c36c:	4928      	ldr	r1, [pc, #160]	; (9001c410 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001c36e:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001c372:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c376:	eb07 0b0e 	add.w	fp, r7, lr
9001c37a:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001c37e:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001c382:	00f6      	lsls	r6, r6, #3
9001c384:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001c388:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c38a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c38e:	440a      	add	r2, r1
9001c390:	ea49 0606 	orr.w	r6, r9, r6
9001c394:	f817 900e 	ldrb.w	r9, [r7, lr]
9001c398:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001c39c:	f82a 6b02 	strh.w	r6, [sl], #2
9001c3a0:	e7d6      	b.n	9001c350 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c3a2:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c3a6:	d429      	bmi.n	9001c3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c3a8:	68ae      	ldr	r6, [r5, #8]
9001c3aa:	454e      	cmp	r6, r9
9001c3ac:	dd26      	ble.n	9001c3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c3ae:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001c3b2:	d423      	bmi.n	9001c3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c3b4:	68e9      	ldr	r1, [r5, #12]
9001c3b6:	4559      	cmp	r1, fp
9001c3b8:	dd20      	ble.n	9001c3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c3ba:	fa0f fe86 	sxth.w	lr, r6
9001c3be:	9902      	ldr	r1, [sp, #8]
9001c3c0:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001c3c4:	f06f 0101 	mvn.w	r1, #1
9001c3c8:	f81e e009 	ldrb.w	lr, [lr, r9]
9001c3cc:	fb01 f908 	mul.w	r9, r1, r8
9001c3d0:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
9001c3d4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c3d8:	eb07 060e 	add.w	r6, r7, lr
9001c3dc:	f896 b002 	ldrb.w	fp, [r6, #2]
9001c3e0:	7876      	ldrb	r6, [r6, #1]
9001c3e2:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001c3e6:	00f6      	lsls	r6, r6, #3
9001c3e8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c3ec:	ea4b 0606 	orr.w	r6, fp, r6
9001c3f0:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001c3f4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001c3f8:	f82a 6009 	strh.w	r6, [sl, r9]
9001c3fc:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c3fe:	4460      	add	r0, ip
9001c400:	f108 38ff 	add.w	r8, r8, #4294967295
9001c404:	440a      	add	r2, r1
9001c406:	e757      	b.n	9001c2b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c408:	b005      	add	sp, #20
9001c40a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c40e:	bf00      	nop
9001c410:	fffff800 	.word	0xfffff800

9001c414 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c418:	b087      	sub	sp, #28
9001c41a:	468b      	mov	fp, r1
9001c41c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c420:	9815      	ldr	r0, [sp, #84]	; 0x54
9001c422:	9204      	str	r2, [sp, #16]
9001c424:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c428:	6841      	ldr	r1, [r0, #4]
9001c42a:	9205      	str	r2, [sp, #20]
9001c42c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001c430:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001c434:	fb01 2404 	mla	r4, r1, r4, r2
9001c438:	6802      	ldr	r2, [r0, #0]
9001c43a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c43e:	f8dc 2000 	ldr.w	r2, [ip]
9001c442:	9201      	str	r2, [sp, #4]
9001c444:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001c448:	3204      	adds	r2, #4
9001c44a:	9202      	str	r2, [sp, #8]
9001c44c:	f1bb 0f00 	cmp.w	fp, #0
9001c450:	dc03      	bgt.n	9001c45a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001c452:	9a04      	ldr	r2, [sp, #16]
9001c454:	2a00      	cmp	r2, #0
9001c456:	f340 8138 	ble.w	9001c6ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001c45a:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001c45c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001c460:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001c464:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c466:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001c46a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c46e:	2b00      	cmp	r3, #0
9001c470:	dd0e      	ble.n	9001c490 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c472:	1402      	asrs	r2, r0, #16
9001c474:	d405      	bmi.n	9001c482 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c476:	42ba      	cmp	r2, r7
9001c478:	da03      	bge.n	9001c482 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c47a:	140a      	asrs	r2, r1, #16
9001c47c:	d401      	bmi.n	9001c482 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c47e:	42b2      	cmp	r2, r6
9001c480:	db07      	blt.n	9001c492 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c482:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c484:	3b01      	subs	r3, #1
9001c486:	3402      	adds	r4, #2
9001c488:	4410      	add	r0, r2
9001c48a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c48c:	4411      	add	r1, r2
9001c48e:	e7ee      	b.n	9001c46e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001c490:	d019      	beq.n	9001c4c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001c492:	1e5a      	subs	r2, r3, #1
9001c494:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001c496:	fb05 0502 	mla	r5, r5, r2, r0
9001c49a:	142d      	asrs	r5, r5, #16
9001c49c:	d409      	bmi.n	9001c4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c49e:	42bd      	cmp	r5, r7
9001c4a0:	da07      	bge.n	9001c4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c4a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001c4a4:	fb05 1202 	mla	r2, r5, r2, r1
9001c4a8:	1412      	asrs	r2, r2, #16
9001c4aa:	d402      	bmi.n	9001c4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c4ac:	42b2      	cmp	r2, r6
9001c4ae:	f2c0 80ac 	blt.w	9001c60a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001c4b2:	f04f 0e00 	mov.w	lr, #0
9001c4b6:	eb03 020e 	add.w	r2, r3, lr
9001c4ba:	2a00      	cmp	r2, #0
9001c4bc:	dc3e      	bgt.n	9001c53c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c4be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c4c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c4c6:	f1bb 0f00 	cmp.w	fp, #0
9001c4ca:	f340 80fe 	ble.w	9001c6ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001c4ce:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c4d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c4d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c4d8:	f1bb 0b01 	subs.w	fp, fp, #1
9001c4dc:	eeb0 6a62 	vmov.f32	s12, s5
9001c4e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c4e4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c4e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c4ec:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001c4f0:	eeb0 6a43 	vmov.f32	s12, s6
9001c4f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c4f8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001c4fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c500:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c504:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c508:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c50c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c510:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c514:	ee12 2a90 	vmov	r2, s5
9001c518:	eef0 2a47 	vmov.f32	s5, s14
9001c51c:	fb92 f3f3 	sdiv	r3, r2, r3
9001c520:	ee13 2a10 	vmov	r2, s6
9001c524:	9313      	str	r3, [sp, #76]	; 0x4c
9001c526:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c528:	eeb0 3a67 	vmov.f32	s6, s15
9001c52c:	fb92 f3f3 	sdiv	r3, r2, r3
9001c530:	9a04      	ldr	r2, [sp, #16]
9001c532:	9314      	str	r3, [sp, #80]	; 0x50
9001c534:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c536:	bf08      	it	eq
9001c538:	4613      	moveq	r3, r2
9001c53a:	e787      	b.n	9001c44c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001c53c:	1406      	asrs	r6, r0, #16
9001c53e:	d45d      	bmi.n	9001c5fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c540:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001c544:	42b5      	cmp	r5, r6
9001c546:	dd59      	ble.n	9001c5fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c548:	140f      	asrs	r7, r1, #16
9001c54a:	d457      	bmi.n	9001c5fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c54c:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001c550:	42ba      	cmp	r2, r7
9001c552:	dd53      	ble.n	9001c5fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c554:	9a01      	ldr	r2, [sp, #4]
9001c556:	b22d      	sxth	r5, r5
9001c558:	fb07 2505 	mla	r5, r7, r5, r2
9001c55c:	5daa      	ldrb	r2, [r5, r6]
9001c55e:	9d02      	ldr	r5, [sp, #8]
9001c560:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001c564:	0e2e      	lsrs	r6, r5, #24
9001c566:	d049      	beq.n	9001c5fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c568:	f06f 0201 	mvn.w	r2, #1
9001c56c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c570:	fb02 f20e 	mul.w	r2, r2, lr
9001c574:	f834 8002 	ldrh.w	r8, [r4, r2]
9001c578:	9203      	str	r2, [sp, #12]
9001c57a:	9a05      	ldr	r2, [sp, #20]
9001c57c:	ea4f 2728 	mov.w	r7, r8, asr #8
9001c580:	4356      	muls	r6, r2
9001c582:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c586:	1c72      	adds	r2, r6, #1
9001c588:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001c58c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c590:	b2ed      	uxtb	r5, r5
9001c592:	1212      	asrs	r2, r2, #8
9001c594:	fa1f f982 	uxth.w	r9, r2
9001c598:	43d2      	mvns	r2, r2
9001c59a:	fb16 f609 	smulbb	r6, r6, r9
9001c59e:	b2d2      	uxtb	r2, r2
9001c5a0:	fb15 f509 	smulbb	r5, r5, r9
9001c5a4:	fb07 6702 	mla	r7, r7, r2, r6
9001c5a8:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001c5ac:	fb1a fa09 	smulbb	sl, sl, r9
9001c5b0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c5b4:	b2bf      	uxth	r7, r7
9001c5b6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c5ba:	fa5f f888 	uxtb.w	r8, r8
9001c5be:	fb06 a602 	mla	r6, r6, r2, sl
9001c5c2:	fb08 5502 	mla	r5, r8, r2, r5
9001c5c6:	1c7a      	adds	r2, r7, #1
9001c5c8:	b2b6      	uxth	r6, r6
9001c5ca:	b2ad      	uxth	r5, r5
9001c5cc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c5d0:	9a03      	ldr	r2, [sp, #12]
9001c5d2:	f105 0a01 	add.w	sl, r5, #1
9001c5d6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c5da:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c5de:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c5e2:	ea4a 0707 	orr.w	r7, sl, r7
9001c5e6:	f106 0a01 	add.w	sl, r6, #1
9001c5ea:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c5ee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c5f2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c5f6:	ea47 070a 	orr.w	r7, r7, sl
9001c5fa:	52a7      	strh	r7, [r4, r2]
9001c5fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c5fe:	f10e 3eff 	add.w	lr, lr, #4294967295
9001c602:	4410      	add	r0, r2
9001c604:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c606:	4411      	add	r1, r2
9001c608:	e755      	b.n	9001c4b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c60a:	f04f 0800 	mov.w	r8, #0
9001c60e:	eba3 0208 	sub.w	r2, r3, r8
9001c612:	2a00      	cmp	r2, #0
9001c614:	f77f af53 	ble.w	9001c4be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001c618:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001c61c:	140a      	asrs	r2, r1, #16
9001c61e:	9f01      	ldr	r7, [sp, #4]
9001c620:	1405      	asrs	r5, r0, #16
9001c622:	fb06 7202 	mla	r2, r6, r2, r7
9001c626:	5d52      	ldrb	r2, [r2, r5]
9001c628:	9d02      	ldr	r5, [sp, #8]
9001c62a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001c62e:	0e2e      	lsrs	r6, r5, #24
9001c630:	d044      	beq.n	9001c6bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001c632:	9a05      	ldr	r2, [sp, #20]
9001c634:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c638:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001c63c:	4356      	muls	r6, r2
9001c63e:	ea4f 272e 	mov.w	r7, lr, asr #8
9001c642:	1c72      	adds	r2, r6, #1
9001c644:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c648:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001c64c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c650:	b2ed      	uxtb	r5, r5
9001c652:	1212      	asrs	r2, r2, #8
9001c654:	fa1f f982 	uxth.w	r9, r2
9001c658:	43d2      	mvns	r2, r2
9001c65a:	fb16 f609 	smulbb	r6, r6, r9
9001c65e:	b2d2      	uxtb	r2, r2
9001c660:	fb15 f509 	smulbb	r5, r5, r9
9001c664:	fb07 6702 	mla	r7, r7, r2, r6
9001c668:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001c66c:	fb1a fa09 	smulbb	sl, sl, r9
9001c670:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c674:	b2bf      	uxth	r7, r7
9001c676:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c67a:	fa5f fe8e 	uxtb.w	lr, lr
9001c67e:	fb06 a602 	mla	r6, r6, r2, sl
9001c682:	fb0e 5502 	mla	r5, lr, r2, r5
9001c686:	1c7a      	adds	r2, r7, #1
9001c688:	b2b6      	uxth	r6, r6
9001c68a:	b2ad      	uxth	r5, r5
9001c68c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c690:	f105 0a01 	add.w	sl, r5, #1
9001c694:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c698:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c69c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c6a0:	ea4a 0707 	orr.w	r7, sl, r7
9001c6a4:	f106 0a01 	add.w	sl, r6, #1
9001c6a8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c6ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c6b0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c6b4:	ea47 070a 	orr.w	r7, r7, sl
9001c6b8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001c6bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c6be:	f108 0801 	add.w	r8, r8, #1
9001c6c2:	4410      	add	r0, r2
9001c6c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c6c6:	4411      	add	r1, r2
9001c6c8:	e7a1      	b.n	9001c60e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001c6ca:	b007      	add	sp, #28
9001c6cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c6d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c6d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c6d4:	b085      	sub	sp, #20
9001c6d6:	468b      	mov	fp, r1
9001c6d8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c6dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c6de:	9203      	str	r2, [sp, #12]
9001c6e0:	6841      	ldr	r1, [r0, #4]
9001c6e2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001c6e6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001c6ea:	fb01 2404 	mla	r4, r1, r4, r2
9001c6ee:	6802      	ldr	r2, [r0, #0]
9001c6f0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c6f4:	f8de 2000 	ldr.w	r2, [lr]
9001c6f8:	9200      	str	r2, [sp, #0]
9001c6fa:	f8de 2004 	ldr.w	r2, [lr, #4]
9001c6fe:	3204      	adds	r2, #4
9001c700:	9201      	str	r2, [sp, #4]
9001c702:	f1bb 0f00 	cmp.w	fp, #0
9001c706:	dc03      	bgt.n	9001c710 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001c708:	9a03      	ldr	r2, [sp, #12]
9001c70a:	2a00      	cmp	r2, #0
9001c70c:	f340 8153 	ble.w	9001c9b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001c710:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001c712:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c716:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c71a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001c71c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001c720:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c724:	2b00      	cmp	r3, #0
9001c726:	dd0e      	ble.n	9001c746 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c728:	1408      	asrs	r0, r1, #16
9001c72a:	d405      	bmi.n	9001c738 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c72c:	42b8      	cmp	r0, r7
9001c72e:	da03      	bge.n	9001c738 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c730:	1410      	asrs	r0, r2, #16
9001c732:	d401      	bmi.n	9001c738 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c734:	42b0      	cmp	r0, r6
9001c736:	db07      	blt.n	9001c748 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001c738:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c73a:	3b01      	subs	r3, #1
9001c73c:	3402      	adds	r4, #2
9001c73e:	4401      	add	r1, r0
9001c740:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c742:	4402      	add	r2, r0
9001c744:	e7ee      	b.n	9001c724 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001c746:	d017      	beq.n	9001c778 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c748:	1e58      	subs	r0, r3, #1
9001c74a:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001c74c:	fb05 1500 	mla	r5, r5, r0, r1
9001c750:	142d      	asrs	r5, r5, #16
9001c752:	d409      	bmi.n	9001c768 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c754:	42bd      	cmp	r5, r7
9001c756:	da07      	bge.n	9001c768 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c758:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001c75a:	fb05 2000 	mla	r0, r5, r0, r2
9001c75e:	1400      	asrs	r0, r0, #16
9001c760:	d402      	bmi.n	9001c768 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c762:	42b0      	cmp	r0, r6
9001c764:	f2c0 80bc 	blt.w	9001c8e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001c768:	2600      	movs	r6, #0
9001c76a:	1998      	adds	r0, r3, r6
9001c76c:	2800      	cmp	r0, #0
9001c76e:	dc3e      	bgt.n	9001c7ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001c770:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c774:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c778:	f1bb 0f00 	cmp.w	fp, #0
9001c77c:	f340 811b 	ble.w	9001c9b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001c780:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c784:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c786:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c78a:	f1bb 0b01 	subs.w	fp, fp, #1
9001c78e:	eeb0 6a62 	vmov.f32	s12, s5
9001c792:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c796:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c79a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c79e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001c7a2:	eeb0 6a43 	vmov.f32	s12, s6
9001c7a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c7aa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001c7ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c7b2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c7b6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c7ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c7be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c7c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c7c6:	ee12 2a90 	vmov	r2, s5
9001c7ca:	eef0 2a47 	vmov.f32	s5, s14
9001c7ce:	fb92 f3f3 	sdiv	r3, r2, r3
9001c7d2:	ee13 2a10 	vmov	r2, s6
9001c7d6:	9311      	str	r3, [sp, #68]	; 0x44
9001c7d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c7da:	eeb0 3a67 	vmov.f32	s6, s15
9001c7de:	fb92 f3f3 	sdiv	r3, r2, r3
9001c7e2:	9a03      	ldr	r2, [sp, #12]
9001c7e4:	9312      	str	r3, [sp, #72]	; 0x48
9001c7e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c7e8:	bf08      	it	eq
9001c7ea:	4613      	moveq	r3, r2
9001c7ec:	e789      	b.n	9001c702 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001c7ee:	140f      	asrs	r7, r1, #16
9001c7f0:	d426      	bmi.n	9001c840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c7f2:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c7f6:	42bd      	cmp	r5, r7
9001c7f8:	dd22      	ble.n	9001c840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c7fa:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c7fe:	d41f      	bmi.n	9001c840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c800:	f8de 000c 	ldr.w	r0, [lr, #12]
9001c804:	4560      	cmp	r0, ip
9001c806:	dd1b      	ble.n	9001c840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c808:	9800      	ldr	r0, [sp, #0]
9001c80a:	b22d      	sxth	r5, r5
9001c80c:	fb0c 0505 	mla	r5, ip, r5, r0
9001c810:	5de8      	ldrb	r0, [r5, r7]
9001c812:	9d01      	ldr	r5, [sp, #4]
9001c814:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001c818:	0e07      	lsrs	r7, r0, #24
9001c81a:	2fff      	cmp	r7, #255	; 0xff
9001c81c:	d116      	bne.n	9001c84c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c81e:	f06f 0501 	mvn.w	r5, #1
9001c822:	fb05 f706 	mul.w	r7, r5, r6
9001c826:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001c82a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001c82e:	0945      	lsrs	r5, r0, #5
9001c830:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001c834:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c838:	ea4c 0505 	orr.w	r5, ip, r5
9001c83c:	4305      	orrs	r5, r0
9001c83e:	53e5      	strh	r5, [r4, r7]
9001c840:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c842:	3e01      	subs	r6, #1
9001c844:	4401      	add	r1, r0
9001c846:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c848:	4402      	add	r2, r0
9001c84a:	e78e      	b.n	9001c76a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001c84c:	b2fd      	uxtb	r5, r7
9001c84e:	2f00      	cmp	r7, #0
9001c850:	d0f6      	beq.n	9001c840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c852:	f06f 0701 	mvn.w	r7, #1
9001c856:	fa1f f985 	uxth.w	r9, r5
9001c85a:	43ed      	mvns	r5, r5
9001c85c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001c860:	4377      	muls	r7, r6
9001c862:	fb1a fa09 	smulbb	sl, sl, r9
9001c866:	b2ed      	uxtb	r5, r5
9001c868:	f834 8007 	ldrh.w	r8, [r4, r7]
9001c86c:	9702      	str	r7, [sp, #8]
9001c86e:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001c872:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001c876:	fb17 f709 	smulbb	r7, r7, r9
9001c87a:	b2c0      	uxtb	r0, r0
9001c87c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c880:	fb10 f009 	smulbb	r0, r0, r9
9001c884:	fb0c 7c05 	mla	ip, ip, r5, r7
9001c888:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001c88c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c890:	fa1f fc8c 	uxth.w	ip, ip
9001c894:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001c898:	fa5f f888 	uxtb.w	r8, r8
9001c89c:	fb07 a705 	mla	r7, r7, r5, sl
9001c8a0:	fb08 0005 	mla	r0, r8, r5, r0
9001c8a4:	f10c 0501 	add.w	r5, ip, #1
9001c8a8:	b2bf      	uxth	r7, r7
9001c8aa:	b280      	uxth	r0, r0
9001c8ac:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c8b0:	f100 0a01 	add.w	sl, r0, #1
9001c8b4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001c8b8:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001c8bc:	9802      	ldr	r0, [sp, #8]
9001c8be:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c8c2:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c8c6:	f107 0a01 	add.w	sl, r7, #1
9001c8ca:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c8ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c8d2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c8d6:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c8da:	f824 c000 	strh.w	ip, [r4, r0]
9001c8de:	e7af      	b.n	9001c840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c8e0:	f04f 0800 	mov.w	r8, #0
9001c8e4:	eba3 0008 	sub.w	r0, r3, r8
9001c8e8:	2800      	cmp	r0, #0
9001c8ea:	f77f af41 	ble.w	9001c770 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c8ee:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001c8f2:	1410      	asrs	r0, r2, #16
9001c8f4:	9f00      	ldr	r7, [sp, #0]
9001c8f6:	140d      	asrs	r5, r1, #16
9001c8f8:	fb06 7000 	mla	r0, r6, r0, r7
9001c8fc:	5d40      	ldrb	r0, [r0, r5]
9001c8fe:	9d01      	ldr	r5, [sp, #4]
9001c900:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001c904:	0e2e      	lsrs	r6, r5, #24
9001c906:	2eff      	cmp	r6, #255	; 0xff
9001c908:	d112      	bne.n	9001c930 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001c90a:	482c      	ldr	r0, [pc, #176]	; (9001c9bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001c90c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001c910:	0968      	lsrs	r0, r5, #5
9001c912:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c916:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001c91a:	4330      	orrs	r0, r6
9001c91c:	4328      	orrs	r0, r5
9001c91e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001c922:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c924:	f108 0801 	add.w	r8, r8, #1
9001c928:	4401      	add	r1, r0
9001c92a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c92c:	4402      	add	r2, r0
9001c92e:	e7d9      	b.n	9001c8e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001c930:	b2f0      	uxtb	r0, r6
9001c932:	2e00      	cmp	r6, #0
9001c934:	d0f5      	beq.n	9001c922 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001c936:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001c93a:	fa1f f980 	uxth.w	r9, r0
9001c93e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c942:	43c0      	mvns	r0, r0
9001c944:	ea4f 272c 	mov.w	r7, ip, asr #8
9001c948:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c94c:	fb16 f609 	smulbb	r6, r6, r9
9001c950:	b2c0      	uxtb	r0, r0
9001c952:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c956:	b2ed      	uxtb	r5, r5
9001c958:	fb1a fa09 	smulbb	sl, sl, r9
9001c95c:	fb07 6700 	mla	r7, r7, r0, r6
9001c960:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001c964:	fb15 f509 	smulbb	r5, r5, r9
9001c968:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c96c:	b2bf      	uxth	r7, r7
9001c96e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c972:	fa5f fc8c 	uxtb.w	ip, ip
9001c976:	fb06 a600 	mla	r6, r6, r0, sl
9001c97a:	fb0c 5500 	mla	r5, ip, r0, r5
9001c97e:	1c78      	adds	r0, r7, #1
9001c980:	b2b6      	uxth	r6, r6
9001c982:	b2ad      	uxth	r5, r5
9001c984:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001c988:	f105 0a01 	add.w	sl, r5, #1
9001c98c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c990:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c994:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c998:	ea4a 0707 	orr.w	r7, sl, r7
9001c99c:	f106 0a01 	add.w	sl, r6, #1
9001c9a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c9a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c9a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c9ac:	ea47 070a 	orr.w	r7, r7, sl
9001c9b0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001c9b4:	e7b5      	b.n	9001c922 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001c9b6:	b005      	add	sp, #20
9001c9b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c9bc:	fffff800 	.word	0xfffff800

9001c9c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c9c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c9c4:	b087      	sub	sp, #28
9001c9c6:	468b      	mov	fp, r1
9001c9c8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c9cc:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001c9ce:	9204      	str	r2, [sp, #16]
9001c9d0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c9d4:	6861      	ldr	r1, [r4, #4]
9001c9d6:	9205      	str	r2, [sp, #20]
9001c9d8:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001c9dc:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001c9e0:	fb01 2000 	mla	r0, r1, r0, r2
9001c9e4:	6822      	ldr	r2, [r4, #0]
9001c9e6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001c9ea:	f8de 2000 	ldr.w	r2, [lr]
9001c9ee:	9201      	str	r2, [sp, #4]
9001c9f0:	f8de 2004 	ldr.w	r2, [lr, #4]
9001c9f4:	9202      	str	r2, [sp, #8]
9001c9f6:	f1bb 0f00 	cmp.w	fp, #0
9001c9fa:	dc03      	bgt.n	9001ca04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001c9fc:	9a04      	ldr	r2, [sp, #16]
9001c9fe:	2a00      	cmp	r2, #0
9001ca00:	f340 8142 	ble.w	9001cc88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001ca04:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001ca06:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001ca0a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001ca0e:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001ca10:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001ca14:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001ca18:	2b00      	cmp	r3, #0
9001ca1a:	dd0e      	ble.n	9001ca3a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001ca1c:	140c      	asrs	r4, r1, #16
9001ca1e:	d405      	bmi.n	9001ca2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001ca20:	42bc      	cmp	r4, r7
9001ca22:	da03      	bge.n	9001ca2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001ca24:	1414      	asrs	r4, r2, #16
9001ca26:	d401      	bmi.n	9001ca2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001ca28:	42b4      	cmp	r4, r6
9001ca2a:	db07      	blt.n	9001ca3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ca2c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001ca2e:	3b01      	subs	r3, #1
9001ca30:	3002      	adds	r0, #2
9001ca32:	4421      	add	r1, r4
9001ca34:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001ca36:	4422      	add	r2, r4
9001ca38:	e7ee      	b.n	9001ca18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001ca3a:	d019      	beq.n	9001ca70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001ca3c:	1e5c      	subs	r4, r3, #1
9001ca3e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001ca40:	fb05 1504 	mla	r5, r5, r4, r1
9001ca44:	142d      	asrs	r5, r5, #16
9001ca46:	d409      	bmi.n	9001ca5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001ca48:	42bd      	cmp	r5, r7
9001ca4a:	da07      	bge.n	9001ca5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001ca4c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001ca4e:	fb05 2404 	mla	r4, r5, r4, r2
9001ca52:	1424      	asrs	r4, r4, #16
9001ca54:	d402      	bmi.n	9001ca5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001ca56:	42b4      	cmp	r4, r6
9001ca58:	f2c0 80b1 	blt.w	9001cbbe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001ca5c:	f04f 0800 	mov.w	r8, #0
9001ca60:	eb03 0408 	add.w	r4, r3, r8
9001ca64:	2c00      	cmp	r4, #0
9001ca66:	dc3e      	bgt.n	9001cae6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001ca68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ca6c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ca70:	f1bb 0f00 	cmp.w	fp, #0
9001ca74:	f340 8108 	ble.w	9001cc88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001ca78:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ca7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ca7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ca82:	f1bb 0b01 	subs.w	fp, fp, #1
9001ca86:	eeb0 6a62 	vmov.f32	s12, s5
9001ca8a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ca8e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ca92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ca96:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001ca9a:	eeb0 6a43 	vmov.f32	s12, s6
9001ca9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001caa2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001caa6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001caaa:	ee61 7a27 	vmul.f32	s15, s2, s15
9001caae:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cab2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cab6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001caba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cabe:	ee12 2a90 	vmov	r2, s5
9001cac2:	eef0 2a47 	vmov.f32	s5, s14
9001cac6:	fb92 f3f3 	sdiv	r3, r2, r3
9001caca:	ee13 2a10 	vmov	r2, s6
9001cace:	9313      	str	r3, [sp, #76]	; 0x4c
9001cad0:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001cad2:	eeb0 3a67 	vmov.f32	s6, s15
9001cad6:	fb92 f3f3 	sdiv	r3, r2, r3
9001cada:	9a04      	ldr	r2, [sp, #16]
9001cadc:	9314      	str	r3, [sp, #80]	; 0x50
9001cade:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001cae0:	bf08      	it	eq
9001cae2:	4613      	moveq	r3, r2
9001cae4:	e787      	b.n	9001c9f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001cae6:	140e      	asrs	r6, r1, #16
9001cae8:	d462      	bmi.n	9001cbb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001caea:	f8de 5008 	ldr.w	r5, [lr, #8]
9001caee:	42b5      	cmp	r5, r6
9001caf0:	dd5e      	ble.n	9001cbb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001caf2:	1417      	asrs	r7, r2, #16
9001caf4:	d45c      	bmi.n	9001cbb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001caf6:	f8de 400c 	ldr.w	r4, [lr, #12]
9001cafa:	42bc      	cmp	r4, r7
9001cafc:	dd58      	ble.n	9001cbb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001cafe:	b22d      	sxth	r5, r5
9001cb00:	9c02      	ldr	r4, [sp, #8]
9001cb02:	fb07 6505 	mla	r5, r7, r5, r6
9001cb06:	5d66      	ldrb	r6, [r4, r5]
9001cb08:	2e00      	cmp	r6, #0
9001cb0a:	d051      	beq.n	9001cbb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001cb0c:	9c01      	ldr	r4, [sp, #4]
9001cb0e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001cb12:	f06f 0401 	mvn.w	r4, #1
9001cb16:	fb04 f408 	mul.w	r4, r4, r8
9001cb1a:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001cb1e:	5b05      	ldrh	r5, [r0, r4]
9001cb20:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cb24:	9403      	str	r4, [sp, #12]
9001cb26:	9c05      	ldr	r4, [sp, #20]
9001cb28:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001cb2c:	4366      	muls	r6, r4
9001cb2e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001cb32:	1c74      	adds	r4, r6, #1
9001cb34:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001cb38:	122e      	asrs	r6, r5, #8
9001cb3a:	1224      	asrs	r4, r4, #8
9001cb3c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001cb40:	00ed      	lsls	r5, r5, #3
9001cb42:	b2a7      	uxth	r7, r4
9001cb44:	43e4      	mvns	r4, r4
9001cb46:	b2ed      	uxtb	r5, r5
9001cb48:	b2e4      	uxtb	r4, r4
9001cb4a:	fb16 f604 	smulbb	r6, r6, r4
9001cb4e:	fb15 f504 	smulbb	r5, r5, r4
9001cb52:	fb0c 6c07 	mla	ip, ip, r7, r6
9001cb56:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001cb5a:	fb1a fa04 	smulbb	sl, sl, r4
9001cb5e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001cb62:	fa1f fc8c 	uxth.w	ip, ip
9001cb66:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001cb6a:	fa5f f989 	uxtb.w	r9, r9
9001cb6e:	fb06 a607 	mla	r6, r6, r7, sl
9001cb72:	f10c 0401 	add.w	r4, ip, #1
9001cb76:	fb09 5507 	mla	r5, r9, r7, r5
9001cb7a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001cb7e:	9c03      	ldr	r4, [sp, #12]
9001cb80:	b2ad      	uxth	r5, r5
9001cb82:	b2b6      	uxth	r6, r6
9001cb84:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001cb88:	f105 0a01 	add.w	sl, r5, #1
9001cb8c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cb90:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cb94:	ea4a 0c0c 	orr.w	ip, sl, ip
9001cb98:	f106 0a01 	add.w	sl, r6, #1
9001cb9c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cba0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cba4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001cba8:	ea4c 0c0a 	orr.w	ip, ip, sl
9001cbac:	f820 c004 	strh.w	ip, [r0, r4]
9001cbb0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001cbb2:	f108 38ff 	add.w	r8, r8, #4294967295
9001cbb6:	4421      	add	r1, r4
9001cbb8:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001cbba:	4422      	add	r2, r4
9001cbbc:	e750      	b.n	9001ca60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001cbbe:	f04f 0900 	mov.w	r9, #0
9001cbc2:	eba3 0409 	sub.w	r4, r3, r9
9001cbc6:	2c00      	cmp	r4, #0
9001cbc8:	f77f af4e 	ble.w	9001ca68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001cbcc:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001cbd0:	140d      	asrs	r5, r1, #16
9001cbd2:	1414      	asrs	r4, r2, #16
9001cbd4:	fb06 5404 	mla	r4, r6, r4, r5
9001cbd8:	9d02      	ldr	r5, [sp, #8]
9001cbda:	5d2e      	ldrb	r6, [r5, r4]
9001cbdc:	2e00      	cmp	r6, #0
9001cbde:	d04c      	beq.n	9001cc7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001cbe0:	9d01      	ldr	r5, [sp, #4]
9001cbe2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001cbe6:	9c05      	ldr	r4, [sp, #20]
9001cbe8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001cbec:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001cbf0:	4366      	muls	r6, r4
9001cbf2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001cbf6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cbfa:	1c74      	adds	r4, r6, #1
9001cbfc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001cc00:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001cc04:	122e      	asrs	r6, r5, #8
9001cc06:	1224      	asrs	r4, r4, #8
9001cc08:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001cc0c:	00ed      	lsls	r5, r5, #3
9001cc0e:	b2a7      	uxth	r7, r4
9001cc10:	43e4      	mvns	r4, r4
9001cc12:	b2ed      	uxtb	r5, r5
9001cc14:	b2e4      	uxtb	r4, r4
9001cc16:	fb16 f604 	smulbb	r6, r6, r4
9001cc1a:	fb15 f504 	smulbb	r5, r5, r4
9001cc1e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001cc22:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001cc26:	fb1a fa04 	smulbb	sl, sl, r4
9001cc2a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001cc2e:	fa1f fc8c 	uxth.w	ip, ip
9001cc32:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001cc36:	fa5f f888 	uxtb.w	r8, r8
9001cc3a:	fb06 a607 	mla	r6, r6, r7, sl
9001cc3e:	f10c 0401 	add.w	r4, ip, #1
9001cc42:	fb08 5507 	mla	r5, r8, r7, r5
9001cc46:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001cc4a:	b2ad      	uxth	r5, r5
9001cc4c:	b2b6      	uxth	r6, r6
9001cc4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001cc52:	f105 0a01 	add.w	sl, r5, #1
9001cc56:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cc5a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cc5e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001cc62:	f106 0a01 	add.w	sl, r6, #1
9001cc66:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cc6a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cc6e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001cc72:	ea4c 0c0a 	orr.w	ip, ip, sl
9001cc76:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001cc7a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001cc7c:	f109 0901 	add.w	r9, r9, #1
9001cc80:	4421      	add	r1, r4
9001cc82:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001cc84:	4422      	add	r2, r4
9001cc86:	e79c      	b.n	9001cbc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001cc88:	b007      	add	sp, #28
9001cc8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001cc8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cc8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cc92:	b085      	sub	sp, #20
9001cc94:	468b      	mov	fp, r1
9001cc96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001cc9a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001cc9c:	9203      	str	r2, [sp, #12]
9001cc9e:	6861      	ldr	r1, [r4, #4]
9001cca0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001cca4:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
9001cca8:	fb01 2000 	mla	r0, r1, r0, r2
9001ccac:	6822      	ldr	r2, [r4, #0]
9001ccae:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001ccb2:	f8d8 2000 	ldr.w	r2, [r8]
9001ccb6:	9200      	str	r2, [sp, #0]
9001ccb8:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001ccbc:	9201      	str	r2, [sp, #4]
9001ccbe:	f1bb 0f00 	cmp.w	fp, #0
9001ccc2:	dc03      	bgt.n	9001cccc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001ccc4:	9a03      	ldr	r2, [sp, #12]
9001ccc6:	2a00      	cmp	r2, #0
9001ccc8:	f340 8146 	ble.w	9001cf58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001cccc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ccce:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001ccd2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001ccd6:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001ccd8:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001ccdc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001cce0:	2b00      	cmp	r3, #0
9001cce2:	dd0e      	ble.n	9001cd02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001cce4:	140c      	asrs	r4, r1, #16
9001cce6:	d405      	bmi.n	9001ccf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001cce8:	42bc      	cmp	r4, r7
9001ccea:	da03      	bge.n	9001ccf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ccec:	1414      	asrs	r4, r2, #16
9001ccee:	d401      	bmi.n	9001ccf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ccf0:	42b4      	cmp	r4, r6
9001ccf2:	db07      	blt.n	9001cd04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ccf4:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001ccf6:	3b01      	subs	r3, #1
9001ccf8:	3002      	adds	r0, #2
9001ccfa:	4421      	add	r1, r4
9001ccfc:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001ccfe:	4422      	add	r2, r4
9001cd00:	e7ee      	b.n	9001cce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001cd02:	d017      	beq.n	9001cd34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001cd04:	1e5c      	subs	r4, r3, #1
9001cd06:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001cd08:	fb05 1504 	mla	r5, r5, r4, r1
9001cd0c:	142d      	asrs	r5, r5, #16
9001cd0e:	d409      	bmi.n	9001cd24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001cd10:	42bd      	cmp	r5, r7
9001cd12:	da07      	bge.n	9001cd24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001cd14:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001cd16:	fb05 2404 	mla	r4, r5, r4, r2
9001cd1a:	1424      	asrs	r4, r4, #16
9001cd1c:	d402      	bmi.n	9001cd24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001cd1e:	42b4      	cmp	r4, r6
9001cd20:	f2c0 80b3 	blt.w	9001ce8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001cd24:	2600      	movs	r6, #0
9001cd26:	199c      	adds	r4, r3, r6
9001cd28:	2c00      	cmp	r4, #0
9001cd2a:	dc3e      	bgt.n	9001cdaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001cd2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cd30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cd34:	f1bb 0f00 	cmp.w	fp, #0
9001cd38:	f340 810e 	ble.w	9001cf58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001cd3c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cd40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cd42:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cd46:	f1bb 0b01 	subs.w	fp, fp, #1
9001cd4a:	eeb0 6a62 	vmov.f32	s12, s5
9001cd4e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cd52:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cd56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cd5a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001cd5e:	eeb0 6a43 	vmov.f32	s12, s6
9001cd62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cd66:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001cd6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cd6e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cd72:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cd76:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cd7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cd7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cd82:	ee12 2a90 	vmov	r2, s5
9001cd86:	eef0 2a47 	vmov.f32	s5, s14
9001cd8a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cd8e:	ee13 2a10 	vmov	r2, s6
9001cd92:	9311      	str	r3, [sp, #68]	; 0x44
9001cd94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cd96:	eeb0 3a67 	vmov.f32	s6, s15
9001cd9a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cd9e:	9a03      	ldr	r2, [sp, #12]
9001cda0:	9312      	str	r3, [sp, #72]	; 0x48
9001cda2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cda4:	bf08      	it	eq
9001cda6:	4613      	moveq	r3, r2
9001cda8:	e789      	b.n	9001ccbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001cdaa:	140f      	asrs	r7, r1, #16
9001cdac:	d418      	bmi.n	9001cde0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cdae:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001cdb2:	42bd      	cmp	r5, r7
9001cdb4:	dd14      	ble.n	9001cde0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cdb6:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cdba:	d411      	bmi.n	9001cde0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cdbc:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001cdc0:	4564      	cmp	r4, ip
9001cdc2:	dd0d      	ble.n	9001cde0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cdc4:	b22d      	sxth	r5, r5
9001cdc6:	9c01      	ldr	r4, [sp, #4]
9001cdc8:	fb0c 7505 	mla	r5, ip, r5, r7
9001cdcc:	5d64      	ldrb	r4, [r4, r5]
9001cdce:	2cff      	cmp	r4, #255	; 0xff
9001cdd0:	d10c      	bne.n	9001cdec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001cdd2:	9c00      	ldr	r4, [sp, #0]
9001cdd4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001cdd8:	f06f 0401 	mvn.w	r4, #1
9001cddc:	4374      	muls	r4, r6
9001cdde:	5305      	strh	r5, [r0, r4]
9001cde0:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001cde2:	3e01      	subs	r6, #1
9001cde4:	4421      	add	r1, r4
9001cde6:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001cde8:	4422      	add	r2, r4
9001cdea:	e79c      	b.n	9001cd26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001cdec:	2c00      	cmp	r4, #0
9001cdee:	d0f7      	beq.n	9001cde0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cdf0:	9f00      	ldr	r7, [sp, #0]
9001cdf2:	fa1f fc84 	uxth.w	ip, r4
9001cdf6:	43e4      	mvns	r4, r4
9001cdf8:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001cdfc:	f06f 0501 	mvn.w	r5, #1
9001ce00:	b2e4      	uxtb	r4, r4
9001ce02:	4375      	muls	r5, r6
9001ce04:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001ce08:	9502      	str	r5, [sp, #8]
9001ce0a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001ce0e:	5b45      	ldrh	r5, [r0, r5]
9001ce10:	122f      	asrs	r7, r5, #8
9001ce12:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001ce16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001ce1a:	00ed      	lsls	r5, r5, #3
9001ce1c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001ce20:	fb17 f704 	smulbb	r7, r7, r4
9001ce24:	b2ed      	uxtb	r5, r5
9001ce26:	fb1a fa04 	smulbb	sl, sl, r4
9001ce2a:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001ce2e:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001ce32:	fb15 f504 	smulbb	r5, r5, r4
9001ce36:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001ce3a:	fa1f fe8e 	uxth.w	lr, lr
9001ce3e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001ce42:	fa5f f989 	uxtb.w	r9, r9
9001ce46:	fb07 a70c 	mla	r7, r7, ip, sl
9001ce4a:	f10e 0401 	add.w	r4, lr, #1
9001ce4e:	fb09 550c 	mla	r5, r9, ip, r5
9001ce52:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001ce56:	9c02      	ldr	r4, [sp, #8]
9001ce58:	b2ad      	uxth	r5, r5
9001ce5a:	b2bf      	uxth	r7, r7
9001ce5c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001ce60:	f105 0a01 	add.w	sl, r5, #1
9001ce64:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ce68:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ce6c:	ea4a 0e0e 	orr.w	lr, sl, lr
9001ce70:	f107 0a01 	add.w	sl, r7, #1
9001ce74:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001ce78:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ce7c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ce80:	ea4e 0e0a 	orr.w	lr, lr, sl
9001ce84:	f820 e004 	strh.w	lr, [r0, r4]
9001ce88:	e7aa      	b.n	9001cde0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001ce8a:	f04f 0900 	mov.w	r9, #0
9001ce8e:	eba3 0409 	sub.w	r4, r3, r9
9001ce92:	2c00      	cmp	r4, #0
9001ce94:	f77f af4a 	ble.w	9001cd2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ce98:	1414      	asrs	r4, r2, #16
9001ce9a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001ce9e:	140d      	asrs	r5, r1, #16
9001cea0:	fb06 5504 	mla	r5, r6, r4, r5
9001cea4:	9c01      	ldr	r4, [sp, #4]
9001cea6:	5d64      	ldrb	r4, [r4, r5]
9001cea8:	2cff      	cmp	r4, #255	; 0xff
9001ceaa:	d10b      	bne.n	9001cec4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001ceac:	9c00      	ldr	r4, [sp, #0]
9001ceae:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001ceb2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001ceb6:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001ceb8:	f109 0901 	add.w	r9, r9, #1
9001cebc:	4421      	add	r1, r4
9001cebe:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001cec0:	4422      	add	r2, r4
9001cec2:	e7e4      	b.n	9001ce8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001cec4:	2c00      	cmp	r4, #0
9001cec6:	d0f6      	beq.n	9001ceb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001cec8:	9e00      	ldr	r6, [sp, #0]
9001ceca:	b2a7      	uxth	r7, r4
9001cecc:	43e4      	mvns	r4, r4
9001cece:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001ced2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001ced6:	b2e4      	uxtb	r4, r4
9001ced8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001cedc:	122e      	asrs	r6, r5, #8
9001cede:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001cee2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cee6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ceea:	00ed      	lsls	r5, r5, #3
9001ceec:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001cef0:	fb16 f604 	smulbb	r6, r6, r4
9001cef4:	b2ed      	uxtb	r5, r5
9001cef6:	fb1a fa04 	smulbb	sl, sl, r4
9001cefa:	fb0c 6c07 	mla	ip, ip, r7, r6
9001cefe:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001cf02:	fb15 f504 	smulbb	r5, r5, r4
9001cf06:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cf0a:	fa1f fc8c 	uxth.w	ip, ip
9001cf0e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001cf12:	fa5f fe8e 	uxtb.w	lr, lr
9001cf16:	fb06 a607 	mla	r6, r6, r7, sl
9001cf1a:	f10c 0401 	add.w	r4, ip, #1
9001cf1e:	fb0e 5507 	mla	r5, lr, r7, r5
9001cf22:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001cf26:	b2ad      	uxth	r5, r5
9001cf28:	b2b6      	uxth	r6, r6
9001cf2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001cf2e:	f105 0a01 	add.w	sl, r5, #1
9001cf32:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cf36:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cf3a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001cf3e:	f106 0a01 	add.w	sl, r6, #1
9001cf42:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cf46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cf4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001cf4e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001cf52:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001cf56:	e7ae      	b.n	9001ceb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001cf58:	b005      	add	sp, #20
9001cf5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001cf5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cf5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cf62:	b085      	sub	sp, #20
9001cf64:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001cf66:	9203      	str	r2, [sp, #12]
9001cf68:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
9001cf6c:	9100      	str	r1, [sp, #0]
9001cf6e:	9201      	str	r2, [sp, #4]
9001cf70:	6841      	ldr	r1, [r0, #4]
9001cf72:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001cf76:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001cf7a:	fb01 2404 	mla	r4, r1, r4, r2
9001cf7e:	6802      	ldr	r2, [r0, #0]
9001cf80:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cf84:	f8de 2000 	ldr.w	r2, [lr]
9001cf88:	9202      	str	r2, [sp, #8]
9001cf8a:	9a01      	ldr	r2, [sp, #4]
9001cf8c:	43d6      	mvns	r6, r2
9001cf8e:	b2f6      	uxtb	r6, r6
9001cf90:	9a00      	ldr	r2, [sp, #0]
9001cf92:	2a00      	cmp	r2, #0
9001cf94:	dc03      	bgt.n	9001cf9e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001cf96:	9a03      	ldr	r2, [sp, #12]
9001cf98:	2a00      	cmp	r2, #0
9001cf9a:	f340 8124 	ble.w	9001d1e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001cf9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001cfa0:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001cfa4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001cfa8:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001cfaa:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001cfae:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001cfb2:	2b00      	cmp	r3, #0
9001cfb4:	dd0e      	ble.n	9001cfd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001cfb6:	1408      	asrs	r0, r1, #16
9001cfb8:	d405      	bmi.n	9001cfc6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cfba:	4560      	cmp	r0, ip
9001cfbc:	da03      	bge.n	9001cfc6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cfbe:	1410      	asrs	r0, r2, #16
9001cfc0:	d401      	bmi.n	9001cfc6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cfc2:	42b8      	cmp	r0, r7
9001cfc4:	db07      	blt.n	9001cfd6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001cfc6:	9811      	ldr	r0, [sp, #68]	; 0x44
9001cfc8:	3b01      	subs	r3, #1
9001cfca:	3402      	adds	r4, #2
9001cfcc:	4401      	add	r1, r0
9001cfce:	9812      	ldr	r0, [sp, #72]	; 0x48
9001cfd0:	4402      	add	r2, r0
9001cfd2:	e7ee      	b.n	9001cfb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001cfd4:	d06e      	beq.n	9001d0b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001cfd6:	1e58      	subs	r0, r3, #1
9001cfd8:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001cfda:	fb05 1500 	mla	r5, r5, r0, r1
9001cfde:	142d      	asrs	r5, r5, #16
9001cfe0:	d45c      	bmi.n	9001d09c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001cfe2:	4565      	cmp	r5, ip
9001cfe4:	da5a      	bge.n	9001d09c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001cfe6:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001cfe8:	fb05 2000 	mla	r0, r5, r0, r2
9001cfec:	1400      	asrs	r0, r0, #16
9001cfee:	d455      	bmi.n	9001d09c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001cff0:	42b8      	cmp	r0, r7
9001cff2:	da53      	bge.n	9001d09c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001cff4:	4699      	mov	r9, r3
9001cff6:	46a2      	mov	sl, r4
9001cff8:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001cffc:	f1b9 0f00 	cmp.w	r9, #0
9001d000:	dd54      	ble.n	9001d0ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d002:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001d006:	140d      	asrs	r5, r1, #16
9001d008:	1410      	asrs	r0, r2, #16
9001d00a:	f109 39ff 	add.w	r9, r9, #4294967295
9001d00e:	fb07 5000 	mla	r0, r7, r0, r5
9001d012:	9d02      	ldr	r5, [sp, #8]
9001d014:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001d018:	f8ba 5000 	ldrh.w	r5, [sl]
9001d01c:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001d020:	122f      	asrs	r7, r5, #8
9001d022:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001d026:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d02a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d02e:	00ed      	lsls	r5, r5, #3
9001d030:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001d034:	fb17 f706 	smulbb	r7, r7, r6
9001d038:	b2ed      	uxtb	r5, r5
9001d03a:	fb18 f806 	smulbb	r8, r8, r6
9001d03e:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001d042:	10c7      	asrs	r7, r0, #3
9001d044:	fb15 f506 	smulbb	r5, r5, r6
9001d048:	00c0      	lsls	r0, r0, #3
9001d04a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d04e:	fa1f fc8c 	uxth.w	ip, ip
9001d052:	b2c0      	uxtb	r0, r0
9001d054:	fb07 870b 	mla	r7, r7, fp, r8
9001d058:	fb00 500b 	mla	r0, r0, fp, r5
9001d05c:	f10c 0501 	add.w	r5, ip, #1
9001d060:	b2bf      	uxth	r7, r7
9001d062:	b280      	uxth	r0, r0
9001d064:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d068:	f107 0801 	add.w	r8, r7, #1
9001d06c:	1c45      	adds	r5, r0, #1
9001d06e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001d072:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d076:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d07a:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d07c:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001d080:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d084:	4401      	add	r1, r0
9001d086:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001d08a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d08c:	ea45 0c0c 	orr.w	ip, r5, ip
9001d090:	4402      	add	r2, r0
9001d092:	ea4c 0c08 	orr.w	ip, ip, r8
9001d096:	f82a cb02 	strh.w	ip, [sl], #2
9001d09a:	e7af      	b.n	9001cffc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d09c:	f04f 0800 	mov.w	r8, #0
9001d0a0:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001d0a4:	eb03 0008 	add.w	r0, r3, r8
9001d0a8:	2800      	cmp	r0, #0
9001d0aa:	dc41      	bgt.n	9001d130 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001d0ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d0b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d0b4:	9b00      	ldr	r3, [sp, #0]
9001d0b6:	2b00      	cmp	r3, #0
9001d0b8:	f340 8095 	ble.w	9001d1e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001d0bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001d0c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d0c2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d0c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d0ca:	eef0 6a62 	vmov.f32	s13, s5
9001d0ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001d0d2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d0d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d0da:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
9001d0de:	eef0 6a43 	vmov.f32	s13, s6
9001d0e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d0e6:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
9001d0ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d0ee:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d0f2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d0f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d0fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d0fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d102:	ee12 2a90 	vmov	r2, s5
9001d106:	eef0 2a47 	vmov.f32	s5, s14
9001d10a:	fb92 f3f3 	sdiv	r3, r2, r3
9001d10e:	ee13 2a10 	vmov	r2, s6
9001d112:	9311      	str	r3, [sp, #68]	; 0x44
9001d114:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d116:	eeb0 3a67 	vmov.f32	s6, s15
9001d11a:	fb92 f3f3 	sdiv	r3, r2, r3
9001d11e:	9312      	str	r3, [sp, #72]	; 0x48
9001d120:	9b00      	ldr	r3, [sp, #0]
9001d122:	9a03      	ldr	r2, [sp, #12]
9001d124:	3b01      	subs	r3, #1
9001d126:	9300      	str	r3, [sp, #0]
9001d128:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d12a:	bf08      	it	eq
9001d12c:	4613      	moveq	r3, r2
9001d12e:	e72f      	b.n	9001cf90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001d130:	140f      	asrs	r7, r1, #16
9001d132:	d451      	bmi.n	9001d1d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d134:	f8de 5008 	ldr.w	r5, [lr, #8]
9001d138:	42bd      	cmp	r5, r7
9001d13a:	dd4d      	ble.n	9001d1d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d13c:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d140:	d44a      	bmi.n	9001d1d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d142:	f8de 000c 	ldr.w	r0, [lr, #12]
9001d146:	4560      	cmp	r0, ip
9001d148:	dd46      	ble.n	9001d1d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d14a:	b22d      	sxth	r5, r5
9001d14c:	9802      	ldr	r0, [sp, #8]
9001d14e:	fb0c 7505 	mla	r5, ip, r5, r7
9001d152:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001d156:	f06f 0501 	mvn.w	r5, #1
9001d15a:	fb05 fb08 	mul.w	fp, r5, r8
9001d15e:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001d162:	f834 500b 	ldrh.w	r5, [r4, fp]
9001d166:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d16a:	122f      	asrs	r7, r5, #8
9001d16c:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001d170:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d174:	00ed      	lsls	r5, r5, #3
9001d176:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001d17a:	fb17 f706 	smulbb	r7, r7, r6
9001d17e:	b2ed      	uxtb	r5, r5
9001d180:	fb19 f906 	smulbb	r9, r9, r6
9001d184:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001d188:	10c7      	asrs	r7, r0, #3
9001d18a:	fb15 f506 	smulbb	r5, r5, r6
9001d18e:	00c0      	lsls	r0, r0, #3
9001d190:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d194:	fa1f fc8c 	uxth.w	ip, ip
9001d198:	b2c0      	uxtb	r0, r0
9001d19a:	fb07 970a 	mla	r7, r7, sl, r9
9001d19e:	fb00 500a 	mla	r0, r0, sl, r5
9001d1a2:	f10c 0501 	add.w	r5, ip, #1
9001d1a6:	b2bf      	uxth	r7, r7
9001d1a8:	b280      	uxth	r0, r0
9001d1aa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d1ae:	f107 0901 	add.w	r9, r7, #1
9001d1b2:	1c45      	adds	r5, r0, #1
9001d1b4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001d1b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d1bc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d1c0:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001d1c4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d1c8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001d1cc:	ea45 0c0c 	orr.w	ip, r5, ip
9001d1d0:	ea4c 0c09 	orr.w	ip, ip, r9
9001d1d4:	f824 c00b 	strh.w	ip, [r4, fp]
9001d1d8:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d1da:	f108 38ff 	add.w	r8, r8, #4294967295
9001d1de:	4401      	add	r1, r0
9001d1e0:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d1e2:	4402      	add	r2, r0
9001d1e4:	e75e      	b.n	9001d0a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001d1e6:	b005      	add	sp, #20
9001d1e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d1ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d1ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d1f0:	b085      	sub	sp, #20
9001d1f2:	4693      	mov	fp, r2
9001d1f4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d1f8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001d1fa:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001d1fc:	6870      	ldr	r0, [r6, #4]
9001d1fe:	9101      	str	r1, [sp, #4]
9001d200:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001d204:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001d208:	fb00 2404 	mla	r4, r0, r4, r2
9001d20c:	6832      	ldr	r2, [r6, #0]
9001d20e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d212:	682a      	ldr	r2, [r5, #0]
9001d214:	9202      	str	r2, [sp, #8]
9001d216:	9a01      	ldr	r2, [sp, #4]
9001d218:	2a00      	cmp	r2, #0
9001d21a:	dc03      	bgt.n	9001d224 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001d21c:	f1bb 0f00 	cmp.w	fp, #0
9001d220:	f340 809a 	ble.w	9001d358 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001d224:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d226:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d22a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001d22e:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d230:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001d234:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001d238:	2b00      	cmp	r3, #0
9001d23a:	dd0c      	ble.n	9001d256 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001d23c:	1406      	asrs	r6, r0, #16
9001d23e:	d405      	bmi.n	9001d24c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d240:	454e      	cmp	r6, r9
9001d242:	da03      	bge.n	9001d24c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d244:	1416      	asrs	r6, r2, #16
9001d246:	d401      	bmi.n	9001d24c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d248:	4546      	cmp	r6, r8
9001d24a:	db05      	blt.n	9001d258 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001d24c:	4470      	add	r0, lr
9001d24e:	4462      	add	r2, ip
9001d250:	3b01      	subs	r3, #1
9001d252:	3402      	adds	r4, #2
9001d254:	e7f0      	b.n	9001d238 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001d256:	d00f      	beq.n	9001d278 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001d258:	1e5e      	subs	r6, r3, #1
9001d25a:	fb0e 0706 	mla	r7, lr, r6, r0
9001d25e:	143f      	asrs	r7, r7, #16
9001d260:	d541      	bpl.n	9001d2e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001d262:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001d266:	4698      	mov	r8, r3
9001d268:	9603      	str	r6, [sp, #12]
9001d26a:	f1b8 0f00 	cmp.w	r8, #0
9001d26e:	dc56      	bgt.n	9001d31e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001d270:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d274:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d278:	9b01      	ldr	r3, [sp, #4]
9001d27a:	2b00      	cmp	r3, #0
9001d27c:	dd6c      	ble.n	9001d358 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001d27e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d282:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d284:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d288:	eeb0 6a62 	vmov.f32	s12, s5
9001d28c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d290:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d294:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d298:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001d29c:	eeb0 6a43 	vmov.f32	s12, s6
9001d2a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d2a4:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001d2a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d2ac:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d2b0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d2b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d2b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d2bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d2c0:	ee12 2a90 	vmov	r2, s5
9001d2c4:	eef0 2a47 	vmov.f32	s5, s14
9001d2c8:	fb92 fef3 	sdiv	lr, r2, r3
9001d2cc:	ee13 2a10 	vmov	r2, s6
9001d2d0:	eeb0 3a67 	vmov.f32	s6, s15
9001d2d4:	fb92 fcf3 	sdiv	ip, r2, r3
9001d2d8:	9b01      	ldr	r3, [sp, #4]
9001d2da:	3b01      	subs	r3, #1
9001d2dc:	9301      	str	r3, [sp, #4]
9001d2de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d2e0:	bf08      	it	eq
9001d2e2:	465b      	moveq	r3, fp
9001d2e4:	e797      	b.n	9001d216 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001d2e6:	454f      	cmp	r7, r9
9001d2e8:	dabb      	bge.n	9001d262 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d2ea:	fb0c 2606 	mla	r6, ip, r6, r2
9001d2ee:	1436      	asrs	r6, r6, #16
9001d2f0:	d4b7      	bmi.n	9001d262 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d2f2:	4546      	cmp	r6, r8
9001d2f4:	dab5      	bge.n	9001d262 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d2f6:	461e      	mov	r6, r3
9001d2f8:	46a0      	mov	r8, r4
9001d2fa:	2e00      	cmp	r6, #0
9001d2fc:	ddb8      	ble.n	9001d270 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d2fe:	1417      	asrs	r7, r2, #16
9001d300:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001d304:	ea4f 4920 	mov.w	r9, r0, asr #16
9001d308:	9902      	ldr	r1, [sp, #8]
9001d30a:	4470      	add	r0, lr
9001d30c:	4462      	add	r2, ip
9001d30e:	fb0a 9707 	mla	r7, sl, r7, r9
9001d312:	3e01      	subs	r6, #1
9001d314:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001d318:	f828 7b02 	strh.w	r7, [r8], #2
9001d31c:	e7ed      	b.n	9001d2fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001d31e:	ea5f 4920 	movs.w	r9, r0, asr #16
9001d322:	d414      	bmi.n	9001d34e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d324:	68ae      	ldr	r6, [r5, #8]
9001d326:	454e      	cmp	r6, r9
9001d328:	dd11      	ble.n	9001d34e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d32a:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001d32e:	d40e      	bmi.n	9001d34e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d330:	68ef      	ldr	r7, [r5, #12]
9001d332:	4557      	cmp	r7, sl
9001d334:	dd0b      	ble.n	9001d34e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d336:	b236      	sxth	r6, r6
9001d338:	f06f 0101 	mvn.w	r1, #1
9001d33c:	9f02      	ldr	r7, [sp, #8]
9001d33e:	fb0a 9606 	mla	r6, sl, r6, r9
9001d342:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001d346:	fb01 f608 	mul.w	r6, r1, r8
9001d34a:	9903      	ldr	r1, [sp, #12]
9001d34c:	538f      	strh	r7, [r1, r6]
9001d34e:	4470      	add	r0, lr
9001d350:	4462      	add	r2, ip
9001d352:	f108 38ff 	add.w	r8, r8, #4294967295
9001d356:	e788      	b.n	9001d26a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d358:	b005      	add	sp, #20
9001d35a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d35e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d35e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d362:	b087      	sub	sp, #28
9001d364:	468b      	mov	fp, r1
9001d366:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d36a:	9815      	ldr	r0, [sp, #84]	; 0x54
9001d36c:	9203      	str	r2, [sp, #12]
9001d36e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001d372:	6841      	ldr	r1, [r0, #4]
9001d374:	9204      	str	r2, [sp, #16]
9001d376:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001d37a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
9001d37e:	fb01 2505 	mla	r5, r1, r5, r2
9001d382:	6802      	ldr	r2, [r0, #0]
9001d384:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001d388:	f8d9 2000 	ldr.w	r2, [r9]
9001d38c:	9201      	str	r2, [sp, #4]
9001d38e:	f1bb 0f00 	cmp.w	fp, #0
9001d392:	dc03      	bgt.n	9001d39c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001d394:	9a03      	ldr	r2, [sp, #12]
9001d396:	2a00      	cmp	r2, #0
9001d398:	f340 8158 	ble.w	9001d64c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001d39c:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001d39e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001d3a2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001d3a6:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001d3a8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001d3ac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d3b0:	2b00      	cmp	r3, #0
9001d3b2:	dd0e      	ble.n	9001d3d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001d3b4:	1402      	asrs	r2, r0, #16
9001d3b6:	d405      	bmi.n	9001d3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d3b8:	42ba      	cmp	r2, r7
9001d3ba:	da03      	bge.n	9001d3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d3bc:	140a      	asrs	r2, r1, #16
9001d3be:	d401      	bmi.n	9001d3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d3c0:	42b2      	cmp	r2, r6
9001d3c2:	db07      	blt.n	9001d3d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d3c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d3c6:	3b01      	subs	r3, #1
9001d3c8:	3502      	adds	r5, #2
9001d3ca:	4410      	add	r0, r2
9001d3cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d3ce:	4411      	add	r1, r2
9001d3d0:	e7ee      	b.n	9001d3b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001d3d2:	d017      	beq.n	9001d404 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001d3d4:	1e5a      	subs	r2, r3, #1
9001d3d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001d3d8:	fb04 0402 	mla	r4, r4, r2, r0
9001d3dc:	1424      	asrs	r4, r4, #16
9001d3de:	d409      	bmi.n	9001d3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d3e0:	42bc      	cmp	r4, r7
9001d3e2:	da07      	bge.n	9001d3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d3e4:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001d3e6:	fb04 1202 	mla	r2, r4, r2, r1
9001d3ea:	1412      	asrs	r2, r2, #16
9001d3ec:	d402      	bmi.n	9001d3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d3ee:	42b2      	cmp	r2, r6
9001d3f0:	f2c0 80bf 	blt.w	9001d572 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001d3f4:	2700      	movs	r7, #0
9001d3f6:	19da      	adds	r2, r3, r7
9001d3f8:	2a00      	cmp	r2, #0
9001d3fa:	dc3e      	bgt.n	9001d47a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001d3fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d400:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001d404:	f1bb 0f00 	cmp.w	fp, #0
9001d408:	f340 8120 	ble.w	9001d64c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001d40c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d410:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d412:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d416:	f1bb 0b01 	subs.w	fp, fp, #1
9001d41a:	eeb0 6a62 	vmov.f32	s12, s5
9001d41e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d422:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d426:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d42a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001d42e:	eeb0 6a43 	vmov.f32	s12, s6
9001d432:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d436:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001d43a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d43e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d442:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d446:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d44a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d44e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d452:	ee12 2a90 	vmov	r2, s5
9001d456:	eef0 2a47 	vmov.f32	s5, s14
9001d45a:	fb92 f3f3 	sdiv	r3, r2, r3
9001d45e:	ee13 2a10 	vmov	r2, s6
9001d462:	9313      	str	r3, [sp, #76]	; 0x4c
9001d464:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d466:	eeb0 3a67 	vmov.f32	s6, s15
9001d46a:	fb92 f3f3 	sdiv	r3, r2, r3
9001d46e:	9a03      	ldr	r2, [sp, #12]
9001d470:	9314      	str	r3, [sp, #80]	; 0x50
9001d472:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d474:	bf08      	it	eq
9001d476:	4613      	moveq	r3, r2
9001d478:	e789      	b.n	9001d38e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001d47a:	1406      	asrs	r6, r0, #16
9001d47c:	d42d      	bmi.n	9001d4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d47e:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001d482:	42b4      	cmp	r4, r6
9001d484:	dd29      	ble.n	9001d4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d486:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001d48a:	d426      	bmi.n	9001d4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d48c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001d490:	4562      	cmp	r2, ip
9001d492:	dd22      	ble.n	9001d4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d494:	b224      	sxth	r4, r4
9001d496:	9a01      	ldr	r2, [sp, #4]
9001d498:	fb0c 6404 	mla	r4, ip, r4, r6
9001d49c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001d4a0:	0e22      	lsrs	r2, r4, #24
9001d4a2:	d01a      	beq.n	9001d4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d4a4:	9e04      	ldr	r6, [sp, #16]
9001d4a6:	4372      	muls	r2, r6
9001d4a8:	1c56      	adds	r6, r2, #1
9001d4aa:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001d4ae:	0a26      	lsrs	r6, r4, #8
9001d4b0:	1212      	asrs	r2, r2, #8
9001d4b2:	9605      	str	r6, [sp, #20]
9001d4b4:	2aff      	cmp	r2, #255	; 0xff
9001d4b6:	d116      	bne.n	9001d4e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001d4b8:	f06f 0201 	mvn.w	r2, #1
9001d4bc:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001d4c0:	fb02 fc07 	mul.w	ip, r2, r7
9001d4c4:	0962      	lsrs	r2, r4, #5
9001d4c6:	f026 0607 	bic.w	r6, r6, #7
9001d4ca:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001d4ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d4d2:	4316      	orrs	r6, r2
9001d4d4:	4326      	orrs	r6, r4
9001d4d6:	f825 600c 	strh.w	r6, [r5, ip]
9001d4da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d4dc:	3f01      	subs	r7, #1
9001d4de:	4410      	add	r0, r2
9001d4e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d4e2:	4411      	add	r1, r2
9001d4e4:	e787      	b.n	9001d3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d4e6:	f06f 0601 	mvn.w	r6, #1
9001d4ea:	fa1f fa82 	uxth.w	sl, r2
9001d4ee:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001d4f2:	43d2      	mvns	r2, r2
9001d4f4:	437e      	muls	r6, r7
9001d4f6:	b2e4      	uxtb	r4, r4
9001d4f8:	fb1c fc0a 	smulbb	ip, ip, sl
9001d4fc:	b2d2      	uxtb	r2, r2
9001d4fe:	f835 8006 	ldrh.w	r8, [r5, r6]
9001d502:	fb14 f40a 	smulbb	r4, r4, sl
9001d506:	9602      	str	r6, [sp, #8]
9001d508:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001d50c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001d510:	fb16 f60a 	smulbb	r6, r6, sl
9001d514:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001d518:	fb0e ce02 	mla	lr, lr, r2, ip
9001d51c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001d520:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001d524:	fa1f fe8e 	uxth.w	lr, lr
9001d528:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001d52c:	fa5f f888 	uxtb.w	r8, r8
9001d530:	fb0c 6c02 	mla	ip, ip, r2, r6
9001d534:	fb08 4402 	mla	r4, r8, r2, r4
9001d538:	f10e 0201 	add.w	r2, lr, #1
9001d53c:	fa1f fc8c 	uxth.w	ip, ip
9001d540:	b2a4      	uxth	r4, r4
9001d542:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001d546:	9a02      	ldr	r2, [sp, #8]
9001d548:	1c66      	adds	r6, r4, #1
9001d54a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001d54e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001d552:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d556:	ea46 0e0e 	orr.w	lr, r6, lr
9001d55a:	f10c 0601 	add.w	r6, ip, #1
9001d55e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001d562:	0976      	lsrs	r6, r6, #5
9001d564:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d568:	ea4e 0e06 	orr.w	lr, lr, r6
9001d56c:	f825 e002 	strh.w	lr, [r5, r2]
9001d570:	e7b3      	b.n	9001d4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d572:	f04f 0800 	mov.w	r8, #0
9001d576:	eba3 0208 	sub.w	r2, r3, r8
9001d57a:	2a00      	cmp	r2, #0
9001d57c:	f77f af3e 	ble.w	9001d3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d580:	1404      	asrs	r4, r0, #16
9001d582:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001d586:	140a      	asrs	r2, r1, #16
9001d588:	fb06 4202 	mla	r2, r6, r2, r4
9001d58c:	9c01      	ldr	r4, [sp, #4]
9001d58e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001d592:	0e22      	lsrs	r2, r4, #24
9001d594:	d015      	beq.n	9001d5c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001d596:	9e04      	ldr	r6, [sp, #16]
9001d598:	4372      	muls	r2, r6
9001d59a:	1c56      	adds	r6, r2, #1
9001d59c:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001d5a0:	0a26      	lsrs	r6, r4, #8
9001d5a2:	1212      	asrs	r2, r2, #8
9001d5a4:	2aff      	cmp	r2, #255	; 0xff
9001d5a6:	d113      	bne.n	9001d5d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001d5a8:	0962      	lsrs	r2, r4, #5
9001d5aa:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001d5ae:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001d5b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d5b6:	f026 0607 	bic.w	r6, r6, #7
9001d5ba:	4316      	orrs	r6, r2
9001d5bc:	4326      	orrs	r6, r4
9001d5be:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001d5c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d5c4:	f108 0801 	add.w	r8, r8, #1
9001d5c8:	4410      	add	r0, r2
9001d5ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d5cc:	4411      	add	r1, r2
9001d5ce:	e7d2      	b.n	9001d576 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001d5d0:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001d5d4:	fa1f fa82 	uxth.w	sl, r2
9001d5d8:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001d5dc:	43d2      	mvns	r2, r2
9001d5de:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d5e2:	fb17 f70a 	smulbb	r7, r7, sl
9001d5e6:	b2d2      	uxtb	r2, r2
9001d5e8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d5ec:	b2e4      	uxtb	r4, r4
9001d5ee:	b2f6      	uxtb	r6, r6
9001d5f0:	fb0c 7c02 	mla	ip, ip, r2, r7
9001d5f4:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001d5f8:	fb14 f40a 	smulbb	r4, r4, sl
9001d5fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d600:	fa1f fc8c 	uxth.w	ip, ip
9001d604:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d608:	fb16 f60a 	smulbb	r6, r6, sl
9001d60c:	fa5f fe8e 	uxtb.w	lr, lr
9001d610:	fb0e 4402 	mla	r4, lr, r2, r4
9001d614:	fb07 6702 	mla	r7, r7, r2, r6
9001d618:	f10c 0201 	add.w	r2, ip, #1
9001d61c:	b2a4      	uxth	r4, r4
9001d61e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d622:	1c66      	adds	r6, r4, #1
9001d624:	b2bf      	uxth	r7, r7
9001d626:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d62a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001d62e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d632:	ea46 0c0c 	orr.w	ip, r6, ip
9001d636:	1c7e      	adds	r6, r7, #1
9001d638:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001d63c:	0976      	lsrs	r6, r6, #5
9001d63e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d642:	ea4c 0c06 	orr.w	ip, ip, r6
9001d646:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001d64a:	e7ba      	b.n	9001d5c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001d64c:	b007      	add	sp, #28
9001d64e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001d654 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d658:	b085      	sub	sp, #20
9001d65a:	468b      	mov	fp, r1
9001d65c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d660:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001d662:	9203      	str	r2, [sp, #12]
9001d664:	6841      	ldr	r1, [r0, #4]
9001d666:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001d66a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001d66e:	fb01 2404 	mla	r4, r1, r4, r2
9001d672:	6802      	ldr	r2, [r0, #0]
9001d674:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d678:	f8d8 2000 	ldr.w	r2, [r8]
9001d67c:	9201      	str	r2, [sp, #4]
9001d67e:	f1bb 0f00 	cmp.w	fp, #0
9001d682:	dc03      	bgt.n	9001d68c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001d684:	9a03      	ldr	r2, [sp, #12]
9001d686:	2a00      	cmp	r2, #0
9001d688:	f340 814f 	ble.w	9001d92a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001d68c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d68e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001d692:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d696:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d698:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001d69c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001d6a0:	2b00      	cmp	r3, #0
9001d6a2:	dd0e      	ble.n	9001d6c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001d6a4:	1408      	asrs	r0, r1, #16
9001d6a6:	d405      	bmi.n	9001d6b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d6a8:	42b8      	cmp	r0, r7
9001d6aa:	da03      	bge.n	9001d6b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d6ac:	1410      	asrs	r0, r2, #16
9001d6ae:	d401      	bmi.n	9001d6b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d6b0:	42b0      	cmp	r0, r6
9001d6b2:	db07      	blt.n	9001d6c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d6b4:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d6b6:	3b01      	subs	r3, #1
9001d6b8:	3402      	adds	r4, #2
9001d6ba:	4401      	add	r1, r0
9001d6bc:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d6be:	4402      	add	r2, r0
9001d6c0:	e7ee      	b.n	9001d6a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001d6c2:	d017      	beq.n	9001d6f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d6c4:	1e58      	subs	r0, r3, #1
9001d6c6:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001d6c8:	fb05 1500 	mla	r5, r5, r0, r1
9001d6cc:	142d      	asrs	r5, r5, #16
9001d6ce:	d409      	bmi.n	9001d6e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d6d0:	42bd      	cmp	r5, r7
9001d6d2:	da07      	bge.n	9001d6e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d6d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001d6d6:	fb05 2000 	mla	r0, r5, r0, r2
9001d6da:	1400      	asrs	r0, r0, #16
9001d6dc:	d402      	bmi.n	9001d6e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d6de:	42b0      	cmp	r0, r6
9001d6e0:	f2c0 80ba 	blt.w	9001d858 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001d6e4:	2600      	movs	r6, #0
9001d6e6:	1998      	adds	r0, r3, r6
9001d6e8:	2800      	cmp	r0, #0
9001d6ea:	dc3e      	bgt.n	9001d76a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001d6ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d6f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d6f4:	f1bb 0f00 	cmp.w	fp, #0
9001d6f8:	f340 8117 	ble.w	9001d92a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001d6fc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d700:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d702:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d706:	f1bb 0b01 	subs.w	fp, fp, #1
9001d70a:	eeb0 6a62 	vmov.f32	s12, s5
9001d70e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d712:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d716:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d71a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001d71e:	eeb0 6a43 	vmov.f32	s12, s6
9001d722:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d726:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001d72a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d72e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d732:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d736:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d73a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d73e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d742:	ee12 2a90 	vmov	r2, s5
9001d746:	eef0 2a47 	vmov.f32	s5, s14
9001d74a:	fb92 f3f3 	sdiv	r3, r2, r3
9001d74e:	ee13 2a10 	vmov	r2, s6
9001d752:	9311      	str	r3, [sp, #68]	; 0x44
9001d754:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d756:	eeb0 3a67 	vmov.f32	s6, s15
9001d75a:	fb92 f3f3 	sdiv	r3, r2, r3
9001d75e:	9a03      	ldr	r2, [sp, #12]
9001d760:	9312      	str	r3, [sp, #72]	; 0x48
9001d762:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d764:	bf08      	it	eq
9001d766:	4613      	moveq	r3, r2
9001d768:	e789      	b.n	9001d67e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001d76a:	140f      	asrs	r7, r1, #16
9001d76c:	d424      	bmi.n	9001d7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d76e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001d772:	42bd      	cmp	r5, r7
9001d774:	dd20      	ble.n	9001d7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d776:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d77a:	d41d      	bmi.n	9001d7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d77c:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001d780:	4560      	cmp	r0, ip
9001d782:	dd19      	ble.n	9001d7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d784:	b22d      	sxth	r5, r5
9001d786:	9801      	ldr	r0, [sp, #4]
9001d788:	fb0c 7505 	mla	r5, ip, r5, r7
9001d78c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001d790:	0e07      	lsrs	r7, r0, #24
9001d792:	2fff      	cmp	r7, #255	; 0xff
9001d794:	d116      	bne.n	9001d7c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d796:	f06f 0501 	mvn.w	r5, #1
9001d79a:	fb05 f706 	mul.w	r7, r5, r6
9001d79e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001d7a2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001d7a6:	0945      	lsrs	r5, r0, #5
9001d7a8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001d7ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d7b0:	ea4c 0505 	orr.w	r5, ip, r5
9001d7b4:	4305      	orrs	r5, r0
9001d7b6:	53e5      	strh	r5, [r4, r7]
9001d7b8:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d7ba:	3e01      	subs	r6, #1
9001d7bc:	4401      	add	r1, r0
9001d7be:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d7c0:	4402      	add	r2, r0
9001d7c2:	e790      	b.n	9001d6e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001d7c4:	b2fd      	uxtb	r5, r7
9001d7c6:	2f00      	cmp	r7, #0
9001d7c8:	d0f6      	beq.n	9001d7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d7ca:	f06f 0701 	mvn.w	r7, #1
9001d7ce:	fa1f f985 	uxth.w	r9, r5
9001d7d2:	43ed      	mvns	r5, r5
9001d7d4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001d7d8:	4377      	muls	r7, r6
9001d7da:	fb1a fa09 	smulbb	sl, sl, r9
9001d7de:	b2ed      	uxtb	r5, r5
9001d7e0:	f834 e007 	ldrh.w	lr, [r4, r7]
9001d7e4:	9702      	str	r7, [sp, #8]
9001d7e6:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001d7ea:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d7ee:	fb17 f709 	smulbb	r7, r7, r9
9001d7f2:	b2c0      	uxtb	r0, r0
9001d7f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d7f8:	fb10 f009 	smulbb	r0, r0, r9
9001d7fc:	fb0c 7c05 	mla	ip, ip, r5, r7
9001d800:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001d804:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d808:	fa1f fc8c 	uxth.w	ip, ip
9001d80c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d810:	fa5f fe8e 	uxtb.w	lr, lr
9001d814:	fb07 a705 	mla	r7, r7, r5, sl
9001d818:	fb0e 0005 	mla	r0, lr, r5, r0
9001d81c:	f10c 0501 	add.w	r5, ip, #1
9001d820:	b2bf      	uxth	r7, r7
9001d822:	b280      	uxth	r0, r0
9001d824:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d828:	f100 0a01 	add.w	sl, r0, #1
9001d82c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d830:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001d834:	9802      	ldr	r0, [sp, #8]
9001d836:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d83a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d83e:	f107 0a01 	add.w	sl, r7, #1
9001d842:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001d846:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d84a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d84e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d852:	f824 c000 	strh.w	ip, [r4, r0]
9001d856:	e7af      	b.n	9001d7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d858:	f04f 0e00 	mov.w	lr, #0
9001d85c:	eba3 000e 	sub.w	r0, r3, lr
9001d860:	2800      	cmp	r0, #0
9001d862:	f77f af43 	ble.w	9001d6ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d866:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001d86a:	140d      	asrs	r5, r1, #16
9001d86c:	1410      	asrs	r0, r2, #16
9001d86e:	fb06 5000 	mla	r0, r6, r0, r5
9001d872:	9d01      	ldr	r5, [sp, #4]
9001d874:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001d878:	0e2e      	lsrs	r6, r5, #24
9001d87a:	2eff      	cmp	r6, #255	; 0xff
9001d87c:	d112      	bne.n	9001d8a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001d87e:	482c      	ldr	r0, [pc, #176]	; (9001d930 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001d880:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001d884:	0968      	lsrs	r0, r5, #5
9001d886:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001d88a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001d88e:	4330      	orrs	r0, r6
9001d890:	4328      	orrs	r0, r5
9001d892:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001d896:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d898:	f10e 0e01 	add.w	lr, lr, #1
9001d89c:	4401      	add	r1, r0
9001d89e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d8a0:	4402      	add	r2, r0
9001d8a2:	e7db      	b.n	9001d85c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001d8a4:	b2f0      	uxtb	r0, r6
9001d8a6:	2e00      	cmp	r6, #0
9001d8a8:	d0f5      	beq.n	9001d896 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001d8aa:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001d8ae:	fa1f f980 	uxth.w	r9, r0
9001d8b2:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d8b6:	43c0      	mvns	r0, r0
9001d8b8:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d8bc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001d8c0:	fb16 f609 	smulbb	r6, r6, r9
9001d8c4:	b2c0      	uxtb	r0, r0
9001d8c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d8ca:	b2ed      	uxtb	r5, r5
9001d8cc:	fb1a fa09 	smulbb	sl, sl, r9
9001d8d0:	fb07 6700 	mla	r7, r7, r0, r6
9001d8d4:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001d8d8:	fb15 f509 	smulbb	r5, r5, r9
9001d8dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d8e0:	b2bf      	uxth	r7, r7
9001d8e2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001d8e6:	fa5f fc8c 	uxtb.w	ip, ip
9001d8ea:	fb06 a600 	mla	r6, r6, r0, sl
9001d8ee:	fb0c 5500 	mla	r5, ip, r0, r5
9001d8f2:	1c78      	adds	r0, r7, #1
9001d8f4:	b2b6      	uxth	r6, r6
9001d8f6:	b2ad      	uxth	r5, r5
9001d8f8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001d8fc:	f105 0a01 	add.w	sl, r5, #1
9001d900:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001d904:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d908:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d90c:	ea4a 0707 	orr.w	r7, sl, r7
9001d910:	f106 0a01 	add.w	sl, r6, #1
9001d914:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d918:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d91c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d920:	ea47 070a 	orr.w	r7, r7, sl
9001d924:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001d928:	e7b5      	b.n	9001d896 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001d92a:	b005      	add	sp, #20
9001d92c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d930:	fffff800 	.word	0xfffff800

9001d934 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d938:	b087      	sub	sp, #28
9001d93a:	468b      	mov	fp, r1
9001d93c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d940:	9815      	ldr	r0, [sp, #84]	; 0x54
9001d942:	9203      	str	r2, [sp, #12]
9001d944:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001d948:	6841      	ldr	r1, [r0, #4]
9001d94a:	9204      	str	r2, [sp, #16]
9001d94c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001d950:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001d954:	fb01 2404 	mla	r4, r1, r4, r2
9001d958:	6802      	ldr	r2, [r0, #0]
9001d95a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d95e:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001d962:	3201      	adds	r2, #1
9001d964:	f022 0201 	bic.w	r2, r2, #1
9001d968:	9200      	str	r2, [sp, #0]
9001d96a:	f8d9 2000 	ldr.w	r2, [r9]
9001d96e:	9201      	str	r2, [sp, #4]
9001d970:	f1bb 0f00 	cmp.w	fp, #0
9001d974:	dc03      	bgt.n	9001d97e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001d976:	9a03      	ldr	r2, [sp, #12]
9001d978:	2a00      	cmp	r2, #0
9001d97a:	f340 816a 	ble.w	9001dc52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001d97e:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001d980:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001d984:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001d988:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001d98a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001d98e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d992:	2b00      	cmp	r3, #0
9001d994:	dd0e      	ble.n	9001d9b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001d996:	1402      	asrs	r2, r0, #16
9001d998:	d405      	bmi.n	9001d9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d99a:	42ba      	cmp	r2, r7
9001d99c:	da03      	bge.n	9001d9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d99e:	140a      	asrs	r2, r1, #16
9001d9a0:	d401      	bmi.n	9001d9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d9a2:	42b2      	cmp	r2, r6
9001d9a4:	db07      	blt.n	9001d9b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001d9a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d9a8:	3b01      	subs	r3, #1
9001d9aa:	3402      	adds	r4, #2
9001d9ac:	4410      	add	r0, r2
9001d9ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d9b0:	4411      	add	r1, r2
9001d9b2:	e7ee      	b.n	9001d992 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001d9b4:	d017      	beq.n	9001d9e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001d9b6:	1e5a      	subs	r2, r3, #1
9001d9b8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001d9ba:	fb05 0502 	mla	r5, r5, r2, r0
9001d9be:	142d      	asrs	r5, r5, #16
9001d9c0:	d409      	bmi.n	9001d9d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d9c2:	42bd      	cmp	r5, r7
9001d9c4:	da07      	bge.n	9001d9d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d9c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001d9c8:	fb05 1202 	mla	r2, r5, r2, r1
9001d9cc:	1412      	asrs	r2, r2, #16
9001d9ce:	d402      	bmi.n	9001d9d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d9d0:	42b2      	cmp	r2, r6
9001d9d2:	f2c0 80c8 	blt.w	9001db66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001d9d6:	2700      	movs	r7, #0
9001d9d8:	19da      	adds	r2, r3, r7
9001d9da:	2a00      	cmp	r2, #0
9001d9dc:	dc3e      	bgt.n	9001da5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001d9de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d9e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d9e6:	f1bb 0f00 	cmp.w	fp, #0
9001d9ea:	f340 8132 	ble.w	9001dc52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001d9ee:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d9f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d9f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d9f8:	f1bb 0b01 	subs.w	fp, fp, #1
9001d9fc:	eeb0 6a62 	vmov.f32	s12, s5
9001da00:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001da04:	ee31 1a05 	vadd.f32	s2, s2, s10
9001da08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001da0c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001da10:	eeb0 6a43 	vmov.f32	s12, s6
9001da14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001da18:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001da1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001da20:	ee61 7a27 	vmul.f32	s15, s2, s15
9001da24:	ee77 2a62 	vsub.f32	s5, s14, s5
9001da28:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001da2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001da30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001da34:	ee12 2a90 	vmov	r2, s5
9001da38:	eef0 2a47 	vmov.f32	s5, s14
9001da3c:	fb92 f3f3 	sdiv	r3, r2, r3
9001da40:	ee13 2a10 	vmov	r2, s6
9001da44:	9313      	str	r3, [sp, #76]	; 0x4c
9001da46:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001da48:	eeb0 3a67 	vmov.f32	s6, s15
9001da4c:	fb92 f3f3 	sdiv	r3, r2, r3
9001da50:	9a03      	ldr	r2, [sp, #12]
9001da52:	9314      	str	r3, [sp, #80]	; 0x50
9001da54:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001da56:	bf08      	it	eq
9001da58:	4613      	moveq	r3, r2
9001da5a:	e789      	b.n	9001d970 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001da5c:	1405      	asrs	r5, r0, #16
9001da5e:	d436      	bmi.n	9001dace <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001da60:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001da64:	42aa      	cmp	r2, r5
9001da66:	dd32      	ble.n	9001dace <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001da68:	140e      	asrs	r6, r1, #16
9001da6a:	d430      	bmi.n	9001dace <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001da6c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001da70:	42b2      	cmp	r2, r6
9001da72:	dd2c      	ble.n	9001dace <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001da74:	9a00      	ldr	r2, [sp, #0]
9001da76:	fb06 5502 	mla	r5, r6, r2, r5
9001da7a:	9e01      	ldr	r6, [sp, #4]
9001da7c:	086a      	lsrs	r2, r5, #1
9001da7e:	5cb2      	ldrb	r2, [r6, r2]
9001da80:	07ee      	lsls	r6, r5, #31
9001da82:	bf54      	ite	pl
9001da84:	f002 020f 	andpl.w	r2, r2, #15
9001da88:	1112      	asrmi	r2, r2, #4
9001da8a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001da8e:	b2d2      	uxtb	r2, r2
9001da90:	b1ea      	cbz	r2, 9001dace <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001da92:	9d04      	ldr	r5, [sp, #16]
9001da94:	436a      	muls	r2, r5
9001da96:	1c55      	adds	r5, r2, #1
9001da98:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001da9c:	4d6e      	ldr	r5, [pc, #440]	; (9001dc58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001da9e:	1212      	asrs	r2, r2, #8
9001daa0:	682d      	ldr	r5, [r5, #0]
9001daa2:	2aff      	cmp	r2, #255	; 0xff
9001daa4:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001daa8:	9605      	str	r6, [sp, #20]
9001daaa:	d116      	bne.n	9001dada <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001daac:	f06f 0201 	mvn.w	r2, #1
9001dab0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001dab4:	fb02 fc07 	mul.w	ip, r2, r7
9001dab8:	096a      	lsrs	r2, r5, #5
9001daba:	f026 0607 	bic.w	r6, r6, #7
9001dabe:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001dac2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001dac6:	4316      	orrs	r6, r2
9001dac8:	432e      	orrs	r6, r5
9001daca:	f824 600c 	strh.w	r6, [r4, ip]
9001dace:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001dad0:	3f01      	subs	r7, #1
9001dad2:	4410      	add	r0, r2
9001dad4:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001dad6:	4411      	add	r1, r2
9001dad8:	e77e      	b.n	9001d9d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001dada:	f06f 0601 	mvn.w	r6, #1
9001dade:	fa1f fa82 	uxth.w	sl, r2
9001dae2:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001dae6:	43d2      	mvns	r2, r2
9001dae8:	437e      	muls	r6, r7
9001daea:	b2ed      	uxtb	r5, r5
9001daec:	fb1c fc0a 	smulbb	ip, ip, sl
9001daf0:	b2d2      	uxtb	r2, r2
9001daf2:	f834 8006 	ldrh.w	r8, [r4, r6]
9001daf6:	fb15 f50a 	smulbb	r5, r5, sl
9001dafa:	9602      	str	r6, [sp, #8]
9001dafc:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001db00:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001db04:	fb16 f60a 	smulbb	r6, r6, sl
9001db08:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001db0c:	fb0e ce02 	mla	lr, lr, r2, ip
9001db10:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001db14:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001db18:	fa1f fe8e 	uxth.w	lr, lr
9001db1c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001db20:	fa5f f888 	uxtb.w	r8, r8
9001db24:	fb0c 6c02 	mla	ip, ip, r2, r6
9001db28:	fb08 5502 	mla	r5, r8, r2, r5
9001db2c:	f10e 0201 	add.w	r2, lr, #1
9001db30:	fa1f fc8c 	uxth.w	ip, ip
9001db34:	b2ad      	uxth	r5, r5
9001db36:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001db3a:	9a02      	ldr	r2, [sp, #8]
9001db3c:	1c6e      	adds	r6, r5, #1
9001db3e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001db42:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001db46:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001db4a:	ea46 0e0e 	orr.w	lr, r6, lr
9001db4e:	f10c 0601 	add.w	r6, ip, #1
9001db52:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001db56:	0976      	lsrs	r6, r6, #5
9001db58:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001db5c:	ea4e 0e06 	orr.w	lr, lr, r6
9001db60:	f824 e002 	strh.w	lr, [r4, r2]
9001db64:	e7b3      	b.n	9001dace <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001db66:	f04f 0800 	mov.w	r8, #0
9001db6a:	eba3 0208 	sub.w	r2, r3, r8
9001db6e:	2a00      	cmp	r2, #0
9001db70:	f77f af35 	ble.w	9001d9de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001db74:	1402      	asrs	r2, r0, #16
9001db76:	9e00      	ldr	r6, [sp, #0]
9001db78:	140d      	asrs	r5, r1, #16
9001db7a:	fb06 2505 	mla	r5, r6, r5, r2
9001db7e:	9e01      	ldr	r6, [sp, #4]
9001db80:	086a      	lsrs	r2, r5, #1
9001db82:	07ed      	lsls	r5, r5, #31
9001db84:	5cb2      	ldrb	r2, [r6, r2]
9001db86:	bf54      	ite	pl
9001db88:	f002 020f 	andpl.w	r2, r2, #15
9001db8c:	1112      	asrmi	r2, r2, #4
9001db8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001db92:	b2d2      	uxtb	r2, r2
9001db94:	b1c2      	cbz	r2, 9001dbc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001db96:	9d04      	ldr	r5, [sp, #16]
9001db98:	436a      	muls	r2, r5
9001db9a:	1c55      	adds	r5, r2, #1
9001db9c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001dba0:	4d2d      	ldr	r5, [pc, #180]	; (9001dc58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001dba2:	1212      	asrs	r2, r2, #8
9001dba4:	682e      	ldr	r6, [r5, #0]
9001dba6:	2aff      	cmp	r2, #255	; 0xff
9001dba8:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001dbac:	d113      	bne.n	9001dbd6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001dbae:	0972      	lsrs	r2, r6, #5
9001dbb0:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001dbb4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001dbb8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001dbbc:	f025 0507 	bic.w	r5, r5, #7
9001dbc0:	4315      	orrs	r5, r2
9001dbc2:	4335      	orrs	r5, r6
9001dbc4:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001dbc8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001dbca:	f108 0801 	add.w	r8, r8, #1
9001dbce:	4410      	add	r0, r2
9001dbd0:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001dbd2:	4411      	add	r1, r2
9001dbd4:	e7c9      	b.n	9001db6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001dbd6:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001dbda:	fa1f fa82 	uxth.w	sl, r2
9001dbde:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001dbe2:	43d2      	mvns	r2, r2
9001dbe4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001dbe8:	fb17 f70a 	smulbb	r7, r7, sl
9001dbec:	b2d2      	uxtb	r2, r2
9001dbee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001dbf2:	b2f6      	uxtb	r6, r6
9001dbf4:	b2ed      	uxtb	r5, r5
9001dbf6:	fb0c 7c02 	mla	ip, ip, r2, r7
9001dbfa:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001dbfe:	fb16 f60a 	smulbb	r6, r6, sl
9001dc02:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001dc06:	fa1f fc8c 	uxth.w	ip, ip
9001dc0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001dc0e:	fb15 f50a 	smulbb	r5, r5, sl
9001dc12:	fa5f fe8e 	uxtb.w	lr, lr
9001dc16:	fb0e 6602 	mla	r6, lr, r2, r6
9001dc1a:	fb07 5702 	mla	r7, r7, r2, r5
9001dc1e:	f10c 0201 	add.w	r2, ip, #1
9001dc22:	b2b6      	uxth	r6, r6
9001dc24:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001dc28:	1c75      	adds	r5, r6, #1
9001dc2a:	b2bf      	uxth	r7, r7
9001dc2c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001dc30:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001dc34:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001dc38:	ea45 0c0c 	orr.w	ip, r5, ip
9001dc3c:	1c7d      	adds	r5, r7, #1
9001dc3e:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001dc42:	096d      	lsrs	r5, r5, #5
9001dc44:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001dc48:	ea4c 0c05 	orr.w	ip, ip, r5
9001dc4c:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001dc50:	e7ba      	b.n	9001dbc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001dc52:	b007      	add	sp, #28
9001dc54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dc58:	24039adc 	.word	0x24039adc

9001dc5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001dc5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dc60:	b087      	sub	sp, #28
9001dc62:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001dc66:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001df70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001dc6a:	9815      	ldr	r0, [sp, #84]	; 0x54
9001dc6c:	9101      	str	r1, [sp, #4]
9001dc6e:	9205      	str	r2, [sp, #20]
9001dc70:	6841      	ldr	r1, [r0, #4]
9001dc72:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001dc76:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001dc7a:	fb01 2404 	mla	r4, r1, r4, r2
9001dc7e:	6802      	ldr	r2, [r0, #0]
9001dc80:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001dc84:	f8db 2008 	ldr.w	r2, [fp, #8]
9001dc88:	3201      	adds	r2, #1
9001dc8a:	f022 0201 	bic.w	r2, r2, #1
9001dc8e:	9202      	str	r2, [sp, #8]
9001dc90:	f8db 2000 	ldr.w	r2, [fp]
9001dc94:	9203      	str	r2, [sp, #12]
9001dc96:	9a01      	ldr	r2, [sp, #4]
9001dc98:	2a00      	cmp	r2, #0
9001dc9a:	dc03      	bgt.n	9001dca4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001dc9c:	9a05      	ldr	r2, [sp, #20]
9001dc9e:	2a00      	cmp	r2, #0
9001dca0:	f340 8162 	ble.w	9001df68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001dca4:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001dca6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001dcaa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001dcae:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001dcb0:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001dcb4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001dcb8:	2b00      	cmp	r3, #0
9001dcba:	dd0e      	ble.n	9001dcda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001dcbc:	1402      	asrs	r2, r0, #16
9001dcbe:	d405      	bmi.n	9001dccc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001dcc0:	42ba      	cmp	r2, r7
9001dcc2:	da03      	bge.n	9001dccc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001dcc4:	140a      	asrs	r2, r1, #16
9001dcc6:	d401      	bmi.n	9001dccc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001dcc8:	42b2      	cmp	r2, r6
9001dcca:	db07      	blt.n	9001dcdc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001dccc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001dcce:	3b01      	subs	r3, #1
9001dcd0:	3402      	adds	r4, #2
9001dcd2:	4410      	add	r0, r2
9001dcd4:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001dcd6:	4411      	add	r1, r2
9001dcd8:	e7ee      	b.n	9001dcb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001dcda:	d017      	beq.n	9001dd0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001dcdc:	1e5a      	subs	r2, r3, #1
9001dcde:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001dce0:	fb05 0502 	mla	r5, r5, r2, r0
9001dce4:	142d      	asrs	r5, r5, #16
9001dce6:	d409      	bmi.n	9001dcfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001dce8:	42bd      	cmp	r5, r7
9001dcea:	da07      	bge.n	9001dcfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001dcec:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001dcee:	fb05 1202 	mla	r2, r5, r2, r1
9001dcf2:	1412      	asrs	r2, r2, #16
9001dcf4:	d402      	bmi.n	9001dcfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001dcf6:	42b2      	cmp	r2, r6
9001dcf8:	f2c0 80c3 	blt.w	9001de82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001dcfc:	2500      	movs	r5, #0
9001dcfe:	195a      	adds	r2, r3, r5
9001dd00:	2a00      	cmp	r2, #0
9001dd02:	dc3f      	bgt.n	9001dd84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001dd04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001dd08:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001dd0c:	9b01      	ldr	r3, [sp, #4]
9001dd0e:	2b00      	cmp	r3, #0
9001dd10:	f340 812a 	ble.w	9001df68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001dd14:	ee30 0a04 	vadd.f32	s0, s0, s8
9001dd18:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001dd1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001dd1e:	eeb0 6a62 	vmov.f32	s12, s5
9001dd22:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001dd26:	ee31 1a05 	vadd.f32	s2, s2, s10
9001dd2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dd2e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001dd32:	eeb0 6a43 	vmov.f32	s12, s6
9001dd36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dd3a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001dd3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001dd42:	ee61 7a27 	vmul.f32	s15, s2, s15
9001dd46:	ee77 2a62 	vsub.f32	s5, s14, s5
9001dd4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001dd4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001dd52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001dd56:	ee12 2a90 	vmov	r2, s5
9001dd5a:	eef0 2a47 	vmov.f32	s5, s14
9001dd5e:	fb92 f3f3 	sdiv	r3, r2, r3
9001dd62:	ee13 2a10 	vmov	r2, s6
9001dd66:	9313      	str	r3, [sp, #76]	; 0x4c
9001dd68:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001dd6a:	eeb0 3a67 	vmov.f32	s6, s15
9001dd6e:	fb92 f3f3 	sdiv	r3, r2, r3
9001dd72:	9314      	str	r3, [sp, #80]	; 0x50
9001dd74:	9b01      	ldr	r3, [sp, #4]
9001dd76:	9a05      	ldr	r2, [sp, #20]
9001dd78:	3b01      	subs	r3, #1
9001dd7a:	9301      	str	r3, [sp, #4]
9001dd7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001dd7e:	bf08      	it	eq
9001dd80:	4613      	moveq	r3, r2
9001dd82:	e788      	b.n	9001dc96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001dd84:	1406      	asrs	r6, r0, #16
9001dd86:	d42c      	bmi.n	9001dde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001dd88:	f8db 2008 	ldr.w	r2, [fp, #8]
9001dd8c:	42b2      	cmp	r2, r6
9001dd8e:	dd28      	ble.n	9001dde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001dd90:	140f      	asrs	r7, r1, #16
9001dd92:	d426      	bmi.n	9001dde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001dd94:	f8db 200c 	ldr.w	r2, [fp, #12]
9001dd98:	42ba      	cmp	r2, r7
9001dd9a:	dd22      	ble.n	9001dde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001dd9c:	9a02      	ldr	r2, [sp, #8]
9001dd9e:	fb07 6602 	mla	r6, r7, r2, r6
9001dda2:	9f03      	ldr	r7, [sp, #12]
9001dda4:	0872      	lsrs	r2, r6, #1
9001dda6:	07f6      	lsls	r6, r6, #31
9001dda8:	5cba      	ldrb	r2, [r7, r2]
9001ddaa:	bf54      	ite	pl
9001ddac:	f002 020f 	andpl.w	r2, r2, #15
9001ddb0:	1112      	asrmi	r2, r2, #4
9001ddb2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ddb6:	b2d2      	uxtb	r2, r2
9001ddb8:	2aff      	cmp	r2, #255	; 0xff
9001ddba:	d118      	bne.n	9001ddee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001ddbc:	f06f 0601 	mvn.w	r6, #1
9001ddc0:	f8d8 2000 	ldr.w	r2, [r8]
9001ddc4:	fb06 f705 	mul.w	r7, r6, r5
9001ddc8:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001ddcc:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001ddd0:	0956      	lsrs	r6, r2, #5
9001ddd2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001ddd6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001ddda:	ea4c 0606 	orr.w	r6, ip, r6
9001ddde:	4316      	orrs	r6, r2
9001dde0:	53e6      	strh	r6, [r4, r7]
9001dde2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001dde4:	3d01      	subs	r5, #1
9001dde6:	4410      	add	r0, r2
9001dde8:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001ddea:	4411      	add	r1, r2
9001ddec:	e787      	b.n	9001dcfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ddee:	2a00      	cmp	r2, #0
9001ddf0:	d0f7      	beq.n	9001dde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ddf2:	f06f 0601 	mvn.w	r6, #1
9001ddf6:	f8d8 c000 	ldr.w	ip, [r8]
9001ddfa:	fa1f f982 	uxth.w	r9, r2
9001ddfe:	43d2      	mvns	r2, r2
9001de00:	436e      	muls	r6, r5
9001de02:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001de06:	b2d2      	uxtb	r2, r2
9001de08:	f834 e006 	ldrh.w	lr, [r4, r6]
9001de0c:	fb1a fa09 	smulbb	sl, sl, r9
9001de10:	9604      	str	r6, [sp, #16]
9001de12:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001de16:	ea4f 272e 	mov.w	r7, lr, asr #8
9001de1a:	fb16 f609 	smulbb	r6, r6, r9
9001de1e:	fa5f fc8c 	uxtb.w	ip, ip
9001de22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001de26:	fb1c fc09 	smulbb	ip, ip, r9
9001de2a:	fb07 6702 	mla	r7, r7, r2, r6
9001de2e:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001de32:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001de36:	b2bf      	uxth	r7, r7
9001de38:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001de3c:	fa5f fe8e 	uxtb.w	lr, lr
9001de40:	fb06 a602 	mla	r6, r6, r2, sl
9001de44:	fb0e cc02 	mla	ip, lr, r2, ip
9001de48:	1c7a      	adds	r2, r7, #1
9001de4a:	b2b6      	uxth	r6, r6
9001de4c:	fa1f fc8c 	uxth.w	ip, ip
9001de50:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001de54:	9a04      	ldr	r2, [sp, #16]
9001de56:	f10c 0a01 	add.w	sl, ip, #1
9001de5a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001de5e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001de62:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001de66:	ea4a 0707 	orr.w	r7, sl, r7
9001de6a:	f106 0a01 	add.w	sl, r6, #1
9001de6e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001de72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001de76:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001de7a:	ea47 070a 	orr.w	r7, r7, sl
9001de7e:	52a7      	strh	r7, [r4, r2]
9001de80:	e7af      	b.n	9001dde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001de82:	f04f 0e00 	mov.w	lr, #0
9001de86:	eba3 020e 	sub.w	r2, r3, lr
9001de8a:	2a00      	cmp	r2, #0
9001de8c:	f77f af3a 	ble.w	9001dd04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001de90:	1402      	asrs	r2, r0, #16
9001de92:	9e02      	ldr	r6, [sp, #8]
9001de94:	140d      	asrs	r5, r1, #16
9001de96:	fb06 2505 	mla	r5, r6, r5, r2
9001de9a:	9e03      	ldr	r6, [sp, #12]
9001de9c:	086a      	lsrs	r2, r5, #1
9001de9e:	07ed      	lsls	r5, r5, #31
9001dea0:	5cb2      	ldrb	r2, [r6, r2]
9001dea2:	bf54      	ite	pl
9001dea4:	f002 020f 	andpl.w	r2, r2, #15
9001dea8:	1112      	asrmi	r2, r2, #4
9001deaa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001deae:	b2d2      	uxtb	r2, r2
9001deb0:	2aff      	cmp	r2, #255	; 0xff
9001deb2:	d115      	bne.n	9001dee0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001deb4:	f8d8 5000 	ldr.w	r5, [r8]
9001deb8:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001debc:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001dec0:	096a      	lsrs	r2, r5, #5
9001dec2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001dec6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001deca:	4332      	orrs	r2, r6
9001decc:	432a      	orrs	r2, r5
9001dece:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001ded2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001ded4:	f10e 0e01 	add.w	lr, lr, #1
9001ded8:	4410      	add	r0, r2
9001deda:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001dedc:	4411      	add	r1, r2
9001dede:	e7d2      	b.n	9001de86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001dee0:	2a00      	cmp	r2, #0
9001dee2:	d0f6      	beq.n	9001ded2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001dee4:	f8d8 7000 	ldr.w	r7, [r8]
9001dee8:	fa1f f982 	uxth.w	r9, r2
9001deec:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001def0:	43d2      	mvns	r2, r2
9001def2:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001def6:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001defa:	ea4f 262c 	mov.w	r6, ip, asr #8
9001defe:	fb15 f509 	smulbb	r5, r5, r9
9001df02:	b2d2      	uxtb	r2, r2
9001df04:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001df08:	b2ff      	uxtb	r7, r7
9001df0a:	fb1a fa09 	smulbb	sl, sl, r9
9001df0e:	fb06 5602 	mla	r6, r6, r2, r5
9001df12:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001df16:	fb17 f709 	smulbb	r7, r7, r9
9001df1a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001df1e:	b2b6      	uxth	r6, r6
9001df20:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001df24:	fa5f fc8c 	uxtb.w	ip, ip
9001df28:	fb05 a502 	mla	r5, r5, r2, sl
9001df2c:	fb0c 7702 	mla	r7, ip, r2, r7
9001df30:	1c72      	adds	r2, r6, #1
9001df32:	b2ad      	uxth	r5, r5
9001df34:	b2bf      	uxth	r7, r7
9001df36:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001df3a:	f107 0a01 	add.w	sl, r7, #1
9001df3e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001df42:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001df46:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001df4a:	ea4a 0606 	orr.w	r6, sl, r6
9001df4e:	f105 0a01 	add.w	sl, r5, #1
9001df52:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001df56:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001df5a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001df5e:	ea46 060a 	orr.w	r6, r6, sl
9001df62:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001df66:	e7b4      	b.n	9001ded2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001df68:	b007      	add	sp, #28
9001df6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001df6e:	bf00      	nop
9001df70:	24039adc 	.word	0x24039adc

9001df74 <_ZN8touchgfx8LCD16bppD1Ev>:
9001df74:	4770      	bx	lr

9001df76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001df76:	4770      	bx	lr

9001df78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001df78:	4770      	bx	lr

9001df7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001df7a:	4770      	bx	lr

9001df7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001df7c:	4770      	bx	lr

9001df7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001df7e:	4770      	bx	lr

9001df80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001df80:	4770      	bx	lr

9001df82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001df82:	4770      	bx	lr

9001df84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001df84:	4770      	bx	lr

9001df86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001df86:	4770      	bx	lr

9001df88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001df88:	4770      	bx	lr

9001df8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001df8a:	4770      	bx	lr

9001df8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001df8c:	4770      	bx	lr

9001df8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001df8e:	4770      	bx	lr

9001df90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001df90:	4770      	bx	lr

9001df92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001df92:	4770      	bx	lr

9001df94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001df94:	4770      	bx	lr

9001df96 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001df96:	4770      	bx	lr

9001df98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001df98:	4770      	bx	lr

9001df9a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001df9a:	4770      	bx	lr

9001df9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001df9c:	4770      	bx	lr

9001df9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001df9e:	4770      	bx	lr

9001dfa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001dfa0:	4770      	bx	lr

9001dfa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001dfa2:	4770      	bx	lr

9001dfa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001dfa4:	4770      	bx	lr

9001dfa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001dfa6:	4770      	bx	lr

9001dfa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001dfa8:	4770      	bx	lr

9001dfaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001dfaa:	4770      	bx	lr

9001dfac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001dfac:	4770      	bx	lr

9001dfae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001dfae:	4770      	bx	lr

9001dfb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001dfb0:	4770      	bx	lr

9001dfb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001dfb2:	4770      	bx	lr

9001dfb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001dfb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001dfb8:	b088      	sub	sp, #32
9001dfba:	4606      	mov	r6, r0
9001dfbc:	4688      	mov	r8, r1
9001dfbe:	4691      	mov	r9, r2
9001dfc0:	ac08      	add	r4, sp, #32
9001dfc2:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001dfc6:	4620      	mov	r0, r4
9001dfc8:	f7fd fc64 	bl	9001b894 <_ZNK8touchgfx6Bitmap7getDataEv>
9001dfcc:	6833      	ldr	r3, [r6, #0]
9001dfce:	4605      	mov	r5, r0
9001dfd0:	4620      	mov	r0, r4
9001dfd2:	699f      	ldr	r7, [r3, #24]
9001dfd4:	f7fd fb72 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
9001dfd8:	4682      	mov	sl, r0
9001dfda:	4620      	mov	r0, r4
9001dfdc:	f7fd fba2 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001dfe0:	9500      	str	r5, [sp, #0]
9001dfe2:	464b      	mov	r3, r9
9001dfe4:	4642      	mov	r2, r8
9001dfe6:	4631      	mov	r1, r6
9001dfe8:	e9cd a001 	strd	sl, r0, [sp, #4]
9001dfec:	a806      	add	r0, sp, #24
9001dfee:	47b8      	blx	r7
9001dff0:	4628      	mov	r0, r5
9001dff2:	b008      	add	sp, #32
9001dff4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001dff8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001dff8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001dffc:	2300      	movs	r3, #0
9001dffe:	9300      	str	r3, [sp, #0]
9001e000:	4b3d      	ldr	r3, [pc, #244]	; (9001e0f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001e002:	781b      	ldrb	r3, [r3, #0]
9001e004:	2b00      	cmp	r3, #0
9001e006:	d137      	bne.n	9001e078 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001e008:	4a3c      	ldr	r2, [pc, #240]	; (9001e0fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e00a:	f9b2 2000 	ldrsh.w	r2, [r2]
9001e00e:	f8ad 2004 	strh.w	r2, [sp, #4]
9001e012:	2b00      	cmp	r3, #0
9001e014:	d132      	bne.n	9001e07c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001e016:	4b3a      	ldr	r3, [pc, #232]	; (9001e100 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001e018:	f9b3 3000 	ldrsh.w	r3, [r3]
9001e01c:	ac02      	add	r4, sp, #8
9001e01e:	6808      	ldr	r0, [r1, #0]
9001e020:	f8ad 3006 	strh.w	r3, [sp, #6]
9001e024:	ab02      	add	r3, sp, #8
9001e026:	6849      	ldr	r1, [r1, #4]
9001e028:	4d36      	ldr	r5, [pc, #216]	; (9001e104 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001e02a:	c303      	stmia	r3!, {r0, r1}
9001e02c:	4669      	mov	r1, sp
9001e02e:	4620      	mov	r0, r4
9001e030:	f7fa f828 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e034:	4668      	mov	r0, sp
9001e036:	f7f9 ffe1 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e03a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001e03e:	f8bd 2000 	ldrh.w	r2, [sp]
9001e042:	462f      	mov	r7, r5
9001e044:	6828      	ldr	r0, [r5, #0]
9001e046:	4413      	add	r3, r2
9001e048:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001e04c:	f8ad 3008 	strh.w	r3, [sp, #8]
9001e050:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001e054:	4413      	add	r3, r2
9001e056:	f8ad 300a 	strh.w	r3, [sp, #10]
9001e05a:	6803      	ldr	r3, [r0, #0]
9001e05c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e05e:	4798      	blx	r3
9001e060:	f010 0f01 	tst.w	r0, #1
9001e064:	d00c      	beq.n	9001e080 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001e066:	6828      	ldr	r0, [r5, #0]
9001e068:	6803      	ldr	r3, [r0, #0]
9001e06a:	e894 0006 	ldmia.w	r4, {r1, r2}
9001e06e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001e070:	4798      	blx	r3
9001e072:	b004      	add	sp, #16
9001e074:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e078:	4a21      	ldr	r2, [pc, #132]	; (9001e100 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001e07a:	e7c6      	b.n	9001e00a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001e07c:	4b1f      	ldr	r3, [pc, #124]	; (9001e0fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e07e:	e7cb      	b.n	9001e018 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001e080:	6838      	ldr	r0, [r7, #0]
9001e082:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001e086:	6803      	ldr	r3, [r0, #0]
9001e088:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001e08c:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001e090:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001e092:	4798      	blx	r3
9001e094:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001e098:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e09c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001e0a0:	fb16 3602 	smlabb	r6, r6, r2, r3
9001e0a4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001e0a8:	6838      	ldr	r0, [r7, #0]
9001e0aa:	6803      	ldr	r3, [r0, #0]
9001e0ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e0ae:	4798      	blx	r3
9001e0b0:	4a12      	ldr	r2, [pc, #72]	; (9001e0fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e0b2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001e0b6:	8813      	ldrh	r3, [r2, #0]
9001e0b8:	4691      	mov	r9, r2
9001e0ba:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001e0be:	435d      	muls	r5, r3
9001e0c0:	fb03 1404 	mla	r4, r3, r4, r1
9001e0c4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e0c8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e0cc:	6838      	ldr	r0, [r7, #0]
9001e0ce:	42ac      	cmp	r4, r5
9001e0d0:	6803      	ldr	r3, [r0, #0]
9001e0d2:	d20e      	bcs.n	9001e0f2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001e0d4:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001e0d8:	4632      	mov	r2, r6
9001e0da:	4643      	mov	r3, r8
9001e0dc:	4621      	mov	r1, r4
9001e0de:	47d0      	blx	sl
9001e0e0:	f8b9 3000 	ldrh.w	r3, [r9]
9001e0e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e0e8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001e0ec:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e0f0:	e7ec      	b.n	9001e0cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001e0f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e0f4:	4798      	blx	r3
9001e0f6:	e7bc      	b.n	9001e072 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001e0f8:	24039ac4 	.word	0x24039ac4
9001e0fc:	24039ac6 	.word	0x24039ac6
9001e100:	24039ac8 	.word	0x24039ac8
9001e104:	24039acc 	.word	0x24039acc

9001e108 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001e108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e10c:	b08b      	sub	sp, #44	; 0x2c
9001e10e:	460f      	mov	r7, r1
9001e110:	4616      	mov	r6, r2
9001e112:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001e116:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001e11a:	f1bb 0f00 	cmp.w	fp, #0
9001e11e:	d04a      	beq.n	9001e1b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001e120:	6810      	ldr	r0, [r2, #0]
9001e122:	ad06      	add	r5, sp, #24
9001e124:	6851      	ldr	r1, [r2, #4]
9001e126:	c503      	stmia	r5!, {r0, r1}
9001e128:	6818      	ldr	r0, [r3, #0]
9001e12a:	ad08      	add	r5, sp, #32
9001e12c:	6859      	ldr	r1, [r3, #4]
9001e12e:	c503      	stmia	r5!, {r0, r1}
9001e130:	a806      	add	r0, sp, #24
9001e132:	f7f9 ff63 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e136:	4631      	mov	r1, r6
9001e138:	a808      	add	r0, sp, #32
9001e13a:	f7f9 ffa3 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e13e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001e142:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001e146:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001e14a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001e14e:	fb16 2103 	smlabb	r1, r6, r3, r2
9001e152:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001e156:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001e15a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001e15e:	4f5f      	ldr	r7, [pc, #380]	; (9001e2dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001e160:	440a      	add	r2, r1
9001e162:	6838      	ldr	r0, [r7, #0]
9001e164:	46b9      	mov	r9, r7
9001e166:	f8ad 2020 	strh.w	r2, [sp, #32]
9001e16a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001e16e:	4413      	add	r3, r2
9001e170:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001e174:	6803      	ldr	r3, [r0, #0]
9001e176:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e178:	4798      	blx	r3
9001e17a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001e17e:	d11d      	bne.n	9001e1bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001e180:	b9fc      	cbnz	r4, 9001e1c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001e182:	f010 0f01 	tst.w	r0, #1
9001e186:	d01c      	beq.n	9001e1c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001e188:	f8d9 0000 	ldr.w	r0, [r9]
9001e18c:	2700      	movs	r7, #0
9001e18e:	b2ad      	uxth	r5, r5
9001e190:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001e194:	6801      	ldr	r1, [r0, #0]
9001e196:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001e19a:	f8cd b00c 	str.w	fp, [sp, #12]
9001e19e:	9501      	str	r5, [sp, #4]
9001e1a0:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001e1a4:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001e1a8:	9402      	str	r4, [sp, #8]
9001e1aa:	fa1f f488 	uxth.w	r4, r8
9001e1ae:	9400      	str	r4, [sp, #0]
9001e1b0:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001e1b2:	4631      	mov	r1, r6
9001e1b4:	47a0      	blx	r4
9001e1b6:	b00b      	add	sp, #44	; 0x2c
9001e1b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e1bc:	f010 0f04 	tst.w	r0, #4
9001e1c0:	e7e1      	b.n	9001e186 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001e1c2:	f8d9 0000 	ldr.w	r0, [r9]
9001e1c6:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001e1ca:	6803      	ldr	r3, [r0, #0]
9001e1cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e1ce:	4798      	blx	r3
9001e1d0:	4b43      	ldr	r3, [pc, #268]	; (9001e2e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001e1d2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001e1d6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001e1da:	881a      	ldrh	r2, [r3, #0]
9001e1dc:	469a      	mov	sl, r3
9001e1de:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001e1e2:	fb05 f502 	mul.w	r5, r5, r2
9001e1e6:	fb02 1404 	mla	r4, r2, r4, r1
9001e1ea:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e1ee:	d059      	beq.n	9001e2a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001e1f0:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001e1f4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e1f8:	fa1f f28b 	uxth.w	r2, fp
9001e1fc:	469e      	mov	lr, r3
9001e1fe:	fa1f f989 	uxth.w	r9, r9
9001e202:	42ac      	cmp	r4, r5
9001e204:	d264      	bcs.n	9001e2d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001e206:	eb04 0a07 	add.w	sl, r4, r7
9001e20a:	4554      	cmp	r4, sl
9001e20c:	d23d      	bcs.n	9001e28a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001e20e:	8821      	ldrh	r1, [r4, #0]
9001e210:	f836 3b02 	ldrh.w	r3, [r6], #2
9001e214:	1208      	asrs	r0, r1, #8
9001e216:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001e21a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001e21e:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001e222:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e226:	00c9      	lsls	r1, r1, #3
9001e228:	fb10 f009 	smulbb	r0, r0, r9
9001e22c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001e230:	b2c9      	uxtb	r1, r1
9001e232:	fb0c 0c02 	mla	ip, ip, r2, r0
9001e236:	10d8      	asrs	r0, r3, #3
9001e238:	fb1b fb09 	smulbb	fp, fp, r9
9001e23c:	00db      	lsls	r3, r3, #3
9001e23e:	fa1f fc8c 	uxth.w	ip, ip
9001e242:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001e246:	fb11 f109 	smulbb	r1, r1, r9
9001e24a:	b2db      	uxtb	r3, r3
9001e24c:	fb00 b002 	mla	r0, r0, r2, fp
9001e250:	f10c 0b01 	add.w	fp, ip, #1
9001e254:	fb03 1302 	mla	r3, r3, r2, r1
9001e258:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001e25c:	b29b      	uxth	r3, r3
9001e25e:	b280      	uxth	r0, r0
9001e260:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001e264:	f103 0c01 	add.w	ip, r3, #1
9001e268:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e26c:	1c43      	adds	r3, r0, #1
9001e26e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001e272:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e276:	0940      	lsrs	r0, r0, #5
9001e278:	ea4c 0c0b 	orr.w	ip, ip, fp
9001e27c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001e280:	ea4c 0c00 	orr.w	ip, ip, r0
9001e284:	f824 cb02 	strh.w	ip, [r4], #2
9001e288:	e7bf      	b.n	9001e20a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001e28a:	f8be 3000 	ldrh.w	r3, [lr]
9001e28e:	eba3 0308 	sub.w	r3, r3, r8
9001e292:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e296:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e29a:	eba3 0308 	sub.w	r3, r3, r8
9001e29e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e2a2:	e7ae      	b.n	9001e202 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001e2a4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e2a8:	f8d9 0000 	ldr.w	r0, [r9]
9001e2ac:	42ac      	cmp	r4, r5
9001e2ae:	6803      	ldr	r3, [r0, #0]
9001e2b0:	d20e      	bcs.n	9001e2d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001e2b2:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001e2b6:	4632      	mov	r2, r6
9001e2b8:	463b      	mov	r3, r7
9001e2ba:	4621      	mov	r1, r4
9001e2bc:	47c0      	blx	r8
9001e2be:	f8ba 3000 	ldrh.w	r3, [sl]
9001e2c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e2c6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e2ca:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e2ce:	e7eb      	b.n	9001e2a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001e2d0:	4b02      	ldr	r3, [pc, #8]	; (9001e2dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001e2d2:	6818      	ldr	r0, [r3, #0]
9001e2d4:	6803      	ldr	r3, [r0, #0]
9001e2d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e2d8:	4798      	blx	r3
9001e2da:	e76c      	b.n	9001e1b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001e2dc:	24039acc 	.word	0x24039acc
9001e2e0:	24039ac6 	.word	0x24039ac6

9001e2e4 <_ZN8touchgfx8LCD16bppD0Ev>:
9001e2e4:	b510      	push	{r4, lr}
9001e2e6:	4604      	mov	r4, r0
9001e2e8:	2184      	movs	r1, #132	; 0x84
9001e2ea:	f00b f97b 	bl	900295e4 <_ZdlPvj>
9001e2ee:	4620      	mov	r0, r4
9001e2f0:	bd10      	pop	{r4, pc}

9001e2f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001e2f2:	b510      	push	{r4, lr}
9001e2f4:	4604      	mov	r4, r0
9001e2f6:	2104      	movs	r1, #4
9001e2f8:	f00b f974 	bl	900295e4 <_ZdlPvj>
9001e2fc:	4620      	mov	r0, r4
9001e2fe:	bd10      	pop	{r4, pc}

9001e300 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001e300:	b510      	push	{r4, lr}
9001e302:	4604      	mov	r4, r0
9001e304:	2104      	movs	r1, #4
9001e306:	f00b f96d 	bl	900295e4 <_ZdlPvj>
9001e30a:	4620      	mov	r0, r4
9001e30c:	bd10      	pop	{r4, pc}

9001e30e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001e30e:	b510      	push	{r4, lr}
9001e310:	4604      	mov	r4, r0
9001e312:	f640 0144 	movw	r1, #2116	; 0x844
9001e316:	f00b f965 	bl	900295e4 <_ZdlPvj>
9001e31a:	4620      	mov	r0, r4
9001e31c:	bd10      	pop	{r4, pc}

9001e31e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e31e:	b510      	push	{r4, lr}
9001e320:	4604      	mov	r4, r0
9001e322:	2104      	movs	r1, #4
9001e324:	f00b f95e 	bl	900295e4 <_ZdlPvj>
9001e328:	4620      	mov	r0, r4
9001e32a:	bd10      	pop	{r4, pc}

9001e32c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001e32c:	b510      	push	{r4, lr}
9001e32e:	4604      	mov	r4, r0
9001e330:	2104      	movs	r1, #4
9001e332:	f00b f957 	bl	900295e4 <_ZdlPvj>
9001e336:	4620      	mov	r0, r4
9001e338:	bd10      	pop	{r4, pc}

9001e33a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e33a:	b510      	push	{r4, lr}
9001e33c:	4604      	mov	r4, r0
9001e33e:	2104      	movs	r1, #4
9001e340:	f00b f950 	bl	900295e4 <_ZdlPvj>
9001e344:	4620      	mov	r0, r4
9001e346:	bd10      	pop	{r4, pc}

9001e348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001e348:	b510      	push	{r4, lr}
9001e34a:	4604      	mov	r4, r0
9001e34c:	2104      	movs	r1, #4
9001e34e:	f00b f949 	bl	900295e4 <_ZdlPvj>
9001e352:	4620      	mov	r0, r4
9001e354:	bd10      	pop	{r4, pc}

9001e356 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e356:	b510      	push	{r4, lr}
9001e358:	4604      	mov	r4, r0
9001e35a:	2104      	movs	r1, #4
9001e35c:	f00b f942 	bl	900295e4 <_ZdlPvj>
9001e360:	4620      	mov	r0, r4
9001e362:	bd10      	pop	{r4, pc}

9001e364 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001e364:	b510      	push	{r4, lr}
9001e366:	4604      	mov	r4, r0
9001e368:	2104      	movs	r1, #4
9001e36a:	f00b f93b 	bl	900295e4 <_ZdlPvj>
9001e36e:	4620      	mov	r0, r4
9001e370:	bd10      	pop	{r4, pc}

9001e372 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e372:	b510      	push	{r4, lr}
9001e374:	4604      	mov	r4, r0
9001e376:	2104      	movs	r1, #4
9001e378:	f00b f934 	bl	900295e4 <_ZdlPvj>
9001e37c:	4620      	mov	r0, r4
9001e37e:	bd10      	pop	{r4, pc}

9001e380 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001e380:	b510      	push	{r4, lr}
9001e382:	4604      	mov	r4, r0
9001e384:	2104      	movs	r1, #4
9001e386:	f00b f92d 	bl	900295e4 <_ZdlPvj>
9001e38a:	4620      	mov	r0, r4
9001e38c:	bd10      	pop	{r4, pc}

9001e38e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e38e:	b510      	push	{r4, lr}
9001e390:	4604      	mov	r4, r0
9001e392:	2104      	movs	r1, #4
9001e394:	f00b f926 	bl	900295e4 <_ZdlPvj>
9001e398:	4620      	mov	r0, r4
9001e39a:	bd10      	pop	{r4, pc}

9001e39c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e39c:	b510      	push	{r4, lr}
9001e39e:	4604      	mov	r4, r0
9001e3a0:	2104      	movs	r1, #4
9001e3a2:	f00b f91f 	bl	900295e4 <_ZdlPvj>
9001e3a6:	4620      	mov	r0, r4
9001e3a8:	bd10      	pop	{r4, pc}

9001e3aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e3aa:	b510      	push	{r4, lr}
9001e3ac:	4604      	mov	r4, r0
9001e3ae:	2104      	movs	r1, #4
9001e3b0:	f00b f918 	bl	900295e4 <_ZdlPvj>
9001e3b4:	4620      	mov	r0, r4
9001e3b6:	bd10      	pop	{r4, pc}

9001e3b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e3b8:	b510      	push	{r4, lr}
9001e3ba:	4604      	mov	r4, r0
9001e3bc:	2104      	movs	r1, #4
9001e3be:	f00b f911 	bl	900295e4 <_ZdlPvj>
9001e3c2:	4620      	mov	r0, r4
9001e3c4:	bd10      	pop	{r4, pc}

9001e3c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e3c6:	b510      	push	{r4, lr}
9001e3c8:	4604      	mov	r4, r0
9001e3ca:	2104      	movs	r1, #4
9001e3cc:	f00b f90a 	bl	900295e4 <_ZdlPvj>
9001e3d0:	4620      	mov	r0, r4
9001e3d2:	bd10      	pop	{r4, pc}

9001e3d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001e3d4:	b510      	push	{r4, lr}
9001e3d6:	4604      	mov	r4, r0
9001e3d8:	2104      	movs	r1, #4
9001e3da:	f00b f903 	bl	900295e4 <_ZdlPvj>
9001e3de:	4620      	mov	r0, r4
9001e3e0:	bd10      	pop	{r4, pc}

9001e3e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e3e2:	b510      	push	{r4, lr}
9001e3e4:	4604      	mov	r4, r0
9001e3e6:	2104      	movs	r1, #4
9001e3e8:	f00b f8fc 	bl	900295e4 <_ZdlPvj>
9001e3ec:	4620      	mov	r0, r4
9001e3ee:	bd10      	pop	{r4, pc}

9001e3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e3f0:	b510      	push	{r4, lr}
9001e3f2:	4604      	mov	r4, r0
9001e3f4:	2104      	movs	r1, #4
9001e3f6:	f00b f8f5 	bl	900295e4 <_ZdlPvj>
9001e3fa:	4620      	mov	r0, r4
9001e3fc:	bd10      	pop	{r4, pc}

9001e3fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e3fe:	b510      	push	{r4, lr}
9001e400:	4604      	mov	r4, r0
9001e402:	2104      	movs	r1, #4
9001e404:	f00b f8ee 	bl	900295e4 <_ZdlPvj>
9001e408:	4620      	mov	r0, r4
9001e40a:	bd10      	pop	{r4, pc}

9001e40c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001e40c:	b510      	push	{r4, lr}
9001e40e:	4604      	mov	r4, r0
9001e410:	2104      	movs	r1, #4
9001e412:	f00b f8e7 	bl	900295e4 <_ZdlPvj>
9001e416:	4620      	mov	r0, r4
9001e418:	bd10      	pop	{r4, pc}

9001e41a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e41a:	b510      	push	{r4, lr}
9001e41c:	4604      	mov	r4, r0
9001e41e:	2104      	movs	r1, #4
9001e420:	f00b f8e0 	bl	900295e4 <_ZdlPvj>
9001e424:	4620      	mov	r0, r4
9001e426:	bd10      	pop	{r4, pc}

9001e428 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e428:	b510      	push	{r4, lr}
9001e42a:	4604      	mov	r4, r0
9001e42c:	2104      	movs	r1, #4
9001e42e:	f00b f8d9 	bl	900295e4 <_ZdlPvj>
9001e432:	4620      	mov	r0, r4
9001e434:	bd10      	pop	{r4, pc}

9001e436 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e436:	b510      	push	{r4, lr}
9001e438:	4604      	mov	r4, r0
9001e43a:	2104      	movs	r1, #4
9001e43c:	f00b f8d2 	bl	900295e4 <_ZdlPvj>
9001e440:	4620      	mov	r0, r4
9001e442:	bd10      	pop	{r4, pc}

9001e444 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e444:	b510      	push	{r4, lr}
9001e446:	4604      	mov	r4, r0
9001e448:	2104      	movs	r1, #4
9001e44a:	f00b f8cb 	bl	900295e4 <_ZdlPvj>
9001e44e:	4620      	mov	r0, r4
9001e450:	bd10      	pop	{r4, pc}

9001e452 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e452:	b510      	push	{r4, lr}
9001e454:	4604      	mov	r4, r0
9001e456:	2104      	movs	r1, #4
9001e458:	f00b f8c4 	bl	900295e4 <_ZdlPvj>
9001e45c:	4620      	mov	r0, r4
9001e45e:	bd10      	pop	{r4, pc}

9001e460 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e460:	b510      	push	{r4, lr}
9001e462:	4604      	mov	r4, r0
9001e464:	2104      	movs	r1, #4
9001e466:	f00b f8bd 	bl	900295e4 <_ZdlPvj>
9001e46a:	4620      	mov	r0, r4
9001e46c:	bd10      	pop	{r4, pc}

9001e46e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001e46e:	b510      	push	{r4, lr}
9001e470:	4604      	mov	r4, r0
9001e472:	2104      	movs	r1, #4
9001e474:	f00b f8b6 	bl	900295e4 <_ZdlPvj>
9001e478:	4620      	mov	r0, r4
9001e47a:	bd10      	pop	{r4, pc}

9001e47c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001e47c:	b510      	push	{r4, lr}
9001e47e:	4604      	mov	r4, r0
9001e480:	2104      	movs	r1, #4
9001e482:	f00b f8af 	bl	900295e4 <_ZdlPvj>
9001e486:	4620      	mov	r0, r4
9001e488:	bd10      	pop	{r4, pc}

9001e48a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001e48a:	b510      	push	{r4, lr}
9001e48c:	4604      	mov	r4, r0
9001e48e:	2104      	movs	r1, #4
9001e490:	f00b f8a8 	bl	900295e4 <_ZdlPvj>
9001e494:	4620      	mov	r0, r4
9001e496:	bd10      	pop	{r4, pc}

9001e498 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001e498:	b510      	push	{r4, lr}
9001e49a:	4604      	mov	r4, r0
9001e49c:	2104      	movs	r1, #4
9001e49e:	f00b f8a1 	bl	900295e4 <_ZdlPvj>
9001e4a2:	4620      	mov	r0, r4
9001e4a4:	bd10      	pop	{r4, pc}
	...

9001e4a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001e4a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e4ac:	b08f      	sub	sp, #60	; 0x3c
9001e4ae:	461c      	mov	r4, r3
9001e4b0:	9205      	str	r2, [sp, #20]
9001e4b2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001e4b6:	9100      	str	r1, [sp, #0]
9001e4b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001e4ba:	9201      	str	r2, [sp, #4]
9001e4bc:	2a00      	cmp	r2, #0
9001e4be:	f000 8116 	beq.w	9001e6ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001e4c2:	6820      	ldr	r0, [r4, #0]
9001e4c4:	aa0a      	add	r2, sp, #40	; 0x28
9001e4c6:	6861      	ldr	r1, [r4, #4]
9001e4c8:	c203      	stmia	r2!, {r0, r1}
9001e4ca:	6818      	ldr	r0, [r3, #0]
9001e4cc:	aa0c      	add	r2, sp, #48	; 0x30
9001e4ce:	6859      	ldr	r1, [r3, #4]
9001e4d0:	c203      	stmia	r2!, {r0, r1}
9001e4d2:	a80a      	add	r0, sp, #40	; 0x28
9001e4d4:	f7f9 fd92 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e4d8:	4621      	mov	r1, r4
9001e4da:	a80c      	add	r0, sp, #48	; 0x30
9001e4dc:	f7f9 fdd2 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e4e0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001e4e4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001e4e8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001e4ec:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001e4f0:	bfdb      	ittet	le
9001e4f2:	b2b3      	uxthle	r3, r6
9001e4f4:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001e4f8:	2301      	movgt	r3, #1
9001e4fa:	fb92 f3f3 	sdivle	r3, r2, r3
9001e4fe:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001e502:	441d      	add	r5, r3
9001e504:	fb92 f1f3 	sdiv	r1, r2, r3
9001e508:	fa1f fc81 	uxth.w	ip, r1
9001e50c:	3d01      	subs	r5, #1
9001e50e:	fb0c 2413 	mls	r4, ip, r3, r2
9001e512:	4661      	mov	r1, ip
9001e514:	fb14 f406 	smulbb	r4, r4, r6
9001e518:	4404      	add	r4, r0
9001e51a:	fb95 f5f3 	sdiv	r5, r5, r3
9001e51e:	b2a4      	uxth	r4, r4
9001e520:	b131      	cbz	r1, 9001e530 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001e522:	9b05      	ldr	r3, [sp, #20]
9001e524:	9900      	ldr	r1, [sp, #0]
9001e526:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e52a:	ba1b      	rev	r3, r3
9001e52c:	4419      	add	r1, r3
9001e52e:	9100      	str	r1, [sp, #0]
9001e530:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001e534:	b2ad      	uxth	r5, r5
9001e536:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001e53a:	4418      	add	r0, r3
9001e53c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001e540:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001e544:	00ad      	lsls	r5, r5, #2
9001e546:	441a      	add	r2, r3
9001e548:	4b6a      	ldr	r3, [pc, #424]	; (9001e6f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001e54a:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001e54e:	6818      	ldr	r0, [r3, #0]
9001e550:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001e554:	6803      	ldr	r3, [r0, #0]
9001e556:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e558:	4798      	blx	r3
9001e55a:	4967      	ldr	r1, [pc, #412]	; (9001e6f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001e55c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001e560:	2c00      	cmp	r4, #0
9001e562:	880b      	ldrh	r3, [r1, #0]
9001e564:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001e568:	bf0c      	ite	eq
9001e56a:	46c6      	moveq	lr, r8
9001e56c:	f04f 0e00 	movne.w	lr, #0
9001e570:	9109      	str	r1, [sp, #36]	; 0x24
9001e572:	fb03 c202 	mla	r2, r3, r2, ip
9001e576:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e57a:	4373      	muls	r3, r6
9001e57c:	fa1f fe8e 	uxth.w	lr, lr
9001e580:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e584:	9103      	str	r1, [sp, #12]
9001e586:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e58a:	9306      	str	r3, [sp, #24]
9001e58c:	1d2b      	adds	r3, r5, #4
9001e58e:	9307      	str	r3, [sp, #28]
9001e590:	9b01      	ldr	r3, [sp, #4]
9001e592:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001e596:	2300      	movs	r3, #0
9001e598:	b292      	uxth	r2, r2
9001e59a:	9302      	str	r3, [sp, #8]
9001e59c:	9204      	str	r2, [sp, #16]
9001e59e:	9a06      	ldr	r2, [sp, #24]
9001e5a0:	4282      	cmp	r2, r0
9001e5a2:	f240 809f 	bls.w	9001e6e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001e5a6:	b963      	cbnz	r3, 9001e5c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e5a8:	9b00      	ldr	r3, [sp, #0]
9001e5aa:	781a      	ldrb	r2, [r3, #0]
9001e5ac:	0993      	lsrs	r3, r2, #6
9001e5ae:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001e5b2:	9202      	str	r2, [sp, #8]
9001e5b4:	1e5a      	subs	r2, r3, #1
9001e5b6:	2a02      	cmp	r2, #2
9001e5b8:	d815      	bhi.n	9001e5e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001e5ba:	9a00      	ldr	r2, [sp, #0]
9001e5bc:	b29b      	uxth	r3, r3
9001e5be:	3201      	adds	r2, #1
9001e5c0:	9200      	str	r2, [sp, #0]
9001e5c2:	b1b4      	cbz	r4, 9001e5f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001e5c4:	429c      	cmp	r4, r3
9001e5c6:	bf91      	iteee	ls
9001e5c8:	1b1c      	subls	r4, r3, r4
9001e5ca:	1ae4      	subhi	r4, r4, r3
9001e5cc:	4671      	movhi	r1, lr
9001e5ce:	f04f 0a00 	movhi.w	sl, #0
9001e5d2:	bf9b      	ittet	ls
9001e5d4:	fa1f fa84 	uxthls.w	sl, r4
9001e5d8:	2400      	movls	r4, #0
9001e5da:	b2a4      	uxthhi	r4, r4
9001e5dc:	fa1f f188 	uxthls.w	r1, r8
9001e5e0:	4653      	mov	r3, sl
9001e5e2:	468e      	mov	lr, r1
9001e5e4:	e7db      	b.n	9001e59e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001e5e6:	9a00      	ldr	r2, [sp, #0]
9001e5e8:	9b00      	ldr	r3, [sp, #0]
9001e5ea:	3202      	adds	r2, #2
9001e5ec:	785b      	ldrb	r3, [r3, #1]
9001e5ee:	9200      	str	r2, [sp, #0]
9001e5f0:	e7e7      	b.n	9001e5c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e5f2:	2202      	movs	r2, #2
9001e5f4:	9907      	ldr	r1, [sp, #28]
9001e5f6:	4573      	cmp	r3, lr
9001e5f8:	4615      	mov	r5, r2
9001e5fa:	9a02      	ldr	r2, [sp, #8]
9001e5fc:	bf24      	itt	cs
9001e5fe:	eba3 0a0e 	subcs.w	sl, r3, lr
9001e602:	46f1      	movcs	r9, lr
9001e604:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e608:	9905      	ldr	r1, [sp, #20]
9001e60a:	bf34      	ite	cc
9001e60c:	4699      	movcc	r9, r3
9001e60e:	fa1f fa8a 	uxthcs.w	sl, sl
9001e612:	f831 c002 	ldrh.w	ip, [r1, r2]
9001e616:	bf38      	it	cc
9001e618:	ebae 0103 	subcc.w	r1, lr, r3
9001e61c:	9a01      	ldr	r2, [sp, #4]
9001e61e:	bf2e      	itee	cs
9001e620:	4621      	movcs	r1, r4
9001e622:	b289      	uxthcc	r1, r1
9001e624:	46a2      	movcc	sl, r4
9001e626:	2aff      	cmp	r2, #255	; 0xff
9001e628:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001e62c:	d105      	bne.n	9001e63a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001e62e:	4481      	add	r9, r0
9001e630:	4581      	cmp	r9, r0
9001e632:	d045      	beq.n	9001e6c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e634:	f820 cb02 	strh.w	ip, [r0], #2
9001e638:	e7fa      	b.n	9001e630 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001e63a:	ea4f 222c 	mov.w	r2, ip, asr #8
9001e63e:	9d03      	ldr	r5, [sp, #12]
9001e640:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001e644:	4481      	add	r9, r0
9001e646:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e64a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001e64e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001e652:	fa5f fc8c 	uxtb.w	ip, ip
9001e656:	436a      	muls	r2, r5
9001e658:	fb0b fb05 	mul.w	fp, fp, r5
9001e65c:	fb0c fc05 	mul.w	ip, ip, r5
9001e660:	9208      	str	r2, [sp, #32]
9001e662:	4581      	cmp	r9, r0
9001e664:	d02c      	beq.n	9001e6c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e666:	8802      	ldrh	r2, [r0, #0]
9001e668:	9d04      	ldr	r5, [sp, #16]
9001e66a:	1216      	asrs	r6, r2, #8
9001e66c:	9f04      	ldr	r7, [sp, #16]
9001e66e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001e672:	fb16 f605 	smulbb	r6, r6, r5
9001e676:	9d08      	ldr	r5, [sp, #32]
9001e678:	442e      	add	r6, r5
9001e67a:	10d5      	asrs	r5, r2, #3
9001e67c:	00d2      	lsls	r2, r2, #3
9001e67e:	b2b6      	uxth	r6, r6
9001e680:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e684:	b2d2      	uxtb	r2, r2
9001e686:	fb15 f507 	smulbb	r5, r5, r7
9001e68a:	fb12 f207 	smulbb	r2, r2, r7
9001e68e:	1c77      	adds	r7, r6, #1
9001e690:	445d      	add	r5, fp
9001e692:	4462      	add	r2, ip
9001e694:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001e698:	b2ad      	uxth	r5, r5
9001e69a:	b292      	uxth	r2, r2
9001e69c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001e6a0:	1c57      	adds	r7, r2, #1
9001e6a2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001e6a6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e6aa:	4316      	orrs	r6, r2
9001e6ac:	1c6a      	adds	r2, r5, #1
9001e6ae:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001e6b2:	096d      	lsrs	r5, r5, #5
9001e6b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001e6b8:	432e      	orrs	r6, r5
9001e6ba:	f820 6b02 	strh.w	r6, [r0], #2
9001e6be:	e7d0      	b.n	9001e662 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001e6c0:	4573      	cmp	r3, lr
9001e6c2:	d38d      	bcc.n	9001e5e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e6c4:	fa1f f188 	uxth.w	r1, r8
9001e6c8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001e6cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e6ce:	1a64      	subs	r4, r4, r1
9001e6d0:	881b      	ldrh	r3, [r3, #0]
9001e6d2:	b2a4      	uxth	r4, r4
9001e6d4:	eba3 0308 	sub.w	r3, r3, r8
9001e6d8:	2c00      	cmp	r4, #0
9001e6da:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e6de:	bf18      	it	ne
9001e6e0:	2100      	movne	r1, #0
9001e6e2:	e77d      	b.n	9001e5e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e6e4:	4b03      	ldr	r3, [pc, #12]	; (9001e6f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001e6e6:	6818      	ldr	r0, [r3, #0]
9001e6e8:	6803      	ldr	r3, [r0, #0]
9001e6ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e6ec:	4798      	blx	r3
9001e6ee:	b00f      	add	sp, #60	; 0x3c
9001e6f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e6f4:	24039acc 	.word	0x24039acc
9001e6f8:	24039ac6 	.word	0x24039ac6

9001e6fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001e6fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e700:	b09f      	sub	sp, #124	; 0x7c
9001e702:	461d      	mov	r5, r3
9001e704:	4604      	mov	r4, r0
9001e706:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001e708:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001e70c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001e710:	9209      	str	r2, [sp, #36]	; 0x24
9001e712:	2a00      	cmp	r2, #0
9001e714:	f000 81ed 	beq.w	9001eaf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001e718:	6828      	ldr	r0, [r5, #0]
9001e71a:	aa1a      	add	r2, sp, #104	; 0x68
9001e71c:	6869      	ldr	r1, [r5, #4]
9001e71e:	c203      	stmia	r2!, {r0, r1}
9001e720:	6818      	ldr	r0, [r3, #0]
9001e722:	aa1c      	add	r2, sp, #112	; 0x70
9001e724:	6859      	ldr	r1, [r3, #4]
9001e726:	c203      	stmia	r2!, {r0, r1}
9001e728:	a81a      	add	r0, sp, #104	; 0x68
9001e72a:	f7f9 fc67 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e72e:	4629      	mov	r1, r5
9001e730:	a81c      	add	r0, sp, #112	; 0x70
9001e732:	f7f9 fca7 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e736:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001e73a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001e73e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001e742:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001e746:	bfdb      	ittet	le
9001e748:	b29a      	uxthle	r2, r3
9001e74a:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001e74e:	2201      	movgt	r2, #1
9001e750:	fb91 f2f2 	sdivle	r2, r1, r2
9001e754:	9202      	str	r2, [sp, #8]
9001e756:	9802      	ldr	r0, [sp, #8]
9001e758:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001e75c:	9902      	ldr	r1, [sp, #8]
9001e75e:	fb92 f0f0 	sdiv	r0, r2, r0
9001e762:	b280      	uxth	r0, r0
9001e764:	4488      	add	r8, r1
9001e766:	9010      	str	r0, [sp, #64]	; 0x40
9001e768:	f108 38ff 	add.w	r8, r8, #4294967295
9001e76c:	9802      	ldr	r0, [sp, #8]
9001e76e:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001e770:	fb05 2510 	mls	r5, r5, r0, r2
9001e774:	fb98 f8f1 	sdiv	r8, r8, r1
9001e778:	fb15 f503 	smulbb	r5, r5, r3
9001e77c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001e780:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001e784:	f108 0801 	add.w	r8, r8, #1
9001e788:	440d      	add	r5, r1
9001e78a:	4419      	add	r1, r3
9001e78c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001e790:	fa1f f888 	uxth.w	r8, r8
9001e794:	441a      	add	r2, r3
9001e796:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001e79a:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001e79e:	b2ad      	uxth	r5, r5
9001e7a0:	9304      	str	r3, [sp, #16]
9001e7a2:	4b94      	ldr	r3, [pc, #592]	; (9001e9f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001e7a4:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001e7a8:	6818      	ldr	r0, [r3, #0]
9001e7aa:	6803      	ldr	r3, [r0, #0]
9001e7ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e7ae:	4798      	blx	r3
9001e7b0:	4b91      	ldr	r3, [pc, #580]	; (9001e9f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001e7b2:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001e7b6:	2d00      	cmp	r5, #0
9001e7b8:	881a      	ldrh	r2, [r3, #0]
9001e7ba:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001e7be:	fb02 f606 	mul.w	r6, r2, r6
9001e7c2:	fb02 7101 	mla	r1, r2, r1, r7
9001e7c6:	9318      	str	r3, [sp, #96]	; 0x60
9001e7c8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e7cc:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001e7d0:	f04f 0100 	mov.w	r1, #0
9001e7d4:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001e7d8:	930f      	str	r3, [sp, #60]	; 0x3c
9001e7da:	4b88      	ldr	r3, [pc, #544]	; (9001e9fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001e7dc:	920a      	str	r2, [sp, #40]	; 0x28
9001e7de:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001e7e0:	eba3 0304 	sub.w	r3, r3, r4
9001e7e4:	910d      	str	r1, [sp, #52]	; 0x34
9001e7e6:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001e7ea:	9319      	str	r3, [sp, #100]	; 0x64
9001e7ec:	f108 0204 	add.w	r2, r8, #4
9001e7f0:	9211      	str	r2, [sp, #68]	; 0x44
9001e7f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001e7f4:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001e7f8:	9215      	str	r2, [sp, #84]	; 0x54
9001e7fa:	9a04      	ldr	r2, [sp, #16]
9001e7fc:	bf18      	it	ne
9001e7fe:	2200      	movne	r2, #0
9001e800:	b292      	uxth	r2, r2
9001e802:	9910      	ldr	r1, [sp, #64]	; 0x40
9001e804:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e806:	fa11 f383 	uxtah	r3, r1, r3
9001e80a:	9914      	ldr	r1, [sp, #80]	; 0x50
9001e80c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001e810:	3304      	adds	r3, #4
9001e812:	9306      	str	r3, [sp, #24]
9001e814:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001e816:	4283      	cmp	r3, r0
9001e818:	f240 8166 	bls.w	9001eae8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001e81c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001e820:	f04f 0a01 	mov.w	sl, #1
9001e824:	9902      	ldr	r1, [sp, #8]
9001e826:	9e06      	ldr	r6, [sp, #24]
9001e828:	46d3      	mov	fp, sl
9001e82a:	4657      	mov	r7, sl
9001e82c:	7836      	ldrb	r6, [r6, #0]
9001e82e:	fbb5 f3f3 	udiv	r3, r5, r3
9001e832:	1acb      	subs	r3, r1, r3
9001e834:	9612      	str	r6, [sp, #72]	; 0x48
9001e836:	3601      	adds	r6, #1
9001e838:	b29b      	uxth	r3, r3
9001e83a:	9605      	str	r6, [sp, #20]
9001e83c:	9316      	str	r3, [sp, #88]	; 0x58
9001e83e:	9b06      	ldr	r3, [sp, #24]
9001e840:	7859      	ldrb	r1, [r3, #1]
9001e842:	789b      	ldrb	r3, [r3, #2]
9001e844:	021b      	lsls	r3, r3, #8
9001e846:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001e84a:	9906      	ldr	r1, [sp, #24]
9001e84c:	78c9      	ldrb	r1, [r1, #3]
9001e84e:	430b      	orrs	r3, r1
9001e850:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001e852:	4419      	add	r1, r3
9001e854:	1c4e      	adds	r6, r1, #1
9001e856:	7849      	ldrb	r1, [r1, #1]
9001e858:	9603      	str	r6, [sp, #12]
9001e85a:	0209      	lsls	r1, r1, #8
9001e85c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001e85e:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001e862:	5cf3      	ldrb	r3, [r6, r3]
9001e864:	4319      	orrs	r1, r3
9001e866:	b28b      	uxth	r3, r1
9001e868:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001e86c:	930c      	str	r3, [sp, #48]	; 0x30
9001e86e:	2300      	movs	r3, #0
9001e870:	9307      	str	r3, [sp, #28]
9001e872:	469c      	mov	ip, r3
9001e874:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001e878:	930e      	str	r3, [sp, #56]	; 0x38
9001e87a:	2d00      	cmp	r5, #0
9001e87c:	d07e      	beq.n	9001e97c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001e87e:	42af      	cmp	r7, r5
9001e880:	d26e      	bcs.n	9001e960 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001e882:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001e884:	1bed      	subs	r5, r5, r7
9001e886:	9201      	str	r2, [sp, #4]
9001e888:	4283      	cmp	r3, r0
9001e88a:	b2ad      	uxth	r5, r5
9001e88c:	d802      	bhi.n	9001e894 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001e88e:	e073      	b.n	9001e978 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001e890:	2b00      	cmp	r3, #0
9001e892:	d15f      	bne.n	9001e954 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001e894:	9b03      	ldr	r3, [sp, #12]
9001e896:	f1cb 0207 	rsb	r2, fp, #7
9001e89a:	785b      	ldrb	r3, [r3, #1]
9001e89c:	4093      	lsls	r3, r2
9001e89e:	005b      	lsls	r3, r3, #1
9001e8a0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001e8a4:	9b03      	ldr	r3, [sp, #12]
9001e8a6:	781b      	ldrb	r3, [r3, #0]
9001e8a8:	fa43 f30b 	asr.w	r3, r3, fp
9001e8ac:	b2db      	uxtb	r3, r3
9001e8ae:	4313      	orrs	r3, r2
9001e8b0:	f10b 0201 	add.w	r2, fp, #1
9001e8b4:	fa5f fb82 	uxtb.w	fp, r2
9001e8b8:	9a03      	ldr	r2, [sp, #12]
9001e8ba:	b29f      	uxth	r7, r3
9001e8bc:	f1bb 0f08 	cmp.w	fp, #8
9001e8c0:	bf13      	iteet	ne
9001e8c2:	3201      	addne	r2, #1
9001e8c4:	3202      	addeq	r2, #2
9001e8c6:	f04f 0b00 	moveq.w	fp, #0
9001e8ca:	9203      	strne	r2, [sp, #12]
9001e8cc:	bf08      	it	eq
9001e8ce:	9203      	streq	r2, [sp, #12]
9001e8d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001e8d2:	42ba      	cmp	r2, r7
9001e8d4:	d309      	bcc.n	9001e8ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001e8d6:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001e8da:	2301      	movs	r3, #1
9001e8dc:	9a05      	ldr	r2, [sp, #20]
9001e8de:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001e8e2:	d30e      	bcc.n	9001e902 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001e8e4:	469a      	mov	sl, r3
9001e8e6:	2600      	movs	r6, #0
9001e8e8:	e035      	b.n	9001e956 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001e8ea:	9b05      	ldr	r3, [sp, #20]
9001e8ec:	429f      	cmp	r7, r3
9001e8ee:	d318      	bcc.n	9001e922 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001e8f0:	eb04 030a 	add.w	r3, r4, sl
9001e8f4:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001e8f8:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001e8fc:	f10a 0301 	add.w	r3, sl, #1
9001e900:	b29b      	uxth	r3, r3
9001e902:	9a05      	ldr	r2, [sp, #20]
9001e904:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001e908:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e90c:	990c      	ldr	r1, [sp, #48]	; 0x30
9001e90e:	7116      	strb	r6, [r2, #4]
9001e910:	f10a 0601 	add.w	r6, sl, #1
9001e914:	80d1      	strh	r1, [r2, #6]
9001e916:	7156      	strb	r6, [r2, #5]
9001e918:	9a05      	ldr	r2, [sp, #20]
9001e91a:	3201      	adds	r2, #1
9001e91c:	b292      	uxth	r2, r2
9001e91e:	9205      	str	r2, [sp, #20]
9001e920:	e7e0      	b.n	9001e8e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001e922:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001e926:	463a      	mov	r2, r7
9001e928:	795b      	ldrb	r3, [r3, #5]
9001e92a:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001e92e:	4426      	add	r6, r4
9001e930:	9919      	ldr	r1, [sp, #100]	; 0x64
9001e932:	eb01 0c06 	add.w	ip, r1, r6
9001e936:	f1bc 0f00 	cmp.w	ip, #0
9001e93a:	dd07      	ble.n	9001e94c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001e93c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e940:	f892 c004 	ldrb.w	ip, [r2, #4]
9001e944:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001e948:	88d2      	ldrh	r2, [r2, #6]
9001e94a:	e7f1      	b.n	9001e930 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001e94c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001e950:	b29b      	uxth	r3, r3
9001e952:	e7c3      	b.n	9001e8dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001e954:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001e956:	970c      	str	r7, [sp, #48]	; 0x30
9001e958:	46b4      	mov	ip, r6
9001e95a:	9a01      	ldr	r2, [sp, #4]
9001e95c:	461f      	mov	r7, r3
9001e95e:	e78c      	b.n	9001e87a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001e960:	1b7b      	subs	r3, r7, r5
9001e962:	eb0c 0605 	add.w	r6, ip, r5
9001e966:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e96a:	b29b      	uxth	r3, r3
9001e96c:	b2b6      	uxth	r6, r6
9001e96e:	9201      	str	r2, [sp, #4]
9001e970:	2500      	movs	r5, #0
9001e972:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001e974:	4282      	cmp	r2, r0
9001e976:	d88b      	bhi.n	9001e890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001e978:	9a01      	ldr	r2, [sp, #4]
9001e97a:	e74b      	b.n	9001e814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001e97c:	4297      	cmp	r7, r2
9001e97e:	d332      	bcc.n	9001e9e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001e980:	1abb      	subs	r3, r7, r2
9001e982:	9208      	str	r2, [sp, #32]
9001e984:	9501      	str	r5, [sp, #4]
9001e986:	b29b      	uxth	r3, r3
9001e988:	9909      	ldr	r1, [sp, #36]	; 0x24
9001e98a:	29ff      	cmp	r1, #255	; 0xff
9001e98c:	9908      	ldr	r1, [sp, #32]
9001e98e:	eb0c 0601 	add.w	r6, ip, r1
9001e992:	d135      	bne.n	9001ea00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001e994:	f1a0 0e02 	sub.w	lr, r0, #2
9001e998:	b2b6      	uxth	r6, r6
9001e99a:	45b4      	cmp	ip, r6
9001e99c:	f040 808c 	bne.w	9001eab8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001e9a0:	9908      	ldr	r1, [sp, #32]
9001e9a2:	4297      	cmp	r7, r2
9001e9a4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e9a8:	d3e2      	bcc.n	9001e970 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001e9aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001e9ac:	9904      	ldr	r1, [sp, #16]
9001e9ae:	8812      	ldrh	r2, [r2, #0]
9001e9b0:	1a52      	subs	r2, r2, r1
9001e9b2:	9916      	ldr	r1, [sp, #88]	; 0x58
9001e9b4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e9b8:	9a07      	ldr	r2, [sp, #28]
9001e9ba:	3201      	adds	r2, #1
9001e9bc:	428a      	cmp	r2, r1
9001e9be:	9207      	str	r2, [sp, #28]
9001e9c0:	f040 8087 	bne.w	9001ead2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001e9c4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001e9c8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001e9cc:	9b04      	ldr	r3, [sp, #16]
9001e9ce:	1bed      	subs	r5, r5, r7
9001e9d0:	b2ad      	uxth	r5, r5
9001e9d2:	2d00      	cmp	r5, #0
9001e9d4:	bf08      	it	eq
9001e9d6:	461a      	moveq	r2, r3
9001e9d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e9da:	bf18      	it	ne
9001e9dc:	2200      	movne	r2, #0
9001e9de:	3301      	adds	r3, #1
9001e9e0:	b292      	uxth	r2, r2
9001e9e2:	930d      	str	r3, [sp, #52]	; 0x34
9001e9e4:	e70d      	b.n	9001e802 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001e9e6:	1bd1      	subs	r1, r2, r7
9001e9e8:	9708      	str	r7, [sp, #32]
9001e9ea:	b28b      	uxth	r3, r1
9001e9ec:	9301      	str	r3, [sp, #4]
9001e9ee:	462b      	mov	r3, r5
9001e9f0:	e7ca      	b.n	9001e988 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001e9f2:	bf00      	nop
9001e9f4:	24039acc 	.word	0x24039acc
9001e9f8:	24039ac6 	.word	0x24039ac6
9001e9fc:	fffff7fb 	.word	0xfffff7fb
9001ea00:	b2b6      	uxth	r6, r6
9001ea02:	900b      	str	r0, [sp, #44]	; 0x2c
9001ea04:	45b4      	cmp	ip, r6
9001ea06:	d0cb      	beq.n	9001e9a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001ea08:	f10c 0101 	add.w	r1, ip, #1
9001ea0c:	44a4      	add	ip, r4
9001ea0e:	9117      	str	r1, [sp, #92]	; 0x5c
9001ea10:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001ea14:	9911      	ldr	r1, [sp, #68]	; 0x44
9001ea16:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001ea1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001ea1c:	ea4f 2825 	mov.w	r8, r5, asr #8
9001ea20:	f8b1 c000 	ldrh.w	ip, [r1]
9001ea24:	990e      	ldr	r1, [sp, #56]	; 0x38
9001ea26:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001ea2a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001ea2e:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001ea32:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001ea36:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ea3a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001ea3e:	fb1e fe01 	smulbb	lr, lr, r1
9001ea42:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001ea44:	fa5f fc8c 	uxtb.w	ip, ip
9001ea48:	fb08 e801 	mla	r8, r8, r1, lr
9001ea4c:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001ea50:	990e      	ldr	r1, [sp, #56]	; 0x38
9001ea52:	00ed      	lsls	r5, r5, #3
9001ea54:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001ea58:	fa1f f888 	uxth.w	r8, r8
9001ea5c:	fb19 f901 	smulbb	r9, r9, r1
9001ea60:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001ea62:	b2ed      	uxtb	r5, r5
9001ea64:	fb0e 9e01 	mla	lr, lr, r1, r9
9001ea68:	990e      	ldr	r1, [sp, #56]	; 0x38
9001ea6a:	fb1c fc01 	smulbb	ip, ip, r1
9001ea6e:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001ea70:	fa1f fe8e 	uxth.w	lr, lr
9001ea74:	fb05 c501 	mla	r5, r5, r1, ip
9001ea78:	f108 0c01 	add.w	ip, r8, #1
9001ea7c:	f10e 0901 	add.w	r9, lr, #1
9001ea80:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001ea82:	b2ad      	uxth	r5, r5
9001ea84:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001ea88:	f105 0c01 	add.w	ip, r5, #1
9001ea8c:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001ea90:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001ea94:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001ea98:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001ea9c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001eaa0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001eaa4:	ea4c 0808 	orr.w	r8, ip, r8
9001eaa8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001eaac:	ea48 0809 	orr.w	r8, r8, r9
9001eab0:	f821 8b02 	strh.w	r8, [r1], #2
9001eab4:	910b      	str	r1, [sp, #44]	; 0x2c
9001eab6:	e7a5      	b.n	9001ea04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001eab8:	f10c 0801 	add.w	r8, ip, #1
9001eabc:	44a4      	add	ip, r4
9001eabe:	9911      	ldr	r1, [sp, #68]	; 0x44
9001eac0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001eac4:	fa1f fc88 	uxth.w	ip, r8
9001eac8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001eacc:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001ead0:	e763      	b.n	9001e99a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001ead2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ead6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001eada:	1aad      	subs	r5, r5, r2
9001eadc:	b2ad      	uxth	r5, r5
9001eade:	2d00      	cmp	r5, #0
9001eae0:	bf18      	it	ne
9001eae2:	2200      	movne	r2, #0
9001eae4:	9201      	str	r2, [sp, #4]
9001eae6:	e744      	b.n	9001e972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001eae8:	4b03      	ldr	r3, [pc, #12]	; (9001eaf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001eaea:	6818      	ldr	r0, [r3, #0]
9001eaec:	6803      	ldr	r3, [r0, #0]
9001eaee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001eaf0:	4798      	blx	r3
9001eaf2:	b01f      	add	sp, #124	; 0x7c
9001eaf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eaf8:	24039acc 	.word	0x24039acc

9001eafc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001eafc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eb00:	b08f      	sub	sp, #60	; 0x3c
9001eb02:	461c      	mov	r4, r3
9001eb04:	460f      	mov	r7, r1
9001eb06:	9203      	str	r2, [sp, #12]
9001eb08:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001eb0c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001eb0e:	9202      	str	r2, [sp, #8]
9001eb10:	2a00      	cmp	r2, #0
9001eb12:	f000 8128 	beq.w	9001ed66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001eb16:	6820      	ldr	r0, [r4, #0]
9001eb18:	aa0a      	add	r2, sp, #40	; 0x28
9001eb1a:	6861      	ldr	r1, [r4, #4]
9001eb1c:	c203      	stmia	r2!, {r0, r1}
9001eb1e:	6818      	ldr	r0, [r3, #0]
9001eb20:	aa0c      	add	r2, sp, #48	; 0x30
9001eb22:	6859      	ldr	r1, [r3, #4]
9001eb24:	c203      	stmia	r2!, {r0, r1}
9001eb26:	a80a      	add	r0, sp, #40	; 0x28
9001eb28:	f7f9 fa68 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001eb2c:	4621      	mov	r1, r4
9001eb2e:	a80c      	add	r0, sp, #48	; 0x30
9001eb30:	f7f9 faa8 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001eb34:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001eb38:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001eb3c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001eb40:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001eb44:	bfdb      	ittet	le
9001eb46:	b2b3      	uxthle	r3, r6
9001eb48:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001eb4c:	2301      	movgt	r3, #1
9001eb4e:	fb92 f3f3 	sdivle	r3, r2, r3
9001eb52:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001eb56:	441d      	add	r5, r3
9001eb58:	fb92 f1f3 	sdiv	r1, r2, r3
9001eb5c:	fa1f fc81 	uxth.w	ip, r1
9001eb60:	3d01      	subs	r5, #1
9001eb62:	fb0c 2413 	mls	r4, ip, r3, r2
9001eb66:	4661      	mov	r1, ip
9001eb68:	fb14 f406 	smulbb	r4, r4, r6
9001eb6c:	4404      	add	r4, r0
9001eb6e:	fb95 f5f3 	sdiv	r5, r5, r3
9001eb72:	b2a4      	uxth	r4, r4
9001eb74:	b121      	cbz	r1, 9001eb80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001eb76:	9b03      	ldr	r3, [sp, #12]
9001eb78:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001eb7c:	ba1b      	rev	r3, r3
9001eb7e:	441f      	add	r7, r3
9001eb80:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001eb84:	b2ad      	uxth	r5, r5
9001eb86:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001eb8a:	4418      	add	r0, r3
9001eb8c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001eb90:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001eb94:	00ad      	lsls	r5, r5, #2
9001eb96:	441a      	add	r2, r3
9001eb98:	4b74      	ldr	r3, [pc, #464]	; (9001ed6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001eb9a:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001eb9e:	6818      	ldr	r0, [r3, #0]
9001eba0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001eba4:	6803      	ldr	r3, [r0, #0]
9001eba6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001eba8:	4798      	blx	r3
9001ebaa:	4a71      	ldr	r2, [pc, #452]	; (9001ed70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001ebac:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001ebb0:	2c00      	cmp	r4, #0
9001ebb2:	8813      	ldrh	r3, [r2, #0]
9001ebb4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001ebb8:	bf0c      	ite	eq
9001ebba:	46c8      	moveq	r8, r9
9001ebbc:	f04f 0800 	movne.w	r8, #0
9001ebc0:	9209      	str	r2, [sp, #36]	; 0x24
9001ebc2:	fb03 c101 	mla	r1, r3, r1, ip
9001ebc6:	4373      	muls	r3, r6
9001ebc8:	fa1f f888 	uxth.w	r8, r8
9001ebcc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ebd0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ebd4:	9304      	str	r3, [sp, #16]
9001ebd6:	1d2b      	adds	r3, r5, #4
9001ebd8:	9305      	str	r3, [sp, #20]
9001ebda:	2300      	movs	r3, #0
9001ebdc:	9301      	str	r3, [sp, #4]
9001ebde:	9a04      	ldr	r2, [sp, #16]
9001ebe0:	4282      	cmp	r2, r0
9001ebe2:	f240 80bb 	bls.w	9001ed5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001ebe6:	b95b      	cbnz	r3, 9001ec00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001ebe8:	783a      	ldrb	r2, [r7, #0]
9001ebea:	0993      	lsrs	r3, r2, #6
9001ebec:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001ebf0:	9201      	str	r2, [sp, #4]
9001ebf2:	1e5a      	subs	r2, r3, #1
9001ebf4:	2a02      	cmp	r2, #2
9001ebf6:	bf8d      	iteet	hi
9001ebf8:	787b      	ldrbhi	r3, [r7, #1]
9001ebfa:	3701      	addls	r7, #1
9001ebfc:	b29b      	uxthls	r3, r3
9001ebfe:	3702      	addhi	r7, #2
9001ec00:	b184      	cbz	r4, 9001ec24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001ec02:	429c      	cmp	r4, r3
9001ec04:	bf91      	iteee	ls
9001ec06:	1b1c      	subls	r4, r3, r4
9001ec08:	1ae4      	subhi	r4, r4, r3
9001ec0a:	46c4      	movhi	ip, r8
9001ec0c:	f04f 0a00 	movhi.w	sl, #0
9001ec10:	bf9b      	ittet	ls
9001ec12:	fa1f fa84 	uxthls.w	sl, r4
9001ec16:	2400      	movls	r4, #0
9001ec18:	b2a4      	uxthhi	r4, r4
9001ec1a:	fa1f fc89 	uxthls.w	ip, r9
9001ec1e:	4653      	mov	r3, sl
9001ec20:	46e0      	mov	r8, ip
9001ec22:	e7dc      	b.n	9001ebde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001ec24:	2204      	movs	r2, #4
9001ec26:	9905      	ldr	r1, [sp, #20]
9001ec28:	4543      	cmp	r3, r8
9001ec2a:	4615      	mov	r5, r2
9001ec2c:	9a01      	ldr	r2, [sp, #4]
9001ec2e:	bf24      	itt	cs
9001ec30:	eba3 0a08 	subcs.w	sl, r3, r8
9001ec34:	46c6      	movcs	lr, r8
9001ec36:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ec3a:	9903      	ldr	r1, [sp, #12]
9001ec3c:	bf3c      	itt	cc
9001ec3e:	eba8 0c03 	subcc.w	ip, r8, r3
9001ec42:	469e      	movcc	lr, r3
9001ec44:	588a      	ldr	r2, [r1, r2]
9001ec46:	bf26      	itte	cs
9001ec48:	fa1f fa8a 	uxthcs.w	sl, sl
9001ec4c:	46a4      	movcs	ip, r4
9001ec4e:	fa1f fc8c 	uxthcc.w	ip, ip
9001ec52:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001ec56:	bf38      	it	cc
9001ec58:	46a2      	movcc	sl, r4
9001ec5a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001ec5e:	2900      	cmp	r1, #0
9001ec60:	d066      	beq.n	9001ed30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001ec62:	29ff      	cmp	r1, #255	; 0xff
9001ec64:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001ec68:	d114      	bne.n	9001ec94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001ec6a:	9d02      	ldr	r5, [sp, #8]
9001ec6c:	2dff      	cmp	r5, #255	; 0xff
9001ec6e:	d111      	bne.n	9001ec94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001ec70:	0951      	lsrs	r1, r2, #5
9001ec72:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001ec76:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001ec7a:	4486      	add	lr, r0
9001ec7c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001ec80:	f026 0607 	bic.w	r6, r6, #7
9001ec84:	430e      	orrs	r6, r1
9001ec86:	4316      	orrs	r6, r2
9001ec88:	b2b6      	uxth	r6, r6
9001ec8a:	4586      	cmp	lr, r0
9001ec8c:	d051      	beq.n	9001ed32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ec8e:	f820 6b02 	strh.w	r6, [r0], #2
9001ec92:	e7fa      	b.n	9001ec8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001ec94:	9d02      	ldr	r5, [sp, #8]
9001ec96:	b2f6      	uxtb	r6, r6
9001ec98:	4486      	add	lr, r0
9001ec9a:	4369      	muls	r1, r5
9001ec9c:	1c4d      	adds	r5, r1, #1
9001ec9e:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001eca2:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001eca6:	b2d2      	uxtb	r2, r2
9001eca8:	122d      	asrs	r5, r5, #8
9001ecaa:	ea6f 0b05 	mvn.w	fp, r5
9001ecae:	b2ad      	uxth	r5, r5
9001ecb0:	fb11 f105 	smulbb	r1, r1, r5
9001ecb4:	fa5f fb8b 	uxtb.w	fp, fp
9001ecb8:	fb16 f605 	smulbb	r6, r6, r5
9001ecbc:	fb12 f205 	smulbb	r2, r2, r5
9001ecc0:	b289      	uxth	r1, r1
9001ecc2:	b2b6      	uxth	r6, r6
9001ecc4:	b292      	uxth	r2, r2
9001ecc6:	9106      	str	r1, [sp, #24]
9001ecc8:	9607      	str	r6, [sp, #28]
9001ecca:	9208      	str	r2, [sp, #32]
9001eccc:	4586      	cmp	lr, r0
9001ecce:	d030      	beq.n	9001ed32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ecd0:	8802      	ldrh	r2, [r0, #0]
9001ecd2:	9906      	ldr	r1, [sp, #24]
9001ecd4:	1216      	asrs	r6, r2, #8
9001ecd6:	10d5      	asrs	r5, r2, #3
9001ecd8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ecdc:	00d2      	lsls	r2, r2, #3
9001ecde:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001ece2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001ece6:	b2d2      	uxtb	r2, r2
9001ece8:	fb06 160b 	mla	r6, r6, fp, r1
9001ecec:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001ecf0:	9907      	ldr	r1, [sp, #28]
9001ecf2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ecf6:	b2b6      	uxth	r6, r6
9001ecf8:	fb05 150b 	mla	r5, r5, fp, r1
9001ecfc:	9908      	ldr	r1, [sp, #32]
9001ecfe:	fb02 120b 	mla	r2, r2, fp, r1
9001ed02:	1c71      	adds	r1, r6, #1
9001ed04:	b2ad      	uxth	r5, r5
9001ed06:	b292      	uxth	r2, r2
9001ed08:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001ed0c:	1c51      	adds	r1, r2, #1
9001ed0e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001ed12:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001ed16:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ed1a:	4316      	orrs	r6, r2
9001ed1c:	1c6a      	adds	r2, r5, #1
9001ed1e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001ed22:	096d      	lsrs	r5, r5, #5
9001ed24:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001ed28:	432e      	orrs	r6, r5
9001ed2a:	f820 6b02 	strh.w	r6, [r0], #2
9001ed2e:	e7cd      	b.n	9001eccc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001ed30:	4470      	add	r0, lr
9001ed32:	4543      	cmp	r3, r8
9001ed34:	f4ff af73 	bcc.w	9001ec1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ed38:	fa1f fc89 	uxth.w	ip, r9
9001ed3c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001ed40:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ed42:	eba4 040c 	sub.w	r4, r4, ip
9001ed46:	881b      	ldrh	r3, [r3, #0]
9001ed48:	b2a4      	uxth	r4, r4
9001ed4a:	eba3 0309 	sub.w	r3, r3, r9
9001ed4e:	2c00      	cmp	r4, #0
9001ed50:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ed54:	bf18      	it	ne
9001ed56:	f04f 0c00 	movne.w	ip, #0
9001ed5a:	e760      	b.n	9001ec1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ed5c:	4b03      	ldr	r3, [pc, #12]	; (9001ed6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001ed5e:	6818      	ldr	r0, [r3, #0]
9001ed60:	6803      	ldr	r3, [r0, #0]
9001ed62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ed64:	4798      	blx	r3
9001ed66:	b00f      	add	sp, #60	; 0x3c
9001ed68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ed6c:	24039acc 	.word	0x24039acc
9001ed70:	24039ac6 	.word	0x24039ac6

9001ed74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001ed74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ed78:	b093      	sub	sp, #76	; 0x4c
9001ed7a:	461c      	mov	r4, r3
9001ed7c:	9205      	str	r2, [sp, #20]
9001ed7e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001ed82:	9101      	str	r1, [sp, #4]
9001ed84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001ed86:	9202      	str	r2, [sp, #8]
9001ed88:	2a00      	cmp	r2, #0
9001ed8a:	f000 812e 	beq.w	9001efea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001ed8e:	6820      	ldr	r0, [r4, #0]
9001ed90:	aa0e      	add	r2, sp, #56	; 0x38
9001ed92:	6861      	ldr	r1, [r4, #4]
9001ed94:	c203      	stmia	r2!, {r0, r1}
9001ed96:	6818      	ldr	r0, [r3, #0]
9001ed98:	aa10      	add	r2, sp, #64	; 0x40
9001ed9a:	6859      	ldr	r1, [r3, #4]
9001ed9c:	c203      	stmia	r2!, {r0, r1}
9001ed9e:	a80e      	add	r0, sp, #56	; 0x38
9001eda0:	f7f9 f92c 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001eda4:	4621      	mov	r1, r4
9001eda6:	a810      	add	r0, sp, #64	; 0x40
9001eda8:	f7f9 f96c 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001edac:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001edb0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001edb4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001edb8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001edbc:	bfdb      	ittet	le
9001edbe:	b2b3      	uxthle	r3, r6
9001edc0:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001edc4:	2301      	movgt	r3, #1
9001edc6:	fb92 f3f3 	sdivle	r3, r2, r3
9001edca:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001edce:	441d      	add	r5, r3
9001edd0:	fb92 f1f3 	sdiv	r1, r2, r3
9001edd4:	fa1f fc81 	uxth.w	ip, r1
9001edd8:	3d01      	subs	r5, #1
9001edda:	fb0c 2413 	mls	r4, ip, r3, r2
9001edde:	4661      	mov	r1, ip
9001ede0:	fb14 f406 	smulbb	r4, r4, r6
9001ede4:	4404      	add	r4, r0
9001ede6:	fb95 f5f3 	sdiv	r5, r5, r3
9001edea:	b2a4      	uxth	r4, r4
9001edec:	b131      	cbz	r1, 9001edfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001edee:	9b05      	ldr	r3, [sp, #20]
9001edf0:	9901      	ldr	r1, [sp, #4]
9001edf2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001edf6:	ba1b      	rev	r3, r3
9001edf8:	4419      	add	r1, r3
9001edfa:	9101      	str	r1, [sp, #4]
9001edfc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001ee00:	b2ad      	uxth	r5, r5
9001ee02:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001ee06:	4418      	add	r0, r3
9001ee08:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001ee0c:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001ee10:	00ad      	lsls	r5, r5, #2
9001ee12:	441a      	add	r2, r3
9001ee14:	4b76      	ldr	r3, [pc, #472]	; (9001eff0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001ee16:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001ee1a:	6818      	ldr	r0, [r3, #0]
9001ee1c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001ee20:	6803      	ldr	r3, [r0, #0]
9001ee22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ee24:	4798      	blx	r3
9001ee26:	4973      	ldr	r1, [pc, #460]	; (9001eff4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001ee28:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001ee2c:	2c00      	cmp	r4, #0
9001ee2e:	880b      	ldrh	r3, [r1, #0]
9001ee30:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001ee34:	910d      	str	r1, [sp, #52]	; 0x34
9001ee36:	fb03 c202 	mla	r2, r3, r2, ip
9001ee3a:	bf08      	it	eq
9001ee3c:	46dc      	moveq	ip, fp
9001ee3e:	fb03 f306 	mul.w	r3, r3, r6
9001ee42:	bf18      	it	ne
9001ee44:	f04f 0c00 	movne.w	ip, #0
9001ee48:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ee4c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001ee50:	fa1f fc8c 	uxth.w	ip, ip
9001ee54:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ee58:	9106      	str	r1, [sp, #24]
9001ee5a:	9308      	str	r3, [sp, #32]
9001ee5c:	1d2b      	adds	r3, r5, #4
9001ee5e:	9309      	str	r3, [sp, #36]	; 0x24
9001ee60:	9b02      	ldr	r3, [sp, #8]
9001ee62:	43da      	mvns	r2, r3
9001ee64:	2300      	movs	r3, #0
9001ee66:	b2d2      	uxtb	r2, r2
9001ee68:	9303      	str	r3, [sp, #12]
9001ee6a:	9207      	str	r2, [sp, #28]
9001ee6c:	9a08      	ldr	r2, [sp, #32]
9001ee6e:	4282      	cmp	r2, r0
9001ee70:	f240 80b6 	bls.w	9001efe0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001ee74:	b963      	cbnz	r3, 9001ee90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001ee76:	9b01      	ldr	r3, [sp, #4]
9001ee78:	781a      	ldrb	r2, [r3, #0]
9001ee7a:	0993      	lsrs	r3, r2, #6
9001ee7c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001ee80:	9203      	str	r2, [sp, #12]
9001ee82:	1e5a      	subs	r2, r3, #1
9001ee84:	2a02      	cmp	r2, #2
9001ee86:	d815      	bhi.n	9001eeb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001ee88:	9a01      	ldr	r2, [sp, #4]
9001ee8a:	b29b      	uxth	r3, r3
9001ee8c:	3201      	adds	r2, #1
9001ee8e:	9201      	str	r2, [sp, #4]
9001ee90:	b1b4      	cbz	r4, 9001eec0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001ee92:	429c      	cmp	r4, r3
9001ee94:	bf91      	iteee	ls
9001ee96:	1b1c      	subls	r4, r3, r4
9001ee98:	1ae4      	subhi	r4, r4, r3
9001ee9a:	4666      	movhi	r6, ip
9001ee9c:	f04f 0800 	movhi.w	r8, #0
9001eea0:	bf9b      	ittet	ls
9001eea2:	fa1f f884 	uxthls.w	r8, r4
9001eea6:	2400      	movls	r4, #0
9001eea8:	b2a4      	uxthhi	r4, r4
9001eeaa:	fa1f f68b 	uxthls.w	r6, fp
9001eeae:	4643      	mov	r3, r8
9001eeb0:	46b4      	mov	ip, r6
9001eeb2:	e7db      	b.n	9001ee6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001eeb4:	9a01      	ldr	r2, [sp, #4]
9001eeb6:	9b01      	ldr	r3, [sp, #4]
9001eeb8:	3202      	adds	r2, #2
9001eeba:	785b      	ldrb	r3, [r3, #1]
9001eebc:	9201      	str	r2, [sp, #4]
9001eebe:	e7e7      	b.n	9001ee90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001eec0:	2203      	movs	r2, #3
9001eec2:	9909      	ldr	r1, [sp, #36]	; 0x24
9001eec4:	4563      	cmp	r3, ip
9001eec6:	4615      	mov	r5, r2
9001eec8:	9a03      	ldr	r2, [sp, #12]
9001eeca:	bf2c      	ite	cs
9001eecc:	eba3 080c 	subcs.w	r8, r3, ip
9001eed0:	ebac 0603 	subcc.w	r6, ip, r3
9001eed4:	fb15 1202 	smlabb	r2, r5, r2, r1
9001eed8:	9905      	ldr	r1, [sp, #20]
9001eeda:	bf24      	itt	cs
9001eedc:	fa1f f888 	uxthcs.w	r8, r8
9001eee0:	46e1      	movcs	r9, ip
9001eee2:	eb01 0502 	add.w	r5, r1, r2
9001eee6:	9902      	ldr	r1, [sp, #8]
9001eee8:	bf2f      	iteee	cs
9001eeea:	4626      	movcs	r6, r4
9001eeec:	b2b6      	uxthcc	r6, r6
9001eeee:	4699      	movcc	r9, r3
9001eef0:	46a0      	movcc	r8, r4
9001eef2:	29ff      	cmp	r1, #255	; 0xff
9001eef4:	d04a      	beq.n	9001ef8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001eef6:	9f06      	ldr	r7, [sp, #24]
9001eef8:	46ca      	mov	sl, r9
9001eefa:	78a9      	ldrb	r1, [r5, #2]
9001eefc:	9004      	str	r0, [sp, #16]
9001eefe:	4379      	muls	r1, r7
9001ef00:	910a      	str	r1, [sp, #40]	; 0x28
9001ef02:	7869      	ldrb	r1, [r5, #1]
9001ef04:	4379      	muls	r1, r7
9001ef06:	910b      	str	r1, [sp, #44]	; 0x2c
9001ef08:	9905      	ldr	r1, [sp, #20]
9001ef0a:	5c8a      	ldrb	r2, [r1, r2]
9001ef0c:	437a      	muls	r2, r7
9001ef0e:	920c      	str	r2, [sp, #48]	; 0x30
9001ef10:	f1ba 0f00 	cmp.w	sl, #0
9001ef14:	d03d      	beq.n	9001ef92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001ef16:	9a04      	ldr	r2, [sp, #16]
9001ef18:	f10a 3aff 	add.w	sl, sl, #4294967295
9001ef1c:	9f07      	ldr	r7, [sp, #28]
9001ef1e:	8812      	ldrh	r2, [r2, #0]
9001ef20:	fa1f fa8a 	uxth.w	sl, sl
9001ef24:	46be      	mov	lr, r7
9001ef26:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001ef28:	1215      	asrs	r5, r2, #8
9001ef2a:	10d1      	asrs	r1, r2, #3
9001ef2c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001ef30:	00d2      	lsls	r2, r2, #3
9001ef32:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001ef36:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001ef3a:	b2d2      	uxtb	r2, r2
9001ef3c:	fb05 750e 	mla	r5, r5, lr, r7
9001ef40:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001ef44:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001ef46:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ef4a:	b2ad      	uxth	r5, r5
9001ef4c:	fb01 710e 	mla	r1, r1, lr, r7
9001ef50:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001ef52:	fb02 720e 	mla	r2, r2, lr, r7
9001ef56:	f105 0e01 	add.w	lr, r5, #1
9001ef5a:	b289      	uxth	r1, r1
9001ef5c:	b292      	uxth	r2, r2
9001ef5e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001ef62:	f102 0e01 	add.w	lr, r2, #1
9001ef66:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001ef6a:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001ef6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ef72:	4315      	orrs	r5, r2
9001ef74:	1c4a      	adds	r2, r1, #1
9001ef76:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001ef7a:	9a04      	ldr	r2, [sp, #16]
9001ef7c:	0949      	lsrs	r1, r1, #5
9001ef7e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001ef82:	430d      	orrs	r5, r1
9001ef84:	f822 5b02 	strh.w	r5, [r2], #2
9001ef88:	9204      	str	r2, [sp, #16]
9001ef8a:	e7c1      	b.n	9001ef10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001ef8c:	4649      	mov	r1, r9
9001ef8e:	4686      	mov	lr, r0
9001ef90:	b999      	cbnz	r1, 9001efba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001ef92:	4563      	cmp	r3, ip
9001ef94:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001ef98:	d389      	bcc.n	9001eeae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001ef9a:	fa1f f68b 	uxth.w	r6, fp
9001ef9e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001efa2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001efa4:	1ba4      	subs	r4, r4, r6
9001efa6:	881b      	ldrh	r3, [r3, #0]
9001efa8:	b2a4      	uxth	r4, r4
9001efaa:	eba3 030b 	sub.w	r3, r3, fp
9001efae:	2c00      	cmp	r4, #0
9001efb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001efb4:	bf18      	it	ne
9001efb6:	2600      	movne	r6, #0
9001efb8:	e779      	b.n	9001eeae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001efba:	78aa      	ldrb	r2, [r5, #2]
9001efbc:	3901      	subs	r1, #1
9001efbe:	4f0e      	ldr	r7, [pc, #56]	; (9001eff8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001efc0:	b289      	uxth	r1, r1
9001efc2:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001efc6:	786a      	ldrb	r2, [r5, #1]
9001efc8:	00d2      	lsls	r2, r2, #3
9001efca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001efce:	ea4a 0202 	orr.w	r2, sl, r2
9001efd2:	f895 a000 	ldrb.w	sl, [r5]
9001efd6:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001efda:	f82e 2b02 	strh.w	r2, [lr], #2
9001efde:	e7d7      	b.n	9001ef90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001efe0:	4b03      	ldr	r3, [pc, #12]	; (9001eff0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001efe2:	6818      	ldr	r0, [r3, #0]
9001efe4:	6803      	ldr	r3, [r0, #0]
9001efe6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001efe8:	4798      	blx	r3
9001efea:	b013      	add	sp, #76	; 0x4c
9001efec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eff0:	24039acc 	.word	0x24039acc
9001eff4:	24039ac6 	.word	0x24039ac6
9001eff8:	fffff800 	.word	0xfffff800

9001effc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001effc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f000:	b09d      	sub	sp, #116	; 0x74
9001f002:	461c      	mov	r4, r3
9001f004:	4683      	mov	fp, r0
9001f006:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001f008:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001f00c:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001f010:	920e      	str	r2, [sp, #56]	; 0x38
9001f012:	2a00      	cmp	r2, #0
9001f014:	f000 81e4 	beq.w	9001f3e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001f018:	6820      	ldr	r0, [r4, #0]
9001f01a:	aa18      	add	r2, sp, #96	; 0x60
9001f01c:	6861      	ldr	r1, [r4, #4]
9001f01e:	c203      	stmia	r2!, {r0, r1}
9001f020:	6818      	ldr	r0, [r3, #0]
9001f022:	aa1a      	add	r2, sp, #104	; 0x68
9001f024:	6859      	ldr	r1, [r3, #4]
9001f026:	c203      	stmia	r2!, {r0, r1}
9001f028:	a818      	add	r0, sp, #96	; 0x60
9001f02a:	f7f8 ffe7 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f02e:	4621      	mov	r1, r4
9001f030:	a81a      	add	r0, sp, #104	; 0x68
9001f032:	f7f9 f827 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f036:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001f03a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001f03e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001f042:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001f046:	bfdb      	ittet	le
9001f048:	b29a      	uxthle	r2, r3
9001f04a:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001f04e:	2201      	movgt	r2, #1
9001f050:	fb91 f2f2 	sdivle	r2, r1, r2
9001f054:	9202      	str	r2, [sp, #8]
9001f056:	9802      	ldr	r0, [sp, #8]
9001f058:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001f05c:	9902      	ldr	r1, [sp, #8]
9001f05e:	fb92 f0f0 	sdiv	r0, r2, r0
9001f062:	b280      	uxth	r0, r0
9001f064:	440c      	add	r4, r1
9001f066:	900f      	str	r0, [sp, #60]	; 0x3c
9001f068:	3c01      	subs	r4, #1
9001f06a:	9802      	ldr	r0, [sp, #8]
9001f06c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001f06e:	fb05 2510 	mls	r5, r5, r0, r2
9001f072:	fb94 f4f1 	sdiv	r4, r4, r1
9001f076:	fb15 f503 	smulbb	r5, r5, r3
9001f07a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001f07e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001f082:	3401      	adds	r4, #1
9001f084:	440d      	add	r5, r1
9001f086:	4419      	add	r1, r3
9001f088:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001f08c:	b2a4      	uxth	r4, r4
9001f08e:	441a      	add	r2, r3
9001f090:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001f094:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001f098:	00a4      	lsls	r4, r4, #2
9001f09a:	9306      	str	r3, [sp, #24]
9001f09c:	b2ad      	uxth	r5, r5
9001f09e:	4bb3      	ldr	r3, [pc, #716]	; (9001f36c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001f0a0:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001f0a4:	6818      	ldr	r0, [r3, #0]
9001f0a6:	6803      	ldr	r3, [r0, #0]
9001f0a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f0aa:	4798      	blx	r3
9001f0ac:	4bb0      	ldr	r3, [pc, #704]	; (9001f370 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001f0ae:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001f0b2:	2d00      	cmp	r5, #0
9001f0b4:	881a      	ldrh	r2, [r3, #0]
9001f0b6:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001f0ba:	fb02 f606 	mul.w	r6, r2, r6
9001f0be:	fb02 7101 	mla	r1, r2, r1, r7
9001f0c2:	9316      	str	r3, [sp, #88]	; 0x58
9001f0c4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001f0c8:	4baa      	ldr	r3, [pc, #680]	; (9001f374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001f0ca:	bf18      	it	ne
9001f0cc:	2100      	movne	r1, #0
9001f0ce:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001f0d2:	eba3 030b 	sub.w	r3, r3, fp
9001f0d6:	920a      	str	r2, [sp, #40]	; 0x28
9001f0d8:	f104 0204 	add.w	r2, r4, #4
9001f0dc:	9317      	str	r3, [sp, #92]	; 0x5c
9001f0de:	9213      	str	r2, [sp, #76]	; 0x4c
9001f0e0:	9a06      	ldr	r2, [sp, #24]
9001f0e2:	bf08      	it	eq
9001f0e4:	4611      	moveq	r1, r2
9001f0e6:	2200      	movs	r2, #0
9001f0e8:	b289      	uxth	r1, r1
9001f0ea:	920d      	str	r2, [sp, #52]	; 0x34
9001f0ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001f0ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f0f0:	fa12 f383 	uxtah	r3, r2, r3
9001f0f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001f0f6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f0fa:	3304      	adds	r3, #4
9001f0fc:	9308      	str	r3, [sp, #32]
9001f0fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f100:	4543      	cmp	r3, r8
9001f102:	f240 8168 	bls.w	9001f3d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001f106:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001f10a:	f04f 0e01 	mov.w	lr, #1
9001f10e:	9a02      	ldr	r2, [sp, #8]
9001f110:	9808      	ldr	r0, [sp, #32]
9001f112:	fbb5 f3f3 	udiv	r3, r5, r3
9001f116:	1ad3      	subs	r3, r2, r3
9001f118:	7800      	ldrb	r0, [r0, #0]
9001f11a:	b29b      	uxth	r3, r3
9001f11c:	9010      	str	r0, [sp, #64]	; 0x40
9001f11e:	3001      	adds	r0, #1
9001f120:	9314      	str	r3, [sp, #80]	; 0x50
9001f122:	9b08      	ldr	r3, [sp, #32]
9001f124:	9007      	str	r0, [sp, #28]
9001f126:	785a      	ldrb	r2, [r3, #1]
9001f128:	789b      	ldrb	r3, [r3, #2]
9001f12a:	021b      	lsls	r3, r3, #8
9001f12c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f130:	9a08      	ldr	r2, [sp, #32]
9001f132:	78d2      	ldrb	r2, [r2, #3]
9001f134:	4313      	orrs	r3, r2
9001f136:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001f138:	441a      	add	r2, r3
9001f13a:	1c50      	adds	r0, r2, #1
9001f13c:	7852      	ldrb	r2, [r2, #1]
9001f13e:	9005      	str	r0, [sp, #20]
9001f140:	0212      	lsls	r2, r2, #8
9001f142:	9811      	ldr	r0, [sp, #68]	; 0x44
9001f144:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001f148:	5cc3      	ldrb	r3, [r0, r3]
9001f14a:	431a      	orrs	r2, r3
9001f14c:	b293      	uxth	r3, r2
9001f14e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001f152:	930b      	str	r3, [sp, #44]	; 0x2c
9001f154:	2300      	movs	r3, #0
9001f156:	9309      	str	r3, [sp, #36]	; 0x24
9001f158:	2301      	movs	r3, #1
9001f15a:	9301      	str	r3, [sp, #4]
9001f15c:	9304      	str	r3, [sp, #16]
9001f15e:	2300      	movs	r3, #0
9001f160:	9303      	str	r3, [sp, #12]
9001f162:	2d00      	cmp	r5, #0
9001f164:	d07d      	beq.n	9001f262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001f166:	45ae      	cmp	lr, r5
9001f168:	d26c      	bcs.n	9001f244 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001f16a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f16c:	eba5 050e 	sub.w	r5, r5, lr
9001f170:	460c      	mov	r4, r1
9001f172:	4543      	cmp	r3, r8
9001f174:	b2ad      	uxth	r5, r5
9001f176:	d802      	bhi.n	9001f17e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001f178:	e071      	b.n	9001f25e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001f17a:	2b00      	cmp	r3, #0
9001f17c:	d15d      	bne.n	9001f23a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001f17e:	9b05      	ldr	r3, [sp, #20]
9001f180:	9a04      	ldr	r2, [sp, #16]
9001f182:	785b      	ldrb	r3, [r3, #1]
9001f184:	f1c2 0207 	rsb	r2, r2, #7
9001f188:	9904      	ldr	r1, [sp, #16]
9001f18a:	4093      	lsls	r3, r2
9001f18c:	005b      	lsls	r3, r3, #1
9001f18e:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001f192:	9b05      	ldr	r3, [sp, #20]
9001f194:	781b      	ldrb	r3, [r3, #0]
9001f196:	410b      	asrs	r3, r1
9001f198:	3101      	adds	r1, #1
9001f19a:	b2c9      	uxtb	r1, r1
9001f19c:	b2db      	uxtb	r3, r3
9001f19e:	2908      	cmp	r1, #8
9001f1a0:	9104      	str	r1, [sp, #16]
9001f1a2:	9905      	ldr	r1, [sp, #20]
9001f1a4:	ea43 0302 	orr.w	r3, r3, r2
9001f1a8:	bf0c      	ite	eq
9001f1aa:	3102      	addeq	r1, #2
9001f1ac:	3101      	addne	r1, #1
9001f1ae:	b29a      	uxth	r2, r3
9001f1b0:	bf05      	ittet	eq
9001f1b2:	9105      	streq	r1, [sp, #20]
9001f1b4:	2100      	moveq	r1, #0
9001f1b6:	9105      	strne	r1, [sp, #20]
9001f1b8:	9104      	streq	r1, [sp, #16]
9001f1ba:	9910      	ldr	r1, [sp, #64]	; 0x40
9001f1bc:	4291      	cmp	r1, r2
9001f1be:	d30a      	bcc.n	9001f1d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001f1c0:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001f1c4:	2301      	movs	r3, #1
9001f1c6:	9907      	ldr	r1, [sp, #28]
9001f1c8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001f1cc:	d30f      	bcc.n	9001f1ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f1ce:	2100      	movs	r1, #0
9001f1d0:	9301      	str	r3, [sp, #4]
9001f1d2:	9103      	str	r1, [sp, #12]
9001f1d4:	e032      	b.n	9001f23c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001f1d6:	9b07      	ldr	r3, [sp, #28]
9001f1d8:	429a      	cmp	r2, r3
9001f1da:	d318      	bcc.n	9001f20e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001f1dc:	9b01      	ldr	r3, [sp, #4]
9001f1de:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001f1e2:	445b      	add	r3, fp
9001f1e4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001f1e8:	9b01      	ldr	r3, [sp, #4]
9001f1ea:	3301      	adds	r3, #1
9001f1ec:	b29b      	uxth	r3, r3
9001f1ee:	9907      	ldr	r1, [sp, #28]
9001f1f0:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001f1f4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f1f8:	7108      	strb	r0, [r1, #4]
9001f1fa:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001f1fc:	80c8      	strh	r0, [r1, #6]
9001f1fe:	9801      	ldr	r0, [sp, #4]
9001f200:	3001      	adds	r0, #1
9001f202:	7148      	strb	r0, [r1, #5]
9001f204:	9907      	ldr	r1, [sp, #28]
9001f206:	3101      	adds	r1, #1
9001f208:	b289      	uxth	r1, r1
9001f20a:	9107      	str	r1, [sp, #28]
9001f20c:	e7df      	b.n	9001f1ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001f20e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001f212:	4611      	mov	r1, r2
9001f214:	795b      	ldrb	r3, [r3, #5]
9001f216:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001f21a:	4458      	add	r0, fp
9001f21c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001f21e:	4406      	add	r6, r0
9001f220:	2e00      	cmp	r6, #0
9001f222:	dd06      	ble.n	9001f232 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f224:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f228:	790e      	ldrb	r6, [r1, #4]
9001f22a:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001f22e:	88c9      	ldrh	r1, [r1, #6]
9001f230:	e7f4      	b.n	9001f21c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001f232:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001f236:	b29b      	uxth	r3, r3
9001f238:	e7c5      	b.n	9001f1c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001f23a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001f23c:	4621      	mov	r1, r4
9001f23e:	920b      	str	r2, [sp, #44]	; 0x2c
9001f240:	469e      	mov	lr, r3
9001f242:	e78e      	b.n	9001f162 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001f244:	9a03      	ldr	r2, [sp, #12]
9001f246:	ebae 0305 	sub.w	r3, lr, r5
9001f24a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f24e:	442a      	add	r2, r5
9001f250:	b29b      	uxth	r3, r3
9001f252:	b292      	uxth	r2, r2
9001f254:	9203      	str	r2, [sp, #12]
9001f256:	2500      	movs	r5, #0
9001f258:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001f25a:	4542      	cmp	r2, r8
9001f25c:	d88d      	bhi.n	9001f17a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f25e:	4621      	mov	r1, r4
9001f260:	e74d      	b.n	9001f0fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001f262:	458e      	cmp	lr, r1
9001f264:	f04f 0900 	mov.w	r9, #0
9001f268:	bf2b      	itete	cs
9001f26a:	ebae 0301 	subcs.w	r3, lr, r1
9001f26e:	eba1 040e 	subcc.w	r4, r1, lr
9001f272:	462c      	movcs	r4, r5
9001f274:	462b      	movcc	r3, r5
9001f276:	bf27      	ittee	cs
9001f278:	b29b      	uxthcs	r3, r3
9001f27a:	910c      	strcs	r1, [sp, #48]	; 0x30
9001f27c:	b2a4      	uxthcc	r4, r4
9001f27e:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001f282:	9a03      	ldr	r2, [sp, #12]
9001f284:	980c      	ldr	r0, [sp, #48]	; 0x30
9001f286:	444a      	add	r2, r9
9001f288:	4548      	cmp	r0, r9
9001f28a:	b292      	uxth	r2, r2
9001f28c:	d074      	beq.n	9001f378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001f28e:	2004      	movs	r0, #4
9001f290:	445a      	add	r2, fp
9001f292:	4605      	mov	r5, r0
9001f294:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001f298:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f29a:	fb15 0202 	smlabb	r2, r5, r2, r0
9001f29e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001f2a0:	5880      	ldr	r0, [r0, r2]
9001f2a2:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001f2a6:	d014      	beq.n	9001f2d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f2a8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001f2ac:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001f2b0:	d112      	bne.n	9001f2d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f2b2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001f2b4:	2aff      	cmp	r2, #255	; 0xff
9001f2b6:	d10f      	bne.n	9001f2d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f2b8:	0942      	lsrs	r2, r0, #5
9001f2ba:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001f2be:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001f2c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f2c6:	f025 0507 	bic.w	r5, r5, #7
9001f2ca:	4315      	orrs	r5, r2
9001f2cc:	4305      	orrs	r5, r0
9001f2ce:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001f2d2:	f109 0901 	add.w	r9, r9, #1
9001f2d6:	e7d4      	b.n	9001f282 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001f2d8:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001f2dc:	b2ed      	uxtb	r5, r5
9001f2de:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001f2e2:	ea4f 272c 	mov.w	r7, ip, asr #8
9001f2e6:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001f2ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f2ee:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001f2f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001f2f6:	9215      	str	r2, [sp, #84]	; 0x54
9001f2f8:	fa5f fc8c 	uxtb.w	ip, ip
9001f2fc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001f2fe:	b2c0      	uxtb	r0, r0
9001f300:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f304:	fb02 fa0a 	mul.w	sl, r2, sl
9001f308:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001f30c:	f10a 0201 	add.w	r2, sl, #1
9001f310:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001f314:	1212      	asrs	r2, r2, #8
9001f316:	fa1f fa82 	uxth.w	sl, r2
9001f31a:	43d2      	mvns	r2, r2
9001f31c:	fb16 f60a 	smulbb	r6, r6, sl
9001f320:	b2d2      	uxtb	r2, r2
9001f322:	fb10 f00a 	smulbb	r0, r0, sl
9001f326:	fb07 6702 	mla	r7, r7, r2, r6
9001f32a:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001f32c:	fb0c 0002 	mla	r0, ip, r2, r0
9001f330:	fb15 f50a 	smulbb	r5, r5, sl
9001f334:	b2bf      	uxth	r7, r7
9001f336:	b280      	uxth	r0, r0
9001f338:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f33c:	fb06 5602 	mla	r6, r6, r2, r5
9001f340:	1c7a      	adds	r2, r7, #1
9001f342:	1c45      	adds	r5, r0, #1
9001f344:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f348:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001f34c:	b2b6      	uxth	r6, r6
9001f34e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001f352:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001f356:	432f      	orrs	r7, r5
9001f358:	1c75      	adds	r5, r6, #1
9001f35a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001f35e:	096d      	lsrs	r5, r5, #5
9001f360:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f364:	432f      	orrs	r7, r5
9001f366:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001f36a:	e7b2      	b.n	9001f2d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f36c:	24039acc 	.word	0x24039acc
9001f370:	24039ac6 	.word	0x24039ac6
9001f374:	fffff7fb 	.word	0xfffff7fb
9001f378:	9203      	str	r2, [sp, #12]
9001f37a:	458e      	cmp	lr, r1
9001f37c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001f37e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f382:	f4ff af68 	bcc.w	9001f256 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001f386:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001f388:	9906      	ldr	r1, [sp, #24]
9001f38a:	8812      	ldrh	r2, [r2, #0]
9001f38c:	1a52      	subs	r2, r2, r1
9001f38e:	9914      	ldr	r1, [sp, #80]	; 0x50
9001f390:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f394:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f396:	3201      	adds	r2, #1
9001f398:	428a      	cmp	r2, r1
9001f39a:	9209      	str	r2, [sp, #36]	; 0x24
9001f39c:	d111      	bne.n	9001f3c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001f39e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001f3a2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001f3a6:	9b06      	ldr	r3, [sp, #24]
9001f3a8:	eba5 0509 	sub.w	r5, r5, r9
9001f3ac:	b2ad      	uxth	r5, r5
9001f3ae:	2d00      	cmp	r5, #0
9001f3b0:	bf08      	it	eq
9001f3b2:	4619      	moveq	r1, r3
9001f3b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f3b6:	bf18      	it	ne
9001f3b8:	2100      	movne	r1, #0
9001f3ba:	3301      	adds	r3, #1
9001f3bc:	b289      	uxth	r1, r1
9001f3be:	930d      	str	r3, [sp, #52]	; 0x34
9001f3c0:	e694      	b.n	9001f0ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001f3c2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f3c6:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001f3ca:	1b2d      	subs	r5, r5, r4
9001f3cc:	b2ad      	uxth	r5, r5
9001f3ce:	2d00      	cmp	r5, #0
9001f3d0:	bf18      	it	ne
9001f3d2:	2400      	movne	r4, #0
9001f3d4:	e740      	b.n	9001f258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001f3d6:	4b04      	ldr	r3, [pc, #16]	; (9001f3e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001f3d8:	6818      	ldr	r0, [r3, #0]
9001f3da:	6803      	ldr	r3, [r0, #0]
9001f3dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f3de:	4798      	blx	r3
9001f3e0:	b01d      	add	sp, #116	; 0x74
9001f3e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f3e6:	bf00      	nop
9001f3e8:	24039acc 	.word	0x24039acc

9001f3ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001f3ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f3f0:	b09f      	sub	sp, #124	; 0x7c
9001f3f2:	461d      	mov	r5, r3
9001f3f4:	4604      	mov	r4, r0
9001f3f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001f3f8:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001f3fc:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001f400:	920a      	str	r2, [sp, #40]	; 0x28
9001f402:	2a00      	cmp	r2, #0
9001f404:	f000 81fe 	beq.w	9001f804 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001f408:	6828      	ldr	r0, [r5, #0]
9001f40a:	aa1a      	add	r2, sp, #104	; 0x68
9001f40c:	6869      	ldr	r1, [r5, #4]
9001f40e:	c203      	stmia	r2!, {r0, r1}
9001f410:	6818      	ldr	r0, [r3, #0]
9001f412:	aa1c      	add	r2, sp, #112	; 0x70
9001f414:	6859      	ldr	r1, [r3, #4]
9001f416:	c203      	stmia	r2!, {r0, r1}
9001f418:	a81a      	add	r0, sp, #104	; 0x68
9001f41a:	f7f8 fdef 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f41e:	4629      	mov	r1, r5
9001f420:	a81c      	add	r0, sp, #112	; 0x70
9001f422:	f7f8 fe2f 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f426:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001f42a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001f42e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001f432:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001f436:	bfdb      	ittet	le
9001f438:	b29a      	uxthle	r2, r3
9001f43a:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001f43e:	2201      	movgt	r2, #1
9001f440:	fb91 f2f2 	sdivle	r2, r1, r2
9001f444:	9201      	str	r2, [sp, #4]
9001f446:	9801      	ldr	r0, [sp, #4]
9001f448:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001f44c:	9901      	ldr	r1, [sp, #4]
9001f44e:	fb92 f0f0 	sdiv	r0, r2, r0
9001f452:	b280      	uxth	r0, r0
9001f454:	440e      	add	r6, r1
9001f456:	9010      	str	r0, [sp, #64]	; 0x40
9001f458:	3e01      	subs	r6, #1
9001f45a:	9801      	ldr	r0, [sp, #4]
9001f45c:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001f45e:	fb05 2510 	mls	r5, r5, r0, r2
9001f462:	fb96 f6f1 	sdiv	r6, r6, r1
9001f466:	fb15 f503 	smulbb	r5, r5, r3
9001f46a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001f46e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001f472:	3601      	adds	r6, #1
9001f474:	440d      	add	r5, r1
9001f476:	4419      	add	r1, r3
9001f478:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001f47c:	b2b6      	uxth	r6, r6
9001f47e:	441a      	add	r2, r3
9001f480:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001f484:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001f488:	b2ad      	uxth	r5, r5
9001f48a:	9304      	str	r3, [sp, #16]
9001f48c:	4b96      	ldr	r3, [pc, #600]	; (9001f6e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001f48e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001f492:	6818      	ldr	r0, [r3, #0]
9001f494:	6803      	ldr	r3, [r0, #0]
9001f496:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f498:	4798      	blx	r3
9001f49a:	4b94      	ldr	r3, [pc, #592]	; (9001f6ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001f49c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001f4a0:	2d00      	cmp	r5, #0
9001f4a2:	881a      	ldrh	r2, [r3, #0]
9001f4a4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001f4a8:	fb02 f707 	mul.w	r7, r2, r7
9001f4ac:	fb02 c101 	mla	r1, r2, r1, ip
9001f4b0:	9318      	str	r3, [sp, #96]	; 0x60
9001f4b2:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001f4b6:	4b8e      	ldr	r3, [pc, #568]	; (9001f6f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001f4b8:	bf18      	it	ne
9001f4ba:	2100      	movne	r1, #0
9001f4bc:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001f4c0:	eba3 0304 	sub.w	r3, r3, r4
9001f4c4:	920b      	str	r2, [sp, #44]	; 0x2c
9001f4c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001f4c8:	9319      	str	r3, [sp, #100]	; 0x64
9001f4ca:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001f4ce:	f106 0204 	add.w	r2, r6, #4
9001f4d2:	9206      	str	r2, [sp, #24]
9001f4d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001f4d6:	ea6f 0202 	mvn.w	r2, r2
9001f4da:	b2d2      	uxtb	r2, r2
9001f4dc:	9215      	str	r2, [sp, #84]	; 0x54
9001f4de:	9a04      	ldr	r2, [sp, #16]
9001f4e0:	bf08      	it	eq
9001f4e2:	4611      	moveq	r1, r2
9001f4e4:	2200      	movs	r2, #0
9001f4e6:	b289      	uxth	r1, r1
9001f4e8:	920d      	str	r2, [sp, #52]	; 0x34
9001f4ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001f4ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f4ee:	fa12 f383 	uxtah	r3, r2, r3
9001f4f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001f4f4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f4f8:	3304      	adds	r3, #4
9001f4fa:	9307      	str	r3, [sp, #28]
9001f4fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f4fe:	455b      	cmp	r3, fp
9001f500:	f240 817b 	bls.w	9001f7fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001f504:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001f508:	f04f 0801 	mov.w	r8, #1
9001f50c:	9a01      	ldr	r2, [sp, #4]
9001f50e:	9807      	ldr	r0, [sp, #28]
9001f510:	46c4      	mov	ip, r8
9001f512:	f8cd 8008 	str.w	r8, [sp, #8]
9001f516:	7800      	ldrb	r0, [r0, #0]
9001f518:	fbb5 f3f3 	udiv	r3, r5, r3
9001f51c:	1ad3      	subs	r3, r2, r3
9001f51e:	9011      	str	r0, [sp, #68]	; 0x44
9001f520:	3001      	adds	r0, #1
9001f522:	b29b      	uxth	r3, r3
9001f524:	9005      	str	r0, [sp, #20]
9001f526:	9316      	str	r3, [sp, #88]	; 0x58
9001f528:	9b07      	ldr	r3, [sp, #28]
9001f52a:	785a      	ldrb	r2, [r3, #1]
9001f52c:	789b      	ldrb	r3, [r3, #2]
9001f52e:	021b      	lsls	r3, r3, #8
9001f530:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f534:	9a07      	ldr	r2, [sp, #28]
9001f536:	78d2      	ldrb	r2, [r2, #3]
9001f538:	4313      	orrs	r3, r2
9001f53a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001f53c:	441a      	add	r2, r3
9001f53e:	1c50      	adds	r0, r2, #1
9001f540:	7852      	ldrb	r2, [r2, #1]
9001f542:	9003      	str	r0, [sp, #12]
9001f544:	0212      	lsls	r2, r2, #8
9001f546:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f548:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001f54c:	5cc3      	ldrb	r3, [r0, r3]
9001f54e:	431a      	orrs	r2, r3
9001f550:	b293      	uxth	r3, r2
9001f552:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001f556:	930c      	str	r3, [sp, #48]	; 0x30
9001f558:	2300      	movs	r3, #0
9001f55a:	9308      	str	r3, [sp, #32]
9001f55c:	461a      	mov	r2, r3
9001f55e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001f562:	930e      	str	r3, [sp, #56]	; 0x38
9001f564:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001f568:	930f      	str	r3, [sp, #60]	; 0x3c
9001f56a:	2d00      	cmp	r5, #0
9001f56c:	d07d      	beq.n	9001f66a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001f56e:	45ac      	cmp	ip, r5
9001f570:	d26d      	bcs.n	9001f64e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001f572:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f574:	eba5 050c 	sub.w	r5, r5, ip
9001f578:	4608      	mov	r0, r1
9001f57a:	455b      	cmp	r3, fp
9001f57c:	b2ad      	uxth	r5, r5
9001f57e:	d802      	bhi.n	9001f586 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001f580:	e071      	b.n	9001f666 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001f582:	2b00      	cmp	r3, #0
9001f584:	d15d      	bne.n	9001f642 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001f586:	9b03      	ldr	r3, [sp, #12]
9001f588:	9a02      	ldr	r2, [sp, #8]
9001f58a:	785b      	ldrb	r3, [r3, #1]
9001f58c:	f1c2 0207 	rsb	r2, r2, #7
9001f590:	9902      	ldr	r1, [sp, #8]
9001f592:	4093      	lsls	r3, r2
9001f594:	005b      	lsls	r3, r3, #1
9001f596:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001f59a:	9b03      	ldr	r3, [sp, #12]
9001f59c:	781b      	ldrb	r3, [r3, #0]
9001f59e:	410b      	asrs	r3, r1
9001f5a0:	3101      	adds	r1, #1
9001f5a2:	b2c9      	uxtb	r1, r1
9001f5a4:	b2db      	uxtb	r3, r3
9001f5a6:	2908      	cmp	r1, #8
9001f5a8:	9102      	str	r1, [sp, #8]
9001f5aa:	9903      	ldr	r1, [sp, #12]
9001f5ac:	ea43 0302 	orr.w	r3, r3, r2
9001f5b0:	bf0c      	ite	eq
9001f5b2:	3102      	addeq	r1, #2
9001f5b4:	3101      	addne	r1, #1
9001f5b6:	b29a      	uxth	r2, r3
9001f5b8:	bf05      	ittet	eq
9001f5ba:	9103      	streq	r1, [sp, #12]
9001f5bc:	2100      	moveq	r1, #0
9001f5be:	9103      	strne	r1, [sp, #12]
9001f5c0:	9102      	streq	r1, [sp, #8]
9001f5c2:	9911      	ldr	r1, [sp, #68]	; 0x44
9001f5c4:	4291      	cmp	r1, r2
9001f5c6:	d30a      	bcc.n	9001f5de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f5c8:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001f5cc:	2301      	movs	r3, #1
9001f5ce:	9905      	ldr	r1, [sp, #20]
9001f5d0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001f5d4:	d30f      	bcc.n	9001f5f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001f5d6:	2100      	movs	r1, #0
9001f5d8:	4698      	mov	r8, r3
9001f5da:	9100      	str	r1, [sp, #0]
9001f5dc:	e032      	b.n	9001f644 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001f5de:	9b05      	ldr	r3, [sp, #20]
9001f5e0:	429a      	cmp	r2, r3
9001f5e2:	d318      	bcc.n	9001f616 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001f5e4:	eb04 0308 	add.w	r3, r4, r8
9001f5e8:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001f5ec:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001f5f0:	f108 0301 	add.w	r3, r8, #1
9001f5f4:	b29b      	uxth	r3, r3
9001f5f6:	9905      	ldr	r1, [sp, #20]
9001f5f8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001f5fc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f600:	710e      	strb	r6, [r1, #4]
9001f602:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001f604:	80ce      	strh	r6, [r1, #6]
9001f606:	f108 0601 	add.w	r6, r8, #1
9001f60a:	714e      	strb	r6, [r1, #5]
9001f60c:	9905      	ldr	r1, [sp, #20]
9001f60e:	3101      	adds	r1, #1
9001f610:	b289      	uxth	r1, r1
9001f612:	9105      	str	r1, [sp, #20]
9001f614:	e7df      	b.n	9001f5d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001f616:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001f61a:	4611      	mov	r1, r2
9001f61c:	795b      	ldrb	r3, [r3, #5]
9001f61e:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001f622:	4426      	add	r6, r4
9001f624:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001f626:	4437      	add	r7, r6
9001f628:	2f00      	cmp	r7, #0
9001f62a:	dd06      	ble.n	9001f63a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001f62c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f630:	790f      	ldrb	r7, [r1, #4]
9001f632:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001f636:	88c9      	ldrh	r1, [r1, #6]
9001f638:	e7f4      	b.n	9001f624 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001f63a:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001f63e:	b29b      	uxth	r3, r3
9001f640:	e7c5      	b.n	9001f5ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001f642:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001f644:	920c      	str	r2, [sp, #48]	; 0x30
9001f646:	4601      	mov	r1, r0
9001f648:	9a00      	ldr	r2, [sp, #0]
9001f64a:	469c      	mov	ip, r3
9001f64c:	e78d      	b.n	9001f56a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f64e:	ebac 0305 	sub.w	r3, ip, r5
9001f652:	1957      	adds	r7, r2, r5
9001f654:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f658:	b2ba      	uxth	r2, r7
9001f65a:	b29b      	uxth	r3, r3
9001f65c:	9200      	str	r2, [sp, #0]
9001f65e:	2500      	movs	r5, #0
9001f660:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001f662:	455a      	cmp	r2, fp
9001f664:	d88d      	bhi.n	9001f582 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001f666:	4601      	mov	r1, r0
9001f668:	e748      	b.n	9001f4fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001f66a:	458c      	cmp	ip, r1
9001f66c:	bf27      	ittee	cs
9001f66e:	ebac 0301 	subcs.w	r3, ip, r1
9001f672:	4628      	movcs	r0, r5
9001f674:	eba1 000c 	subcc.w	r0, r1, ip
9001f678:	462b      	movcc	r3, r5
9001f67a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001f67c:	bf27      	ittee	cs
9001f67e:	b29b      	uxthcs	r3, r3
9001f680:	9109      	strcs	r1, [sp, #36]	; 0x24
9001f682:	b280      	uxthcc	r0, r0
9001f684:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001f688:	2dff      	cmp	r5, #255	; 0xff
9001f68a:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001f68c:	eb02 0705 	add.w	r7, r2, r5
9001f690:	b2bd      	uxth	r5, r7
9001f692:	9500      	str	r5, [sp, #0]
9001f694:	d12e      	bne.n	9001f6f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001f696:	465e      	mov	r6, fp
9001f698:	9d00      	ldr	r5, [sp, #0]
9001f69a:	42aa      	cmp	r2, r5
9001f69c:	f040 8083 	bne.w	9001f7a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001f6a0:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f6a2:	458c      	cmp	ip, r1
9001f6a4:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f6a8:	d3d9      	bcc.n	9001f65e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001f6aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001f6ac:	9904      	ldr	r1, [sp, #16]
9001f6ae:	8812      	ldrh	r2, [r2, #0]
9001f6b0:	1a52      	subs	r2, r2, r1
9001f6b2:	9916      	ldr	r1, [sp, #88]	; 0x58
9001f6b4:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f6b8:	9a08      	ldr	r2, [sp, #32]
9001f6ba:	3201      	adds	r2, #1
9001f6bc:	428a      	cmp	r2, r1
9001f6be:	9208      	str	r2, [sp, #32]
9001f6c0:	f040 8091 	bne.w	9001f7e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001f6c4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001f6c8:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001f6cc:	9b04      	ldr	r3, [sp, #16]
9001f6ce:	eba5 050c 	sub.w	r5, r5, ip
9001f6d2:	b2ad      	uxth	r5, r5
9001f6d4:	2d00      	cmp	r5, #0
9001f6d6:	bf08      	it	eq
9001f6d8:	4619      	moveq	r1, r3
9001f6da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f6dc:	bf18      	it	ne
9001f6de:	2100      	movne	r1, #0
9001f6e0:	3301      	adds	r3, #1
9001f6e2:	b289      	uxth	r1, r1
9001f6e4:	930d      	str	r3, [sp, #52]	; 0x34
9001f6e6:	e700      	b.n	9001f4ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001f6e8:	24039acc 	.word	0x24039acc
9001f6ec:	24039ac6 	.word	0x24039ac6
9001f6f0:	fffff7fb 	.word	0xfffff7fb
9001f6f4:	46d9      	mov	r9, fp
9001f6f6:	9d00      	ldr	r5, [sp, #0]
9001f6f8:	42aa      	cmp	r2, r5
9001f6fa:	d0d1      	beq.n	9001f6a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001f6fc:	1c55      	adds	r5, r2, #1
9001f6fe:	4422      	add	r2, r4
9001f700:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001f704:	9a06      	ldr	r2, [sp, #24]
9001f706:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001f70a:	9517      	str	r5, [sp, #92]	; 0x5c
9001f70c:	4472      	add	r2, lr
9001f70e:	9212      	str	r2, [sp, #72]	; 0x48
9001f710:	f8b9 2000 	ldrh.w	r2, [r9]
9001f714:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001f716:	1216      	asrs	r6, r2, #8
9001f718:	f897 a002 	ldrb.w	sl, [r7, #2]
9001f71c:	10d5      	asrs	r5, r2, #3
9001f71e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001f720:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001f724:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001f728:	00d2      	lsls	r2, r2, #3
9001f72a:	fb1a fa07 	smulbb	sl, sl, r7
9001f72e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f732:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f734:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f738:	b2d2      	uxtb	r2, r2
9001f73a:	fb06 a607 	mla	r6, r6, r7, sl
9001f73e:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001f740:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f744:	f897 a001 	ldrb.w	sl, [r7, #1]
9001f748:	b2b6      	uxth	r6, r6
9001f74a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001f74c:	fb1a fa07 	smulbb	sl, sl, r7
9001f750:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f752:	fb05 a507 	mla	r5, r5, r7, sl
9001f756:	9f06      	ldr	r7, [sp, #24]
9001f758:	f106 0a01 	add.w	sl, r6, #1
9001f75c:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f760:	b2ad      	uxth	r5, r5
9001f762:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001f764:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001f768:	f105 0a01 	add.w	sl, r5, #1
9001f76c:	fb1e fe07 	smulbb	lr, lr, r7
9001f770:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f772:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f776:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001f77a:	fb02 e207 	mla	r2, r2, r7, lr
9001f77e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f782:	b292      	uxth	r2, r2
9001f784:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f788:	f102 0e01 	add.w	lr, r2, #1
9001f78c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001f790:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001f794:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f798:	ea4e 0606 	orr.w	r6, lr, r6
9001f79c:	ea46 060a 	orr.w	r6, r6, sl
9001f7a0:	f829 6b02 	strh.w	r6, [r9], #2
9001f7a4:	e7a7      	b.n	9001f6f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001f7a6:	f102 0e01 	add.w	lr, r2, #1
9001f7aa:	4422      	add	r2, r4
9001f7ac:	9f06      	ldr	r7, [sp, #24]
9001f7ae:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001f7b2:	9a06      	ldr	r2, [sp, #24]
9001f7b4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f7b8:	eb02 0a05 	add.w	sl, r2, r5
9001f7bc:	4a13      	ldr	r2, [pc, #76]	; (9001f80c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001f7be:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001f7c2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001f7c6:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001f7ca:	00d2      	lsls	r2, r2, #3
9001f7cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f7d0:	ea49 0202 	orr.w	r2, r9, r2
9001f7d4:	f817 9005 	ldrb.w	r9, [r7, r5]
9001f7d8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001f7dc:	f826 2b02 	strh.w	r2, [r6], #2
9001f7e0:	fa1f f28e 	uxth.w	r2, lr
9001f7e4:	e758      	b.n	9001f698 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001f7e6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f7ea:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001f7ee:	1a2d      	subs	r5, r5, r0
9001f7f0:	b2ad      	uxth	r5, r5
9001f7f2:	2d00      	cmp	r5, #0
9001f7f4:	bf18      	it	ne
9001f7f6:	2000      	movne	r0, #0
9001f7f8:	e732      	b.n	9001f660 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001f7fa:	4b05      	ldr	r3, [pc, #20]	; (9001f810 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001f7fc:	6818      	ldr	r0, [r3, #0]
9001f7fe:	6803      	ldr	r3, [r0, #0]
9001f800:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f802:	4798      	blx	r3
9001f804:	b01f      	add	sp, #124	; 0x7c
9001f806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f80a:	bf00      	nop
9001f80c:	fffff800 	.word	0xfffff800
9001f810:	24039acc 	.word	0x24039acc

9001f814 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001f814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f818:	b091      	sub	sp, #68	; 0x44
9001f81a:	469b      	mov	fp, r3
9001f81c:	4616      	mov	r6, r2
9001f81e:	f9b3 2000 	ldrsh.w	r2, [r3]
9001f822:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001f826:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001f82a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001f82e:	4604      	mov	r4, r0
9001f830:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001f834:	4640      	mov	r0, r8
9001f836:	460d      	mov	r5, r1
9001f838:	4659      	mov	r1, fp
9001f83a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001f83e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001f842:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001f846:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001f84a:	f7f3 fab9 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
9001f84e:	4631      	mov	r1, r6
9001f850:	4640      	mov	r0, r8
9001f852:	f7f3 fab5 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
9001f856:	4b74      	ldr	r3, [pc, #464]	; (9001fa28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001f858:	8818      	ldrh	r0, [r3, #0]
9001f85a:	4b74      	ldr	r3, [pc, #464]	; (9001fa2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001f85c:	b202      	sxth	r2, r0
9001f85e:	8819      	ldrh	r1, [r3, #0]
9001f860:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001f864:	b20e      	sxth	r6, r1
9001f866:	2b00      	cmp	r3, #0
9001f868:	da07      	bge.n	9001f87a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001f86a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001f86e:	4463      	add	r3, ip
9001f870:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001f874:	2300      	movs	r3, #0
9001f876:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001f87a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001f87e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001f882:	1ad2      	subs	r2, r2, r3
9001f884:	4594      	cmp	ip, r2
9001f886:	bfc4      	itt	gt
9001f888:	1ac2      	subgt	r2, r0, r3
9001f88a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001f88e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001f892:	2a00      	cmp	r2, #0
9001f894:	da07      	bge.n	9001f8a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001f896:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001f89a:	4462      	add	r2, ip
9001f89c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001f8a0:	2200      	movs	r2, #0
9001f8a2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001f8a6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001f8aa:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001f8ae:	eba6 060a 	sub.w	r6, r6, sl
9001f8b2:	42b2      	cmp	r2, r6
9001f8b4:	bfc4      	itt	gt
9001f8b6:	eba1 020a 	subgt.w	r2, r1, sl
9001f8ba:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001f8be:	4a5c      	ldr	r2, [pc, #368]	; (9001fa30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001f8c0:	7812      	ldrb	r2, [r2, #0]
9001f8c2:	b9a2      	cbnz	r2, 9001f8ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001f8c4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001f8c8:	4286      	cmp	r6, r0
9001f8ca:	4640      	mov	r0, r8
9001f8cc:	9303      	str	r3, [sp, #12]
9001f8ce:	bf14      	ite	ne
9001f8d0:	2600      	movne	r6, #0
9001f8d2:	2601      	moveq	r6, #1
9001f8d4:	f7f3 fab7 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
9001f8d8:	9b03      	ldr	r3, [sp, #12]
9001f8da:	b160      	cbz	r0, 9001f8f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001f8dc:	2300      	movs	r3, #0
9001f8de:	8023      	strh	r3, [r4, #0]
9001f8e0:	8063      	strh	r3, [r4, #2]
9001f8e2:	80a3      	strh	r3, [r4, #4]
9001f8e4:	4620      	mov	r0, r4
9001f8e6:	80e3      	strh	r3, [r4, #6]
9001f8e8:	b011      	add	sp, #68	; 0x44
9001f8ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f8ee:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001f8f2:	428e      	cmp	r6, r1
9001f8f4:	e7e9      	b.n	9001f8ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001f8f6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001f8fa:	a90e      	add	r1, sp, #56	; 0x38
9001f8fc:	900e      	str	r0, [sp, #56]	; 0x38
9001f8fe:	a80c      	add	r0, sp, #48	; 0x30
9001f900:	9205      	str	r2, [sp, #20]
9001f902:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001f906:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001f90a:	9206      	str	r2, [sp, #24]
9001f90c:	f8bb 2000 	ldrh.w	r2, [fp]
9001f910:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001f914:	1a9b      	subs	r3, r3, r2
9001f916:	b21b      	sxth	r3, r3
9001f918:	9303      	str	r3, [sp, #12]
9001f91a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001f91e:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001fa38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001f922:	ebaa 0a03 	sub.w	sl, sl, r3
9001f926:	fa0f f38a 	sxth.w	r3, sl
9001f92a:	9304      	str	r3, [sp, #16]
9001f92c:	9b03      	ldr	r3, [sp, #12]
9001f92e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001f932:	9b04      	ldr	r3, [sp, #16]
9001f934:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001f938:	9b05      	ldr	r3, [sp, #20]
9001f93a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001f93e:	9b06      	ldr	r3, [sp, #24]
9001f940:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001f944:	f7f8 fb9e 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f948:	4640      	mov	r0, r8
9001f94a:	f7f8 fb57 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f94e:	a80e      	add	r0, sp, #56	; 0x38
9001f950:	f7f8 fb54 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f954:	4b37      	ldr	r3, [pc, #220]	; (9001fa34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001f956:	4628      	mov	r0, r5
9001f958:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001f95c:	881b      	ldrh	r3, [r3, #0]
9001f95e:	9307      	str	r3, [sp, #28]
9001f960:	682b      	ldr	r3, [r5, #0]
9001f962:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001f964:	4798      	blx	r3
9001f966:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001f96a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001f96e:	4681      	mov	r9, r0
9001f970:	f8db 0000 	ldr.w	r0, [fp]
9001f974:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001f978:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001f97a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001f97e:	6803      	ldr	r3, [r0, #0]
9001f980:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001f982:	4798      	blx	r3
9001f984:	4607      	mov	r7, r0
9001f986:	f8db 0000 	ldr.w	r0, [fp]
9001f98a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001f98e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001f992:	6803      	ldr	r3, [r0, #0]
9001f994:	9109      	str	r1, [sp, #36]	; 0x24
9001f996:	9208      	str	r2, [sp, #32]
9001f998:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001f99a:	4798      	blx	r3
9001f99c:	f010 0f01 	tst.w	r0, #1
9001f9a0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001f9a4:	d012      	beq.n	9001f9cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001f9a6:	f8db 0000 	ldr.w	r0, [fp]
9001f9aa:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001f9ae:	6803      	ldr	r3, [r0, #0]
9001f9b0:	9200      	str	r2, [sp, #0]
9001f9b2:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001f9b4:	462b      	mov	r3, r5
9001f9b6:	e898 0006 	ldmia.w	r8, {r1, r2}
9001f9ba:	47b0      	blx	r6
9001f9bc:	9b03      	ldr	r3, [sp, #12]
9001f9be:	8023      	strh	r3, [r4, #0]
9001f9c0:	9b04      	ldr	r3, [sp, #16]
9001f9c2:	8063      	strh	r3, [r4, #2]
9001f9c4:	9b05      	ldr	r3, [sp, #20]
9001f9c6:	80a3      	strh	r3, [r4, #4]
9001f9c8:	9b06      	ldr	r3, [sp, #24]
9001f9ca:	e78b      	b.n	9001f8e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001f9cc:	fb09 f202 	mul.w	r2, r9, r2
9001f9d0:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001f9d4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001f9d8:	440f      	add	r7, r1
9001f9da:	b166      	cbz	r6, 9001f9f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001f9dc:	9a07      	ldr	r2, [sp, #28]
9001f9de:	4592      	cmp	sl, r2
9001f9e0:	d109      	bne.n	9001f9f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001f9e2:	f8db 0000 	ldr.w	r0, [fp]
9001f9e6:	fb09 f303 	mul.w	r3, r9, r3
9001f9ea:	4629      	mov	r1, r5
9001f9ec:	6802      	ldr	r2, [r0, #0]
9001f9ee:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001f9f0:	463a      	mov	r2, r7
9001f9f2:	47b0      	blx	r6
9001f9f4:	e7e2      	b.n	9001f9bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001f9f6:	fb0a f303 	mul.w	r3, sl, r3
9001f9fa:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001f9fe:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001fa38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001fa02:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001fa06:	4545      	cmp	r5, r8
9001fa08:	d2d8      	bcs.n	9001f9bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001fa0a:	f8db 0000 	ldr.w	r0, [fp]
9001fa0e:	4629      	mov	r1, r5
9001fa10:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001fa14:	4435      	add	r5, r6
9001fa16:	6802      	ldr	r2, [r0, #0]
9001fa18:	005b      	lsls	r3, r3, #1
9001fa1a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001fa1e:	463a      	mov	r2, r7
9001fa20:	47d0      	blx	sl
9001fa22:	444f      	add	r7, r9
9001fa24:	e7ef      	b.n	9001fa06 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001fa26:	bf00      	nop
9001fa28:	24039ac0 	.word	0x24039ac0
9001fa2c:	24039ac2 	.word	0x24039ac2
9001fa30:	24039ac4 	.word	0x24039ac4
9001fa34:	24039ac6 	.word	0x24039ac6
9001fa38:	24039acc 	.word	0x24039acc

9001fa3c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001fa3c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001fa3e:	4606      	mov	r6, r0
9001fa40:	b087      	sub	sp, #28
9001fa42:	460c      	mov	r4, r1
9001fa44:	4617      	mov	r7, r2
9001fa46:	461d      	mov	r5, r3
9001fa48:	b333      	cbz	r3, 9001fa98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001fa4a:	4608      	mov	r0, r1
9001fa4c:	f7f3 f9fb 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
9001fa50:	bb10      	cbnz	r0, 9001fa98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001fa52:	6820      	ldr	r0, [r4, #0]
9001fa54:	ab04      	add	r3, sp, #16
9001fa56:	6861      	ldr	r1, [r4, #4]
9001fa58:	4c1b      	ldr	r4, [pc, #108]	; (9001fac8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001fa5a:	c303      	stmia	r3!, {r0, r1}
9001fa5c:	a804      	add	r0, sp, #16
9001fa5e:	f7f8 facd 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fa62:	6820      	ldr	r0, [r4, #0]
9001fa64:	6803      	ldr	r3, [r0, #0]
9001fa66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001fa68:	4798      	blx	r3
9001fa6a:	2dff      	cmp	r5, #255	; 0xff
9001fa6c:	d016      	beq.n	9001fa9c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001fa6e:	f010 0f08 	tst.w	r0, #8
9001fa72:	6820      	ldr	r0, [r4, #0]
9001fa74:	d015      	beq.n	9001faa2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001fa76:	2400      	movs	r4, #0
9001fa78:	6801      	ldr	r1, [r0, #0]
9001fa7a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001fa7e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001fa82:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001fa86:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001fa8a:	9401      	str	r4, [sp, #4]
9001fa8c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001fa90:	9400      	str	r4, [sp, #0]
9001fa92:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001fa94:	4639      	mov	r1, r7
9001fa96:	47a0      	blx	r4
9001fa98:	b007      	add	sp, #28
9001fa9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001fa9c:	f010 0f02 	tst.w	r0, #2
9001faa0:	e7e7      	b.n	9001fa72 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001faa2:	6803      	ldr	r3, [r0, #0]
9001faa4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001faa6:	4798      	blx	r3
9001faa8:	4b08      	ldr	r3, [pc, #32]	; (9001facc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001faaa:	4601      	mov	r1, r0
9001faac:	4630      	mov	r0, r6
9001faae:	881a      	ldrh	r2, [r3, #0]
9001fab0:	6833      	ldr	r3, [r6, #0]
9001fab2:	e9cd 7500 	strd	r7, r5, [sp]
9001fab6:	6a5d      	ldr	r5, [r3, #36]	; 0x24
9001fab8:	ab04      	add	r3, sp, #16
9001faba:	47a8      	blx	r5
9001fabc:	6820      	ldr	r0, [r4, #0]
9001fabe:	6803      	ldr	r3, [r0, #0]
9001fac0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001fac2:	4798      	blx	r3
9001fac4:	e7e8      	b.n	9001fa98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001fac6:	bf00      	nop
9001fac8:	24039acc 	.word	0x24039acc
9001facc:	24039ac6 	.word	0x24039ac6

9001fad0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001fad0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001fad4:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
9001fad8:	4688      	mov	r8, r1
9001fada:	4614      	mov	r4, r2
9001fadc:	461d      	mov	r5, r3
9001fade:	9e08      	ldr	r6, [sp, #32]
9001fae0:	2f00      	cmp	r7, #0
9001fae2:	f000 80ab 	beq.w	9001fc3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fae6:	4618      	mov	r0, r3
9001fae8:	f7f3 f9ad 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
9001faec:	2800      	cmp	r0, #0
9001faee:	f040 80a5 	bne.w	9001fc3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001faf2:	f9b5 1000 	ldrsh.w	r1, [r5]
9001faf6:	2fff      	cmp	r7, #255	; 0xff
9001faf8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001fafc:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001fb00:	fb04 1303 	mla	r3, r4, r3, r1
9001fb04:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001fb08:	eba4 0200 	sub.w	r2, r4, r0
9001fb0c:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001fb10:	fb04 f505 	mul.w	r5, r4, r5
9001fb14:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001fb18:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001fb1c:	d04a      	beq.n	9001fbb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001fb1e:	b2bc      	uxth	r4, r7
9001fb20:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9001fb24:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001fb28:	fa5f f788 	uxtb.w	r7, r8
9001fb2c:	b2f3      	uxtb	r3, r6
9001fb2e:	0040      	lsls	r0, r0, #1
9001fb30:	fb0e fe04 	mul.w	lr, lr, r4
9001fb34:	4367      	muls	r7, r4
9001fb36:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001fb3a:	4363      	muls	r3, r4
9001fb3c:	fa1f fc8c 	uxth.w	ip, ip
9001fb40:	42a9      	cmp	r1, r5
9001fb42:	d27b      	bcs.n	9001fc3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fb44:	eb01 0900 	add.w	r9, r1, r0
9001fb48:	4549      	cmp	r1, r9
9001fb4a:	d231      	bcs.n	9001fbb0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001fb4c:	880a      	ldrh	r2, [r1, #0]
9001fb4e:	1214      	asrs	r4, r2, #8
9001fb50:	10d6      	asrs	r6, r2, #3
9001fb52:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001fb56:	00d2      	lsls	r2, r2, #3
9001fb58:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001fb5c:	b2d2      	uxtb	r2, r2
9001fb5e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001fb62:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001fb66:	fb14 f40c 	smulbb	r4, r4, ip
9001fb6a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001fb6e:	fb12 f20c 	smulbb	r2, r2, ip
9001fb72:	fb16 f60c 	smulbb	r6, r6, ip
9001fb76:	4474      	add	r4, lr
9001fb78:	441a      	add	r2, r3
9001fb7a:	b2a4      	uxth	r4, r4
9001fb7c:	443e      	add	r6, r7
9001fb7e:	b292      	uxth	r2, r2
9001fb80:	f104 0a01 	add.w	sl, r4, #1
9001fb84:	b2b6      	uxth	r6, r6
9001fb86:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001fb8a:	f102 0a01 	add.w	sl, r2, #1
9001fb8e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001fb92:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001fb96:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001fb9a:	4322      	orrs	r2, r4
9001fb9c:	1c74      	adds	r4, r6, #1
9001fb9e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001fba2:	0976      	lsrs	r6, r6, #5
9001fba4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001fba8:	4332      	orrs	r2, r6
9001fbaa:	f821 2b02 	strh.w	r2, [r1], #2
9001fbae:	e7cb      	b.n	9001fb48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001fbb0:	4441      	add	r1, r8
9001fbb2:	e7c5      	b.n	9001fb40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001fbb4:	0973      	lsrs	r3, r6, #5
9001fbb6:	4f22      	ldr	r7, [pc, #136]	; (9001fc40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001fbb8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001fbbc:	ea08 0707 	and.w	r7, r8, r7
9001fbc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001fbc4:	433b      	orrs	r3, r7
9001fbc6:	07e7      	lsls	r7, r4, #31
9001fbc8:	ea43 0306 	orr.w	r3, r3, r6
9001fbcc:	b29b      	uxth	r3, r3
9001fbce:	d50b      	bpl.n	9001fbe8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001fbd0:	0040      	lsls	r0, r0, #1
9001fbd2:	0052      	lsls	r2, r2, #1
9001fbd4:	42a9      	cmp	r1, r5
9001fbd6:	d231      	bcs.n	9001fc3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fbd8:	180c      	adds	r4, r1, r0
9001fbda:	42a1      	cmp	r1, r4
9001fbdc:	d202      	bcs.n	9001fbe4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001fbde:	f821 3b02 	strh.w	r3, [r1], #2
9001fbe2:	e7fa      	b.n	9001fbda <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001fbe4:	4411      	add	r1, r2
9001fbe6:	e7f5      	b.n	9001fbd4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001fbe8:	078e      	lsls	r6, r1, #30
9001fbea:	d008      	beq.n	9001fbfe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001fbec:	0066      	lsls	r6, r4, #1
9001fbee:	460a      	mov	r2, r1
9001fbf0:	42aa      	cmp	r2, r5
9001fbf2:	d202      	bcs.n	9001fbfa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001fbf4:	8013      	strh	r3, [r2, #0]
9001fbf6:	4432      	add	r2, r6
9001fbf8:	e7fa      	b.n	9001fbf0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001fbfa:	3102      	adds	r1, #2
9001fbfc:	3801      	subs	r0, #1
9001fbfe:	07c2      	lsls	r2, r0, #31
9001fc00:	d50b      	bpl.n	9001fc1a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001fc02:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9001fc06:	0066      	lsls	r6, r4, #1
9001fc08:	3a01      	subs	r2, #1
9001fc0a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001fc0e:	42aa      	cmp	r2, r5
9001fc10:	d202      	bcs.n	9001fc18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001fc12:	8013      	strh	r3, [r2, #0]
9001fc14:	4432      	add	r2, r6
9001fc16:	e7fa      	b.n	9001fc0e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001fc18:	3801      	subs	r0, #1
9001fc1a:	b178      	cbz	r0, 9001fc3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fc1c:	1040      	asrs	r0, r0, #1
9001fc1e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001fc22:	0080      	lsls	r0, r0, #2
9001fc24:	0064      	lsls	r4, r4, #1
9001fc26:	42a9      	cmp	r1, r5
9001fc28:	d208      	bcs.n	9001fc3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fc2a:	180e      	adds	r6, r1, r0
9001fc2c:	460a      	mov	r2, r1
9001fc2e:	42b2      	cmp	r2, r6
9001fc30:	d202      	bcs.n	9001fc38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001fc32:	f842 3b04 	str.w	r3, [r2], #4
9001fc36:	e7fa      	b.n	9001fc2e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001fc38:	4421      	add	r1, r4
9001fc3a:	e7f4      	b.n	9001fc26 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001fc3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001fc40:	00fff800 	.word	0x00fff800

9001fc44 <_ZN8touchgfx8LCD16bppC1Ev>:
9001fc44:	2200      	movs	r2, #0
9001fc46:	4912      	ldr	r1, [pc, #72]	; (9001fc90 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001fc48:	6042      	str	r2, [r0, #4]
9001fc4a:	6001      	str	r1, [r0, #0]
9001fc4c:	e9c0 2202 	strd	r2, r2, [r0, #8]
9001fc50:	e9c0 2204 	strd	r2, r2, [r0, #16]
9001fc54:	e9c0 2206 	strd	r2, r2, [r0, #24]
9001fc58:	e9c0 2208 	strd	r2, r2, [r0, #32]
9001fc5c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
9001fc60:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
9001fc64:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
9001fc68:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
9001fc6c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
9001fc70:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
9001fc74:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
9001fc78:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
9001fc7c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
9001fc80:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
9001fc84:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
9001fc88:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
9001fc8c:	4770      	bx	lr
9001fc8e:	bf00      	nop
9001fc90:	9002e0f0 	.word	0x9002e0f0

9001fc94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001fc94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fc98:	b08d      	sub	sp, #52	; 0x34
9001fc9a:	460d      	mov	r5, r1
9001fc9c:	4604      	mov	r4, r0
9001fc9e:	4699      	mov	r9, r3
9001fca0:	6808      	ldr	r0, [r1, #0]
9001fca2:	ab08      	add	r3, sp, #32
9001fca4:	6849      	ldr	r1, [r1, #4]
9001fca6:	c303      	stmia	r3!, {r0, r1}
9001fca8:	6810      	ldr	r0, [r2, #0]
9001fcaa:	ab0a      	add	r3, sp, #40	; 0x28
9001fcac:	6851      	ldr	r1, [r2, #4]
9001fcae:	c303      	stmia	r3!, {r0, r1}
9001fcb0:	a808      	add	r0, sp, #32
9001fcb2:	f7f8 f9a3 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fcb6:	4629      	mov	r1, r5
9001fcb8:	a80a      	add	r0, sp, #40	; 0x28
9001fcba:	4d67      	ldr	r5, [pc, #412]	; (9001fe58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001fcbc:	f7f8 f9e2 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fcc0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9001fcc4:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
9001fcc8:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
9001fccc:	6828      	ldr	r0, [r5, #0]
9001fcce:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fcd2:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9001fcd6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001fcda:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001fcde:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001fce2:	440a      	add	r2, r1
9001fce4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001fce8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001fcec:	4413      	add	r3, r2
9001fcee:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001fcf2:	6803      	ldr	r3, [r0, #0]
9001fcf4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001fcf6:	4798      	blx	r3
9001fcf8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001fcfc:	d119      	bne.n	9001fd32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001fcfe:	f010 0f20 	tst.w	r0, #32
9001fd02:	6828      	ldr	r0, [r5, #0]
9001fd04:	d018      	beq.n	9001fd38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001fd06:	2500      	movs	r5, #0
9001fd08:	6801      	ldr	r1, [r0, #0]
9001fd0a:	b2b6      	uxth	r6, r6
9001fd0c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001fd10:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9001fd14:	9601      	str	r6, [sp, #4]
9001fd16:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001fd1a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
9001fd1e:	9502      	str	r5, [sp, #8]
9001fd20:	fa1f f588 	uxth.w	r5, r8
9001fd24:	9500      	str	r5, [sp, #0]
9001fd26:	6d0d      	ldr	r5, [r1, #80]	; 0x50
9001fd28:	4621      	mov	r1, r4
9001fd2a:	47a8      	blx	r5
9001fd2c:	b00d      	add	sp, #52	; 0x34
9001fd2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fd32:	f010 0f40 	tst.w	r0, #64	; 0x40
9001fd36:	e7e4      	b.n	9001fd02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001fd38:	6803      	ldr	r3, [r0, #0]
9001fd3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001fd3c:	4798      	blx	r3
9001fd3e:	4947      	ldr	r1, [pc, #284]	; (9001fe5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001fd40:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001fd44:	880b      	ldrh	r3, [r1, #0]
9001fd46:	468a      	mov	sl, r1
9001fd48:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
9001fd4c:	fb03 5202 	mla	r2, r3, r2, r5
9001fd50:	4373      	muls	r3, r6
9001fd52:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fd56:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fd5a:	9307      	str	r3, [sp, #28]
9001fd5c:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001fd60:	9306      	str	r3, [sp, #24]
9001fd62:	9b07      	ldr	r3, [sp, #28]
9001fd64:	4298      	cmp	r0, r3
9001fd66:	d270      	bcs.n	9001fe4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001fd68:	9b06      	ldr	r3, [sp, #24]
9001fd6a:	4621      	mov	r1, r4
9001fd6c:	eb00 0b03 	add.w	fp, r0, r3
9001fd70:	4558      	cmp	r0, fp
9001fd72:	d25d      	bcs.n	9001fe30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001fd74:	f851 4b04 	ldr.w	r4, [r1], #4
9001fd78:	0e23      	lsrs	r3, r4, #24
9001fd7a:	d014      	beq.n	9001fda6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001fd7c:	2bff      	cmp	r3, #255	; 0xff
9001fd7e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001fd82:	d112      	bne.n	9001fdaa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001fd84:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001fd88:	d10f      	bne.n	9001fdaa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001fd8a:	0963      	lsrs	r3, r4, #5
9001fd8c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9001fd90:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001fd94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001fd98:	f02c 0c07 	bic.w	ip, ip, #7
9001fd9c:	ea43 0c0c 	orr.w	ip, r3, ip
9001fda0:	ea4c 0404 	orr.w	r4, ip, r4
9001fda4:	8004      	strh	r4, [r0, #0]
9001fda6:	3002      	adds	r0, #2
9001fda8:	e7e2      	b.n	9001fd70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001fdaa:	fb09 f303 	mul.w	r3, r9, r3
9001fdae:	8807      	ldrh	r7, [r0, #0]
9001fdb0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001fdb4:	fa5f fc8c 	uxtb.w	ip, ip
9001fdb8:	1c5a      	adds	r2, r3, #1
9001fdba:	123e      	asrs	r6, r7, #8
9001fdbc:	10fd      	asrs	r5, r7, #3
9001fdbe:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001fdc2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001fdc6:	00ff      	lsls	r7, r7, #3
9001fdc8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001fdcc:	1212      	asrs	r2, r2, #8
9001fdce:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001fdd2:	b293      	uxth	r3, r2
9001fdd4:	43d2      	mvns	r2, r2
9001fdd6:	b2ff      	uxtb	r7, r7
9001fdd8:	fb1e fe03 	smulbb	lr, lr, r3
9001fddc:	b2d2      	uxtb	r2, r2
9001fdde:	fb1c fc03 	smulbb	ip, ip, r3
9001fde2:	b2e4      	uxtb	r4, r4
9001fde4:	fb06 e602 	mla	r6, r6, r2, lr
9001fde8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001fdec:	fb14 f403 	smulbb	r4, r4, r3
9001fdf0:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001fdf4:	b2b6      	uxth	r6, r6
9001fdf6:	fb05 c502 	mla	r5, r5, r2, ip
9001fdfa:	fb07 4702 	mla	r7, r7, r2, r4
9001fdfe:	f106 0e01 	add.w	lr, r6, #1
9001fe02:	b2ad      	uxth	r5, r5
9001fe04:	b2bf      	uxth	r7, r7
9001fe06:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001fe0a:	f105 0c01 	add.w	ip, r5, #1
9001fe0e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9001fe12:	1c7e      	adds	r6, r7, #1
9001fe14:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001fe18:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001fe1c:	096d      	lsrs	r5, r5, #5
9001fe1e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001fe22:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001fe26:	ea46 060e 	orr.w	r6, r6, lr
9001fe2a:	432e      	orrs	r6, r5
9001fe2c:	8006      	strh	r6, [r0, #0]
9001fe2e:	e7ba      	b.n	9001fda6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001fe30:	f8ba 3000 	ldrh.w	r3, [sl]
9001fe34:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
9001fe38:	eba3 0308 	sub.w	r3, r3, r8
9001fe3c:	eba4 0408 	sub.w	r4, r4, r8
9001fe40:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fe44:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001fe48:	e78b      	b.n	9001fd62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001fe4a:	4b03      	ldr	r3, [pc, #12]	; (9001fe58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001fe4c:	6818      	ldr	r0, [r3, #0]
9001fe4e:	6803      	ldr	r3, [r0, #0]
9001fe50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001fe52:	4798      	blx	r3
9001fe54:	e76a      	b.n	9001fd2c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001fe56:	bf00      	nop
9001fe58:	24039acc 	.word	0x24039acc
9001fe5c:	24039ac6 	.word	0x24039ac6

9001fe60 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001fe60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001fe64:	b085      	sub	sp, #20
9001fe66:	6810      	ldr	r0, [r2, #0]
9001fe68:	460c      	mov	r4, r1
9001fe6a:	6851      	ldr	r1, [r2, #4]
9001fe6c:	466d      	mov	r5, sp
9001fe6e:	4616      	mov	r6, r2
9001fe70:	c503      	stmia	r5!, {r0, r1}
9001fe72:	6818      	ldr	r0, [r3, #0]
9001fe74:	6859      	ldr	r1, [r3, #4]
9001fe76:	c503      	stmia	r5!, {r0, r1}
9001fe78:	4668      	mov	r0, sp
9001fe7a:	4d2e      	ldr	r5, [pc, #184]	; (9001ff34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001fe7c:	f7f8 f8be 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fe80:	4631      	mov	r1, r6
9001fe82:	a802      	add	r0, sp, #8
9001fe84:	4e2c      	ldr	r6, [pc, #176]	; (9001ff38 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001fe86:	f7f8 f8fd 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fe8a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001fe8e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001fe92:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001fe96:	6828      	ldr	r0, [r5, #0]
9001fe98:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fe9c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001fea0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001fea4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001fea8:	f8bd 1000 	ldrh.w	r1, [sp]
9001feac:	440a      	add	r2, r1
9001feae:	f8ad 2008 	strh.w	r2, [sp, #8]
9001feb2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001feb6:	4413      	add	r3, r2
9001feb8:	f8ad 300a 	strh.w	r3, [sp, #10]
9001febc:	6803      	ldr	r3, [r0, #0]
9001febe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001fec0:	4798      	blx	r3
9001fec2:	8833      	ldrh	r3, [r6, #0]
9001fec4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001fec8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001fecc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001fed0:	f8df e068 	ldr.w	lr, [pc, #104]	; 9001ff3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001fed4:	fb03 1202 	mla	r2, r3, r2, r1
9001fed8:	fb08 f303 	mul.w	r3, r8, r3
9001fedc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fee0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fee4:	4298      	cmp	r0, r3
9001fee6:	d21d      	bcs.n	9001ff24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001fee8:	eb00 080c 	add.w	r8, r0, ip
9001feec:	4540      	cmp	r0, r8
9001feee:	d20f      	bcs.n	9001ff10 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001fef0:	f854 1b04 	ldr.w	r1, [r4], #4
9001fef4:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001fef8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001fefc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001ff00:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001ff04:	ea42 0209 	orr.w	r2, r2, r9
9001ff08:	430a      	orrs	r2, r1
9001ff0a:	f820 2b02 	strh.w	r2, [r0], #2
9001ff0e:	e7ed      	b.n	9001feec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001ff10:	8832      	ldrh	r2, [r6, #0]
9001ff12:	1bd2      	subs	r2, r2, r7
9001ff14:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ff18:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001ff1c:	1bd2      	subs	r2, r2, r7
9001ff1e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001ff22:	e7df      	b.n	9001fee4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001ff24:	6828      	ldr	r0, [r5, #0]
9001ff26:	6803      	ldr	r3, [r0, #0]
9001ff28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ff2a:	4798      	blx	r3
9001ff2c:	b005      	add	sp, #20
9001ff2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001ff32:	bf00      	nop
9001ff34:	24039acc 	.word	0x24039acc
9001ff38:	24039ac6 	.word	0x24039ac6
9001ff3c:	fffff800 	.word	0xfffff800

9001ff40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001ff40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ff44:	b08e      	sub	sp, #56	; 0x38
9001ff46:	460e      	mov	r6, r1
9001ff48:	4604      	mov	r4, r0
9001ff4a:	461d      	mov	r5, r3
9001ff4c:	6808      	ldr	r0, [r1, #0]
9001ff4e:	ab0a      	add	r3, sp, #40	; 0x28
9001ff50:	6849      	ldr	r1, [r1, #4]
9001ff52:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 90020128 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001ff56:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9002012c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001ff5a:	c303      	stmia	r3!, {r0, r1}
9001ff5c:	6810      	ldr	r0, [r2, #0]
9001ff5e:	ab0c      	add	r3, sp, #48	; 0x30
9001ff60:	6851      	ldr	r1, [r2, #4]
9001ff62:	c303      	stmia	r3!, {r0, r1}
9001ff64:	a80a      	add	r0, sp, #40	; 0x28
9001ff66:	f7f8 f849 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ff6a:	4631      	mov	r1, r6
9001ff6c:	a80c      	add	r0, sp, #48	; 0x30
9001ff6e:	f7f8 f889 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ff72:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9001ff76:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001ff7a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001ff7e:	f8d8 0000 	ldr.w	r0, [r8]
9001ff82:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ff86:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
9001ff8a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001ff8e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001ff92:	440c      	add	r4, r1
9001ff94:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
9001ff98:	440a      	add	r2, r1
9001ff9a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9001ff9e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
9001ffa2:	4413      	add	r3, r2
9001ffa4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001ffa8:	6803      	ldr	r3, [r0, #0]
9001ffaa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ffac:	4798      	blx	r3
9001ffae:	2dff      	cmp	r5, #255	; 0xff
9001ffb0:	d124      	bne.n	9001fffc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001ffb2:	f010 0f01 	tst.w	r0, #1
9001ffb6:	f8d8 0000 	ldr.w	r0, [r8]
9001ffba:	d022      	beq.n	90020002 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001ffbc:	2100      	movs	r1, #0
9001ffbe:	f04f 0e01 	mov.w	lr, #1
9001ffc2:	f8d0 c000 	ldr.w	ip, [r0]
9001ffc6:	b2b6      	uxth	r6, r6
9001ffc8:	f8cd e018 	str.w	lr, [sp, #24]
9001ffcc:	b2bf      	uxth	r7, r7
9001ffce:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001ffd2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001ffd6:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001ffda:	f8b9 e000 	ldrh.w	lr, [r9]
9001ffde:	9503      	str	r5, [sp, #12]
9001ffe0:	9601      	str	r6, [sp, #4]
9001ffe2:	9700      	str	r7, [sp, #0]
9001ffe4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001ffe8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001ffec:	9102      	str	r1, [sp, #8]
9001ffee:	4621      	mov	r1, r4
9001fff0:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9001fff4:	47a8      	blx	r5
9001fff6:	b00e      	add	sp, #56	; 0x38
9001fff8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001fffc:	f010 0f04 	tst.w	r0, #4
90020000:	e7d9      	b.n	9001ffb6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
90020002:	6803      	ldr	r3, [r0, #0]
90020004:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020006:	4798      	blx	r3
90020008:	f8b9 3000 	ldrh.w	r3, [r9]
9002000c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
90020010:	ea4f 0e47 	mov.w	lr, r7, lsl #1
90020014:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
90020018:	435e      	muls	r6, r3
9002001a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9002001e:	2dff      	cmp	r5, #255	; 0xff
90020020:	fb03 1202 	mla	r2, r3, r2, r1
90020024:	ebac 0c07 	sub.w	ip, ip, r7
90020028:	eba3 0707 	sub.w	r7, r3, r7
9002002c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020030:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90020034:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90020038:	ea4f 0747 	mov.w	r7, r7, lsl #1
9002003c:	d049      	beq.n	900200d2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9002003e:	43eb      	mvns	r3, r5
90020040:	fa1f f985 	uxth.w	r9, r5
90020044:	b2db      	uxtb	r3, r3
90020046:	42b0      	cmp	r0, r6
90020048:	d266      	bcs.n	90020118 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9002004a:	eb00 0a0e 	add.w	sl, r0, lr
9002004e:	4550      	cmp	r0, sl
90020050:	4621      	mov	r1, r4
90020052:	f104 0403 	add.w	r4, r4, #3
90020056:	d25b      	bcs.n	90020110 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
90020058:	8802      	ldrh	r2, [r0, #0]
9002005a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9002005e:	ea4f 2822 	mov.w	r8, r2, asr #8
90020062:	fb11 f109 	smulbb	r1, r1, r9
90020066:	10d5      	asrs	r5, r2, #3
90020068:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9002006c:	00d2      	lsls	r2, r2, #3
9002006e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90020072:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
90020076:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9002007a:	fb08 1803 	mla	r8, r8, r3, r1
9002007e:	f814 1c02 	ldrb.w	r1, [r4, #-2]
90020082:	b2d2      	uxtb	r2, r2
90020084:	fb11 f109 	smulbb	r1, r1, r9
90020088:	fa1f f888 	uxth.w	r8, r8
9002008c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020090:	fb05 1503 	mla	r5, r5, r3, r1
90020094:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90020098:	fb11 f109 	smulbb	r1, r1, r9
9002009c:	b2ad      	uxth	r5, r5
9002009e:	fb02 1203 	mla	r2, r2, r3, r1
900200a2:	f108 0101 	add.w	r1, r8, #1
900200a6:	b292      	uxth	r2, r2
900200a8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
900200ac:	1c51      	adds	r1, r2, #1
900200ae:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
900200b2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900200b6:	1c69      	adds	r1, r5, #1
900200b8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900200bc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900200c0:	096d      	lsrs	r5, r5, #5
900200c2:	ea42 0208 	orr.w	r2, r2, r8
900200c6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900200ca:	432a      	orrs	r2, r5
900200cc:	f820 2b02 	strh.w	r2, [r0], #2
900200d0:	e7bd      	b.n	9002004e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
900200d2:	4a14      	ldr	r2, [pc, #80]	; (90020124 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
900200d4:	42b0      	cmp	r0, r6
900200d6:	d21f      	bcs.n	90020118 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
900200d8:	eb00 050e 	add.w	r5, r0, lr
900200dc:	42a8      	cmp	r0, r5
900200de:	4621      	mov	r1, r4
900200e0:	f104 0403 	add.w	r4, r4, #3
900200e4:	d210      	bcs.n	90020108 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
900200e6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
900200ea:	f814 1c01 	ldrb.w	r1, [r4, #-1]
900200ee:	00db      	lsls	r3, r3, #3
900200f0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
900200f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900200f8:	430b      	orrs	r3, r1
900200fa:	f814 1c03 	ldrb.w	r1, [r4, #-3]
900200fe:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
90020102:	f820 3b02 	strh.w	r3, [r0], #2
90020106:	e7e9      	b.n	900200dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
90020108:	4438      	add	r0, r7
9002010a:	eb01 040c 	add.w	r4, r1, ip
9002010e:	e7e1      	b.n	900200d4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
90020110:	4438      	add	r0, r7
90020112:	eb01 040c 	add.w	r4, r1, ip
90020116:	e796      	b.n	90020046 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
90020118:	4b03      	ldr	r3, [pc, #12]	; (90020128 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9002011a:	6818      	ldr	r0, [r3, #0]
9002011c:	6803      	ldr	r3, [r0, #0]
9002011e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020120:	4798      	blx	r3
90020122:	e768      	b.n	9001fff6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
90020124:	fffff800 	.word	0xfffff800
90020128:	24039acc 	.word	0x24039acc
9002012c:	24039ac6 	.word	0x24039ac6

90020130 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
90020130:	b4f0      	push	{r4, r5, r6, r7}
90020132:	4616      	mov	r6, r2
90020134:	461c      	mov	r4, r3
90020136:	460d      	mov	r5, r1
90020138:	9a04      	ldr	r2, [sp, #16]
9002013a:	2e01      	cmp	r6, #1
9002013c:	f89d 3014 	ldrb.w	r3, [sp, #20]
90020140:	f89d 7018 	ldrb.w	r7, [sp, #24]
90020144:	d012      	beq.n	9002016c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
90020146:	d303      	bcc.n	90020150 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
90020148:	2e02      	cmp	r6, #2
9002014a:	d00a      	beq.n	90020162 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9002014c:	bcf0      	pop	{r4, r5, r6, r7}
9002014e:	4770      	bx	lr
90020150:	6805      	ldr	r5, [r0, #0]
90020152:	e9cd 3704 	strd	r3, r7, [sp, #16]
90020156:	68ed      	ldr	r5, [r5, #12]
90020158:	4613      	mov	r3, r2
9002015a:	4622      	mov	r2, r4
9002015c:	46ac      	mov	ip, r5
9002015e:	bcf0      	pop	{r4, r5, r6, r7}
90020160:	4760      	bx	ip
90020162:	4621      	mov	r1, r4
90020164:	4628      	mov	r0, r5
90020166:	bcf0      	pop	{r4, r5, r6, r7}
90020168:	f7ff bd94 	b.w	9001fc94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9002016c:	4621      	mov	r1, r4
9002016e:	4628      	mov	r0, r5
90020170:	bcf0      	pop	{r4, r5, r6, r7}
90020172:	f7ff bee5 	b.w	9001ff40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

90020178 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
90020178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002017c:	b093      	sub	sp, #76	; 0x4c
9002017e:	4681      	mov	r9, r0
90020180:	4688      	mov	r8, r1
90020182:	6810      	ldr	r0, [r2, #0]
90020184:	6851      	ldr	r1, [r2, #4]
90020186:	ac0e      	add	r4, sp, #56	; 0x38
90020188:	4616      	mov	r6, r2
9002018a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
9002018e:	4f6b      	ldr	r7, [pc, #428]	; (9002033c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
90020190:	c403      	stmia	r4!, {r0, r1}
90020192:	6818      	ldr	r0, [r3, #0]
90020194:	ac10      	add	r4, sp, #64	; 0x40
90020196:	6859      	ldr	r1, [r3, #4]
90020198:	c403      	stmia	r4!, {r0, r1}
9002019a:	a80e      	add	r0, sp, #56	; 0x38
9002019c:	f7f7 ff2e 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900201a0:	4631      	mov	r1, r6
900201a2:	a810      	add	r0, sp, #64	; 0x40
900201a4:	4e66      	ldr	r6, [pc, #408]	; (90020340 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
900201a6:	f7f7 ff6d 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900201aa:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
900201ae:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
900201b2:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
900201b6:	6830      	ldr	r0, [r6, #0]
900201b8:	fb11 2103 	smlabb	r1, r1, r3, r2
900201bc:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
900201c0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
900201c4:	4489      	add	r9, r1
900201c6:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
900201ca:	440a      	add	r2, r1
900201cc:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
900201d0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
900201d4:	4413      	add	r3, r2
900201d6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
900201da:	6803      	ldr	r3, [r0, #0]
900201dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900201de:	4798      	blx	r3
900201e0:	f010 0f80 	tst.w	r0, #128	; 0x80
900201e4:	6830      	ldr	r0, [r6, #0]
900201e6:	d01d      	beq.n	90020224 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
900201e8:	2200      	movs	r2, #0
900201ea:	6801      	ldr	r1, [r0, #0]
900201ec:	b2a4      	uxth	r4, r4
900201ee:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900201f2:	b2ad      	uxth	r5, r5
900201f4:	e9cd 2208 	strd	r2, r2, [sp, #32]
900201f8:	220b      	movs	r2, #11
900201fa:	9207      	str	r2, [sp, #28]
900201fc:	883a      	ldrh	r2, [r7, #0]
900201fe:	9502      	str	r5, [sp, #8]
90020200:	9206      	str	r2, [sp, #24]
90020202:	2201      	movs	r2, #1
90020204:	9401      	str	r4, [sp, #4]
90020206:	e9cd a204 	strd	sl, r2, [sp, #16]
9002020a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9002020e:	9203      	str	r2, [sp, #12]
90020210:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
90020214:	9200      	str	r2, [sp, #0]
90020216:	4642      	mov	r2, r8
90020218:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9002021a:	4649      	mov	r1, r9
9002021c:	47a0      	blx	r4
9002021e:	b013      	add	sp, #76	; 0x4c
90020220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020224:	6803      	ldr	r3, [r0, #0]
90020226:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020228:	4798      	blx	r3
9002022a:	883b      	ldrh	r3, [r7, #0]
9002022c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
90020230:	f04f 0e04 	mov.w	lr, #4
90020234:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
90020238:	435d      	muls	r5, r3
9002023a:	fb03 1202 	mla	r2, r3, r2, r1
9002023e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020242:	eb00 0245 	add.w	r2, r0, r5, lsl #1
90020246:	920c      	str	r2, [sp, #48]	; 0x30
90020248:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
9002024c:	1b12      	subs	r2, r2, r4
9002024e:	920d      	str	r2, [sp, #52]	; 0x34
90020250:	0062      	lsls	r2, r4, #1
90020252:	1b1c      	subs	r4, r3, r4
90020254:	920a      	str	r2, [sp, #40]	; 0x28
90020256:	0063      	lsls	r3, r4, #1
90020258:	930b      	str	r3, [sp, #44]	; 0x2c
9002025a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002025c:	4298      	cmp	r0, r3
9002025e:	d266      	bcs.n	9002032e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
90020260:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020262:	eb00 0b03 	add.w	fp, r0, r3
90020266:	4558      	cmp	r0, fp
90020268:	d25c      	bcs.n	90020324 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9002026a:	f819 3b01 	ldrb.w	r3, [r9], #1
9002026e:	fb1e e303 	smlabb	r3, lr, r3, lr
90020272:	f858 2003 	ldr.w	r2, [r8, r3]
90020276:	0e11      	lsrs	r1, r2, #24
90020278:	d012      	beq.n	900202a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9002027a:	29ff      	cmp	r1, #255	; 0xff
9002027c:	ea4f 2712 	mov.w	r7, r2, lsr #8
90020280:	d110      	bne.n	900202a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90020282:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
90020286:	d10d      	bne.n	900202a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90020288:	0953      	lsrs	r3, r2, #5
9002028a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
9002028e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020292:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020296:	f027 0707 	bic.w	r7, r7, #7
9002029a:	431f      	orrs	r7, r3
9002029c:	433a      	orrs	r2, r7
9002029e:	8002      	strh	r2, [r0, #0]
900202a0:	3002      	adds	r0, #2
900202a2:	e7e0      	b.n	90020266 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
900202a4:	fb0a f101 	mul.w	r1, sl, r1
900202a8:	8806      	ldrh	r6, [r0, #0]
900202aa:	f3c2 4c07 	ubfx	ip, r2, #16, #8
900202ae:	b2d2      	uxtb	r2, r2
900202b0:	1c4b      	adds	r3, r1, #1
900202b2:	1235      	asrs	r5, r6, #8
900202b4:	10f4      	asrs	r4, r6, #3
900202b6:	eb03 2321 	add.w	r3, r3, r1, asr #8
900202ba:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900202be:	00f6      	lsls	r6, r6, #3
900202c0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
900202c4:	121b      	asrs	r3, r3, #8
900202c6:	b2f6      	uxtb	r6, r6
900202c8:	b299      	uxth	r1, r3
900202ca:	43db      	mvns	r3, r3
900202cc:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
900202d0:	fb1c fc01 	smulbb	ip, ip, r1
900202d4:	b2db      	uxtb	r3, r3
900202d6:	fb12 f201 	smulbb	r2, r2, r1
900202da:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
900202de:	fb05 c503 	mla	r5, r5, r3, ip
900202e2:	b2ff      	uxtb	r7, r7
900202e4:	fb06 2203 	mla	r2, r6, r3, r2
900202e8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
900202ec:	fb17 f701 	smulbb	r7, r7, r1
900202f0:	b2ad      	uxth	r5, r5
900202f2:	b292      	uxth	r2, r2
900202f4:	fb04 7403 	mla	r4, r4, r3, r7
900202f8:	f105 0c01 	add.w	ip, r5, #1
900202fc:	1c57      	adds	r7, r2, #1
900202fe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90020302:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90020306:	b2a4      	uxth	r4, r4
90020308:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002030c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020310:	433d      	orrs	r5, r7
90020312:	1c67      	adds	r7, r4, #1
90020314:	eb07 2414 	add.w	r4, r7, r4, lsr #8
90020318:	0964      	lsrs	r4, r4, #5
9002031a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002031e:	4325      	orrs	r5, r4
90020320:	8005      	strh	r5, [r0, #0]
90020322:	e7bd      	b.n	900202a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
90020324:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020326:	4418      	add	r0, r3
90020328:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002032a:	4499      	add	r9, r3
9002032c:	e795      	b.n	9002025a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9002032e:	4b04      	ldr	r3, [pc, #16]	; (90020340 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90020330:	6818      	ldr	r0, [r3, #0]
90020332:	6803      	ldr	r3, [r0, #0]
90020334:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020336:	4798      	blx	r3
90020338:	e771      	b.n	9002021e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9002033a:	bf00      	nop
9002033c:	24039ac6 	.word	0x24039ac6
90020340:	24039acc 	.word	0x24039acc

90020344 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
90020344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020348:	b087      	sub	sp, #28
9002034a:	4680      	mov	r8, r0
9002034c:	460d      	mov	r5, r1
9002034e:	4614      	mov	r4, r2
90020350:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
90020354:	2e00      	cmp	r6, #0
90020356:	f000 80b9 	beq.w	900204cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9002035a:	6810      	ldr	r0, [r2, #0]
9002035c:	af02      	add	r7, sp, #8
9002035e:	6851      	ldr	r1, [r2, #4]
90020360:	c703      	stmia	r7!, {r0, r1}
90020362:	6818      	ldr	r0, [r3, #0]
90020364:	af04      	add	r7, sp, #16
90020366:	6859      	ldr	r1, [r3, #4]
90020368:	c703      	stmia	r7!, {r0, r1}
9002036a:	a802      	add	r0, sp, #8
9002036c:	f7f7 fe46 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020370:	4621      	mov	r1, r4
90020372:	a804      	add	r0, sp, #16
90020374:	f7f7 fe86 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020378:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9002037c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020380:	f8bd 400c 	ldrh.w	r4, [sp, #12]
90020384:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
90020388:	fb14 2103 	smlabb	r1, r4, r3, r2
9002038c:	eb08 0401 	add.w	r4, r8, r1
90020390:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020394:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90020398:	440a      	add	r2, r1
9002039a:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9002039e:	f8ad 2010 	strh.w	r2, [sp, #16]
900203a2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900203a6:	4413      	add	r3, r2
900203a8:	f8ad 3012 	strh.w	r3, [sp, #18]
900203ac:	4b49      	ldr	r3, [pc, #292]	; (900204d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
900203ae:	6818      	ldr	r0, [r3, #0]
900203b0:	6803      	ldr	r3, [r0, #0]
900203b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900203b4:	4798      	blx	r3
900203b6:	4b48      	ldr	r3, [pc, #288]	; (900204d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
900203b8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
900203bc:	2eff      	cmp	r6, #255	; 0xff
900203be:	881a      	ldrh	r2, [r3, #0]
900203c0:	f9bd c010 	ldrsh.w	ip, [sp, #16]
900203c4:	fb02 c101 	mla	r1, r2, r1, ip
900203c8:	fb02 f207 	mul.w	r2, r2, r7
900203cc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900203d0:	f105 0104 	add.w	r1, r5, #4
900203d4:	461d      	mov	r5, r3
900203d6:	d05a      	beq.n	9002048e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
900203d8:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
900203dc:	eb00 0242 	add.w	r2, r0, r2, lsl #1
900203e0:	b2b6      	uxth	r6, r6
900203e2:	9301      	str	r3, [sp, #4]
900203e4:	fa1f fe8e 	uxth.w	lr, lr
900203e8:	4282      	cmp	r2, r0
900203ea:	d96a      	bls.n	900204c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
900203ec:	eb00 0b0a 	add.w	fp, r0, sl
900203f0:	4583      	cmp	fp, r0
900203f2:	d940      	bls.n	90020476 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
900203f4:	8805      	ldrh	r5, [r0, #0]
900203f6:	f814 3b01 	ldrb.w	r3, [r4], #1
900203fa:	122f      	asrs	r7, r5, #8
900203fc:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90020400:	ea4f 09e5 	mov.w	r9, r5, asr #3
90020404:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90020408:	00ed      	lsls	r5, r5, #3
9002040a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002040e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90020412:	fb17 f70e 	smulbb	r7, r7, lr
90020416:	b2ed      	uxtb	r5, r5
90020418:	fb19 f90e 	smulbb	r9, r9, lr
9002041c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90020420:	fb15 f50e 	smulbb	r5, r5, lr
90020424:	fb0c 7c06 	mla	ip, ip, r6, r7
90020428:	10df      	asrs	r7, r3, #3
9002042a:	00db      	lsls	r3, r3, #3
9002042c:	fa1f fc8c 	uxth.w	ip, ip
90020430:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90020434:	b2db      	uxtb	r3, r3
90020436:	fb07 9706 	mla	r7, r7, r6, r9
9002043a:	f10c 0901 	add.w	r9, ip, #1
9002043e:	fb03 5306 	mla	r3, r3, r6, r5
90020442:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
90020446:	b29b      	uxth	r3, r3
90020448:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
9002044c:	b2bf      	uxth	r7, r7
9002044e:	f103 0c01 	add.w	ip, r3, #1
90020452:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020456:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002045a:	ea4c 0c09 	orr.w	ip, ip, r9
9002045e:	f107 0901 	add.w	r9, r7, #1
90020462:	eb09 2717 	add.w	r7, r9, r7, lsr #8
90020466:	097f      	lsrs	r7, r7, #5
90020468:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002046c:	ea4c 0c07 	orr.w	ip, ip, r7
90020470:	f820 cb02 	strh.w	ip, [r0], #2
90020474:	e7bc      	b.n	900203f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
90020476:	9b01      	ldr	r3, [sp, #4]
90020478:	881b      	ldrh	r3, [r3, #0]
9002047a:	eba3 0308 	sub.w	r3, r3, r8
9002047e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020482:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90020486:	eba3 0308 	sub.w	r3, r3, r8
9002048a:	441c      	add	r4, r3
9002048c:	e7ac      	b.n	900203e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9002048e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020492:	4282      	cmp	r2, r0
90020494:	d915      	bls.n	900204c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90020496:	eb00 060a 	add.w	r6, r0, sl
9002049a:	4286      	cmp	r6, r0
9002049c:	d906      	bls.n	900204ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9002049e:	f814 3b01 	ldrb.w	r3, [r4], #1
900204a2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
900204a6:	f820 3b02 	strh.w	r3, [r0], #2
900204aa:	e7f6      	b.n	9002049a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
900204ac:	882b      	ldrh	r3, [r5, #0]
900204ae:	eba3 0308 	sub.w	r3, r3, r8
900204b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900204b6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900204ba:	eba3 0308 	sub.w	r3, r3, r8
900204be:	441c      	add	r4, r3
900204c0:	e7e7      	b.n	90020492 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
900204c2:	4b04      	ldr	r3, [pc, #16]	; (900204d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
900204c4:	6818      	ldr	r0, [r3, #0]
900204c6:	6803      	ldr	r3, [r0, #0]
900204c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900204ca:	4798      	blx	r3
900204cc:	b007      	add	sp, #28
900204ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900204d2:	bf00      	nop
900204d4:	24039acc 	.word	0x24039acc
900204d8:	24039ac6 	.word	0x24039ac6

900204dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
900204dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900204e0:	b091      	sub	sp, #68	; 0x44
900204e2:	4680      	mov	r8, r0
900204e4:	460f      	mov	r7, r1
900204e6:	4614      	mov	r4, r2
900204e8:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
900204ec:	2d00      	cmp	r5, #0
900204ee:	d051      	beq.n	90020594 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
900204f0:	6810      	ldr	r0, [r2, #0]
900204f2:	ae0c      	add	r6, sp, #48	; 0x30
900204f4:	6851      	ldr	r1, [r2, #4]
900204f6:	f8df 9200 	ldr.w	r9, [pc, #512]	; 900206f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
900204fa:	c603      	stmia	r6!, {r0, r1}
900204fc:	6818      	ldr	r0, [r3, #0]
900204fe:	ae0e      	add	r6, sp, #56	; 0x38
90020500:	6859      	ldr	r1, [r3, #4]
90020502:	c603      	stmia	r6!, {r0, r1}
90020504:	a80c      	add	r0, sp, #48	; 0x30
90020506:	f7f7 fd79 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002050a:	4621      	mov	r1, r4
9002050c:	a80e      	add	r0, sp, #56	; 0x38
9002050e:	f7f7 fdb9 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020512:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
90020516:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9002051a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9002051e:	f8d9 0000 	ldr.w	r0, [r9]
90020522:	fb11 2103 	smlabb	r1, r1, r3, r2
90020526:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9002052a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
9002052e:	eb08 0401 	add.w	r4, r8, r1
90020532:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
90020536:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 900206fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9002053a:	440a      	add	r2, r1
9002053c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
90020540:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
90020544:	4413      	add	r3, r2
90020546:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9002054a:	6803      	ldr	r3, [r0, #0]
9002054c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9002054e:	4798      	blx	r3
90020550:	f010 0f80 	tst.w	r0, #128	; 0x80
90020554:	f8d9 0000 	ldr.w	r0, [r9]
90020558:	d01f      	beq.n	9002059a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9002055a:	2200      	movs	r2, #0
9002055c:	6801      	ldr	r1, [r0, #0]
9002055e:	b2b6      	uxth	r6, r6
90020560:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90020564:	e9cd 2208 	strd	r2, r2, [sp, #32]
90020568:	220b      	movs	r2, #11
9002056a:	9207      	str	r2, [sp, #28]
9002056c:	f8b8 2000 	ldrh.w	r2, [r8]
90020570:	9601      	str	r6, [sp, #4]
90020572:	9206      	str	r2, [sp, #24]
90020574:	2201      	movs	r2, #1
90020576:	e9cd 5204 	strd	r5, r2, [sp, #16]
9002057a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
9002057e:	9203      	str	r2, [sp, #12]
90020580:	fa1f f28a 	uxth.w	r2, sl
90020584:	9202      	str	r2, [sp, #8]
90020586:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9002058a:	9200      	str	r2, [sp, #0]
9002058c:	463a      	mov	r2, r7
9002058e:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
90020590:	4621      	mov	r1, r4
90020592:	47a8      	blx	r5
90020594:	b011      	add	sp, #68	; 0x44
90020596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002059a:	6803      	ldr	r3, [r0, #0]
9002059c:	ea4f 0946 	mov.w	r9, r6, lsl #1
900205a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900205a2:	4798      	blx	r3
900205a4:	f8b8 2000 	ldrh.w	r2, [r8]
900205a8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
900205ac:	2dff      	cmp	r5, #255	; 0xff
900205ae:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
900205b2:	fb0a fa02 	mul.w	sl, sl, r2
900205b6:	fb02 1303 	mla	r3, r2, r3, r1
900205ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900205be:	d062      	beq.n	90020686 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
900205c0:	ea6f 0c05 	mvn.w	ip, r5
900205c4:	eb00 034a 	add.w	r3, r0, sl, lsl #1
900205c8:	b2ad      	uxth	r5, r5
900205ca:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
900205ce:	fa5f fc8c 	uxtb.w	ip, ip
900205d2:	930a      	str	r3, [sp, #40]	; 0x28
900205d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900205d6:	4298      	cmp	r0, r3
900205d8:	f080 8085 	bcs.w	900206e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
900205dc:	eb00 0b09 	add.w	fp, r0, r9
900205e0:	4558      	cmp	r0, fp
900205e2:	d246      	bcs.n	90020672 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
900205e4:	f814 eb01 	ldrb.w	lr, [r4], #1
900205e8:	2303      	movs	r3, #3
900205ea:	2204      	movs	r2, #4
900205ec:	fb13 2e0e 	smlabb	lr, r3, lr, r2
900205f0:	8803      	ldrh	r3, [r0, #0]
900205f2:	eb07 0a0e 	add.w	sl, r7, lr
900205f6:	1219      	asrs	r1, r3, #8
900205f8:	10da      	asrs	r2, r3, #3
900205fa:	f817 e00e 	ldrb.w	lr, [r7, lr]
900205fe:	f89a 8002 	ldrb.w	r8, [sl, #2]
90020602:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90020606:	00db      	lsls	r3, r3, #3
90020608:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002060c:	fb18 f805 	smulbb	r8, r8, r5
90020610:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90020614:	fb1e fe05 	smulbb	lr, lr, r5
90020618:	b2db      	uxtb	r3, r3
9002061a:	fb01 810c 	mla	r1, r1, ip, r8
9002061e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90020622:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
90020626:	fb18 f805 	smulbb	r8, r8, r5
9002062a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9002062e:	b289      	uxth	r1, r1
90020630:	fb02 820c 	mla	r2, r2, ip, r8
90020634:	fb03 e30c 	mla	r3, r3, ip, lr
90020638:	f101 0801 	add.w	r8, r1, #1
9002063c:	b292      	uxth	r2, r2
9002063e:	b29b      	uxth	r3, r3
90020640:	eb08 2111 	add.w	r1, r8, r1, lsr #8
90020644:	f102 0801 	add.w	r8, r2, #1
90020648:	f103 0e01 	add.w	lr, r3, #1
9002064c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
90020650:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90020654:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
90020658:	ea4f 1858 	mov.w	r8, r8, lsr #5
9002065c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90020660:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90020664:	ea4e 0101 	orr.w	r1, lr, r1
90020668:	ea41 0108 	orr.w	r1, r1, r8
9002066c:	f820 1b02 	strh.w	r1, [r0], #2
90020670:	e7b6      	b.n	900205e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
90020672:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020674:	881b      	ldrh	r3, [r3, #0]
90020676:	1b9b      	subs	r3, r3, r6
90020678:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002067c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90020680:	1b9b      	subs	r3, r3, r6
90020682:	441c      	add	r4, r3
90020684:	e7a6      	b.n	900205d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
90020686:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9002068a:	2203      	movs	r2, #3
9002068c:	2504      	movs	r5, #4
9002068e:	4919      	ldr	r1, [pc, #100]	; (900206f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90020690:	4550      	cmp	r0, sl
90020692:	d228      	bcs.n	900206e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020694:	eb00 0c09 	add.w	ip, r0, r9
90020698:	4560      	cmp	r0, ip
9002069a:	4623      	mov	r3, r4
9002069c:	d219      	bcs.n	900206d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9002069e:	f893 e000 	ldrb.w	lr, [r3]
900206a2:	3401      	adds	r4, #1
900206a4:	fb12 5e0e 	smlabb	lr, r2, lr, r5
900206a8:	eb07 0b0e 	add.w	fp, r7, lr
900206ac:	f817 e00e 	ldrb.w	lr, [r7, lr]
900206b0:	f89b 3002 	ldrb.w	r3, [fp, #2]
900206b4:	f89b b001 	ldrb.w	fp, [fp, #1]
900206b8:	ea01 2303 	and.w	r3, r1, r3, lsl #8
900206bc:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
900206c0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
900206c4:	ea43 030b 	orr.w	r3, r3, fp
900206c8:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
900206cc:	f820 3b02 	strh.w	r3, [r0], #2
900206d0:	e7e2      	b.n	90020698 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
900206d2:	f8b8 3000 	ldrh.w	r3, [r8]
900206d6:	1b9b      	subs	r3, r3, r6
900206d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900206dc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
900206e0:	1b9b      	subs	r3, r3, r6
900206e2:	441c      	add	r4, r3
900206e4:	e7d4      	b.n	90020690 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
900206e6:	4b04      	ldr	r3, [pc, #16]	; (900206f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
900206e8:	6818      	ldr	r0, [r3, #0]
900206ea:	6803      	ldr	r3, [r0, #0]
900206ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900206ee:	4798      	blx	r3
900206f0:	e750      	b.n	90020594 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
900206f2:	bf00      	nop
900206f4:	fffff800 	.word	0xfffff800
900206f8:	24039acc 	.word	0x24039acc
900206fc:	24039ac6 	.word	0x24039ac6

90020700 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90020700:	b4f0      	push	{r4, r5, r6, r7}
90020702:	460c      	mov	r4, r1
90020704:	4611      	mov	r1, r2
90020706:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002070a:	461a      	mov	r2, r3
9002070c:	780f      	ldrb	r7, [r1, #0]
9002070e:	9b04      	ldr	r3, [sp, #16]
90020710:	2f01      	cmp	r7, #1
90020712:	784e      	ldrb	r6, [r1, #1]
90020714:	d036      	beq.n	90020784 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
90020716:	d31e      	bcc.n	90020756 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
90020718:	2f02      	cmp	r7, #2
9002071a:	d14a      	bne.n	900207b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9002071c:	2e03      	cmp	r6, #3
9002071e:	d848      	bhi.n	900207b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
90020720:	e8df f006 	tbb	[pc, r6]
90020724:	16140702 	.word	0x16140702
90020728:	9504      	str	r5, [sp, #16]
9002072a:	4620      	mov	r0, r4
9002072c:	bcf0      	pop	{r4, r5, r6, r7}
9002072e:	f7ff be09 	b.w	90020344 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
90020732:	6f80      	ldr	r0, [r0, #120]	; 0x78
90020734:	2800      	cmp	r0, #0
90020736:	d03c      	beq.n	900207b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
90020738:	6806      	ldr	r6, [r0, #0]
9002073a:	e9cd 3504 	strd	r3, r5, [sp, #16]
9002073e:	68b5      	ldr	r5, [r6, #8]
90020740:	4613      	mov	r3, r2
90020742:	46ac      	mov	ip, r5
90020744:	460a      	mov	r2, r1
90020746:	4621      	mov	r1, r4
90020748:	bcf0      	pop	{r4, r5, r6, r7}
9002074a:	4760      	bx	ip
9002074c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9002074e:	e7f1      	b.n	90020734 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90020750:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
90020754:	e7ee      	b.n	90020734 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90020756:	2e03      	cmp	r6, #3
90020758:	d82b      	bhi.n	900207b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9002075a:	e8df f006 	tbb	[pc, r6]
9002075e:	0702      	.short	0x0702
90020760:	100e      	.short	0x100e
90020762:	9504      	str	r5, [sp, #16]
90020764:	4620      	mov	r0, r4
90020766:	bcf0      	pop	{r4, r5, r6, r7}
90020768:	f7ff bd06 	b.w	90020178 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9002076c:	6f80      	ldr	r0, [r0, #120]	; 0x78
9002076e:	b300      	cbz	r0, 900207b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
90020770:	6806      	ldr	r6, [r0, #0]
90020772:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020776:	68f5      	ldr	r5, [r6, #12]
90020778:	e7e2      	b.n	90020740 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9002077a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9002077c:	e7f7      	b.n	9002076e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
9002077e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
90020782:	e7f4      	b.n	9002076e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
90020784:	2e03      	cmp	r6, #3
90020786:	d814      	bhi.n	900207b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
90020788:	e8df f006 	tbb	[pc, r6]
9002078c:	100e0702 	.word	0x100e0702
90020790:	9504      	str	r5, [sp, #16]
90020792:	4620      	mov	r0, r4
90020794:	bcf0      	pop	{r4, r5, r6, r7}
90020796:	f7ff bea1 	b.w	900204dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9002079a:	6f80      	ldr	r0, [r0, #120]	; 0x78
9002079c:	b148      	cbz	r0, 900207b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9002079e:	6806      	ldr	r6, [r0, #0]
900207a0:	e9cd 3504 	strd	r3, r5, [sp, #16]
900207a4:	6935      	ldr	r5, [r6, #16]
900207a6:	e7cb      	b.n	90020740 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
900207a8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
900207aa:	e7f7      	b.n	9002079c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
900207ac:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
900207b0:	e7f4      	b.n	9002079c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
900207b2:	bcf0      	pop	{r4, r5, r6, r7}
900207b4:	4770      	bx	lr
	...

900207b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
900207b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900207bc:	b087      	sub	sp, #28
900207be:	4604      	mov	r4, r0
900207c0:	460e      	mov	r6, r1
900207c2:	6810      	ldr	r0, [r2, #0]
900207c4:	6851      	ldr	r1, [r2, #4]
900207c6:	ad02      	add	r5, sp, #8
900207c8:	4617      	mov	r7, r2
900207ca:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
900207ce:	f8df 9230 	ldr.w	r9, [pc, #560]	; 90020a00 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
900207d2:	c503      	stmia	r5!, {r0, r1}
900207d4:	6818      	ldr	r0, [r3, #0]
900207d6:	ad04      	add	r5, sp, #16
900207d8:	6859      	ldr	r1, [r3, #4]
900207da:	c503      	stmia	r5!, {r0, r1}
900207dc:	a802      	add	r0, sp, #8
900207de:	f7f7 fc0d 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900207e2:	4639      	mov	r1, r7
900207e4:	a804      	add	r0, sp, #16
900207e6:	f7f7 fc4d 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900207ea:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900207ee:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900207f2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
900207f6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
900207fa:	fb11 2103 	smlabb	r1, r1, r3, r2
900207fe:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
90020802:	eb04 0441 	add.w	r4, r4, r1, lsl #1
90020806:	440e      	add	r6, r1
90020808:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9002080c:	440a      	add	r2, r1
9002080e:	f8ad 2010 	strh.w	r2, [sp, #16]
90020812:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90020816:	4413      	add	r3, r2
90020818:	f8ad 3012 	strh.w	r3, [sp, #18]
9002081c:	4b77      	ldr	r3, [pc, #476]	; (900209fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9002081e:	6818      	ldr	r0, [r3, #0]
90020820:	6803      	ldr	r3, [r0, #0]
90020822:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020824:	4798      	blx	r3
90020826:	f8b9 b000 	ldrh.w	fp, [r9]
9002082a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002082e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
90020832:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020836:	fb05 f50b 	mul.w	r5, r5, fp
9002083a:	fb0b 2303 	mla	r3, fp, r3, r2
9002083e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020842:	ea4f 0348 	mov.w	r3, r8, lsl #1
90020846:	9300      	str	r3, [sp, #0]
90020848:	d069      	beq.n	9002091e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9002084a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9002084e:	4558      	cmp	r0, fp
90020850:	f080 80cc 	bcs.w	900209ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90020854:	9b00      	ldr	r3, [sp, #0]
90020856:	4631      	mov	r1, r6
90020858:	18c3      	adds	r3, r0, r3
9002085a:	9301      	str	r3, [sp, #4]
9002085c:	9b01      	ldr	r3, [sp, #4]
9002085e:	4298      	cmp	r0, r3
90020860:	d24f      	bcs.n	90020902 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
90020862:	f811 2b01 	ldrb.w	r2, [r1], #1
90020866:	2a00      	cmp	r2, #0
90020868:	d048      	beq.n	900208fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9002086a:	fb0a f202 	mul.w	r2, sl, r2
9002086e:	1c53      	adds	r3, r2, #1
90020870:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020874:	121b      	asrs	r3, r3, #8
90020876:	d041      	beq.n	900208fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020878:	8802      	ldrh	r2, [r0, #0]
9002087a:	b29e      	uxth	r6, r3
9002087c:	f8b4 c000 	ldrh.w	ip, [r4]
90020880:	43db      	mvns	r3, r3
90020882:	1215      	asrs	r5, r2, #8
90020884:	b2db      	uxtb	r3, r3
90020886:	ea4f 272c 	mov.w	r7, ip, asr #8
9002088a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9002088e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
90020892:	fb15 f503 	smulbb	r5, r5, r3
90020896:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9002089a:	00d2      	lsls	r2, r2, #3
9002089c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
900208a0:	fb07 5706 	mla	r7, r7, r6, r5
900208a4:	ea4f 05ec 	mov.w	r5, ip, asr #3
900208a8:	b2d2      	uxtb	r2, r2
900208aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900208ae:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
900208b2:	fb1e fe03 	smulbb	lr, lr, r3
900208b6:	b2bf      	uxth	r7, r7
900208b8:	fb12 f203 	smulbb	r2, r2, r3
900208bc:	fa5f fc8c 	uxtb.w	ip, ip
900208c0:	fb05 e506 	mla	r5, r5, r6, lr
900208c4:	f107 0e01 	add.w	lr, r7, #1
900208c8:	fb0c 2c06 	mla	ip, ip, r6, r2
900208cc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
900208d0:	fa1f fc8c 	uxth.w	ip, ip
900208d4:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
900208d8:	b2ad      	uxth	r5, r5
900208da:	f10c 0701 	add.w	r7, ip, #1
900208de:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900208e2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900208e6:	ea47 070e 	orr.w	r7, r7, lr
900208ea:	f105 0e01 	add.w	lr, r5, #1
900208ee:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
900208f2:	096d      	lsrs	r5, r5, #5
900208f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900208f8:	432f      	orrs	r7, r5
900208fa:	8007      	strh	r7, [r0, #0]
900208fc:	3002      	adds	r0, #2
900208fe:	3402      	adds	r4, #2
90020900:	e7ac      	b.n	9002085c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
90020902:	f8b9 3000 	ldrh.w	r3, [r9]
90020906:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9002090a:	eba3 0308 	sub.w	r3, r3, r8
9002090e:	eba6 0608 	sub.w	r6, r6, r8
90020912:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020916:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9002091a:	440e      	add	r6, r1
9002091c:	e797      	b.n	9002084e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9002091e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90020922:	42a8      	cmp	r0, r5
90020924:	d262      	bcs.n	900209ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90020926:	9b00      	ldr	r3, [sp, #0]
90020928:	4631      	mov	r1, r6
9002092a:	eb00 0b03 	add.w	fp, r0, r3
9002092e:	4558      	cmp	r0, fp
90020930:	d24e      	bcs.n	900209d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
90020932:	f811 3b01 	ldrb.w	r3, [r1], #1
90020936:	b12b      	cbz	r3, 90020944 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020938:	2bff      	cmp	r3, #255	; 0xff
9002093a:	f8b4 e000 	ldrh.w	lr, [r4]
9002093e:	d104      	bne.n	9002094a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
90020940:	f8a0 e000 	strh.w	lr, [r0]
90020944:	3002      	adds	r0, #2
90020946:	3402      	adds	r4, #2
90020948:	e7f1      	b.n	9002092e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9002094a:	8802      	ldrh	r2, [r0, #0]
9002094c:	b29f      	uxth	r7, r3
9002094e:	43db      	mvns	r3, r3
90020950:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90020954:	1216      	asrs	r6, r2, #8
90020956:	b2db      	uxtb	r3, r3
90020958:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9002095c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90020960:	ea4f 0ae2 	mov.w	sl, r2, asr #3
90020964:	00d2      	lsls	r2, r2, #3
90020966:	fb16 f603 	smulbb	r6, r6, r3
9002096a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9002096e:	b2d2      	uxtb	r2, r2
90020970:	fb0c 6c07 	mla	ip, ip, r7, r6
90020974:	ea4f 06ee 	mov.w	r6, lr, asr #3
90020978:	fb1a fa03 	smulbb	sl, sl, r3
9002097c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020980:	fa1f fc8c 	uxth.w	ip, ip
90020984:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90020988:	fb12 f303 	smulbb	r3, r2, r3
9002098c:	fa5f fe8e 	uxtb.w	lr, lr
90020990:	fb06 a607 	mla	r6, r6, r7, sl
90020994:	f10c 0201 	add.w	r2, ip, #1
90020998:	fb0e 3307 	mla	r3, lr, r7, r3
9002099c:	b2b6      	uxth	r6, r6
9002099e:	b29b      	uxth	r3, r3
900209a0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
900209a4:	f106 0a01 	add.w	sl, r6, #1
900209a8:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
900209ac:	f103 0c01 	add.w	ip, r3, #1
900209b0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
900209b4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900209b8:	0976      	lsrs	r6, r6, #5
900209ba:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900209be:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
900209c2:	ea4c 0c02 	orr.w	ip, ip, r2
900209c6:	ea4c 0c06 	orr.w	ip, ip, r6
900209ca:	f8a0 c000 	strh.w	ip, [r0]
900209ce:	e7b9      	b.n	90020944 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
900209d0:	f8b9 3000 	ldrh.w	r3, [r9]
900209d4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
900209d8:	eba3 0308 	sub.w	r3, r3, r8
900209dc:	eba6 0608 	sub.w	r6, r6, r8
900209e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900209e4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
900209e8:	440e      	add	r6, r1
900209ea:	e79a      	b.n	90020922 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
900209ec:	4b03      	ldr	r3, [pc, #12]	; (900209fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
900209ee:	6818      	ldr	r0, [r3, #0]
900209f0:	6803      	ldr	r3, [r0, #0]
900209f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900209f4:	4798      	blx	r3
900209f6:	b007      	add	sp, #28
900209f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900209fc:	24039acc 	.word	0x24039acc
90020a00:	24039ac6 	.word	0x24039ac6

90020a04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90020a04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020a08:	b089      	sub	sp, #36	; 0x24
90020a0a:	4682      	mov	sl, r0
90020a0c:	460f      	mov	r7, r1
90020a0e:	4691      	mov	r9, r2
90020a10:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
90020a14:	4698      	mov	r8, r3
90020a16:	9c12      	ldr	r4, [sp, #72]	; 0x48
90020a18:	2e00      	cmp	r6, #0
90020a1a:	d03d      	beq.n	90020a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020a1c:	4608      	mov	r0, r1
90020a1e:	f7fa fe4d 	bl	9001b6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
90020a22:	4605      	mov	r5, r0
90020a24:	4638      	mov	r0, r7
90020a26:	f7fa fe7d 	bl	9001b724 <_ZNK8touchgfx6Bitmap9getHeightEv>
90020a2a:	f8ad 000e 	strh.w	r0, [sp, #14]
90020a2e:	4638      	mov	r0, r7
90020a30:	f8ad 9008 	strh.w	r9, [sp, #8]
90020a34:	f8ad 500c 	strh.w	r5, [sp, #12]
90020a38:	f8ad 800a 	strh.w	r8, [sp, #10]
90020a3c:	f7fa ff2a 	bl	9001b894 <_ZNK8touchgfx6Bitmap7getDataEv>
90020a40:	4605      	mov	r5, r0
90020a42:	4638      	mov	r0, r7
90020a44:	f7fa ff56 	bl	9001b8f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90020a48:	4681      	mov	r9, r0
90020a4a:	4638      	mov	r0, r7
90020a4c:	f7fa ffa6 	bl	9001b99c <_ZNK8touchgfx6Bitmap9getFormatEv>
90020a50:	280b      	cmp	r0, #11
90020a52:	d821      	bhi.n	90020a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020a54:	e8df f000 	tbb	[pc, r0]
90020a58:	2006aebe 	.word	0x2006aebe
90020a5c:	20202020 	.word	0x20202020
90020a60:	b5202020 	.word	0xb5202020
90020a64:	4bb0      	ldr	r3, [pc, #704]	; (90020d28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
90020a66:	6818      	ldr	r0, [r3, #0]
90020a68:	6803      	ldr	r3, [r0, #0]
90020a6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90020a6c:	4798      	blx	r3
90020a6e:	2eff      	cmp	r6, #255	; 0xff
90020a70:	d101      	bne.n	90020a76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
90020a72:	0683      	lsls	r3, r0, #26
90020a74:	d506      	bpl.n	90020a84 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
90020a76:	4633      	mov	r3, r6
90020a78:	4622      	mov	r2, r4
90020a7a:	a902      	add	r1, sp, #8
90020a7c:	4628      	mov	r0, r5
90020a7e:	f7ff f909 	bl	9001fc94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020a82:	e009      	b.n	90020a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020a84:	4638      	mov	r0, r7
90020a86:	f7fa fecd 	bl	9001b824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90020a8a:	b940      	cbnz	r0, 90020a9e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
90020a8c:	4623      	mov	r3, r4
90020a8e:	aa02      	add	r2, sp, #8
90020a90:	4629      	mov	r1, r5
90020a92:	4650      	mov	r0, sl
90020a94:	f7ff f9e4 	bl	9001fe60 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90020a98:	b009      	add	sp, #36	; 0x24
90020a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020a9e:	f10d 0818 	add.w	r8, sp, #24
90020aa2:	4639      	mov	r1, r7
90020aa4:	af04      	add	r7, sp, #16
90020aa6:	4640      	mov	r0, r8
90020aa8:	f7fa fe70 	bl	9001b78c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90020aac:	e898 0003 	ldmia.w	r8, {r0, r1}
90020ab0:	e887 0003 	stmia.w	r7, {r0, r1}
90020ab4:	4638      	mov	r0, r7
90020ab6:	4621      	mov	r1, r4
90020ab8:	f7f2 f982 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90020abc:	4638      	mov	r0, r7
90020abe:	f7f2 f9c2 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
90020ac2:	2800      	cmp	r0, #0
90020ac4:	d1d7      	bne.n	90020a76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
90020ac6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020aca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90020ace:	4293      	cmp	r3, r2
90020ad0:	dd12      	ble.n	90020af8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
90020ad2:	1a9b      	subs	r3, r3, r2
90020ad4:	f9b4 0000 	ldrsh.w	r0, [r4]
90020ad8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90020adc:	f8ad 0018 	strh.w	r0, [sp, #24]
90020ae0:	4628      	mov	r0, r5
90020ae2:	f8ad 201a 	strh.w	r2, [sp, #26]
90020ae6:	4642      	mov	r2, r8
90020ae8:	f8ad 101c 	strh.w	r1, [sp, #28]
90020aec:	a902      	add	r1, sp, #8
90020aee:	f8ad 301e 	strh.w	r3, [sp, #30]
90020af2:	4633      	mov	r3, r6
90020af4:	f7ff f8ce 	bl	9001fc94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020af8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90020afc:	f9b4 2000 	ldrsh.w	r2, [r4]
90020b00:	4293      	cmp	r3, r2
90020b02:	dd12      	ble.n	90020b2a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
90020b04:	1a9b      	subs	r3, r3, r2
90020b06:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90020b0a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90020b0e:	f8ad 2018 	strh.w	r2, [sp, #24]
90020b12:	4642      	mov	r2, r8
90020b14:	f8ad 001a 	strh.w	r0, [sp, #26]
90020b18:	4628      	mov	r0, r5
90020b1a:	f8ad 301c 	strh.w	r3, [sp, #28]
90020b1e:	23ff      	movs	r3, #255	; 0xff
90020b20:	f8ad 101e 	strh.w	r1, [sp, #30]
90020b24:	a902      	add	r1, sp, #8
90020b26:	f7ff f8b5 	bl	9001fc94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020b2a:	463b      	mov	r3, r7
90020b2c:	aa02      	add	r2, sp, #8
90020b2e:	4629      	mov	r1, r5
90020b30:	4650      	mov	r0, sl
90020b32:	f7ff f995 	bl	9001fe60 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90020b36:	88a2      	ldrh	r2, [r4, #4]
90020b38:	8823      	ldrh	r3, [r4, #0]
90020b3a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90020b3e:	4413      	add	r3, r2
90020b40:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020b44:	440a      	add	r2, r1
90020b46:	b29b      	uxth	r3, r3
90020b48:	b292      	uxth	r2, r2
90020b4a:	b218      	sxth	r0, r3
90020b4c:	b211      	sxth	r1, r2
90020b4e:	4288      	cmp	r0, r1
90020b50:	dd12      	ble.n	90020b78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
90020b52:	1a9b      	subs	r3, r3, r2
90020b54:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90020b58:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
90020b5c:	4642      	mov	r2, r8
90020b5e:	f8ad 1018 	strh.w	r1, [sp, #24]
90020b62:	a902      	add	r1, sp, #8
90020b64:	f8ad 301c 	strh.w	r3, [sp, #28]
90020b68:	23ff      	movs	r3, #255	; 0xff
90020b6a:	f8ad 001e 	strh.w	r0, [sp, #30]
90020b6e:	4628      	mov	r0, r5
90020b70:	f8ad 601a 	strh.w	r6, [sp, #26]
90020b74:	f7ff f88e 	bl	9001fc94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020b78:	88e2      	ldrh	r2, [r4, #6]
90020b7a:	8863      	ldrh	r3, [r4, #2]
90020b7c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020b80:	4413      	add	r3, r2
90020b82:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020b86:	440a      	add	r2, r1
90020b88:	b29b      	uxth	r3, r3
90020b8a:	b292      	uxth	r2, r2
90020b8c:	b218      	sxth	r0, r3
90020b8e:	b211      	sxth	r1, r2
90020b90:	4288      	cmp	r0, r1
90020b92:	dd81      	ble.n	90020a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020b94:	1a9b      	subs	r3, r3, r2
90020b96:	f9b4 6000 	ldrsh.w	r6, [r4]
90020b9a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90020b9e:	4642      	mov	r2, r8
90020ba0:	f8ad 301e 	strh.w	r3, [sp, #30]
90020ba4:	23ff      	movs	r3, #255	; 0xff
90020ba6:	f8ad 6018 	strh.w	r6, [sp, #24]
90020baa:	f8ad 101a 	strh.w	r1, [sp, #26]
90020bae:	f8ad 001c 	strh.w	r0, [sp, #28]
90020bb2:	e762      	b.n	90020a7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
90020bb4:	4633      	mov	r3, r6
90020bb6:	4622      	mov	r2, r4
90020bb8:	a902      	add	r1, sp, #8
90020bba:	4628      	mov	r0, r5
90020bbc:	f7ff f9c0 	bl	9001ff40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90020bc0:	e76a      	b.n	90020a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020bc2:	e9cd 4600 	strd	r4, r6, [sp]
90020bc6:	ab02      	add	r3, sp, #8
90020bc8:	464a      	mov	r2, r9
90020bca:	4629      	mov	r1, r5
90020bcc:	4650      	mov	r0, sl
90020bce:	f7ff fd97 	bl	90020700 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
90020bd2:	e761      	b.n	90020a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020bd4:	4638      	mov	r0, r7
90020bd6:	f7fa fe25 	bl	9001b824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90020bda:	b950      	cbnz	r0, 90020bf2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
90020bdc:	f8da 3000 	ldr.w	r3, [sl]
90020be0:	aa02      	add	r2, sp, #8
90020be2:	4629      	mov	r1, r5
90020be4:	e9cd 6000 	strd	r6, r0, [sp]
90020be8:	4650      	mov	r0, sl
90020bea:	68de      	ldr	r6, [r3, #12]
90020bec:	4623      	mov	r3, r4
90020bee:	47b0      	blx	r6
90020bf0:	e752      	b.n	90020a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020bf2:	f10d 0818 	add.w	r8, sp, #24
90020bf6:	4639      	mov	r1, r7
90020bf8:	af04      	add	r7, sp, #16
90020bfa:	4640      	mov	r0, r8
90020bfc:	f7fa fdc6 	bl	9001b78c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90020c00:	e898 0003 	ldmia.w	r8, {r0, r1}
90020c04:	e887 0003 	stmia.w	r7, {r0, r1}
90020c08:	4638      	mov	r0, r7
90020c0a:	4621      	mov	r1, r4
90020c0c:	f7f2 f8d8 	bl	90012dc0 <_ZN8touchgfx4RectaNERKS0_>
90020c10:	4638      	mov	r0, r7
90020c12:	f7f2 f918 	bl	90012e46 <_ZNK8touchgfx4Rect7isEmptyEv>
90020c16:	b138      	cbz	r0, 90020c28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
90020c18:	4623      	mov	r3, r4
90020c1a:	9600      	str	r6, [sp, #0]
90020c1c:	aa02      	add	r2, sp, #8
90020c1e:	4649      	mov	r1, r9
90020c20:	4628      	mov	r0, r5
90020c22:	f7ff fdc9 	bl	900207b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020c26:	e737      	b.n	90020a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020c28:	f8da 3000 	ldr.w	r3, [sl]
90020c2c:	aa02      	add	r2, sp, #8
90020c2e:	4629      	mov	r1, r5
90020c30:	e9cd 6000 	strd	r6, r0, [sp]
90020c34:	4650      	mov	r0, sl
90020c36:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90020c3a:	463b      	mov	r3, r7
90020c3c:	47d8      	blx	fp
90020c3e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020c42:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90020c46:	4293      	cmp	r3, r2
90020c48:	dd13      	ble.n	90020c72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
90020c4a:	f9b4 0000 	ldrsh.w	r0, [r4]
90020c4e:	1a9b      	subs	r3, r3, r2
90020c50:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90020c54:	f8ad 0018 	strh.w	r0, [sp, #24]
90020c58:	4628      	mov	r0, r5
90020c5a:	f8ad 201a 	strh.w	r2, [sp, #26]
90020c5e:	aa02      	add	r2, sp, #8
90020c60:	f8ad 101c 	strh.w	r1, [sp, #28]
90020c64:	4649      	mov	r1, r9
90020c66:	f8ad 301e 	strh.w	r3, [sp, #30]
90020c6a:	4643      	mov	r3, r8
90020c6c:	9600      	str	r6, [sp, #0]
90020c6e:	f7ff fda3 	bl	900207b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020c72:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90020c76:	f9b4 2000 	ldrsh.w	r2, [r4]
90020c7a:	4293      	cmp	r3, r2
90020c7c:	dd13      	ble.n	90020ca6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
90020c7e:	1a9b      	subs	r3, r3, r2
90020c80:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90020c84:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90020c88:	f8ad 2018 	strh.w	r2, [sp, #24]
90020c8c:	aa02      	add	r2, sp, #8
90020c8e:	f8ad 001a 	strh.w	r0, [sp, #26]
90020c92:	4628      	mov	r0, r5
90020c94:	f8ad 301c 	strh.w	r3, [sp, #28]
90020c98:	4643      	mov	r3, r8
90020c9a:	f8ad 101e 	strh.w	r1, [sp, #30]
90020c9e:	4649      	mov	r1, r9
90020ca0:	9600      	str	r6, [sp, #0]
90020ca2:	f7ff fd89 	bl	900207b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020ca6:	88a2      	ldrh	r2, [r4, #4]
90020ca8:	8823      	ldrh	r3, [r4, #0]
90020caa:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90020cae:	4413      	add	r3, r2
90020cb0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020cb4:	440a      	add	r2, r1
90020cb6:	b29b      	uxth	r3, r3
90020cb8:	b292      	uxth	r2, r2
90020cba:	b218      	sxth	r0, r3
90020cbc:	b211      	sxth	r1, r2
90020cbe:	4288      	cmp	r0, r1
90020cc0:	dd13      	ble.n	90020cea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
90020cc2:	1a9b      	subs	r3, r3, r2
90020cc4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90020cc8:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90020ccc:	aa02      	add	r2, sp, #8
90020cce:	f8ad 1018 	strh.w	r1, [sp, #24]
90020cd2:	4649      	mov	r1, r9
90020cd4:	f8ad 301c 	strh.w	r3, [sp, #28]
90020cd8:	4643      	mov	r3, r8
90020cda:	f8ad 001e 	strh.w	r0, [sp, #30]
90020cde:	4628      	mov	r0, r5
90020ce0:	9600      	str	r6, [sp, #0]
90020ce2:	f8ad 701a 	strh.w	r7, [sp, #26]
90020ce6:	f7ff fd67 	bl	900207b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020cea:	88e2      	ldrh	r2, [r4, #6]
90020cec:	8863      	ldrh	r3, [r4, #2]
90020cee:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020cf2:	4413      	add	r3, r2
90020cf4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020cf8:	440a      	add	r2, r1
90020cfa:	b29b      	uxth	r3, r3
90020cfc:	b292      	uxth	r2, r2
90020cfe:	b218      	sxth	r0, r3
90020d00:	b211      	sxth	r1, r2
90020d02:	4288      	cmp	r0, r1
90020d04:	f77f aec8 	ble.w	90020a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020d08:	f9b4 7000 	ldrsh.w	r7, [r4]
90020d0c:	1a9b      	subs	r3, r3, r2
90020d0e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90020d12:	f8ad 301e 	strh.w	r3, [sp, #30]
90020d16:	4643      	mov	r3, r8
90020d18:	f8ad 7018 	strh.w	r7, [sp, #24]
90020d1c:	f8ad 101a 	strh.w	r1, [sp, #26]
90020d20:	f8ad 001c 	strh.w	r0, [sp, #28]
90020d24:	9600      	str	r6, [sp, #0]
90020d26:	e779      	b.n	90020c1c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
90020d28:	24039acc 	.word	0x24039acc

90020d2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90020d2c:	b180      	cbz	r0, 90020d50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
90020d2e:	2903      	cmp	r1, #3
90020d30:	d81c      	bhi.n	90020d6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020d32:	e8df f001 	tbb	[pc, r1]
90020d36:	1d02      	.short	0x1d02
90020d38:	1f08      	.short	0x1f08
90020d3a:	4b10      	ldr	r3, [pc, #64]	; (90020d7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020d3c:	8818      	ldrh	r0, [r3, #0]
90020d3e:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020d42:	4240      	negs	r0, r0
90020d44:	4770      	bx	lr
90020d46:	4b0d      	ldr	r3, [pc, #52]	; (90020d7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020d48:	8818      	ldrh	r0, [r3, #0]
90020d4a:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020d4e:	4770      	bx	lr
90020d50:	2903      	cmp	r1, #3
90020d52:	d80b      	bhi.n	90020d6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020d54:	a301      	add	r3, pc, #4	; (adr r3, 90020d5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90020d56:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020d5a:	bf00      	nop
90020d5c:	90020d71 	.word	0x90020d71
90020d60:	90020d47 	.word	0x90020d47
90020d64:	90020d75 	.word	0x90020d75
90020d68:	90020d3b 	.word	0x90020d3b
90020d6c:	2000      	movs	r0, #0
90020d6e:	4770      	bx	lr
90020d70:	2001      	movs	r0, #1
90020d72:	4770      	bx	lr
90020d74:	f04f 30ff 	mov.w	r0, #4294967295
90020d78:	4770      	bx	lr
90020d7a:	bf00      	nop
90020d7c:	24039ac6 	.word	0x24039ac6

90020d80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90020d80:	b180      	cbz	r0, 90020da4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
90020d82:	2903      	cmp	r1, #3
90020d84:	d81c      	bhi.n	90020dc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020d86:	e8df f001 	tbb	[pc, r1]
90020d8a:	021d      	.short	0x021d
90020d8c:	071f      	.short	0x071f
90020d8e:	4b10      	ldr	r3, [pc, #64]	; (90020dd0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020d90:	8818      	ldrh	r0, [r3, #0]
90020d92:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020d96:	4770      	bx	lr
90020d98:	4b0d      	ldr	r3, [pc, #52]	; (90020dd0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020d9a:	8818      	ldrh	r0, [r3, #0]
90020d9c:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020da0:	4240      	negs	r0, r0
90020da2:	4770      	bx	lr
90020da4:	2903      	cmp	r1, #3
90020da6:	d80b      	bhi.n	90020dc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020da8:	a301      	add	r3, pc, #4	; (adr r3, 90020db0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
90020daa:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020dae:	bf00      	nop
90020db0:	90020d8f 	.word	0x90020d8f
90020db4:	90020dc9 	.word	0x90020dc9
90020db8:	90020d99 	.word	0x90020d99
90020dbc:	90020dc5 	.word	0x90020dc5
90020dc0:	2000      	movs	r0, #0
90020dc2:	4770      	bx	lr
90020dc4:	2001      	movs	r0, #1
90020dc6:	4770      	bx	lr
90020dc8:	f04f 30ff 	mov.w	r0, #4294967295
90020dcc:	4770      	bx	lr
90020dce:	bf00      	nop
90020dd0:	24039ac6 	.word	0x24039ac6

90020dd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
90020dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020dd8:	b099      	sub	sp, #100	; 0x64
90020dda:	910b      	str	r1, [sp, #44]	; 0x2c
90020ddc:	a914      	add	r1, sp, #80	; 0x50
90020dde:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
90020de2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
90020de6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
90020dea:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
90020dee:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
90020df2:	e881 000c 	stmia.w	r1, {r2, r3}
90020df6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
90020dfa:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
90020dfe:	9309      	str	r3, [sp, #36]	; 0x24
90020e00:	f891 900d 	ldrb.w	r9, [r1, #13]
90020e04:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90020e08:	ea4f 1749 	mov.w	r7, r9, lsl #5
90020e0c:	9310      	str	r3, [sp, #64]	; 0x40
90020e0e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
90020e12:	930c      	str	r3, [sp, #48]	; 0x30
90020e14:	f407 7380 	and.w	r3, r7, #256	; 0x100
90020e18:	798f      	ldrb	r7, [r1, #6]
90020e1a:	431f      	orrs	r7, r3
90020e1c:	f000 8195 	beq.w	9002114a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020e20:	ea4f 1909 	mov.w	r9, r9, lsl #4
90020e24:	f409 7380 	and.w	r3, r9, #256	; 0x100
90020e28:	f891 9007 	ldrb.w	r9, [r1, #7]
90020e2c:	ea59 0903 	orrs.w	r9, r9, r3
90020e30:	f000 818b 	beq.w	9002114a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020e34:	f991 3009 	ldrsb.w	r3, [r1, #9]
90020e38:	b29b      	uxth	r3, r3
90020e3a:	2d00      	cmp	r5, #0
90020e3c:	f000 812e 	beq.w	9002109c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
90020e40:	1aed      	subs	r5, r5, r3
90020e42:	b2ad      	uxth	r5, r5
90020e44:	042b      	lsls	r3, r5, #16
90020e46:	d502      	bpl.n	90020e4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90020e48:	1b64      	subs	r4, r4, r5
90020e4a:	2500      	movs	r5, #0
90020e4c:	b224      	sxth	r4, r4
90020e4e:	f9b2 1000 	ldrsh.w	r1, [r2]
90020e52:	a814      	add	r0, sp, #80	; 0x50
90020e54:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90020e58:	428c      	cmp	r4, r1
90020e5a:	b28b      	uxth	r3, r1
90020e5c:	bfbf      	itttt	lt
90020e5e:	18ed      	addlt	r5, r5, r3
90020e60:	1b2c      	sublt	r4, r5, r4
90020e62:	b2a5      	uxthlt	r5, r4
90020e64:	460c      	movlt	r4, r1
90020e66:	8891      	ldrh	r1, [r2, #4]
90020e68:	440b      	add	r3, r1
90020e6a:	4621      	mov	r1, r4
90020e6c:	b21b      	sxth	r3, r3
90020e6e:	930f      	str	r3, [sp, #60]	; 0x3c
90020e70:	88d3      	ldrh	r3, [r2, #6]
90020e72:	8852      	ldrh	r2, [r2, #2]
90020e74:	4413      	add	r3, r2
90020e76:	9a09      	ldr	r2, [sp, #36]	; 0x24
90020e78:	b21b      	sxth	r3, r3
90020e7a:	930d      	str	r3, [sp, #52]	; 0x34
90020e7c:	4bbd      	ldr	r3, [pc, #756]	; (90021174 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
90020e7e:	f893 b000 	ldrb.w	fp, [r3]
90020e82:	f10b 3cff 	add.w	ip, fp, #4294967295
90020e86:	f1dc 0300 	rsbs	r3, ip, #0
90020e8a:	eb43 030c 	adc.w	r3, r3, ip
90020e8e:	930e      	str	r3, [sp, #56]	; 0x38
90020e90:	4653      	mov	r3, sl
90020e92:	f7f6 ff28 	bl	90017ce6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90020e96:	4621      	mov	r1, r4
90020e98:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
90020e9c:	4653      	mov	r3, sl
90020e9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90020ea0:	a814      	add	r0, sp, #80	; 0x50
90020ea2:	f7f6 ff3d 	bl	90017d20 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90020ea6:	a918      	add	r1, sp, #96	; 0x60
90020ea8:	f821 0d02 	strh.w	r0, [r1, #-2]!
90020eac:	a817      	add	r0, sp, #92	; 0x5c
90020eae:	f7f7 f863 	bl	90017f78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90020eb2:	f1ba 0f00 	cmp.w	sl, #0
90020eb6:	f040 80f4 	bne.w	900210a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
90020eba:	f1bb 0f01 	cmp.w	fp, #1
90020ebe:	f040 80f8 	bne.w	900210b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
90020ec2:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020ec4:	2b00      	cmp	r3, #0
90020ec6:	f040 8145 	bne.w	90021154 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
90020eca:	b2ba      	uxth	r2, r7
90020ecc:	b905      	cbnz	r5, 90020ed0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
90020ece:	b16e      	cbz	r6, 90020eec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
90020ed0:	fb06 5302 	mla	r3, r6, r2, r5
90020ed4:	9828      	ldr	r0, [sp, #160]	; 0xa0
90020ed6:	4631      	mov	r1, r6
90020ed8:	fb08 f303 	mul.w	r3, r8, r3
90020edc:	f003 0607 	and.w	r6, r3, #7
90020ee0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
90020ee4:	9328      	str	r3, [sp, #160]	; 0xa0
90020ee6:	eba9 0301 	sub.w	r3, r9, r1
90020eea:	930a      	str	r3, [sp, #40]	; 0x28
90020eec:	4651      	mov	r1, sl
90020eee:	980e      	ldr	r0, [sp, #56]	; 0x38
90020ef0:	f7ff ff1c 	bl	90020d2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
90020ef4:	4681      	mov	r9, r0
90020ef6:	980e      	ldr	r0, [sp, #56]	; 0x38
90020ef8:	f7ff ff42 	bl	90020d80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90020efc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020efe:	9909      	ldr	r1, [sp, #36]	; 0x24
90020f00:	4683      	mov	fp, r0
90020f02:	eba3 0a01 	sub.w	sl, r3, r1
90020f06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020f08:	459a      	cmp	sl, r3
90020f0a:	bfa8      	it	ge
90020f0c:	469a      	movge	sl, r3
90020f0e:	f1ba 0f00 	cmp.w	sl, #0
90020f12:	f340 811a 	ble.w	9002114a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020f16:	1b64      	subs	r4, r4, r5
90020f18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90020f1a:	1b1c      	subs	r4, r3, r4
90020f1c:	42bc      	cmp	r4, r7
90020f1e:	bfd4      	ite	le
90020f20:	ebc5 0504 	rsble	r5, r5, r4
90020f24:	ebc5 0507 	rsbgt	r5, r5, r7
90020f28:	2d00      	cmp	r5, #0
90020f2a:	f340 810e 	ble.w	9002114a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020f2e:	1b52      	subs	r2, r2, r5
90020f30:	fb08 f302 	mul.w	r3, r8, r2
90020f34:	930f      	str	r3, [sp, #60]	; 0x3c
90020f36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020f38:	2b00      	cmp	r3, #0
90020f3a:	f040 8116 	bne.w	9002116a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
90020f3e:	4b8e      	ldr	r3, [pc, #568]	; (90021178 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
90020f40:	6818      	ldr	r0, [r3, #0]
90020f42:	6803      	ldr	r3, [r0, #0]
90020f44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020f46:	4798      	blx	r3
90020f48:	2301      	movs	r3, #1
90020f4a:	4a8c      	ldr	r2, [pc, #560]	; (9002117c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
90020f4c:	fa03 f308 	lsl.w	r3, r3, r8
90020f50:	8811      	ldrh	r1, [r2, #0]
90020f52:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
90020f56:	3b01      	subs	r3, #1
90020f58:	b2db      	uxtb	r3, r3
90020f5a:	930e      	str	r3, [sp, #56]	; 0x38
90020f5c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
90020f60:	fb01 2303 	mla	r3, r1, r3, r2
90020f64:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020f68:	930a      	str	r3, [sp, #40]	; 0x28
90020f6a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020f6c:	f3c3 4307 	ubfx	r3, r3, #16, #8
90020f70:	9313      	str	r3, [sp, #76]	; 0x4c
90020f72:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020f74:	0a19      	lsrs	r1, r3, #8
90020f76:	b2cb      	uxtb	r3, r1
90020f78:	9312      	str	r3, [sp, #72]	; 0x48
90020f7a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020f7c:	b2db      	uxtb	r3, r3
90020f7e:	9311      	str	r3, [sp, #68]	; 0x44
90020f80:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020f82:	095a      	lsrs	r2, r3, #5
90020f84:	4b7e      	ldr	r3, [pc, #504]	; (90021180 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
90020f86:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90020f8a:	400b      	ands	r3, r1
90020f8c:	4313      	orrs	r3, r2
90020f8e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90020f90:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020f94:	4313      	orrs	r3, r2
90020f96:	b29b      	uxth	r3, r3
90020f98:	9310      	str	r3, [sp, #64]	; 0x40
90020f9a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020f9c:	781a      	ldrb	r2, [r3, #0]
90020f9e:	ea4f 0349 	mov.w	r3, r9, lsl #1
90020fa2:	fb05 b919 	mls	r9, r5, r9, fp
90020fa6:	4132      	asrs	r2, r6
90020fa8:	fb03 fb05 	mul.w	fp, r3, r5
90020fac:	930d      	str	r3, [sp, #52]	; 0x34
90020fae:	b2d2      	uxtb	r2, r2
90020fb0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
90020fb4:	f11a 3aff 	adds.w	sl, sl, #4294967295
90020fb8:	f0c0 80f5 	bcc.w	900211a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
90020fbc:	46ae      	mov	lr, r5
90020fbe:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
90020fc2:	f11e 3eff 	adds.w	lr, lr, #4294967295
90020fc6:	f0c0 80dd 	bcc.w	90021184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
90020fca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020fcc:	4013      	ands	r3, r2
90020fce:	d055      	beq.n	9002107c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
90020fd0:	20ff      	movs	r0, #255	; 0xff
90020fd2:	990e      	ldr	r1, [sp, #56]	; 0x38
90020fd4:	fb90 f1f1 	sdiv	r1, r0, r1
90020fd8:	434b      	muls	r3, r1
90020fda:	2bfe      	cmp	r3, #254	; 0xfe
90020fdc:	dd03      	ble.n	90020fe6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
90020fde:	990c      	ldr	r1, [sp, #48]	; 0x30
90020fe0:	4281      	cmp	r1, r0
90020fe2:	f000 80c4 	beq.w	9002116e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
90020fe6:	990c      	ldr	r1, [sp, #48]	; 0x30
90020fe8:	f8bc 4000 	ldrh.w	r4, [ip]
90020fec:	fb11 f303 	smulbb	r3, r1, r3
90020ff0:	1220      	asrs	r0, r4, #8
90020ff2:	b29b      	uxth	r3, r3
90020ff4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90020ff8:	1c59      	adds	r1, r3, #1
90020ffa:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
90020ffe:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90021002:	10e1      	asrs	r1, r4, #3
90021004:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021008:	00e4      	lsls	r4, r4, #3
9002100a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9002100e:	b29f      	uxth	r7, r3
90021010:	43db      	mvns	r3, r3
90021012:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
90021016:	b2db      	uxtb	r3, r3
90021018:	b2e4      	uxtb	r4, r4
9002101a:	9309      	str	r3, [sp, #36]	; 0x24
9002101c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002101e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90021022:	fb13 f907 	smulbb	r9, r3, r7
90021026:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021028:	fb00 9003 	mla	r0, r0, r3, r9
9002102c:	9b12      	ldr	r3, [sp, #72]	; 0x48
9002102e:	fb13 f907 	smulbb	r9, r3, r7
90021032:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021034:	b280      	uxth	r0, r0
90021036:	fb01 9103 	mla	r1, r1, r3, r9
9002103a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002103c:	fb13 f707 	smulbb	r7, r3, r7
90021040:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021042:	b289      	uxth	r1, r1
90021044:	fb04 7403 	mla	r4, r4, r3, r7
90021048:	1c43      	adds	r3, r0, #1
9002104a:	b2a4      	uxth	r4, r4
9002104c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90021050:	f104 0901 	add.w	r9, r4, #1
90021054:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90021058:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9002105c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
90021060:	ea49 0000 	orr.w	r0, r9, r0
90021064:	f101 0901 	add.w	r9, r1, #1
90021068:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9002106c:	ea4f 1959 	mov.w	r9, r9, lsr #5
90021070:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90021074:	ea40 0009 	orr.w	r0, r0, r9
90021078:	f8ac 0000 	strh.w	r0, [ip]
9002107c:	4446      	add	r6, r8
9002107e:	b2b6      	uxth	r6, r6
90021080:	2e07      	cmp	r6, #7
90021082:	bf89      	itett	hi
90021084:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
90021086:	fa42 f208 	asrls.w	r2, r2, r8
9002108a:	2600      	movhi	r6, #0
9002108c:	785a      	ldrbhi	r2, [r3, #1]
9002108e:	bf8a      	itet	hi
90021090:	3301      	addhi	r3, #1
90021092:	b2d2      	uxtbls	r2, r2
90021094:	9328      	strhi	r3, [sp, #160]	; 0xa0
90021096:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90021098:	449c      	add	ip, r3
9002109a:	e792      	b.n	90020fc2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9002109c:	441c      	add	r4, r3
9002109e:	b224      	sxth	r4, r4
900210a0:	e6d5      	b.n	90020e4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
900210a2:	f1ba 0f01 	cmp.w	sl, #1
900210a6:	f47f af0c 	bne.w	90020ec2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900210aa:	f1bb 0f01 	cmp.w	fp, #1
900210ae:	f47f af08 	bne.w	90020ec2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900210b2:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 90021178 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
900210b6:	f8db 0000 	ldr.w	r0, [fp]
900210ba:	6803      	ldr	r3, [r0, #0]
900210bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900210be:	4798      	blx	r3
900210c0:	f410 7380 	ands.w	r3, r0, #256	; 0x100
900210c4:	465a      	mov	r2, fp
900210c6:	d006      	beq.n	900210d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
900210c8:	f1b8 0f04 	cmp.w	r8, #4
900210cc:	d140      	bne.n	90021150 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
900210ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
900210d0:	3300      	adds	r3, #0
900210d2:	bf18      	it	ne
900210d4:	2301      	movne	r3, #1
900210d6:	0580      	lsls	r0, r0, #22
900210d8:	d56e      	bpl.n	900211b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
900210da:	f1b8 0f08 	cmp.w	r8, #8
900210de:	d16b      	bne.n	900211b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
900210e0:	2b00      	cmp	r3, #0
900210e2:	bf0c      	ite	eq
900210e4:	f44f 7100 	moveq.w	r1, #512	; 0x200
900210e8:	f44f 7180 	movne.w	r1, #256	; 0x100
900210ec:	2d00      	cmp	r5, #0
900210ee:	f47f aee8 	bne.w	90020ec2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900210f2:	2e00      	cmp	r6, #0
900210f4:	f47f aee5 	bne.w	90020ec2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900210f8:	19e3      	adds	r3, r4, r7
900210fa:	980f      	ldr	r0, [sp, #60]	; 0x3c
900210fc:	4283      	cmp	r3, r0
900210fe:	f73f aee0 	bgt.w	90020ec2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90021102:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021104:	980d      	ldr	r0, [sp, #52]	; 0x34
90021106:	444b      	add	r3, r9
90021108:	4283      	cmp	r3, r0
9002110a:	f73f aeda 	bgt.w	90020ec2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002110e:	b2bf      	uxth	r7, r7
90021110:	f1b8 0f08 	cmp.w	r8, #8
90021114:	6810      	ldr	r0, [r2, #0]
90021116:	f04f 0500 	mov.w	r5, #0
9002111a:	bf18      	it	ne
9002111c:	3701      	addne	r7, #1
9002111e:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
90021122:	6804      	ldr	r4, [r0, #0]
90021124:	bf18      	it	ne
90021126:	f027 0701 	bicne.w	r7, r7, #1
9002112a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9002112e:	e9cd 1505 	strd	r1, r5, [sp, #20]
90021132:	990c      	ldr	r1, [sp, #48]	; 0x30
90021134:	bf18      	it	ne
90021136:	b2bf      	uxthne	r7, r7
90021138:	9104      	str	r1, [sp, #16]
9002113a:	992a      	ldr	r1, [sp, #168]	; 0xa8
9002113c:	e9cd 7900 	strd	r7, r9, [sp]
90021140:	e9cd 7102 	strd	r7, r1, [sp, #8]
90021144:	9928      	ldr	r1, [sp, #160]	; 0xa0
90021146:	6d64      	ldr	r4, [r4, #84]	; 0x54
90021148:	47a0      	blx	r4
9002114a:	b019      	add	sp, #100	; 0x64
9002114c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021150:	2300      	movs	r3, #0
90021152:	e7c0      	b.n	900210d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90021154:	2208      	movs	r2, #8
90021156:	fb92 f3f8 	sdiv	r3, r2, r8
9002115a:	1e5a      	subs	r2, r3, #1
9002115c:	443a      	add	r2, r7
9002115e:	fb92 f2f3 	sdiv	r2, r2, r3
90021162:	fb12 f203 	smulbb	r2, r2, r3
90021166:	b292      	uxth	r2, r2
90021168:	e6b0      	b.n	90020ecc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9002116a:	980b      	ldr	r0, [sp, #44]	; 0x2c
9002116c:	e6ec      	b.n	90020f48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9002116e:	9810      	ldr	r0, [sp, #64]	; 0x40
90021170:	e782      	b.n	90021078 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
90021172:	bf00      	nop
90021174:	24039ac4 	.word	0x24039ac4
90021178:	24039acc 	.word	0x24039acc
9002117c:	24039ac6 	.word	0x24039ac6
90021180:	00fff800 	.word	0x00fff800
90021184:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021186:	b153      	cbz	r3, 9002119e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
90021188:	441e      	add	r6, r3
9002118a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002118c:	b2b6      	uxth	r6, r6
9002118e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
90021192:	f006 0607 	and.w	r6, r6, #7
90021196:	781a      	ldrb	r2, [r3, #0]
90021198:	9328      	str	r3, [sp, #160]	; 0xa0
9002119a:	4132      	asrs	r2, r6
9002119c:	b2d2      	uxtb	r2, r2
9002119e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900211a0:	445b      	add	r3, fp
900211a2:	930a      	str	r3, [sp, #40]	; 0x28
900211a4:	e706      	b.n	90020fb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
900211a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900211a8:	2b00      	cmp	r3, #0
900211aa:	d1ce      	bne.n	9002114a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900211ac:	4b05      	ldr	r3, [pc, #20]	; (900211c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
900211ae:	6818      	ldr	r0, [r3, #0]
900211b0:	6803      	ldr	r3, [r0, #0]
900211b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900211b4:	4798      	blx	r3
900211b6:	e7c8      	b.n	9002114a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900211b8:	2b00      	cmp	r3, #0
900211ba:	f43f ae82 	beq.w	90020ec2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900211be:	f44f 7180 	mov.w	r1, #256	; 0x100
900211c2:	e793      	b.n	900210ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
900211c4:	24039acc 	.word	0x24039acc

900211c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
900211c8:	b538      	push	{r3, r4, r5, lr}
900211ca:	4c15      	ldr	r4, [pc, #84]	; (90021220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
900211cc:	4605      	mov	r5, r0
900211ce:	7823      	ldrb	r3, [r4, #0]
900211d0:	f3bf 8f5b 	dmb	ish
900211d4:	07da      	lsls	r2, r3, #31
900211d6:	d40b      	bmi.n	900211f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
900211d8:	4620      	mov	r0, r4
900211da:	f008 fa05 	bl	900295e8 <__cxa_guard_acquire>
900211de:	b138      	cbz	r0, 900211f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
900211e0:	4620      	mov	r0, r4
900211e2:	f008 fa0d 	bl	90029600 <__cxa_guard_release>
900211e6:	4a0f      	ldr	r2, [pc, #60]	; (90021224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900211e8:	490f      	ldr	r1, [pc, #60]	; (90021228 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
900211ea:	4810      	ldr	r0, [pc, #64]	; (9002122c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900211ec:	f008 f9f5 	bl	900295da <__aeabi_atexit>
900211f0:	4c0f      	ldr	r4, [pc, #60]	; (90021230 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
900211f2:	7823      	ldrb	r3, [r4, #0]
900211f4:	f3bf 8f5b 	dmb	ish
900211f8:	07db      	lsls	r3, r3, #31
900211fa:	d40b      	bmi.n	90021214 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900211fc:	4620      	mov	r0, r4
900211fe:	f008 f9f3 	bl	900295e8 <__cxa_guard_acquire>
90021202:	b138      	cbz	r0, 90021214 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90021204:	4620      	mov	r0, r4
90021206:	f008 f9fb 	bl	90029600 <__cxa_guard_release>
9002120a:	4a06      	ldr	r2, [pc, #24]	; (90021224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9002120c:	4909      	ldr	r1, [pc, #36]	; (90021234 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9002120e:	480a      	ldr	r0, [pc, #40]	; (90021238 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90021210:	f008 f9e3 	bl	900295da <__aeabi_atexit>
90021214:	4b05      	ldr	r3, [pc, #20]	; (9002122c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90021216:	612b      	str	r3, [r5, #16]
90021218:	4b07      	ldr	r3, [pc, #28]	; (90021238 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9002121a:	616b      	str	r3, [r5, #20]
9002121c:	bd38      	pop	{r3, r4, r5, pc}
9002121e:	bf00      	nop
90021220:	24039bac 	.word	0x24039bac
90021224:	24000000 	.word	0x24000000
90021228:	9001dfaf 	.word	0x9001dfaf
9002122c:	240000d0 	.word	0x240000d0
90021230:	24039bb0 	.word	0x24039bb0
90021234:	9001dfad 	.word	0x9001dfad
90021238:	240000d4 	.word	0x240000d4

9002123c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9002123c:	b538      	push	{r3, r4, r5, lr}
9002123e:	4c15      	ldr	r4, [pc, #84]	; (90021294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
90021240:	4605      	mov	r5, r0
90021242:	7823      	ldrb	r3, [r4, #0]
90021244:	f3bf 8f5b 	dmb	ish
90021248:	07da      	lsls	r2, r3, #31
9002124a:	d40b      	bmi.n	90021264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9002124c:	4620      	mov	r0, r4
9002124e:	f008 f9cb 	bl	900295e8 <__cxa_guard_acquire>
90021252:	b138      	cbz	r0, 90021264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90021254:	4620      	mov	r0, r4
90021256:	f008 f9d3 	bl	90029600 <__cxa_guard_release>
9002125a:	4a0f      	ldr	r2, [pc, #60]	; (90021298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9002125c:	490f      	ldr	r1, [pc, #60]	; (9002129c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9002125e:	4810      	ldr	r0, [pc, #64]	; (900212a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90021260:	f008 f9bb 	bl	900295da <__aeabi_atexit>
90021264:	4c0f      	ldr	r4, [pc, #60]	; (900212a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90021266:	7823      	ldrb	r3, [r4, #0]
90021268:	f3bf 8f5b 	dmb	ish
9002126c:	07db      	lsls	r3, r3, #31
9002126e:	d40b      	bmi.n	90021288 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90021270:	4620      	mov	r0, r4
90021272:	f008 f9b9 	bl	900295e8 <__cxa_guard_acquire>
90021276:	b138      	cbz	r0, 90021288 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90021278:	4620      	mov	r0, r4
9002127a:	f008 f9c1 	bl	90029600 <__cxa_guard_release>
9002127e:	4a06      	ldr	r2, [pc, #24]	; (90021298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90021280:	4909      	ldr	r1, [pc, #36]	; (900212a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
90021282:	480a      	ldr	r0, [pc, #40]	; (900212ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90021284:	f008 f9a9 	bl	900295da <__aeabi_atexit>
90021288:	4b05      	ldr	r3, [pc, #20]	; (900212a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9002128a:	60ab      	str	r3, [r5, #8]
9002128c:	4b07      	ldr	r3, [pc, #28]	; (900212ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9002128e:	60eb      	str	r3, [r5, #12]
90021290:	bd38      	pop	{r3, r4, r5, pc}
90021292:	bf00      	nop
90021294:	24039b84 	.word	0x24039b84
90021298:	24000000 	.word	0x24000000
9002129c:	9001dfb3 	.word	0x9001dfb3
900212a0:	240000a8 	.word	0x240000a8
900212a4:	24039b88 	.word	0x24039b88
900212a8:	9001dfb1 	.word	0x9001dfb1
900212ac:	240000ac 	.word	0x240000ac

900212b0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
900212b0:	b510      	push	{r4, lr}
900212b2:	4604      	mov	r4, r0
900212b4:	f7ff ff88 	bl	900211c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
900212b8:	4620      	mov	r0, r4
900212ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900212be:	f7ff bfbd 	b.w	9002123c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

900212c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
900212c4:	b538      	push	{r3, r4, r5, lr}
900212c6:	4c15      	ldr	r4, [pc, #84]	; (9002131c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
900212c8:	4605      	mov	r5, r0
900212ca:	7823      	ldrb	r3, [r4, #0]
900212cc:	f3bf 8f5b 	dmb	ish
900212d0:	07da      	lsls	r2, r3, #31
900212d2:	d40b      	bmi.n	900212ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900212d4:	4620      	mov	r0, r4
900212d6:	f008 f987 	bl	900295e8 <__cxa_guard_acquire>
900212da:	b138      	cbz	r0, 900212ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900212dc:	4620      	mov	r0, r4
900212de:	f008 f98f 	bl	90029600 <__cxa_guard_release>
900212e2:	4a0f      	ldr	r2, [pc, #60]	; (90021320 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900212e4:	490f      	ldr	r1, [pc, #60]	; (90021324 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
900212e6:	4810      	ldr	r0, [pc, #64]	; (90021328 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900212e8:	f008 f977 	bl	900295da <__aeabi_atexit>
900212ec:	4c0f      	ldr	r4, [pc, #60]	; (9002132c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
900212ee:	7823      	ldrb	r3, [r4, #0]
900212f0:	f3bf 8f5b 	dmb	ish
900212f4:	07db      	lsls	r3, r3, #31
900212f6:	d40b      	bmi.n	90021310 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900212f8:	4620      	mov	r0, r4
900212fa:	f008 f975 	bl	900295e8 <__cxa_guard_acquire>
900212fe:	b138      	cbz	r0, 90021310 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90021300:	4620      	mov	r0, r4
90021302:	f008 f97d 	bl	90029600 <__cxa_guard_release>
90021306:	4a06      	ldr	r2, [pc, #24]	; (90021320 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90021308:	4909      	ldr	r1, [pc, #36]	; (90021330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9002130a:	480a      	ldr	r0, [pc, #40]	; (90021334 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9002130c:	f008 f965 	bl	900295da <__aeabi_atexit>
90021310:	4b05      	ldr	r3, [pc, #20]	; (90021328 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90021312:	622b      	str	r3, [r5, #32]
90021314:	4b07      	ldr	r3, [pc, #28]	; (90021334 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90021316:	626b      	str	r3, [r5, #36]	; 0x24
90021318:	bd38      	pop	{r3, r4, r5, pc}
9002131a:	bf00      	nop
9002131c:	24039bb4 	.word	0x24039bb4
90021320:	24000000 	.word	0x24000000
90021324:	9001dfa7 	.word	0x9001dfa7
90021328:	240000d8 	.word	0x240000d8
9002132c:	24039bb8 	.word	0x24039bb8
90021330:	9001dfa5 	.word	0x9001dfa5
90021334:	240000dc 	.word	0x240000dc

90021338 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90021338:	b538      	push	{r3, r4, r5, lr}
9002133a:	4c15      	ldr	r4, [pc, #84]	; (90021390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9002133c:	4605      	mov	r5, r0
9002133e:	7823      	ldrb	r3, [r4, #0]
90021340:	f3bf 8f5b 	dmb	ish
90021344:	07da      	lsls	r2, r3, #31
90021346:	d40b      	bmi.n	90021360 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90021348:	4620      	mov	r0, r4
9002134a:	f008 f94d 	bl	900295e8 <__cxa_guard_acquire>
9002134e:	b138      	cbz	r0, 90021360 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90021350:	4620      	mov	r0, r4
90021352:	f008 f955 	bl	90029600 <__cxa_guard_release>
90021356:	4a0f      	ldr	r2, [pc, #60]	; (90021394 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90021358:	490f      	ldr	r1, [pc, #60]	; (90021398 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9002135a:	4810      	ldr	r0, [pc, #64]	; (9002139c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9002135c:	f008 f93d 	bl	900295da <__aeabi_atexit>
90021360:	4c0f      	ldr	r4, [pc, #60]	; (900213a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
90021362:	7823      	ldrb	r3, [r4, #0]
90021364:	f3bf 8f5b 	dmb	ish
90021368:	07db      	lsls	r3, r3, #31
9002136a:	d40b      	bmi.n	90021384 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9002136c:	4620      	mov	r0, r4
9002136e:	f008 f93b 	bl	900295e8 <__cxa_guard_acquire>
90021372:	b138      	cbz	r0, 90021384 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90021374:	4620      	mov	r0, r4
90021376:	f008 f943 	bl	90029600 <__cxa_guard_release>
9002137a:	4a06      	ldr	r2, [pc, #24]	; (90021394 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9002137c:	4909      	ldr	r1, [pc, #36]	; (900213a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9002137e:	480a      	ldr	r0, [pc, #40]	; (900213a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90021380:	f008 f92b 	bl	900295da <__aeabi_atexit>
90021384:	4b05      	ldr	r3, [pc, #20]	; (9002139c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90021386:	61ab      	str	r3, [r5, #24]
90021388:	4b07      	ldr	r3, [pc, #28]	; (900213a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9002138a:	61eb      	str	r3, [r5, #28]
9002138c:	bd38      	pop	{r3, r4, r5, pc}
9002138e:	bf00      	nop
90021390:	24039b8c 	.word	0x24039b8c
90021394:	24000000 	.word	0x24000000
90021398:	9001dfab 	.word	0x9001dfab
9002139c:	240000b0 	.word	0x240000b0
900213a0:	24039b90 	.word	0x24039b90
900213a4:	9001dfa9 	.word	0x9001dfa9
900213a8:	240000b4 	.word	0x240000b4

900213ac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
900213ac:	b510      	push	{r4, lr}
900213ae:	4604      	mov	r4, r0
900213b0:	f7ff ff88 	bl	900212c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
900213b4:	4620      	mov	r0, r4
900213b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900213ba:	f7ff bfbd 	b.w	90021338 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

900213c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
900213c0:	b538      	push	{r3, r4, r5, lr}
900213c2:	4c15      	ldr	r4, [pc, #84]	; (90021418 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
900213c4:	4605      	mov	r5, r0
900213c6:	7823      	ldrb	r3, [r4, #0]
900213c8:	f3bf 8f5b 	dmb	ish
900213cc:	07da      	lsls	r2, r3, #31
900213ce:	d40b      	bmi.n	900213e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900213d0:	4620      	mov	r0, r4
900213d2:	f008 f909 	bl	900295e8 <__cxa_guard_acquire>
900213d6:	b138      	cbz	r0, 900213e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900213d8:	4620      	mov	r0, r4
900213da:	f008 f911 	bl	90029600 <__cxa_guard_release>
900213de:	4a0f      	ldr	r2, [pc, #60]	; (9002141c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900213e0:	490f      	ldr	r1, [pc, #60]	; (90021420 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
900213e2:	4810      	ldr	r0, [pc, #64]	; (90021424 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900213e4:	f008 f8f9 	bl	900295da <__aeabi_atexit>
900213e8:	4c0f      	ldr	r4, [pc, #60]	; (90021428 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
900213ea:	7823      	ldrb	r3, [r4, #0]
900213ec:	f3bf 8f5b 	dmb	ish
900213f0:	07db      	lsls	r3, r3, #31
900213f2:	d40b      	bmi.n	9002140c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900213f4:	4620      	mov	r0, r4
900213f6:	f008 f8f7 	bl	900295e8 <__cxa_guard_acquire>
900213fa:	b138      	cbz	r0, 9002140c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900213fc:	4620      	mov	r0, r4
900213fe:	f008 f8ff 	bl	90029600 <__cxa_guard_release>
90021402:	4a06      	ldr	r2, [pc, #24]	; (9002141c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90021404:	4909      	ldr	r1, [pc, #36]	; (9002142c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90021406:	480a      	ldr	r0, [pc, #40]	; (90021430 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021408:	f008 f8e7 	bl	900295da <__aeabi_atexit>
9002140c:	4b05      	ldr	r3, [pc, #20]	; (90021424 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9002140e:	632b      	str	r3, [r5, #48]	; 0x30
90021410:	4b07      	ldr	r3, [pc, #28]	; (90021430 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021412:	636b      	str	r3, [r5, #52]	; 0x34
90021414:	bd38      	pop	{r3, r4, r5, pc}
90021416:	bf00      	nop
90021418:	24039bc4 	.word	0x24039bc4
9002141c:	24000000 	.word	0x24000000
90021420:	9001df9f 	.word	0x9001df9f
90021424:	240000e8 	.word	0x240000e8
90021428:	24039bc8 	.word	0x24039bc8
9002142c:	9001df9d 	.word	0x9001df9d
90021430:	240000ec 	.word	0x240000ec

90021434 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90021434:	b538      	push	{r3, r4, r5, lr}
90021436:	4c15      	ldr	r4, [pc, #84]	; (9002148c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90021438:	4605      	mov	r5, r0
9002143a:	7823      	ldrb	r3, [r4, #0]
9002143c:	f3bf 8f5b 	dmb	ish
90021440:	07da      	lsls	r2, r3, #31
90021442:	d40b      	bmi.n	9002145c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90021444:	4620      	mov	r0, r4
90021446:	f008 f8cf 	bl	900295e8 <__cxa_guard_acquire>
9002144a:	b138      	cbz	r0, 9002145c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9002144c:	4620      	mov	r0, r4
9002144e:	f008 f8d7 	bl	90029600 <__cxa_guard_release>
90021452:	4a0f      	ldr	r2, [pc, #60]	; (90021490 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90021454:	490f      	ldr	r1, [pc, #60]	; (90021494 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90021456:	4810      	ldr	r0, [pc, #64]	; (90021498 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90021458:	f008 f8bf 	bl	900295da <__aeabi_atexit>
9002145c:	4c0f      	ldr	r4, [pc, #60]	; (9002149c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9002145e:	7823      	ldrb	r3, [r4, #0]
90021460:	f3bf 8f5b 	dmb	ish
90021464:	07db      	lsls	r3, r3, #31
90021466:	d40b      	bmi.n	90021480 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90021468:	4620      	mov	r0, r4
9002146a:	f008 f8bd 	bl	900295e8 <__cxa_guard_acquire>
9002146e:	b138      	cbz	r0, 90021480 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90021470:	4620      	mov	r0, r4
90021472:	f008 f8c5 	bl	90029600 <__cxa_guard_release>
90021476:	4a06      	ldr	r2, [pc, #24]	; (90021490 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90021478:	4909      	ldr	r1, [pc, #36]	; (900214a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9002147a:	480a      	ldr	r0, [pc, #40]	; (900214a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9002147c:	f008 f8ad 	bl	900295da <__aeabi_atexit>
90021480:	4b05      	ldr	r3, [pc, #20]	; (90021498 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90021482:	62ab      	str	r3, [r5, #40]	; 0x28
90021484:	4b07      	ldr	r3, [pc, #28]	; (900214a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90021486:	62eb      	str	r3, [r5, #44]	; 0x2c
90021488:	bd38      	pop	{r3, r4, r5, pc}
9002148a:	bf00      	nop
9002148c:	24039b94 	.word	0x24039b94
90021490:	24000000 	.word	0x24000000
90021494:	9001dfa3 	.word	0x9001dfa3
90021498:	240000b8 	.word	0x240000b8
9002149c:	24039b98 	.word	0x24039b98
900214a0:	9001dfa1 	.word	0x9001dfa1
900214a4:	240000bc 	.word	0x240000bc

900214a8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
900214a8:	b510      	push	{r4, lr}
900214aa:	4604      	mov	r4, r0
900214ac:	f7ff ff88 	bl	900213c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
900214b0:	4620      	mov	r0, r4
900214b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900214b6:	f7ff bfbd 	b.w	90021434 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

900214bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
900214bc:	b538      	push	{r3, r4, r5, lr}
900214be:	4c15      	ldr	r4, [pc, #84]	; (90021514 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
900214c0:	4605      	mov	r5, r0
900214c2:	7823      	ldrb	r3, [r4, #0]
900214c4:	f3bf 8f5b 	dmb	ish
900214c8:	07da      	lsls	r2, r3, #31
900214ca:	d40b      	bmi.n	900214e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900214cc:	4620      	mov	r0, r4
900214ce:	f008 f88b 	bl	900295e8 <__cxa_guard_acquire>
900214d2:	b138      	cbz	r0, 900214e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900214d4:	4620      	mov	r0, r4
900214d6:	f008 f893 	bl	90029600 <__cxa_guard_release>
900214da:	4a0f      	ldr	r2, [pc, #60]	; (90021518 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
900214dc:	490f      	ldr	r1, [pc, #60]	; (9002151c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
900214de:	4810      	ldr	r0, [pc, #64]	; (90021520 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
900214e0:	f008 f87b 	bl	900295da <__aeabi_atexit>
900214e4:	4c0f      	ldr	r4, [pc, #60]	; (90021524 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
900214e6:	7823      	ldrb	r3, [r4, #0]
900214e8:	f3bf 8f5b 	dmb	ish
900214ec:	07db      	lsls	r3, r3, #31
900214ee:	d40b      	bmi.n	90021508 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900214f0:	4620      	mov	r0, r4
900214f2:	f008 f879 	bl	900295e8 <__cxa_guard_acquire>
900214f6:	b138      	cbz	r0, 90021508 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900214f8:	4620      	mov	r0, r4
900214fa:	f008 f881 	bl	90029600 <__cxa_guard_release>
900214fe:	4a06      	ldr	r2, [pc, #24]	; (90021518 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021500:	4909      	ldr	r1, [pc, #36]	; (90021528 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
90021502:	480a      	ldr	r0, [pc, #40]	; (9002152c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90021504:	f008 f869 	bl	900295da <__aeabi_atexit>
90021508:	4b05      	ldr	r3, [pc, #20]	; (90021520 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9002150a:	652b      	str	r3, [r5, #80]	; 0x50
9002150c:	4b07      	ldr	r3, [pc, #28]	; (9002152c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9002150e:	656b      	str	r3, [r5, #84]	; 0x54
90021510:	bd38      	pop	{r3, r4, r5, pc}
90021512:	bf00      	nop
90021514:	24039bcc 	.word	0x24039bcc
90021518:	24000000 	.word	0x24000000
9002151c:	9001df8f 	.word	0x9001df8f
90021520:	240000f0 	.word	0x240000f0
90021524:	24039bd0 	.word	0x24039bd0
90021528:	9001df8d 	.word	0x9001df8d
9002152c:	240000f4 	.word	0x240000f4

90021530 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
90021530:	b538      	push	{r3, r4, r5, lr}
90021532:	4c15      	ldr	r4, [pc, #84]	; (90021588 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90021534:	4605      	mov	r5, r0
90021536:	7823      	ldrb	r3, [r4, #0]
90021538:	f3bf 8f5b 	dmb	ish
9002153c:	07da      	lsls	r2, r3, #31
9002153e:	d40b      	bmi.n	90021558 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90021540:	4620      	mov	r0, r4
90021542:	f008 f851 	bl	900295e8 <__cxa_guard_acquire>
90021546:	b138      	cbz	r0, 90021558 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90021548:	4620      	mov	r0, r4
9002154a:	f008 f859 	bl	90029600 <__cxa_guard_release>
9002154e:	4a0f      	ldr	r2, [pc, #60]	; (9002158c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90021550:	490f      	ldr	r1, [pc, #60]	; (90021590 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
90021552:	4810      	ldr	r0, [pc, #64]	; (90021594 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90021554:	f008 f841 	bl	900295da <__aeabi_atexit>
90021558:	4c0f      	ldr	r4, [pc, #60]	; (90021598 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9002155a:	7823      	ldrb	r3, [r4, #0]
9002155c:	f3bf 8f5b 	dmb	ish
90021560:	07db      	lsls	r3, r3, #31
90021562:	d40b      	bmi.n	9002157c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90021564:	4620      	mov	r0, r4
90021566:	f008 f83f 	bl	900295e8 <__cxa_guard_acquire>
9002156a:	b138      	cbz	r0, 9002157c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9002156c:	4620      	mov	r0, r4
9002156e:	f008 f847 	bl	90029600 <__cxa_guard_release>
90021572:	4a06      	ldr	r2, [pc, #24]	; (9002158c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90021574:	4909      	ldr	r1, [pc, #36]	; (9002159c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90021576:	480a      	ldr	r0, [pc, #40]	; (900215a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021578:	f008 f82f 	bl	900295da <__aeabi_atexit>
9002157c:	4b05      	ldr	r3, [pc, #20]	; (90021594 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9002157e:	64ab      	str	r3, [r5, #72]	; 0x48
90021580:	4b07      	ldr	r3, [pc, #28]	; (900215a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021582:	64eb      	str	r3, [r5, #76]	; 0x4c
90021584:	bd38      	pop	{r3, r4, r5, pc}
90021586:	bf00      	nop
90021588:	24039bd4 	.word	0x24039bd4
9002158c:	24000000 	.word	0x24000000
90021590:	9001df93 	.word	0x9001df93
90021594:	240000f8 	.word	0x240000f8
90021598:	24039bd8 	.word	0x24039bd8
9002159c:	9001df91 	.word	0x9001df91
900215a0:	240000fc 	.word	0x240000fc

900215a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
900215a4:	b538      	push	{r3, r4, r5, lr}
900215a6:	4c15      	ldr	r4, [pc, #84]	; (900215fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
900215a8:	4605      	mov	r5, r0
900215aa:	7823      	ldrb	r3, [r4, #0]
900215ac:	f3bf 8f5b 	dmb	ish
900215b0:	07da      	lsls	r2, r3, #31
900215b2:	d40b      	bmi.n	900215cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
900215b4:	4620      	mov	r0, r4
900215b6:	f008 f817 	bl	900295e8 <__cxa_guard_acquire>
900215ba:	b138      	cbz	r0, 900215cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
900215bc:	4620      	mov	r0, r4
900215be:	f008 f81f 	bl	90029600 <__cxa_guard_release>
900215c2:	4a0f      	ldr	r2, [pc, #60]	; (90021600 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900215c4:	490f      	ldr	r1, [pc, #60]	; (90021604 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
900215c6:	4810      	ldr	r0, [pc, #64]	; (90021608 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900215c8:	f008 f807 	bl	900295da <__aeabi_atexit>
900215cc:	4c0f      	ldr	r4, [pc, #60]	; (9002160c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
900215ce:	7823      	ldrb	r3, [r4, #0]
900215d0:	f3bf 8f5b 	dmb	ish
900215d4:	07db      	lsls	r3, r3, #31
900215d6:	d40b      	bmi.n	900215f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900215d8:	4620      	mov	r0, r4
900215da:	f008 f805 	bl	900295e8 <__cxa_guard_acquire>
900215de:	b138      	cbz	r0, 900215f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900215e0:	4620      	mov	r0, r4
900215e2:	f008 f80d 	bl	90029600 <__cxa_guard_release>
900215e6:	4a06      	ldr	r2, [pc, #24]	; (90021600 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900215e8:	4909      	ldr	r1, [pc, #36]	; (90021610 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
900215ea:	480a      	ldr	r0, [pc, #40]	; (90021614 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900215ec:	f007 fff5 	bl	900295da <__aeabi_atexit>
900215f0:	4b05      	ldr	r3, [pc, #20]	; (90021608 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900215f2:	642b      	str	r3, [r5, #64]	; 0x40
900215f4:	4b07      	ldr	r3, [pc, #28]	; (90021614 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900215f6:	646b      	str	r3, [r5, #68]	; 0x44
900215f8:	bd38      	pop	{r3, r4, r5, pc}
900215fa:	bf00      	nop
900215fc:	24039b9c 	.word	0x24039b9c
90021600:	24000000 	.word	0x24000000
90021604:	9001df97 	.word	0x9001df97
90021608:	240000c0 	.word	0x240000c0
9002160c:	24039ba0 	.word	0x24039ba0
90021610:	9001df95 	.word	0x9001df95
90021614:	240000c4 	.word	0x240000c4

90021618 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90021618:	b538      	push	{r3, r4, r5, lr}
9002161a:	4c15      	ldr	r4, [pc, #84]	; (90021670 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9002161c:	4605      	mov	r5, r0
9002161e:	7823      	ldrb	r3, [r4, #0]
90021620:	f3bf 8f5b 	dmb	ish
90021624:	07da      	lsls	r2, r3, #31
90021626:	d40b      	bmi.n	90021640 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90021628:	4620      	mov	r0, r4
9002162a:	f007 ffdd 	bl	900295e8 <__cxa_guard_acquire>
9002162e:	b138      	cbz	r0, 90021640 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90021630:	4620      	mov	r0, r4
90021632:	f007 ffe5 	bl	90029600 <__cxa_guard_release>
90021636:	4a0f      	ldr	r2, [pc, #60]	; (90021674 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90021638:	490f      	ldr	r1, [pc, #60]	; (90021678 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9002163a:	4810      	ldr	r0, [pc, #64]	; (9002167c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9002163c:	f007 ffcd 	bl	900295da <__aeabi_atexit>
90021640:	4c0f      	ldr	r4, [pc, #60]	; (90021680 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
90021642:	7823      	ldrb	r3, [r4, #0]
90021644:	f3bf 8f5b 	dmb	ish
90021648:	07db      	lsls	r3, r3, #31
9002164a:	d40b      	bmi.n	90021664 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9002164c:	4620      	mov	r0, r4
9002164e:	f007 ffcb 	bl	900295e8 <__cxa_guard_acquire>
90021652:	b138      	cbz	r0, 90021664 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021654:	4620      	mov	r0, r4
90021656:	f007 ffd3 	bl	90029600 <__cxa_guard_release>
9002165a:	4a06      	ldr	r2, [pc, #24]	; (90021674 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9002165c:	4909      	ldr	r1, [pc, #36]	; (90021684 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9002165e:	480a      	ldr	r0, [pc, #40]	; (90021688 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90021660:	f007 ffbb 	bl	900295da <__aeabi_atexit>
90021664:	4b05      	ldr	r3, [pc, #20]	; (9002167c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90021666:	63ab      	str	r3, [r5, #56]	; 0x38
90021668:	4b07      	ldr	r3, [pc, #28]	; (90021688 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9002166a:	63eb      	str	r3, [r5, #60]	; 0x3c
9002166c:	bd38      	pop	{r3, r4, r5, pc}
9002166e:	bf00      	nop
90021670:	24039bbc 	.word	0x24039bbc
90021674:	24000000 	.word	0x24000000
90021678:	9001df9b 	.word	0x9001df9b
9002167c:	240000e0 	.word	0x240000e0
90021680:	24039bc0 	.word	0x24039bc0
90021684:	9001df99 	.word	0x9001df99
90021688:	240000e4 	.word	0x240000e4

9002168c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9002168c:	b510      	push	{r4, lr}
9002168e:	4604      	mov	r4, r0
90021690:	f7ff ff14 	bl	900214bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90021694:	4620      	mov	r0, r4
90021696:	f7ff ff85 	bl	900215a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9002169a:	4620      	mov	r0, r4
9002169c:	f7ff ff48 	bl	90021530 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
900216a0:	4620      	mov	r0, r4
900216a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900216a6:	f7ff bfb7 	b.w	90021618 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

900216ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
900216ac:	b538      	push	{r3, r4, r5, lr}
900216ae:	4c15      	ldr	r4, [pc, #84]	; (90021704 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
900216b0:	4605      	mov	r5, r0
900216b2:	7823      	ldrb	r3, [r4, #0]
900216b4:	f3bf 8f5b 	dmb	ish
900216b8:	07da      	lsls	r2, r3, #31
900216ba:	d40b      	bmi.n	900216d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
900216bc:	4620      	mov	r0, r4
900216be:	f007 ff93 	bl	900295e8 <__cxa_guard_acquire>
900216c2:	b138      	cbz	r0, 900216d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
900216c4:	4620      	mov	r0, r4
900216c6:	f007 ff9b 	bl	90029600 <__cxa_guard_release>
900216ca:	4a0f      	ldr	r2, [pc, #60]	; (90021708 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
900216cc:	490f      	ldr	r1, [pc, #60]	; (9002170c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
900216ce:	4810      	ldr	r0, [pc, #64]	; (90021710 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
900216d0:	f007 ff83 	bl	900295da <__aeabi_atexit>
900216d4:	4c0f      	ldr	r4, [pc, #60]	; (90021714 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
900216d6:	7823      	ldrb	r3, [r4, #0]
900216d8:	f3bf 8f5b 	dmb	ish
900216dc:	07db      	lsls	r3, r3, #31
900216de:	d40b      	bmi.n	900216f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
900216e0:	4620      	mov	r0, r4
900216e2:	f007 ff81 	bl	900295e8 <__cxa_guard_acquire>
900216e6:	b138      	cbz	r0, 900216f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
900216e8:	4620      	mov	r0, r4
900216ea:	f007 ff89 	bl	90029600 <__cxa_guard_release>
900216ee:	4a06      	ldr	r2, [pc, #24]	; (90021708 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
900216f0:	4909      	ldr	r1, [pc, #36]	; (90021718 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
900216f2:	480a      	ldr	r0, [pc, #40]	; (9002171c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
900216f4:	f007 ff71 	bl	900295da <__aeabi_atexit>
900216f8:	4b05      	ldr	r3, [pc, #20]	; (90021710 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
900216fa:	662b      	str	r3, [r5, #96]	; 0x60
900216fc:	4b07      	ldr	r3, [pc, #28]	; (9002171c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
900216fe:	666b      	str	r3, [r5, #100]	; 0x64
90021700:	bd38      	pop	{r3, r4, r5, pc}
90021702:	bf00      	nop
90021704:	24039ba4 	.word	0x24039ba4
90021708:	24000000 	.word	0x24000000
9002170c:	9001df87 	.word	0x9001df87
90021710:	240000c8 	.word	0x240000c8
90021714:	24039ba8 	.word	0x24039ba8
90021718:	9001df85 	.word	0x9001df85
9002171c:	240000cc 	.word	0x240000cc

90021720 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90021720:	b538      	push	{r3, r4, r5, lr}
90021722:	4c15      	ldr	r4, [pc, #84]	; (90021778 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90021724:	4605      	mov	r5, r0
90021726:	7823      	ldrb	r3, [r4, #0]
90021728:	f3bf 8f5b 	dmb	ish
9002172c:	07da      	lsls	r2, r3, #31
9002172e:	d40b      	bmi.n	90021748 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90021730:	4620      	mov	r0, r4
90021732:	f007 ff59 	bl	900295e8 <__cxa_guard_acquire>
90021736:	b138      	cbz	r0, 90021748 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90021738:	4620      	mov	r0, r4
9002173a:	f007 ff61 	bl	90029600 <__cxa_guard_release>
9002173e:	4a0f      	ldr	r2, [pc, #60]	; (9002177c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90021740:	490f      	ldr	r1, [pc, #60]	; (90021780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
90021742:	4810      	ldr	r0, [pc, #64]	; (90021784 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90021744:	f007 ff49 	bl	900295da <__aeabi_atexit>
90021748:	4c0f      	ldr	r4, [pc, #60]	; (90021788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9002174a:	7823      	ldrb	r3, [r4, #0]
9002174c:	f3bf 8f5b 	dmb	ish
90021750:	07db      	lsls	r3, r3, #31
90021752:	d40b      	bmi.n	9002176c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021754:	4620      	mov	r0, r4
90021756:	f007 ff47 	bl	900295e8 <__cxa_guard_acquire>
9002175a:	b138      	cbz	r0, 9002176c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9002175c:	4620      	mov	r0, r4
9002175e:	f007 ff4f 	bl	90029600 <__cxa_guard_release>
90021762:	4a06      	ldr	r2, [pc, #24]	; (9002177c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90021764:	4909      	ldr	r1, [pc, #36]	; (9002178c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90021766:	480a      	ldr	r0, [pc, #40]	; (90021790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90021768:	f007 ff37 	bl	900295da <__aeabi_atexit>
9002176c:	4b05      	ldr	r3, [pc, #20]	; (90021784 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9002176e:	65ab      	str	r3, [r5, #88]	; 0x58
90021770:	4b07      	ldr	r3, [pc, #28]	; (90021790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90021772:	65eb      	str	r3, [r5, #92]	; 0x5c
90021774:	bd38      	pop	{r3, r4, r5, pc}
90021776:	bf00      	nop
90021778:	24039b7c 	.word	0x24039b7c
9002177c:	24000000 	.word	0x24000000
90021780:	9001df8b 	.word	0x9001df8b
90021784:	240000a0 	.word	0x240000a0
90021788:	24039b80 	.word	0x24039b80
9002178c:	9001df89 	.word	0x9001df89
90021790:	240000a4 	.word	0x240000a4

90021794 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90021794:	b510      	push	{r4, lr}
90021796:	4604      	mov	r4, r0
90021798:	f7ff ff88 	bl	900216ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9002179c:	4620      	mov	r0, r4
9002179e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900217a2:	f7ff bfbd 	b.w	90021720 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

900217a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
900217a8:	b538      	push	{r3, r4, r5, lr}
900217aa:	4c15      	ldr	r4, [pc, #84]	; (90021800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
900217ac:	4605      	mov	r5, r0
900217ae:	7823      	ldrb	r3, [r4, #0]
900217b0:	f3bf 8f5b 	dmb	ish
900217b4:	07da      	lsls	r2, r3, #31
900217b6:	d40b      	bmi.n	900217d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
900217b8:	4620      	mov	r0, r4
900217ba:	f007 ff15 	bl	900295e8 <__cxa_guard_acquire>
900217be:	b138      	cbz	r0, 900217d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
900217c0:	4620      	mov	r0, r4
900217c2:	f007 ff1d 	bl	90029600 <__cxa_guard_release>
900217c6:	4a0f      	ldr	r2, [pc, #60]	; (90021804 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900217c8:	490f      	ldr	r1, [pc, #60]	; (90021808 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
900217ca:	4810      	ldr	r0, [pc, #64]	; (9002180c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900217cc:	f007 ff05 	bl	900295da <__aeabi_atexit>
900217d0:	4c0f      	ldr	r4, [pc, #60]	; (90021810 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
900217d2:	7823      	ldrb	r3, [r4, #0]
900217d4:	f3bf 8f5b 	dmb	ish
900217d8:	07db      	lsls	r3, r3, #31
900217da:	d40b      	bmi.n	900217f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
900217dc:	4620      	mov	r0, r4
900217de:	f007 ff03 	bl	900295e8 <__cxa_guard_acquire>
900217e2:	b138      	cbz	r0, 900217f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
900217e4:	4620      	mov	r0, r4
900217e6:	f007 ff0b 	bl	90029600 <__cxa_guard_release>
900217ea:	4a06      	ldr	r2, [pc, #24]	; (90021804 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900217ec:	4909      	ldr	r1, [pc, #36]	; (90021814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
900217ee:	480a      	ldr	r0, [pc, #40]	; (90021818 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900217f0:	f007 fef3 	bl	900295da <__aeabi_atexit>
900217f4:	4b05      	ldr	r3, [pc, #20]	; (9002180c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900217f6:	672b      	str	r3, [r5, #112]	; 0x70
900217f8:	4b07      	ldr	r3, [pc, #28]	; (90021818 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900217fa:	676b      	str	r3, [r5, #116]	; 0x74
900217fc:	bd38      	pop	{r3, r4, r5, pc}
900217fe:	bf00      	nop
90021800:	24039b74 	.word	0x24039b74
90021804:	24000000 	.word	0x24000000
90021808:	9001df7f 	.word	0x9001df7f
9002180c:	24000098 	.word	0x24000098
90021810:	24039b78 	.word	0x24039b78
90021814:	9001df7d 	.word	0x9001df7d
90021818:	2400009c 	.word	0x2400009c

9002181c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9002181c:	b538      	push	{r3, r4, r5, lr}
9002181e:	4c15      	ldr	r4, [pc, #84]	; (90021874 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90021820:	4605      	mov	r5, r0
90021822:	7823      	ldrb	r3, [r4, #0]
90021824:	f3bf 8f5b 	dmb	ish
90021828:	07da      	lsls	r2, r3, #31
9002182a:	d40b      	bmi.n	90021844 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9002182c:	4620      	mov	r0, r4
9002182e:	f007 fedb 	bl	900295e8 <__cxa_guard_acquire>
90021832:	b138      	cbz	r0, 90021844 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90021834:	4620      	mov	r0, r4
90021836:	f007 fee3 	bl	90029600 <__cxa_guard_release>
9002183a:	4a0f      	ldr	r2, [pc, #60]	; (90021878 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9002183c:	490f      	ldr	r1, [pc, #60]	; (9002187c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9002183e:	4810      	ldr	r0, [pc, #64]	; (90021880 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90021840:	f007 fecb 	bl	900295da <__aeabi_atexit>
90021844:	4c0f      	ldr	r4, [pc, #60]	; (90021884 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90021846:	7823      	ldrb	r3, [r4, #0]
90021848:	f3bf 8f5b 	dmb	ish
9002184c:	07db      	lsls	r3, r3, #31
9002184e:	d40b      	bmi.n	90021868 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021850:	4620      	mov	r0, r4
90021852:	f007 fec9 	bl	900295e8 <__cxa_guard_acquire>
90021856:	b138      	cbz	r0, 90021868 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021858:	4620      	mov	r0, r4
9002185a:	f007 fed1 	bl	90029600 <__cxa_guard_release>
9002185e:	4a06      	ldr	r2, [pc, #24]	; (90021878 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90021860:	4909      	ldr	r1, [pc, #36]	; (90021888 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
90021862:	480a      	ldr	r0, [pc, #40]	; (9002188c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90021864:	f007 feb9 	bl	900295da <__aeabi_atexit>
90021868:	4b05      	ldr	r3, [pc, #20]	; (90021880 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9002186a:	66ab      	str	r3, [r5, #104]	; 0x68
9002186c:	4b07      	ldr	r3, [pc, #28]	; (9002188c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9002186e:	66eb      	str	r3, [r5, #108]	; 0x6c
90021870:	bd38      	pop	{r3, r4, r5, pc}
90021872:	bf00      	nop
90021874:	24039b6c 	.word	0x24039b6c
90021878:	24000000 	.word	0x24000000
9002187c:	9001df83 	.word	0x9001df83
90021880:	24000090 	.word	0x24000090
90021884:	24039b70 	.word	0x24039b70
90021888:	9001df81 	.word	0x9001df81
9002188c:	24000094 	.word	0x24000094

90021890 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90021890:	b510      	push	{r4, lr}
90021892:	4604      	mov	r4, r0
90021894:	f7ff ff88 	bl	900217a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90021898:	4620      	mov	r0, r4
9002189a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002189e:	f7ff bfbd 	b.w	9002181c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

900218a2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
900218a2:	b510      	push	{r4, lr}
900218a4:	4604      	mov	r4, r0
900218a6:	f7ff fff3 	bl	90021890 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
900218aa:	4620      	mov	r0, r4
900218ac:	f7ff ff72 	bl	90021794 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
900218b0:	4620      	mov	r0, r4
900218b2:	f7ff fdf9 	bl	900214a8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
900218b6:	4620      	mov	r0, r4
900218b8:	f7ff fcfa 	bl	900212b0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
900218bc:	4620      	mov	r0, r4
900218be:	f7ff fd75 	bl	900213ac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
900218c2:	4620      	mov	r0, r4
900218c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900218c8:	f7ff bee0 	b.w	9002168c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

900218cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
900218cc:	b538      	push	{r3, r4, r5, lr}
900218ce:	4c0b      	ldr	r4, [pc, #44]	; (900218fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
900218d0:	4605      	mov	r5, r0
900218d2:	7823      	ldrb	r3, [r4, #0]
900218d4:	f3bf 8f5b 	dmb	ish
900218d8:	07db      	lsls	r3, r3, #31
900218da:	d40b      	bmi.n	900218f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
900218dc:	4620      	mov	r0, r4
900218de:	f007 fe83 	bl	900295e8 <__cxa_guard_acquire>
900218e2:	b138      	cbz	r0, 900218f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
900218e4:	4620      	mov	r0, r4
900218e6:	f007 fe8b 	bl	90029600 <__cxa_guard_release>
900218ea:	4a05      	ldr	r2, [pc, #20]	; (90021900 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
900218ec:	4905      	ldr	r1, [pc, #20]	; (90021904 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
900218ee:	4806      	ldr	r0, [pc, #24]	; (90021908 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
900218f0:	f007 fe73 	bl	900295da <__aeabi_atexit>
900218f4:	4b04      	ldr	r3, [pc, #16]	; (90021908 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
900218f6:	67ab      	str	r3, [r5, #120]	; 0x78
900218f8:	bd38      	pop	{r3, r4, r5, pc}
900218fa:	bf00      	nop
900218fc:	24039b60 	.word	0x24039b60
90021900:	24000000 	.word	0x24000000
90021904:	9001df7b 	.word	0x9001df7b
90021908:	24000088 	.word	0x24000088

9002190c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9002190c:	b538      	push	{r3, r4, r5, lr}
9002190e:	4c0b      	ldr	r4, [pc, #44]	; (9002193c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90021910:	4605      	mov	r5, r0
90021912:	7823      	ldrb	r3, [r4, #0]
90021914:	f3bf 8f5b 	dmb	ish
90021918:	07db      	lsls	r3, r3, #31
9002191a:	d40b      	bmi.n	90021934 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9002191c:	4620      	mov	r0, r4
9002191e:	f007 fe63 	bl	900295e8 <__cxa_guard_acquire>
90021922:	b138      	cbz	r0, 90021934 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90021924:	4620      	mov	r0, r4
90021926:	f007 fe6b 	bl	90029600 <__cxa_guard_release>
9002192a:	4a05      	ldr	r2, [pc, #20]	; (90021940 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9002192c:	4905      	ldr	r1, [pc, #20]	; (90021944 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9002192e:	4806      	ldr	r0, [pc, #24]	; (90021948 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021930:	f007 fe53 	bl	900295da <__aeabi_atexit>
90021934:	4b04      	ldr	r3, [pc, #16]	; (90021948 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021936:	67eb      	str	r3, [r5, #124]	; 0x7c
90021938:	bd38      	pop	{r3, r4, r5, pc}
9002193a:	bf00      	nop
9002193c:	24039b64 	.word	0x24039b64
90021940:	24000000 	.word	0x24000000
90021944:	9001df79 	.word	0x9001df79
90021948:	2400008c 	.word	0x2400008c

9002194c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9002194c:	b570      	push	{r4, r5, r6, lr}
9002194e:	4d0d      	ldr	r5, [pc, #52]	; (90021984 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
90021950:	4606      	mov	r6, r0
90021952:	4c0d      	ldr	r4, [pc, #52]	; (90021988 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90021954:	782b      	ldrb	r3, [r5, #0]
90021956:	f3bf 8f5b 	dmb	ish
9002195a:	f013 0f01 	tst.w	r3, #1
9002195e:	d10d      	bne.n	9002197c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021960:	4628      	mov	r0, r5
90021962:	f007 fe41 	bl	900295e8 <__cxa_guard_acquire>
90021966:	b148      	cbz	r0, 9002197c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021968:	4b08      	ldr	r3, [pc, #32]	; (9002198c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9002196a:	4628      	mov	r0, r5
9002196c:	6023      	str	r3, [r4, #0]
9002196e:	f007 fe47 	bl	90029600 <__cxa_guard_release>
90021972:	4a07      	ldr	r2, [pc, #28]	; (90021990 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90021974:	4620      	mov	r0, r4
90021976:	4907      	ldr	r1, [pc, #28]	; (90021994 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90021978:	f007 fe2f 	bl	900295da <__aeabi_atexit>
9002197c:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
90021980:	bd70      	pop	{r4, r5, r6, pc}
90021982:	bf00      	nop
90021984:	24039b68 	.word	0x24039b68
90021988:	24039bdc 	.word	0x24039bdc
9002198c:	9002dea4 	.word	0x9002dea4
90021990:	24000000 	.word	0x24000000
90021994:	9001df77 	.word	0x9001df77

90021998 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90021998:	b510      	push	{r4, lr}
9002199a:	4604      	mov	r4, r0
9002199c:	f7ff ff96 	bl	900218cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
900219a0:	4620      	mov	r0, r4
900219a2:	f7ff ffb3 	bl	9002190c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
900219a6:	4620      	mov	r0, r4
900219a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900219ac:	f7ff bfce 	b.w	9002194c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

900219b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
900219b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900219b4:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
900219b8:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
900219bc:	2d00      	cmp	r5, #0
900219be:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
900219c2:	fb05 4c0e 	mla	ip, r5, lr, r4
900219c6:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
900219ca:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
900219ce:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
900219d2:	eb02 0a0c 	add.w	sl, r2, ip
900219d6:	8808      	ldrh	r0, [r1, #0]
900219d8:	f2c0 80b0 	blt.w	90021b3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900219dc:	45ab      	cmp	fp, r5
900219de:	f340 80ad 	ble.w	90021b3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900219e2:	2c00      	cmp	r4, #0
900219e4:	f2c0 80a8 	blt.w	90021b38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900219e8:	45a6      	cmp	lr, r4
900219ea:	f340 80a5 	ble.w	90021b38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900219ee:	f812 200c 	ldrb.w	r2, [r2, ip]
900219f2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
900219f6:	1c62      	adds	r2, r4, #1
900219f8:	f100 80a3 	bmi.w	90021b42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
900219fc:	4596      	cmp	lr, r2
900219fe:	f340 80a0 	ble.w	90021b42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021a02:	f1b9 0f00 	cmp.w	r9, #0
90021a06:	f000 809c 	beq.w	90021b42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021a0a:	f89a 2001 	ldrb.w	r2, [sl, #1]
90021a0e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021a12:	3501      	adds	r5, #1
90021a14:	f100 8099 	bmi.w	90021b4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021a18:	45ab      	cmp	fp, r5
90021a1a:	f340 8096 	ble.w	90021b4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021a1e:	2f00      	cmp	r7, #0
90021a20:	f000 8093 	beq.w	90021b4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021a24:	2c00      	cmp	r4, #0
90021a26:	f2c0 808e 	blt.w	90021b46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90021a2a:	45a6      	cmp	lr, r4
90021a2c:	f340 808b 	ble.w	90021b46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90021a30:	f81a 200e 	ldrb.w	r2, [sl, lr]
90021a34:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90021a38:	3401      	adds	r4, #1
90021a3a:	f100 8089 	bmi.w	90021b50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021a3e:	45a6      	cmp	lr, r4
90021a40:	f340 8086 	ble.w	90021b50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021a44:	f1b9 0f00 	cmp.w	r9, #0
90021a48:	f000 8082 	beq.w	90021b50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021a4c:	44d6      	add	lr, sl
90021a4e:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021a52:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90021a56:	ea4f 4408 	mov.w	r4, r8, lsl #16
90021a5a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
90021a5e:	fb19 fe07 	smulbb	lr, r9, r7
90021a62:	f1c7 0210 	rsb	r2, r7, #16
90021a66:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90021a6a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90021a6e:	eba2 0209 	sub.w	r2, r2, r9
90021a72:	ea44 0808 	orr.w	r8, r4, r8
90021a76:	ea4f 440c 	mov.w	r4, ip, lsl #16
90021a7a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90021a7e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90021a82:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90021a86:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90021a8a:	ea44 0c0c 	orr.w	ip, r4, ip
90021a8e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90021a92:	fb04 f40c 	mul.w	r4, r4, ip
90021a96:	fb02 4808 	mla	r8, r2, r8, r4
90021a9a:	041a      	lsls	r2, r3, #16
90021a9c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021aa0:	b2b4      	uxth	r4, r6
90021aa2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90021aa6:	43f6      	mvns	r6, r6
90021aa8:	4313      	orrs	r3, r2
90021aaa:	042a      	lsls	r2, r5, #16
90021aac:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90021ab0:	b2f6      	uxtb	r6, r6
90021ab2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90021ab6:	fb0e 8303 	mla	r3, lr, r3, r8
90021aba:	432a      	orrs	r2, r5
90021abc:	fb07 3202 	mla	r2, r7, r2, r3
90021ac0:	10c7      	asrs	r7, r0, #3
90021ac2:	0d53      	lsrs	r3, r2, #21
90021ac4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90021ac8:	0952      	lsrs	r2, r2, #5
90021aca:	fb17 f706 	smulbb	r7, r7, r6
90021ace:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021ad2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021ad6:	431a      	orrs	r2, r3
90021ad8:	b293      	uxth	r3, r2
90021ada:	1202      	asrs	r2, r0, #8
90021adc:	121d      	asrs	r5, r3, #8
90021ade:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90021ae2:	00c0      	lsls	r0, r0, #3
90021ae4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90021ae8:	fb12 f206 	smulbb	r2, r2, r6
90021aec:	b2c0      	uxtb	r0, r0
90021aee:	fb05 2504 	mla	r5, r5, r4, r2
90021af2:	10da      	asrs	r2, r3, #3
90021af4:	fb10 f006 	smulbb	r0, r0, r6
90021af8:	00db      	lsls	r3, r3, #3
90021afa:	b2ad      	uxth	r5, r5
90021afc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90021b00:	b2db      	uxtb	r3, r3
90021b02:	fb02 7204 	mla	r2, r2, r4, r7
90021b06:	fb03 0004 	mla	r0, r3, r4, r0
90021b0a:	1c6b      	adds	r3, r5, #1
90021b0c:	b292      	uxth	r2, r2
90021b0e:	b280      	uxth	r0, r0
90021b10:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021b14:	1c43      	adds	r3, r0, #1
90021b16:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90021b1a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90021b1e:	1c50      	adds	r0, r2, #1
90021b20:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90021b24:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021b28:	0952      	lsrs	r2, r2, #5
90021b2a:	432b      	orrs	r3, r5
90021b2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021b30:	4313      	orrs	r3, r2
90021b32:	800b      	strh	r3, [r1, #0]
90021b34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021b38:	4680      	mov	r8, r0
90021b3a:	e75c      	b.n	900219f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90021b3c:	4684      	mov	ip, r0
90021b3e:	4680      	mov	r8, r0
90021b40:	e767      	b.n	90021a12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90021b42:	4684      	mov	ip, r0
90021b44:	e765      	b.n	90021a12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90021b46:	4605      	mov	r5, r0
90021b48:	e776      	b.n	90021a38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90021b4a:	4603      	mov	r3, r0
90021b4c:	4605      	mov	r5, r0
90021b4e:	e782      	b.n	90021a56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90021b50:	4603      	mov	r3, r0
90021b52:	e780      	b.n	90021a56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90021b54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021b58:	b099      	sub	sp, #100	; 0x64
90021b5a:	9215      	str	r2, [sp, #84]	; 0x54
90021b5c:	9309      	str	r3, [sp, #36]	; 0x24
90021b5e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
90021b60:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
90021b64:	9016      	str	r0, [sp, #88]	; 0x58
90021b66:	930d      	str	r3, [sp, #52]	; 0x34
90021b68:	6850      	ldr	r0, [r2, #4]
90021b6a:	910c      	str	r1, [sp, #48]	; 0x30
90021b6c:	6812      	ldr	r2, [r2, #0]
90021b6e:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
90021b72:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
90021b76:	fb00 1303 	mla	r3, r0, r3, r1
90021b7a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
90021b7e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021b80:	681b      	ldr	r3, [r3, #0]
90021b82:	930b      	str	r3, [sp, #44]	; 0x2c
90021b84:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021b86:	685e      	ldr	r6, [r3, #4]
90021b88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90021b8a:	3604      	adds	r6, #4
90021b8c:	43db      	mvns	r3, r3
90021b8e:	b2db      	uxtb	r3, r3
90021b90:	930a      	str	r3, [sp, #40]	; 0x28
90021b92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021b94:	2b00      	cmp	r3, #0
90021b96:	dc03      	bgt.n	90021ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90021b98:	9b15      	ldr	r3, [sp, #84]	; 0x54
90021b9a:	2b00      	cmp	r3, #0
90021b9c:	f340 8225 	ble.w	90021fea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021ba0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021ba2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021ba6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021baa:	1e48      	subs	r0, r1, #1
90021bac:	1e57      	subs	r7, r2, #1
90021bae:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021bb0:	2b00      	cmp	r3, #0
90021bb2:	f340 80e3 	ble.w	90021d7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90021bb6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90021bba:	ea4f 4325 	mov.w	r3, r5, asr #16
90021bbe:	d406      	bmi.n	90021bce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021bc0:	4584      	cmp	ip, r0
90021bc2:	da04      	bge.n	90021bce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021bc4:	2b00      	cmp	r3, #0
90021bc6:	db02      	blt.n	90021bce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021bc8:	42bb      	cmp	r3, r7
90021bca:	f2c0 80d8 	blt.w	90021d7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90021bce:	f11c 0c01 	adds.w	ip, ip, #1
90021bd2:	f100 80c9 	bmi.w	90021d68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021bd6:	4561      	cmp	r1, ip
90021bd8:	f2c0 80c6 	blt.w	90021d68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021bdc:	3301      	adds	r3, #1
90021bde:	f100 80c3 	bmi.w	90021d68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021be2:	429a      	cmp	r2, r3
90021be4:	f2c0 80c0 	blt.w	90021d68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021be8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90021bec:	4647      	mov	r7, r8
90021bee:	f1bb 0f00 	cmp.w	fp, #0
90021bf2:	f340 80e3 	ble.w	90021dbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90021bf6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90021bf8:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021bfc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021bfe:	f3ca 3003 	ubfx	r0, sl, #12, #4
90021c02:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90021c06:	ea5f 422a 	movs.w	r2, sl, asr #16
90021c0a:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021c0e:	689b      	ldr	r3, [r3, #8]
90021c10:	f100 8121 	bmi.w	90021e56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021c14:	f103 39ff 	add.w	r9, r3, #4294967295
90021c18:	454a      	cmp	r2, r9
90021c1a:	f280 811c 	bge.w	90021e56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021c1e:	f1bc 0f00 	cmp.w	ip, #0
90021c22:	f2c0 8118 	blt.w	90021e56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021c26:	f10e 39ff 	add.w	r9, lr, #4294967295
90021c2a:	45cc      	cmp	ip, r9
90021c2c:	f280 8113 	bge.w	90021e56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021c30:	b21b      	sxth	r3, r3
90021c32:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021c34:	fb0c 2203 	mla	r2, ip, r3, r2
90021c38:	eb04 0902 	add.w	r9, r4, r2
90021c3c:	5ca2      	ldrb	r2, [r4, r2]
90021c3e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
90021c42:	2800      	cmp	r0, #0
90021c44:	f000 80fe 	beq.w	90021e44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90021c48:	f899 2001 	ldrb.w	r2, [r9, #1]
90021c4c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90021c50:	9211      	str	r2, [sp, #68]	; 0x44
90021c52:	b151      	cbz	r1, 90021c6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021c54:	eb09 0203 	add.w	r2, r9, r3
90021c58:	f819 3003 	ldrb.w	r3, [r9, r3]
90021c5c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021c60:	930f      	str	r3, [sp, #60]	; 0x3c
90021c62:	7853      	ldrb	r3, [r2, #1]
90021c64:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021c68:	9312      	str	r3, [sp, #72]	; 0x48
90021c6a:	9b11      	ldr	r3, [sp, #68]	; 0x44
90021c6c:	fb10 f201 	smulbb	r2, r0, r1
90021c70:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021c72:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021c76:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021c7a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90021c7e:	10d2      	asrs	r2, r2, #3
90021c80:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90021c84:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90021c88:	ea4c 0c03 	orr.w	ip, ip, r3
90021c8c:	9b12      	ldr	r3, [sp, #72]	; 0x48
90021c8e:	041b      	lsls	r3, r3, #16
90021c90:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021c94:	4323      	orrs	r3, r4
90021c96:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021c98:	4353      	muls	r3, r2
90021c9a:	fb09 330c 	mla	r3, r9, ip, r3
90021c9e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90021ca2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021ca6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90021caa:	ea4c 0e0e 	orr.w	lr, ip, lr
90021cae:	f1c1 0c10 	rsb	ip, r1, #16
90021cb2:	ebac 0c00 	sub.w	ip, ip, r0
90021cb6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021cba:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90021cbe:	fb0c 3c0e 	mla	ip, ip, lr, r3
90021cc2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021cc4:	0418      	lsls	r0, r3, #16
90021cc6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021cca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90021cce:	4318      	orrs	r0, r3
90021cd0:	fb02 c200 	mla	r2, r2, r0, ip
90021cd4:	8838      	ldrh	r0, [r7, #0]
90021cd6:	0d53      	lsrs	r3, r2, #21
90021cd8:	0952      	lsrs	r2, r2, #5
90021cda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021cde:	1201      	asrs	r1, r0, #8
90021ce0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021ce4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90021ce8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90021cec:	00c0      	lsls	r0, r0, #3
90021cee:	431a      	orrs	r2, r3
90021cf0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
90021cf4:	fb11 f104 	smulbb	r1, r1, r4
90021cf8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90021cfc:	b292      	uxth	r2, r2
90021cfe:	fb1e fe04 	smulbb	lr, lr, r4
90021d02:	b2c0      	uxtb	r0, r0
90021d04:	ea4f 2c22 	mov.w	ip, r2, asr #8
90021d08:	fb10 f004 	smulbb	r0, r0, r4
90021d0c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90021d10:	fb0c 1c03 	mla	ip, ip, r3, r1
90021d14:	10d1      	asrs	r1, r2, #3
90021d16:	00d2      	lsls	r2, r2, #3
90021d18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90021d1c:	fa1f fc8c 	uxth.w	ip, ip
90021d20:	b2d2      	uxtb	r2, r2
90021d22:	fb01 e103 	mla	r1, r1, r3, lr
90021d26:	fb02 0303 	mla	r3, r2, r3, r0
90021d2a:	b289      	uxth	r1, r1
90021d2c:	b29a      	uxth	r2, r3
90021d2e:	f10c 0301 	add.w	r3, ip, #1
90021d32:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90021d36:	1c53      	adds	r3, r2, #1
90021d38:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021d3c:	1c4a      	adds	r2, r1, #1
90021d3e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90021d42:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021d46:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021d4a:	0949      	lsrs	r1, r1, #5
90021d4c:	ea43 030c 	orr.w	r3, r3, ip
90021d50:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021d54:	430b      	orrs	r3, r1
90021d56:	803b      	strh	r3, [r7, #0]
90021d58:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021d5a:	3702      	adds	r7, #2
90021d5c:	f10b 3bff 	add.w	fp, fp, #4294967295
90021d60:	449a      	add	sl, r3
90021d62:	9b26      	ldr	r3, [sp, #152]	; 0x98
90021d64:	441d      	add	r5, r3
90021d66:	e742      	b.n	90021bee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021d68:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021d6a:	f108 0802 	add.w	r8, r8, #2
90021d6e:	449a      	add	sl, r3
90021d70:	9b26      	ldr	r3, [sp, #152]	; 0x98
90021d72:	441d      	add	r5, r3
90021d74:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021d76:	3b01      	subs	r3, #1
90021d78:	9309      	str	r3, [sp, #36]	; 0x24
90021d7a:	e718      	b.n	90021bae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90021d7c:	d023      	beq.n	90021dc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90021d7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021d80:	9825      	ldr	r0, [sp, #148]	; 0x94
90021d82:	3b01      	subs	r3, #1
90021d84:	fb00 a003 	mla	r0, r0, r3, sl
90021d88:	1400      	asrs	r0, r0, #16
90021d8a:	f53f af2d 	bmi.w	90021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021d8e:	3901      	subs	r1, #1
90021d90:	4288      	cmp	r0, r1
90021d92:	f6bf af29 	bge.w	90021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021d96:	9926      	ldr	r1, [sp, #152]	; 0x98
90021d98:	fb01 5303 	mla	r3, r1, r3, r5
90021d9c:	141b      	asrs	r3, r3, #16
90021d9e:	f53f af23 	bmi.w	90021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021da2:	3a01      	subs	r2, #1
90021da4:	4293      	cmp	r3, r2
90021da6:	f6bf af1f 	bge.w	90021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021daa:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
90021dae:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
90021db2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
90021db6:	f1be 0f00 	cmp.w	lr, #0
90021dba:	dc6c      	bgt.n	90021e96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021dbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021dbe:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021dc2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90021dc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021dc8:	2b00      	cmp	r3, #0
90021dca:	f340 810e 	ble.w	90021fea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021dce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90021dd2:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021dd4:	ee30 0a04 	vadd.f32	s0, s0, s8
90021dd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021ddc:	eef0 6a62 	vmov.f32	s13, s5
90021de0:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021de4:	ee31 1a05 	vadd.f32	s2, s2, s10
90021de8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021dec:	ee16 aa90 	vmov	sl, s13
90021df0:	eef0 6a43 	vmov.f32	s13, s6
90021df4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021df8:	ee16 5a90 	vmov	r5, s13
90021dfc:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021e00:	ee61 7a27 	vmul.f32	s15, s2, s15
90021e04:	ee77 2a62 	vsub.f32	s5, s14, s5
90021e08:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021e0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021e10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021e14:	ee12 2a90 	vmov	r2, s5
90021e18:	eef0 2a47 	vmov.f32	s5, s14
90021e1c:	fb92 f3f3 	sdiv	r3, r2, r3
90021e20:	ee13 2a10 	vmov	r2, s6
90021e24:	9325      	str	r3, [sp, #148]	; 0x94
90021e26:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021e28:	eeb0 3a67 	vmov.f32	s6, s15
90021e2c:	fb92 f3f3 	sdiv	r3, r2, r3
90021e30:	9326      	str	r3, [sp, #152]	; 0x98
90021e32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021e34:	9a15      	ldr	r2, [sp, #84]	; 0x54
90021e36:	3b01      	subs	r3, #1
90021e38:	930c      	str	r3, [sp, #48]	; 0x30
90021e3a:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021e3c:	bf08      	it	eq
90021e3e:	4613      	moveq	r3, r2
90021e40:	9309      	str	r3, [sp, #36]	; 0x24
90021e42:	e6a6      	b.n	90021b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90021e44:	2900      	cmp	r1, #0
90021e46:	f43f af10 	beq.w	90021c6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021e4a:	f819 3003 	ldrb.w	r3, [r9, r3]
90021e4e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021e52:	930f      	str	r3, [sp, #60]	; 0x3c
90021e54:	e709      	b.n	90021c6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021e56:	f112 0901 	adds.w	r9, r2, #1
90021e5a:	f53f af7d 	bmi.w	90021d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021e5e:	454b      	cmp	r3, r9
90021e60:	f6ff af7a 	blt.w	90021d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021e64:	f11c 0901 	adds.w	r9, ip, #1
90021e68:	f53f af76 	bmi.w	90021d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021e6c:	45ce      	cmp	lr, r9
90021e6e:	f6ff af73 	blt.w	90021d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021e72:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021e74:	b21b      	sxth	r3, r3
90021e76:	9202      	str	r2, [sp, #8]
90021e78:	fa0f f28e 	sxth.w	r2, lr
90021e7c:	9300      	str	r3, [sp, #0]
90021e7e:	4633      	mov	r3, r6
90021e80:	9201      	str	r2, [sp, #4]
90021e82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90021e84:	e9cd 1405 	strd	r1, r4, [sp, #20]
90021e88:	e9cd c003 	strd	ip, r0, [sp, #12]
90021e8c:	4639      	mov	r1, r7
90021e8e:	9816      	ldr	r0, [sp, #88]	; 0x58
90021e90:	f7ff fd8e 	bl	900219b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
90021e94:	e760      	b.n	90021d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021e96:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021e98:	ea4f 422a 	mov.w	r2, sl, asr #16
90021e9c:	1429      	asrs	r1, r5, #16
90021e9e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021ea0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90021ea4:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90021ea8:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021eac:	fb03 2101 	mla	r1, r3, r1, r2
90021eb0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90021eb2:	440a      	add	r2, r1
90021eb4:	5c61      	ldrb	r1, [r4, r1]
90021eb6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90021eba:	f1bc 0f00 	cmp.w	ip, #0
90021ebe:	f000 808c 	beq.w	90021fda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
90021ec2:	7857      	ldrb	r7, [r2, #1]
90021ec4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90021ec8:	9413      	str	r4, [sp, #76]	; 0x4c
90021eca:	b140      	cbz	r0, 90021ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021ecc:	18d7      	adds	r7, r2, r3
90021ece:	5cd3      	ldrb	r3, [r2, r3]
90021ed0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021ed4:	9310      	str	r3, [sp, #64]	; 0x40
90021ed6:	787b      	ldrb	r3, [r7, #1]
90021ed8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021edc:	9314      	str	r3, [sp, #80]	; 0x50
90021ede:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90021ee0:	fb1c f200 	smulbb	r2, ip, r0
90021ee4:	9c14      	ldr	r4, [sp, #80]	; 0x50
90021ee6:	f10e 3eff 	add.w	lr, lr, #4294967295
90021eea:	041f      	lsls	r7, r3, #16
90021eec:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021ef0:	10d2      	asrs	r2, r2, #3
90021ef2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
90021ef6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
90021efa:	431f      	orrs	r7, r3
90021efc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90021f00:	9317      	str	r3, [sp, #92]	; 0x5c
90021f02:	9b14      	ldr	r3, [sp, #80]	; 0x50
90021f04:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90021f06:	041b      	lsls	r3, r3, #16
90021f08:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021f0c:	ea43 030b 	orr.w	r3, r3, fp
90021f10:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90021f14:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90021f18:	4353      	muls	r3, r2
90021f1a:	fb04 3707 	mla	r7, r4, r7, r3
90021f1e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
90021f22:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021f24:	ea43 0b01 	orr.w	fp, r3, r1
90021f28:	f1c0 0110 	rsb	r1, r0, #16
90021f2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021f2e:	eba1 0c0c 	sub.w	ip, r1, ip
90021f32:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021f36:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90021f3a:	fb0c 770b 	mla	r7, ip, fp, r7
90021f3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021f42:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
90021f46:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90021f4a:	ea4c 0c0b 	orr.w	ip, ip, fp
90021f4e:	fb02 770c 	mla	r7, r2, ip, r7
90021f52:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90021f54:	0d79      	lsrs	r1, r7, #21
90021f56:	8812      	ldrh	r2, [r2, #0]
90021f58:	097f      	lsrs	r7, r7, #5
90021f5a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021f5e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90021f62:	430f      	orrs	r7, r1
90021f64:	1211      	asrs	r1, r2, #8
90021f66:	b2bb      	uxth	r3, r7
90021f68:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90021f6c:	10d7      	asrs	r7, r2, #3
90021f6e:	fb11 f104 	smulbb	r1, r1, r4
90021f72:	1218      	asrs	r0, r3, #8
90021f74:	00d2      	lsls	r2, r2, #3
90021f76:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90021f7a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90021f7e:	fb17 f704 	smulbb	r7, r7, r4
90021f82:	b2d2      	uxtb	r2, r2
90021f84:	fb00 1009 	mla	r0, r0, r9, r1
90021f88:	10d9      	asrs	r1, r3, #3
90021f8a:	fb12 f204 	smulbb	r2, r2, r4
90021f8e:	00db      	lsls	r3, r3, #3
90021f90:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90021f94:	b280      	uxth	r0, r0
90021f96:	b2db      	uxtb	r3, r3
90021f98:	fb01 7109 	mla	r1, r1, r9, r7
90021f9c:	fb03 2309 	mla	r3, r3, r9, r2
90021fa0:	1c42      	adds	r2, r0, #1
90021fa2:	b289      	uxth	r1, r1
90021fa4:	b29b      	uxth	r3, r3
90021fa6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90021faa:	1c4f      	adds	r7, r1, #1
90021fac:	1c5a      	adds	r2, r3, #1
90021fae:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90021fb2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90021fb6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90021fba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021fbc:	0949      	lsrs	r1, r1, #5
90021fbe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021fc2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021fc6:	4310      	orrs	r0, r2
90021fc8:	4308      	orrs	r0, r1
90021fca:	f823 0b02 	strh.w	r0, [r3], #2
90021fce:	930e      	str	r3, [sp, #56]	; 0x38
90021fd0:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021fd2:	449a      	add	sl, r3
90021fd4:	9b26      	ldr	r3, [sp, #152]	; 0x98
90021fd6:	441d      	add	r5, r3
90021fd8:	e6ed      	b.n	90021db6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90021fda:	2800      	cmp	r0, #0
90021fdc:	f43f af7f 	beq.w	90021ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021fe0:	5cd3      	ldrb	r3, [r2, r3]
90021fe2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021fe6:	9310      	str	r3, [sp, #64]	; 0x40
90021fe8:	e779      	b.n	90021ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021fea:	b019      	add	sp, #100	; 0x64
90021fec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90021ff0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90021ff4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
90021ff8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90021ffc:	f1b8 0f00 	cmp.w	r8, #0
90022000:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
90022004:	fb08 470e 	mla	r7, r8, lr, r4
90022008:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
9002200c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90022010:	eb02 0907 	add.w	r9, r2, r7
90022014:	8808      	ldrh	r0, [r1, #0]
90022016:	db67      	blt.n	900220e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90022018:	45c2      	cmp	sl, r8
9002201a:	dd65      	ble.n	900220e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9002201c:	2c00      	cmp	r4, #0
9002201e:	db61      	blt.n	900220e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90022020:	45a6      	cmp	lr, r4
90022022:	dd5f      	ble.n	900220e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90022024:	5dd2      	ldrb	r2, [r2, r7]
90022026:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9002202a:	1c62      	adds	r2, r4, #1
9002202c:	d45f      	bmi.n	900220ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002202e:	4596      	cmp	lr, r2
90022030:	dd5d      	ble.n	900220ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90022032:	2d00      	cmp	r5, #0
90022034:	d05b      	beq.n	900220ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90022036:	f899 2001 	ldrb.w	r2, [r9, #1]
9002203a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9002203e:	f118 0801 	adds.w	r8, r8, #1
90022042:	d458      	bmi.n	900220f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022044:	45c2      	cmp	sl, r8
90022046:	dd56      	ble.n	900220f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022048:	2e00      	cmp	r6, #0
9002204a:	d054      	beq.n	900220f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9002204c:	2c00      	cmp	r4, #0
9002204e:	db50      	blt.n	900220f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90022050:	45a6      	cmp	lr, r4
90022052:	dd4e      	ble.n	900220f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90022054:	f819 200e 	ldrb.w	r2, [r9, lr]
90022058:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
9002205c:	3401      	adds	r4, #1
9002205e:	d407      	bmi.n	90022070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90022060:	45a6      	cmp	lr, r4
90022062:	dd05      	ble.n	90022070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90022064:	b125      	cbz	r5, 90022070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90022066:	44ce      	add	lr, r9
90022068:	f89e 0001 	ldrb.w	r0, [lr, #1]
9002206c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90022070:	fb15 f406 	smulbb	r4, r5, r6
90022074:	ea4f 430c 	mov.w	r3, ip, lsl #16
90022078:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9002207c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022080:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022084:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90022088:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9002208c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90022090:	ea43 0c0c 	orr.w	ip, r3, ip
90022094:	f1c6 0310 	rsb	r3, r6, #16
90022098:	ea4e 0707 	orr.w	r7, lr, r7
9002209c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900220a0:	1b5b      	subs	r3, r3, r5
900220a2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900220a6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900220aa:	437d      	muls	r5, r7
900220ac:	fb03 5c0c 	mla	ip, r3, ip, r5
900220b0:	0403      	lsls	r3, r0, #16
900220b2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900220b6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900220ba:	4318      	orrs	r0, r3
900220bc:	0413      	lsls	r3, r2, #16
900220be:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900220c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900220c6:	fb04 c000 	mla	r0, r4, r0, ip
900220ca:	4313      	orrs	r3, r2
900220cc:	fb06 0003 	mla	r0, r6, r3, r0
900220d0:	0d43      	lsrs	r3, r0, #21
900220d2:	0940      	lsrs	r0, r0, #5
900220d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900220d8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900220dc:	4318      	orrs	r0, r3
900220de:	8008      	strh	r0, [r1, #0]
900220e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900220e4:	4684      	mov	ip, r0
900220e6:	e7a0      	b.n	9002202a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
900220e8:	4607      	mov	r7, r0
900220ea:	4684      	mov	ip, r0
900220ec:	e7a7      	b.n	9002203e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900220ee:	4607      	mov	r7, r0
900220f0:	e7a5      	b.n	9002203e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900220f2:	4602      	mov	r2, r0
900220f4:	e7b2      	b.n	9002205c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
900220f6:	4602      	mov	r2, r0
900220f8:	e7ba      	b.n	90022070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

900220fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900220fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900220fe:	b093      	sub	sp, #76	; 0x4c
90022100:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90022104:	920f      	str	r2, [sp, #60]	; 0x3c
90022106:	9a21      	ldr	r2, [sp, #132]	; 0x84
90022108:	9010      	str	r0, [sp, #64]	; 0x40
9002210a:	9108      	str	r1, [sp, #32]
9002210c:	6850      	ldr	r0, [r2, #4]
9002210e:	9306      	str	r3, [sp, #24]
90022110:	6812      	ldr	r2, [r2, #0]
90022112:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90022116:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
9002211a:	fb00 1303 	mla	r3, r0, r3, r1
9002211e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90022122:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022124:	681b      	ldr	r3, [r3, #0]
90022126:	9307      	str	r3, [sp, #28]
90022128:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002212a:	685f      	ldr	r7, [r3, #4]
9002212c:	3704      	adds	r7, #4
9002212e:	9b08      	ldr	r3, [sp, #32]
90022130:	2b00      	cmp	r3, #0
90022132:	dc03      	bgt.n	9002213c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90022134:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90022136:	2b00      	cmp	r3, #0
90022138:	f340 81b2 	ble.w	900224a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9002213c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002213e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022142:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022146:	1e48      	subs	r0, r1, #1
90022148:	f102 3cff 	add.w	ip, r2, #4294967295
9002214c:	9b06      	ldr	r3, [sp, #24]
9002214e:	2b00      	cmp	r3, #0
90022150:	f340 80a9 	ble.w	900222a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022154:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022158:	ea4f 4326 	mov.w	r3, r6, asr #16
9002215c:	d406      	bmi.n	9002216c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002215e:	4586      	cmp	lr, r0
90022160:	da04      	bge.n	9002216c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90022162:	2b00      	cmp	r3, #0
90022164:	db02      	blt.n	9002216c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90022166:	4563      	cmp	r3, ip
90022168:	f2c0 809e 	blt.w	900222a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
9002216c:	f11e 0e01 	adds.w	lr, lr, #1
90022170:	f100 808f 	bmi.w	90022292 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022174:	4571      	cmp	r1, lr
90022176:	f2c0 808c 	blt.w	90022292 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002217a:	3301      	adds	r3, #1
9002217c:	f100 8089 	bmi.w	90022292 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022180:	429a      	cmp	r2, r3
90022182:	f2c0 8086 	blt.w	90022292 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022186:	f8dd b018 	ldr.w	fp, [sp, #24]
9002218a:	46c8      	mov	r8, r9
9002218c:	f1bb 0f00 	cmp.w	fp, #0
90022190:	f340 80a6 	ble.w	900222e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90022194:	9a24      	ldr	r2, [sp, #144]	; 0x90
90022196:	ea4f 4c26 	mov.w	ip, r6, asr #16
9002219a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002219c:	f3c4 3003 	ubfx	r0, r4, #12, #4
900221a0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900221a4:	1422      	asrs	r2, r4, #16
900221a6:	f3c6 3103 	ubfx	r1, r6, #12, #4
900221aa:	689b      	ldr	r3, [r3, #8]
900221ac:	f100 80e3 	bmi.w	90022376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900221b0:	f103 3aff 	add.w	sl, r3, #4294967295
900221b4:	4552      	cmp	r2, sl
900221b6:	f280 80de 	bge.w	90022376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900221ba:	f1bc 0f00 	cmp.w	ip, #0
900221be:	f2c0 80da 	blt.w	90022376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900221c2:	f10e 3aff 	add.w	sl, lr, #4294967295
900221c6:	45d4      	cmp	ip, sl
900221c8:	f280 80d5 	bge.w	90022376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900221cc:	b21b      	sxth	r3, r3
900221ce:	9d07      	ldr	r5, [sp, #28]
900221d0:	fb0c 2203 	mla	r2, ip, r3, r2
900221d4:	eb05 0a02 	add.w	sl, r5, r2
900221d8:	5caa      	ldrb	r2, [r5, r2]
900221da:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900221de:	2800      	cmp	r0, #0
900221e0:	f000 80c0 	beq.w	90022364 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
900221e4:	f89a 2001 	ldrb.w	r2, [sl, #1]
900221e8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900221ec:	920b      	str	r2, [sp, #44]	; 0x2c
900221ee:	b151      	cbz	r1, 90022206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900221f0:	eb0a 0203 	add.w	r2, sl, r3
900221f4:	f81a 3003 	ldrb.w	r3, [sl, r3]
900221f8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900221fc:	9309      	str	r3, [sp, #36]	; 0x24
900221fe:	7853      	ldrb	r3, [r2, #1]
90022200:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022204:	930c      	str	r3, [sp, #48]	; 0x30
90022206:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022208:	fb10 f201 	smulbb	r2, r0, r1
9002220c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002220e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90022212:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022216:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002221a:	10d2      	asrs	r2, r2, #3
9002221c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022220:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90022224:	ea4c 0c03 	orr.w	ip, ip, r3
90022228:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002222a:	041b      	lsls	r3, r3, #16
9002222c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022230:	432b      	orrs	r3, r5
90022232:	4353      	muls	r3, r2
90022234:	fb0a 330c 	mla	r3, sl, ip, r3
90022238:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9002223c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90022240:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022244:	ea4c 0e0e 	orr.w	lr, ip, lr
90022248:	f1c1 0c10 	rsb	ip, r1, #16
9002224c:	ebac 0c00 	sub.w	ip, ip, r0
90022250:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90022254:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90022258:	fb0c 3c0e 	mla	ip, ip, lr, r3
9002225c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002225e:	0418      	lsls	r0, r3, #16
90022260:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022264:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022268:	4318      	orrs	r0, r3
9002226a:	fb02 c200 	mla	r2, r2, r0, ip
9002226e:	0d53      	lsrs	r3, r2, #21
90022270:	0952      	lsrs	r2, r2, #5
90022272:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022276:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002227a:	431a      	orrs	r2, r3
9002227c:	f8a8 2000 	strh.w	r2, [r8]
90022280:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022282:	f108 0802 	add.w	r8, r8, #2
90022286:	f10b 3bff 	add.w	fp, fp, #4294967295
9002228a:	441c      	add	r4, r3
9002228c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002228e:	441e      	add	r6, r3
90022290:	e77c      	b.n	9002218c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022292:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022294:	f109 0902 	add.w	r9, r9, #2
90022298:	441c      	add	r4, r3
9002229a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002229c:	441e      	add	r6, r3
9002229e:	9b06      	ldr	r3, [sp, #24]
900222a0:	3b01      	subs	r3, #1
900222a2:	9306      	str	r3, [sp, #24]
900222a4:	e752      	b.n	9002214c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900222a6:	d020      	beq.n	900222ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900222a8:	9b06      	ldr	r3, [sp, #24]
900222aa:	981f      	ldr	r0, [sp, #124]	; 0x7c
900222ac:	3b01      	subs	r3, #1
900222ae:	fb00 4003 	mla	r0, r0, r3, r4
900222b2:	1400      	asrs	r0, r0, #16
900222b4:	f53f af67 	bmi.w	90022186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900222b8:	3901      	subs	r1, #1
900222ba:	4288      	cmp	r0, r1
900222bc:	f6bf af63 	bge.w	90022186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900222c0:	9920      	ldr	r1, [sp, #128]	; 0x80
900222c2:	fb01 6303 	mla	r3, r1, r3, r6
900222c6:	141b      	asrs	r3, r3, #16
900222c8:	f53f af5d 	bmi.w	90022186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900222cc:	3a01      	subs	r2, #1
900222ce:	4293      	cmp	r3, r2
900222d0:	f6bf af59 	bge.w	90022186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900222d4:	f8dd 8018 	ldr.w	r8, [sp, #24]
900222d8:	46ca      	mov	sl, r9
900222da:	f1b8 0f00 	cmp.w	r8, #0
900222de:	dc67      	bgt.n	900223b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900222e0:	9b06      	ldr	r3, [sp, #24]
900222e2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900222e6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900222ea:	9b08      	ldr	r3, [sp, #32]
900222ec:	2b00      	cmp	r3, #0
900222ee:	f340 80d7 	ble.w	900224a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
900222f2:	ee30 0a04 	vadd.f32	s0, s0, s8
900222f6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900222f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900222fc:	eeb0 6a62 	vmov.f32	s12, s5
90022300:	eec6 7a80 	vdiv.f32	s15, s13, s0
90022304:	ee31 1a05 	vadd.f32	s2, s2, s10
90022308:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9002230c:	ee16 4a10 	vmov	r4, s12
90022310:	eeb0 6a43 	vmov.f32	s12, s6
90022314:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90022318:	ee16 6a10 	vmov	r6, s12
9002231c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022320:	ee61 7a27 	vmul.f32	s15, s2, s15
90022324:	ee77 2a62 	vsub.f32	s5, s14, s5
90022328:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002232c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022330:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022334:	ee12 2a90 	vmov	r2, s5
90022338:	eef0 2a47 	vmov.f32	s5, s14
9002233c:	fb92 f3f3 	sdiv	r3, r2, r3
90022340:	ee13 2a10 	vmov	r2, s6
90022344:	931f      	str	r3, [sp, #124]	; 0x7c
90022346:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022348:	eeb0 3a67 	vmov.f32	s6, s15
9002234c:	fb92 f3f3 	sdiv	r3, r2, r3
90022350:	9320      	str	r3, [sp, #128]	; 0x80
90022352:	9b08      	ldr	r3, [sp, #32]
90022354:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90022356:	3b01      	subs	r3, #1
90022358:	9308      	str	r3, [sp, #32]
9002235a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002235c:	bf08      	it	eq
9002235e:	4613      	moveq	r3, r2
90022360:	9306      	str	r3, [sp, #24]
90022362:	e6e4      	b.n	9002212e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90022364:	2900      	cmp	r1, #0
90022366:	f43f af4e 	beq.w	90022206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002236a:	f81a 3003 	ldrb.w	r3, [sl, r3]
9002236e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022372:	9309      	str	r3, [sp, #36]	; 0x24
90022374:	e747      	b.n	90022206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90022376:	f112 0a01 	adds.w	sl, r2, #1
9002237a:	d481      	bmi.n	90022280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002237c:	4553      	cmp	r3, sl
9002237e:	f6ff af7f 	blt.w	90022280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022382:	f11c 0a01 	adds.w	sl, ip, #1
90022386:	f53f af7b 	bmi.w	90022280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002238a:	45d6      	cmp	lr, sl
9002238c:	f6ff af78 	blt.w	90022280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022390:	b21b      	sxth	r3, r3
90022392:	e9cd 2c02 	strd	r2, ip, [sp, #8]
90022396:	fa0f f28e 	sxth.w	r2, lr
9002239a:	9300      	str	r3, [sp, #0]
9002239c:	463b      	mov	r3, r7
9002239e:	9201      	str	r2, [sp, #4]
900223a0:	9a07      	ldr	r2, [sp, #28]
900223a2:	e9cd 0104 	strd	r0, r1, [sp, #16]
900223a6:	4641      	mov	r1, r8
900223a8:	9810      	ldr	r0, [sp, #64]	; 0x40
900223aa:	f7ff fe21 	bl	90021ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900223ae:	e767      	b.n	90022280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900223b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
900223b2:	1422      	asrs	r2, r4, #16
900223b4:	1431      	asrs	r1, r6, #16
900223b6:	9d07      	ldr	r5, [sp, #28]
900223b8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900223bc:	f3c4 3e03 	ubfx	lr, r4, #12, #4
900223c0:	f3c6 3003 	ubfx	r0, r6, #12, #4
900223c4:	fb03 2101 	mla	r1, r3, r1, r2
900223c8:	9a07      	ldr	r2, [sp, #28]
900223ca:	440a      	add	r2, r1
900223cc:	5c69      	ldrb	r1, [r5, r1]
900223ce:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
900223d2:	f1be 0f00 	cmp.w	lr, #0
900223d6:	d05c      	beq.n	90022492 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
900223d8:	f892 c001 	ldrb.w	ip, [r2, #1]
900223dc:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
900223e0:	950d      	str	r5, [sp, #52]	; 0x34
900223e2:	b150      	cbz	r0, 900223fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900223e4:	eb02 0c03 	add.w	ip, r2, r3
900223e8:	5cd3      	ldrb	r3, [r2, r3]
900223ea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900223ee:	930a      	str	r3, [sp, #40]	; 0x28
900223f0:	f89c 3001 	ldrb.w	r3, [ip, #1]
900223f4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900223f8:	930e      	str	r3, [sp, #56]	; 0x38
900223fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900223fc:	fb1e f200 	smulbb	r2, lr, r0
90022400:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90022402:	f108 38ff 	add.w	r8, r8, #4294967295
90022406:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002240a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002240e:	10d2      	asrs	r2, r2, #3
90022410:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
90022414:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022418:	ea4c 0c03 	orr.w	ip, ip, r3
9002241c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90022420:	9311      	str	r3, [sp, #68]	; 0x44
90022422:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022424:	9d11      	ldr	r5, [sp, #68]	; 0x44
90022426:	041b      	lsls	r3, r3, #16
90022428:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9002242c:	ea43 030b 	orr.w	r3, r3, fp
90022430:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022434:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022438:	4353      	muls	r3, r2
9002243a:	fb05 3c0c 	mla	ip, r5, ip, r3
9002243e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
90022442:	ea43 0b01 	orr.w	fp, r3, r1
90022446:	f1c0 0110 	rsb	r1, r0, #16
9002244a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002244c:	eba1 0e0e 	sub.w	lr, r1, lr
90022450:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90022454:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90022458:	fb0e cc0b 	mla	ip, lr, fp, ip
9002245c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90022460:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
90022464:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022468:	ea4b 0e0e 	orr.w	lr, fp, lr
9002246c:	fb02 cc0e 	mla	ip, r2, lr, ip
90022470:	ea4f 535c 	mov.w	r3, ip, lsr #21
90022474:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90022478:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002247c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022480:	ea43 0c0c 	orr.w	ip, r3, ip
90022484:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022486:	441c      	add	r4, r3
90022488:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002248a:	f82a cb02 	strh.w	ip, [sl], #2
9002248e:	441e      	add	r6, r3
90022490:	e723      	b.n	900222da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90022492:	2800      	cmp	r0, #0
90022494:	d0b1      	beq.n	900223fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022496:	5cd3      	ldrb	r3, [r2, r3]
90022498:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002249c:	930a      	str	r3, [sp, #40]	; 0x28
9002249e:	e7ac      	b.n	900223fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900224a0:	b013      	add	sp, #76	; 0x4c
900224a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900224a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
900224a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900224aa:	880d      	ldrh	r5, [r1, #0]
900224ac:	b087      	sub	sp, #28
900224ae:	10ef      	asrs	r7, r5, #3
900224b0:	9103      	str	r1, [sp, #12]
900224b2:	ea4f 2a25 	mov.w	sl, r5, asr #8
900224b6:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
900224ba:	00ed      	lsls	r5, r5, #3
900224bc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900224c0:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
900224c4:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
900224c8:	b2ed      	uxtb	r5, r5
900224ca:	9701      	str	r7, [sp, #4]
900224cc:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
900224d0:	9502      	str	r5, [sp, #8]
900224d2:	9d01      	ldr	r5, [sp, #4]
900224d4:	9902      	ldr	r1, [sp, #8]
900224d6:	022d      	lsls	r5, r5, #8
900224d8:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
900224dc:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
900224e0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
900224e4:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
900224e8:	430d      	orrs	r5, r1
900224ea:	fb06 0709 	mla	r7, r6, r9, r0
900224ee:	2e00      	cmp	r6, #0
900224f0:	9505      	str	r5, [sp, #20]
900224f2:	eb02 0c07 	add.w	ip, r2, r7
900224f6:	f2c0 80b6 	blt.w	90022666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
900224fa:	45b3      	cmp	fp, r6
900224fc:	f340 80b3 	ble.w	90022666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022500:	2800      	cmp	r0, #0
90022502:	f2c0 80ae 	blt.w	90022662 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90022506:	4581      	cmp	r9, r0
90022508:	f340 80ab 	ble.w	90022662 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9002250c:	5dd7      	ldrb	r7, [r2, r7]
9002250e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022512:	441f      	add	r7, r3
90022514:	1c42      	adds	r2, r0, #1
90022516:	f100 80a9 	bmi.w	9002266c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002251a:	4591      	cmp	r9, r2
9002251c:	f340 80a6 	ble.w	9002266c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022520:	2c00      	cmp	r4, #0
90022522:	f000 80a3 	beq.w	9002266c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022526:	f89c 5001 	ldrb.w	r5, [ip, #1]
9002252a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9002252e:	441d      	add	r5, r3
90022530:	3601      	adds	r6, #1
90022532:	f100 809f 	bmi.w	90022674 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022536:	45b3      	cmp	fp, r6
90022538:	f340 809c 	ble.w	90022674 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9002253c:	f1be 0f00 	cmp.w	lr, #0
90022540:	f000 8098 	beq.w	90022674 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022544:	2800      	cmp	r0, #0
90022546:	f2c0 8093 	blt.w	90022670 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9002254a:	4581      	cmp	r9, r0
9002254c:	f340 8090 	ble.w	90022670 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90022550:	f81c 6009 	ldrb.w	r6, [ip, r9]
90022554:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022558:	441e      	add	r6, r3
9002255a:	3001      	adds	r0, #1
9002255c:	f100 808d 	bmi.w	9002267a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022560:	4581      	cmp	r9, r0
90022562:	f340 808a 	ble.w	9002267a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022566:	2c00      	cmp	r4, #0
90022568:	f000 8087 	beq.w	9002267a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9002256c:	44e1      	add	r9, ip
9002256e:	f899 2001 	ldrb.w	r2, [r9, #1]
90022572:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022576:	4413      	add	r3, r2
90022578:	b2a4      	uxth	r4, r4
9002257a:	f897 c002 	ldrb.w	ip, [r7, #2]
9002257e:	fa1f fe8e 	uxth.w	lr, lr
90022582:	9901      	ldr	r1, [sp, #4]
90022584:	fb04 fb0e 	mul.w	fp, r4, lr
90022588:	0124      	lsls	r4, r4, #4
9002258a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
9002258e:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
90022592:	eba4 040b 	sub.w	r4, r4, fp
90022596:	fa1f f08e 	uxth.w	r0, lr
9002259a:	b2a2      	uxth	r2, r4
9002259c:	78ac      	ldrb	r4, [r5, #2]
9002259e:	eba9 0900 	sub.w	r9, r9, r0
900225a2:	fa1f fe88 	uxth.w	lr, r8
900225a6:	4354      	muls	r4, r2
900225a8:	ea6f 0808 	mvn.w	r8, r8
900225ac:	fa1f f989 	uxth.w	r9, r9
900225b0:	fa5f f888 	uxtb.w	r8, r8
900225b4:	fb09 440c 	mla	r4, r9, ip, r4
900225b8:	f896 c002 	ldrb.w	ip, [r6, #2]
900225bc:	fb1a fa08 	smulbb	sl, sl, r8
900225c0:	fb00 440c 	mla	r4, r0, ip, r4
900225c4:	f893 c002 	ldrb.w	ip, [r3, #2]
900225c8:	fb0b 4c0c 	mla	ip, fp, ip, r4
900225cc:	787c      	ldrb	r4, [r7, #1]
900225ce:	783f      	ldrb	r7, [r7, #0]
900225d0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900225d4:	fb0c ac0e 	mla	ip, ip, lr, sl
900225d8:	f895 a001 	ldrb.w	sl, [r5, #1]
900225dc:	782d      	ldrb	r5, [r5, #0]
900225de:	fb02 fa0a 	mul.w	sl, r2, sl
900225e2:	fa1f fc8c 	uxth.w	ip, ip
900225e6:	436a      	muls	r2, r5
900225e8:	7835      	ldrb	r5, [r6, #0]
900225ea:	fb09 aa04 	mla	sl, r9, r4, sl
900225ee:	7874      	ldrb	r4, [r6, #1]
900225f0:	fb09 2207 	mla	r2, r9, r7, r2
900225f4:	fb00 aa04 	mla	sl, r0, r4, sl
900225f8:	785c      	ldrb	r4, [r3, #1]
900225fa:	fb00 2005 	mla	r0, r0, r5, r2
900225fe:	781b      	ldrb	r3, [r3, #0]
90022600:	fb0b a404 	mla	r4, fp, r4, sl
90022604:	fb11 fa08 	smulbb	sl, r1, r8
90022608:	fb0b 0b03 	mla	fp, fp, r3, r0
9002260c:	9b02      	ldr	r3, [sp, #8]
9002260e:	f3c4 2407 	ubfx	r4, r4, #8, #8
90022612:	fb13 f808 	smulbb	r8, r3, r8
90022616:	f3cb 2b07 	ubfx	fp, fp, #8, #8
9002261a:	fb04 a40e 	mla	r4, r4, lr, sl
9002261e:	f10c 0301 	add.w	r3, ip, #1
90022622:	fb0b 8e0e 	mla	lr, fp, lr, r8
90022626:	b2a4      	uxth	r4, r4
90022628:	fa1f fe8e 	uxth.w	lr, lr
9002262c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90022630:	f104 0a01 	add.w	sl, r4, #1
90022634:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
90022638:	f10e 0c01 	add.w	ip, lr, #1
9002263c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90022640:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90022644:	0964      	lsrs	r4, r4, #5
90022646:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002264a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002264e:	ea4c 0c03 	orr.w	ip, ip, r3
90022652:	9b03      	ldr	r3, [sp, #12]
90022654:	ea4c 0c04 	orr.w	ip, ip, r4
90022658:	f8a3 c000 	strh.w	ip, [r3]
9002265c:	b007      	add	sp, #28
9002265e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022662:	af05      	add	r7, sp, #20
90022664:	e756      	b.n	90022514 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90022666:	ad05      	add	r5, sp, #20
90022668:	462f      	mov	r7, r5
9002266a:	e761      	b.n	90022530 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9002266c:	ad05      	add	r5, sp, #20
9002266e:	e75f      	b.n	90022530 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022670:	ae05      	add	r6, sp, #20
90022672:	e772      	b.n	9002255a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90022674:	ab05      	add	r3, sp, #20
90022676:	461e      	mov	r6, r3
90022678:	e77e      	b.n	90022578 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
9002267a:	ab05      	add	r3, sp, #20
9002267c:	e77c      	b.n	90022578 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

9002267e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002267e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022682:	b095      	sub	sp, #84	; 0x54
90022684:	9212      	str	r2, [sp, #72]	; 0x48
90022686:	9309      	str	r3, [sp, #36]	; 0x24
90022688:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002268a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
9002268e:	9013      	str	r0, [sp, #76]	; 0x4c
90022690:	930f      	str	r3, [sp, #60]	; 0x3c
90022692:	6850      	ldr	r0, [r2, #4]
90022694:	910e      	str	r1, [sp, #56]	; 0x38
90022696:	6812      	ldr	r2, [r2, #0]
90022698:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
9002269c:	fb00 1303 	mla	r3, r0, r3, r1
900226a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900226a4:	930a      	str	r3, [sp, #40]	; 0x28
900226a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
900226a8:	681b      	ldr	r3, [r3, #0]
900226aa:	930d      	str	r3, [sp, #52]	; 0x34
900226ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
900226ae:	685c      	ldr	r4, [r3, #4]
900226b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900226b2:	3404      	adds	r4, #4
900226b4:	43db      	mvns	r3, r3
900226b6:	b2db      	uxtb	r3, r3
900226b8:	930b      	str	r3, [sp, #44]	; 0x2c
900226ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900226bc:	2b00      	cmp	r3, #0
900226be:	dc03      	bgt.n	900226c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900226c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
900226c2:	2b00      	cmp	r3, #0
900226c4:	f340 8255 	ble.w	90022b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
900226c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
900226ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900226ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900226d2:	1e48      	subs	r0, r1, #1
900226d4:	1e55      	subs	r5, r2, #1
900226d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900226d8:	2b00      	cmp	r3, #0
900226da:	f340 80f9 	ble.w	900228d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
900226de:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
900226e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900226e2:	1436      	asrs	r6, r6, #16
900226e4:	ea4f 4323 	mov.w	r3, r3, asr #16
900226e8:	d406      	bmi.n	900226f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900226ea:	4286      	cmp	r6, r0
900226ec:	da04      	bge.n	900226f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900226ee:	2b00      	cmp	r3, #0
900226f0:	db02      	blt.n	900226f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900226f2:	42ab      	cmp	r3, r5
900226f4:	f2c0 80ed 	blt.w	900228d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
900226f8:	3601      	adds	r6, #1
900226fa:	f100 80da 	bmi.w	900228b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900226fe:	42b1      	cmp	r1, r6
90022700:	f2c0 80d7 	blt.w	900228b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022704:	3301      	adds	r3, #1
90022706:	f100 80d4 	bmi.w	900228b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002270a:	429a      	cmp	r2, r3
9002270c:	f2c0 80d1 	blt.w	900228b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022710:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022712:	9311      	str	r3, [sp, #68]	; 0x44
90022714:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022716:	930c      	str	r3, [sp, #48]	; 0x30
90022718:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002271a:	2b00      	cmp	r3, #0
9002271c:	f340 80fa 	ble.w	90022914 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90022720:	9826      	ldr	r0, [sp, #152]	; 0x98
90022722:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022724:	9a20      	ldr	r2, [sp, #128]	; 0x80
90022726:	68c6      	ldr	r6, [r0, #12]
90022728:	141d      	asrs	r5, r3, #16
9002272a:	981f      	ldr	r0, [sp, #124]	; 0x7c
9002272c:	f3c2 3103 	ubfx	r1, r2, #12, #4
90022730:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022732:	9a26      	ldr	r2, [sp, #152]	; 0x98
90022734:	1400      	asrs	r0, r0, #16
90022736:	f3c3 3303 	ubfx	r3, r3, #12, #4
9002273a:	6892      	ldr	r2, [r2, #8]
9002273c:	f100 813e 	bmi.w	900229bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022740:	1e57      	subs	r7, r2, #1
90022742:	42b8      	cmp	r0, r7
90022744:	f280 813a 	bge.w	900229bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022748:	2d00      	cmp	r5, #0
9002274a:	f2c0 8137 	blt.w	900229bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002274e:	1e77      	subs	r7, r6, #1
90022750:	42bd      	cmp	r5, r7
90022752:	f280 8133 	bge.w	900229bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022756:	b212      	sxth	r2, r2
90022758:	fb05 0002 	mla	r0, r5, r2, r0
9002275c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002275e:	f815 a000 	ldrb.w	sl, [r5, r0]
90022762:	182e      	adds	r6, r5, r0
90022764:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90022768:	eb04 050a 	add.w	r5, r4, sl
9002276c:	2b00      	cmp	r3, #0
9002276e:	f000 8117 	beq.w	900229a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90022772:	f896 c001 	ldrb.w	ip, [r6, #1]
90022776:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9002277a:	44a4      	add	ip, r4
9002277c:	2900      	cmp	r1, #0
9002277e:	f000 8117 	beq.w	900229b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90022782:	18b0      	adds	r0, r6, r2
90022784:	5cb2      	ldrb	r2, [r6, r2]
90022786:	7840      	ldrb	r0, [r0, #1]
90022788:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002278c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022790:	4422      	add	r2, r4
90022792:	4420      	add	r0, r4
90022794:	b29b      	uxth	r3, r3
90022796:	f89c 7002 	ldrb.w	r7, [ip, #2]
9002279a:	b289      	uxth	r1, r1
9002279c:	f895 b002 	ldrb.w	fp, [r5, #2]
900227a0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
900227a2:	fb03 f901 	mul.w	r9, r3, r1
900227a6:	011b      	lsls	r3, r3, #4
900227a8:	f8b6 e000 	ldrh.w	lr, [r6]
900227ac:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900227b0:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
900227b4:	eba3 0309 	sub.w	r3, r3, r9
900227b8:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
900227bc:	b289      	uxth	r1, r1
900227be:	f814 a00a 	ldrb.w	sl, [r4, sl]
900227c2:	b29b      	uxth	r3, r3
900227c4:	eba8 0801 	sub.w	r8, r8, r1
900227c8:	435f      	muls	r7, r3
900227ca:	fa1f f888 	uxth.w	r8, r8
900227ce:	9310      	str	r3, [sp, #64]	; 0x40
900227d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900227d2:	fb08 770b 	mla	r7, r8, fp, r7
900227d6:	f892 b002 	ldrb.w	fp, [r2, #2]
900227da:	fb01 770b 	mla	r7, r1, fp, r7
900227de:	f890 b002 	ldrb.w	fp, [r0, #2]
900227e2:	fb09 770b 	mla	r7, r9, fp, r7
900227e6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
900227ea:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
900227ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
900227f2:	fb1b fb03 	smulbb	fp, fp, r3
900227f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
900227f8:	fb07 b706 	mla	r7, r7, r6, fp
900227fc:	f895 b001 	ldrb.w	fp, [r5, #1]
90022800:	f89c 5001 	ldrb.w	r5, [ip, #1]
90022804:	f89c c000 	ldrb.w	ip, [ip]
90022808:	b2bf      	uxth	r7, r7
9002280a:	435d      	muls	r5, r3
9002280c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002280e:	fb08 550b 	mla	r5, r8, fp, r5
90022812:	f892 b001 	ldrb.w	fp, [r2, #1]
90022816:	fb01 550b 	mla	r5, r1, fp, r5
9002281a:	f890 b001 	ldrb.w	fp, [r0, #1]
9002281e:	fb09 550b 	mla	r5, r9, fp, r5
90022822:	ea4f 0bee 	mov.w	fp, lr, asr #3
90022826:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002282a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9002282e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90022832:	fa5f fe8e 	uxtb.w	lr, lr
90022836:	fb1b fb03 	smulbb	fp, fp, r3
9002283a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9002283c:	fb03 f30c 	mul.w	r3, r3, ip
90022840:	f892 c000 	ldrb.w	ip, [r2]
90022844:	fb05 b506 	mla	r5, r5, r6, fp
90022848:	fb08 330a 	mla	r3, r8, sl, r3
9002284c:	b2ad      	uxth	r5, r5
9002284e:	fb01 330c 	mla	r3, r1, ip, r3
90022852:	f890 c000 	ldrb.w	ip, [r0]
90022856:	f105 0b01 	add.w	fp, r5, #1
9002285a:	fb09 3c0c 	mla	ip, r9, ip, r3
9002285e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022860:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90022864:	fb1e fe03 	smulbb	lr, lr, r3
90022868:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9002286c:	1c7b      	adds	r3, r7, #1
9002286e:	096d      	lsrs	r5, r5, #5
90022870:	fb0c e606 	mla	r6, ip, r6, lr
90022874:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90022878:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002287c:	b2b6      	uxth	r6, r6
9002287e:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
90022882:	1c77      	adds	r7, r6, #1
90022884:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90022888:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002288c:	431f      	orrs	r7, r3
9002288e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022890:	433d      	orrs	r5, r7
90022892:	801d      	strh	r5, [r3, #0]
90022894:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022896:	9a21      	ldr	r2, [sp, #132]	; 0x84
90022898:	3302      	adds	r3, #2
9002289a:	930c      	str	r3, [sp, #48]	; 0x30
9002289c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002289e:	4413      	add	r3, r2
900228a0:	9a22      	ldr	r2, [sp, #136]	; 0x88
900228a2:	931f      	str	r3, [sp, #124]	; 0x7c
900228a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900228a6:	4413      	add	r3, r2
900228a8:	9320      	str	r3, [sp, #128]	; 0x80
900228aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
900228ac:	3b01      	subs	r3, #1
900228ae:	9311      	str	r3, [sp, #68]	; 0x44
900228b0:	e732      	b.n	90022718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900228b2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900228b4:	9e21      	ldr	r6, [sp, #132]	; 0x84
900228b6:	4433      	add	r3, r6
900228b8:	9e22      	ldr	r6, [sp, #136]	; 0x88
900228ba:	931f      	str	r3, [sp, #124]	; 0x7c
900228bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
900228be:	4433      	add	r3, r6
900228c0:	9320      	str	r3, [sp, #128]	; 0x80
900228c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900228c4:	3b01      	subs	r3, #1
900228c6:	9309      	str	r3, [sp, #36]	; 0x24
900228c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900228ca:	3302      	adds	r3, #2
900228cc:	930a      	str	r3, [sp, #40]	; 0x28
900228ce:	e702      	b.n	900226d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900228d0:	d027      	beq.n	90022922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
900228d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900228d4:	9821      	ldr	r0, [sp, #132]	; 0x84
900228d6:	3b01      	subs	r3, #1
900228d8:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
900228da:	fb00 5003 	mla	r0, r0, r3, r5
900228de:	1400      	asrs	r0, r0, #16
900228e0:	f53f af16 	bmi.w	90022710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900228e4:	3901      	subs	r1, #1
900228e6:	4288      	cmp	r0, r1
900228e8:	f6bf af12 	bge.w	90022710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900228ec:	9922      	ldr	r1, [sp, #136]	; 0x88
900228ee:	9820      	ldr	r0, [sp, #128]	; 0x80
900228f0:	fb01 0303 	mla	r3, r1, r3, r0
900228f4:	141b      	asrs	r3, r3, #16
900228f6:	f53f af0b 	bmi.w	90022710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900228fa:	3a01      	subs	r2, #1
900228fc:	4293      	cmp	r3, r2
900228fe:	f6bf af07 	bge.w	90022710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022902:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022904:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
90022908:	9311      	str	r3, [sp, #68]	; 0x44
9002290a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002290c:	930c      	str	r3, [sp, #48]	; 0x30
9002290e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022910:	2b00      	cmp	r3, #0
90022912:	dc70      	bgt.n	900229f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90022914:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022916:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90022918:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002291c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022920:	930a      	str	r3, [sp, #40]	; 0x28
90022922:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022924:	2b00      	cmp	r3, #0
90022926:	f340 8124 	ble.w	90022b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9002292a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002292e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022930:	ee30 0a04 	vadd.f32	s0, s0, s8
90022934:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022938:	eef0 6a62 	vmov.f32	s13, s5
9002293c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022940:	ee31 1a05 	vadd.f32	s2, s2, s10
90022944:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022948:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
9002294c:	eef0 6a43 	vmov.f32	s13, s6
90022950:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022954:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
90022958:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002295c:	ee61 7a27 	vmul.f32	s15, s2, s15
90022960:	ee77 2a62 	vsub.f32	s5, s14, s5
90022964:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022968:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002296c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022970:	ee12 2a90 	vmov	r2, s5
90022974:	eef0 2a47 	vmov.f32	s5, s14
90022978:	fb92 f3f3 	sdiv	r3, r2, r3
9002297c:	ee13 2a10 	vmov	r2, s6
90022980:	9321      	str	r3, [sp, #132]	; 0x84
90022982:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022984:	eeb0 3a67 	vmov.f32	s6, s15
90022988:	fb92 f3f3 	sdiv	r3, r2, r3
9002298c:	9322      	str	r3, [sp, #136]	; 0x88
9002298e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022990:	9a12      	ldr	r2, [sp, #72]	; 0x48
90022992:	3b01      	subs	r3, #1
90022994:	930e      	str	r3, [sp, #56]	; 0x38
90022996:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022998:	bf08      	it	eq
9002299a:	4613      	moveq	r3, r2
9002299c:	9309      	str	r3, [sp, #36]	; 0x24
9002299e:	e68c      	b.n	900226ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900229a0:	b149      	cbz	r1, 900229b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
900229a2:	5cb2      	ldrb	r2, [r6, r2]
900229a4:	4628      	mov	r0, r5
900229a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900229aa:	4422      	add	r2, r4
900229ac:	46ac      	mov	ip, r5
900229ae:	e6f1      	b.n	90022794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900229b0:	4628      	mov	r0, r5
900229b2:	462a      	mov	r2, r5
900229b4:	e6ee      	b.n	90022794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900229b6:	4628      	mov	r0, r5
900229b8:	462a      	mov	r2, r5
900229ba:	e7f7      	b.n	900229ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
900229bc:	1c47      	adds	r7, r0, #1
900229be:	f53f af69 	bmi.w	90022894 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900229c2:	42ba      	cmp	r2, r7
900229c4:	f6ff af66 	blt.w	90022894 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900229c8:	1c6f      	adds	r7, r5, #1
900229ca:	f53f af63 	bmi.w	90022894 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900229ce:	42be      	cmp	r6, r7
900229d0:	f6ff af60 	blt.w	90022894 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900229d4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
900229d6:	b236      	sxth	r6, r6
900229d8:	b212      	sxth	r2, r2
900229da:	9002      	str	r0, [sp, #8]
900229dc:	9601      	str	r6, [sp, #4]
900229de:	9200      	str	r2, [sp, #0]
900229e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
900229e2:	e9cd 1705 	strd	r1, r7, [sp, #20]
900229e6:	e9cd 5303 	strd	r5, r3, [sp, #12]
900229ea:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
900229ee:	4623      	mov	r3, r4
900229f0:	f7ff fd59 	bl	900224a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
900229f4:	e74e      	b.n	90022894 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900229f6:	9a20      	ldr	r2, [sp, #128]	; 0x80
900229f8:	9820      	ldr	r0, [sp, #128]	; 0x80
900229fa:	f3c2 3103 	ubfx	r1, r2, #12, #4
900229fe:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
90022a00:	9a26      	ldr	r2, [sp, #152]	; 0x98
90022a02:	1400      	asrs	r0, r0, #16
90022a04:	142d      	asrs	r5, r5, #16
90022a06:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022a08:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90022a0c:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022a10:	fb02 5000 	mla	r0, r2, r0, r5
90022a14:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90022a16:	f815 9000 	ldrb.w	r9, [r5, r0]
90022a1a:	182e      	adds	r6, r5, r0
90022a1c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90022a20:	eb04 0509 	add.w	r5, r4, r9
90022a24:	2b00      	cmp	r3, #0
90022a26:	f000 8096 	beq.w	90022b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90022a2a:	7877      	ldrb	r7, [r6, #1]
90022a2c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022a30:	4427      	add	r7, r4
90022a32:	2900      	cmp	r1, #0
90022a34:	f000 8097 	beq.w	90022b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90022a38:	18b0      	adds	r0, r6, r2
90022a3a:	5cb2      	ldrb	r2, [r6, r2]
90022a3c:	7840      	ldrb	r0, [r0, #1]
90022a3e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022a42:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022a46:	4422      	add	r2, r4
90022a48:	4420      	add	r0, r4
90022a4a:	b29b      	uxth	r3, r3
90022a4c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
90022a4e:	b289      	uxth	r1, r1
90022a50:	f895 b002 	ldrb.w	fp, [r5, #2]
90022a54:	f8b6 c000 	ldrh.w	ip, [r6]
90022a58:	fb03 f801 	mul.w	r8, r3, r1
90022a5c:	011b      	lsls	r3, r3, #4
90022a5e:	78be      	ldrb	r6, [r7, #2]
90022a60:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90022a64:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90022a68:	eba3 0308 	sub.w	r3, r3, r8
90022a6c:	f814 9009 	ldrb.w	r9, [r4, r9]
90022a70:	b289      	uxth	r1, r1
90022a72:	b29b      	uxth	r3, r3
90022a74:	ebae 0e01 	sub.w	lr, lr, r1
90022a78:	435e      	muls	r6, r3
90022a7a:	fa1f fe8e 	uxth.w	lr, lr
90022a7e:	9310      	str	r3, [sp, #64]	; 0x40
90022a80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022a82:	fb0e 660b 	mla	r6, lr, fp, r6
90022a86:	f892 b002 	ldrb.w	fp, [r2, #2]
90022a8a:	fb01 660b 	mla	r6, r1, fp, r6
90022a8e:	f890 b002 	ldrb.w	fp, [r0, #2]
90022a92:	fb08 660b 	mla	r6, r8, fp, r6
90022a96:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90022a9a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
90022a9e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022aa2:	fb1b fb03 	smulbb	fp, fp, r3
90022aa6:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022aa8:	fb06 b60a 	mla	r6, r6, sl, fp
90022aac:	f895 b001 	ldrb.w	fp, [r5, #1]
90022ab0:	787d      	ldrb	r5, [r7, #1]
90022ab2:	783f      	ldrb	r7, [r7, #0]
90022ab4:	b2b6      	uxth	r6, r6
90022ab6:	435d      	muls	r5, r3
90022ab8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022aba:	fb0e 550b 	mla	r5, lr, fp, r5
90022abe:	f892 b001 	ldrb.w	fp, [r2, #1]
90022ac2:	fb01 550b 	mla	r5, r1, fp, r5
90022ac6:	f890 b001 	ldrb.w	fp, [r0, #1]
90022aca:	fb08 550b 	mla	r5, r8, fp, r5
90022ace:	ea4f 0bec 	mov.w	fp, ip, asr #3
90022ad2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90022ad6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90022ada:	f3c5 2507 	ubfx	r5, r5, #8, #8
90022ade:	fa5f fc8c 	uxtb.w	ip, ip
90022ae2:	fb1b fb03 	smulbb	fp, fp, r3
90022ae6:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022ae8:	437b      	muls	r3, r7
90022aea:	7817      	ldrb	r7, [r2, #0]
90022aec:	fb05 b50a 	mla	r5, r5, sl, fp
90022af0:	fb0e 3309 	mla	r3, lr, r9, r3
90022af4:	b2ad      	uxth	r5, r5
90022af6:	fb01 3307 	mla	r3, r1, r7, r3
90022afa:	7807      	ldrb	r7, [r0, #0]
90022afc:	f105 0b01 	add.w	fp, r5, #1
90022b00:	fb08 3707 	mla	r7, r8, r7, r3
90022b04:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022b06:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90022b0a:	fb1c fc03 	smulbb	ip, ip, r3
90022b0e:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022b12:	1c73      	adds	r3, r6, #1
90022b14:	096d      	lsrs	r5, r5, #5
90022b16:	fb07 c70a 	mla	r7, r7, sl, ip
90022b1a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90022b1e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022b22:	b2bf      	uxth	r7, r7
90022b24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022b26:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
90022b2a:	1c7a      	adds	r2, r7, #1
90022b2c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90022b30:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022b34:	4316      	orrs	r6, r2
90022b36:	9a21      	ldr	r2, [sp, #132]	; 0x84
90022b38:	432e      	orrs	r6, r5
90022b3a:	f823 6b02 	strh.w	r6, [r3], #2
90022b3e:	930c      	str	r3, [sp, #48]	; 0x30
90022b40:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022b42:	4413      	add	r3, r2
90022b44:	9a22      	ldr	r2, [sp, #136]	; 0x88
90022b46:	931f      	str	r3, [sp, #124]	; 0x7c
90022b48:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022b4a:	4413      	add	r3, r2
90022b4c:	9320      	str	r3, [sp, #128]	; 0x80
90022b4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022b50:	3b01      	subs	r3, #1
90022b52:	9311      	str	r3, [sp, #68]	; 0x44
90022b54:	e6db      	b.n	9002290e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90022b56:	b149      	cbz	r1, 90022b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90022b58:	5cb2      	ldrb	r2, [r6, r2]
90022b5a:	4628      	mov	r0, r5
90022b5c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022b60:	4422      	add	r2, r4
90022b62:	462f      	mov	r7, r5
90022b64:	e771      	b.n	90022a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90022b66:	4628      	mov	r0, r5
90022b68:	462a      	mov	r2, r5
90022b6a:	e76e      	b.n	90022a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90022b6c:	4628      	mov	r0, r5
90022b6e:	462a      	mov	r2, r5
90022b70:	e7f7      	b.n	90022b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90022b72:	b015      	add	sp, #84	; 0x54
90022b74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022b78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90022b78:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022b7c:	880f      	ldrh	r7, [r1, #0]
90022b7e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
90022b82:	023c      	lsls	r4, r7, #8
90022b84:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
90022b88:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
90022b8c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
90022b90:	017c      	lsls	r4, r7, #5
90022b92:	00ff      	lsls	r7, r7, #3
90022b94:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90022b98:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
90022b9c:	b2ff      	uxtb	r7, r7
90022b9e:	ea4b 0404 	orr.w	r4, fp, r4
90022ba2:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
90022ba6:	4327      	orrs	r7, r4
90022ba8:	fb05 ca0e 	mla	sl, r5, lr, ip
90022bac:	2d00      	cmp	r5, #0
90022bae:	9701      	str	r7, [sp, #4]
90022bb0:	eb02 080a 	add.w	r8, r2, sl
90022bb4:	db7e      	blt.n	90022cb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90022bb6:	45a9      	cmp	r9, r5
90022bb8:	dd7c      	ble.n	90022cb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90022bba:	f1bc 0f00 	cmp.w	ip, #0
90022bbe:	db77      	blt.n	90022cb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90022bc0:	45e6      	cmp	lr, ip
90022bc2:	dd75      	ble.n	90022cb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90022bc4:	f812 700a 	ldrb.w	r7, [r2, sl]
90022bc8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022bcc:	441f      	add	r7, r3
90022bce:	f11c 0201 	adds.w	r2, ip, #1
90022bd2:	d472      	bmi.n	90022cba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022bd4:	4596      	cmp	lr, r2
90022bd6:	dd70      	ble.n	90022cba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022bd8:	2800      	cmp	r0, #0
90022bda:	d06e      	beq.n	90022cba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022bdc:	f898 4001 	ldrb.w	r4, [r8, #1]
90022be0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90022be4:	441c      	add	r4, r3
90022be6:	3501      	adds	r5, #1
90022be8:	d46b      	bmi.n	90022cc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022bea:	45a9      	cmp	r9, r5
90022bec:	dd69      	ble.n	90022cc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022bee:	2e00      	cmp	r6, #0
90022bf0:	d067      	beq.n	90022cc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022bf2:	f1bc 0f00 	cmp.w	ip, #0
90022bf6:	db62      	blt.n	90022cbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022bf8:	45e6      	cmp	lr, ip
90022bfa:	dd60      	ble.n	90022cbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022bfc:	f818 500e 	ldrb.w	r5, [r8, lr]
90022c00:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90022c04:	441d      	add	r5, r3
90022c06:	f11c 0201 	adds.w	r2, ip, #1
90022c0a:	d45d      	bmi.n	90022cc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022c0c:	4596      	cmp	lr, r2
90022c0e:	dd5b      	ble.n	90022cc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022c10:	2800      	cmp	r0, #0
90022c12:	d059      	beq.n	90022cc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022c14:	44c6      	add	lr, r8
90022c16:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022c1a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022c1e:	4413      	add	r3, r2
90022c20:	b280      	uxth	r0, r0
90022c22:	f897 e002 	ldrb.w	lr, [r7, #2]
90022c26:	b2b2      	uxth	r2, r6
90022c28:	f897 9000 	ldrb.w	r9, [r7]
90022c2c:	787f      	ldrb	r7, [r7, #1]
90022c2e:	fb00 f602 	mul.w	r6, r0, r2
90022c32:	0100      	lsls	r0, r0, #4
90022c34:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90022c38:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
90022c3c:	1b80      	subs	r0, r0, r6
90022c3e:	fa1f fc82 	uxth.w	ip, r2
90022c42:	b282      	uxth	r2, r0
90022c44:	78a0      	ldrb	r0, [r4, #2]
90022c46:	eba8 080c 	sub.w	r8, r8, ip
90022c4a:	4350      	muls	r0, r2
90022c4c:	fa1f f888 	uxth.w	r8, r8
90022c50:	fb08 0e0e 	mla	lr, r8, lr, r0
90022c54:	78a8      	ldrb	r0, [r5, #2]
90022c56:	fb0c e000 	mla	r0, ip, r0, lr
90022c5a:	f893 e002 	ldrb.w	lr, [r3, #2]
90022c5e:	fb06 0e0e 	mla	lr, r6, lr, r0
90022c62:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
90022c66:	f894 e000 	ldrb.w	lr, [r4]
90022c6a:	fb02 fe0e 	mul.w	lr, r2, lr
90022c6e:	fb08 e909 	mla	r9, r8, r9, lr
90022c72:	f895 e000 	ldrb.w	lr, [r5]
90022c76:	fb0c 990e 	mla	r9, ip, lr, r9
90022c7a:	f893 e000 	ldrb.w	lr, [r3]
90022c7e:	785b      	ldrb	r3, [r3, #1]
90022c80:	fb06 9e0e 	mla	lr, r6, lr, r9
90022c84:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90022c88:	ea4e 0e00 	orr.w	lr, lr, r0
90022c8c:	7860      	ldrb	r0, [r4, #1]
90022c8e:	4350      	muls	r0, r2
90022c90:	786a      	ldrb	r2, [r5, #1]
90022c92:	fb08 0007 	mla	r0, r8, r7, r0
90022c96:	fb0c 0202 	mla	r2, ip, r2, r0
90022c9a:	fb06 2303 	mla	r3, r6, r3, r2
90022c9e:	095b      	lsrs	r3, r3, #5
90022ca0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022ca4:	ea4e 0303 	orr.w	r3, lr, r3
90022ca8:	800b      	strh	r3, [r1, #0]
90022caa:	b003      	add	sp, #12
90022cac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022cb0:	af01      	add	r7, sp, #4
90022cb2:	e78c      	b.n	90022bce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90022cb4:	ac01      	add	r4, sp, #4
90022cb6:	4627      	mov	r7, r4
90022cb8:	e795      	b.n	90022be6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90022cba:	ac01      	add	r4, sp, #4
90022cbc:	e793      	b.n	90022be6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90022cbe:	ad01      	add	r5, sp, #4
90022cc0:	e7a1      	b.n	90022c06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90022cc2:	ab01      	add	r3, sp, #4
90022cc4:	461d      	mov	r5, r3
90022cc6:	e7ab      	b.n	90022c20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90022cc8:	ab01      	add	r3, sp, #4
90022cca:	e7a9      	b.n	90022c20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90022ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022ccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022cd0:	b08f      	sub	sp, #60	; 0x3c
90022cd2:	920c      	str	r2, [sp, #48]	; 0x30
90022cd4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90022cd6:	900d      	str	r0, [sp, #52]	; 0x34
90022cd8:	910a      	str	r1, [sp, #40]	; 0x28
90022cda:	6850      	ldr	r0, [r2, #4]
90022cdc:	9306      	str	r3, [sp, #24]
90022cde:	6812      	ldr	r2, [r2, #0]
90022ce0:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
90022ce4:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
90022ce8:	fb00 1303 	mla	r3, r0, r3, r1
90022cec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022cf0:	9307      	str	r3, [sp, #28]
90022cf2:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022cf4:	681b      	ldr	r3, [r3, #0]
90022cf6:	9308      	str	r3, [sp, #32]
90022cf8:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022cfa:	685c      	ldr	r4, [r3, #4]
90022cfc:	3404      	adds	r4, #4
90022cfe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022d00:	2b00      	cmp	r3, #0
90022d02:	dc03      	bgt.n	90022d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90022d04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022d06:	2b00      	cmp	r3, #0
90022d08:	f340 81d5 	ble.w	900230b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022d0c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022d0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022d12:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022d16:	1e48      	subs	r0, r1, #1
90022d18:	1e56      	subs	r6, r2, #1
90022d1a:	9b06      	ldr	r3, [sp, #24]
90022d1c:	2b00      	cmp	r3, #0
90022d1e:	f340 80b6 	ble.w	90022e8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90022d22:	ea5f 472b 	movs.w	r7, fp, asr #16
90022d26:	ea4f 4325 	mov.w	r3, r5, asr #16
90022d2a:	d406      	bmi.n	90022d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022d2c:	4287      	cmp	r7, r0
90022d2e:	da04      	bge.n	90022d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022d30:	2b00      	cmp	r3, #0
90022d32:	db02      	blt.n	90022d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022d34:	42b3      	cmp	r3, r6
90022d36:	f2c0 80ab 	blt.w	90022e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90022d3a:	3701      	adds	r7, #1
90022d3c:	f100 809c 	bmi.w	90022e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022d40:	42b9      	cmp	r1, r7
90022d42:	f2c0 8099 	blt.w	90022e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022d46:	3301      	adds	r3, #1
90022d48:	f100 8096 	bmi.w	90022e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022d4c:	429a      	cmp	r2, r3
90022d4e:	f2c0 8093 	blt.w	90022e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022d52:	9b06      	ldr	r3, [sp, #24]
90022d54:	930b      	str	r3, [sp, #44]	; 0x2c
90022d56:	9b07      	ldr	r3, [sp, #28]
90022d58:	9309      	str	r3, [sp, #36]	; 0x24
90022d5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022d5c:	2b00      	cmp	r3, #0
90022d5e:	f340 80b4 	ble.w	90022eca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90022d62:	9820      	ldr	r0, [sp, #128]	; 0x80
90022d64:	142e      	asrs	r6, r5, #16
90022d66:	9a20      	ldr	r2, [sp, #128]	; 0x80
90022d68:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022d6c:	68c7      	ldr	r7, [r0, #12]
90022d6e:	ea5f 402b 	movs.w	r0, fp, asr #16
90022d72:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022d76:	6892      	ldr	r2, [r2, #8]
90022d78:	f100 80fb 	bmi.w	90022f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022d7c:	f102 3cff 	add.w	ip, r2, #4294967295
90022d80:	4560      	cmp	r0, ip
90022d82:	f280 80f6 	bge.w	90022f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022d86:	2e00      	cmp	r6, #0
90022d88:	f2c0 80f3 	blt.w	90022f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022d8c:	f107 3cff 	add.w	ip, r7, #4294967295
90022d90:	4566      	cmp	r6, ip
90022d92:	f280 80ee 	bge.w	90022f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022d96:	b212      	sxth	r2, r2
90022d98:	fb06 0002 	mla	r0, r6, r2, r0
90022d9c:	9e08      	ldr	r6, [sp, #32]
90022d9e:	1837      	adds	r7, r6, r0
90022da0:	5c30      	ldrb	r0, [r6, r0]
90022da2:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90022da6:	eb04 0c08 	add.w	ip, r4, r8
90022daa:	2b00      	cmp	r3, #0
90022dac:	f000 80d3 	beq.w	90022f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90022db0:	787e      	ldrb	r6, [r7, #1]
90022db2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022db6:	4426      	add	r6, r4
90022db8:	2900      	cmp	r1, #0
90022dba:	f000 80d4 	beq.w	90022f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90022dbe:	18b8      	adds	r0, r7, r2
90022dc0:	5cba      	ldrb	r2, [r7, r2]
90022dc2:	7840      	ldrb	r0, [r0, #1]
90022dc4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022dc8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022dcc:	4422      	add	r2, r4
90022dce:	4420      	add	r0, r4
90022dd0:	b29b      	uxth	r3, r3
90022dd2:	78b7      	ldrb	r7, [r6, #2]
90022dd4:	b289      	uxth	r1, r1
90022dd6:	f89c a002 	ldrb.w	sl, [ip, #2]
90022dda:	f89c c001 	ldrb.w	ip, [ip, #1]
90022dde:	fb03 f901 	mul.w	r9, r3, r1
90022de2:	011b      	lsls	r3, r3, #4
90022de4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022de8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90022dec:	eba3 0309 	sub.w	r3, r3, r9
90022df0:	b289      	uxth	r1, r1
90022df2:	b29b      	uxth	r3, r3
90022df4:	ebae 0e01 	sub.w	lr, lr, r1
90022df8:	435f      	muls	r7, r3
90022dfa:	fa1f fe8e 	uxth.w	lr, lr
90022dfe:	fb0e 770a 	mla	r7, lr, sl, r7
90022e02:	f892 a002 	ldrb.w	sl, [r2, #2]
90022e06:	fb01 770a 	mla	r7, r1, sl, r7
90022e0a:	f890 a002 	ldrb.w	sl, [r0, #2]
90022e0e:	fb09 7a0a 	mla	sl, r9, sl, r7
90022e12:	f814 7008 	ldrb.w	r7, [r4, r8]
90022e16:	f896 8000 	ldrb.w	r8, [r6]
90022e1a:	7876      	ldrb	r6, [r6, #1]
90022e1c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90022e20:	fb03 f808 	mul.w	r8, r3, r8
90022e24:	4373      	muls	r3, r6
90022e26:	fb0e 8807 	mla	r8, lr, r7, r8
90022e2a:	7817      	ldrb	r7, [r2, #0]
90022e2c:	fb0e 330c 	mla	r3, lr, ip, r3
90022e30:	fb01 8807 	mla	r8, r1, r7, r8
90022e34:	7807      	ldrb	r7, [r0, #0]
90022e36:	fb09 8707 	mla	r7, r9, r7, r8
90022e3a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022e3e:	ea47 070a 	orr.w	r7, r7, sl
90022e42:	f892 a001 	ldrb.w	sl, [r2, #1]
90022e46:	fb01 310a 	mla	r1, r1, sl, r3
90022e4a:	f890 a001 	ldrb.w	sl, [r0, #1]
90022e4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022e50:	fb09 1a0a 	mla	sl, r9, sl, r1
90022e54:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022e58:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90022e5c:	ea47 070a 	orr.w	r7, r7, sl
90022e60:	801f      	strh	r7, [r3, #0]
90022e62:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022e64:	3302      	adds	r3, #2
90022e66:	9309      	str	r3, [sp, #36]	; 0x24
90022e68:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022e6a:	449b      	add	fp, r3
90022e6c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022e6e:	441d      	add	r5, r3
90022e70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022e72:	3b01      	subs	r3, #1
90022e74:	930b      	str	r3, [sp, #44]	; 0x2c
90022e76:	e770      	b.n	90022d5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90022e78:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022e7a:	449b      	add	fp, r3
90022e7c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022e7e:	441d      	add	r5, r3
90022e80:	9b06      	ldr	r3, [sp, #24]
90022e82:	3b01      	subs	r3, #1
90022e84:	9306      	str	r3, [sp, #24]
90022e86:	9b07      	ldr	r3, [sp, #28]
90022e88:	3302      	adds	r3, #2
90022e8a:	9307      	str	r3, [sp, #28]
90022e8c:	e745      	b.n	90022d1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90022e8e:	d023      	beq.n	90022ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90022e90:	9b06      	ldr	r3, [sp, #24]
90022e92:	981b      	ldr	r0, [sp, #108]	; 0x6c
90022e94:	3b01      	subs	r3, #1
90022e96:	fb00 b003 	mla	r0, r0, r3, fp
90022e9a:	1400      	asrs	r0, r0, #16
90022e9c:	f53f af59 	bmi.w	90022d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022ea0:	3901      	subs	r1, #1
90022ea2:	4288      	cmp	r0, r1
90022ea4:	f6bf af55 	bge.w	90022d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022ea8:	991c      	ldr	r1, [sp, #112]	; 0x70
90022eaa:	fb01 5303 	mla	r3, r1, r3, r5
90022eae:	141b      	asrs	r3, r3, #16
90022eb0:	f53f af4f 	bmi.w	90022d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022eb4:	3a01      	subs	r2, #1
90022eb6:	4293      	cmp	r3, r2
90022eb8:	f6bf af4b 	bge.w	90022d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022ebc:	9b06      	ldr	r3, [sp, #24]
90022ebe:	9309      	str	r3, [sp, #36]	; 0x24
90022ec0:	9b07      	ldr	r3, [sp, #28]
90022ec2:	930b      	str	r3, [sp, #44]	; 0x2c
90022ec4:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022ec6:	2b00      	cmp	r3, #0
90022ec8:	dc70      	bgt.n	90022fac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90022eca:	9b06      	ldr	r3, [sp, #24]
90022ecc:	9a07      	ldr	r2, [sp, #28]
90022ece:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90022ed2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022ed6:	9307      	str	r3, [sp, #28]
90022ed8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022eda:	2b00      	cmp	r3, #0
90022edc:	f340 80eb 	ble.w	900230b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022ee0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022ee4:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022ee6:	ee30 0a04 	vadd.f32	s0, s0, s8
90022eea:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022eee:	eef0 6a62 	vmov.f32	s13, s5
90022ef2:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022ef6:	ee31 1a05 	vadd.f32	s2, s2, s10
90022efa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022efe:	ee16 ba90 	vmov	fp, s13
90022f02:	eef0 6a43 	vmov.f32	s13, s6
90022f06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022f0a:	ee16 5a90 	vmov	r5, s13
90022f0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022f12:	ee61 7a27 	vmul.f32	s15, s2, s15
90022f16:	ee77 2a62 	vsub.f32	s5, s14, s5
90022f1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022f1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022f22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022f26:	ee12 2a90 	vmov	r2, s5
90022f2a:	eef0 2a47 	vmov.f32	s5, s14
90022f2e:	fb92 f3f3 	sdiv	r3, r2, r3
90022f32:	ee13 2a10 	vmov	r2, s6
90022f36:	931b      	str	r3, [sp, #108]	; 0x6c
90022f38:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022f3a:	eeb0 3a67 	vmov.f32	s6, s15
90022f3e:	fb92 f3f3 	sdiv	r3, r2, r3
90022f42:	931c      	str	r3, [sp, #112]	; 0x70
90022f44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022f46:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90022f48:	3b01      	subs	r3, #1
90022f4a:	930a      	str	r3, [sp, #40]	; 0x28
90022f4c:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022f4e:	bf08      	it	eq
90022f50:	4613      	moveq	r3, r2
90022f52:	9306      	str	r3, [sp, #24]
90022f54:	e6d3      	b.n	90022cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90022f56:	b149      	cbz	r1, 90022f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90022f58:	5cba      	ldrb	r2, [r7, r2]
90022f5a:	4660      	mov	r0, ip
90022f5c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022f60:	4422      	add	r2, r4
90022f62:	4666      	mov	r6, ip
90022f64:	e734      	b.n	90022dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90022f66:	4660      	mov	r0, ip
90022f68:	4662      	mov	r2, ip
90022f6a:	e731      	b.n	90022dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90022f6c:	4660      	mov	r0, ip
90022f6e:	4662      	mov	r2, ip
90022f70:	e7f7      	b.n	90022f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90022f72:	f110 0c01 	adds.w	ip, r0, #1
90022f76:	f53f af74 	bmi.w	90022e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022f7a:	4562      	cmp	r2, ip
90022f7c:	f6ff af71 	blt.w	90022e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022f80:	f116 0c01 	adds.w	ip, r6, #1
90022f84:	f53f af6d 	bmi.w	90022e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022f88:	4567      	cmp	r7, ip
90022f8a:	f6ff af6a 	blt.w	90022e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022f8e:	b23f      	sxth	r7, r7
90022f90:	b212      	sxth	r2, r2
90022f92:	9701      	str	r7, [sp, #4]
90022f94:	9200      	str	r2, [sp, #0]
90022f96:	e9cd 3104 	strd	r3, r1, [sp, #16]
90022f9a:	e9cd 0602 	strd	r0, r6, [sp, #8]
90022f9e:	4623      	mov	r3, r4
90022fa0:	980d      	ldr	r0, [sp, #52]	; 0x34
90022fa2:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90022fa6:	f7ff fde7 	bl	90022b78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90022faa:	e75a      	b.n	90022e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022fac:	9a20      	ldr	r2, [sp, #128]	; 0x80
90022fae:	ea4f 462b 	mov.w	r6, fp, asr #16
90022fb2:	1428      	asrs	r0, r5, #16
90022fb4:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022fb8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90022fbc:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022fc0:	fb02 6000 	mla	r0, r2, r0, r6
90022fc4:	9e08      	ldr	r6, [sp, #32]
90022fc6:	f816 8000 	ldrb.w	r8, [r6, r0]
90022fca:	1837      	adds	r7, r6, r0
90022fcc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90022fd0:	eb04 0c08 	add.w	ip, r4, r8
90022fd4:	2b00      	cmp	r3, #0
90022fd6:	d060      	beq.n	9002309a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90022fd8:	787e      	ldrb	r6, [r7, #1]
90022fda:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022fde:	4426      	add	r6, r4
90022fe0:	2900      	cmp	r1, #0
90022fe2:	d062      	beq.n	900230aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90022fe4:	18b8      	adds	r0, r7, r2
90022fe6:	5cba      	ldrb	r2, [r7, r2]
90022fe8:	7840      	ldrb	r0, [r0, #1]
90022fea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022fee:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022ff2:	4422      	add	r2, r4
90022ff4:	4420      	add	r0, r4
90022ff6:	b29b      	uxth	r3, r3
90022ff8:	78b7      	ldrb	r7, [r6, #2]
90022ffa:	b289      	uxth	r1, r1
90022ffc:	f89c a002 	ldrb.w	sl, [ip, #2]
90023000:	f89c c001 	ldrb.w	ip, [ip, #1]
90023004:	fb03 f901 	mul.w	r9, r3, r1
90023008:	011b      	lsls	r3, r3, #4
9002300a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002300e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90023012:	eba3 0309 	sub.w	r3, r3, r9
90023016:	b289      	uxth	r1, r1
90023018:	b29b      	uxth	r3, r3
9002301a:	ebae 0e01 	sub.w	lr, lr, r1
9002301e:	435f      	muls	r7, r3
90023020:	fa1f fe8e 	uxth.w	lr, lr
90023024:	fb0e 770a 	mla	r7, lr, sl, r7
90023028:	f892 a002 	ldrb.w	sl, [r2, #2]
9002302c:	fb01 770a 	mla	r7, r1, sl, r7
90023030:	f890 a002 	ldrb.w	sl, [r0, #2]
90023034:	fb09 7a0a 	mla	sl, r9, sl, r7
90023038:	f814 7008 	ldrb.w	r7, [r4, r8]
9002303c:	f896 8000 	ldrb.w	r8, [r6]
90023040:	7876      	ldrb	r6, [r6, #1]
90023042:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90023046:	fb03 f808 	mul.w	r8, r3, r8
9002304a:	4373      	muls	r3, r6
9002304c:	7856      	ldrb	r6, [r2, #1]
9002304e:	fb0e 8807 	mla	r8, lr, r7, r8
90023052:	7817      	ldrb	r7, [r2, #0]
90023054:	fb0e 330c 	mla	r3, lr, ip, r3
90023058:	fb01 8807 	mla	r8, r1, r7, r8
9002305c:	7807      	ldrb	r7, [r0, #0]
9002305e:	fb01 3306 	mla	r3, r1, r6, r3
90023062:	fb09 8707 	mla	r7, r9, r7, r8
90023066:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002306a:	ea47 070a 	orr.w	r7, r7, sl
9002306e:	f890 a001 	ldrb.w	sl, [r0, #1]
90023072:	fb09 3a0a 	mla	sl, r9, sl, r3
90023076:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023078:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9002307c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90023080:	ea47 070a 	orr.w	r7, r7, sl
90023084:	f823 7b02 	strh.w	r7, [r3], #2
90023088:	930b      	str	r3, [sp, #44]	; 0x2c
9002308a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9002308c:	449b      	add	fp, r3
9002308e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023090:	441d      	add	r5, r3
90023092:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023094:	3b01      	subs	r3, #1
90023096:	9309      	str	r3, [sp, #36]	; 0x24
90023098:	e714      	b.n	90022ec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
9002309a:	b149      	cbz	r1, 900230b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
9002309c:	5cba      	ldrb	r2, [r7, r2]
9002309e:	4660      	mov	r0, ip
900230a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900230a4:	4422      	add	r2, r4
900230a6:	4666      	mov	r6, ip
900230a8:	e7a5      	b.n	90022ff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900230aa:	4660      	mov	r0, ip
900230ac:	4662      	mov	r2, ip
900230ae:	e7a2      	b.n	90022ff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900230b0:	4660      	mov	r0, ip
900230b2:	4662      	mov	r2, ip
900230b4:	e7f7      	b.n	900230a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
900230b6:	b00f      	add	sp, #60	; 0x3c
900230b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900230bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
900230bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900230c0:	b085      	sub	sp, #20
900230c2:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
900230c6:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
900230ca:	9102      	str	r1, [sp, #8]
900230cc:	2c00      	cmp	r4, #0
900230ce:	fb04 710c 	mla	r1, r4, ip, r7
900230d2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
900230d6:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
900230da:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
900230de:	eb02 0e01 	add.w	lr, r2, r1
900230e2:	f2c0 8122 	blt.w	9002332a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900230e6:	45a0      	cmp	r8, r4
900230e8:	f340 811f 	ble.w	9002332a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900230ec:	2f00      	cmp	r7, #0
900230ee:	f2c0 811a 	blt.w	90023326 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900230f2:	45bc      	cmp	ip, r7
900230f4:	f340 8117 	ble.w	90023326 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900230f8:	5c52      	ldrb	r2, [r2, r1]
900230fa:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900230fe:	1c7a      	adds	r2, r7, #1
90023100:	f100 8116 	bmi.w	90023330 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90023104:	4594      	cmp	ip, r2
90023106:	f340 8113 	ble.w	90023330 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9002310a:	2e00      	cmp	r6, #0
9002310c:	f000 8112 	beq.w	90023334 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90023110:	f89e 2001 	ldrb.w	r2, [lr, #1]
90023114:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90023118:	3401      	adds	r4, #1
9002311a:	f100 810f 	bmi.w	9002333c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9002311e:	45a0      	cmp	r8, r4
90023120:	f340 810c 	ble.w	9002333c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90023124:	2800      	cmp	r0, #0
90023126:	f000 810c 	beq.w	90023342 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
9002312a:	2f00      	cmp	r7, #0
9002312c:	f2c0 8104 	blt.w	90023338 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90023130:	45bc      	cmp	ip, r7
90023132:	f340 8101 	ble.w	90023338 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90023136:	f81e 200c 	ldrb.w	r2, [lr, ip]
9002313a:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9002313e:	3701      	adds	r7, #1
90023140:	f100 8102 	bmi.w	90023348 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90023144:	45bc      	cmp	ip, r7
90023146:	f340 80ff 	ble.w	90023348 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9002314a:	2e00      	cmp	r6, #0
9002314c:	f000 80fe 	beq.w	9002334c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90023150:	44f4      	add	ip, lr
90023152:	f89c 2001 	ldrb.w	r2, [ip, #1]
90023156:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9002315a:	b2b6      	uxth	r6, r6
9002315c:	b280      	uxth	r0, r0
9002315e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90023162:	fb00 fe06 	mul.w	lr, r0, r6
90023166:	0136      	lsls	r6, r6, #4
90023168:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9002316c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90023170:	eba6 070e 	sub.w	r7, r6, lr
90023174:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90023178:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002317c:	b280      	uxth	r0, r0
9002317e:	b2bf      	uxth	r7, r7
90023180:	1a1b      	subs	r3, r3, r0
90023182:	ea4f 6812 	mov.w	r8, r2, lsr #24
90023186:	fb0a f607 	mul.w	r6, sl, r7
9002318a:	b29b      	uxth	r3, r3
9002318c:	fb0b 6603 	mla	r6, fp, r3, r6
90023190:	fb00 6609 	mla	r6, r0, r9, r6
90023194:	fb0e 6608 	mla	r6, lr, r8, r6
90023198:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002319c:	9600      	str	r6, [sp, #0]
9002319e:	2e00      	cmp	r6, #0
900231a0:	f000 80be 	beq.w	90023320 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
900231a4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900231a8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900231ac:	9e02      	ldr	r6, [sp, #8]
900231ae:	fb0b fc0c 	mul.w	ip, fp, ip
900231b2:	fb0b f505 	mul.w	r5, fp, r5
900231b6:	8836      	ldrh	r6, [r6, #0]
900231b8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900231bc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900231c0:	9501      	str	r5, [sp, #4]
900231c2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
900231c6:	44dc      	add	ip, fp
900231c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900231cc:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
900231d0:	9503      	str	r5, [sp, #12]
900231d2:	9d01      	ldr	r5, [sp, #4]
900231d4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
900231d8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900231dc:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
900231e0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900231e4:	fb0a fc0c 	mul.w	ip, sl, ip
900231e8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900231ec:	fb0a fa01 	mul.w	sl, sl, r1
900231f0:	ea4f 251c 	mov.w	r5, ip, lsr #8
900231f4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900231f8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
900231fc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023200:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90023204:	4465      	add	r5, ip
90023206:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002320a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9002320e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023212:	fb09 fc0c 	mul.w	ip, r9, ip
90023216:	0a2d      	lsrs	r5, r5, #8
90023218:	fb09 f904 	mul.w	r9, r9, r4
9002321c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023220:	ea4f 211c 	mov.w	r1, ip, lsr #8
90023224:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023228:	f509 7480 	add.w	r4, r9, #256	; 0x100
9002322c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023230:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90023234:	437d      	muls	r5, r7
90023236:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9002323a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
9002323e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023242:	4461      	add	r1, ip
90023244:	fb08 f404 	mul.w	r4, r8, r4
90023248:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002324c:	fb08 f802 	mul.w	r8, r8, r2
90023250:	0a09      	lsrs	r1, r1, #8
90023252:	0a22      	lsrs	r2, r4, #8
90023254:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90023258:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9002325c:	fb07 f70a 	mul.w	r7, r7, sl
90023260:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023264:	4414      	add	r4, r2
90023266:	f508 7280 	add.w	r2, r8, #256	; 0x100
9002326a:	0a24      	lsrs	r4, r4, #8
9002326c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90023270:	9a03      	ldr	r2, [sp, #12]
90023272:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90023276:	fb02 5503 	mla	r5, r2, r3, r5
9002327a:	ea4f 2818 	mov.w	r8, r8, lsr #8
9002327e:	9a00      	ldr	r2, [sp, #0]
90023280:	fb04 540e 	mla	r4, r4, lr, r5
90023284:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90023288:	1235      	asrs	r5, r6, #8
9002328a:	fb01 4100 	mla	r1, r1, r0, r4
9002328e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90023292:	0a09      	lsrs	r1, r1, #8
90023294:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90023298:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
9002329c:	fb03 7101 	mla	r1, r3, r1, r7
900232a0:	fb0e 1e08 	mla	lr, lr, r8, r1
900232a4:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900232a8:	fb00 e101 	mla	r1, r0, r1, lr
900232ac:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
900232b0:	b287      	uxth	r7, r0
900232b2:	0a09      	lsrs	r1, r1, #8
900232b4:	437a      	muls	r2, r7
900232b6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900232ba:	1c53      	adds	r3, r2, #1
900232bc:	4321      	orrs	r1, r4
900232be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900232c2:	0c0a      	lsrs	r2, r1, #16
900232c4:	f3c1 2407 	ubfx	r4, r1, #8, #8
900232c8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900232cc:	b2c8      	uxtb	r0, r1
900232ce:	fb12 f207 	smulbb	r2, r2, r7
900232d2:	fb14 f407 	smulbb	r4, r4, r7
900232d6:	b2db      	uxtb	r3, r3
900232d8:	fb10 f007 	smulbb	r0, r0, r7
900232dc:	fb05 2503 	mla	r5, r5, r3, r2
900232e0:	10f2      	asrs	r2, r6, #3
900232e2:	00f6      	lsls	r6, r6, #3
900232e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900232e8:	b2ad      	uxth	r5, r5
900232ea:	b2f6      	uxtb	r6, r6
900232ec:	fb02 4203 	mla	r2, r2, r3, r4
900232f0:	fb06 0303 	mla	r3, r6, r3, r0
900232f4:	b294      	uxth	r4, r2
900232f6:	b299      	uxth	r1, r3
900232f8:	1c6b      	adds	r3, r5, #1
900232fa:	1c62      	adds	r2, r4, #1
900232fc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023300:	1c4b      	adds	r3, r1, #1
90023302:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90023306:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002330a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002330e:	0952      	lsrs	r2, r2, #5
90023310:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023314:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023318:	432b      	orrs	r3, r5
9002331a:	4313      	orrs	r3, r2
9002331c:	9a02      	ldr	r2, [sp, #8]
9002331e:	8013      	strh	r3, [r2, #0]
90023320:	b005      	add	sp, #20
90023322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023326:	2500      	movs	r5, #0
90023328:	e6e9      	b.n	900230fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
9002332a:	2100      	movs	r1, #0
9002332c:	460d      	mov	r5, r1
9002332e:	e6f3      	b.n	90023118 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023330:	2100      	movs	r1, #0
90023332:	e6f1      	b.n	90023118 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023334:	4631      	mov	r1, r6
90023336:	e6ef      	b.n	90023118 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023338:	2400      	movs	r4, #0
9002333a:	e700      	b.n	9002313e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
9002333c:	2200      	movs	r2, #0
9002333e:	4614      	mov	r4, r2
90023340:	e70b      	b.n	9002315a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023342:	4602      	mov	r2, r0
90023344:	4604      	mov	r4, r0
90023346:	e708      	b.n	9002315a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023348:	2200      	movs	r2, #0
9002334a:	e706      	b.n	9002315a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002334c:	4632      	mov	r2, r6
9002334e:	e704      	b.n	9002315a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90023350 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023354:	b09f      	sub	sp, #124	; 0x7c
90023356:	921b      	str	r2, [sp, #108]	; 0x6c
90023358:	9309      	str	r3, [sp, #36]	; 0x24
9002335a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9002335c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
90023360:	901d      	str	r0, [sp, #116]	; 0x74
90023362:	931c      	str	r3, [sp, #112]	; 0x70
90023364:	6850      	ldr	r0, [r2, #4]
90023366:	9119      	str	r1, [sp, #100]	; 0x64
90023368:	6812      	ldr	r2, [r2, #0]
9002336a:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9002336c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
90023370:	fb00 1303 	mla	r3, r0, r3, r1
90023374:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023378:	930c      	str	r3, [sp, #48]	; 0x30
9002337a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9002337c:	681b      	ldr	r3, [r3, #0]
9002337e:	9312      	str	r3, [sp, #72]	; 0x48
90023380:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90023382:	685e      	ldr	r6, [r3, #4]
90023384:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
90023388:	3604      	adds	r6, #4
9002338a:	930d      	str	r3, [sp, #52]	; 0x34
9002338c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9002338e:	2b00      	cmp	r3, #0
90023390:	dc03      	bgt.n	9002339a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023392:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90023394:	2b00      	cmp	r3, #0
90023396:	f340 8387 	ble.w	90023aa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9002339a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9002339c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900233a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900233a4:	1e48      	subs	r0, r1, #1
900233a6:	1e57      	subs	r7, r2, #1
900233a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900233aa:	2b00      	cmp	r3, #0
900233ac:	f340 8194 	ble.w	900236d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
900233b0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900233b2:	142b      	asrs	r3, r5, #16
900233b4:	ea5f 4c24 	movs.w	ip, r4, asr #16
900233b8:	d406      	bmi.n	900233c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900233ba:	4584      	cmp	ip, r0
900233bc:	da04      	bge.n	900233c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900233be:	2b00      	cmp	r3, #0
900233c0:	db02      	blt.n	900233c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900233c2:	42bb      	cmp	r3, r7
900233c4:	f2c0 8189 	blt.w	900236da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900233c8:	f11c 0c01 	adds.w	ip, ip, #1
900233cc:	f100 8177 	bmi.w	900236be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900233d0:	4561      	cmp	r1, ip
900233d2:	f2c0 8174 	blt.w	900236be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900233d6:	3301      	adds	r3, #1
900233d8:	f100 8171 	bmi.w	900236be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900233dc:	429a      	cmp	r2, r3
900233de:	f2c0 816e 	blt.w	900236be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900233e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900233e4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
900233e6:	931a      	str	r3, [sp, #104]	; 0x68
900233e8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900233ea:	2b00      	cmp	r3, #0
900233ec:	f340 8193 	ble.w	90023716 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
900233f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900233f2:	ea4f 4c25 	mov.w	ip, r5, asr #16
900233f6:	f3c5 3103 	ubfx	r1, r5, #12, #4
900233fa:	f3c3 3203 	ubfx	r2, r3, #12, #4
900233fe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90023400:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90023404:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023406:	141b      	asrs	r3, r3, #16
90023408:	f100 81d6 	bmi.w	900237b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002340c:	f100 38ff 	add.w	r8, r0, #4294967295
90023410:	4543      	cmp	r3, r8
90023412:	f280 81d1 	bge.w	900237b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023416:	f1bc 0f00 	cmp.w	ip, #0
9002341a:	f2c0 81cd 	blt.w	900237b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002341e:	f10e 38ff 	add.w	r8, lr, #4294967295
90023422:	45c4      	cmp	ip, r8
90023424:	f280 81c8 	bge.w	900237b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023428:	b200      	sxth	r0, r0
9002342a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002342c:	fb0c 3300 	mla	r3, ip, r0, r3
90023430:	eb04 0803 	add.w	r8, r4, r3
90023434:	5ce3      	ldrb	r3, [r4, r3]
90023436:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002343a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002343e:	2a00      	cmp	r2, #0
90023440:	f000 81af 	beq.w	900237a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023444:	f898 c001 	ldrb.w	ip, [r8, #1]
90023448:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
9002344c:	940e      	str	r4, [sp, #56]	; 0x38
9002344e:	0e24      	lsrs	r4, r4, #24
90023450:	9415      	str	r4, [sp, #84]	; 0x54
90023452:	b179      	cbz	r1, 90023474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023454:	eb08 0c00 	add.w	ip, r8, r0
90023458:	f818 0000 	ldrb.w	r0, [r8, r0]
9002345c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023460:	900a      	str	r0, [sp, #40]	; 0x28
90023462:	0e00      	lsrs	r0, r0, #24
90023464:	9013      	str	r0, [sp, #76]	; 0x4c
90023466:	f89c 0001 	ldrb.w	r0, [ip, #1]
9002346a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9002346e:	900f      	str	r0, [sp, #60]	; 0x3c
90023470:	0e00      	lsrs	r0, r0, #24
90023472:	9016      	str	r0, [sp, #88]	; 0x58
90023474:	b292      	uxth	r2, r2
90023476:	9815      	ldr	r0, [sp, #84]	; 0x54
90023478:	b289      	uxth	r1, r1
9002347a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9002347c:	fb02 f901 	mul.w	r9, r2, r1
90023480:	0112      	lsls	r2, r2, #4
90023482:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023486:	eba2 0809 	sub.w	r8, r2, r9
9002348a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002348e:	b289      	uxth	r1, r1
90023490:	fa1f f888 	uxth.w	r8, r8
90023494:	1a52      	subs	r2, r2, r1
90023496:	fb08 f000 	mul.w	r0, r8, r0
9002349a:	b292      	uxth	r2, r2
9002349c:	fb02 000e 	mla	r0, r2, lr, r0
900234a0:	fb01 0004 	mla	r0, r1, r4, r0
900234a4:	9c16      	ldr	r4, [sp, #88]	; 0x58
900234a6:	fb09 0004 	mla	r0, r9, r4, r0
900234aa:	f3c0 2007 	ubfx	r0, r0, #8, #8
900234ae:	2800      	cmp	r0, #0
900234b0:	f000 80fa 	beq.w	900236a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900234b4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900234b8:	d01b      	beq.n	900234f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900234ba:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900234be:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900234c2:	fb0e fa0a 	mul.w	sl, lr, sl
900234c6:	fb0e fe03 	mul.w	lr, lr, r3
900234ca:	ea4f 231a 	mov.w	r3, sl, lsr #8
900234ce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900234d2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900234d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900234da:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900234de:	4453      	add	r3, sl
900234e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900234e4:	0a1b      	lsrs	r3, r3, #8
900234e6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900234ea:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900234ee:	ea43 030c 	orr.w	r3, r3, ip
900234f2:	9c15      	ldr	r4, [sp, #84]	; 0x54
900234f4:	2cff      	cmp	r4, #255	; 0xff
900234f6:	d021      	beq.n	9002353c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900234f8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900234fa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900234fe:	9c15      	ldr	r4, [sp, #84]	; 0x54
90023500:	fb04 fb0b 	mul.w	fp, r4, fp
90023504:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023506:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002350a:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002350c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023510:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023514:	fb04 fa0a 	mul.w	sl, r4, sl
90023518:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002351c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023520:	44de      	add	lr, fp
90023522:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023526:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002352a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002352e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023532:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023536:	ea4e 040a 	orr.w	r4, lr, sl
9002353a:	940e      	str	r4, [sp, #56]	; 0x38
9002353c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9002353e:	2cff      	cmp	r4, #255	; 0xff
90023540:	d021      	beq.n	90023586 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90023542:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023544:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023548:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9002354a:	fb04 fb0b 	mul.w	fp, r4, fp
9002354e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023550:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023554:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023556:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002355a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002355e:	fb04 fa0a 	mul.w	sl, r4, sl
90023562:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023566:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002356a:	44de      	add	lr, fp
9002356c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023570:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023574:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023578:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002357c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023580:	ea4e 040a 	orr.w	r4, lr, sl
90023584:	940a      	str	r4, [sp, #40]	; 0x28
90023586:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023588:	2cff      	cmp	r4, #255	; 0xff
9002358a:	d021      	beq.n	900235d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
9002358c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002358e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023592:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023594:	fb04 fb0b 	mul.w	fp, r4, fp
90023598:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002359a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002359e:	9c16      	ldr	r4, [sp, #88]	; 0x58
900235a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900235a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900235a8:	fb04 fa0a 	mul.w	sl, r4, sl
900235ac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900235b0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900235b4:	44de      	add	lr, fp
900235b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900235ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900235be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900235c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900235c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900235ca:	ea4e 040a 	orr.w	r4, lr, sl
900235ce:	940f      	str	r4, [sp, #60]	; 0x3c
900235d0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900235d2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
900235d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900235da:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900235de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900235e0:	fb08 fc0c 	mul.w	ip, r8, ip
900235e4:	fb02 cc0e 	mla	ip, r2, lr, ip
900235e8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
900235ec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900235ee:	fb01 cc0e 	mla	ip, r1, lr, ip
900235f2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
900235f6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900235f8:	fb09 cc0e 	mla	ip, r9, lr, ip
900235fc:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90023600:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90023602:	fb08 f80e 	mul.w	r8, r8, lr
90023606:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002360a:	fb02 8303 	mla	r3, r2, r3, r8
9002360e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90023610:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023614:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90023618:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002361a:	fb01 330a 	mla	r3, r1, sl, r3
9002361e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
90023622:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90023624:	fb09 3901 	mla	r9, r9, r1, r3
90023628:	883b      	ldrh	r3, [r7, #0]
9002362a:	4342      	muls	r2, r0
9002362c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023630:	1c50      	adds	r0, r2, #1
90023632:	1219      	asrs	r1, r3, #8
90023634:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90023638:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9002363c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90023640:	ea4c 0c09 	orr.w	ip, ip, r9
90023644:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90023648:	ea4f 421c 	mov.w	r2, ip, lsr #16
9002364c:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90023650:	b2c0      	uxtb	r0, r0
90023652:	fb12 f204 	smulbb	r2, r2, r4
90023656:	fa5f fc8c 	uxtb.w	ip, ip
9002365a:	fb1e fe04 	smulbb	lr, lr, r4
9002365e:	fb01 2100 	mla	r1, r1, r0, r2
90023662:	10da      	asrs	r2, r3, #3
90023664:	fb1c fc04 	smulbb	ip, ip, r4
90023668:	00db      	lsls	r3, r3, #3
9002366a:	b289      	uxth	r1, r1
9002366c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90023670:	b2db      	uxtb	r3, r3
90023672:	fb02 e200 	mla	r2, r2, r0, lr
90023676:	fb03 c300 	mla	r3, r3, r0, ip
9002367a:	b292      	uxth	r2, r2
9002367c:	fa1f fc83 	uxth.w	ip, r3
90023680:	1c4b      	adds	r3, r1, #1
90023682:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90023686:	f10c 0301 	add.w	r3, ip, #1
9002368a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002368e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90023692:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023696:	430b      	orrs	r3, r1
90023698:	1c51      	adds	r1, r2, #1
9002369a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002369e:	0952      	lsrs	r2, r2, #5
900236a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900236a4:	4313      	orrs	r3, r2
900236a6:	803b      	strh	r3, [r7, #0]
900236a8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900236aa:	3702      	adds	r7, #2
900236ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900236ae:	441a      	add	r2, r3
900236b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900236b2:	441d      	add	r5, r3
900236b4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900236b6:	9229      	str	r2, [sp, #164]	; 0xa4
900236b8:	3b01      	subs	r3, #1
900236ba:	931a      	str	r3, [sp, #104]	; 0x68
900236bc:	e694      	b.n	900233e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900236be:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900236c0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900236c2:	441c      	add	r4, r3
900236c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900236c6:	441d      	add	r5, r3
900236c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900236ca:	9429      	str	r4, [sp, #164]	; 0xa4
900236cc:	3b01      	subs	r3, #1
900236ce:	9309      	str	r3, [sp, #36]	; 0x24
900236d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900236d2:	3302      	adds	r3, #2
900236d4:	930c      	str	r3, [sp, #48]	; 0x30
900236d6:	e667      	b.n	900233a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900236d8:	d024      	beq.n	90023724 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
900236da:	9b09      	ldr	r3, [sp, #36]	; 0x24
900236dc:	982b      	ldr	r0, [sp, #172]	; 0xac
900236de:	3b01      	subs	r3, #1
900236e0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900236e2:	fb00 4003 	mla	r0, r0, r3, r4
900236e6:	1400      	asrs	r0, r0, #16
900236e8:	f53f ae7b 	bmi.w	900233e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900236ec:	3901      	subs	r1, #1
900236ee:	4288      	cmp	r0, r1
900236f0:	f6bf ae77 	bge.w	900233e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900236f4:	992c      	ldr	r1, [sp, #176]	; 0xb0
900236f6:	fb01 5303 	mla	r3, r1, r3, r5
900236fa:	141b      	asrs	r3, r3, #16
900236fc:	f53f ae71 	bmi.w	900233e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023700:	3a01      	subs	r2, #1
90023702:	4293      	cmp	r3, r2
90023704:	f6bf ae6d 	bge.w	900233e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023708:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9002370c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
90023710:	f1bb 0f00 	cmp.w	fp, #0
90023714:	dc70      	bgt.n	900237f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90023716:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023718:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002371c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002371e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023722:	930c      	str	r3, [sp, #48]	; 0x30
90023724:	9b19      	ldr	r3, [sp, #100]	; 0x64
90023726:	2b00      	cmp	r3, #0
90023728:	f340 81be 	ble.w	90023aa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9002372c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023730:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023732:	ee30 0a04 	vadd.f32	s0, s0, s8
90023736:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002373a:	eef0 6a62 	vmov.f32	s13, s5
9002373e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023742:	ee31 1a05 	vadd.f32	s2, s2, s10
90023746:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002374a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
9002374e:	eef0 6a43 	vmov.f32	s13, s6
90023752:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023756:	ee16 5a90 	vmov	r5, s13
9002375a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002375e:	ee61 7a27 	vmul.f32	s15, s2, s15
90023762:	ee77 2a62 	vsub.f32	s5, s14, s5
90023766:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002376a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002376e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023772:	ee12 2a90 	vmov	r2, s5
90023776:	eef0 2a47 	vmov.f32	s5, s14
9002377a:	fb92 f3f3 	sdiv	r3, r2, r3
9002377e:	ee13 2a10 	vmov	r2, s6
90023782:	932b      	str	r3, [sp, #172]	; 0xac
90023784:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023786:	eeb0 3a67 	vmov.f32	s6, s15
9002378a:	fb92 f3f3 	sdiv	r3, r2, r3
9002378e:	932c      	str	r3, [sp, #176]	; 0xb0
90023790:	9b19      	ldr	r3, [sp, #100]	; 0x64
90023792:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90023794:	3b01      	subs	r3, #1
90023796:	9319      	str	r3, [sp, #100]	; 0x64
90023798:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002379a:	bf08      	it	eq
9002379c:	4613      	moveq	r3, r2
9002379e:	9309      	str	r3, [sp, #36]	; 0x24
900237a0:	e5f4      	b.n	9002338c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900237a2:	2900      	cmp	r1, #0
900237a4:	f43f ae66 	beq.w	90023474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900237a8:	f818 0000 	ldrb.w	r0, [r8, r0]
900237ac:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900237b0:	900a      	str	r0, [sp, #40]	; 0x28
900237b2:	0e00      	lsrs	r0, r0, #24
900237b4:	9013      	str	r0, [sp, #76]	; 0x4c
900237b6:	e65d      	b.n	90023474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900237b8:	f113 0801 	adds.w	r8, r3, #1
900237bc:	f53f af74 	bmi.w	900236a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900237c0:	4540      	cmp	r0, r8
900237c2:	f6ff af71 	blt.w	900236a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900237c6:	f11c 0801 	adds.w	r8, ip, #1
900237ca:	f53f af6d 	bmi.w	900236a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900237ce:	45c6      	cmp	lr, r8
900237d0:	f6ff af6a 	blt.w	900236a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900237d4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
900237d6:	b200      	sxth	r0, r0
900237d8:	9302      	str	r3, [sp, #8]
900237da:	fa0f f38e 	sxth.w	r3, lr
900237de:	9000      	str	r0, [sp, #0]
900237e0:	9301      	str	r3, [sp, #4]
900237e2:	4633      	mov	r3, r6
900237e4:	981d      	ldr	r0, [sp, #116]	; 0x74
900237e6:	e9cd 1405 	strd	r1, r4, [sp, #20]
900237ea:	e9cd c203 	strd	ip, r2, [sp, #12]
900237ee:	4639      	mov	r1, r7
900237f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
900237f2:	f7ff fc63 	bl	900230bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
900237f6:	e757      	b.n	900236a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900237f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900237fa:	f3c5 3003 	ubfx	r0, r5, #12, #4
900237fe:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023800:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023804:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90023806:	1427      	asrs	r7, r4, #16
90023808:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002380a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002380e:	142b      	asrs	r3, r5, #16
90023810:	fb01 7303 	mla	r3, r1, r3, r7
90023814:	18e7      	adds	r7, r4, r3
90023816:	5ce3      	ldrb	r3, [r4, r3]
90023818:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002381c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023820:	2a00      	cmp	r2, #0
90023822:	f000 8137 	beq.w	90023a94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90023826:	f897 e001 	ldrb.w	lr, [r7, #1]
9002382a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002382e:	9410      	str	r4, [sp, #64]	; 0x40
90023830:	0e24      	lsrs	r4, r4, #24
90023832:	9417      	str	r4, [sp, #92]	; 0x5c
90023834:	b170      	cbz	r0, 90023854 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023836:	eb07 0e01 	add.w	lr, r7, r1
9002383a:	5c79      	ldrb	r1, [r7, r1]
9002383c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023840:	910b      	str	r1, [sp, #44]	; 0x2c
90023842:	0e09      	lsrs	r1, r1, #24
90023844:	9114      	str	r1, [sp, #80]	; 0x50
90023846:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002384a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002384e:	9111      	str	r1, [sp, #68]	; 0x44
90023850:	0e09      	lsrs	r1, r1, #24
90023852:	9118      	str	r1, [sp, #96]	; 0x60
90023854:	b292      	uxth	r2, r2
90023856:	9917      	ldr	r1, [sp, #92]	; 0x5c
90023858:	b280      	uxth	r0, r0
9002385a:	9c14      	ldr	r4, [sp, #80]	; 0x50
9002385c:	fb02 f800 	mul.w	r8, r2, r0
90023860:	0112      	lsls	r2, r2, #4
90023862:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90023866:	eba2 0e08 	sub.w	lr, r2, r8
9002386a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002386e:	b280      	uxth	r0, r0
90023870:	fa1f fe8e 	uxth.w	lr, lr
90023874:	1a12      	subs	r2, r2, r0
90023876:	fb0e f101 	mul.w	r1, lr, r1
9002387a:	b292      	uxth	r2, r2
9002387c:	fb02 110c 	mla	r1, r2, ip, r1
90023880:	fb00 1104 	mla	r1, r0, r4, r1
90023884:	9c18      	ldr	r4, [sp, #96]	; 0x60
90023886:	fb08 1104 	mla	r1, r8, r4, r1
9002388a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002388e:	2900      	cmp	r1, #0
90023890:	f000 80f5 	beq.w	90023a7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90023894:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90023898:	d019      	beq.n	900238ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
9002389a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002389e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900238a2:	fb0c fa0a 	mul.w	sl, ip, sl
900238a6:	fb0c fc03 	mul.w	ip, ip, r3
900238aa:	ea4f 231a 	mov.w	r3, sl, lsr #8
900238ae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900238b2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900238b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900238ba:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900238be:	4453      	add	r3, sl
900238c0:	0a3f      	lsrs	r7, r7, #8
900238c2:	0a1b      	lsrs	r3, r3, #8
900238c4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900238c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900238cc:	433b      	orrs	r3, r7
900238ce:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900238d0:	2cff      	cmp	r4, #255	; 0xff
900238d2:	d020      	beq.n	90023916 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
900238d4:	9c10      	ldr	r4, [sp, #64]	; 0x40
900238d6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900238da:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900238dc:	4367      	muls	r7, r4
900238de:	9c10      	ldr	r4, [sp, #64]	; 0x40
900238e0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900238e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900238e8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900238ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900238ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900238f2:	fb04 fa0a 	mul.w	sl, r4, sl
900238f6:	44bc      	add	ip, r7
900238f8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900238fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023900:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023904:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023908:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002390c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023910:	ea4c 040a 	orr.w	r4, ip, sl
90023914:	9410      	str	r4, [sp, #64]	; 0x40
90023916:	9c14      	ldr	r4, [sp, #80]	; 0x50
90023918:	2cff      	cmp	r4, #255	; 0xff
9002391a:	d020      	beq.n	9002395e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
9002391c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002391e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90023922:	9c14      	ldr	r4, [sp, #80]	; 0x50
90023924:	4367      	muls	r7, r4
90023926:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023928:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002392c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023930:	9c14      	ldr	r4, [sp, #80]	; 0x50
90023932:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023936:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002393a:	fb04 fa0a 	mul.w	sl, r4, sl
9002393e:	44bc      	add	ip, r7
90023940:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023944:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023948:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002394c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023950:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023954:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023958:	ea4c 040a 	orr.w	r4, ip, sl
9002395c:	940b      	str	r4, [sp, #44]	; 0x2c
9002395e:	9c18      	ldr	r4, [sp, #96]	; 0x60
90023960:	2cff      	cmp	r4, #255	; 0xff
90023962:	d020      	beq.n	900239a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90023964:	9c11      	ldr	r4, [sp, #68]	; 0x44
90023966:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002396a:	9c18      	ldr	r4, [sp, #96]	; 0x60
9002396c:	4367      	muls	r7, r4
9002396e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90023970:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023974:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023978:	9c18      	ldr	r4, [sp, #96]	; 0x60
9002397a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002397e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023982:	fb04 fa0a 	mul.w	sl, r4, sl
90023986:	44bc      	add	ip, r7
90023988:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002398c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023990:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023994:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023998:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002399c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900239a0:	ea4c 040a 	orr.w	r4, ip, sl
900239a4:	9411      	str	r4, [sp, #68]	; 0x44
900239a6:	9c10      	ldr	r4, [sp, #64]	; 0x40
900239a8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900239ac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900239b0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900239b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900239b6:	fb0e f707 	mul.w	r7, lr, r7
900239ba:	fb02 770c 	mla	r7, r2, ip, r7
900239be:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900239c2:	9c11      	ldr	r4, [sp, #68]	; 0x44
900239c4:	fb00 770c 	mla	r7, r0, ip, r7
900239c8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900239cc:	9c10      	ldr	r4, [sp, #64]	; 0x40
900239ce:	fb08 770c 	mla	r7, r8, ip, r7
900239d2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
900239d6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900239d8:	fb0e fe0c 	mul.w	lr, lr, ip
900239dc:	0a3f      	lsrs	r7, r7, #8
900239de:	fb02 e303 	mla	r3, r2, r3, lr
900239e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900239e4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900239e8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
900239ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
900239ee:	fb00 330a 	mla	r3, r0, sl, r3
900239f2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
900239f6:	f8b9 0000 	ldrh.w	r0, [r9]
900239fa:	fb08 3c0c 	mla	ip, r8, ip, r3
900239fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90023a00:	1202      	asrs	r2, r0, #8
90023a02:	434b      	muls	r3, r1
90023a04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023a08:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90023a0c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023a10:	1c59      	adds	r1, r3, #1
90023a12:	ea47 070c 	orr.w	r7, r7, ip
90023a16:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90023a1a:	0c3b      	lsrs	r3, r7, #16
90023a1c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90023a20:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90023a24:	b2ff      	uxtb	r7, r7
90023a26:	fb13 f304 	smulbb	r3, r3, r4
90023a2a:	b2c9      	uxtb	r1, r1
90023a2c:	fb1c fc04 	smulbb	ip, ip, r4
90023a30:	fb02 3201 	mla	r2, r2, r1, r3
90023a34:	10c3      	asrs	r3, r0, #3
90023a36:	fb17 f704 	smulbb	r7, r7, r4
90023a3a:	00c0      	lsls	r0, r0, #3
90023a3c:	b292      	uxth	r2, r2
90023a3e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90023a42:	b2c0      	uxtb	r0, r0
90023a44:	fb03 c301 	mla	r3, r3, r1, ip
90023a48:	f102 0c01 	add.w	ip, r2, #1
90023a4c:	fb00 7001 	mla	r0, r0, r1, r7
90023a50:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90023a54:	b280      	uxth	r0, r0
90023a56:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
90023a5a:	b29b      	uxth	r3, r3
90023a5c:	1c42      	adds	r2, r0, #1
90023a5e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023a62:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023a66:	ea42 020c 	orr.w	r2, r2, ip
90023a6a:	f103 0c01 	add.w	ip, r3, #1
90023a6e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90023a72:	095b      	lsrs	r3, r3, #5
90023a74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023a78:	431a      	orrs	r2, r3
90023a7a:	f8a9 2000 	strh.w	r2, [r9]
90023a7e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90023a80:	f109 0902 	add.w	r9, r9, #2
90023a84:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90023a86:	f10b 3bff 	add.w	fp, fp, #4294967295
90023a8a:	441a      	add	r2, r3
90023a8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023a8e:	9229      	str	r2, [sp, #164]	; 0xa4
90023a90:	441d      	add	r5, r3
90023a92:	e63d      	b.n	90023710 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90023a94:	2800      	cmp	r0, #0
90023a96:	f43f aedd 	beq.w	90023854 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023a9a:	5c79      	ldrb	r1, [r7, r1]
90023a9c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023aa0:	910b      	str	r1, [sp, #44]	; 0x2c
90023aa2:	0e09      	lsrs	r1, r1, #24
90023aa4:	9114      	str	r1, [sp, #80]	; 0x50
90023aa6:	e6d5      	b.n	90023854 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023aa8:	b01f      	add	sp, #124	; 0x7c
90023aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023aae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90023aae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023ab2:	b089      	sub	sp, #36	; 0x24
90023ab4:	9101      	str	r1, [sp, #4]
90023ab6:	9801      	ldr	r0, [sp, #4]
90023ab8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
90023abc:	8800      	ldrh	r0, [r0, #0]
90023abe:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
90023ac2:	1206      	asrs	r6, r0, #8
90023ac4:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90023ac8:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
90023acc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90023ad0:	9602      	str	r6, [sp, #8]
90023ad2:	10c6      	asrs	r6, r0, #3
90023ad4:	00c0      	lsls	r0, r0, #3
90023ad6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90023ada:	b2c0      	uxtb	r0, r0
90023adc:	9603      	str	r6, [sp, #12]
90023ade:	9004      	str	r0, [sp, #16]
90023ae0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
90023ae4:	fb07 100c 	mla	r0, r7, ip, r1
90023ae8:	2f00      	cmp	r7, #0
90023aea:	eb02 0e00 	add.w	lr, r2, r0
90023aee:	f2c0 810a 	blt.w	90023d06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90023af2:	45b8      	cmp	r8, r7
90023af4:	f340 8107 	ble.w	90023d06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90023af8:	2900      	cmp	r1, #0
90023afa:	f2c0 8102 	blt.w	90023d02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90023afe:	458c      	cmp	ip, r1
90023b00:	f340 80ff 	ble.w	90023d02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90023b04:	5c12      	ldrb	r2, [r2, r0]
90023b06:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90023b0a:	1c4a      	adds	r2, r1, #1
90023b0c:	f100 80fe 	bmi.w	90023d0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023b10:	4594      	cmp	ip, r2
90023b12:	f340 80fb 	ble.w	90023d0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023b16:	2d00      	cmp	r5, #0
90023b18:	f000 80fa 	beq.w	90023d10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90023b1c:	f89e 2001 	ldrb.w	r2, [lr, #1]
90023b20:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90023b24:	3701      	adds	r7, #1
90023b26:	f100 80f7 	bmi.w	90023d18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90023b2a:	45b8      	cmp	r8, r7
90023b2c:	f340 80f4 	ble.w	90023d18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90023b30:	2c00      	cmp	r4, #0
90023b32:	f000 80f4 	beq.w	90023d1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90023b36:	2900      	cmp	r1, #0
90023b38:	eb0e 020c 	add.w	r2, lr, ip
90023b3c:	f2c0 80ea 	blt.w	90023d14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90023b40:	458c      	cmp	ip, r1
90023b42:	f340 80e7 	ble.w	90023d14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90023b46:	f81e 700c 	ldrb.w	r7, [lr, ip]
90023b4a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90023b4e:	3101      	adds	r1, #1
90023b50:	f100 80e8 	bmi.w	90023d24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90023b54:	458c      	cmp	ip, r1
90023b56:	f340 80e5 	ble.w	90023d24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90023b5a:	2d00      	cmp	r5, #0
90023b5c:	f000 80e4 	beq.w	90023d28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90023b60:	7852      	ldrb	r2, [r2, #1]
90023b62:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90023b66:	0e0b      	lsrs	r3, r1, #24
90023b68:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
90023b6c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90023b70:	9300      	str	r3, [sp, #0]
90023b72:	b2a4      	uxth	r4, r4
90023b74:	b2ab      	uxth	r3, r5
90023b76:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
90023b7a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90023b7e:	fb03 f904 	mul.w	r9, r3, r4
90023b82:	011b      	lsls	r3, r3, #4
90023b84:	fb0a f505 	mul.w	r5, sl, r5
90023b88:	ea4f 6817 	mov.w	r8, r7, lsr #24
90023b8c:	eba3 0e09 	sub.w	lr, r3, r9
90023b90:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
90023b94:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
90023b98:	0a28      	lsrs	r0, r5, #8
90023b9a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
90023b9e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90023ba2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90023ba6:	fb0a f303 	mul.w	r3, sl, r3
90023baa:	fb08 f707 	mul.w	r7, r8, r7
90023bae:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90023bb2:	4405      	add	r5, r0
90023bb4:	fb08 fc0c 	mul.w	ip, r8, ip
90023bb8:	b2a4      	uxth	r4, r4
90023bba:	0a2d      	lsrs	r5, r5, #8
90023bbc:	fa1f fe8e 	uxth.w	lr, lr
90023bc0:	1b12      	subs	r2, r2, r4
90023bc2:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
90023bc6:	b292      	uxth	r2, r2
90023bc8:	9005      	str	r0, [sp, #20]
90023bca:	f503 7080 	add.w	r0, r3, #256	; 0x100
90023bce:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90023bd2:	ea4f 201c 	mov.w	r0, ip, lsr #8
90023bd6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023bda:	0a1b      	lsrs	r3, r3, #8
90023bdc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90023be0:	9306      	str	r3, [sp, #24]
90023be2:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90023be6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90023bea:	4460      	add	r0, ip
90023bec:	fb0b f303 	mul.w	r3, fp, r3
90023bf0:	fb0b f606 	mul.w	r6, fp, r6
90023bf4:	0a00      	lsrs	r0, r0, #8
90023bf6:	0a1d      	lsrs	r5, r3, #8
90023bf8:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
90023bfc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90023c00:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023c04:	441d      	add	r5, r3
90023c06:	f506 7380 	add.w	r3, r6, #256	; 0x100
90023c0a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90023c0e:	f507 7380 	add.w	r3, r7, #256	; 0x100
90023c12:	0a2d      	lsrs	r5, r5, #8
90023c14:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90023c18:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
90023c1c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023c20:	0a36      	lsrs	r6, r6, #8
90023c22:	0a1b      	lsrs	r3, r3, #8
90023c24:	fb05 f50e 	mul.w	r5, r5, lr
90023c28:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90023c2c:	9307      	str	r3, [sp, #28]
90023c2e:	0e0b      	lsrs	r3, r1, #24
90023c30:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023c34:	fb0e f606 	mul.w	r6, lr, r6
90023c38:	435f      	muls	r7, r3
90023c3a:	4359      	muls	r1, r3
90023c3c:	9b05      	ldr	r3, [sp, #20]
90023c3e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023c42:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023c46:	fb03 5502 	mla	r5, r3, r2, r5
90023c4a:	9b06      	ldr	r3, [sp, #24]
90023c4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023c50:	fb0e fe0b 	mul.w	lr, lr, fp
90023c54:	44bc      	add	ip, r7
90023c56:	f501 7780 	add.w	r7, r1, #256	; 0x100
90023c5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023c5e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90023c62:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023c66:	0a09      	lsrs	r1, r1, #8
90023c68:	fb0c 5509 	mla	r5, ip, r9, r5
90023c6c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023c70:	fb00 5504 	mla	r5, r0, r4, r5
90023c74:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
90023c78:	9b07      	ldr	r3, [sp, #28]
90023c7a:	fb02 6000 	mla	r0, r2, r0, r6
90023c7e:	0a2d      	lsrs	r5, r5, #8
90023c80:	fb02 e20a 	mla	r2, r2, sl, lr
90023c84:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023c88:	fb09 0001 	mla	r0, r9, r1, r0
90023c8c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023c90:	fb04 0003 	mla	r0, r4, r3, r0
90023c94:	9b00      	ldr	r3, [sp, #0]
90023c96:	fb04 2408 	mla	r4, r4, r8, r2
90023c9a:	9a04      	ldr	r2, [sp, #16]
90023c9c:	0a00      	lsrs	r0, r0, #8
90023c9e:	fb09 4903 	mla	r9, r9, r3, r4
90023ca2:	9b02      	ldr	r3, [sp, #8]
90023ca4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90023ca8:	ea6f 2929 	mvn.w	r9, r9, asr #8
90023cac:	4305      	orrs	r5, r0
90023cae:	fa5f f989 	uxtb.w	r9, r9
90023cb2:	fb03 f109 	mul.w	r1, r3, r9
90023cb6:	9b03      	ldr	r3, [sp, #12]
90023cb8:	fb03 f309 	mul.w	r3, r3, r9
90023cbc:	fb02 f909 	mul.w	r9, r2, r9
90023cc0:	1c4a      	adds	r2, r1, #1
90023cc2:	1c58      	adds	r0, r3, #1
90023cc4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023cc8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90023ccc:	0c2a      	lsrs	r2, r5, #16
90023cce:	0a2b      	lsrs	r3, r5, #8
90023cd0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90023cd4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023cd8:	0212      	lsls	r2, r2, #8
90023cda:	00db      	lsls	r3, r3, #3
90023cdc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90023ce0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023ce4:	4313      	orrs	r3, r2
90023ce6:	f109 0201 	add.w	r2, r9, #1
90023cea:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90023cee:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90023cf2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90023cf6:	431d      	orrs	r5, r3
90023cf8:	9b01      	ldr	r3, [sp, #4]
90023cfa:	801d      	strh	r5, [r3, #0]
90023cfc:	b009      	add	sp, #36	; 0x24
90023cfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023d02:	2000      	movs	r0, #0
90023d04:	e701      	b.n	90023b0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90023d06:	2600      	movs	r6, #0
90023d08:	4630      	mov	r0, r6
90023d0a:	e70b      	b.n	90023b24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023d0c:	2600      	movs	r6, #0
90023d0e:	e709      	b.n	90023b24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023d10:	462e      	mov	r6, r5
90023d12:	e707      	b.n	90023b24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023d14:	2700      	movs	r7, #0
90023d16:	e71a      	b.n	90023b4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90023d18:	2100      	movs	r1, #0
90023d1a:	460f      	mov	r7, r1
90023d1c:	e723      	b.n	90023b66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023d1e:	4621      	mov	r1, r4
90023d20:	4627      	mov	r7, r4
90023d22:	e720      	b.n	90023b66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023d24:	2100      	movs	r1, #0
90023d26:	e71e      	b.n	90023b66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023d28:	4629      	mov	r1, r5
90023d2a:	e71c      	b.n	90023b66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90023d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023d30:	b09b      	sub	sp, #108	; 0x6c
90023d32:	9218      	str	r2, [sp, #96]	; 0x60
90023d34:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90023d36:	9019      	str	r0, [sp, #100]	; 0x64
90023d38:	9116      	str	r1, [sp, #88]	; 0x58
90023d3a:	6850      	ldr	r0, [r2, #4]
90023d3c:	9307      	str	r3, [sp, #28]
90023d3e:	6812      	ldr	r2, [r2, #0]
90023d40:	9d26      	ldr	r5, [sp, #152]	; 0x98
90023d42:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90023d46:	fb00 1303 	mla	r3, r0, r3, r1
90023d4a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023d4e:	930a      	str	r3, [sp, #40]	; 0x28
90023d50:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023d52:	681b      	ldr	r3, [r3, #0]
90023d54:	930f      	str	r3, [sp, #60]	; 0x3c
90023d56:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023d58:	685e      	ldr	r6, [r3, #4]
90023d5a:	3604      	adds	r6, #4
90023d5c:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023d5e:	2b00      	cmp	r3, #0
90023d60:	dc03      	bgt.n	90023d6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90023d62:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023d64:	2b00      	cmp	r3, #0
90023d66:	f340 8373 	ble.w	90024450 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023d6a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023d6c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023d70:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023d74:	1e48      	subs	r0, r1, #1
90023d76:	1e57      	subs	r7, r2, #1
90023d78:	9b07      	ldr	r3, [sp, #28]
90023d7a:	2b00      	cmp	r3, #0
90023d7c:	f340 818f 	ble.w	9002409e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90023d80:	9c25      	ldr	r4, [sp, #148]	; 0x94
90023d82:	142b      	asrs	r3, r5, #16
90023d84:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023d88:	d406      	bmi.n	90023d98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023d8a:	4584      	cmp	ip, r0
90023d8c:	da04      	bge.n	90023d98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023d8e:	2b00      	cmp	r3, #0
90023d90:	db02      	blt.n	90023d98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023d92:	42bb      	cmp	r3, r7
90023d94:	f2c0 8184 	blt.w	900240a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90023d98:	f11c 0c01 	adds.w	ip, ip, #1
90023d9c:	f100 8172 	bmi.w	90024084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023da0:	4561      	cmp	r1, ip
90023da2:	f2c0 816f 	blt.w	90024084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023da6:	3301      	adds	r3, #1
90023da8:	f100 816c 	bmi.w	90024084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023dac:	429a      	cmp	r2, r3
90023dae:	f2c0 8169 	blt.w	90024084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023db2:	9b07      	ldr	r3, [sp, #28]
90023db4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90023db6:	9317      	str	r3, [sp, #92]	; 0x5c
90023db8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023dba:	2b00      	cmp	r3, #0
90023dbc:	f340 818e 	ble.w	900240dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90023dc0:	9b25      	ldr	r3, [sp, #148]	; 0x94
90023dc2:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023dc6:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023dca:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023dce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023dd0:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90023dd4:	9b25      	ldr	r3, [sp, #148]	; 0x94
90023dd6:	141b      	asrs	r3, r3, #16
90023dd8:	f100 81d1 	bmi.w	9002417e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023ddc:	f101 38ff 	add.w	r8, r1, #4294967295
90023de0:	4543      	cmp	r3, r8
90023de2:	f280 81cc 	bge.w	9002417e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023de6:	f1bc 0f00 	cmp.w	ip, #0
90023dea:	f2c0 81c8 	blt.w	9002417e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023dee:	f10e 38ff 	add.w	r8, lr, #4294967295
90023df2:	45c4      	cmp	ip, r8
90023df4:	f280 81c3 	bge.w	9002417e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023df8:	b209      	sxth	r1, r1
90023dfa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90023dfc:	fb0c 3301 	mla	r3, ip, r1, r3
90023e00:	eb04 0803 	add.w	r8, r4, r3
90023e04:	5ce3      	ldrb	r3, [r4, r3]
90023e06:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023e0a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90023e0e:	2a00      	cmp	r2, #0
90023e10:	f000 81aa 	beq.w	90024168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90023e14:	f898 c001 	ldrb.w	ip, [r8, #1]
90023e18:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023e1c:	940b      	str	r4, [sp, #44]	; 0x2c
90023e1e:	0e24      	lsrs	r4, r4, #24
90023e20:	9412      	str	r4, [sp, #72]	; 0x48
90023e22:	b178      	cbz	r0, 90023e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023e24:	eb08 0c01 	add.w	ip, r8, r1
90023e28:	f818 1001 	ldrb.w	r1, [r8, r1]
90023e2c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023e30:	9108      	str	r1, [sp, #32]
90023e32:	0e09      	lsrs	r1, r1, #24
90023e34:	9110      	str	r1, [sp, #64]	; 0x40
90023e36:	f89c 1001 	ldrb.w	r1, [ip, #1]
90023e3a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023e3e:	910c      	str	r1, [sp, #48]	; 0x30
90023e40:	0e09      	lsrs	r1, r1, #24
90023e42:	9113      	str	r1, [sp, #76]	; 0x4c
90023e44:	b292      	uxth	r2, r2
90023e46:	9912      	ldr	r1, [sp, #72]	; 0x48
90023e48:	b280      	uxth	r0, r0
90023e4a:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023e4c:	fb02 f900 	mul.w	r9, r2, r0
90023e50:	0112      	lsls	r2, r2, #4
90023e52:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023e56:	eba2 0809 	sub.w	r8, r2, r9
90023e5a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90023e5e:	b280      	uxth	r0, r0
90023e60:	fa1f f888 	uxth.w	r8, r8
90023e64:	1a12      	subs	r2, r2, r0
90023e66:	fb08 f101 	mul.w	r1, r8, r1
90023e6a:	b292      	uxth	r2, r2
90023e6c:	fb02 110e 	mla	r1, r2, lr, r1
90023e70:	fb00 1104 	mla	r1, r0, r4, r1
90023e74:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023e76:	fb09 1104 	mla	r1, r9, r4, r1
90023e7a:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023e7e:	2900      	cmp	r1, #0
90023e80:	f000 80f5 	beq.w	9002406e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023e84:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023e88:	d01b      	beq.n	90023ec2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023e8a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90023e8e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023e92:	fb0e fa0a 	mul.w	sl, lr, sl
90023e96:	fb0e fe03 	mul.w	lr, lr, r3
90023e9a:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023e9e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023ea2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90023ea6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023eaa:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023eae:	4453      	add	r3, sl
90023eb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023eb4:	0a1b      	lsrs	r3, r3, #8
90023eb6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023eba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023ebe:	ea43 030c 	orr.w	r3, r3, ip
90023ec2:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023ec4:	2cff      	cmp	r4, #255	; 0xff
90023ec6:	d021      	beq.n	90023f0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90023ec8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023eca:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023ece:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023ed0:	fb04 fb0b 	mul.w	fp, r4, fp
90023ed4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023ed6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023eda:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023edc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023ee0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023ee4:	fb04 fa0a 	mul.w	sl, r4, sl
90023ee8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023eec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023ef0:	44de      	add	lr, fp
90023ef2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023ef6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023efa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023efe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023f02:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023f06:	ea4e 040a 	orr.w	r4, lr, sl
90023f0a:	940b      	str	r4, [sp, #44]	; 0x2c
90023f0c:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023f0e:	2cff      	cmp	r4, #255	; 0xff
90023f10:	d021      	beq.n	90023f56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90023f12:	9c08      	ldr	r4, [sp, #32]
90023f14:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023f18:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023f1a:	fb04 fb0b 	mul.w	fp, r4, fp
90023f1e:	9c08      	ldr	r4, [sp, #32]
90023f20:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023f24:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023f26:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023f2a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023f2e:	fb04 fa0a 	mul.w	sl, r4, sl
90023f32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023f36:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023f3a:	44de      	add	lr, fp
90023f3c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023f40:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023f44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023f48:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023f4c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023f50:	ea4e 040a 	orr.w	r4, lr, sl
90023f54:	9408      	str	r4, [sp, #32]
90023f56:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023f58:	2cff      	cmp	r4, #255	; 0xff
90023f5a:	d021      	beq.n	90023fa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90023f5c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90023f5e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023f62:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023f64:	fb04 fb0b 	mul.w	fp, r4, fp
90023f68:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90023f6a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023f6e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023f70:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023f74:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023f78:	fb04 fa0a 	mul.w	sl, r4, sl
90023f7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023f80:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023f84:	44de      	add	lr, fp
90023f86:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023f8a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023f8e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023f92:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023f96:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023f9a:	ea4e 040a 	orr.w	r4, lr, sl
90023f9e:	940c      	str	r4, [sp, #48]	; 0x30
90023fa0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023fa2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90023fa6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023faa:	43c9      	mvns	r1, r1
90023fac:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023fb0:	9c08      	ldr	r4, [sp, #32]
90023fb2:	fb08 fc0c 	mul.w	ip, r8, ip
90023fb6:	fb02 cc0e 	mla	ip, r2, lr, ip
90023fba:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90023fbe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90023fc0:	fb00 cc0e 	mla	ip, r0, lr, ip
90023fc4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90023fc8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023fca:	fb09 cc0e 	mla	ip, r9, lr, ip
90023fce:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90023fd2:	fb08 f80e 	mul.w	r8, r8, lr
90023fd6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023fda:	fa5f fe81 	uxtb.w	lr, r1
90023fde:	fb02 8303 	mla	r3, r2, r3, r8
90023fe2:	9a08      	ldr	r2, [sp, #32]
90023fe4:	f8b7 8000 	ldrh.w	r8, [r7]
90023fe8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023fec:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90023ff0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90023ff2:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90023ff6:	fb00 330a 	mla	r3, r0, sl, r3
90023ffa:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
90023ffe:	ea4f 2228 	mov.w	r2, r8, asr #8
90024002:	fb09 3900 	mla	r9, r9, r0, r3
90024006:	ea4f 00e8 	mov.w	r0, r8, asr #3
9002400a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002400e:	b2c9      	uxtb	r1, r1
90024010:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024014:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024018:	fb02 f20e 	mul.w	r2, r2, lr
9002401c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90024020:	fb00 f00e 	mul.w	r0, r0, lr
90024024:	1c53      	adds	r3, r2, #1
90024026:	fb01 f10e 	mul.w	r1, r1, lr
9002402a:	ea4c 0c09 	orr.w	ip, ip, r9
9002402e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90024032:	ea4f 431c 	mov.w	r3, ip, lsr #16
90024036:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002403a:	4a60      	ldr	r2, [pc, #384]	; (900241bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
9002403c:	b2db      	uxtb	r3, r3
9002403e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90024042:	1c43      	adds	r3, r0, #1
90024044:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024048:	ea4f 231c 	mov.w	r3, ip, lsr #8
9002404c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90024050:	00db      	lsls	r3, r3, #3
90024052:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024056:	4313      	orrs	r3, r2
90024058:	1c4a      	adds	r2, r1, #1
9002405a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002405e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90024062:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90024066:	ea4c 0c03 	orr.w	ip, ip, r3
9002406a:	f8a7 c000 	strh.w	ip, [r7]
9002406e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90024070:	3702      	adds	r7, #2
90024072:	9a25      	ldr	r2, [sp, #148]	; 0x94
90024074:	441a      	add	r2, r3
90024076:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024078:	441d      	add	r5, r3
9002407a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002407c:	9225      	str	r2, [sp, #148]	; 0x94
9002407e:	3b01      	subs	r3, #1
90024080:	9317      	str	r3, [sp, #92]	; 0x5c
90024082:	e699      	b.n	90023db8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90024084:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90024086:	9c25      	ldr	r4, [sp, #148]	; 0x94
90024088:	441c      	add	r4, r3
9002408a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002408c:	441d      	add	r5, r3
9002408e:	9b07      	ldr	r3, [sp, #28]
90024090:	9425      	str	r4, [sp, #148]	; 0x94
90024092:	3b01      	subs	r3, #1
90024094:	9307      	str	r3, [sp, #28]
90024096:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024098:	3302      	adds	r3, #2
9002409a:	930a      	str	r3, [sp, #40]	; 0x28
9002409c:	e66c      	b.n	90023d78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9002409e:	d024      	beq.n	900240ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
900240a0:	9b07      	ldr	r3, [sp, #28]
900240a2:	9827      	ldr	r0, [sp, #156]	; 0x9c
900240a4:	3b01      	subs	r3, #1
900240a6:	9c25      	ldr	r4, [sp, #148]	; 0x94
900240a8:	fb00 4003 	mla	r0, r0, r3, r4
900240ac:	1400      	asrs	r0, r0, #16
900240ae:	f53f ae80 	bmi.w	90023db2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900240b2:	3901      	subs	r1, #1
900240b4:	4288      	cmp	r0, r1
900240b6:	f6bf ae7c 	bge.w	90023db2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900240ba:	9928      	ldr	r1, [sp, #160]	; 0xa0
900240bc:	fb01 5303 	mla	r3, r1, r3, r5
900240c0:	141b      	asrs	r3, r3, #16
900240c2:	f53f ae76 	bmi.w	90023db2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900240c6:	3a01      	subs	r2, #1
900240c8:	4293      	cmp	r3, r2
900240ca:	f6bf ae72 	bge.w	90023db2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900240ce:	f8dd b01c 	ldr.w	fp, [sp, #28]
900240d2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
900240d6:	f1bb 0f00 	cmp.w	fp, #0
900240da:	dc71      	bgt.n	900241c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900240dc:	9b07      	ldr	r3, [sp, #28]
900240de:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900240e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900240e4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900240e8:	930a      	str	r3, [sp, #40]	; 0x28
900240ea:	9b16      	ldr	r3, [sp, #88]	; 0x58
900240ec:	2b00      	cmp	r3, #0
900240ee:	f340 81af 	ble.w	90024450 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900240f2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900240f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
900240f8:	ee30 0a04 	vadd.f32	s0, s0, s8
900240fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024100:	eef0 6a62 	vmov.f32	s13, s5
90024104:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024108:	ee31 1a05 	vadd.f32	s2, s2, s10
9002410c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024110:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90024114:	eef0 6a43 	vmov.f32	s13, s6
90024118:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002411c:	ee16 5a90 	vmov	r5, s13
90024120:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024124:	ee61 7a27 	vmul.f32	s15, s2, s15
90024128:	ee77 2a62 	vsub.f32	s5, s14, s5
9002412c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024130:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024134:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024138:	ee12 2a90 	vmov	r2, s5
9002413c:	eef0 2a47 	vmov.f32	s5, s14
90024140:	fb92 f3f3 	sdiv	r3, r2, r3
90024144:	ee13 2a10 	vmov	r2, s6
90024148:	9327      	str	r3, [sp, #156]	; 0x9c
9002414a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002414c:	eeb0 3a67 	vmov.f32	s6, s15
90024150:	fb92 f3f3 	sdiv	r3, r2, r3
90024154:	9328      	str	r3, [sp, #160]	; 0xa0
90024156:	9b16      	ldr	r3, [sp, #88]	; 0x58
90024158:	9a18      	ldr	r2, [sp, #96]	; 0x60
9002415a:	3b01      	subs	r3, #1
9002415c:	9316      	str	r3, [sp, #88]	; 0x58
9002415e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024160:	bf08      	it	eq
90024162:	4613      	moveq	r3, r2
90024164:	9307      	str	r3, [sp, #28]
90024166:	e5f9      	b.n	90023d5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90024168:	2800      	cmp	r0, #0
9002416a:	f43f ae6b 	beq.w	90023e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002416e:	f818 1001 	ldrb.w	r1, [r8, r1]
90024172:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024176:	9108      	str	r1, [sp, #32]
90024178:	0e09      	lsrs	r1, r1, #24
9002417a:	9110      	str	r1, [sp, #64]	; 0x40
9002417c:	e662      	b.n	90023e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002417e:	f113 0801 	adds.w	r8, r3, #1
90024182:	f53f af74 	bmi.w	9002406e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024186:	4541      	cmp	r1, r8
90024188:	f6ff af71 	blt.w	9002406e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002418c:	f11c 0801 	adds.w	r8, ip, #1
90024190:	f53f af6d 	bmi.w	9002406e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024194:	45c6      	cmp	lr, r8
90024196:	f6ff af6a 	blt.w	9002406e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002419a:	b209      	sxth	r1, r1
9002419c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
900241a0:	fa0f f38e 	sxth.w	r3, lr
900241a4:	9100      	str	r1, [sp, #0]
900241a6:	4639      	mov	r1, r7
900241a8:	9301      	str	r3, [sp, #4]
900241aa:	4633      	mov	r3, r6
900241ac:	e9cd 2004 	strd	r2, r0, [sp, #16]
900241b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900241b2:	9819      	ldr	r0, [sp, #100]	; 0x64
900241b4:	f7ff fc7b 	bl	90023aae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
900241b8:	e759      	b.n	9002406e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900241ba:	bf00      	nop
900241bc:	fffff800 	.word	0xfffff800
900241c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
900241c2:	f3c5 3003 	ubfx	r0, r5, #12, #4
900241c6:	9c25      	ldr	r4, [sp, #148]	; 0x94
900241c8:	f3c3 3203 	ubfx	r2, r3, #12, #4
900241cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900241ce:	1427      	asrs	r7, r4, #16
900241d0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900241d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900241d6:	142b      	asrs	r3, r5, #16
900241d8:	fb01 7303 	mla	r3, r1, r3, r7
900241dc:	18e7      	adds	r7, r4, r3
900241de:	5ce3      	ldrb	r3, [r4, r3]
900241e0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900241e4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900241e8:	2a00      	cmp	r2, #0
900241ea:	f000 8127 	beq.w	9002443c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
900241ee:	f897 e001 	ldrb.w	lr, [r7, #1]
900241f2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900241f6:	940d      	str	r4, [sp, #52]	; 0x34
900241f8:	0e24      	lsrs	r4, r4, #24
900241fa:	9414      	str	r4, [sp, #80]	; 0x50
900241fc:	b170      	cbz	r0, 9002421c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900241fe:	eb07 0e01 	add.w	lr, r7, r1
90024202:	5c79      	ldrb	r1, [r7, r1]
90024204:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024208:	9109      	str	r1, [sp, #36]	; 0x24
9002420a:	0e09      	lsrs	r1, r1, #24
9002420c:	9111      	str	r1, [sp, #68]	; 0x44
9002420e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90024212:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024216:	910e      	str	r1, [sp, #56]	; 0x38
90024218:	0e09      	lsrs	r1, r1, #24
9002421a:	9115      	str	r1, [sp, #84]	; 0x54
9002421c:	b292      	uxth	r2, r2
9002421e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90024220:	b280      	uxth	r0, r0
90024222:	fb02 f800 	mul.w	r8, r2, r0
90024226:	0112      	lsls	r2, r2, #4
90024228:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9002422c:	eba2 0e08 	sub.w	lr, r2, r8
90024230:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90024234:	9a14      	ldr	r2, [sp, #80]	; 0x50
90024236:	b280      	uxth	r0, r0
90024238:	fa1f fe8e 	uxth.w	lr, lr
9002423c:	1a09      	subs	r1, r1, r0
9002423e:	fb0e f202 	mul.w	r2, lr, r2
90024242:	b289      	uxth	r1, r1
90024244:	fb01 220c 	mla	r2, r1, ip, r2
90024248:	fb00 2204 	mla	r2, r0, r4, r2
9002424c:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002424e:	fb08 2204 	mla	r2, r8, r4, r2
90024252:	f3c2 2207 	ubfx	r2, r2, #8, #8
90024256:	2a00      	cmp	r2, #0
90024258:	f000 80e5 	beq.w	90024426 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
9002425c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90024260:	d019      	beq.n	90024296 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90024262:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90024266:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002426a:	fb0c fa0a 	mul.w	sl, ip, sl
9002426e:	fb0c fc03 	mul.w	ip, ip, r3
90024272:	ea4f 231a 	mov.w	r3, sl, lsr #8
90024276:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9002427a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
9002427e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024282:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90024286:	4453      	add	r3, sl
90024288:	0a3f      	lsrs	r7, r7, #8
9002428a:	0a1b      	lsrs	r3, r3, #8
9002428c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90024290:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024294:	433b      	orrs	r3, r7
90024296:	9c14      	ldr	r4, [sp, #80]	; 0x50
90024298:	2cff      	cmp	r4, #255	; 0xff
9002429a:	d020      	beq.n	900242de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
9002429c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002429e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900242a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
900242a4:	4367      	muls	r7, r4
900242a6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900242a8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900242ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900242b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
900242b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900242b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900242ba:	fb04 fa0a 	mul.w	sl, r4, sl
900242be:	44bc      	add	ip, r7
900242c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900242c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900242c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900242cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900242d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900242d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900242d8:	ea4c 040a 	orr.w	r4, ip, sl
900242dc:	940d      	str	r4, [sp, #52]	; 0x34
900242de:	9c11      	ldr	r4, [sp, #68]	; 0x44
900242e0:	2cff      	cmp	r4, #255	; 0xff
900242e2:	d020      	beq.n	90024326 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
900242e4:	9c09      	ldr	r4, [sp, #36]	; 0x24
900242e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900242ea:	9c11      	ldr	r4, [sp, #68]	; 0x44
900242ec:	4367      	muls	r7, r4
900242ee:	9c09      	ldr	r4, [sp, #36]	; 0x24
900242f0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900242f4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900242f8:	9c11      	ldr	r4, [sp, #68]	; 0x44
900242fa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900242fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024302:	fb04 fa0a 	mul.w	sl, r4, sl
90024306:	44bc      	add	ip, r7
90024308:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002430c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024310:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024314:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024318:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002431c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024320:	ea4c 040a 	orr.w	r4, ip, sl
90024324:	9409      	str	r4, [sp, #36]	; 0x24
90024326:	9c15      	ldr	r4, [sp, #84]	; 0x54
90024328:	2cff      	cmp	r4, #255	; 0xff
9002432a:	d020      	beq.n	9002436e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
9002432c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002432e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90024332:	9c15      	ldr	r4, [sp, #84]	; 0x54
90024334:	4367      	muls	r7, r4
90024336:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90024338:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002433c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024340:	9c15      	ldr	r4, [sp, #84]	; 0x54
90024342:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024346:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002434a:	fb04 fa0a 	mul.w	sl, r4, sl
9002434e:	44bc      	add	ip, r7
90024350:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024354:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024358:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002435c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024360:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024364:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024368:	ea4c 040a 	orr.w	r4, ip, sl
9002436c:	940e      	str	r4, [sp, #56]	; 0x38
9002436e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90024370:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90024374:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90024378:	43d2      	mvns	r2, r2
9002437a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002437e:	9c09      	ldr	r4, [sp, #36]	; 0x24
90024380:	b2d2      	uxtb	r2, r2
90024382:	fb0e f707 	mul.w	r7, lr, r7
90024386:	fb01 770c 	mla	r7, r1, ip, r7
9002438a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002438e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90024390:	fb00 770c 	mla	r7, r0, ip, r7
90024394:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90024398:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002439a:	fb08 770c 	mla	r7, r8, ip, r7
9002439e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
900243a2:	fb0e fe0c 	mul.w	lr, lr, ip
900243a6:	0a3f      	lsrs	r7, r7, #8
900243a8:	fb01 e303 	mla	r3, r1, r3, lr
900243ac:	9909      	ldr	r1, [sp, #36]	; 0x24
900243ae:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900243b2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
900243b6:	990e      	ldr	r1, [sp, #56]	; 0x38
900243b8:	fb00 330a 	mla	r3, r0, sl, r3
900243bc:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
900243c0:	fb08 3c0c 	mla	ip, r8, ip, r3
900243c4:	f8b9 3000 	ldrh.w	r3, [r9]
900243c8:	1218      	asrs	r0, r3, #8
900243ca:	10d9      	asrs	r1, r3, #3
900243cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900243d0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900243d4:	00db      	lsls	r3, r3, #3
900243d6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900243da:	4350      	muls	r0, r2
900243dc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900243e0:	b2db      	uxtb	r3, r3
900243e2:	4351      	muls	r1, r2
900243e4:	ea47 070c 	orr.w	r7, r7, ip
900243e8:	4353      	muls	r3, r2
900243ea:	1c42      	adds	r2, r0, #1
900243ec:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900243f0:	0c3a      	lsrs	r2, r7, #16
900243f2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900243f6:	4a18      	ldr	r2, [pc, #96]	; (90024458 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
900243f8:	b2c0      	uxtb	r0, r0
900243fa:	ea02 2000 	and.w	r0, r2, r0, lsl #8
900243fe:	1c4a      	adds	r2, r1, #1
90024400:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024404:	0a3a      	lsrs	r2, r7, #8
90024406:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002440a:	00c9      	lsls	r1, r1, #3
9002440c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024410:	4301      	orrs	r1, r0
90024412:	1c58      	adds	r0, r3, #1
90024414:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024418:	eb07 2710 	add.w	r7, r7, r0, lsr #8
9002441c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90024420:	4308      	orrs	r0, r1
90024422:	f8a9 0000 	strh.w	r0, [r9]
90024426:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90024428:	f109 0902 	add.w	r9, r9, #2
9002442c:	9a25      	ldr	r2, [sp, #148]	; 0x94
9002442e:	f10b 3bff 	add.w	fp, fp, #4294967295
90024432:	441a      	add	r2, r3
90024434:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024436:	9225      	str	r2, [sp, #148]	; 0x94
90024438:	441d      	add	r5, r3
9002443a:	e64c      	b.n	900240d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
9002443c:	2800      	cmp	r0, #0
9002443e:	f43f aeed 	beq.w	9002421c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90024442:	5c79      	ldrb	r1, [r7, r1]
90024444:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024448:	9109      	str	r1, [sp, #36]	; 0x24
9002444a:	0e09      	lsrs	r1, r1, #24
9002444c:	9111      	str	r1, [sp, #68]	; 0x44
9002444e:	e6e5      	b.n	9002421c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90024450:	b01b      	add	sp, #108	; 0x6c
90024452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024456:	bf00      	nop
90024458:	fffff800 	.word	0xfffff800

9002445c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
9002445c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024460:	b085      	sub	sp, #20
90024462:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90024466:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
9002446a:	2800      	cmp	r0, #0
9002446c:	9103      	str	r1, [sp, #12]
9002446e:	fb00 7406 	mla	r4, r0, r6, r7
90024472:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90024476:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
9002447a:	eb02 0544 	add.w	r5, r2, r4, lsl #1
9002447e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90024482:	eb03 0904 	add.w	r9, r3, r4
90024486:	9501      	str	r5, [sp, #4]
90024488:	f2c0 8150 	blt.w	9002472c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
9002448c:	4583      	cmp	fp, r0
9002448e:	f340 814d 	ble.w	9002472c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90024492:	2f00      	cmp	r7, #0
90024494:	f2c0 8146 	blt.w	90024724 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90024498:	42be      	cmp	r6, r7
9002449a:	f340 8143 	ble.w	90024724 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
9002449e:	f813 c004 	ldrb.w	ip, [r3, r4]
900244a2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
900244a6:	f64f 041f 	movw	r4, #63519	; 0xf81f
900244aa:	ea4f 02ec 	mov.w	r2, ip, asr #3
900244ae:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
900244b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900244b6:	4355      	muls	r5, r2
900244b8:	fb0c f203 	mul.w	r2, ip, r3
900244bc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900244c0:	f605 0501 	addw	r5, r5, #2049	; 0x801
900244c4:	441d      	add	r5, r3
900244c6:	f102 0320 	add.w	r3, r2, #32
900244ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900244ce:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900244d2:	0a1b      	lsrs	r3, r3, #8
900244d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900244d8:	431c      	orrs	r4, r3
900244da:	1c7b      	adds	r3, r7, #1
900244dc:	f100 812b 	bmi.w	90024736 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900244e0:	429e      	cmp	r6, r3
900244e2:	f340 8128 	ble.w	90024736 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900244e6:	2900      	cmp	r1, #0
900244e8:	f000 8128 	beq.w	9002473c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
900244ec:	9a01      	ldr	r2, [sp, #4]
900244ee:	f899 3001 	ldrb.w	r3, [r9, #1]
900244f2:	8855      	ldrh	r5, [r2, #2]
900244f4:	ea4f 08e3 	mov.w	r8, r3, asr #3
900244f8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
900244fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024500:	fb08 f802 	mul.w	r8, r8, r2
90024504:	f64f 021f 	movw	r2, #63519	; 0xf81f
90024508:	435d      	muls	r5, r3
9002450a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002450e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024512:	44d0      	add	r8, sl
90024514:	f105 0a20 	add.w	sl, r5, #32
90024518:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
9002451c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90024520:	0a2d      	lsrs	r5, r5, #8
90024522:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024526:	432a      	orrs	r2, r5
90024528:	3001      	adds	r0, #1
9002452a:	f100 810d 	bmi.w	90024748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
9002452e:	4583      	cmp	fp, r0
90024530:	f340 810a 	ble.w	90024748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90024534:	f1be 0f00 	cmp.w	lr, #0
90024538:	f000 810b 	beq.w	90024752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
9002453c:	2f00      	cmp	r7, #0
9002453e:	f2c0 8100 	blt.w	90024742 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90024542:	42be      	cmp	r6, r7
90024544:	f340 80fd 	ble.w	90024742 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90024548:	9801      	ldr	r0, [sp, #4]
9002454a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9002454e:	f819 5006 	ldrb.w	r5, [r9, r6]
90024552:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90024556:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002455a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
9002455e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90024562:	fb0a fa00 	mul.w	sl, sl, r0
90024566:	fb05 f808 	mul.w	r8, r5, r8
9002456a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002456e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90024572:	4482      	add	sl, r0
90024574:	f108 0020 	add.w	r0, r8, #32
90024578:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9002457c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90024580:	0a00      	lsrs	r0, r0, #8
90024582:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024586:	ea4b 0b00 	orr.w	fp, fp, r0
9002458a:	3701      	adds	r7, #1
9002458c:	f100 80e6 	bmi.w	9002475c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024590:	42be      	cmp	r6, r7
90024592:	f340 80e3 	ble.w	9002475c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024596:	2900      	cmp	r1, #0
90024598:	f000 80e3 	beq.w	90024762 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
9002459c:	3601      	adds	r6, #1
9002459e:	9801      	ldr	r0, [sp, #4]
900245a0:	f819 7006 	ldrb.w	r7, [r9, r6]
900245a4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900245a8:	ea4f 09e7 	mov.w	r9, r7, asr #3
900245ac:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
900245b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900245b4:	fb09 f906 	mul.w	r9, r9, r6
900245b8:	fb07 f800 	mul.w	r8, r7, r0
900245bc:	f64f 001f 	movw	r0, #63519	; 0xf81f
900245c0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900245c4:	f609 0901 	addw	r9, r9, #2049	; 0x801
900245c8:	44d1      	add	r9, sl
900245ca:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900245ce:	f108 0020 	add.w	r0, r8, #32
900245d2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900245d6:	0a00      	lsrs	r0, r0, #8
900245d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900245dc:	4330      	orrs	r0, r6
900245de:	b28e      	uxth	r6, r1
900245e0:	fa1f f98e 	uxth.w	r9, lr
900245e4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900245e8:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
900245ec:	fb06 f809 	mul.w	r8, r6, r9
900245f0:	0136      	lsls	r6, r6, #4
900245f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900245f6:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900245fa:	9601      	str	r6, [sp, #4]
900245fc:	ea4a 0404 	orr.w	r4, sl, r4
90024600:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024604:	fa1f f689 	uxth.w	r6, r9
90024608:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002460c:	fb11 f90e 	smulbb	r9, r1, lr
90024610:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024614:	9602      	str	r6, [sp, #8]
90024616:	4626      	mov	r6, r4
90024618:	f3c9 09c7 	ubfx	r9, r9, #3, #8
9002461c:	f1ce 0410 	rsb	r4, lr, #16
90024620:	ea4a 0202 	orr.w	r2, sl, r2
90024624:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024628:	1a64      	subs	r4, r4, r1
9002462a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002462e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024632:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024636:	434a      	muls	r2, r1
90024638:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002463c:	ea4a 0000 	orr.w	r0, sl, r0
90024640:	9903      	ldr	r1, [sp, #12]
90024642:	fb04 2406 	mla	r4, r4, r6, r2
90024646:	9e02      	ldr	r6, [sp, #8]
90024648:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
9002464c:	fb09 4200 	mla	r2, r9, r0, r4
90024650:	ea4f 440b 	mov.w	r4, fp, lsl #16
90024654:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90024658:	8808      	ldrh	r0, [r1, #0]
9002465a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9002465e:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
90024662:	ea44 0b0b 	orr.w	fp, r4, fp
90024666:	9c01      	ldr	r4, [sp, #4]
90024668:	b289      	uxth	r1, r1
9002466a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
9002466e:	fb0e 2e0b 	mla	lr, lr, fp, r2
90024672:	1ba4      	subs	r4, r4, r6
90024674:	9e01      	ldr	r6, [sp, #4]
90024676:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002467a:	eba6 0608 	sub.w	r6, r6, r8
9002467e:	b2a4      	uxth	r4, r4
90024680:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024684:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024688:	b2b6      	uxth	r6, r6
9002468a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002468e:	4373      	muls	r3, r6
90024690:	ea42 0e0e 	orr.w	lr, r2, lr
90024694:	fb0c 3304 	mla	r3, ip, r4, r3
90024698:	9c02      	ldr	r4, [sp, #8]
9002469a:	fa1f f28e 	uxth.w	r2, lr
9002469e:	fb04 3505 	mla	r5, r4, r5, r3
900246a2:	10d4      	asrs	r4, r2, #3
900246a4:	fb08 5707 	mla	r7, r8, r7, r5
900246a8:	1215      	asrs	r5, r2, #8
900246aa:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
900246ae:	00d2      	lsls	r2, r2, #3
900246b0:	f3c7 2707 	ubfx	r7, r7, #8, #8
900246b4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900246b8:	b2d2      	uxtb	r2, r2
900246ba:	434f      	muls	r7, r1
900246bc:	1c7b      	adds	r3, r7, #1
900246be:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900246c2:	1203      	asrs	r3, r0, #8
900246c4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
900246c8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900246cc:	b2ff      	uxtb	r7, r7
900246ce:	fb13 f307 	smulbb	r3, r3, r7
900246d2:	fb05 3501 	mla	r5, r5, r1, r3
900246d6:	10c3      	asrs	r3, r0, #3
900246d8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900246dc:	b2ad      	uxth	r5, r5
900246de:	fb13 f307 	smulbb	r3, r3, r7
900246e2:	fb04 3401 	mla	r4, r4, r1, r3
900246e6:	00c3      	lsls	r3, r0, #3
900246e8:	b2db      	uxtb	r3, r3
900246ea:	b2a4      	uxth	r4, r4
900246ec:	fb13 f307 	smulbb	r3, r3, r7
900246f0:	fb02 3101 	mla	r1, r2, r1, r3
900246f4:	1c6b      	adds	r3, r5, #1
900246f6:	1c62      	adds	r2, r4, #1
900246f8:	b289      	uxth	r1, r1
900246fa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900246fe:	1c4b      	adds	r3, r1, #1
90024700:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90024704:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024708:	9a03      	ldr	r2, [sp, #12]
9002470a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002470e:	0964      	lsrs	r4, r4, #5
90024710:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024714:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90024718:	432b      	orrs	r3, r5
9002471a:	4323      	orrs	r3, r4
9002471c:	8013      	strh	r3, [r2, #0]
9002471e:	b005      	add	sp, #20
90024720:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024724:	f04f 0c00 	mov.w	ip, #0
90024728:	4664      	mov	r4, ip
9002472a:	e6d6      	b.n	900244da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
9002472c:	2300      	movs	r3, #0
9002472e:	469c      	mov	ip, r3
90024730:	461a      	mov	r2, r3
90024732:	461c      	mov	r4, r3
90024734:	e6f8      	b.n	90024528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024736:	2300      	movs	r3, #0
90024738:	461a      	mov	r2, r3
9002473a:	e6f5      	b.n	90024528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002473c:	460b      	mov	r3, r1
9002473e:	460a      	mov	r2, r1
90024740:	e6f2      	b.n	90024528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024742:	2500      	movs	r5, #0
90024744:	46ab      	mov	fp, r5
90024746:	e720      	b.n	9002458a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90024748:	2700      	movs	r7, #0
9002474a:	463d      	mov	r5, r7
9002474c:	4638      	mov	r0, r7
9002474e:	46bb      	mov	fp, r7
90024750:	e745      	b.n	900245de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024752:	4677      	mov	r7, lr
90024754:	4675      	mov	r5, lr
90024756:	4670      	mov	r0, lr
90024758:	46f3      	mov	fp, lr
9002475a:	e740      	b.n	900245de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002475c:	2700      	movs	r7, #0
9002475e:	4638      	mov	r0, r7
90024760:	e73d      	b.n	900245de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024762:	460f      	mov	r7, r1
90024764:	4608      	mov	r0, r1
90024766:	e73a      	b.n	900245de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90024768 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002476c:	b097      	sub	sp, #92	; 0x5c
9002476e:	9214      	str	r2, [sp, #80]	; 0x50
90024770:	9308      	str	r3, [sp, #32]
90024772:	9a25      	ldr	r2, [sp, #148]	; 0x94
90024774:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90024778:	9015      	str	r0, [sp, #84]	; 0x54
9002477a:	9312      	str	r3, [sp, #72]	; 0x48
9002477c:	6850      	ldr	r0, [r2, #4]
9002477e:	9111      	str	r1, [sp, #68]	; 0x44
90024780:	6812      	ldr	r2, [r2, #0]
90024782:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90024786:	fb00 1303 	mla	r3, r0, r3, r1
9002478a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002478e:	9309      	str	r3, [sp, #36]	; 0x24
90024790:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024792:	681b      	ldr	r3, [r3, #0]
90024794:	930b      	str	r3, [sp, #44]	; 0x2c
90024796:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024798:	685b      	ldr	r3, [r3, #4]
9002479a:	930c      	str	r3, [sp, #48]	; 0x30
9002479c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900247a0:	930a      	str	r3, [sp, #40]	; 0x28
900247a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
900247a4:	2b00      	cmp	r3, #0
900247a6:	dc03      	bgt.n	900247b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900247a8:	9b14      	ldr	r3, [sp, #80]	; 0x50
900247aa:	2b00      	cmp	r3, #0
900247ac:	f340 83cd 	ble.w	90024f4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900247b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900247b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900247b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900247ba:	1e48      	subs	r0, r1, #1
900247bc:	1e55      	subs	r5, r2, #1
900247be:	9b08      	ldr	r3, [sp, #32]
900247c0:	2b00      	cmp	r3, #0
900247c2:	f340 81a5 	ble.w	90024b10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
900247c6:	9e21      	ldr	r6, [sp, #132]	; 0x84
900247c8:	9b22      	ldr	r3, [sp, #136]	; 0x88
900247ca:	1436      	asrs	r6, r6, #16
900247cc:	ea4f 4323 	mov.w	r3, r3, asr #16
900247d0:	d406      	bmi.n	900247e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900247d2:	4286      	cmp	r6, r0
900247d4:	da04      	bge.n	900247e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900247d6:	2b00      	cmp	r3, #0
900247d8:	db02      	blt.n	900247e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900247da:	42ab      	cmp	r3, r5
900247dc:	f2c0 8199 	blt.w	90024b12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900247e0:	3601      	adds	r6, #1
900247e2:	f100 8186 	bmi.w	90024af2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900247e6:	42b1      	cmp	r1, r6
900247e8:	f2c0 8183 	blt.w	90024af2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900247ec:	3301      	adds	r3, #1
900247ee:	f100 8180 	bmi.w	90024af2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900247f2:	429a      	cmp	r2, r3
900247f4:	f2c0 817d 	blt.w	90024af2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900247f8:	9b08      	ldr	r3, [sp, #32]
900247fa:	f64f 061f 	movw	r6, #63519	; 0xf81f
900247fe:	9f09      	ldr	r7, [sp, #36]	; 0x24
90024800:	9313      	str	r3, [sp, #76]	; 0x4c
90024802:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90024804:	2b00      	cmp	r3, #0
90024806:	f340 81a6 	ble.w	90024b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
9002480a:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002480c:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002480e:	1418      	asrs	r0, r3, #16
90024810:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024812:	142d      	asrs	r5, r5, #16
90024814:	f3c3 3103 	ubfx	r1, r3, #12, #4
90024818:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002481a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9002481e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024820:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90024824:	f100 81fa 	bmi.w	90024c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024828:	f102 3eff 	add.w	lr, r2, #4294967295
9002482c:	4575      	cmp	r5, lr
9002482e:	f280 81f5 	bge.w	90024c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024832:	2800      	cmp	r0, #0
90024834:	f2c0 81f2 	blt.w	90024c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024838:	f103 3eff 	add.w	lr, r3, #4294967295
9002483c:	4570      	cmp	r0, lr
9002483e:	f280 81ed 	bge.w	90024c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024842:	b212      	sxth	r2, r2
90024844:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024846:	fa1f fe81 	uxth.w	lr, r1
9002484a:	fb00 5002 	mla	r0, r0, r2, r5
9002484e:	ea4f 150e 	mov.w	r5, lr, lsl #4
90024852:	eb03 0a00 	add.w	sl, r3, r0
90024856:	f813 9000 	ldrb.w	r9, [r3, r0]
9002485a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
9002485e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024862:	b29b      	uxth	r3, r3
90024864:	f1bc 0f00 	cmp.w	ip, #0
90024868:	f000 81bb 	beq.w	90024be2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
9002486c:	f81a 4002 	ldrb.w	r4, [sl, r2]
90024870:	eb0a 0b02 	add.w	fp, sl, r2
90024874:	fa1f fa8c 	uxth.w	sl, ip
90024878:	940d      	str	r4, [sp, #52]	; 0x34
9002487a:	fb0a fe0e 	mul.w	lr, sl, lr
9002487e:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024882:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90024886:	eba5 050e 	sub.w	r5, r5, lr
9002488a:	940e      	str	r4, [sp, #56]	; 0x38
9002488c:	fa1f fa8a 	uxth.w	sl, sl
90024890:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90024892:	b2ad      	uxth	r5, r5
90024894:	eba3 030a 	sub.w	r3, r3, sl
90024898:	fb08 f505 	mul.w	r5, r8, r5
9002489c:	b29b      	uxth	r3, r3
9002489e:	fb09 5303 	mla	r3, r9, r3, r5
900248a2:	fb0a 3304 	mla	r3, sl, r4, r3
900248a6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900248a8:	fb0e 3304 	mla	r3, lr, r4, r3
900248ac:	f3c3 2307 	ubfx	r3, r3, #8, #8
900248b0:	2b00      	cmp	r3, #0
900248b2:	f000 8111 	beq.w	90024ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900248b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900248b8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900248bc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900248c0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900248c4:	f000 8192 	beq.w	90024bec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
900248c8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900248cc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900248d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900248d4:	fb0a fe0e 	mul.w	lr, sl, lr
900248d8:	fb09 f000 	mul.w	r0, r9, r0
900248dc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900248e0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900248e4:	f100 0b20 	add.w	fp, r0, #32
900248e8:	44ce      	add	lr, r9
900248ea:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900248ee:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900248f2:	ea4f 2919 	mov.w	r9, r9, lsr #8
900248f6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900248fa:	ea4e 0909 	orr.w	r9, lr, r9
900248fe:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90024902:	8868      	ldrh	r0, [r5, #2]
90024904:	d019      	beq.n	9002493a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90024906:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002490a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002490e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024912:	fb0a fe0e 	mul.w	lr, sl, lr
90024916:	fb08 f800 	mul.w	r8, r8, r0
9002491a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9002491e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90024922:	f108 0b20 	add.w	fp, r8, #32
90024926:	4486      	add	lr, r0
90024928:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
9002492c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024930:	0a00      	lsrs	r0, r0, #8
90024932:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024936:	ea4e 0000 	orr.w	r0, lr, r0
9002493a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002493e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90024942:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024946:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002494a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9002494e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024952:	ea4e 0909 	orr.w	r9, lr, r9
90024956:	ea4a 0000 	orr.w	r0, sl, r0
9002495a:	f1bc 0f00 	cmp.w	ip, #0
9002495e:	f000 8147 	beq.w	90024bf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90024962:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90024966:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90024968:	3a01      	subs	r2, #1
9002496a:	2cff      	cmp	r4, #255	; 0xff
9002496c:	ea4f 0242 	mov.w	r2, r2, lsl #1
90024970:	f102 0202 	add.w	r2, r2, #2
90024974:	eb05 0e02 	add.w	lr, r5, r2
90024978:	5aaa      	ldrh	r2, [r5, r2]
9002497a:	d018      	beq.n	900249ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9002497c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90024980:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024984:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024988:	fb04 fa02 	mul.w	sl, r4, r2
9002498c:	fb08 f805 	mul.w	r8, r8, r5
90024990:	f10a 0520 	add.w	r5, sl, #32
90024994:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90024998:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002499c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900249a0:	4442      	add	r2, r8
900249a2:	0a2d      	lsrs	r5, r5, #8
900249a4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900249a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900249ac:	432a      	orrs	r2, r5
900249ae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900249b0:	f8be 5002 	ldrh.w	r5, [lr, #2]
900249b4:	2cff      	cmp	r4, #255	; 0xff
900249b6:	d01a      	beq.n	900249ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
900249b8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
900249bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900249c0:	ea4f 08e4 	mov.w	r8, r4, asr #3
900249c4:	fb04 fa05 	mul.w	sl, r4, r5
900249c8:	fb08 f80e 	mul.w	r8, r8, lr
900249cc:	f10a 0e20 	add.w	lr, sl, #32
900249d0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900249d4:	f608 0801 	addw	r8, r8, #2049	; 0x801
900249d8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900249dc:	4445      	add	r5, r8
900249de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900249e2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900249e6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900249ea:	ea45 050e 	orr.w	r5, r5, lr
900249ee:	fb1c fe01 	smulbb	lr, ip, r1
900249f2:	f1cc 0810 	rsb	r8, ip, #16
900249f6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900249fa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900249fe:	ea4f 0eee 	mov.w	lr, lr, asr #3
90024a02:	eba8 0801 	sub.w	r8, r8, r1
90024a06:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90024a0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024a0e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90024a12:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90024a16:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90024a1a:	ea4a 0202 	orr.w	r2, sl, r2
90024a1e:	4341      	muls	r1, r0
90024a20:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90024a24:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024a28:	fb09 1108 	mla	r1, r9, r8, r1
90024a2c:	ea4b 0505 	orr.w	r5, fp, r5
90024a30:	fb0c 1102 	mla	r1, ip, r2, r1
90024a34:	fb0e 1e05 	mla	lr, lr, r5, r1
90024a38:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024a3c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024a40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024a44:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90024a48:	ea42 0e0e 	orr.w	lr, r2, lr
90024a4c:	fa1f f28e 	uxth.w	r2, lr
90024a50:	2bff      	cmp	r3, #255	; 0xff
90024a52:	d103      	bne.n	90024a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024a54:	9912      	ldr	r1, [sp, #72]	; 0x48
90024a56:	29ff      	cmp	r1, #255	; 0xff
90024a58:	f000 80de 	beq.w	90024c18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90024a5c:	990a      	ldr	r1, [sp, #40]	; 0x28
90024a5e:	1215      	asrs	r5, r2, #8
90024a60:	8838      	ldrh	r0, [r7, #0]
90024a62:	434b      	muls	r3, r1
90024a64:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024a68:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90024a6a:	f103 0c01 	add.w	ip, r3, #1
90024a6e:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90024a72:	ea6f 2323 	mvn.w	r3, r3, asr #8
90024a76:	fa5f fc83 	uxtb.w	ip, r3
90024a7a:	1203      	asrs	r3, r0, #8
90024a7c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90024a80:	fb13 f30c 	smulbb	r3, r3, ip
90024a84:	fb05 3501 	mla	r5, r5, r1, r3
90024a88:	10c3      	asrs	r3, r0, #3
90024a8a:	10d1      	asrs	r1, r2, #3
90024a8c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90024a90:	00d2      	lsls	r2, r2, #3
90024a92:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024a96:	b2ad      	uxth	r5, r5
90024a98:	fb13 f30c 	smulbb	r3, r3, ip
90024a9c:	b2d2      	uxtb	r2, r2
90024a9e:	fb01 3104 	mla	r1, r1, r4, r3
90024aa2:	00c3      	lsls	r3, r0, #3
90024aa4:	b2db      	uxtb	r3, r3
90024aa6:	b289      	uxth	r1, r1
90024aa8:	fb13 f30c 	smulbb	r3, r3, ip
90024aac:	fb02 3304 	mla	r3, r2, r4, r3
90024ab0:	b29a      	uxth	r2, r3
90024ab2:	1c6b      	adds	r3, r5, #1
90024ab4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024ab8:	1c53      	adds	r3, r2, #1
90024aba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024abe:	1c4a      	adds	r2, r1, #1
90024ac0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024ac4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024ac8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024acc:	0949      	lsrs	r1, r1, #5
90024ace:	432b      	orrs	r3, r5
90024ad0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024ad4:	430b      	orrs	r3, r1
90024ad6:	803b      	strh	r3, [r7, #0]
90024ad8:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024ada:	3702      	adds	r7, #2
90024adc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90024ade:	4413      	add	r3, r2
90024ae0:	9a22      	ldr	r2, [sp, #136]	; 0x88
90024ae2:	9321      	str	r3, [sp, #132]	; 0x84
90024ae4:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024ae6:	441a      	add	r2, r3
90024ae8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90024aea:	3b01      	subs	r3, #1
90024aec:	9222      	str	r2, [sp, #136]	; 0x88
90024aee:	9313      	str	r3, [sp, #76]	; 0x4c
90024af0:	e687      	b.n	90024802 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90024af2:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024af4:	9e23      	ldr	r6, [sp, #140]	; 0x8c
90024af6:	9c22      	ldr	r4, [sp, #136]	; 0x88
90024af8:	4433      	add	r3, r6
90024afa:	9321      	str	r3, [sp, #132]	; 0x84
90024afc:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024afe:	441c      	add	r4, r3
90024b00:	9b08      	ldr	r3, [sp, #32]
90024b02:	3b01      	subs	r3, #1
90024b04:	9422      	str	r4, [sp, #136]	; 0x88
90024b06:	9308      	str	r3, [sp, #32]
90024b08:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024b0a:	3302      	adds	r3, #2
90024b0c:	9309      	str	r3, [sp, #36]	; 0x24
90024b0e:	e656      	b.n	900247be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90024b10:	d028      	beq.n	90024b64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90024b12:	9b08      	ldr	r3, [sp, #32]
90024b14:	9823      	ldr	r0, [sp, #140]	; 0x8c
90024b16:	3b01      	subs	r3, #1
90024b18:	9d21      	ldr	r5, [sp, #132]	; 0x84
90024b1a:	fb00 5003 	mla	r0, r0, r3, r5
90024b1e:	1400      	asrs	r0, r0, #16
90024b20:	f53f ae6a 	bmi.w	900247f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024b24:	3901      	subs	r1, #1
90024b26:	4288      	cmp	r0, r1
90024b28:	f6bf ae66 	bge.w	900247f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024b2c:	9924      	ldr	r1, [sp, #144]	; 0x90
90024b2e:	9822      	ldr	r0, [sp, #136]	; 0x88
90024b30:	fb01 0303 	mla	r3, r1, r3, r0
90024b34:	141b      	asrs	r3, r3, #16
90024b36:	f53f ae5f 	bmi.w	900247f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024b3a:	3a01      	subs	r2, #1
90024b3c:	4293      	cmp	r3, r2
90024b3e:	f6bf ae5b 	bge.w	900247f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024b42:	9b08      	ldr	r3, [sp, #32]
90024b44:	f64f 061f 	movw	r6, #63519	; 0xf81f
90024b48:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
90024b4c:	9313      	str	r3, [sp, #76]	; 0x4c
90024b4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90024b50:	2b00      	cmp	r3, #0
90024b52:	f300 8082 	bgt.w	90024c5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90024b56:	9b08      	ldr	r3, [sp, #32]
90024b58:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024b5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024b5e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90024b62:	9309      	str	r3, [sp, #36]	; 0x24
90024b64:	9b11      	ldr	r3, [sp, #68]	; 0x44
90024b66:	2b00      	cmp	r3, #0
90024b68:	f340 81ef 	ble.w	90024f4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024b6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024b70:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024b72:	ee30 0a04 	vadd.f32	s0, s0, s8
90024b76:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024b7a:	eef0 6a62 	vmov.f32	s13, s5
90024b7e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024b82:	ee31 1a05 	vadd.f32	s2, s2, s10
90024b86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024b8a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
90024b8e:	eef0 6a43 	vmov.f32	s13, s6
90024b92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024b96:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
90024b9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024b9e:	ee61 7a27 	vmul.f32	s15, s2, s15
90024ba2:	ee77 2a62 	vsub.f32	s5, s14, s5
90024ba6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024baa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024bae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024bb2:	ee12 2a90 	vmov	r2, s5
90024bb6:	eef0 2a47 	vmov.f32	s5, s14
90024bba:	fb92 f3f3 	sdiv	r3, r2, r3
90024bbe:	ee13 2a10 	vmov	r2, s6
90024bc2:	9323      	str	r3, [sp, #140]	; 0x8c
90024bc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024bc6:	eeb0 3a67 	vmov.f32	s6, s15
90024bca:	fb92 f3f3 	sdiv	r3, r2, r3
90024bce:	9324      	str	r3, [sp, #144]	; 0x90
90024bd0:	9b11      	ldr	r3, [sp, #68]	; 0x44
90024bd2:	9a14      	ldr	r2, [sp, #80]	; 0x50
90024bd4:	3b01      	subs	r3, #1
90024bd6:	9311      	str	r3, [sp, #68]	; 0x44
90024bd8:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024bda:	bf08      	it	eq
90024bdc:	4613      	moveq	r3, r2
90024bde:	9308      	str	r3, [sp, #32]
90024be0:	e5df      	b.n	900247a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024be2:	fb08 f505 	mul.w	r5, r8, r5
90024be6:	fb09 5303 	mla	r3, r9, r3, r5
90024bea:	e65f      	b.n	900248ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90024bec:	4681      	mov	r9, r0
90024bee:	e686      	b.n	900248fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024bf0:	f1c1 0210 	rsb	r2, r1, #16
90024bf4:	4341      	muls	r1, r0
90024bf6:	fb09 1902 	mla	r9, r9, r2, r1
90024bfa:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024bfe:	ea4f 5259 	mov.w	r2, r9, lsr #21
90024c02:	ea4f 1959 	mov.w	r9, r9, lsr #5
90024c06:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024c0a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90024c0e:	ea42 0909 	orr.w	r9, r2, r9
90024c12:	fa1f f289 	uxth.w	r2, r9
90024c16:	e71b      	b.n	90024a50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90024c18:	803a      	strh	r2, [r7, #0]
90024c1a:	e75d      	b.n	90024ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024c1c:	f115 0e01 	adds.w	lr, r5, #1
90024c20:	f53f af5a 	bmi.w	90024ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024c24:	4572      	cmp	r2, lr
90024c26:	f6ff af57 	blt.w	90024ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024c2a:	f110 0e01 	adds.w	lr, r0, #1
90024c2e:	f53f af53 	bmi.w	90024ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024c32:	4573      	cmp	r3, lr
90024c34:	f6ff af50 	blt.w	90024ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024c38:	9c12      	ldr	r4, [sp, #72]	; 0x48
90024c3a:	b21b      	sxth	r3, r3
90024c3c:	b212      	sxth	r2, r2
90024c3e:	9502      	str	r5, [sp, #8]
90024c40:	9301      	str	r3, [sp, #4]
90024c42:	9200      	str	r2, [sp, #0]
90024c44:	e9cd 0103 	strd	r0, r1, [sp, #12]
90024c48:	e9cd c405 	strd	ip, r4, [sp, #20]
90024c4c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
90024c50:	4639      	mov	r1, r7
90024c52:	9815      	ldr	r0, [sp, #84]	; 0x54
90024c54:	f7ff fc02 	bl	9002445c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90024c58:	e73e      	b.n	90024ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024c5a:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024c5c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024c60:	9b22      	ldr	r3, [sp, #136]	; 0x88
90024c62:	f3c3 3503 	ubfx	r5, r3, #12, #4
90024c66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024c68:	fa1f fc82 	uxth.w	ip, r2
90024c6c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024c70:	9b22      	ldr	r3, [sp, #136]	; 0x88
90024c72:	ea4f 100c 	mov.w	r0, ip, lsl #4
90024c76:	141f      	asrs	r7, r3, #16
90024c78:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024c7a:	141b      	asrs	r3, r3, #16
90024c7c:	fb01 3707 	mla	r7, r1, r7, r3
90024c80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024c82:	eb03 0a07 	add.w	sl, r3, r7
90024c86:	f813 9007 	ldrb.w	r9, [r3, r7]
90024c8a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90024c8e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024c92:	b29b      	uxth	r3, r3
90024c94:	2d00      	cmp	r5, #0
90024c96:	f000 813d 	beq.w	90024f14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90024c9a:	f81a 4001 	ldrb.w	r4, [sl, r1]
90024c9e:	eb0a 0b01 	add.w	fp, sl, r1
90024ca2:	fa1f fa85 	uxth.w	sl, r5
90024ca6:	940f      	str	r4, [sp, #60]	; 0x3c
90024ca8:	fb0a fc0c 	mul.w	ip, sl, ip
90024cac:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024cb0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90024cb4:	eba0 000c 	sub.w	r0, r0, ip
90024cb8:	9410      	str	r4, [sp, #64]	; 0x40
90024cba:	fa1f fa8a 	uxth.w	sl, sl
90024cbe:	b280      	uxth	r0, r0
90024cc0:	eba3 030a 	sub.w	r3, r3, sl
90024cc4:	fb08 f000 	mul.w	r0, r8, r0
90024cc8:	b29b      	uxth	r3, r3
90024cca:	fb09 0303 	mla	r3, r9, r3, r0
90024cce:	980f      	ldr	r0, [sp, #60]	; 0x3c
90024cd0:	fb0a 3300 	mla	r3, sl, r0, r3
90024cd4:	fb0c 3304 	mla	r3, ip, r4, r3
90024cd8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024cdc:	2b00      	cmp	r3, #0
90024cde:	f000 810b 	beq.w	90024ef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024ce2:	980b      	ldr	r0, [sp, #44]	; 0x2c
90024ce4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90024ce8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024cea:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90024cee:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90024cf2:	f000 8114 	beq.w	90024f1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90024cf6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90024cfa:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024cfe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024d02:	fb0a fc0c 	mul.w	ip, sl, ip
90024d06:	fb09 f707 	mul.w	r7, r9, r7
90024d0a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90024d0e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90024d12:	f107 0b20 	add.w	fp, r7, #32
90024d16:	44cc      	add	ip, r9
90024d18:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90024d1c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024d20:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024d24:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90024d28:	ea4c 0909 	orr.w	r9, ip, r9
90024d2c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90024d30:	8847      	ldrh	r7, [r0, #2]
90024d32:	d019      	beq.n	90024d68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90024d34:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90024d38:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024d3c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024d40:	fb0a fc0c 	mul.w	ip, sl, ip
90024d44:	fb08 f807 	mul.w	r8, r8, r7
90024d48:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024d4c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90024d50:	f108 0b20 	add.w	fp, r8, #32
90024d54:	44bc      	add	ip, r7
90024d56:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90024d5a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024d5e:	0a3f      	lsrs	r7, r7, #8
90024d60:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024d64:	ea4c 0707 	orr.w	r7, ip, r7
90024d68:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024d6c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90024d70:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90024d74:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90024d78:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90024d7c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024d80:	ea4c 0909 	orr.w	r9, ip, r9
90024d84:	ea4a 0707 	orr.w	r7, sl, r7
90024d88:	2d00      	cmp	r5, #0
90024d8a:	f000 80ca 	beq.w	90024f22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90024d8e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90024d92:	3901      	subs	r1, #1
90024d94:	0049      	lsls	r1, r1, #1
90024d96:	3102      	adds	r1, #2
90024d98:	eb00 0c01 	add.w	ip, r0, r1
90024d9c:	5a41      	ldrh	r1, [r0, r1]
90024d9e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90024da0:	28ff      	cmp	r0, #255	; 0xff
90024da2:	d019      	beq.n	90024dd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90024da4:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90024da8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90024daa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024dae:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024db2:	fb04 fa01 	mul.w	sl, r4, r1
90024db6:	fb08 f800 	mul.w	r8, r8, r0
90024dba:	f10a 0020 	add.w	r0, sl, #32
90024dbe:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90024dc2:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024dc6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90024dca:	4441      	add	r1, r8
90024dcc:	0a00      	lsrs	r0, r0, #8
90024dce:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90024dd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024dd6:	4301      	orrs	r1, r0
90024dd8:	9c10      	ldr	r4, [sp, #64]	; 0x40
90024dda:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90024dde:	2cff      	cmp	r4, #255	; 0xff
90024de0:	d01a      	beq.n	90024e18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90024de2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90024de6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024dea:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024dee:	fb04 fa00 	mul.w	sl, r4, r0
90024df2:	fb08 f80c 	mul.w	r8, r8, ip
90024df6:	f10a 0c20 	add.w	ip, sl, #32
90024dfa:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90024dfe:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024e02:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90024e06:	4440      	add	r0, r8
90024e08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024e0c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90024e10:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024e14:	ea40 000c 	orr.w	r0, r0, ip
90024e18:	fb15 fc02 	smulbb	ip, r5, r2
90024e1c:	f1c5 0810 	rsb	r8, r5, #16
90024e20:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90024e24:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90024e28:	ea4f 0cec 	mov.w	ip, ip, asr #3
90024e2c:	eba8 0802 	sub.w	r8, r8, r2
90024e30:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90024e34:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024e38:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90024e3c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024e40:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90024e44:	ea4a 0101 	orr.w	r1, sl, r1
90024e48:	437a      	muls	r2, r7
90024e4a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90024e4e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024e52:	fb09 2208 	mla	r2, r9, r8, r2
90024e56:	ea4b 0000 	orr.w	r0, fp, r0
90024e5a:	fb05 2201 	mla	r2, r5, r1, r2
90024e5e:	fb0c 2200 	mla	r2, ip, r0, r2
90024e62:	0d57      	lsrs	r7, r2, #21
90024e64:	0952      	lsrs	r2, r2, #5
90024e66:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024e6a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024e6e:	433a      	orrs	r2, r7
90024e70:	2bff      	cmp	r3, #255	; 0xff
90024e72:	b292      	uxth	r2, r2
90024e74:	d102      	bne.n	90024e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90024e76:	9912      	ldr	r1, [sp, #72]	; 0x48
90024e78:	29ff      	cmp	r1, #255	; 0xff
90024e7a:	d063      	beq.n	90024f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90024e7c:	980a      	ldr	r0, [sp, #40]	; 0x28
90024e7e:	1215      	asrs	r5, r2, #8
90024e80:	f8be 1000 	ldrh.w	r1, [lr]
90024e84:	4343      	muls	r3, r0
90024e86:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90024e88:	10cf      	asrs	r7, r1, #3
90024e8a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024e8e:	1c58      	adds	r0, r3, #1
90024e90:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90024e94:	eb00 2323 	add.w	r3, r0, r3, asr #8
90024e98:	1208      	asrs	r0, r1, #8
90024e9a:	ea6f 2323 	mvn.w	r3, r3, asr #8
90024e9e:	00c9      	lsls	r1, r1, #3
90024ea0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90024ea4:	b2db      	uxtb	r3, r3
90024ea6:	b2c9      	uxtb	r1, r1
90024ea8:	fb10 f003 	smulbb	r0, r0, r3
90024eac:	fb11 f103 	smulbb	r1, r1, r3
90024eb0:	fb05 0504 	mla	r5, r5, r4, r0
90024eb4:	10d0      	asrs	r0, r2, #3
90024eb6:	fb17 f703 	smulbb	r7, r7, r3
90024eba:	00d2      	lsls	r2, r2, #3
90024ebc:	b2ad      	uxth	r5, r5
90024ebe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024ec2:	b2d2      	uxtb	r2, r2
90024ec4:	fb00 7004 	mla	r0, r0, r4, r7
90024ec8:	1c6b      	adds	r3, r5, #1
90024eca:	fb02 1204 	mla	r2, r2, r4, r1
90024ece:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024ed2:	b292      	uxth	r2, r2
90024ed4:	b280      	uxth	r0, r0
90024ed6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024eda:	1c57      	adds	r7, r2, #1
90024edc:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90024ee0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90024ee4:	433d      	orrs	r5, r7
90024ee6:	1c47      	adds	r7, r0, #1
90024ee8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90024eec:	097f      	lsrs	r7, r7, #5
90024eee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024ef2:	433d      	orrs	r5, r7
90024ef4:	f8ae 5000 	strh.w	r5, [lr]
90024ef8:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024efa:	f10e 0e02 	add.w	lr, lr, #2
90024efe:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90024f00:	4413      	add	r3, r2
90024f02:	9a22      	ldr	r2, [sp, #136]	; 0x88
90024f04:	9321      	str	r3, [sp, #132]	; 0x84
90024f06:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024f08:	441a      	add	r2, r3
90024f0a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90024f0c:	3b01      	subs	r3, #1
90024f0e:	9222      	str	r2, [sp, #136]	; 0x88
90024f10:	9313      	str	r3, [sp, #76]	; 0x4c
90024f12:	e61c      	b.n	90024b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90024f14:	fb08 f000 	mul.w	r0, r8, r0
90024f18:	fb09 0303 	mla	r3, r9, r3, r0
90024f1c:	e6dc      	b.n	90024cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90024f1e:	46b9      	mov	r9, r7
90024f20:	e704      	b.n	90024d2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90024f22:	f1c2 0110 	rsb	r1, r2, #16
90024f26:	437a      	muls	r2, r7
90024f28:	fb09 2901 	mla	r9, r9, r1, r2
90024f2c:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024f30:	ea4f 5059 	mov.w	r0, r9, lsr #21
90024f34:	ea4f 1259 	mov.w	r2, r9, lsr #5
90024f38:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024f3c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024f40:	4302      	orrs	r2, r0
90024f42:	e795      	b.n	90024e70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90024f44:	f8ae 2000 	strh.w	r2, [lr]
90024f48:	e7d6      	b.n	90024ef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024f4a:	b017      	add	sp, #92	; 0x5c
90024f4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024f50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90024f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024f54:	b085      	sub	sp, #20
90024f56:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90024f5a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90024f5e:	2800      	cmp	r0, #0
90024f60:	9103      	str	r1, [sp, #12]
90024f62:	fb00 7406 	mla	r4, r0, r6, r7
90024f66:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90024f6a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90024f6e:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90024f72:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90024f76:	eb02 0904 	add.w	r9, r2, r4
90024f7a:	9501      	str	r5, [sp, #4]
90024f7c:	f2c0 8141 	blt.w	90025202 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90024f80:	4583      	cmp	fp, r0
90024f82:	f340 813e 	ble.w	90025202 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90024f86:	2f00      	cmp	r7, #0
90024f88:	f2c0 8137 	blt.w	900251fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90024f8c:	42be      	cmp	r6, r7
90024f8e:	f340 8134 	ble.w	900251fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90024f92:	f812 c004 	ldrb.w	ip, [r2, r4]
90024f96:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90024f9a:	f64f 041f 	movw	r4, #63519	; 0xf81f
90024f9e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024fa2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90024fa6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024faa:	4355      	muls	r5, r2
90024fac:	fb0c f203 	mul.w	r2, ip, r3
90024fb0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90024fb4:	f605 0501 	addw	r5, r5, #2049	; 0x801
90024fb8:	441d      	add	r5, r3
90024fba:	f102 0320 	add.w	r3, r2, #32
90024fbe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024fc2:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90024fc6:	0a1b      	lsrs	r3, r3, #8
90024fc8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024fcc:	431c      	orrs	r4, r3
90024fce:	1c7b      	adds	r3, r7, #1
90024fd0:	f100 811c 	bmi.w	9002520c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90024fd4:	429e      	cmp	r6, r3
90024fd6:	f340 8119 	ble.w	9002520c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90024fda:	2900      	cmp	r1, #0
90024fdc:	f000 8119 	beq.w	90025212 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90024fe0:	9a01      	ldr	r2, [sp, #4]
90024fe2:	f899 3001 	ldrb.w	r3, [r9, #1]
90024fe6:	8855      	ldrh	r5, [r2, #2]
90024fe8:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024fec:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90024ff0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024ff4:	fb08 f802 	mul.w	r8, r8, r2
90024ff8:	f64f 021f 	movw	r2, #63519	; 0xf81f
90024ffc:	435d      	muls	r5, r3
90024ffe:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90025002:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025006:	44d0      	add	r8, sl
90025008:	f105 0a20 	add.w	sl, r5, #32
9002500c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90025010:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90025014:	0a2d      	lsrs	r5, r5, #8
90025016:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002501a:	432a      	orrs	r2, r5
9002501c:	3001      	adds	r0, #1
9002501e:	f100 80fe 	bmi.w	9002521e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90025022:	4583      	cmp	fp, r0
90025024:	f340 80fb 	ble.w	9002521e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90025028:	f1be 0f00 	cmp.w	lr, #0
9002502c:	f000 80fc 	beq.w	90025228 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90025030:	2f00      	cmp	r7, #0
90025032:	f2c0 80f1 	blt.w	90025218 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90025036:	42be      	cmp	r6, r7
90025038:	f340 80ee 	ble.w	90025218 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
9002503c:	9801      	ldr	r0, [sp, #4]
9002503e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90025042:	f819 5006 	ldrb.w	r5, [r9, r6]
90025046:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002504a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002504e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90025052:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90025056:	fb0a fa00 	mul.w	sl, sl, r0
9002505a:	fb05 f808 	mul.w	r8, r5, r8
9002505e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90025062:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90025066:	4482      	add	sl, r0
90025068:	f108 0020 	add.w	r0, r8, #32
9002506c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025070:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90025074:	0a00      	lsrs	r0, r0, #8
90025076:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002507a:	ea4b 0b00 	orr.w	fp, fp, r0
9002507e:	3701      	adds	r7, #1
90025080:	f100 80d7 	bmi.w	90025232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90025084:	42be      	cmp	r6, r7
90025086:	f340 80d4 	ble.w	90025232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
9002508a:	2900      	cmp	r1, #0
9002508c:	f000 80d4 	beq.w	90025238 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90025090:	3601      	adds	r6, #1
90025092:	9801      	ldr	r0, [sp, #4]
90025094:	f819 7006 	ldrb.w	r7, [r9, r6]
90025098:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
9002509c:	ea4f 09e7 	mov.w	r9, r7, asr #3
900250a0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
900250a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900250a8:	fb09 f906 	mul.w	r9, r9, r6
900250ac:	fb07 f800 	mul.w	r8, r7, r0
900250b0:	f64f 001f 	movw	r0, #63519	; 0xf81f
900250b4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900250b8:	f609 0901 	addw	r9, r9, #2049	; 0x801
900250bc:	44d1      	add	r9, sl
900250be:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900250c2:	f108 0020 	add.w	r0, r8, #32
900250c6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900250ca:	0a00      	lsrs	r0, r0, #8
900250cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900250d0:	4330      	orrs	r0, r6
900250d2:	b28e      	uxth	r6, r1
900250d4:	fa1f f98e 	uxth.w	r9, lr
900250d8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900250dc:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
900250e0:	fb06 f809 	mul.w	r8, r6, r9
900250e4:	0136      	lsls	r6, r6, #4
900250e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900250ea:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900250ee:	9601      	str	r6, [sp, #4]
900250f0:	ea4a 0404 	orr.w	r4, sl, r4
900250f4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900250f8:	fa1f f689 	uxth.w	r6, r9
900250fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025100:	fb11 f90e 	smulbb	r9, r1, lr
90025104:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025108:	9602      	str	r6, [sp, #8]
9002510a:	4626      	mov	r6, r4
9002510c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90025110:	f1ce 0410 	rsb	r4, lr, #16
90025114:	ea4a 0202 	orr.w	r2, sl, r2
90025118:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002511c:	1a64      	subs	r4, r4, r1
9002511e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90025122:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025126:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002512a:	434a      	muls	r2, r1
9002512c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90025130:	ea4a 0000 	orr.w	r0, sl, r0
90025134:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90025138:	fb04 2406 	mla	r4, r4, r6, r2
9002513c:	9903      	ldr	r1, [sp, #12]
9002513e:	fb09 4200 	mla	r2, r9, r0, r4
90025142:	ea4f 440b 	mov.w	r4, fp, lsl #16
90025146:	9801      	ldr	r0, [sp, #4]
90025148:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
9002514c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90025150:	8809      	ldrh	r1, [r1, #0]
90025152:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
90025156:	ea44 0b0b 	orr.w	fp, r4, fp
9002515a:	9c02      	ldr	r4, [sp, #8]
9002515c:	1b00      	subs	r0, r0, r4
9002515e:	9c01      	ldr	r4, [sp, #4]
90025160:	fb0e 2e0b 	mla	lr, lr, fp, r2
90025164:	eba4 0608 	sub.w	r6, r4, r8
90025168:	b280      	uxth	r0, r0
9002516a:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002516e:	b2b6      	uxth	r6, r6
90025170:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025174:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025178:	4373      	muls	r3, r6
9002517a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002517e:	fb0c 3300 	mla	r3, ip, r0, r3
90025182:	9802      	ldr	r0, [sp, #8]
90025184:	ea42 0e0e 	orr.w	lr, r2, lr
90025188:	fb00 3505 	mla	r5, r0, r5, r3
9002518c:	120b      	asrs	r3, r1, #8
9002518e:	10c8      	asrs	r0, r1, #3
90025190:	fb08 5707 	mla	r7, r8, r7, r5
90025194:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90025198:	00c9      	lsls	r1, r1, #3
9002519a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002519e:	ea6f 2727 	mvn.w	r7, r7, asr #8
900251a2:	fa1f f28e 	uxth.w	r2, lr
900251a6:	b2c9      	uxtb	r1, r1
900251a8:	b2ff      	uxtb	r7, r7
900251aa:	437b      	muls	r3, r7
900251ac:	4378      	muls	r0, r7
900251ae:	434f      	muls	r7, r1
900251b0:	1c59      	adds	r1, r3, #1
900251b2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900251b6:	1213      	asrs	r3, r2, #8
900251b8:	f023 0307 	bic.w	r3, r3, #7
900251bc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900251c0:	1c41      	adds	r1, r0, #1
900251c2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900251c6:	10d1      	asrs	r1, r2, #3
900251c8:	021b      	lsls	r3, r3, #8
900251ca:	f021 0103 	bic.w	r1, r1, #3
900251ce:	00d2      	lsls	r2, r2, #3
900251d0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
900251d4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900251d8:	00c9      	lsls	r1, r1, #3
900251da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900251de:	430b      	orrs	r3, r1
900251e0:	1c79      	adds	r1, r7, #1
900251e2:	eb01 2717 	add.w	r7, r1, r7, lsr #8
900251e6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900251ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900251ee:	431a      	orrs	r2, r3
900251f0:	9b03      	ldr	r3, [sp, #12]
900251f2:	801a      	strh	r2, [r3, #0]
900251f4:	b005      	add	sp, #20
900251f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900251fa:	f04f 0c00 	mov.w	ip, #0
900251fe:	4664      	mov	r4, ip
90025200:	e6e5      	b.n	90024fce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90025202:	2300      	movs	r3, #0
90025204:	469c      	mov	ip, r3
90025206:	461a      	mov	r2, r3
90025208:	461c      	mov	r4, r3
9002520a:	e707      	b.n	9002501c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002520c:	2300      	movs	r3, #0
9002520e:	461a      	mov	r2, r3
90025210:	e704      	b.n	9002501c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90025212:	460b      	mov	r3, r1
90025214:	460a      	mov	r2, r1
90025216:	e701      	b.n	9002501c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90025218:	2500      	movs	r5, #0
9002521a:	46ab      	mov	fp, r5
9002521c:	e72f      	b.n	9002507e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
9002521e:	2700      	movs	r7, #0
90025220:	463d      	mov	r5, r7
90025222:	4638      	mov	r0, r7
90025224:	46bb      	mov	fp, r7
90025226:	e754      	b.n	900250d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025228:	4677      	mov	r7, lr
9002522a:	4675      	mov	r5, lr
9002522c:	4670      	mov	r0, lr
9002522e:	46f3      	mov	fp, lr
90025230:	e74f      	b.n	900250d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025232:	2700      	movs	r7, #0
90025234:	4638      	mov	r0, r7
90025236:	e74c      	b.n	900250d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025238:	460f      	mov	r7, r1
9002523a:	4608      	mov	r0, r1
9002523c:	e749      	b.n	900250d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90025240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025244:	b093      	sub	sp, #76	; 0x4c
90025246:	9210      	str	r2, [sp, #64]	; 0x40
90025248:	9a21      	ldr	r2, [sp, #132]	; 0x84
9002524a:	9011      	str	r0, [sp, #68]	; 0x44
9002524c:	910e      	str	r1, [sp, #56]	; 0x38
9002524e:	6850      	ldr	r0, [r2, #4]
90025250:	9306      	str	r3, [sp, #24]
90025252:	6812      	ldr	r2, [r2, #0]
90025254:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90025258:	fb00 1303 	mla	r3, r0, r3, r1
9002525c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025260:	9307      	str	r3, [sp, #28]
90025262:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025264:	681b      	ldr	r3, [r3, #0]
90025266:	9308      	str	r3, [sp, #32]
90025268:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002526a:	685b      	ldr	r3, [r3, #4]
9002526c:	9309      	str	r3, [sp, #36]	; 0x24
9002526e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90025270:	2b00      	cmp	r3, #0
90025272:	dc03      	bgt.n	9002527c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90025274:	9b10      	ldr	r3, [sp, #64]	; 0x40
90025276:	2b00      	cmp	r3, #0
90025278:	f340 83b6 	ble.w	900259e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
9002527c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002527e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025282:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025286:	1e48      	subs	r0, r1, #1
90025288:	1e55      	subs	r5, r2, #1
9002528a:	9b06      	ldr	r3, [sp, #24]
9002528c:	2b00      	cmp	r3, #0
9002528e:	f340 8165 	ble.w	9002555c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90025292:	9e1d      	ldr	r6, [sp, #116]	; 0x74
90025294:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025296:	1436      	asrs	r6, r6, #16
90025298:	ea4f 4323 	mov.w	r3, r3, asr #16
9002529c:	d406      	bmi.n	900252ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002529e:	4286      	cmp	r6, r0
900252a0:	da04      	bge.n	900252ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900252a2:	2b00      	cmp	r3, #0
900252a4:	db02      	blt.n	900252ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900252a6:	42ab      	cmp	r3, r5
900252a8:	f2c0 8159 	blt.w	9002555e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900252ac:	3601      	adds	r6, #1
900252ae:	f100 8146 	bmi.w	9002553e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900252b2:	42b1      	cmp	r1, r6
900252b4:	f2c0 8143 	blt.w	9002553e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900252b8:	3301      	adds	r3, #1
900252ba:	f100 8140 	bmi.w	9002553e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900252be:	429a      	cmp	r2, r3
900252c0:	f2c0 813d 	blt.w	9002553e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900252c4:	9b06      	ldr	r3, [sp, #24]
900252c6:	f64f 061f 	movw	r6, #63519	; 0xf81f
900252ca:	9f07      	ldr	r7, [sp, #28]
900252cc:	930f      	str	r3, [sp, #60]	; 0x3c
900252ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900252d0:	2b00      	cmp	r3, #0
900252d2:	f340 8166 	ble.w	900255a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900252d6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900252d8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
900252da:	1418      	asrs	r0, r3, #16
900252dc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900252de:	142d      	asrs	r5, r5, #16
900252e0:	f3c3 3103 	ubfx	r1, r3, #12, #4
900252e4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900252e6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900252ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
900252ec:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900252f0:	f100 81f0 	bmi.w	900256d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900252f4:	f102 3eff 	add.w	lr, r2, #4294967295
900252f8:	4575      	cmp	r5, lr
900252fa:	f280 81eb 	bge.w	900256d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900252fe:	2800      	cmp	r0, #0
90025300:	f2c0 81e8 	blt.w	900256d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025304:	f103 3eff 	add.w	lr, r3, #4294967295
90025308:	4570      	cmp	r0, lr
9002530a:	f280 81e3 	bge.w	900256d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002530e:	b212      	sxth	r2, r2
90025310:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025312:	fa1f fe81 	uxth.w	lr, r1
90025316:	fb00 5002 	mla	r0, r0, r2, r5
9002531a:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002531e:	eb03 0a00 	add.w	sl, r3, r0
90025322:	f813 9000 	ldrb.w	r9, [r3, r0]
90025326:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
9002532a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002532e:	b29b      	uxth	r3, r3
90025330:	f1bc 0f00 	cmp.w	ip, #0
90025334:	f000 817b 	beq.w	9002562e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90025338:	f81a 4002 	ldrb.w	r4, [sl, r2]
9002533c:	eb0a 0b02 	add.w	fp, sl, r2
90025340:	fa1f fa8c 	uxth.w	sl, ip
90025344:	940a      	str	r4, [sp, #40]	; 0x28
90025346:	fb0a fe0e 	mul.w	lr, sl, lr
9002534a:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002534e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90025352:	eba5 050e 	sub.w	r5, r5, lr
90025356:	940b      	str	r4, [sp, #44]	; 0x2c
90025358:	fa1f fa8a 	uxth.w	sl, sl
9002535c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9002535e:	b2ad      	uxth	r5, r5
90025360:	eba3 030a 	sub.w	r3, r3, sl
90025364:	fb08 f505 	mul.w	r5, r8, r5
90025368:	b29b      	uxth	r3, r3
9002536a:	fb09 5303 	mla	r3, r9, r3, r5
9002536e:	fb0a 3304 	mla	r3, sl, r4, r3
90025372:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90025374:	fb0e 3304 	mla	r3, lr, r4, r3
90025378:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002537c:	2b00      	cmp	r3, #0
9002537e:	f000 80d1 	beq.w	90025524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025382:	9c08      	ldr	r4, [sp, #32]
90025384:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90025388:	eb04 0540 	add.w	r5, r4, r0, lsl #1
9002538c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90025390:	f000 8152 	beq.w	90025638 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90025394:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90025398:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002539c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900253a0:	fb0a fe0e 	mul.w	lr, sl, lr
900253a4:	fb09 f000 	mul.w	r0, r9, r0
900253a8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900253ac:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900253b0:	f100 0b20 	add.w	fp, r0, #32
900253b4:	44ce      	add	lr, r9
900253b6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900253ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900253be:	ea4f 2919 	mov.w	r9, r9, lsr #8
900253c2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900253c6:	ea4e 0909 	orr.w	r9, lr, r9
900253ca:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
900253ce:	8868      	ldrh	r0, [r5, #2]
900253d0:	d019      	beq.n	90025406 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900253d2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900253d6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900253da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900253de:	fb0a fe0e 	mul.w	lr, sl, lr
900253e2:	fb08 f800 	mul.w	r8, r8, r0
900253e6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900253ea:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900253ee:	f108 0b20 	add.w	fp, r8, #32
900253f2:	4486      	add	lr, r0
900253f4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900253f8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900253fc:	0a00      	lsrs	r0, r0, #8
900253fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025402:	ea4e 0000 	orr.w	r0, lr, r0
90025406:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002540a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002540e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025412:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025416:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9002541a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002541e:	ea4e 0909 	orr.w	r9, lr, r9
90025422:	ea4a 0000 	orr.w	r0, sl, r0
90025426:	f1bc 0f00 	cmp.w	ip, #0
9002542a:	f000 8107 	beq.w	9002563c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002542e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90025432:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90025434:	3a01      	subs	r2, #1
90025436:	2cff      	cmp	r4, #255	; 0xff
90025438:	ea4f 0242 	mov.w	r2, r2, lsl #1
9002543c:	f102 0202 	add.w	r2, r2, #2
90025440:	eb05 0e02 	add.w	lr, r5, r2
90025444:	5aaa      	ldrh	r2, [r5, r2]
90025446:	d018      	beq.n	9002547a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90025448:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
9002544c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025450:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025454:	fb04 fa02 	mul.w	sl, r4, r2
90025458:	fb08 f805 	mul.w	r8, r8, r5
9002545c:	f10a 0520 	add.w	r5, sl, #32
90025460:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90025464:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025468:	eb05 251a 	add.w	r5, r5, sl, lsr #8
9002546c:	4442      	add	r2, r8
9002546e:	0a2d      	lsrs	r5, r5, #8
90025470:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90025474:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90025478:	432a      	orrs	r2, r5
9002547a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002547c:	f8be 5002 	ldrh.w	r5, [lr, #2]
90025480:	2cff      	cmp	r4, #255	; 0xff
90025482:	d01a      	beq.n	900254ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90025484:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90025488:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002548c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025490:	fb04 fa05 	mul.w	sl, r4, r5
90025494:	fb08 f80e 	mul.w	r8, r8, lr
90025498:	f10a 0e20 	add.w	lr, sl, #32
9002549c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900254a0:	f608 0801 	addw	r8, r8, #2049	; 0x801
900254a4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900254a8:	4445      	add	r5, r8
900254aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900254ae:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900254b2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900254b6:	ea45 050e 	orr.w	r5, r5, lr
900254ba:	fb1c fe01 	smulbb	lr, ip, r1
900254be:	f1cc 0810 	rsb	r8, ip, #16
900254c2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900254c6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900254ca:	ea4f 0eee 	mov.w	lr, lr, asr #3
900254ce:	eba8 0801 	sub.w	r8, r8, r1
900254d2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900254d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900254da:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900254de:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
900254e2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900254e6:	ea4a 0202 	orr.w	r2, sl, r2
900254ea:	4341      	muls	r1, r0
900254ec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900254f0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900254f4:	fb09 1108 	mla	r1, r9, r8, r1
900254f8:	ea4b 0505 	orr.w	r5, fp, r5
900254fc:	fb0c 1102 	mla	r1, ip, r2, r1
90025500:	fb0e 1e05 	mla	lr, lr, r5, r1
90025504:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025508:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002550c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025510:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90025514:	ea42 0e0e 	orr.w	lr, r2, lr
90025518:	fa1f f28e 	uxth.w	r2, lr
9002551c:	2bff      	cmp	r3, #255	; 0xff
9002551e:	f040 80a1 	bne.w	90025664 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90025522:	803a      	strh	r2, [r7, #0]
90025524:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025526:	3702      	adds	r7, #2
90025528:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
9002552a:	4413      	add	r3, r2
9002552c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
9002552e:	931d      	str	r3, [sp, #116]	; 0x74
90025530:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025532:	441a      	add	r2, r3
90025534:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90025536:	3b01      	subs	r3, #1
90025538:	921e      	str	r2, [sp, #120]	; 0x78
9002553a:	930f      	str	r3, [sp, #60]	; 0x3c
9002553c:	e6c7      	b.n	900252ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002553e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025540:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90025542:	9c1e      	ldr	r4, [sp, #120]	; 0x78
90025544:	4433      	add	r3, r6
90025546:	931d      	str	r3, [sp, #116]	; 0x74
90025548:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002554a:	441c      	add	r4, r3
9002554c:	9b06      	ldr	r3, [sp, #24]
9002554e:	3b01      	subs	r3, #1
90025550:	941e      	str	r4, [sp, #120]	; 0x78
90025552:	9306      	str	r3, [sp, #24]
90025554:	9b07      	ldr	r3, [sp, #28]
90025556:	3302      	adds	r3, #2
90025558:	9307      	str	r3, [sp, #28]
9002555a:	e696      	b.n	9002528a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002555c:	d028      	beq.n	900255b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002555e:	9b06      	ldr	r3, [sp, #24]
90025560:	981f      	ldr	r0, [sp, #124]	; 0x7c
90025562:	3b01      	subs	r3, #1
90025564:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90025566:	fb00 5003 	mla	r0, r0, r3, r5
9002556a:	1400      	asrs	r0, r0, #16
9002556c:	f53f aeaa 	bmi.w	900252c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025570:	3901      	subs	r1, #1
90025572:	4288      	cmp	r0, r1
90025574:	f6bf aea6 	bge.w	900252c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025578:	9920      	ldr	r1, [sp, #128]	; 0x80
9002557a:	981e      	ldr	r0, [sp, #120]	; 0x78
9002557c:	fb01 0303 	mla	r3, r1, r3, r0
90025580:	141b      	asrs	r3, r3, #16
90025582:	f53f ae9f 	bmi.w	900252c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025586:	3a01      	subs	r2, #1
90025588:	4293      	cmp	r3, r2
9002558a:	f6bf ae9b 	bge.w	900252c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002558e:	9b06      	ldr	r3, [sp, #24]
90025590:	f64f 061f 	movw	r6, #63519	; 0xf81f
90025594:	f8dd e01c 	ldr.w	lr, [sp, #28]
90025598:	930f      	str	r3, [sp, #60]	; 0x3c
9002559a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002559c:	2b00      	cmp	r3, #0
9002559e:	f300 80b6 	bgt.w	9002570e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
900255a2:	9b06      	ldr	r3, [sp, #24]
900255a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900255a8:	9b07      	ldr	r3, [sp, #28]
900255aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900255ae:	9307      	str	r3, [sp, #28]
900255b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900255b2:	2b00      	cmp	r3, #0
900255b4:	f340 8218 	ble.w	900259e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900255b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900255bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900255be:	ee30 0a04 	vadd.f32	s0, s0, s8
900255c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900255c6:	eef0 6a62 	vmov.f32	s13, s5
900255ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
900255ce:	ee31 1a05 	vadd.f32	s2, s2, s10
900255d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900255d6:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
900255da:	eef0 6a43 	vmov.f32	s13, s6
900255de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900255e2:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
900255e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900255ea:	ee61 7a27 	vmul.f32	s15, s2, s15
900255ee:	ee77 2a62 	vsub.f32	s5, s14, s5
900255f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900255f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900255fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900255fe:	ee12 2a90 	vmov	r2, s5
90025602:	eef0 2a47 	vmov.f32	s5, s14
90025606:	fb92 f3f3 	sdiv	r3, r2, r3
9002560a:	ee13 2a10 	vmov	r2, s6
9002560e:	931f      	str	r3, [sp, #124]	; 0x7c
90025610:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025612:	eeb0 3a67 	vmov.f32	s6, s15
90025616:	fb92 f3f3 	sdiv	r3, r2, r3
9002561a:	9320      	str	r3, [sp, #128]	; 0x80
9002561c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002561e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90025620:	3b01      	subs	r3, #1
90025622:	930e      	str	r3, [sp, #56]	; 0x38
90025624:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025626:	bf08      	it	eq
90025628:	4613      	moveq	r3, r2
9002562a:	9306      	str	r3, [sp, #24]
9002562c:	e61f      	b.n	9002526e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9002562e:	fb08 f505 	mul.w	r5, r8, r5
90025632:	fb09 5303 	mla	r3, r9, r3, r5
90025636:	e69f      	b.n	90025378 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90025638:	4681      	mov	r9, r0
9002563a:	e6c6      	b.n	900253ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
9002563c:	f1c1 0210 	rsb	r2, r1, #16
90025640:	4341      	muls	r1, r0
90025642:	fb09 1902 	mla	r9, r9, r2, r1
90025646:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002564a:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002564e:	ea4f 1959 	mov.w	r9, r9, lsr #5
90025652:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025656:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002565a:	ea42 0909 	orr.w	r9, r2, r9
9002565e:	fa1f f289 	uxth.w	r2, r9
90025662:	e75b      	b.n	9002551c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90025664:	f8b7 c000 	ldrh.w	ip, [r7]
90025668:	43db      	mvns	r3, r3
9002566a:	ea4f 202c 	mov.w	r0, ip, asr #8
9002566e:	fa5f fe83 	uxtb.w	lr, r3
90025672:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90025676:	ea4f 05ec 	mov.w	r5, ip, asr #3
9002567a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
9002567e:	fb00 f00e 	mul.w	r0, r0, lr
90025682:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90025686:	b2db      	uxtb	r3, r3
90025688:	1c41      	adds	r1, r0, #1
9002568a:	fb05 f50e 	mul.w	r5, r5, lr
9002568e:	fb03 f30e 	mul.w	r3, r3, lr
90025692:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025696:	1211      	asrs	r1, r2, #8
90025698:	f021 0107 	bic.w	r1, r1, #7
9002569c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900256a0:	48d3      	ldr	r0, [pc, #844]	; (900259f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900256a2:	b2c9      	uxtb	r1, r1
900256a4:	ea00 2001 	and.w	r0, r0, r1, lsl #8
900256a8:	1c69      	adds	r1, r5, #1
900256aa:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900256ae:	10d1      	asrs	r1, r2, #3
900256b0:	00d2      	lsls	r2, r2, #3
900256b2:	f021 0103 	bic.w	r1, r1, #3
900256b6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900256ba:	00c9      	lsls	r1, r1, #3
900256bc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900256c0:	4301      	orrs	r1, r0
900256c2:	1c58      	adds	r0, r3, #1
900256c4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900256c8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900256cc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900256d0:	430a      	orrs	r2, r1
900256d2:	e726      	b.n	90025522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
900256d4:	f115 0e01 	adds.w	lr, r5, #1
900256d8:	f53f af24 	bmi.w	90025524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900256dc:	4572      	cmp	r2, lr
900256de:	f6ff af21 	blt.w	90025524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900256e2:	f110 0e01 	adds.w	lr, r0, #1
900256e6:	f53f af1d 	bmi.w	90025524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900256ea:	4573      	cmp	r3, lr
900256ec:	f6ff af1a 	blt.w	90025524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900256f0:	b21b      	sxth	r3, r3
900256f2:	b212      	sxth	r2, r2
900256f4:	9301      	str	r3, [sp, #4]
900256f6:	9200      	str	r2, [sp, #0]
900256f8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
900256fc:	e9cd 5002 	strd	r5, r0, [sp, #8]
90025700:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90025704:	4639      	mov	r1, r7
90025706:	9811      	ldr	r0, [sp, #68]	; 0x44
90025708:	f7ff fc22 	bl	90024f50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9002570c:	e70a      	b.n	90025524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002570e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025710:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025714:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025716:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002571a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002571c:	fa1f fc82 	uxth.w	ip, r2
90025720:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025724:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025726:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002572a:	141f      	asrs	r7, r3, #16
9002572c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002572e:	141b      	asrs	r3, r3, #16
90025730:	fb01 3707 	mla	r7, r1, r7, r3
90025734:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025736:	eb03 0a07 	add.w	sl, r3, r7
9002573a:	f813 9007 	ldrb.w	r9, [r3, r7]
9002573e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90025742:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025746:	b29b      	uxth	r3, r3
90025748:	2d00      	cmp	r5, #0
9002574a:	f000 80fe 	beq.w	9002594a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
9002574e:	f81a 4001 	ldrb.w	r4, [sl, r1]
90025752:	eb0a 0b01 	add.w	fp, sl, r1
90025756:	fa1f fa85 	uxth.w	sl, r5
9002575a:	940c      	str	r4, [sp, #48]	; 0x30
9002575c:	fb0a fc0c 	mul.w	ip, sl, ip
90025760:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025764:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90025768:	eba0 000c 	sub.w	r0, r0, ip
9002576c:	940d      	str	r4, [sp, #52]	; 0x34
9002576e:	fa1f fa8a 	uxth.w	sl, sl
90025772:	b280      	uxth	r0, r0
90025774:	eba3 030a 	sub.w	r3, r3, sl
90025778:	fb08 f000 	mul.w	r0, r8, r0
9002577c:	b29b      	uxth	r3, r3
9002577e:	fb09 0303 	mla	r3, r9, r3, r0
90025782:	980c      	ldr	r0, [sp, #48]	; 0x30
90025784:	fb0a 3300 	mla	r3, sl, r0, r3
90025788:	fb0c 3304 	mla	r3, ip, r4, r3
9002578c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025790:	2b00      	cmp	r3, #0
90025792:	f000 80cc 	beq.w	9002592e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025796:	9808      	ldr	r0, [sp, #32]
90025798:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002579c:	9c08      	ldr	r4, [sp, #32]
9002579e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900257a2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900257a6:	f000 80d5 	beq.w	90025954 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900257aa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
900257ae:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900257b2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900257b6:	fb0a fc0c 	mul.w	ip, sl, ip
900257ba:	fb09 f707 	mul.w	r7, r9, r7
900257be:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900257c2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
900257c6:	f107 0b20 	add.w	fp, r7, #32
900257ca:	44cc      	add	ip, r9
900257cc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900257d0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900257d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
900257d8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900257dc:	ea4c 0909 	orr.w	r9, ip, r9
900257e0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
900257e4:	8847      	ldrh	r7, [r0, #2]
900257e6:	d019      	beq.n	9002581c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
900257e8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
900257ec:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900257f0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900257f4:	fb0a fc0c 	mul.w	ip, sl, ip
900257f8:	fb08 f807 	mul.w	r8, r8, r7
900257fc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025800:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90025804:	f108 0b20 	add.w	fp, r8, #32
90025808:	44bc      	add	ip, r7
9002580a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002580e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025812:	0a3f      	lsrs	r7, r7, #8
90025814:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025818:	ea4c 0707 	orr.w	r7, ip, r7
9002581c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90025820:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90025824:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90025828:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9002582c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90025830:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025834:	ea4c 0909 	orr.w	r9, ip, r9
90025838:	ea4a 0707 	orr.w	r7, sl, r7
9002583c:	2d00      	cmp	r5, #0
9002583e:	f000 808b 	beq.w	90025958 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90025842:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90025846:	3901      	subs	r1, #1
90025848:	0049      	lsls	r1, r1, #1
9002584a:	3102      	adds	r1, #2
9002584c:	eb00 0c01 	add.w	ip, r0, r1
90025850:	5a41      	ldrh	r1, [r0, r1]
90025852:	980c      	ldr	r0, [sp, #48]	; 0x30
90025854:	28ff      	cmp	r0, #255	; 0xff
90025856:	d019      	beq.n	9002588c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90025858:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
9002585c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9002585e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025862:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025866:	fb04 fa01 	mul.w	sl, r4, r1
9002586a:	fb08 f800 	mul.w	r8, r8, r0
9002586e:	f10a 0020 	add.w	r0, sl, #32
90025872:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90025876:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002587a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002587e:	4441      	add	r1, r8
90025880:	0a00      	lsrs	r0, r0, #8
90025882:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90025886:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002588a:	4301      	orrs	r1, r0
9002588c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002588e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90025892:	2cff      	cmp	r4, #255	; 0xff
90025894:	d01a      	beq.n	900258cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90025896:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
9002589a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002589e:	ea4f 08e4 	mov.w	r8, r4, asr #3
900258a2:	fb04 fa00 	mul.w	sl, r4, r0
900258a6:	fb08 f80c 	mul.w	r8, r8, ip
900258aa:	f10a 0c20 	add.w	ip, sl, #32
900258ae:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900258b2:	f608 0801 	addw	r8, r8, #2049	; 0x801
900258b6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900258ba:	4440      	add	r0, r8
900258bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900258c0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900258c4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900258c8:	ea40 000c 	orr.w	r0, r0, ip
900258cc:	fb15 fc02 	smulbb	ip, r5, r2
900258d0:	f1c5 0810 	rsb	r8, r5, #16
900258d4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900258d8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900258dc:	ea4f 0cec 	mov.w	ip, ip, asr #3
900258e0:	eba8 0802 	sub.w	r8, r8, r2
900258e4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900258e8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900258ec:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900258f0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900258f4:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
900258f8:	ea4a 0101 	orr.w	r1, sl, r1
900258fc:	437a      	muls	r2, r7
900258fe:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90025902:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025906:	fb09 2208 	mla	r2, r9, r8, r2
9002590a:	ea4b 0000 	orr.w	r0, fp, r0
9002590e:	fb05 2201 	mla	r2, r5, r1, r2
90025912:	fb0c 2200 	mla	r2, ip, r0, r2
90025916:	0d57      	lsrs	r7, r2, #21
90025918:	0952      	lsrs	r2, r2, #5
9002591a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002591e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025922:	433a      	orrs	r2, r7
90025924:	2bff      	cmp	r3, #255	; 0xff
90025926:	b292      	uxth	r2, r2
90025928:	d127      	bne.n	9002597a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
9002592a:	f8ae 2000 	strh.w	r2, [lr]
9002592e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025930:	f10e 0e02 	add.w	lr, lr, #2
90025934:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90025936:	4413      	add	r3, r2
90025938:	9a1e      	ldr	r2, [sp, #120]	; 0x78
9002593a:	931d      	str	r3, [sp, #116]	; 0x74
9002593c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002593e:	441a      	add	r2, r3
90025940:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90025942:	3b01      	subs	r3, #1
90025944:	921e      	str	r2, [sp, #120]	; 0x78
90025946:	930f      	str	r3, [sp, #60]	; 0x3c
90025948:	e627      	b.n	9002559a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
9002594a:	fb08 f000 	mul.w	r0, r8, r0
9002594e:	fb09 0303 	mla	r3, r9, r3, r0
90025952:	e71b      	b.n	9002578c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90025954:	46b9      	mov	r9, r7
90025956:	e743      	b.n	900257e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90025958:	f1c2 0110 	rsb	r1, r2, #16
9002595c:	437a      	muls	r2, r7
9002595e:	fb09 2901 	mla	r9, r9, r1, r2
90025962:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025966:	ea4f 5059 	mov.w	r0, r9, lsr #21
9002596a:	ea4f 1259 	mov.w	r2, r9, lsr #5
9002596e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025972:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025976:	4302      	orrs	r2, r0
90025978:	e7d4      	b.n	90025924 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
9002597a:	f8be 7000 	ldrh.w	r7, [lr]
9002597e:	43db      	mvns	r3, r3
90025980:	4c1b      	ldr	r4, [pc, #108]	; (900259f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025982:	1238      	asrs	r0, r7, #8
90025984:	fa5f fc83 	uxtb.w	ip, r3
90025988:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002598c:	10fd      	asrs	r5, r7, #3
9002598e:	00fb      	lsls	r3, r7, #3
90025990:	fb00 f00c 	mul.w	r0, r0, ip
90025994:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90025998:	b2db      	uxtb	r3, r3
9002599a:	fb05 f10c 	mul.w	r1, r5, ip
9002599e:	1c45      	adds	r5, r0, #1
900259a0:	fb03 f30c 	mul.w	r3, r3, ip
900259a4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900259a8:	1215      	asrs	r5, r2, #8
900259aa:	f025 0507 	bic.w	r5, r5, #7
900259ae:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900259b2:	1c4d      	adds	r5, r1, #1
900259b4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900259b8:	10d1      	asrs	r1, r2, #3
900259ba:	b2c0      	uxtb	r0, r0
900259bc:	f021 0103 	bic.w	r1, r1, #3
900259c0:	00d2      	lsls	r2, r2, #3
900259c2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
900259c6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900259ca:	00c9      	lsls	r1, r1, #3
900259cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900259d0:	4308      	orrs	r0, r1
900259d2:	1c59      	adds	r1, r3, #1
900259d4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900259d8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900259dc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
900259e0:	4318      	orrs	r0, r3
900259e2:	f8ae 0000 	strh.w	r0, [lr]
900259e6:	e7a2      	b.n	9002592e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900259e8:	b013      	add	sp, #76	; 0x4c
900259ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900259ee:	bf00      	nop
900259f0:	fffff800 	.word	0xfffff800

900259f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
900259f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900259f8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
900259fc:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90025a00:	fb05 4c03 	mla	ip, r5, r3, r4
90025a04:	2d00      	cmp	r5, #0
90025a06:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
90025a0a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90025a0e:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90025a12:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90025a16:	8808      	ldrh	r0, [r1, #0]
90025a18:	f2c0 80a7 	blt.w	90025b6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90025a1c:	45aa      	cmp	sl, r5
90025a1e:	f340 80a4 	ble.w	90025b6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90025a22:	2c00      	cmp	r4, #0
90025a24:	f2c0 809f 	blt.w	90025b66 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90025a28:	42a3      	cmp	r3, r4
90025a2a:	f340 809c 	ble.w	90025b66 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90025a2e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90025a32:	1c62      	adds	r2, r4, #1
90025a34:	f100 809c 	bmi.w	90025b70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025a38:	4293      	cmp	r3, r2
90025a3a:	f340 8099 	ble.w	90025b70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025a3e:	f1b9 0f00 	cmp.w	r9, #0
90025a42:	f000 8095 	beq.w	90025b70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025a46:	f8be c002 	ldrh.w	ip, [lr, #2]
90025a4a:	3501      	adds	r5, #1
90025a4c:	f100 8094 	bmi.w	90025b78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025a50:	45aa      	cmp	sl, r5
90025a52:	f340 8091 	ble.w	90025b78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025a56:	2f00      	cmp	r7, #0
90025a58:	f000 808e 	beq.w	90025b78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025a5c:	2c00      	cmp	r4, #0
90025a5e:	f2c0 8089 	blt.w	90025b74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90025a62:	42a3      	cmp	r3, r4
90025a64:	f340 8086 	ble.w	90025b74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90025a68:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90025a6c:	3401      	adds	r4, #1
90025a6e:	f100 8086 	bmi.w	90025b7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025a72:	42a3      	cmp	r3, r4
90025a74:	f340 8083 	ble.w	90025b7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025a78:	f1b9 0f00 	cmp.w	r9, #0
90025a7c:	d07f      	beq.n	90025b7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025a7e:	3301      	adds	r3, #1
90025a80:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90025a84:	ea4f 4408 	mov.w	r4, r8, lsl #16
90025a88:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
90025a8c:	fb19 fe07 	smulbb	lr, r9, r7
90025a90:	f1c7 0210 	rsb	r2, r7, #16
90025a94:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90025a98:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90025a9c:	eba2 0209 	sub.w	r2, r2, r9
90025aa0:	ea44 0808 	orr.w	r8, r4, r8
90025aa4:	ea4f 440c 	mov.w	r4, ip, lsl #16
90025aa8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90025aac:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90025ab0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90025ab4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90025ab8:	ea44 0c0c 	orr.w	ip, r4, ip
90025abc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90025ac0:	fb04 f40c 	mul.w	r4, r4, ip
90025ac4:	fb02 4808 	mla	r8, r2, r8, r4
90025ac8:	041a      	lsls	r2, r3, #16
90025aca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90025ace:	b2b4      	uxth	r4, r6
90025ad0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025ad4:	43f6      	mvns	r6, r6
90025ad6:	4313      	orrs	r3, r2
90025ad8:	042a      	lsls	r2, r5, #16
90025ada:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90025ade:	b2f6      	uxtb	r6, r6
90025ae0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025ae4:	fb0e 8303 	mla	r3, lr, r3, r8
90025ae8:	432a      	orrs	r2, r5
90025aea:	fb07 3202 	mla	r2, r7, r2, r3
90025aee:	10c7      	asrs	r7, r0, #3
90025af0:	0d53      	lsrs	r3, r2, #21
90025af2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90025af6:	0952      	lsrs	r2, r2, #5
90025af8:	fb17 f706 	smulbb	r7, r7, r6
90025afc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025b00:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025b04:	431a      	orrs	r2, r3
90025b06:	b293      	uxth	r3, r2
90025b08:	1202      	asrs	r2, r0, #8
90025b0a:	121d      	asrs	r5, r3, #8
90025b0c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90025b10:	00c0      	lsls	r0, r0, #3
90025b12:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90025b16:	fb12 f206 	smulbb	r2, r2, r6
90025b1a:	b2c0      	uxtb	r0, r0
90025b1c:	fb05 2504 	mla	r5, r5, r4, r2
90025b20:	10da      	asrs	r2, r3, #3
90025b22:	fb10 f006 	smulbb	r0, r0, r6
90025b26:	00db      	lsls	r3, r3, #3
90025b28:	b2ad      	uxth	r5, r5
90025b2a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90025b2e:	b2db      	uxtb	r3, r3
90025b30:	fb02 7204 	mla	r2, r2, r4, r7
90025b34:	fb03 0004 	mla	r0, r3, r4, r0
90025b38:	1c6b      	adds	r3, r5, #1
90025b3a:	b292      	uxth	r2, r2
90025b3c:	b280      	uxth	r0, r0
90025b3e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025b42:	1c43      	adds	r3, r0, #1
90025b44:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90025b48:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90025b4c:	1c50      	adds	r0, r2, #1
90025b4e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90025b52:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025b56:	0952      	lsrs	r2, r2, #5
90025b58:	432b      	orrs	r3, r5
90025b5a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025b5e:	4313      	orrs	r3, r2
90025b60:	800b      	strh	r3, [r1, #0]
90025b62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90025b66:	4680      	mov	r8, r0
90025b68:	e763      	b.n	90025a32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90025b6a:	4684      	mov	ip, r0
90025b6c:	4680      	mov	r8, r0
90025b6e:	e76c      	b.n	90025a4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90025b70:	4684      	mov	ip, r0
90025b72:	e76a      	b.n	90025a4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90025b74:	4605      	mov	r5, r0
90025b76:	e779      	b.n	90025a6c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90025b78:	4603      	mov	r3, r0
90025b7a:	4605      	mov	r5, r0
90025b7c:	e782      	b.n	90025a84 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90025b7e:	4603      	mov	r3, r0
90025b80:	e780      	b.n	90025a84 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90025b82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025b82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025b86:	b093      	sub	sp, #76	; 0x4c
90025b88:	461d      	mov	r5, r3
90025b8a:	9210      	str	r2, [sp, #64]	; 0x40
90025b8c:	9b21      	ldr	r3, [sp, #132]	; 0x84
90025b8e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
90025b92:	910a      	str	r1, [sp, #40]	; 0x28
90025b94:	920b      	str	r2, [sp, #44]	; 0x2c
90025b96:	6859      	ldr	r1, [r3, #4]
90025b98:	681b      	ldr	r3, [r3, #0]
90025b9a:	9011      	str	r0, [sp, #68]	; 0x44
90025b9c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
90025ba0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90025ba4:	fb01 2707 	mla	r7, r1, r7, r2
90025ba8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90025bac:	9307      	str	r3, [sp, #28]
90025bae:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025bb0:	681b      	ldr	r3, [r3, #0]
90025bb2:	9309      	str	r3, [sp, #36]	; 0x24
90025bb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90025bb6:	43db      	mvns	r3, r3
90025bb8:	b2db      	uxtb	r3, r3
90025bba:	9308      	str	r3, [sp, #32]
90025bbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025bbe:	2b00      	cmp	r3, #0
90025bc0:	dc03      	bgt.n	90025bca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025bc2:	9b10      	ldr	r3, [sp, #64]	; 0x40
90025bc4:	2b00      	cmp	r3, #0
90025bc6:	f340 8205 	ble.w	90025fd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025bca:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025bcc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025bd0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025bd4:	1e48      	subs	r0, r1, #1
90025bd6:	f102 3cff 	add.w	ip, r2, #4294967295
90025bda:	2d00      	cmp	r5, #0
90025bdc:	f340 80da 	ble.w	90025d94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90025be0:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025be4:	ea4f 4326 	mov.w	r3, r6, asr #16
90025be8:	d406      	bmi.n	90025bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025bea:	4586      	cmp	lr, r0
90025bec:	da04      	bge.n	90025bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025bee:	2b00      	cmp	r3, #0
90025bf0:	db02      	blt.n	90025bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025bf2:	4563      	cmp	r3, ip
90025bf4:	f2c0 80cf 	blt.w	90025d96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90025bf8:	f11e 0e01 	adds.w	lr, lr, #1
90025bfc:	f100 80c1 	bmi.w	90025d82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025c00:	4571      	cmp	r1, lr
90025c02:	f2c0 80be 	blt.w	90025d82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025c06:	3301      	adds	r3, #1
90025c08:	f100 80bb 	bmi.w	90025d82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025c0c:	429a      	cmp	r2, r3
90025c0e:	f2c0 80b8 	blt.w	90025d82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025c12:	46a9      	mov	r9, r5
90025c14:	f8dd 801c 	ldr.w	r8, [sp, #28]
90025c18:	f1b9 0f00 	cmp.w	r9, #0
90025c1c:	f340 80d8 	ble.w	90025dd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90025c20:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025c22:	1421      	asrs	r1, r4, #16
90025c24:	ea4f 4026 	mov.w	r0, r6, asr #16
90025c28:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025c2c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025c30:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90025c34:	f100 8112 	bmi.w	90025e5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025c38:	f10e 3aff 	add.w	sl, lr, #4294967295
90025c3c:	4551      	cmp	r1, sl
90025c3e:	f280 810d 	bge.w	90025e5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025c42:	2800      	cmp	r0, #0
90025c44:	f2c0 810a 	blt.w	90025e5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025c48:	f103 3aff 	add.w	sl, r3, #4294967295
90025c4c:	4550      	cmp	r0, sl
90025c4e:	f280 8105 	bge.w	90025e5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025c52:	fa0f f38e 	sxth.w	r3, lr
90025c56:	fb00 1103 	mla	r1, r0, r3, r1
90025c5a:	9809      	ldr	r0, [sp, #36]	; 0x24
90025c5c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90025c60:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90025c64:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90025c68:	f1bc 0f00 	cmp.w	ip, #0
90025c6c:	d007      	beq.n	90025c7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90025c6e:	005b      	lsls	r3, r3, #1
90025c70:	eb0a 0003 	add.w	r0, sl, r3
90025c74:	f83a 3003 	ldrh.w	r3, [sl, r3]
90025c78:	930c      	str	r3, [sp, #48]	; 0x30
90025c7a:	8843      	ldrh	r3, [r0, #2]
90025c7c:	930d      	str	r3, [sp, #52]	; 0x34
90025c7e:	ea4f 400e 	mov.w	r0, lr, lsl #16
90025c82:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90025c86:	fb12 f30c 	smulbb	r3, r2, ip
90025c8a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025c8e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90025c92:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90025c96:	10db      	asrs	r3, r3, #3
90025c98:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025c9c:	ea40 000e 	orr.w	r0, r0, lr
90025ca0:	f1cc 0e10 	rsb	lr, ip, #16
90025ca4:	ea4a 0101 	orr.w	r1, sl, r1
90025ca8:	9f08      	ldr	r7, [sp, #32]
90025caa:	ebae 0e02 	sub.w	lr, lr, r2
90025cae:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025cb2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90025cb6:	4351      	muls	r1, r2
90025cb8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90025cba:	fb0e 1e00 	mla	lr, lr, r0, r1
90025cbe:	990c      	ldr	r1, [sp, #48]	; 0x30
90025cc0:	0410      	lsls	r0, r2, #16
90025cc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025cc6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90025cca:	4310      	orrs	r0, r2
90025ccc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90025cce:	0412      	lsls	r2, r2, #16
90025cd0:	fb03 e000 	mla	r0, r3, r0, lr
90025cd4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90025cd8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90025cdc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025ce0:	ea42 020e 	orr.w	r2, r2, lr
90025ce4:	fb03 0302 	mla	r3, r3, r2, r0
90025ce8:	f8b8 0000 	ldrh.w	r0, [r8]
90025cec:	0d5a      	lsrs	r2, r3, #21
90025cee:	095b      	lsrs	r3, r3, #5
90025cf0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025cf4:	1201      	asrs	r1, r0, #8
90025cf6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90025cfa:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90025cfe:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90025d02:	00c0      	lsls	r0, r0, #3
90025d04:	4313      	orrs	r3, r2
90025d06:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90025d0a:	fb11 f107 	smulbb	r1, r1, r7
90025d0e:	b2c0      	uxtb	r0, r0
90025d10:	b29b      	uxth	r3, r3
90025d12:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90025d16:	fb10 f007 	smulbb	r0, r0, r7
90025d1a:	fb1e fe07 	smulbb	lr, lr, r7
90025d1e:	ea4f 2c23 	mov.w	ip, r3, asr #8
90025d22:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90025d26:	fb0c 1c02 	mla	ip, ip, r2, r1
90025d2a:	10d9      	asrs	r1, r3, #3
90025d2c:	00db      	lsls	r3, r3, #3
90025d2e:	fa1f fc8c 	uxth.w	ip, ip
90025d32:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90025d36:	b2db      	uxtb	r3, r3
90025d38:	fb01 e102 	mla	r1, r1, r2, lr
90025d3c:	fb03 0302 	mla	r3, r3, r2, r0
90025d40:	b289      	uxth	r1, r1
90025d42:	b29a      	uxth	r2, r3
90025d44:	f10c 0301 	add.w	r3, ip, #1
90025d48:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90025d4c:	1c53      	adds	r3, r2, #1
90025d4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025d52:	1c4a      	adds	r2, r1, #1
90025d54:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90025d58:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025d5c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025d60:	0949      	lsrs	r1, r1, #5
90025d62:	ea43 030c 	orr.w	r3, r3, ip
90025d66:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025d6a:	430b      	orrs	r3, r1
90025d6c:	f8a8 3000 	strh.w	r3, [r8]
90025d70:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90025d72:	f108 0802 	add.w	r8, r8, #2
90025d76:	f109 39ff 	add.w	r9, r9, #4294967295
90025d7a:	441c      	add	r4, r3
90025d7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025d7e:	441e      	add	r6, r3
90025d80:	e74a      	b.n	90025c18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90025d82:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90025d84:	3d01      	subs	r5, #1
90025d86:	441c      	add	r4, r3
90025d88:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025d8a:	441e      	add	r6, r3
90025d8c:	9b07      	ldr	r3, [sp, #28]
90025d8e:	3302      	adds	r3, #2
90025d90:	9307      	str	r3, [sp, #28]
90025d92:	e722      	b.n	90025bda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025d94:	d022      	beq.n	90025ddc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90025d96:	1e6b      	subs	r3, r5, #1
90025d98:	981f      	ldr	r0, [sp, #124]	; 0x7c
90025d9a:	fb00 4003 	mla	r0, r0, r3, r4
90025d9e:	1400      	asrs	r0, r0, #16
90025da0:	f53f af37 	bmi.w	90025c12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025da4:	3901      	subs	r1, #1
90025da6:	4288      	cmp	r0, r1
90025da8:	f6bf af33 	bge.w	90025c12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025dac:	9920      	ldr	r1, [sp, #128]	; 0x80
90025dae:	fb01 6303 	mla	r3, r1, r3, r6
90025db2:	141b      	asrs	r3, r3, #16
90025db4:	f53f af2d 	bmi.w	90025c12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025db8:	3a01      	subs	r2, #1
90025dba:	4293      	cmp	r3, r2
90025dbc:	f6bf af29 	bge.w	90025c12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025dc0:	46a8      	mov	r8, r5
90025dc2:	f8dd 901c 	ldr.w	r9, [sp, #28]
90025dc6:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
90025dca:	f1b8 0f00 	cmp.w	r8, #0
90025dce:	dc60      	bgt.n	90025e92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90025dd0:	9b07      	ldr	r3, [sp, #28]
90025dd2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025dd6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025dda:	9307      	str	r3, [sp, #28]
90025ddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025dde:	2b00      	cmp	r3, #0
90025de0:	f340 80f8 	ble.w	90025fd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025de4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90025de8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025dea:	ee30 0a04 	vadd.f32	s0, s0, s8
90025dee:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025df2:	eef0 6a62 	vmov.f32	s13, s5
90025df6:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025dfa:	ee31 1a05 	vadd.f32	s2, s2, s10
90025dfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025e02:	ee16 4a90 	vmov	r4, s13
90025e06:	eef0 6a43 	vmov.f32	s13, s6
90025e0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025e0e:	ee16 6a90 	vmov	r6, s13
90025e12:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025e16:	ee61 7a27 	vmul.f32	s15, s2, s15
90025e1a:	ee77 2a62 	vsub.f32	s5, s14, s5
90025e1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025e22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025e26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025e2a:	ee12 2a90 	vmov	r2, s5
90025e2e:	eef0 2a47 	vmov.f32	s5, s14
90025e32:	fb92 f3f3 	sdiv	r3, r2, r3
90025e36:	ee13 2a10 	vmov	r2, s6
90025e3a:	931f      	str	r3, [sp, #124]	; 0x7c
90025e3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025e3e:	eeb0 3a67 	vmov.f32	s6, s15
90025e42:	fb92 f3f3 	sdiv	r3, r2, r3
90025e46:	9320      	str	r3, [sp, #128]	; 0x80
90025e48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025e4a:	9a10      	ldr	r2, [sp, #64]	; 0x40
90025e4c:	3b01      	subs	r3, #1
90025e4e:	930a      	str	r3, [sp, #40]	; 0x28
90025e50:	bf08      	it	eq
90025e52:	4615      	moveq	r5, r2
90025e54:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025e56:	bf18      	it	ne
90025e58:	461d      	movne	r5, r3
90025e5a:	e6af      	b.n	90025bbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025e5c:	f111 0a01 	adds.w	sl, r1, #1
90025e60:	d486      	bmi.n	90025d70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025e62:	45d6      	cmp	lr, sl
90025e64:	db84      	blt.n	90025d70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025e66:	f110 0a01 	adds.w	sl, r0, #1
90025e6a:	d481      	bmi.n	90025d70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025e6c:	4553      	cmp	r3, sl
90025e6e:	f6ff af7f 	blt.w	90025d70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025e72:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90025e74:	b21b      	sxth	r3, r3
90025e76:	9101      	str	r1, [sp, #4]
90025e78:	4641      	mov	r1, r8
90025e7a:	9300      	str	r3, [sp, #0]
90025e7c:	fa0f f38e 	sxth.w	r3, lr
90025e80:	e9cd 0202 	strd	r0, r2, [sp, #8]
90025e84:	e9cd c704 	strd	ip, r7, [sp, #16]
90025e88:	9a09      	ldr	r2, [sp, #36]	; 0x24
90025e8a:	9811      	ldr	r0, [sp, #68]	; 0x44
90025e8c:	f7ff fdb2 	bl	900259f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90025e90:	e76e      	b.n	90025d70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025e92:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025e94:	1430      	asrs	r0, r6, #16
90025e96:	9f09      	ldr	r7, [sp, #36]	; 0x24
90025e98:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90025e9c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025ea0:	1423      	asrs	r3, r4, #16
90025ea2:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025ea6:	fb01 3000 	mla	r0, r1, r0, r3
90025eaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025eac:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90025eb0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90025eb4:	8858      	ldrh	r0, [r3, #2]
90025eb6:	f1be 0f00 	cmp.w	lr, #0
90025eba:	d00b      	beq.n	90025ed4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90025ebc:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90025ec0:	3901      	subs	r1, #1
90025ec2:	0049      	lsls	r1, r1, #1
90025ec4:	3102      	adds	r1, #2
90025ec6:	eb03 0b01 	add.w	fp, r3, r1
90025eca:	5a5b      	ldrh	r3, [r3, r1]
90025ecc:	930e      	str	r3, [sp, #56]	; 0x38
90025ece:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90025ed2:	930f      	str	r3, [sp, #60]	; 0x3c
90025ed4:	ea4f 410c 	mov.w	r1, ip, lsl #16
90025ed8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90025edc:	fb12 f30e 	smulbb	r3, r2, lr
90025ee0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025ee4:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90025ee8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025eec:	10db      	asrs	r3, r3, #3
90025eee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025ef2:	ea41 010c 	orr.w	r1, r1, ip
90025ef6:	f1ce 0c10 	rsb	ip, lr, #16
90025efa:	ea4b 0000 	orr.w	r0, fp, r0
90025efe:	9f08      	ldr	r7, [sp, #32]
90025f00:	ebac 0c02 	sub.w	ip, ip, r2
90025f04:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025f08:	f108 38ff 	add.w	r8, r8, #4294967295
90025f0c:	4350      	muls	r0, r2
90025f0e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90025f12:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90025f14:	fb0c 0c01 	mla	ip, ip, r1, r0
90025f18:	980e      	ldr	r0, [sp, #56]	; 0x38
90025f1a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90025f1e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
90025f22:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90025f24:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025f28:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025f2c:	0412      	lsls	r2, r2, #16
90025f2e:	ea4b 0101 	orr.w	r1, fp, r1
90025f32:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025f36:	fb03 c101 	mla	r1, r3, r1, ip
90025f3a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90025f3e:	4302      	orrs	r2, r0
90025f40:	fb03 1202 	mla	r2, r3, r2, r1
90025f44:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90025f48:	0952      	lsrs	r2, r2, #5
90025f4a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90025f4e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
90025f52:	f8b9 2000 	ldrh.w	r2, [r9]
90025f56:	ea4b 0303 	orr.w	r3, fp, r3
90025f5a:	1211      	asrs	r1, r2, #8
90025f5c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90025f60:	b29b      	uxth	r3, r3
90025f62:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90025f66:	00d2      	lsls	r2, r2, #3
90025f68:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
90025f6c:	fb11 f107 	smulbb	r1, r1, r7
90025f70:	1218      	asrs	r0, r3, #8
90025f72:	fb1c fc07 	smulbb	ip, ip, r7
90025f76:	b2d2      	uxtb	r2, r2
90025f78:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90025f7c:	fb12 f207 	smulbb	r2, r2, r7
90025f80:	fb00 100a 	mla	r0, r0, sl, r1
90025f84:	10d9      	asrs	r1, r3, #3
90025f86:	00db      	lsls	r3, r3, #3
90025f88:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90025f8c:	b280      	uxth	r0, r0
90025f8e:	b2db      	uxtb	r3, r3
90025f90:	fb01 c10a 	mla	r1, r1, sl, ip
90025f94:	fb03 230a 	mla	r3, r3, sl, r2
90025f98:	1c42      	adds	r2, r0, #1
90025f9a:	b289      	uxth	r1, r1
90025f9c:	b29b      	uxth	r3, r3
90025f9e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025fa2:	f101 0c01 	add.w	ip, r1, #1
90025fa6:	1c5a      	adds	r2, r3, #1
90025fa8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90025fac:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90025fb0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025fb4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90025fb6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90025fba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90025fbe:	441c      	add	r4, r3
90025fc0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025fc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025fc6:	4310      	orrs	r0, r2
90025fc8:	441e      	add	r6, r3
90025fca:	ea40 000c 	orr.w	r0, r0, ip
90025fce:	f829 0b02 	strh.w	r0, [r9], #2
90025fd2:	e6fa      	b.n	90025dca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90025fd4:	b013      	add	sp, #76	; 0x4c
90025fd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025fda <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90025fda:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90025fde:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90025fe2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90025fe6:	fb0e 4703 	mla	r7, lr, r3, r4
90025fea:	f1be 0f00 	cmp.w	lr, #0
90025fee:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
90025ff2:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90025ff6:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90025ffa:	8808      	ldrh	r0, [r1, #0]
90025ffc:	db60      	blt.n	900260c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90025ffe:	45f1      	cmp	r9, lr
90026000:	dd5e      	ble.n	900260c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90026002:	2c00      	cmp	r4, #0
90026004:	db5a      	blt.n	900260bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90026006:	42a3      	cmp	r3, r4
90026008:	dd58      	ble.n	900260bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
9002600a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
9002600e:	1c62      	adds	r2, r4, #1
90026010:	d459      	bmi.n	900260c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90026012:	4293      	cmp	r3, r2
90026014:	dd57      	ble.n	900260c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90026016:	2d00      	cmp	r5, #0
90026018:	d055      	beq.n	900260c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002601a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
9002601e:	f11e 0e01 	adds.w	lr, lr, #1
90026022:	d454      	bmi.n	900260ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026024:	45f1      	cmp	r9, lr
90026026:	dd52      	ble.n	900260ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026028:	2e00      	cmp	r6, #0
9002602a:	d050      	beq.n	900260ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
9002602c:	2c00      	cmp	r4, #0
9002602e:	db4c      	blt.n	900260ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90026030:	42a3      	cmp	r3, r4
90026032:	dd4a      	ble.n	900260ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90026034:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90026038:	3401      	adds	r4, #1
9002603a:	d405      	bmi.n	90026048 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002603c:	42a3      	cmp	r3, r4
9002603e:	dd03      	ble.n	90026048 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026040:	b115      	cbz	r5, 90026048 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026042:	3301      	adds	r3, #1
90026044:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90026048:	fb15 f406 	smulbb	r4, r5, r6
9002604c:	ea4f 430c 	mov.w	r3, ip, lsl #16
90026050:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90026054:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90026058:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9002605c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90026060:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90026064:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90026068:	ea43 0c0c 	orr.w	ip, r3, ip
9002606c:	f1c6 0310 	rsb	r3, r6, #16
90026070:	ea4e 0707 	orr.w	r7, lr, r7
90026074:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90026078:	1b5b      	subs	r3, r3, r5
9002607a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9002607e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90026082:	437d      	muls	r5, r7
90026084:	fb03 5c0c 	mla	ip, r3, ip, r5
90026088:	0403      	lsls	r3, r0, #16
9002608a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002608e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90026092:	4318      	orrs	r0, r3
90026094:	0413      	lsls	r3, r2, #16
90026096:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002609a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9002609e:	fb04 c000 	mla	r0, r4, r0, ip
900260a2:	4313      	orrs	r3, r2
900260a4:	fb06 0003 	mla	r0, r6, r3, r0
900260a8:	0d43      	lsrs	r3, r0, #21
900260aa:	0940      	lsrs	r0, r0, #5
900260ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900260b0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900260b4:	4318      	orrs	r0, r3
900260b6:	8008      	strh	r0, [r1, #0]
900260b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900260bc:	4684      	mov	ip, r0
900260be:	e7a6      	b.n	9002600e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
900260c0:	4607      	mov	r7, r0
900260c2:	4684      	mov	ip, r0
900260c4:	e7ab      	b.n	9002601e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900260c6:	4607      	mov	r7, r0
900260c8:	e7a9      	b.n	9002601e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900260ca:	4602      	mov	r2, r0
900260cc:	e7b4      	b.n	90026038 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
900260ce:	4602      	mov	r2, r0
900260d0:	e7ba      	b.n	90026048 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

900260d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900260d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900260d6:	b08f      	sub	sp, #60	; 0x3c
900260d8:	461d      	mov	r5, r3
900260da:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900260dc:	9107      	str	r1, [sp, #28]
900260de:	920c      	str	r2, [sp, #48]	; 0x30
900260e0:	6859      	ldr	r1, [r3, #4]
900260e2:	681b      	ldr	r3, [r3, #0]
900260e4:	900d      	str	r0, [sp, #52]	; 0x34
900260e6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
900260ea:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
900260ee:	fb01 2707 	mla	r7, r1, r7, r2
900260f2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
900260f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
900260f8:	f8d3 8000 	ldr.w	r8, [r3]
900260fc:	9b07      	ldr	r3, [sp, #28]
900260fe:	2b00      	cmp	r3, #0
90026100:	dc03      	bgt.n	9002610a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90026102:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90026104:	2b00      	cmp	r3, #0
90026106:	f340 8182 	ble.w	9002640e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
9002610a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002610c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026110:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026114:	1e48      	subs	r0, r1, #1
90026116:	f102 3cff 	add.w	ip, r2, #4294967295
9002611a:	2d00      	cmp	r5, #0
9002611c:	f340 809b 	ble.w	90026256 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90026120:	ea5f 4e24 	movs.w	lr, r4, asr #16
90026124:	ea4f 4326 	mov.w	r3, r6, asr #16
90026128:	d406      	bmi.n	90026138 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002612a:	4586      	cmp	lr, r0
9002612c:	da04      	bge.n	90026138 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002612e:	2b00      	cmp	r3, #0
90026130:	db02      	blt.n	90026138 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90026132:	4563      	cmp	r3, ip
90026134:	f2c0 8090 	blt.w	90026258 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90026138:	f11e 0e01 	adds.w	lr, lr, #1
9002613c:	f100 8084 	bmi.w	90026248 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026140:	4571      	cmp	r1, lr
90026142:	f2c0 8081 	blt.w	90026248 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026146:	3301      	adds	r3, #1
90026148:	d47e      	bmi.n	90026248 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002614a:	429a      	cmp	r2, r3
9002614c:	db7c      	blt.n	90026248 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002614e:	46aa      	mov	sl, r5
90026150:	46b9      	mov	r9, r7
90026152:	f1ba 0f00 	cmp.w	sl, #0
90026156:	f340 8099 	ble.w	9002628c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
9002615a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002615c:	1421      	asrs	r1, r4, #16
9002615e:	ea4f 4026 	mov.w	r0, r6, asr #16
90026162:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026166:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002616a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9002616e:	f100 80d1 	bmi.w	90026314 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90026172:	f10e 3bff 	add.w	fp, lr, #4294967295
90026176:	4559      	cmp	r1, fp
90026178:	f280 80cc 	bge.w	90026314 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002617c:	2800      	cmp	r0, #0
9002617e:	f2c0 80c9 	blt.w	90026314 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90026182:	f103 3bff 	add.w	fp, r3, #4294967295
90026186:	4558      	cmp	r0, fp
90026188:	f280 80c4 	bge.w	90026314 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002618c:	fa0f fe8e 	sxth.w	lr, lr
90026190:	fb00 110e 	mla	r1, r0, lr, r1
90026194:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90026198:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
9002619c:	8841      	ldrh	r1, [r0, #2]
9002619e:	f1bc 0f00 	cmp.w	ip, #0
900261a2:	d00b      	beq.n	900261bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
900261a4:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
900261a8:	3b01      	subs	r3, #1
900261aa:	005b      	lsls	r3, r3, #1
900261ac:	3302      	adds	r3, #2
900261ae:	eb00 0e03 	add.w	lr, r0, r3
900261b2:	5ac3      	ldrh	r3, [r0, r3]
900261b4:	9308      	str	r3, [sp, #32]
900261b6:	f8be 3002 	ldrh.w	r3, [lr, #2]
900261ba:	9309      	str	r3, [sp, #36]	; 0x24
900261bc:	ea4f 400b 	mov.w	r0, fp, lsl #16
900261c0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
900261c4:	fb12 f30c 	smulbb	r3, r2, ip
900261c8:	f1cc 0e10 	rsb	lr, ip, #16
900261cc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900261d0:	10db      	asrs	r3, r3, #3
900261d2:	ebae 0e02 	sub.w	lr, lr, r2
900261d6:	ea40 000b 	orr.w	r0, r0, fp
900261da:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900261de:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900261e2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900261e6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900261ea:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900261ee:	ea4b 0101 	orr.w	r1, fp, r1
900261f2:	4351      	muls	r1, r2
900261f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
900261f6:	fb0e 1e00 	mla	lr, lr, r0, r1
900261fa:	0410      	lsls	r0, r2, #16
900261fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90026200:	9908      	ldr	r1, [sp, #32]
90026202:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90026206:	4310      	orrs	r0, r2
90026208:	9a08      	ldr	r2, [sp, #32]
9002620a:	0412      	lsls	r2, r2, #16
9002620c:	fb03 e000 	mla	r0, r3, r0, lr
90026210:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90026214:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90026218:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9002621c:	ea42 020e 	orr.w	r2, r2, lr
90026220:	fb03 0302 	mla	r3, r3, r2, r0
90026224:	0d5a      	lsrs	r2, r3, #21
90026226:	095b      	lsrs	r3, r3, #5
90026228:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002622c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90026230:	4313      	orrs	r3, r2
90026232:	f8a9 3000 	strh.w	r3, [r9]
90026236:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90026238:	f109 0902 	add.w	r9, r9, #2
9002623c:	f10a 3aff 	add.w	sl, sl, #4294967295
90026240:	441c      	add	r4, r3
90026242:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026244:	441e      	add	r6, r3
90026246:	e784      	b.n	90026152 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90026248:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9002624a:	3d01      	subs	r5, #1
9002624c:	3702      	adds	r7, #2
9002624e:	441c      	add	r4, r3
90026250:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026252:	441e      	add	r6, r3
90026254:	e761      	b.n	9002611a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90026256:	d01d      	beq.n	90026294 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026258:	1e6b      	subs	r3, r5, #1
9002625a:	981b      	ldr	r0, [sp, #108]	; 0x6c
9002625c:	fb00 4003 	mla	r0, r0, r3, r4
90026260:	1400      	asrs	r0, r0, #16
90026262:	f53f af74 	bmi.w	9002614e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90026266:	3901      	subs	r1, #1
90026268:	4288      	cmp	r0, r1
9002626a:	f6bf af70 	bge.w	9002614e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002626e:	991c      	ldr	r1, [sp, #112]	; 0x70
90026270:	fb01 6303 	mla	r3, r1, r3, r6
90026274:	141b      	asrs	r3, r3, #16
90026276:	f53f af6a 	bmi.w	9002614e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002627a:	3a01      	subs	r2, #1
9002627c:	4293      	cmp	r3, r2
9002627e:	f6bf af66 	bge.w	9002614e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90026282:	46a9      	mov	r9, r5
90026284:	46ba      	mov	sl, r7
90026286:	f1b9 0f00 	cmp.w	r9, #0
9002628a:	dc5b      	bgt.n	90026344 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9002628c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026290:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90026294:	9b07      	ldr	r3, [sp, #28]
90026296:	2b00      	cmp	r3, #0
90026298:	f340 80b9 	ble.w	9002640e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
9002629c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900262a0:	9b18      	ldr	r3, [sp, #96]	; 0x60
900262a2:	ee30 0a04 	vadd.f32	s0, s0, s8
900262a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900262aa:	eef0 6a62 	vmov.f32	s13, s5
900262ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
900262b2:	ee31 1a05 	vadd.f32	s2, s2, s10
900262b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900262ba:	ee16 4a90 	vmov	r4, s13
900262be:	eef0 6a43 	vmov.f32	s13, s6
900262c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900262c6:	ee16 6a90 	vmov	r6, s13
900262ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
900262ce:	ee61 7a27 	vmul.f32	s15, s2, s15
900262d2:	ee77 2a62 	vsub.f32	s5, s14, s5
900262d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900262da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900262de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900262e2:	ee12 2a90 	vmov	r2, s5
900262e6:	eef0 2a47 	vmov.f32	s5, s14
900262ea:	fb92 f3f3 	sdiv	r3, r2, r3
900262ee:	ee13 2a10 	vmov	r2, s6
900262f2:	931b      	str	r3, [sp, #108]	; 0x6c
900262f4:	9b18      	ldr	r3, [sp, #96]	; 0x60
900262f6:	eeb0 3a67 	vmov.f32	s6, s15
900262fa:	fb92 f3f3 	sdiv	r3, r2, r3
900262fe:	931c      	str	r3, [sp, #112]	; 0x70
90026300:	9b07      	ldr	r3, [sp, #28]
90026302:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90026304:	3b01      	subs	r3, #1
90026306:	9307      	str	r3, [sp, #28]
90026308:	bf08      	it	eq
9002630a:	4615      	moveq	r5, r2
9002630c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002630e:	bf18      	it	ne
90026310:	461d      	movne	r5, r3
90026312:	e6f3      	b.n	900260fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90026314:	f111 0b01 	adds.w	fp, r1, #1
90026318:	d48d      	bmi.n	90026236 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002631a:	45de      	cmp	lr, fp
9002631c:	db8b      	blt.n	90026236 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002631e:	f110 0b01 	adds.w	fp, r0, #1
90026322:	d488      	bmi.n	90026236 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026324:	455b      	cmp	r3, fp
90026326:	db86      	blt.n	90026236 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026328:	b21b      	sxth	r3, r3
9002632a:	e9cd 1001 	strd	r1, r0, [sp, #4]
9002632e:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90026332:	9300      	str	r3, [sp, #0]
90026334:	4642      	mov	r2, r8
90026336:	fa0f f38e 	sxth.w	r3, lr
9002633a:	4649      	mov	r1, r9
9002633c:	980d      	ldr	r0, [sp, #52]	; 0x34
9002633e:	f7ff fe4c 	bl	90025fda <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90026342:	e778      	b.n	90026236 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026344:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026346:	1420      	asrs	r0, r4, #16
90026348:	1431      	asrs	r1, r6, #16
9002634a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9002634e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90026352:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026356:	fb03 0101 	mla	r1, r3, r1, r0
9002635a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
9002635e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90026362:	8841      	ldrh	r1, [r0, #2]
90026364:	f1be 0f00 	cmp.w	lr, #0
90026368:	d00b      	beq.n	90026382 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
9002636a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
9002636e:	3b01      	subs	r3, #1
90026370:	005b      	lsls	r3, r3, #1
90026372:	3302      	adds	r3, #2
90026374:	eb00 0b03 	add.w	fp, r0, r3
90026378:	5ac3      	ldrh	r3, [r0, r3]
9002637a:	930a      	str	r3, [sp, #40]	; 0x28
9002637c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90026380:	930b      	str	r3, [sp, #44]	; 0x2c
90026382:	ea4f 400c 	mov.w	r0, ip, lsl #16
90026386:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002638a:	fb12 f30e 	smulbb	r3, r2, lr
9002638e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90026392:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90026396:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002639a:	10db      	asrs	r3, r3, #3
9002639c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900263a0:	ea40 000c 	orr.w	r0, r0, ip
900263a4:	f1ce 0c10 	rsb	ip, lr, #16
900263a8:	ea4b 0101 	orr.w	r1, fp, r1
900263ac:	f109 39ff 	add.w	r9, r9, #4294967295
900263b0:	ebac 0c02 	sub.w	ip, ip, r2
900263b4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900263b8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900263bc:	4351      	muls	r1, r2
900263be:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900263c0:	fb0c 1c00 	mla	ip, ip, r0, r1
900263c4:	990a      	ldr	r1, [sp, #40]	; 0x28
900263c6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900263ca:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
900263ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900263d0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900263d4:	0412      	lsls	r2, r2, #16
900263d6:	ea4b 0000 	orr.w	r0, fp, r0
900263da:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
900263de:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900263e2:	fb03 c000 	mla	r0, r3, r0, ip
900263e6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900263ea:	ea42 0b0b 	orr.w	fp, r2, fp
900263ee:	fb03 000b 	mla	r0, r3, fp, r0
900263f2:	0d43      	lsrs	r3, r0, #21
900263f4:	0940      	lsrs	r0, r0, #5
900263f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900263fa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900263fe:	4318      	orrs	r0, r3
90026400:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90026402:	441c      	add	r4, r3
90026404:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026406:	f82a 0b02 	strh.w	r0, [sl], #2
9002640a:	441e      	add	r6, r3
9002640c:	e73b      	b.n	90026286 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
9002640e:	b00f      	add	sp, #60	; 0x3c
90026410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026414 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90026414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026418:	b085      	sub	sp, #20
9002641a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
9002641e:	9102      	str	r1, [sp, #8]
90026420:	2c00      	cmp	r4, #0
90026422:	fb04 7103 	mla	r1, r4, r3, r7
90026426:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
9002642a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
9002642e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90026432:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90026436:	f2c0 811b 	blt.w	90026670 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
9002643a:	45a6      	cmp	lr, r4
9002643c:	f340 8118 	ble.w	90026670 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90026440:	2f00      	cmp	r7, #0
90026442:	f2c0 8113 	blt.w	9002666c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90026446:	42bb      	cmp	r3, r7
90026448:	f340 8110 	ble.w	9002666c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
9002644c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026450:	1c7a      	adds	r2, r7, #1
90026452:	f100 8110 	bmi.w	90026676 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90026456:	4293      	cmp	r3, r2
90026458:	f340 810d 	ble.w	90026676 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
9002645c:	2e00      	cmp	r6, #0
9002645e:	f000 810c 	beq.w	9002667a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90026462:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026466:	3401      	adds	r4, #1
90026468:	f100 810b 	bmi.w	90026682 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
9002646c:	45a6      	cmp	lr, r4
9002646e:	f340 8108 	ble.w	90026682 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90026472:	2800      	cmp	r0, #0
90026474:	f000 8108 	beq.w	90026688 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90026478:	2f00      	cmp	r7, #0
9002647a:	f2c0 8100 	blt.w	9002667e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
9002647e:	42bb      	cmp	r3, r7
90026480:	f340 80fd 	ble.w	9002667e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90026484:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026488:	3701      	adds	r7, #1
9002648a:	f100 8100 	bmi.w	9002668e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
9002648e:	42bb      	cmp	r3, r7
90026490:	f340 80fd 	ble.w	9002668e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90026494:	2e00      	cmp	r6, #0
90026496:	f000 80fc 	beq.w	90026692 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
9002649a:	3301      	adds	r3, #1
9002649c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
900264a0:	b2b6      	uxth	r6, r6
900264a2:	b280      	uxth	r0, r0
900264a4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900264a8:	fb00 fe06 	mul.w	lr, r0, r6
900264ac:	0136      	lsls	r6, r6, #4
900264ae:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900264b2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900264b6:	eba6 070e 	sub.w	r7, r6, lr
900264ba:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
900264be:	ea4f 6914 	mov.w	r9, r4, lsr #24
900264c2:	b280      	uxth	r0, r0
900264c4:	b2bf      	uxth	r7, r7
900264c6:	1a1b      	subs	r3, r3, r0
900264c8:	ea4f 6812 	mov.w	r8, r2, lsr #24
900264cc:	fb0a f607 	mul.w	r6, sl, r7
900264d0:	b29b      	uxth	r3, r3
900264d2:	fb0b 6603 	mla	r6, fp, r3, r6
900264d6:	fb00 6609 	mla	r6, r0, r9, r6
900264da:	fb0e 6608 	mla	r6, lr, r8, r6
900264de:	f3c6 2607 	ubfx	r6, r6, #8, #8
900264e2:	9600      	str	r6, [sp, #0]
900264e4:	2e00      	cmp	r6, #0
900264e6:	f000 80be 	beq.w	90026666 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
900264ea:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900264ee:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900264f2:	9e02      	ldr	r6, [sp, #8]
900264f4:	fb0b fc0c 	mul.w	ip, fp, ip
900264f8:	fb0b f505 	mul.w	r5, fp, r5
900264fc:	8836      	ldrh	r6, [r6, #0]
900264fe:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90026502:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026506:	9501      	str	r5, [sp, #4]
90026508:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9002650c:	44dc      	add	ip, fp
9002650e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026512:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90026516:	9503      	str	r5, [sp, #12]
90026518:	9d01      	ldr	r5, [sp, #4]
9002651a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
9002651e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90026522:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90026526:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9002652a:	fb0a fc0c 	mul.w	ip, sl, ip
9002652e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90026532:	fb0a fa01 	mul.w	sl, sl, r1
90026536:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002653a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002653e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90026542:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90026546:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002654a:	4465      	add	r5, ip
9002654c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90026550:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90026554:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026558:	fb09 fc0c 	mul.w	ip, r9, ip
9002655c:	0a2d      	lsrs	r5, r5, #8
9002655e:	fb09 f904 	mul.w	r9, r9, r4
90026562:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026566:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002656a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002656e:	f509 7480 	add.w	r4, r9, #256	; 0x100
90026572:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026576:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9002657a:	437d      	muls	r5, r7
9002657c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026580:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90026584:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026588:	4461      	add	r1, ip
9002658a:	fb08 f404 	mul.w	r4, r8, r4
9002658e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026592:	fb08 f802 	mul.w	r8, r8, r2
90026596:	0a09      	lsrs	r1, r1, #8
90026598:	0a22      	lsrs	r2, r4, #8
9002659a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
9002659e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900265a2:	fb07 f70a 	mul.w	r7, r7, sl
900265a6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900265aa:	4414      	add	r4, r2
900265ac:	f508 7280 	add.w	r2, r8, #256	; 0x100
900265b0:	0a24      	lsrs	r4, r4, #8
900265b2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900265b6:	9a03      	ldr	r2, [sp, #12]
900265b8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900265bc:	fb02 5503 	mla	r5, r2, r3, r5
900265c0:	ea4f 2818 	mov.w	r8, r8, lsr #8
900265c4:	9a00      	ldr	r2, [sp, #0]
900265c6:	fb04 540e 	mla	r4, r4, lr, r5
900265ca:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
900265ce:	1235      	asrs	r5, r6, #8
900265d0:	fb01 4100 	mla	r1, r1, r0, r4
900265d4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900265d8:	0a09      	lsrs	r1, r1, #8
900265da:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900265de:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900265e2:	fb03 7101 	mla	r1, r3, r1, r7
900265e6:	fb0e 1e08 	mla	lr, lr, r8, r1
900265ea:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900265ee:	fb00 e101 	mla	r1, r0, r1, lr
900265f2:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
900265f6:	b287      	uxth	r7, r0
900265f8:	0a09      	lsrs	r1, r1, #8
900265fa:	437a      	muls	r2, r7
900265fc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90026600:	1c53      	adds	r3, r2, #1
90026602:	4321      	orrs	r1, r4
90026604:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026608:	0c0a      	lsrs	r2, r1, #16
9002660a:	f3c1 2407 	ubfx	r4, r1, #8, #8
9002660e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90026612:	b2c8      	uxtb	r0, r1
90026614:	fb12 f207 	smulbb	r2, r2, r7
90026618:	fb14 f407 	smulbb	r4, r4, r7
9002661c:	b2db      	uxtb	r3, r3
9002661e:	fb10 f007 	smulbb	r0, r0, r7
90026622:	fb05 2503 	mla	r5, r5, r3, r2
90026626:	10f2      	asrs	r2, r6, #3
90026628:	00f6      	lsls	r6, r6, #3
9002662a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002662e:	b2ad      	uxth	r5, r5
90026630:	b2f6      	uxtb	r6, r6
90026632:	fb02 4203 	mla	r2, r2, r3, r4
90026636:	fb06 0303 	mla	r3, r6, r3, r0
9002663a:	b294      	uxth	r4, r2
9002663c:	b299      	uxth	r1, r3
9002663e:	1c6b      	adds	r3, r5, #1
90026640:	1c62      	adds	r2, r4, #1
90026642:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026646:	1c4b      	adds	r3, r1, #1
90026648:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9002664c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90026650:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90026654:	0952      	lsrs	r2, r2, #5
90026656:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002665a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002665e:	432b      	orrs	r3, r5
90026660:	4313      	orrs	r3, r2
90026662:	9a02      	ldr	r2, [sp, #8]
90026664:	8013      	strh	r3, [r2, #0]
90026666:	b005      	add	sp, #20
90026668:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002666c:	2500      	movs	r5, #0
9002666e:	e6ef      	b.n	90026450 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90026670:	2100      	movs	r1, #0
90026672:	460d      	mov	r5, r1
90026674:	e6f7      	b.n	90026466 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026676:	2100      	movs	r1, #0
90026678:	e6f5      	b.n	90026466 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002667a:	4631      	mov	r1, r6
9002667c:	e6f3      	b.n	90026466 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002667e:	2400      	movs	r4, #0
90026680:	e702      	b.n	90026488 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90026682:	2200      	movs	r2, #0
90026684:	4614      	mov	r4, r2
90026686:	e70b      	b.n	900264a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026688:	4602      	mov	r2, r0
9002668a:	4604      	mov	r4, r0
9002668c:	e708      	b.n	900264a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002668e:	2200      	movs	r2, #0
90026690:	e706      	b.n	900264a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026692:	4632      	mov	r2, r6
90026694:	e704      	b.n	900264a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90026696 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026696:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002669a:	b09d      	sub	sp, #116	; 0x74
9002669c:	9219      	str	r2, [sp, #100]	; 0x64
9002669e:	9307      	str	r3, [sp, #28]
900266a0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
900266a2:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
900266a6:	901b      	str	r0, [sp, #108]	; 0x6c
900266a8:	931a      	str	r3, [sp, #104]	; 0x68
900266aa:	6850      	ldr	r0, [r2, #4]
900266ac:	9117      	str	r1, [sp, #92]	; 0x5c
900266ae:	6812      	ldr	r2, [r2, #0]
900266b0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
900266b4:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
900266b8:	fb00 1303 	mla	r3, r0, r3, r1
900266bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900266c0:	930a      	str	r3, [sp, #40]	; 0x28
900266c2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900266c4:	681b      	ldr	r3, [r3, #0]
900266c6:	9310      	str	r3, [sp, #64]	; 0x40
900266c8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
900266cc:	930b      	str	r3, [sp, #44]	; 0x2c
900266ce:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900266d0:	2b00      	cmp	r3, #0
900266d2:	dc03      	bgt.n	900266dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900266d4:	9b19      	ldr	r3, [sp, #100]	; 0x64
900266d6:	2b00      	cmp	r3, #0
900266d8:	f340 8375 	ble.w	90026dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900266dc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900266de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900266e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900266e6:	1e48      	subs	r0, r1, #1
900266e8:	1e57      	subs	r7, r2, #1
900266ea:	9b07      	ldr	r3, [sp, #28]
900266ec:	2b00      	cmp	r3, #0
900266ee:	f340 818e 	ble.w	90026a0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900266f2:	ea5f 4c24 	movs.w	ip, r4, asr #16
900266f6:	ea4f 4326 	mov.w	r3, r6, asr #16
900266fa:	d406      	bmi.n	9002670a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900266fc:	4584      	cmp	ip, r0
900266fe:	da04      	bge.n	9002670a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026700:	2b00      	cmp	r3, #0
90026702:	db02      	blt.n	9002670a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026704:	42bb      	cmp	r3, r7
90026706:	f2c0 8183 	blt.w	90026a10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
9002670a:	f11c 0c01 	adds.w	ip, ip, #1
9002670e:	f100 8173 	bmi.w	900269f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026712:	4561      	cmp	r1, ip
90026714:	f2c0 8170 	blt.w	900269f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026718:	3301      	adds	r3, #1
9002671a:	f100 816d 	bmi.w	900269f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002671e:	429a      	cmp	r2, r3
90026720:	f2c0 816a 	blt.w	900269f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026724:	9b07      	ldr	r3, [sp, #28]
90026726:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90026728:	9318      	str	r3, [sp, #96]	; 0x60
9002672a:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002672c:	2b00      	cmp	r3, #0
9002672e:	f340 818c 	ble.w	90026a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90026732:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
90026734:	ea4f 4c26 	mov.w	ip, r6, asr #16
90026738:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9002673a:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002673e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90026742:	1422      	asrs	r2, r4, #16
90026744:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026748:	689b      	ldr	r3, [r3, #8]
9002674a:	f100 81cd 	bmi.w	90026ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002674e:	f103 38ff 	add.w	r8, r3, #4294967295
90026752:	4542      	cmp	r2, r8
90026754:	f280 81c8 	bge.w	90026ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026758:	f1bc 0f00 	cmp.w	ip, #0
9002675c:	f2c0 81c4 	blt.w	90026ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026760:	f10e 38ff 	add.w	r8, lr, #4294967295
90026764:	45c4      	cmp	ip, r8
90026766:	f280 81bf 	bge.w	90026ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002676a:	b21b      	sxth	r3, r3
9002676c:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002676e:	fb0c 2203 	mla	r2, ip, r3, r2
90026772:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90026776:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
9002677a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
9002677e:	2800      	cmp	r0, #0
90026780:	f000 81a9 	beq.w	90026ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90026784:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026788:	950c      	str	r5, [sp, #48]	; 0x30
9002678a:	0e2d      	lsrs	r5, r5, #24
9002678c:	9513      	str	r5, [sp, #76]	; 0x4c
9002678e:	b181      	cbz	r1, 900267b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026790:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90026794:	3b01      	subs	r3, #1
90026796:	009b      	lsls	r3, r3, #2
90026798:	3304      	adds	r3, #4
9002679a:	eb08 0c03 	add.w	ip, r8, r3
9002679e:	f858 3003 	ldr.w	r3, [r8, r3]
900267a2:	9308      	str	r3, [sp, #32]
900267a4:	0e1b      	lsrs	r3, r3, #24
900267a6:	9311      	str	r3, [sp, #68]	; 0x44
900267a8:	f8dc 3004 	ldr.w	r3, [ip, #4]
900267ac:	930d      	str	r3, [sp, #52]	; 0x34
900267ae:	0e1b      	lsrs	r3, r3, #24
900267b0:	9314      	str	r3, [sp, #80]	; 0x50
900267b2:	b280      	uxth	r0, r0
900267b4:	9d11      	ldr	r5, [sp, #68]	; 0x44
900267b6:	b289      	uxth	r1, r1
900267b8:	fb00 f901 	mul.w	r9, r0, r1
900267bc:	0100      	lsls	r0, r0, #4
900267be:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900267c2:	eba0 0809 	sub.w	r8, r0, r9
900267c6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900267ca:	9813      	ldr	r0, [sp, #76]	; 0x4c
900267cc:	b289      	uxth	r1, r1
900267ce:	fa1f f888 	uxth.w	r8, r8
900267d2:	1a5b      	subs	r3, r3, r1
900267d4:	fb08 f000 	mul.w	r0, r8, r0
900267d8:	b29b      	uxth	r3, r3
900267da:	fb03 000e 	mla	r0, r3, lr, r0
900267de:	fb01 0005 	mla	r0, r1, r5, r0
900267e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
900267e4:	fb09 0005 	mla	r0, r9, r5, r0
900267e8:	f3c0 2007 	ubfx	r0, r0, #8, #8
900267ec:	2800      	cmp	r0, #0
900267ee:	f000 80fa 	beq.w	900269e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900267f2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900267f6:	d01b      	beq.n	90026830 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
900267f8:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
900267fc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026800:	fb0e fa0a 	mul.w	sl, lr, sl
90026804:	fb0e fe02 	mul.w	lr, lr, r2
90026808:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002680c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90026810:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90026814:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90026818:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002681c:	4452      	add	r2, sl
9002681e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026822:	0a12      	lsrs	r2, r2, #8
90026824:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90026828:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002682c:	ea42 020c 	orr.w	r2, r2, ip
90026830:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90026832:	2dff      	cmp	r5, #255	; 0xff
90026834:	d021      	beq.n	9002687a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90026836:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026838:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002683c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002683e:	fb05 fb0b 	mul.w	fp, r5, fp
90026842:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026844:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026848:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002684a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002684e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90026852:	fb05 fa0a 	mul.w	sl, r5, sl
90026856:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002685a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002685e:	44de      	add	lr, fp
90026860:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026864:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026868:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002686c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026870:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026874:	ea4e 050a 	orr.w	r5, lr, sl
90026878:	950c      	str	r5, [sp, #48]	; 0x30
9002687a:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002687c:	2dff      	cmp	r5, #255	; 0xff
9002687e:	d021      	beq.n	900268c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90026880:	9d08      	ldr	r5, [sp, #32]
90026882:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90026886:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026888:	fb05 fb0b 	mul.w	fp, r5, fp
9002688c:	9d08      	ldr	r5, [sp, #32]
9002688e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026892:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026894:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026898:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002689c:	fb05 fa0a 	mul.w	sl, r5, sl
900268a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900268a4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900268a8:	44de      	add	lr, fp
900268aa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900268ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900268b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900268b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900268ba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900268be:	ea4e 050a 	orr.w	r5, lr, sl
900268c2:	9508      	str	r5, [sp, #32]
900268c4:	9d14      	ldr	r5, [sp, #80]	; 0x50
900268c6:	2dff      	cmp	r5, #255	; 0xff
900268c8:	d021      	beq.n	9002690e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
900268ca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900268cc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900268d0:	9d14      	ldr	r5, [sp, #80]	; 0x50
900268d2:	fb05 fb0b 	mul.w	fp, r5, fp
900268d6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900268d8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900268dc:	9d14      	ldr	r5, [sp, #80]	; 0x50
900268de:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900268e2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900268e6:	fb05 fa0a 	mul.w	sl, r5, sl
900268ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900268ee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900268f2:	44de      	add	lr, fp
900268f4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900268f8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900268fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026900:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026904:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026908:	ea4e 050a 	orr.w	r5, lr, sl
9002690c:	950d      	str	r5, [sp, #52]	; 0x34
9002690e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026910:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90026914:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026918:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002691c:	9d08      	ldr	r5, [sp, #32]
9002691e:	fb08 fc0c 	mul.w	ip, r8, ip
90026922:	fb03 cc0e 	mla	ip, r3, lr, ip
90026926:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9002692a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002692c:	fb01 cc0e 	mla	ip, r1, lr, ip
90026930:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90026934:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026936:	fb09 cc0e 	mla	ip, r9, lr, ip
9002693a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002693e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90026940:	fb08 f80e 	mul.w	r8, r8, lr
90026944:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026948:	fb03 8202 	mla	r2, r3, r2, r8
9002694c:	9b08      	ldr	r3, [sp, #32]
9002694e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026952:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
90026956:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90026958:	fb01 220a 	mla	r2, r1, sl, r2
9002695c:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
90026960:	883b      	ldrh	r3, [r7, #0]
90026962:	fb09 2901 	mla	r9, r9, r1, r2
90026966:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90026968:	1219      	asrs	r1, r3, #8
9002696a:	4342      	muls	r2, r0
9002696c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026970:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90026974:	1c50      	adds	r0, r2, #1
90026976:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9002697a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9002697e:	ea4c 0c09 	orr.w	ip, ip, r9
90026982:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90026986:	ea4f 421c 	mov.w	r2, ip, lsr #16
9002698a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002698e:	fa5f fc8c 	uxtb.w	ip, ip
90026992:	fb12 f205 	smulbb	r2, r2, r5
90026996:	b2c0      	uxtb	r0, r0
90026998:	fb1c fc05 	smulbb	ip, ip, r5
9002699c:	fb01 2100 	mla	r1, r1, r0, r2
900269a0:	10da      	asrs	r2, r3, #3
900269a2:	fb1e fe05 	smulbb	lr, lr, r5
900269a6:	00db      	lsls	r3, r3, #3
900269a8:	b289      	uxth	r1, r1
900269aa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900269ae:	b2db      	uxtb	r3, r3
900269b0:	fb02 e200 	mla	r2, r2, r0, lr
900269b4:	fb03 c300 	mla	r3, r3, r0, ip
900269b8:	b292      	uxth	r2, r2
900269ba:	fa1f fc83 	uxth.w	ip, r3
900269be:	1c4b      	adds	r3, r1, #1
900269c0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900269c4:	f10c 0301 	add.w	r3, ip, #1
900269c8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900269cc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900269d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900269d4:	430b      	orrs	r3, r1
900269d6:	1c51      	adds	r1, r2, #1
900269d8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900269dc:	0952      	lsrs	r2, r2, #5
900269de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900269e2:	4313      	orrs	r3, r2
900269e4:	803b      	strh	r3, [r7, #0]
900269e6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900269e8:	3702      	adds	r7, #2
900269ea:	441c      	add	r4, r3
900269ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900269ee:	441e      	add	r6, r3
900269f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
900269f2:	3b01      	subs	r3, #1
900269f4:	9318      	str	r3, [sp, #96]	; 0x60
900269f6:	e698      	b.n	9002672a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900269f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900269fa:	441c      	add	r4, r3
900269fc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900269fe:	441e      	add	r6, r3
90026a00:	9b07      	ldr	r3, [sp, #28]
90026a02:	3b01      	subs	r3, #1
90026a04:	9307      	str	r3, [sp, #28]
90026a06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90026a08:	3302      	adds	r3, #2
90026a0a:	930a      	str	r3, [sp, #40]	; 0x28
90026a0c:	e66d      	b.n	900266ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90026a0e:	d023      	beq.n	90026a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90026a10:	9b07      	ldr	r3, [sp, #28]
90026a12:	9829      	ldr	r0, [sp, #164]	; 0xa4
90026a14:	3b01      	subs	r3, #1
90026a16:	fb00 4003 	mla	r0, r0, r3, r4
90026a1a:	1400      	asrs	r0, r0, #16
90026a1c:	f53f ae82 	bmi.w	90026724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026a20:	3901      	subs	r1, #1
90026a22:	4288      	cmp	r0, r1
90026a24:	f6bf ae7e 	bge.w	90026724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026a28:	992a      	ldr	r1, [sp, #168]	; 0xa8
90026a2a:	fb01 6303 	mla	r3, r1, r3, r6
90026a2e:	141b      	asrs	r3, r3, #16
90026a30:	f53f ae78 	bmi.w	90026724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026a34:	3a01      	subs	r2, #1
90026a36:	4293      	cmp	r3, r2
90026a38:	f6bf ae74 	bge.w	90026724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026a3c:	f8dd b01c 	ldr.w	fp, [sp, #28]
90026a40:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90026a44:	f1bb 0f00 	cmp.w	fp, #0
90026a48:	dc6c      	bgt.n	90026b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90026a4a:	9b07      	ldr	r3, [sp, #28]
90026a4c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90026a50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90026a52:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90026a56:	930a      	str	r3, [sp, #40]	; 0x28
90026a58:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90026a5a:	2b00      	cmp	r3, #0
90026a5c:	f340 81b3 	ble.w	90026dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90026a60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90026a64:	9b26      	ldr	r3, [sp, #152]	; 0x98
90026a66:	ee30 0a04 	vadd.f32	s0, s0, s8
90026a6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026a6e:	eef0 6a62 	vmov.f32	s13, s5
90026a72:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026a76:	ee31 1a05 	vadd.f32	s2, s2, s10
90026a7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026a7e:	ee16 4a90 	vmov	r4, s13
90026a82:	eef0 6a43 	vmov.f32	s13, s6
90026a86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026a8a:	ee16 6a90 	vmov	r6, s13
90026a8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026a92:	ee61 7a27 	vmul.f32	s15, s2, s15
90026a96:	ee77 2a62 	vsub.f32	s5, s14, s5
90026a9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026a9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026aa2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026aa6:	ee12 2a90 	vmov	r2, s5
90026aaa:	eef0 2a47 	vmov.f32	s5, s14
90026aae:	fb92 f3f3 	sdiv	r3, r2, r3
90026ab2:	ee13 2a10 	vmov	r2, s6
90026ab6:	9329      	str	r3, [sp, #164]	; 0xa4
90026ab8:	9b26      	ldr	r3, [sp, #152]	; 0x98
90026aba:	eeb0 3a67 	vmov.f32	s6, s15
90026abe:	fb92 f3f3 	sdiv	r3, r2, r3
90026ac2:	932a      	str	r3, [sp, #168]	; 0xa8
90026ac4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90026ac6:	9a19      	ldr	r2, [sp, #100]	; 0x64
90026ac8:	3b01      	subs	r3, #1
90026aca:	9317      	str	r3, [sp, #92]	; 0x5c
90026acc:	9b26      	ldr	r3, [sp, #152]	; 0x98
90026ace:	bf08      	it	eq
90026ad0:	4613      	moveq	r3, r2
90026ad2:	9307      	str	r3, [sp, #28]
90026ad4:	e5fb      	b.n	900266ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90026ad6:	2900      	cmp	r1, #0
90026ad8:	f43f ae6b 	beq.w	900267b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026adc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90026ae0:	9308      	str	r3, [sp, #32]
90026ae2:	0e1b      	lsrs	r3, r3, #24
90026ae4:	9311      	str	r3, [sp, #68]	; 0x44
90026ae6:	e664      	b.n	900267b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026ae8:	f112 0801 	adds.w	r8, r2, #1
90026aec:	f53f af7b 	bmi.w	900269e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026af0:	4543      	cmp	r3, r8
90026af2:	f6ff af78 	blt.w	900269e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026af6:	f11c 0801 	adds.w	r8, ip, #1
90026afa:	f53f af74 	bmi.w	900269e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026afe:	45c6      	cmp	lr, r8
90026b00:	f6ff af71 	blt.w	900269e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026b04:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90026b06:	b21b      	sxth	r3, r3
90026b08:	9201      	str	r2, [sp, #4]
90026b0a:	fa0f f28e 	sxth.w	r2, lr
90026b0e:	e9cd 1504 	strd	r1, r5, [sp, #16]
90026b12:	e9cd c002 	strd	ip, r0, [sp, #8]
90026b16:	9200      	str	r2, [sp, #0]
90026b18:	4639      	mov	r1, r7
90026b1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
90026b1c:	981b      	ldr	r0, [sp, #108]	; 0x6c
90026b1e:	f7ff fc79 	bl	90026414 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90026b22:	e760      	b.n	900269e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026b24:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90026b26:	1427      	asrs	r7, r4, #16
90026b28:	9d10      	ldr	r5, [sp, #64]	; 0x40
90026b2a:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026b2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026b32:	1433      	asrs	r3, r6, #16
90026b34:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026b38:	fb01 7303 	mla	r3, r1, r3, r7
90026b3c:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90026b40:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90026b44:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90026b48:	2a00      	cmp	r2, #0
90026b4a:	f000 8133 	beq.w	90026db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90026b4e:	687d      	ldr	r5, [r7, #4]
90026b50:	950e      	str	r5, [sp, #56]	; 0x38
90026b52:	0e2d      	lsrs	r5, r5, #24
90026b54:	9515      	str	r5, [sp, #84]	; 0x54
90026b56:	b178      	cbz	r0, 90026b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026b58:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
90026b5c:	3901      	subs	r1, #1
90026b5e:	0089      	lsls	r1, r1, #2
90026b60:	3104      	adds	r1, #4
90026b62:	eb07 0e01 	add.w	lr, r7, r1
90026b66:	5879      	ldr	r1, [r7, r1]
90026b68:	9109      	str	r1, [sp, #36]	; 0x24
90026b6a:	0e09      	lsrs	r1, r1, #24
90026b6c:	9112      	str	r1, [sp, #72]	; 0x48
90026b6e:	f8de 1004 	ldr.w	r1, [lr, #4]
90026b72:	910f      	str	r1, [sp, #60]	; 0x3c
90026b74:	0e09      	lsrs	r1, r1, #24
90026b76:	9116      	str	r1, [sp, #88]	; 0x58
90026b78:	b292      	uxth	r2, r2
90026b7a:	9915      	ldr	r1, [sp, #84]	; 0x54
90026b7c:	b280      	uxth	r0, r0
90026b7e:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026b80:	fb02 f800 	mul.w	r8, r2, r0
90026b84:	0112      	lsls	r2, r2, #4
90026b86:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90026b8a:	eba2 0e08 	sub.w	lr, r2, r8
90026b8e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90026b92:	b280      	uxth	r0, r0
90026b94:	fa1f fe8e 	uxth.w	lr, lr
90026b98:	1a12      	subs	r2, r2, r0
90026b9a:	fb0e f101 	mul.w	r1, lr, r1
90026b9e:	b292      	uxth	r2, r2
90026ba0:	fb02 110c 	mla	r1, r2, ip, r1
90026ba4:	fb00 1105 	mla	r1, r0, r5, r1
90026ba8:	9d16      	ldr	r5, [sp, #88]	; 0x58
90026baa:	fb08 1105 	mla	r1, r8, r5, r1
90026bae:	f3c1 2107 	ubfx	r1, r1, #8, #8
90026bb2:	2900      	cmp	r1, #0
90026bb4:	f000 80f5 	beq.w	90026da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90026bb8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90026bbc:	d019      	beq.n	90026bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
90026bbe:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90026bc2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90026bc6:	fb0c fa0a 	mul.w	sl, ip, sl
90026bca:	fb0c fc03 	mul.w	ip, ip, r3
90026bce:	ea4f 231a 	mov.w	r3, sl, lsr #8
90026bd2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90026bd6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90026bda:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90026bde:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90026be2:	4453      	add	r3, sl
90026be4:	0a3f      	lsrs	r7, r7, #8
90026be6:	0a1b      	lsrs	r3, r3, #8
90026be8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90026bec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90026bf0:	433b      	orrs	r3, r7
90026bf2:	9d15      	ldr	r5, [sp, #84]	; 0x54
90026bf4:	2dff      	cmp	r5, #255	; 0xff
90026bf6:	d020      	beq.n	90026c3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90026bf8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026bfa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90026bfe:	9d15      	ldr	r5, [sp, #84]	; 0x54
90026c00:	436f      	muls	r7, r5
90026c02:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026c04:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026c08:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026c0c:	9d15      	ldr	r5, [sp, #84]	; 0x54
90026c0e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90026c12:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026c16:	fb05 fa0a 	mul.w	sl, r5, sl
90026c1a:	44bc      	add	ip, r7
90026c1c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90026c20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026c24:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026c28:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026c2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026c30:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026c34:	ea4c 050a 	orr.w	r5, ip, sl
90026c38:	950e      	str	r5, [sp, #56]	; 0x38
90026c3a:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026c3c:	2dff      	cmp	r5, #255	; 0xff
90026c3e:	d020      	beq.n	90026c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90026c40:	9d09      	ldr	r5, [sp, #36]	; 0x24
90026c42:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90026c46:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026c48:	436f      	muls	r7, r5
90026c4a:	9d09      	ldr	r5, [sp, #36]	; 0x24
90026c4c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026c50:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026c54:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026c56:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90026c5a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026c5e:	fb05 fa0a 	mul.w	sl, r5, sl
90026c62:	44bc      	add	ip, r7
90026c64:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90026c68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026c6c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026c70:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026c74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026c78:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026c7c:	ea4c 050a 	orr.w	r5, ip, sl
90026c80:	9509      	str	r5, [sp, #36]	; 0x24
90026c82:	9d16      	ldr	r5, [sp, #88]	; 0x58
90026c84:	2dff      	cmp	r5, #255	; 0xff
90026c86:	d020      	beq.n	90026cca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90026c88:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026c8a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90026c8e:	9d16      	ldr	r5, [sp, #88]	; 0x58
90026c90:	436f      	muls	r7, r5
90026c92:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026c94:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026c98:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026c9c:	9d16      	ldr	r5, [sp, #88]	; 0x58
90026c9e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90026ca2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026ca6:	fb05 fa0a 	mul.w	sl, r5, sl
90026caa:	44bc      	add	ip, r7
90026cac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90026cb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026cb4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026cb8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026cbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026cc0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026cc4:	ea4c 050a 	orr.w	r5, ip, sl
90026cc8:	950f      	str	r5, [sp, #60]	; 0x3c
90026cca:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026ccc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90026cd0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90026cd4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90026cd8:	9d09      	ldr	r5, [sp, #36]	; 0x24
90026cda:	fb0e f707 	mul.w	r7, lr, r7
90026cde:	fb02 770c 	mla	r7, r2, ip, r7
90026ce2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90026ce6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026ce8:	fb00 770c 	mla	r7, r0, ip, r7
90026cec:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90026cf0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026cf2:	fb08 770c 	mla	r7, r8, ip, r7
90026cf6:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90026cfa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90026cfc:	fb0e fe0c 	mul.w	lr, lr, ip
90026d00:	0a3f      	lsrs	r7, r7, #8
90026d02:	fb02 e303 	mla	r3, r2, r3, lr
90026d06:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026d08:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90026d0c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90026d10:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90026d12:	fb00 330a 	mla	r3, r0, sl, r3
90026d16:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90026d1a:	f8b9 0000 	ldrh.w	r0, [r9]
90026d1e:	fb08 3c0c 	mla	ip, r8, ip, r3
90026d22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90026d24:	1202      	asrs	r2, r0, #8
90026d26:	4359      	muls	r1, r3
90026d28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026d2c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90026d30:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90026d34:	1c4b      	adds	r3, r1, #1
90026d36:	ea47 070c 	orr.w	r7, r7, ip
90026d3a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026d3e:	0c3b      	lsrs	r3, r7, #16
90026d40:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90026d44:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90026d48:	b2ff      	uxtb	r7, r7
90026d4a:	fb13 f305 	smulbb	r3, r3, r5
90026d4e:	b2c9      	uxtb	r1, r1
90026d50:	fb17 f705 	smulbb	r7, r7, r5
90026d54:	fb02 3201 	mla	r2, r2, r1, r3
90026d58:	10c3      	asrs	r3, r0, #3
90026d5a:	fb1c fc05 	smulbb	ip, ip, r5
90026d5e:	00c0      	lsls	r0, r0, #3
90026d60:	b292      	uxth	r2, r2
90026d62:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90026d66:	b2c0      	uxtb	r0, r0
90026d68:	fb03 c301 	mla	r3, r3, r1, ip
90026d6c:	fb00 7001 	mla	r0, r0, r1, r7
90026d70:	1c51      	adds	r1, r2, #1
90026d72:	b29b      	uxth	r3, r3
90026d74:	b280      	uxth	r0, r0
90026d76:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026d7a:	f100 0c01 	add.w	ip, r0, #1
90026d7e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90026d82:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90026d86:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90026d8a:	ea4c 0202 	orr.w	r2, ip, r2
90026d8e:	f103 0c01 	add.w	ip, r3, #1
90026d92:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90026d96:	095b      	lsrs	r3, r3, #5
90026d98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90026d9c:	431a      	orrs	r2, r3
90026d9e:	f8a9 2000 	strh.w	r2, [r9]
90026da2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90026da4:	f109 0902 	add.w	r9, r9, #2
90026da8:	f10b 3bff 	add.w	fp, fp, #4294967295
90026dac:	441c      	add	r4, r3
90026dae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90026db0:	441e      	add	r6, r3
90026db2:	e647      	b.n	90026a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90026db4:	2800      	cmp	r0, #0
90026db6:	f43f aedf 	beq.w	90026b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026dba:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90026dbe:	9109      	str	r1, [sp, #36]	; 0x24
90026dc0:	0e09      	lsrs	r1, r1, #24
90026dc2:	9112      	str	r1, [sp, #72]	; 0x48
90026dc4:	e6d8      	b.n	90026b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026dc6:	b01d      	add	sp, #116	; 0x74
90026dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026dcc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90026dcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026dd0:	b085      	sub	sp, #20
90026dd2:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90026dd6:	9102      	str	r1, [sp, #8]
90026dd8:	2c00      	cmp	r4, #0
90026dda:	fb04 7103 	mla	r1, r4, r3, r7
90026dde:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90026de2:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90026de6:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90026dea:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90026dee:	f2c0 810c 	blt.w	9002700a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026df2:	45a6      	cmp	lr, r4
90026df4:	f340 8109 	ble.w	9002700a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026df8:	2f00      	cmp	r7, #0
90026dfa:	f2c0 8104 	blt.w	90027006 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026dfe:	42bb      	cmp	r3, r7
90026e00:	f340 8101 	ble.w	90027006 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026e04:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026e08:	1c7a      	adds	r2, r7, #1
90026e0a:	f100 8101 	bmi.w	90027010 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026e0e:	4293      	cmp	r3, r2
90026e10:	f340 80fe 	ble.w	90027010 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026e14:	2e00      	cmp	r6, #0
90026e16:	f000 80fd 	beq.w	90027014 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90026e1a:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026e1e:	3401      	adds	r4, #1
90026e20:	f100 80fc 	bmi.w	9002701c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026e24:	45a6      	cmp	lr, r4
90026e26:	f340 80f9 	ble.w	9002701c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026e2a:	2800      	cmp	r0, #0
90026e2c:	f000 80f9 	beq.w	90027022 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90026e30:	2f00      	cmp	r7, #0
90026e32:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90026e36:	f2c0 80ef 	blt.w	90027018 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026e3a:	42bb      	cmp	r3, r7
90026e3c:	f340 80ec 	ble.w	90027018 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026e40:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026e44:	3701      	adds	r7, #1
90026e46:	f100 80ef 	bmi.w	90027028 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026e4a:	42bb      	cmp	r3, r7
90026e4c:	f340 80ec 	ble.w	90027028 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026e50:	2e00      	cmp	r6, #0
90026e52:	f000 80eb 	beq.w	9002702c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90026e56:	6852      	ldr	r2, [r2, #4]
90026e58:	b2b6      	uxth	r6, r6
90026e5a:	b280      	uxth	r0, r0
90026e5c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026e60:	fb00 fe06 	mul.w	lr, r0, r6
90026e64:	0136      	lsls	r6, r6, #4
90026e66:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026e6a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026e6e:	eba6 070e 	sub.w	r7, r6, lr
90026e72:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90026e76:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026e7a:	b280      	uxth	r0, r0
90026e7c:	b2bf      	uxth	r7, r7
90026e7e:	1a1b      	subs	r3, r3, r0
90026e80:	ea4f 6812 	mov.w	r8, r2, lsr #24
90026e84:	fb07 f60a 	mul.w	r6, r7, sl
90026e88:	b29b      	uxth	r3, r3
90026e8a:	fb0b 6603 	mla	r6, fp, r3, r6
90026e8e:	fb00 6609 	mla	r6, r0, r9, r6
90026e92:	fb0e 6608 	mla	r6, lr, r8, r6
90026e96:	f3c6 2607 	ubfx	r6, r6, #8, #8
90026e9a:	9600      	str	r6, [sp, #0]
90026e9c:	2e00      	cmp	r6, #0
90026e9e:	f000 80af 	beq.w	90027000 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90026ea2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90026ea6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90026eaa:	9e02      	ldr	r6, [sp, #8]
90026eac:	fb0b fc0c 	mul.w	ip, fp, ip
90026eb0:	fb0b f505 	mul.w	r5, fp, r5
90026eb4:	8836      	ldrh	r6, [r6, #0]
90026eb6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90026eba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026ebe:	9501      	str	r5, [sp, #4]
90026ec0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90026ec4:	44dc      	add	ip, fp
90026ec6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026eca:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90026ece:	9503      	str	r5, [sp, #12]
90026ed0:	9d01      	ldr	r5, [sp, #4]
90026ed2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90026ed6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90026eda:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90026ede:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90026ee2:	fb0a fc0c 	mul.w	ip, sl, ip
90026ee6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90026eea:	fb0a fa01 	mul.w	sl, sl, r1
90026eee:	ea4f 251c 	mov.w	r5, ip, lsr #8
90026ef2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026ef6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90026efa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90026efe:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90026f02:	4465      	add	r5, ip
90026f04:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90026f08:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90026f0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026f10:	fb09 fc0c 	mul.w	ip, r9, ip
90026f14:	0a2d      	lsrs	r5, r5, #8
90026f16:	fb09 f904 	mul.w	r9, r9, r4
90026f1a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026f1e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90026f22:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90026f26:	f509 7480 	add.w	r4, r9, #256	; 0x100
90026f2a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026f2e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90026f32:	437d      	muls	r5, r7
90026f34:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026f38:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90026f3c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026f40:	4461      	add	r1, ip
90026f42:	fb08 f404 	mul.w	r4, r8, r4
90026f46:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026f4a:	fb08 f802 	mul.w	r8, r8, r2
90026f4e:	0a09      	lsrs	r1, r1, #8
90026f50:	0a22      	lsrs	r2, r4, #8
90026f52:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90026f56:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90026f5a:	fb07 f70a 	mul.w	r7, r7, sl
90026f5e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90026f62:	4414      	add	r4, r2
90026f64:	f508 7280 	add.w	r2, r8, #256	; 0x100
90026f68:	0a24      	lsrs	r4, r4, #8
90026f6a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026f6e:	9a03      	ldr	r2, [sp, #12]
90026f70:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90026f74:	fb02 5503 	mla	r5, r2, r3, r5
90026f78:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026f7c:	fb04 540e 	mla	r4, r4, lr, r5
90026f80:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90026f84:	fb01 4100 	mla	r1, r1, r0, r4
90026f88:	0a09      	lsrs	r1, r1, #8
90026f8a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90026f8e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90026f92:	fb03 7101 	mla	r1, r3, r1, r7
90026f96:	9b00      	ldr	r3, [sp, #0]
90026f98:	fb0e 1e08 	mla	lr, lr, r8, r1
90026f9c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90026fa0:	43da      	mvns	r2, r3
90026fa2:	1233      	asrs	r3, r6, #8
90026fa4:	fb00 e101 	mla	r1, r0, r1, lr
90026fa8:	10f0      	asrs	r0, r6, #3
90026faa:	b2d2      	uxtb	r2, r2
90026fac:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90026fb0:	0a09      	lsrs	r1, r1, #8
90026fb2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90026fb6:	00f6      	lsls	r6, r6, #3
90026fb8:	4353      	muls	r3, r2
90026fba:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90026fbe:	4350      	muls	r0, r2
90026fc0:	b2f6      	uxtb	r6, r6
90026fc2:	4321      	orrs	r1, r4
90026fc4:	4356      	muls	r6, r2
90026fc6:	1c5a      	adds	r2, r3, #1
90026fc8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90026fcc:	0c0b      	lsrs	r3, r1, #16
90026fce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026fd2:	1c42      	adds	r2, r0, #1
90026fd4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026fd8:	0a0a      	lsrs	r2, r1, #8
90026fda:	021b      	lsls	r3, r3, #8
90026fdc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90026fe0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90026fe4:	00d2      	lsls	r2, r2, #3
90026fe6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026fea:	4313      	orrs	r3, r2
90026fec:	1c72      	adds	r2, r6, #1
90026fee:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90026ff2:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90026ff6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90026ffa:	4319      	orrs	r1, r3
90026ffc:	9b02      	ldr	r3, [sp, #8]
90026ffe:	8019      	strh	r1, [r3, #0]
90027000:	b005      	add	sp, #20
90027002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027006:	2500      	movs	r5, #0
90027008:	e6fe      	b.n	90026e08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
9002700a:	2100      	movs	r1, #0
9002700c:	460d      	mov	r5, r1
9002700e:	e706      	b.n	90026e1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027010:	2100      	movs	r1, #0
90027012:	e704      	b.n	90026e1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027014:	4631      	mov	r1, r6
90027016:	e702      	b.n	90026e1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027018:	2400      	movs	r4, #0
9002701a:	e713      	b.n	90026e44 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
9002701c:	2200      	movs	r2, #0
9002701e:	4614      	mov	r4, r2
90027020:	e71a      	b.n	90026e58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027022:	4602      	mov	r2, r0
90027024:	4604      	mov	r4, r0
90027026:	e717      	b.n	90026e58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027028:	2200      	movs	r2, #0
9002702a:	e715      	b.n	90026e58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002702c:	4632      	mov	r2, r6
9002702e:	e713      	b.n	90026e58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90027030 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027034:	b09b      	sub	sp, #108	; 0x6c
90027036:	9218      	str	r2, [sp, #96]	; 0x60
90027038:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9002703a:	9019      	str	r0, [sp, #100]	; 0x64
9002703c:	9116      	str	r1, [sp, #88]	; 0x58
9002703e:	6850      	ldr	r0, [r2, #4]
90027040:	9307      	str	r3, [sp, #28]
90027042:	6812      	ldr	r2, [r2, #0]
90027044:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90027048:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
9002704c:	fb00 1303 	mla	r3, r0, r3, r1
90027050:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90027054:	930a      	str	r3, [sp, #40]	; 0x28
90027056:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90027058:	681b      	ldr	r3, [r3, #0]
9002705a:	930f      	str	r3, [sp, #60]	; 0x3c
9002705c:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002705e:	2b00      	cmp	r3, #0
90027060:	dc03      	bgt.n	9002706a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027062:	9b18      	ldr	r3, [sp, #96]	; 0x60
90027064:	2b00      	cmp	r3, #0
90027066:	f340 8387 	ble.w	90027778 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
9002706a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002706c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027070:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027074:	1e48      	subs	r0, r1, #1
90027076:	1e57      	subs	r7, r2, #1
90027078:	9b07      	ldr	r3, [sp, #28]
9002707a:	2b00      	cmp	r3, #0
9002707c:	f340 8166 	ble.w	9002734c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90027080:	ea5f 4c24 	movs.w	ip, r4, asr #16
90027084:	ea4f 4326 	mov.w	r3, r6, asr #16
90027088:	d406      	bmi.n	90027098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002708a:	4584      	cmp	ip, r0
9002708c:	da04      	bge.n	90027098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002708e:	2b00      	cmp	r3, #0
90027090:	db02      	blt.n	90027098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90027092:	42bb      	cmp	r3, r7
90027094:	f2c0 815b 	blt.w	9002734e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90027098:	f11c 0c01 	adds.w	ip, ip, #1
9002709c:	f100 814b 	bmi.w	90027336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900270a0:	4561      	cmp	r1, ip
900270a2:	f2c0 8148 	blt.w	90027336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900270a6:	3301      	adds	r3, #1
900270a8:	f100 8145 	bmi.w	90027336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900270ac:	429a      	cmp	r2, r3
900270ae:	f2c0 8142 	blt.w	90027336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900270b2:	9b07      	ldr	r3, [sp, #28]
900270b4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
900270b6:	9317      	str	r3, [sp, #92]	; 0x5c
900270b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900270ba:	2b00      	cmp	r3, #0
900270bc:	f340 8165 	ble.w	9002738a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900270c0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
900270c2:	ea4f 4c26 	mov.w	ip, r6, asr #16
900270c6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900270c8:	f3c4 3103 	ubfx	r1, r4, #12, #4
900270cc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900270d0:	1422      	asrs	r2, r4, #16
900270d2:	f3c6 3003 	ubfx	r0, r6, #12, #4
900270d6:	689b      	ldr	r3, [r3, #8]
900270d8:	f100 81d5 	bmi.w	90027486 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900270dc:	f103 38ff 	add.w	r8, r3, #4294967295
900270e0:	4542      	cmp	r2, r8
900270e2:	f280 81d0 	bge.w	90027486 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900270e6:	f1bc 0f00 	cmp.w	ip, #0
900270ea:	f2c0 81cc 	blt.w	90027486 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900270ee:	f10e 38ff 	add.w	r8, lr, #4294967295
900270f2:	45c4      	cmp	ip, r8
900270f4:	f280 81c7 	bge.w	90027486 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900270f8:	b21b      	sxth	r3, r3
900270fa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900270fc:	fb0c 2203 	mla	r2, ip, r3, r2
90027100:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90027104:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90027108:	ea4f 6e12 	mov.w	lr, r2, lsr #24
9002710c:	2900      	cmp	r1, #0
9002710e:	f000 8182 	beq.w	90027416 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90027112:	f8d8 5004 	ldr.w	r5, [r8, #4]
90027116:	950b      	str	r5, [sp, #44]	; 0x2c
90027118:	0e2d      	lsrs	r5, r5, #24
9002711a:	9512      	str	r5, [sp, #72]	; 0x48
9002711c:	b180      	cbz	r0, 90027140 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002711e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90027122:	3b01      	subs	r3, #1
90027124:	009b      	lsls	r3, r3, #2
90027126:	3304      	adds	r3, #4
90027128:	eb08 0c03 	add.w	ip, r8, r3
9002712c:	f858 3003 	ldr.w	r3, [r8, r3]
90027130:	9308      	str	r3, [sp, #32]
90027132:	0e1b      	lsrs	r3, r3, #24
90027134:	9310      	str	r3, [sp, #64]	; 0x40
90027136:	f8dc 3004 	ldr.w	r3, [ip, #4]
9002713a:	930c      	str	r3, [sp, #48]	; 0x30
9002713c:	0e1b      	lsrs	r3, r3, #24
9002713e:	9313      	str	r3, [sp, #76]	; 0x4c
90027140:	b289      	uxth	r1, r1
90027142:	9b12      	ldr	r3, [sp, #72]	; 0x48
90027144:	b280      	uxth	r0, r0
90027146:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027148:	fb01 f900 	mul.w	r9, r1, r0
9002714c:	0109      	lsls	r1, r1, #4
9002714e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90027152:	eba1 0809 	sub.w	r8, r1, r9
90027156:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
9002715a:	b280      	uxth	r0, r0
9002715c:	fa1f f888 	uxth.w	r8, r8
90027160:	1a09      	subs	r1, r1, r0
90027162:	fb08 f303 	mul.w	r3, r8, r3
90027166:	b289      	uxth	r1, r1
90027168:	fb01 330e 	mla	r3, r1, lr, r3
9002716c:	fb00 3305 	mla	r3, r0, r5, r3
90027170:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90027172:	fb09 3305 	mla	r3, r9, r5, r3
90027176:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002717a:	2b00      	cmp	r3, #0
9002717c:	f000 80d2 	beq.w	90027324 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027180:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90027184:	d01b      	beq.n	900271be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90027186:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
9002718a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002718e:	fb0e fa0a 	mul.w	sl, lr, sl
90027192:	fb0e fe02 	mul.w	lr, lr, r2
90027196:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002719a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9002719e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900271a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900271a6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900271aa:	4452      	add	r2, sl
900271ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900271b0:	0a12      	lsrs	r2, r2, #8
900271b2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900271b6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900271ba:	ea42 020c 	orr.w	r2, r2, ip
900271be:	9d12      	ldr	r5, [sp, #72]	; 0x48
900271c0:	2dff      	cmp	r5, #255	; 0xff
900271c2:	d021      	beq.n	90027208 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
900271c4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900271c6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900271ca:	9d12      	ldr	r5, [sp, #72]	; 0x48
900271cc:	fb05 fb0b 	mul.w	fp, r5, fp
900271d0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900271d2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900271d6:	9d12      	ldr	r5, [sp, #72]	; 0x48
900271d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900271dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900271e0:	fb05 fa0a 	mul.w	sl, r5, sl
900271e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900271e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900271ec:	44de      	add	lr, fp
900271ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900271f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900271f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900271fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900271fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027202:	ea4e 050a 	orr.w	r5, lr, sl
90027206:	950b      	str	r5, [sp, #44]	; 0x2c
90027208:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002720a:	2dff      	cmp	r5, #255	; 0xff
9002720c:	d021      	beq.n	90027252 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
9002720e:	9d08      	ldr	r5, [sp, #32]
90027210:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90027214:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027216:	fb05 fb0b 	mul.w	fp, r5, fp
9002721a:	9d08      	ldr	r5, [sp, #32]
9002721c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90027220:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027222:	fb05 fa0e 	mul.w	sl, r5, lr
90027226:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002722a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002722e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90027232:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90027236:	44de      	add	lr, fp
90027238:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002723c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027240:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027244:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90027248:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002724c:	ea4e 050a 	orr.w	r5, lr, sl
90027250:	9508      	str	r5, [sp, #32]
90027252:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90027254:	2dff      	cmp	r5, #255	; 0xff
90027256:	d021      	beq.n	9002729c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90027258:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002725a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002725e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90027260:	fb05 fb0b 	mul.w	fp, r5, fp
90027264:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90027266:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002726a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002726c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027270:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90027274:	fb05 fa0a 	mul.w	sl, r5, sl
90027278:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002727c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90027280:	44de      	add	lr, fp
90027282:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027286:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002728a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002728e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90027292:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027296:	ea4e 050a 	orr.w	r5, lr, sl
9002729a:	950c      	str	r5, [sp, #48]	; 0x30
9002729c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002729e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
900272a2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900272a6:	2bff      	cmp	r3, #255	; 0xff
900272a8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900272ac:	9d08      	ldr	r5, [sp, #32]
900272ae:	fb08 fc0c 	mul.w	ip, r8, ip
900272b2:	fb01 cc0e 	mla	ip, r1, lr, ip
900272b6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900272ba:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900272bc:	fb00 cc0e 	mla	ip, r0, lr, ip
900272c0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900272c4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900272c6:	fb09 cc0e 	mla	ip, r9, lr, ip
900272ca:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
900272ce:	fb08 f80e 	mul.w	r8, r8, lr
900272d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900272d6:	fb01 8202 	mla	r2, r1, r2, r8
900272da:	9908      	ldr	r1, [sp, #32]
900272dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900272e0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
900272e4:	990c      	ldr	r1, [sp, #48]	; 0x30
900272e6:	fb00 220a 	mla	r2, r0, sl, r2
900272ea:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
900272ee:	fb09 2900 	mla	r9, r9, r0, r2
900272f2:	ea4f 2919 	mov.w	r9, r9, lsr #8
900272f6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900272fa:	ea4c 0c09 	orr.w	ip, ip, r9
900272fe:	ea4f 221c 	mov.w	r2, ip, lsr #8
90027302:	f040 8091 	bne.w	90027428 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90027306:	ea4f 135c 	mov.w	r3, ip, lsr #5
9002730a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
9002730e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90027312:	f022 0207 	bic.w	r2, r2, #7
90027316:	431a      	orrs	r2, r3
90027318:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
9002731c:	ea4c 0c02 	orr.w	ip, ip, r2
90027320:	f8a7 c000 	strh.w	ip, [r7]
90027324:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90027326:	3702      	adds	r7, #2
90027328:	441c      	add	r4, r3
9002732a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002732c:	441e      	add	r6, r3
9002732e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90027330:	3b01      	subs	r3, #1
90027332:	9317      	str	r3, [sp, #92]	; 0x5c
90027334:	e6c0      	b.n	900270b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90027336:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90027338:	441c      	add	r4, r3
9002733a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002733c:	441e      	add	r6, r3
9002733e:	9b07      	ldr	r3, [sp, #28]
90027340:	3b01      	subs	r3, #1
90027342:	9307      	str	r3, [sp, #28]
90027344:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90027346:	3302      	adds	r3, #2
90027348:	930a      	str	r3, [sp, #40]	; 0x28
9002734a:	e695      	b.n	90027078 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002734c:	d024      	beq.n	90027398 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
9002734e:	9b07      	ldr	r3, [sp, #28]
90027350:	9827      	ldr	r0, [sp, #156]	; 0x9c
90027352:	3b01      	subs	r3, #1
90027354:	fb00 4003 	mla	r0, r0, r3, r4
90027358:	1400      	asrs	r0, r0, #16
9002735a:	f53f aeaa 	bmi.w	900270b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002735e:	3901      	subs	r1, #1
90027360:	4288      	cmp	r0, r1
90027362:	f6bf aea6 	bge.w	900270b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027366:	9928      	ldr	r1, [sp, #160]	; 0xa0
90027368:	fb01 6303 	mla	r3, r1, r3, r6
9002736c:	141b      	asrs	r3, r3, #16
9002736e:	f53f aea0 	bmi.w	900270b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027372:	3a01      	subs	r2, #1
90027374:	4293      	cmp	r3, r2
90027376:	f6bf ae9c 	bge.w	900270b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002737a:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002737e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
90027382:	f1bb 0f00 	cmp.w	fp, #0
90027386:	f300 809a 	bgt.w	900274be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002738a:	9b07      	ldr	r3, [sp, #28]
9002738c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027390:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90027392:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90027396:	930a      	str	r3, [sp, #40]	; 0x28
90027398:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002739a:	2b00      	cmp	r3, #0
9002739c:	f340 81ec 	ble.w	90027778 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900273a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900273a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
900273a6:	ee30 0a04 	vadd.f32	s0, s0, s8
900273aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
900273ae:	eef0 6a62 	vmov.f32	s13, s5
900273b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900273b6:	ee31 1a05 	vadd.f32	s2, s2, s10
900273ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900273be:	ee16 4a90 	vmov	r4, s13
900273c2:	eef0 6a43 	vmov.f32	s13, s6
900273c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900273ca:	ee16 6a90 	vmov	r6, s13
900273ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
900273d2:	ee61 7a27 	vmul.f32	s15, s2, s15
900273d6:	ee77 2a62 	vsub.f32	s5, s14, s5
900273da:	ee37 3ac3 	vsub.f32	s6, s15, s6
900273de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900273e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900273e6:	ee12 2a90 	vmov	r2, s5
900273ea:	eef0 2a47 	vmov.f32	s5, s14
900273ee:	fb92 f3f3 	sdiv	r3, r2, r3
900273f2:	ee13 2a10 	vmov	r2, s6
900273f6:	9327      	str	r3, [sp, #156]	; 0x9c
900273f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
900273fa:	eeb0 3a67 	vmov.f32	s6, s15
900273fe:	fb92 f3f3 	sdiv	r3, r2, r3
90027402:	9328      	str	r3, [sp, #160]	; 0xa0
90027404:	9b16      	ldr	r3, [sp, #88]	; 0x58
90027406:	9a18      	ldr	r2, [sp, #96]	; 0x60
90027408:	3b01      	subs	r3, #1
9002740a:	9316      	str	r3, [sp, #88]	; 0x58
9002740c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002740e:	bf08      	it	eq
90027410:	4613      	moveq	r3, r2
90027412:	9307      	str	r3, [sp, #28]
90027414:	e622      	b.n	9002705c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90027416:	2800      	cmp	r0, #0
90027418:	f43f ae92 	beq.w	90027140 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002741c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90027420:	9308      	str	r3, [sp, #32]
90027422:	0e1b      	lsrs	r3, r3, #24
90027424:	9310      	str	r3, [sp, #64]	; 0x40
90027426:	e68b      	b.n	90027140 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027428:	8839      	ldrh	r1, [r7, #0]
9002742a:	43db      	mvns	r3, r3
9002742c:	4dd4      	ldr	r5, [pc, #848]	; (90027780 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
9002742e:	ea4f 2e21 	mov.w	lr, r1, asr #8
90027432:	fa5f f883 	uxtb.w	r8, r3
90027436:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9002743a:	10c8      	asrs	r0, r1, #3
9002743c:	00cb      	lsls	r3, r1, #3
9002743e:	fb0e fe08 	mul.w	lr, lr, r8
90027442:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90027446:	b2db      	uxtb	r3, r3
90027448:	f10e 0101 	add.w	r1, lr, #1
9002744c:	fb00 f008 	mul.w	r0, r0, r8
90027450:	fb03 f308 	mul.w	r3, r3, r8
90027454:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90027458:	ea4f 411c 	mov.w	r1, ip, lsr #16
9002745c:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90027460:	f100 0e01 	add.w	lr, r0, #1
90027464:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90027468:	b2c9      	uxtb	r1, r1
9002746a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002746e:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90027472:	00d2      	lsls	r2, r2, #3
90027474:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90027478:	430a      	orrs	r2, r1
9002747a:	1c59      	adds	r1, r3, #1
9002747c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90027480:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90027484:	e748      	b.n	90027318 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90027486:	f112 0801 	adds.w	r8, r2, #1
9002748a:	f53f af4b 	bmi.w	90027324 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002748e:	4543      	cmp	r3, r8
90027490:	f6ff af48 	blt.w	90027324 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027494:	f11c 0801 	adds.w	r8, ip, #1
90027498:	f53f af44 	bmi.w	90027324 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002749c:	45c6      	cmp	lr, r8
9002749e:	f6ff af41 	blt.w	90027324 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900274a2:	b21b      	sxth	r3, r3
900274a4:	e9cd 2c01 	strd	r2, ip, [sp, #4]
900274a8:	fa0f f28e 	sxth.w	r2, lr
900274ac:	e9cd 1003 	strd	r1, r0, [sp, #12]
900274b0:	9200      	str	r2, [sp, #0]
900274b2:	4639      	mov	r1, r7
900274b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900274b6:	9819      	ldr	r0, [sp, #100]	; 0x64
900274b8:	f7ff fc88 	bl	90026dcc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
900274bc:	e732      	b.n	90027324 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900274be:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900274c0:	1421      	asrs	r1, r4, #16
900274c2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900274c4:	f3c4 3203 	ubfx	r2, r4, #12, #4
900274c8:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
900274cc:	1433      	asrs	r3, r6, #16
900274ce:	f3c6 3003 	ubfx	r0, r6, #12, #4
900274d2:	fb07 1303 	mla	r3, r7, r3, r1
900274d6:	990f      	ldr	r1, [sp, #60]	; 0x3c
900274d8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
900274dc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900274e0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900274e4:	2a00      	cmp	r2, #0
900274e6:	f000 8108 	beq.w	900276fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
900274ea:	684d      	ldr	r5, [r1, #4]
900274ec:	950d      	str	r5, [sp, #52]	; 0x34
900274ee:	0e2d      	lsrs	r5, r5, #24
900274f0:	9514      	str	r5, [sp, #80]	; 0x50
900274f2:	b178      	cbz	r0, 90027514 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900274f4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
900274f8:	3f01      	subs	r7, #1
900274fa:	00bf      	lsls	r7, r7, #2
900274fc:	3704      	adds	r7, #4
900274fe:	eb01 0e07 	add.w	lr, r1, r7
90027502:	59c9      	ldr	r1, [r1, r7]
90027504:	9109      	str	r1, [sp, #36]	; 0x24
90027506:	0e09      	lsrs	r1, r1, #24
90027508:	9111      	str	r1, [sp, #68]	; 0x44
9002750a:	f8de 1004 	ldr.w	r1, [lr, #4]
9002750e:	910e      	str	r1, [sp, #56]	; 0x38
90027510:	0e09      	lsrs	r1, r1, #24
90027512:	9115      	str	r1, [sp, #84]	; 0x54
90027514:	b292      	uxth	r2, r2
90027516:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027518:	b280      	uxth	r0, r0
9002751a:	fb02 f900 	mul.w	r9, r2, r0
9002751e:	0112      	lsls	r2, r2, #4
90027520:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90027524:	eba2 0e09 	sub.w	lr, r2, r9
90027528:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
9002752c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9002752e:	b280      	uxth	r0, r0
90027530:	fa1f fe8e 	uxth.w	lr, lr
90027534:	1a09      	subs	r1, r1, r0
90027536:	fb0e f202 	mul.w	r2, lr, r2
9002753a:	b289      	uxth	r1, r1
9002753c:	fb01 220c 	mla	r2, r1, ip, r2
90027540:	fb00 2205 	mla	r2, r0, r5, r2
90027544:	9d15      	ldr	r5, [sp, #84]	; 0x54
90027546:	fb09 2205 	mla	r2, r9, r5, r2
9002754a:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002754e:	2a00      	cmp	r2, #0
90027550:	f000 80ca 	beq.w	900276e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027554:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90027558:	d019      	beq.n	9002758e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
9002755a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002755e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90027562:	fb0c fa0a 	mul.w	sl, ip, sl
90027566:	fb0c fc03 	mul.w	ip, ip, r3
9002756a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002756e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90027572:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90027576:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002757a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002757e:	4453      	add	r3, sl
90027580:	0a3f      	lsrs	r7, r7, #8
90027582:	0a1b      	lsrs	r3, r3, #8
90027584:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90027588:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002758c:	433b      	orrs	r3, r7
9002758e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90027590:	2dff      	cmp	r5, #255	; 0xff
90027592:	d020      	beq.n	900275d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90027594:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027596:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002759a:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002759c:	436f      	muls	r7, r5
9002759e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900275a0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900275a4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900275a8:	9d14      	ldr	r5, [sp, #80]	; 0x50
900275aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900275ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900275b2:	fb05 fa0a 	mul.w	sl, r5, sl
900275b6:	44bc      	add	ip, r7
900275b8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900275bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900275c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900275c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900275c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900275cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900275d0:	ea4c 050a 	orr.w	r5, ip, sl
900275d4:	950d      	str	r5, [sp, #52]	; 0x34
900275d6:	9d11      	ldr	r5, [sp, #68]	; 0x44
900275d8:	2dff      	cmp	r5, #255	; 0xff
900275da:	d020      	beq.n	9002761e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
900275dc:	9d09      	ldr	r5, [sp, #36]	; 0x24
900275de:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900275e2:	9d11      	ldr	r5, [sp, #68]	; 0x44
900275e4:	436f      	muls	r7, r5
900275e6:	9d09      	ldr	r5, [sp, #36]	; 0x24
900275e8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
900275ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
900275ee:	fb05 fa0c 	mul.w	sl, r5, ip
900275f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900275f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900275fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900275fe:	44bc      	add	ip, r7
90027600:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90027604:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027608:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002760c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027610:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027614:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027618:	ea4c 050a 	orr.w	r5, ip, sl
9002761c:	9509      	str	r5, [sp, #36]	; 0x24
9002761e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90027620:	2dff      	cmp	r5, #255	; 0xff
90027622:	d020      	beq.n	90027666 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90027624:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027626:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002762a:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002762c:	436f      	muls	r7, r5
9002762e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027630:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027634:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027638:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002763a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002763e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027642:	fb05 fa0a 	mul.w	sl, r5, sl
90027646:	44bc      	add	ip, r7
90027648:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002764c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027650:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027654:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027658:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002765c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027660:	ea4c 050a 	orr.w	r5, ip, sl
90027664:	950e      	str	r5, [sp, #56]	; 0x38
90027666:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027668:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9002766c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90027670:	2aff      	cmp	r2, #255	; 0xff
90027672:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027676:	9d09      	ldr	r5, [sp, #36]	; 0x24
90027678:	fb0e f707 	mul.w	r7, lr, r7
9002767c:	fb01 770c 	mla	r7, r1, ip, r7
90027680:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90027684:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027686:	fb00 770c 	mla	r7, r0, ip, r7
9002768a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002768e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027690:	fb09 770c 	mla	r7, r9, ip, r7
90027694:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90027698:	fb0e fe0c 	mul.w	lr, lr, ip
9002769c:	ea4f 2717 	mov.w	r7, r7, lsr #8
900276a0:	fb01 e303 	mla	r3, r1, r3, lr
900276a4:	9909      	ldr	r1, [sp, #36]	; 0x24
900276a6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900276aa:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
900276ae:	990e      	ldr	r1, [sp, #56]	; 0x38
900276b0:	fb00 330a 	mla	r3, r0, sl, r3
900276b4:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
900276b8:	fb09 3c0c 	mla	ip, r9, ip, r3
900276bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900276c0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900276c4:	ea47 070c 	orr.w	r7, r7, ip
900276c8:	ea4f 2317 	mov.w	r3, r7, lsr #8
900276cc:	d11e      	bne.n	9002770c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
900276ce:	097a      	lsrs	r2, r7, #5
900276d0:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
900276d4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900276d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900276dc:	f023 0307 	bic.w	r3, r3, #7
900276e0:	4313      	orrs	r3, r2
900276e2:	431f      	orrs	r7, r3
900276e4:	f8a8 7000 	strh.w	r7, [r8]
900276e8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900276ea:	f108 0802 	add.w	r8, r8, #2
900276ee:	f10b 3bff 	add.w	fp, fp, #4294967295
900276f2:	441c      	add	r4, r3
900276f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900276f6:	441e      	add	r6, r3
900276f8:	e643      	b.n	90027382 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900276fa:	2800      	cmp	r0, #0
900276fc:	f43f af0a 	beq.w	90027514 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027700:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90027704:	9109      	str	r1, [sp, #36]	; 0x24
90027706:	0e09      	lsrs	r1, r1, #24
90027708:	9111      	str	r1, [sp, #68]	; 0x44
9002770a:	e703      	b.n	90027514 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002770c:	f8b8 1000 	ldrh.w	r1, [r8]
90027710:	43d2      	mvns	r2, r2
90027712:	ea4f 2c21 	mov.w	ip, r1, asr #8
90027716:	fa5f fe82 	uxtb.w	lr, r2
9002771a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9002771e:	10c8      	asrs	r0, r1, #3
90027720:	00ca      	lsls	r2, r1, #3
90027722:	fb0c fc0e 	mul.w	ip, ip, lr
90027726:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002772a:	b2d2      	uxtb	r2, r2
9002772c:	f10c 0101 	add.w	r1, ip, #1
90027730:	fb00 f00e 	mul.w	r0, r0, lr
90027734:	fb02 f20e 	mul.w	r2, r2, lr
90027738:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002773c:	0c39      	lsrs	r1, r7, #16
9002773e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027742:	490f      	ldr	r1, [pc, #60]	; (90027780 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90027744:	fa5f fc8c 	uxtb.w	ip, ip
90027748:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
9002774c:	1c41      	adds	r1, r0, #1
9002774e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90027752:	1c51      	adds	r1, r2, #1
90027754:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027758:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002775c:	00c0      	lsls	r0, r0, #3
9002775e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90027762:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90027766:	f3c7 07c4 	ubfx	r7, r7, #3, #5
9002776a:	ea4c 0c00 	orr.w	ip, ip, r0
9002776e:	ea47 0c0c 	orr.w	ip, r7, ip
90027772:	f8a8 c000 	strh.w	ip, [r8]
90027776:	e7b7      	b.n	900276e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027778:	b01b      	add	sp, #108	; 0x6c
9002777a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002777e:	bf00      	nop
90027780:	fffff800 	.word	0xfffff800

90027784 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90027784:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027788:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
9002778c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027790:	2d00      	cmp	r5, #0
90027792:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90027796:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002779a:	fb05 0e03 	mla	lr, r5, r3, r0
9002779e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
900277a2:	f2c0 808c 	blt.w	900278be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900277a6:	45a9      	cmp	r9, r5
900277a8:	f340 8089 	ble.w	900278be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900277ac:	2800      	cmp	r0, #0
900277ae:	f2c0 8084 	blt.w	900278ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900277b2:	4580      	cmp	r8, r0
900277b4:	f340 8081 	ble.w	900278ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900277b8:	ea4f 045e 	mov.w	r4, lr, lsr #1
900277bc:	f01e 0f01 	tst.w	lr, #1
900277c0:	5d16      	ldrb	r6, [r2, r4]
900277c2:	bf0c      	ite	eq
900277c4:	f006 060f 	andeq.w	r6, r6, #15
900277c8:	1136      	asrne	r6, r6, #4
900277ca:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900277ce:	b2f6      	uxtb	r6, r6
900277d0:	1c44      	adds	r4, r0, #1
900277d2:	d477      	bmi.n	900278c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900277d4:	45a0      	cmp	r8, r4
900277d6:	dd75      	ble.n	900278c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900277d8:	2f00      	cmp	r7, #0
900277da:	d075      	beq.n	900278c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
900277dc:	f10e 0a01 	add.w	sl, lr, #1
900277e0:	ea4f 045a 	mov.w	r4, sl, lsr #1
900277e4:	f01a 0f01 	tst.w	sl, #1
900277e8:	5d14      	ldrb	r4, [r2, r4]
900277ea:	bf0c      	ite	eq
900277ec:	f004 040f 	andeq.w	r4, r4, #15
900277f0:	1124      	asrne	r4, r4, #4
900277f2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900277f6:	b2e4      	uxtb	r4, r4
900277f8:	3501      	adds	r5, #1
900277fa:	d469      	bmi.n	900278d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
900277fc:	45a9      	cmp	r9, r5
900277fe:	dd67      	ble.n	900278d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027800:	f1bc 0f00 	cmp.w	ip, #0
90027804:	d067      	beq.n	900278d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90027806:	2800      	cmp	r0, #0
90027808:	db60      	blt.n	900278cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002780a:	4580      	cmp	r8, r0
9002780c:	dd5e      	ble.n	900278cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002780e:	eb03 090e 	add.w	r9, r3, lr
90027812:	ea4f 0559 	mov.w	r5, r9, lsr #1
90027816:	f019 0f01 	tst.w	r9, #1
9002781a:	5d55      	ldrb	r5, [r2, r5]
9002781c:	bf0c      	ite	eq
9002781e:	f005 050f 	andeq.w	r5, r5, #15
90027822:	112d      	asrne	r5, r5, #4
90027824:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90027828:	b2ed      	uxtb	r5, r5
9002782a:	3001      	adds	r0, #1
9002782c:	d456      	bmi.n	900278dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002782e:	4580      	cmp	r8, r0
90027830:	dd54      	ble.n	900278dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90027832:	2f00      	cmp	r7, #0
90027834:	d054      	beq.n	900278e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90027836:	3301      	adds	r3, #1
90027838:	449e      	add	lr, r3
9002783a:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002783e:	f01e 0f01 	tst.w	lr, #1
90027842:	5cd0      	ldrb	r0, [r2, r3]
90027844:	bf0c      	ite	eq
90027846:	f000 000f 	andeq.w	r0, r0, #15
9002784a:	1100      	asrne	r0, r0, #4
9002784c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027850:	b2c3      	uxtb	r3, r0
90027852:	b2ba      	uxth	r2, r7
90027854:	fa1f fc8c 	uxth.w	ip, ip
90027858:	fb02 f00c 	mul.w	r0, r2, ip
9002785c:	0112      	lsls	r2, r2, #4
9002785e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90027862:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90027866:	1a12      	subs	r2, r2, r0
90027868:	fa1f fc8c 	uxth.w	ip, ip
9002786c:	b292      	uxth	r2, r2
9002786e:	eba7 070c 	sub.w	r7, r7, ip
90027872:	4362      	muls	r2, r4
90027874:	b2bf      	uxth	r7, r7
90027876:	fb06 2207 	mla	r2, r6, r7, r2
9002787a:	fb0c 2505 	mla	r5, ip, r5, r2
9002787e:	fb00 5303 	mla	r3, r0, r3, r5
90027882:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027886:	b1b3      	cbz	r3, 900278b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027888:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
9002788c:	435a      	muls	r2, r3
9002788e:	1c53      	adds	r3, r2, #1
90027890:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027894:	4a2d      	ldr	r2, [pc, #180]	; (9002794c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90027896:	121b      	asrs	r3, r3, #8
90027898:	6812      	ldr	r2, [r2, #0]
9002789a:	2bff      	cmp	r3, #255	; 0xff
9002789c:	ea4f 2612 	mov.w	r6, r2, lsr #8
900278a0:	d120      	bne.n	900278e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
900278a2:	0950      	lsrs	r0, r2, #5
900278a4:	4b2a      	ldr	r3, [pc, #168]	; (90027950 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
900278a6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900278aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900278ae:	4033      	ands	r3, r6
900278b0:	4318      	orrs	r0, r3
900278b2:	4302      	orrs	r2, r0
900278b4:	800a      	strh	r2, [r1, #0]
900278b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900278ba:	2600      	movs	r6, #0
900278bc:	e788      	b.n	900277d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
900278be:	2400      	movs	r4, #0
900278c0:	4626      	mov	r6, r4
900278c2:	e799      	b.n	900277f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900278c4:	2400      	movs	r4, #0
900278c6:	e797      	b.n	900277f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900278c8:	463c      	mov	r4, r7
900278ca:	e795      	b.n	900277f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900278cc:	2500      	movs	r5, #0
900278ce:	e7ac      	b.n	9002782a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
900278d0:	2300      	movs	r3, #0
900278d2:	461d      	mov	r5, r3
900278d4:	e7bd      	b.n	90027852 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900278d6:	4663      	mov	r3, ip
900278d8:	4665      	mov	r5, ip
900278da:	e7ba      	b.n	90027852 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900278dc:	2300      	movs	r3, #0
900278de:	e7b8      	b.n	90027852 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900278e0:	463b      	mov	r3, r7
900278e2:	e7b6      	b.n	90027852 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900278e4:	880d      	ldrh	r5, [r1, #0]
900278e6:	b29f      	uxth	r7, r3
900278e8:	f3c2 4007 	ubfx	r0, r2, #16, #8
900278ec:	43db      	mvns	r3, r3
900278ee:	122c      	asrs	r4, r5, #8
900278f0:	fb10 f007 	smulbb	r0, r0, r7
900278f4:	b2db      	uxtb	r3, r3
900278f6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900278fa:	b2f6      	uxtb	r6, r6
900278fc:	b2d2      	uxtb	r2, r2
900278fe:	fb04 0403 	mla	r4, r4, r3, r0
90027902:	10e8      	asrs	r0, r5, #3
90027904:	fb12 f207 	smulbb	r2, r2, r7
90027908:	00ed      	lsls	r5, r5, #3
9002790a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002790e:	b2a4      	uxth	r4, r4
90027910:	fb16 f607 	smulbb	r6, r6, r7
90027914:	b2ed      	uxtb	r5, r5
90027916:	fb00 6603 	mla	r6, r0, r3, r6
9002791a:	fb05 2303 	mla	r3, r5, r3, r2
9002791e:	b2b0      	uxth	r0, r6
90027920:	b29a      	uxth	r2, r3
90027922:	1c63      	adds	r3, r4, #1
90027924:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027928:	1c53      	adds	r3, r2, #1
9002792a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002792e:	1c42      	adds	r2, r0, #1
90027930:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90027934:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027938:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002793c:	0940      	lsrs	r0, r0, #5
9002793e:	4323      	orrs	r3, r4
90027940:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90027944:	4303      	orrs	r3, r0
90027946:	800b      	strh	r3, [r1, #0]
90027948:	e7b5      	b.n	900278b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
9002794a:	bf00      	nop
9002794c:	24039adc 	.word	0x24039adc
90027950:	00fff800 	.word	0x00fff800

90027954 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027958:	b097      	sub	sp, #92	; 0x5c
9002795a:	9214      	str	r2, [sp, #80]	; 0x50
9002795c:	9309      	str	r3, [sp, #36]	; 0x24
9002795e:	9a25      	ldr	r2, [sp, #148]	; 0x94
90027960:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90027964:	9015      	str	r0, [sp, #84]	; 0x54
90027966:	910d      	str	r1, [sp, #52]	; 0x34
90027968:	6850      	ldr	r0, [r2, #4]
9002796a:	930f      	str	r3, [sp, #60]	; 0x3c
9002796c:	6812      	ldr	r2, [r2, #0]
9002796e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90027972:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
90027976:	fb00 1303 	mla	r3, r0, r3, r1
9002797a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002797e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027980:	689b      	ldr	r3, [r3, #8]
90027982:	3301      	adds	r3, #1
90027984:	f023 0301 	bic.w	r3, r3, #1
90027988:	930a      	str	r3, [sp, #40]	; 0x28
9002798a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002798c:	681f      	ldr	r7, [r3, #0]
9002798e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90027990:	2b00      	cmp	r3, #0
90027992:	dc03      	bgt.n	9002799c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027994:	9b14      	ldr	r3, [sp, #80]	; 0x50
90027996:	2b00      	cmp	r3, #0
90027998:	f340 8289 	ble.w	90027eae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002799c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002799e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900279a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900279a6:	1e48      	subs	r0, r1, #1
900279a8:	f102 3cff 	add.w	ip, r2, #4294967295
900279ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
900279ae:	2b00      	cmp	r3, #0
900279b0:	f340 80c5 	ble.w	90027b3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
900279b4:	ea5f 4e24 	movs.w	lr, r4, asr #16
900279b8:	ea4f 4326 	mov.w	r3, r6, asr #16
900279bc:	d406      	bmi.n	900279cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900279be:	4586      	cmp	lr, r0
900279c0:	da04      	bge.n	900279cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900279c2:	2b00      	cmp	r3, #0
900279c4:	db02      	blt.n	900279cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900279c6:	4563      	cmp	r3, ip
900279c8:	f2c0 80ba 	blt.w	90027b40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900279cc:	f11e 0e01 	adds.w	lr, lr, #1
900279d0:	f100 80ab 	bmi.w	90027b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900279d4:	4571      	cmp	r1, lr
900279d6:	f2c0 80a8 	blt.w	90027b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900279da:	3301      	adds	r3, #1
900279dc:	f100 80a5 	bmi.w	90027b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900279e0:	429a      	cmp	r2, r3
900279e2:	f2c0 80a2 	blt.w	90027b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900279e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900279e8:	46c8      	mov	r8, r9
900279ea:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
900279ee:	930e      	str	r3, [sp, #56]	; 0x38
900279f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900279f2:	2b00      	cmp	r3, #0
900279f4:	f340 80c4 	ble.w	90027b80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
900279f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900279fa:	1430      	asrs	r0, r6, #16
900279fc:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027a00:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027a04:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027a08:	1423      	asrs	r3, r4, #16
90027a0a:	f100 814f 	bmi.w	90027cac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027a0e:	f10c 3bff 	add.w	fp, ip, #4294967295
90027a12:	455b      	cmp	r3, fp
90027a14:	f280 814a 	bge.w	90027cac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027a18:	2800      	cmp	r0, #0
90027a1a:	f2c0 8147 	blt.w	90027cac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027a1e:	f10e 3bff 	add.w	fp, lr, #4294967295
90027a22:	4558      	cmp	r0, fp
90027a24:	f280 8142 	bge.w	90027cac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027a28:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90027a2a:	fb00 3305 	mla	r3, r0, r5, r3
90027a2e:	0858      	lsrs	r0, r3, #1
90027a30:	07dd      	lsls	r5, r3, #31
90027a32:	f817 c000 	ldrb.w	ip, [r7, r0]
90027a36:	bf54      	ite	pl
90027a38:	f00c 0c0f 	andpl.w	ip, ip, #15
90027a3c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027a40:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027a44:	fa5f fc8c 	uxtb.w	ip, ip
90027a48:	2a00      	cmp	r2, #0
90027a4a:	f000 80dd 	beq.w	90027c08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90027a4e:	1c58      	adds	r0, r3, #1
90027a50:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90027a54:	07c0      	lsls	r0, r0, #31
90027a56:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027a5a:	bf54      	ite	pl
90027a5c:	f00e 0e0f 	andpl.w	lr, lr, #15
90027a60:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90027a64:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027a68:	fa5f f08e 	uxtb.w	r0, lr
90027a6c:	9010      	str	r0, [sp, #64]	; 0x40
90027a6e:	b1d9      	cbz	r1, 90027aa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027a70:	4453      	add	r3, sl
90027a72:	0858      	lsrs	r0, r3, #1
90027a74:	07dd      	lsls	r5, r3, #31
90027a76:	f103 0301 	add.w	r3, r3, #1
90027a7a:	5c38      	ldrb	r0, [r7, r0]
90027a7c:	bf54      	ite	pl
90027a7e:	f000 000f 	andpl.w	r0, r0, #15
90027a82:	1100      	asrmi	r0, r0, #4
90027a84:	07dd      	lsls	r5, r3, #31
90027a86:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027a8a:	b2c0      	uxtb	r0, r0
90027a8c:	900b      	str	r0, [sp, #44]	; 0x2c
90027a8e:	ea4f 0053 	mov.w	r0, r3, lsr #1
90027a92:	f817 e000 	ldrb.w	lr, [r7, r0]
90027a96:	bf54      	ite	pl
90027a98:	f00e 030f 	andpl.w	r3, lr, #15
90027a9c:	ea4f 132e 	movmi.w	r3, lr, asr #4
90027aa0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027aa4:	b2db      	uxtb	r3, r3
90027aa6:	9311      	str	r3, [sp, #68]	; 0x44
90027aa8:	b292      	uxth	r2, r2
90027aaa:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027aac:	b289      	uxth	r1, r1
90027aae:	fb02 f301 	mul.w	r3, r2, r1
90027ab2:	0112      	lsls	r2, r2, #4
90027ab4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90027ab8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
90027abc:	1ad2      	subs	r2, r2, r3
90027abe:	b289      	uxth	r1, r1
90027ac0:	b292      	uxth	r2, r2
90027ac2:	1a40      	subs	r0, r0, r1
90027ac4:	436a      	muls	r2, r5
90027ac6:	b280      	uxth	r0, r0
90027ac8:	fb0c 2c00 	mla	ip, ip, r0, r2
90027acc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90027ace:	fb01 c102 	mla	r1, r1, r2, ip
90027ad2:	9a11      	ldr	r2, [sp, #68]	; 0x44
90027ad4:	fb03 1302 	mla	r3, r3, r2, r1
90027ad8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027adc:	b1db      	cbz	r3, 90027b16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027ade:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90027ae0:	4353      	muls	r3, r2
90027ae2:	1c5a      	adds	r2, r3, #1
90027ae4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027ae8:	4ac6      	ldr	r2, [pc, #792]	; (90027e04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90027aea:	121b      	asrs	r3, r3, #8
90027aec:	6812      	ldr	r2, [r2, #0]
90027aee:	2bff      	cmp	r3, #255	; 0xff
90027af0:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90027af4:	f040 8099 	bne.w	90027c2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90027af8:	0953      	lsrs	r3, r2, #5
90027afa:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90027afe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027b02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90027b06:	f02c 0c07 	bic.w	ip, ip, #7
90027b0a:	ea43 0c0c 	orr.w	ip, r3, ip
90027b0e:	ea4c 0202 	orr.w	r2, ip, r2
90027b12:	f8a8 2000 	strh.w	r2, [r8]
90027b16:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90027b18:	f108 0802 	add.w	r8, r8, #2
90027b1c:	441c      	add	r4, r3
90027b1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027b20:	441e      	add	r6, r3
90027b22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90027b24:	3b01      	subs	r3, #1
90027b26:	930e      	str	r3, [sp, #56]	; 0x38
90027b28:	e762      	b.n	900279f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90027b2a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90027b2c:	f109 0902 	add.w	r9, r9, #2
90027b30:	441c      	add	r4, r3
90027b32:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027b34:	441e      	add	r6, r3
90027b36:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027b38:	3b01      	subs	r3, #1
90027b3a:	9309      	str	r3, [sp, #36]	; 0x24
90027b3c:	e736      	b.n	900279ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90027b3e:	d024      	beq.n	90027b8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90027b40:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027b42:	9823      	ldr	r0, [sp, #140]	; 0x8c
90027b44:	3b01      	subs	r3, #1
90027b46:	fb00 4003 	mla	r0, r0, r3, r4
90027b4a:	1400      	asrs	r0, r0, #16
90027b4c:	f53f af4b 	bmi.w	900279e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027b50:	3901      	subs	r1, #1
90027b52:	4288      	cmp	r0, r1
90027b54:	f6bf af47 	bge.w	900279e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027b58:	9924      	ldr	r1, [sp, #144]	; 0x90
90027b5a:	fb01 6303 	mla	r3, r1, r3, r6
90027b5e:	141b      	asrs	r3, r3, #16
90027b60:	f53f af41 	bmi.w	900279e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027b64:	3a01      	subs	r2, #1
90027b66:	4293      	cmp	r3, r2
90027b68:	f6bf af3d 	bge.w	900279e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027b6c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
90027b70:	46c8      	mov	r8, r9
90027b72:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90027b76:	930e      	str	r3, [sp, #56]	; 0x38
90027b78:	f1bb 0f00 	cmp.w	fp, #0
90027b7c:	f300 80b7 	bgt.w	90027cee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90027b80:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027b82:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027b86:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027b8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90027b8c:	2b00      	cmp	r3, #0
90027b8e:	f340 818e 	ble.w	90027eae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90027b92:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90027b96:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027b98:	ee30 0a04 	vadd.f32	s0, s0, s8
90027b9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027ba0:	eef0 6a62 	vmov.f32	s13, s5
90027ba4:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027ba8:	ee31 1a05 	vadd.f32	s2, s2, s10
90027bac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027bb0:	ee16 4a90 	vmov	r4, s13
90027bb4:	eef0 6a43 	vmov.f32	s13, s6
90027bb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027bbc:	ee16 6a90 	vmov	r6, s13
90027bc0:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027bc4:	ee61 7a27 	vmul.f32	s15, s2, s15
90027bc8:	ee77 2a62 	vsub.f32	s5, s14, s5
90027bcc:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027bd0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027bd4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027bd8:	ee12 2a90 	vmov	r2, s5
90027bdc:	eef0 2a47 	vmov.f32	s5, s14
90027be0:	fb92 f3f3 	sdiv	r3, r2, r3
90027be4:	ee13 2a10 	vmov	r2, s6
90027be8:	9323      	str	r3, [sp, #140]	; 0x8c
90027bea:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027bec:	eeb0 3a67 	vmov.f32	s6, s15
90027bf0:	fb92 f3f3 	sdiv	r3, r2, r3
90027bf4:	9324      	str	r3, [sp, #144]	; 0x90
90027bf6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90027bf8:	9a14      	ldr	r2, [sp, #80]	; 0x50
90027bfa:	3b01      	subs	r3, #1
90027bfc:	930d      	str	r3, [sp, #52]	; 0x34
90027bfe:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027c00:	bf08      	it	eq
90027c02:	4613      	moveq	r3, r2
90027c04:	9309      	str	r3, [sp, #36]	; 0x24
90027c06:	e6c2      	b.n	9002798e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027c08:	2900      	cmp	r1, #0
90027c0a:	f43f af4d 	beq.w	90027aa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027c0e:	eb0a 0003 	add.w	r0, sl, r3
90027c12:	0843      	lsrs	r3, r0, #1
90027c14:	07c0      	lsls	r0, r0, #31
90027c16:	5cfb      	ldrb	r3, [r7, r3]
90027c18:	bf54      	ite	pl
90027c1a:	f003 030f 	andpl.w	r3, r3, #15
90027c1e:	111b      	asrmi	r3, r3, #4
90027c20:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027c24:	b2db      	uxtb	r3, r3
90027c26:	930b      	str	r3, [sp, #44]	; 0x2c
90027c28:	e73e      	b.n	90027aa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027c2a:	f8b8 e000 	ldrh.w	lr, [r8]
90027c2e:	fa1f fb83 	uxth.w	fp, r3
90027c32:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027c36:	43db      	mvns	r3, r3
90027c38:	ea4f 202e 	mov.w	r0, lr, asr #8
90027c3c:	fb11 f10b 	smulbb	r1, r1, fp
90027c40:	b2db      	uxtb	r3, r3
90027c42:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90027c46:	fa5f fc8c 	uxtb.w	ip, ip
90027c4a:	b2d2      	uxtb	r2, r2
90027c4c:	fb00 1003 	mla	r0, r0, r3, r1
90027c50:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027c54:	fb1c fc0b 	smulbb	ip, ip, fp
90027c58:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027c5c:	b280      	uxth	r0, r0
90027c5e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90027c62:	fb12 fb0b 	smulbb	fp, r2, fp
90027c66:	fa5f fe8e 	uxtb.w	lr, lr
90027c6a:	fb01 cc03 	mla	ip, r1, r3, ip
90027c6e:	fb0e bb03 	mla	fp, lr, r3, fp
90027c72:	1c43      	adds	r3, r0, #1
90027c74:	fa1f fc8c 	uxth.w	ip, ip
90027c78:	fa1f fb8b 	uxth.w	fp, fp
90027c7c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027c80:	f10c 0101 	add.w	r1, ip, #1
90027c84:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
90027c88:	f10b 0001 	add.w	r0, fp, #1
90027c8c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027c90:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90027c94:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027c98:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027c9c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90027ca0:	4318      	orrs	r0, r3
90027ca2:	ea40 000c 	orr.w	r0, r0, ip
90027ca6:	f8a8 0000 	strh.w	r0, [r8]
90027caa:	e734      	b.n	90027b16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027cac:	f113 0b01 	adds.w	fp, r3, #1
90027cb0:	f53f af31 	bmi.w	90027b16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027cb4:	45dc      	cmp	ip, fp
90027cb6:	f6ff af2e 	blt.w	90027b16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027cba:	f110 0b01 	adds.w	fp, r0, #1
90027cbe:	f53f af2a 	bmi.w	90027b16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027cc2:	45de      	cmp	lr, fp
90027cc4:	f6ff af27 	blt.w	90027b16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027cc8:	9302      	str	r3, [sp, #8]
90027cca:	fa0f f38e 	sxth.w	r3, lr
90027cce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90027cd0:	9301      	str	r3, [sp, #4]
90027cd2:	fa0f f38c 	sxth.w	r3, ip
90027cd6:	e9cd 0203 	strd	r0, r2, [sp, #12]
90027cda:	e9cd 1505 	strd	r1, r5, [sp, #20]
90027cde:	9300      	str	r3, [sp, #0]
90027ce0:	463a      	mov	r2, r7
90027ce2:	4653      	mov	r3, sl
90027ce4:	4641      	mov	r1, r8
90027ce6:	9815      	ldr	r0, [sp, #84]	; 0x54
90027ce8:	f7ff fd4c 	bl	90027784 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90027cec:	e713      	b.n	90027b16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027cee:	1422      	asrs	r2, r4, #16
90027cf0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90027cf2:	1433      	asrs	r3, r6, #16
90027cf4:	f3c4 3103 	ubfx	r1, r4, #12, #4
90027cf8:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027cfc:	fb05 2303 	mla	r3, r5, r3, r2
90027d00:	085a      	lsrs	r2, r3, #1
90027d02:	07dd      	lsls	r5, r3, #31
90027d04:	5cba      	ldrb	r2, [r7, r2]
90027d06:	bf54      	ite	pl
90027d08:	f002 020f 	andpl.w	r2, r2, #15
90027d0c:	1112      	asrmi	r2, r2, #4
90027d0e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90027d12:	b2d2      	uxtb	r2, r2
90027d14:	2900      	cmp	r1, #0
90027d16:	d077      	beq.n	90027e08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90027d18:	f103 0e01 	add.w	lr, r3, #1
90027d1c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90027d20:	f01e 0f01 	tst.w	lr, #1
90027d24:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027d28:	bf0c      	ite	eq
90027d2a:	f00c 0c0f 	andeq.w	ip, ip, #15
90027d2e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90027d32:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027d36:	fa5f f58c 	uxtb.w	r5, ip
90027d3a:	9512      	str	r5, [sp, #72]	; 0x48
90027d3c:	b308      	cbz	r0, 90027d82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027d3e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027d40:	442b      	add	r3, r5
90027d42:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027d46:	07dd      	lsls	r5, r3, #31
90027d48:	f103 0301 	add.w	r3, r3, #1
90027d4c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027d50:	bf54      	ite	pl
90027d52:	f00c 0c0f 	andpl.w	ip, ip, #15
90027d56:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027d5a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027d5e:	fa5f f58c 	uxtb.w	r5, ip
90027d62:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027d66:	950c      	str	r5, [sp, #48]	; 0x30
90027d68:	07dd      	lsls	r5, r3, #31
90027d6a:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027d6e:	bf54      	ite	pl
90027d70:	f00c 0c0f 	andpl.w	ip, ip, #15
90027d74:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027d78:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027d7c:	fa5f f38c 	uxtb.w	r3, ip
90027d80:	9313      	str	r3, [sp, #76]	; 0x4c
90027d82:	b289      	uxth	r1, r1
90027d84:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027d86:	b280      	uxth	r0, r0
90027d88:	fb01 f300 	mul.w	r3, r1, r0
90027d8c:	0109      	lsls	r1, r1, #4
90027d8e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90027d92:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
90027d96:	1ac9      	subs	r1, r1, r3
90027d98:	b280      	uxth	r0, r0
90027d9a:	b289      	uxth	r1, r1
90027d9c:	ebac 0c00 	sub.w	ip, ip, r0
90027da0:	4369      	muls	r1, r5
90027da2:	fa1f fc8c 	uxth.w	ip, ip
90027da6:	fb02 120c 	mla	r2, r2, ip, r1
90027daa:	990c      	ldr	r1, [sp, #48]	; 0x30
90027dac:	fb00 2001 	mla	r0, r0, r1, r2
90027db0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90027db2:	fb03 0302 	mla	r3, r3, r2, r0
90027db6:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027dba:	b1d3      	cbz	r3, 90027df2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90027dbc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90027dbe:	4353      	muls	r3, r2
90027dc0:	1c5a      	adds	r2, r3, #1
90027dc2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027dc6:	4a0f      	ldr	r2, [pc, #60]	; (90027e04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90027dc8:	121b      	asrs	r3, r3, #8
90027dca:	6812      	ldr	r2, [r2, #0]
90027dcc:	2bff      	cmp	r3, #255	; 0xff
90027dce:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90027dd2:	d12d      	bne.n	90027e30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90027dd4:	0953      	lsrs	r3, r2, #5
90027dd6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90027dda:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027dde:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90027de2:	f02c 0c07 	bic.w	ip, ip, #7
90027de6:	ea43 0c0c 	orr.w	ip, r3, ip
90027dea:	ea4c 0202 	orr.w	r2, ip, r2
90027dee:	f8a8 2000 	strh.w	r2, [r8]
90027df2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90027df4:	f108 0802 	add.w	r8, r8, #2
90027df8:	f10b 3bff 	add.w	fp, fp, #4294967295
90027dfc:	441c      	add	r4, r3
90027dfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027e00:	441e      	add	r6, r3
90027e02:	e6b9      	b.n	90027b78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90027e04:	24039adc 	.word	0x24039adc
90027e08:	2800      	cmp	r0, #0
90027e0a:	d0ba      	beq.n	90027d82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027e0c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027e0e:	442b      	add	r3, r5
90027e10:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027e14:	07db      	lsls	r3, r3, #31
90027e16:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027e1a:	bf54      	ite	pl
90027e1c:	f00c 0c0f 	andpl.w	ip, ip, #15
90027e20:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027e24:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027e28:	fa5f f38c 	uxtb.w	r3, ip
90027e2c:	930c      	str	r3, [sp, #48]	; 0x30
90027e2e:	e7a8      	b.n	90027d82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027e30:	f8b8 e000 	ldrh.w	lr, [r8]
90027e34:	fa1f fa83 	uxth.w	sl, r3
90027e38:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027e3c:	43db      	mvns	r3, r3
90027e3e:	ea4f 202e 	mov.w	r0, lr, asr #8
90027e42:	fb11 f10a 	smulbb	r1, r1, sl
90027e46:	b2db      	uxtb	r3, r3
90027e48:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90027e4c:	b2d2      	uxtb	r2, r2
90027e4e:	fa5f fc8c 	uxtb.w	ip, ip
90027e52:	fb00 1003 	mla	r0, r0, r3, r1
90027e56:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027e5a:	fb12 f20a 	smulbb	r2, r2, sl
90027e5e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027e62:	b280      	uxth	r0, r0
90027e64:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90027e68:	fb1c fc0a 	smulbb	ip, ip, sl
90027e6c:	fa5f fe8e 	uxtb.w	lr, lr
90027e70:	fb0e 2203 	mla	r2, lr, r3, r2
90027e74:	fb01 cc03 	mla	ip, r1, r3, ip
90027e78:	1c43      	adds	r3, r0, #1
90027e7a:	b292      	uxth	r2, r2
90027e7c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027e80:	1c51      	adds	r1, r2, #1
90027e82:	fa1f fc8c 	uxth.w	ip, ip
90027e86:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90027e8a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90027e8e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90027e92:	4308      	orrs	r0, r1
90027e94:	f10c 0101 	add.w	r1, ip, #1
90027e98:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027e9c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027ea0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90027ea4:	ea40 000c 	orr.w	r0, r0, ip
90027ea8:	f8a8 0000 	strh.w	r0, [r8]
90027eac:	e7a1      	b.n	90027df2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90027eae:	b017      	add	sp, #92	; 0x5c
90027eb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027eb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90027eb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027eb8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90027ebc:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027ec0:	2d00      	cmp	r5, #0
90027ec2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90027ec6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90027eca:	fb05 0e03 	mla	lr, r5, r3, r0
90027ece:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90027ed2:	f2c0 80b0 	blt.w	90028036 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90027ed6:	45a9      	cmp	r9, r5
90027ed8:	f340 80ad 	ble.w	90028036 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90027edc:	2800      	cmp	r0, #0
90027ede:	f2c0 80a8 	blt.w	90028032 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90027ee2:	4580      	cmp	r8, r0
90027ee4:	f340 80a5 	ble.w	90028032 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90027ee8:	ea4f 045e 	mov.w	r4, lr, lsr #1
90027eec:	f01e 0f01 	tst.w	lr, #1
90027ef0:	5d16      	ldrb	r6, [r2, r4]
90027ef2:	bf0c      	ite	eq
90027ef4:	f006 060f 	andeq.w	r6, r6, #15
90027ef8:	1136      	asrne	r6, r6, #4
90027efa:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90027efe:	b2f6      	uxtb	r6, r6
90027f00:	1c44      	adds	r4, r0, #1
90027f02:	f100 809b 	bmi.w	9002803c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90027f06:	45a0      	cmp	r8, r4
90027f08:	f340 8098 	ble.w	9002803c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90027f0c:	2f00      	cmp	r7, #0
90027f0e:	f000 8097 	beq.w	90028040 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90027f12:	f10e 0a01 	add.w	sl, lr, #1
90027f16:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027f1a:	f01a 0f01 	tst.w	sl, #1
90027f1e:	5d14      	ldrb	r4, [r2, r4]
90027f20:	bf0c      	ite	eq
90027f22:	f004 040f 	andeq.w	r4, r4, #15
90027f26:	1124      	asrne	r4, r4, #4
90027f28:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027f2c:	b2e4      	uxtb	r4, r4
90027f2e:	3501      	adds	r5, #1
90027f30:	f100 808a 	bmi.w	90028048 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90027f34:	45a9      	cmp	r9, r5
90027f36:	f340 8087 	ble.w	90028048 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90027f3a:	f1bc 0f00 	cmp.w	ip, #0
90027f3e:	f000 8086 	beq.w	9002804e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90027f42:	2800      	cmp	r0, #0
90027f44:	db7e      	blt.n	90028044 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90027f46:	4580      	cmp	r8, r0
90027f48:	dd7c      	ble.n	90028044 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90027f4a:	eb03 090e 	add.w	r9, r3, lr
90027f4e:	ea4f 0559 	mov.w	r5, r9, lsr #1
90027f52:	f019 0f01 	tst.w	r9, #1
90027f56:	5d55      	ldrb	r5, [r2, r5]
90027f58:	bf0c      	ite	eq
90027f5a:	f005 050f 	andeq.w	r5, r5, #15
90027f5e:	112d      	asrne	r5, r5, #4
90027f60:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90027f64:	b2ed      	uxtb	r5, r5
90027f66:	3001      	adds	r0, #1
90027f68:	d474      	bmi.n	90028054 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027f6a:	4580      	cmp	r8, r0
90027f6c:	dd72      	ble.n	90028054 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027f6e:	2f00      	cmp	r7, #0
90027f70:	d072      	beq.n	90028058 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90027f72:	3301      	adds	r3, #1
90027f74:	449e      	add	lr, r3
90027f76:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027f7a:	f01e 0f01 	tst.w	lr, #1
90027f7e:	5cd0      	ldrb	r0, [r2, r3]
90027f80:	bf0c      	ite	eq
90027f82:	f000 000f 	andeq.w	r0, r0, #15
90027f86:	1100      	asrne	r0, r0, #4
90027f88:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027f8c:	b2c3      	uxtb	r3, r0
90027f8e:	b2ba      	uxth	r2, r7
90027f90:	fa1f fc8c 	uxth.w	ip, ip
90027f94:	fb02 f00c 	mul.w	r0, r2, ip
90027f98:	0112      	lsls	r2, r2, #4
90027f9a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90027f9e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90027fa2:	1a12      	subs	r2, r2, r0
90027fa4:	fa1f fc8c 	uxth.w	ip, ip
90027fa8:	b292      	uxth	r2, r2
90027faa:	eba7 070c 	sub.w	r7, r7, ip
90027fae:	4362      	muls	r2, r4
90027fb0:	b2bf      	uxth	r7, r7
90027fb2:	fb06 2207 	mla	r2, r6, r7, r2
90027fb6:	fb0c 2505 	mla	r5, ip, r5, r2
90027fba:	fb00 5303 	mla	r3, r0, r3, r5
90027fbe:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027fc2:	b3a3      	cbz	r3, 9002802e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90027fc4:	4a25      	ldr	r2, [pc, #148]	; (9002805c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90027fc6:	880e      	ldrh	r6, [r1, #0]
90027fc8:	6815      	ldr	r5, [r2, #0]
90027fca:	b29a      	uxth	r2, r3
90027fcc:	1234      	asrs	r4, r6, #8
90027fce:	43db      	mvns	r3, r3
90027fd0:	f3c5 4007 	ubfx	r0, r5, #16, #8
90027fd4:	f3c5 2707 	ubfx	r7, r5, #8, #8
90027fd8:	b2db      	uxtb	r3, r3
90027fda:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90027fde:	fb10 f002 	smulbb	r0, r0, r2
90027fe2:	b2ed      	uxtb	r5, r5
90027fe4:	fb17 f702 	smulbb	r7, r7, r2
90027fe8:	fb04 0403 	mla	r4, r4, r3, r0
90027fec:	10f0      	asrs	r0, r6, #3
90027fee:	fb15 f202 	smulbb	r2, r5, r2
90027ff2:	00f6      	lsls	r6, r6, #3
90027ff4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90027ff8:	b2a4      	uxth	r4, r4
90027ffa:	b2f6      	uxtb	r6, r6
90027ffc:	fb00 7003 	mla	r0, r0, r3, r7
90028000:	fb06 2303 	mla	r3, r6, r3, r2
90028004:	b280      	uxth	r0, r0
90028006:	b29a      	uxth	r2, r3
90028008:	1c63      	adds	r3, r4, #1
9002800a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9002800e:	1c53      	adds	r3, r2, #1
90028010:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028014:	1c42      	adds	r2, r0, #1
90028016:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9002801a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002801e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90028022:	0940      	lsrs	r0, r0, #5
90028024:	4323      	orrs	r3, r4
90028026:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002802a:	4303      	orrs	r3, r0
9002802c:	800b      	strh	r3, [r1, #0]
9002802e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90028032:	2600      	movs	r6, #0
90028034:	e764      	b.n	90027f00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90028036:	2400      	movs	r4, #0
90028038:	4626      	mov	r6, r4
9002803a:	e778      	b.n	90027f2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002803c:	2400      	movs	r4, #0
9002803e:	e776      	b.n	90027f2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028040:	463c      	mov	r4, r7
90028042:	e774      	b.n	90027f2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028044:	2500      	movs	r5, #0
90028046:	e78e      	b.n	90027f66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90028048:	2300      	movs	r3, #0
9002804a:	461d      	mov	r5, r3
9002804c:	e79f      	b.n	90027f8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002804e:	4663      	mov	r3, ip
90028050:	4665      	mov	r5, ip
90028052:	e79c      	b.n	90027f8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028054:	2300      	movs	r3, #0
90028056:	e79a      	b.n	90027f8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028058:	463b      	mov	r3, r7
9002805a:	e798      	b.n	90027f8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002805c:	24039adc 	.word	0x24039adc

90028060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028064:	b093      	sub	sp, #76	; 0x4c
90028066:	461d      	mov	r5, r3
90028068:	920c      	str	r2, [sp, #48]	; 0x30
9002806a:	9a21      	ldr	r2, [sp, #132]	; 0x84
9002806c:	9011      	str	r0, [sp, #68]	; 0x44
9002806e:	9107      	str	r1, [sp, #28]
90028070:	6850      	ldr	r0, [r2, #4]
90028072:	6812      	ldr	r2, [r2, #0]
90028074:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90028078:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
9002807c:	fb00 1303 	mla	r3, r0, r3, r1
90028080:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90028084:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028086:	689b      	ldr	r3, [r3, #8]
90028088:	3301      	adds	r3, #1
9002808a:	f023 0301 	bic.w	r3, r3, #1
9002808e:	9306      	str	r3, [sp, #24]
90028090:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028092:	681f      	ldr	r7, [r3, #0]
90028094:	9b07      	ldr	r3, [sp, #28]
90028096:	2b00      	cmp	r3, #0
90028098:	dc03      	bgt.n	900280a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9002809a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002809c:	2b00      	cmp	r3, #0
9002809e:	f340 8267 	ble.w	90028570 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900280a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
900280a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900280a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900280ac:	1e48      	subs	r0, r1, #1
900280ae:	f102 3cff 	add.w	ip, r2, #4294967295
900280b2:	2d00      	cmp	r5, #0
900280b4:	f340 80b7 	ble.w	90028226 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900280b8:	ea5f 4e24 	movs.w	lr, r4, asr #16
900280bc:	ea4f 4326 	mov.w	r3, r6, asr #16
900280c0:	d406      	bmi.n	900280d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900280c2:	4586      	cmp	lr, r0
900280c4:	da04      	bge.n	900280d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900280c6:	2b00      	cmp	r3, #0
900280c8:	db02      	blt.n	900280d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900280ca:	4563      	cmp	r3, ip
900280cc:	f2c0 80ac 	blt.w	90028228 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900280d0:	f11e 0e01 	adds.w	lr, lr, #1
900280d4:	f100 809f 	bmi.w	90028216 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900280d8:	4571      	cmp	r1, lr
900280da:	f2c0 809c 	blt.w	90028216 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900280de:	3301      	adds	r3, #1
900280e0:	f100 8099 	bmi.w	90028216 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900280e4:	429a      	cmp	r2, r3
900280e6:	f2c0 8096 	blt.w	90028216 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900280ea:	46c8      	mov	r8, r9
900280ec:	f9bd a018 	ldrsh.w	sl, [sp, #24]
900280f0:	9509      	str	r5, [sp, #36]	; 0x24
900280f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900280f4:	2b00      	cmp	r3, #0
900280f6:	f340 80b5 	ble.w	90028264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900280fa:	f3c4 3303 	ubfx	r3, r4, #12, #4
900280fe:	1430      	asrs	r0, r6, #16
90028100:	f3c6 3103 	ubfx	r1, r6, #12, #4
90028104:	9308      	str	r3, [sp, #32]
90028106:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028108:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
9002810c:	1423      	asrs	r3, r4, #16
9002810e:	f100 813f 	bmi.w	90028390 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90028112:	f10c 3bff 	add.w	fp, ip, #4294967295
90028116:	455b      	cmp	r3, fp
90028118:	f280 813a 	bge.w	90028390 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002811c:	2800      	cmp	r0, #0
9002811e:	f2c0 8137 	blt.w	90028390 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90028122:	f10e 3bff 	add.w	fp, lr, #4294967295
90028126:	4558      	cmp	r0, fp
90028128:	f280 8132 	bge.w	90028390 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002812c:	9a06      	ldr	r2, [sp, #24]
9002812e:	fb00 3302 	mla	r3, r0, r2, r3
90028132:	0858      	lsrs	r0, r3, #1
90028134:	07da      	lsls	r2, r3, #31
90028136:	9a08      	ldr	r2, [sp, #32]
90028138:	f817 c000 	ldrb.w	ip, [r7, r0]
9002813c:	bf54      	ite	pl
9002813e:	f00c 0c0f 	andpl.w	ip, ip, #15
90028142:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028146:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002814a:	fa5f fc8c 	uxtb.w	ip, ip
9002814e:	2a00      	cmp	r2, #0
90028150:	f000 80cc 	beq.w	900282ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90028154:	1c58      	adds	r0, r3, #1
90028156:	ea4f 0e50 	mov.w	lr, r0, lsr #1
9002815a:	07c0      	lsls	r0, r0, #31
9002815c:	f817 e00e 	ldrb.w	lr, [r7, lr]
90028160:	bf54      	ite	pl
90028162:	f00e 0e0f 	andpl.w	lr, lr, #15
90028166:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
9002816a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
9002816e:	fa5f fe8e 	uxtb.w	lr, lr
90028172:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90028176:	b1b9      	cbz	r1, 900281a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90028178:	4453      	add	r3, sl
9002817a:	0858      	lsrs	r0, r3, #1
9002817c:	07da      	lsls	r2, r3, #31
9002817e:	5c38      	ldrb	r0, [r7, r0]
90028180:	bf54      	ite	pl
90028182:	f000 000f 	andpl.w	r0, r0, #15
90028186:	1100      	asrmi	r0, r0, #4
90028188:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002818c:	b2c0      	uxtb	r0, r0
9002818e:	900a      	str	r0, [sp, #40]	; 0x28
90028190:	1c58      	adds	r0, r3, #1
90028192:	0843      	lsrs	r3, r0, #1
90028194:	07c2      	lsls	r2, r0, #31
90028196:	5cfb      	ldrb	r3, [r7, r3]
90028198:	bf54      	ite	pl
9002819a:	f003 030f 	andpl.w	r3, r3, #15
9002819e:	111b      	asrmi	r3, r3, #4
900281a0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900281a4:	b2db      	uxtb	r3, r3
900281a6:	930e      	str	r3, [sp, #56]	; 0x38
900281a8:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900281ac:	b289      	uxth	r1, r1
900281ae:	fb02 f301 	mul.w	r3, r2, r1
900281b2:	0112      	lsls	r2, r2, #4
900281b4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900281b8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
900281bc:	1ad2      	subs	r2, r2, r3
900281be:	b289      	uxth	r1, r1
900281c0:	b292      	uxth	r2, r2
900281c2:	1a40      	subs	r0, r0, r1
900281c4:	fa1f fe80 	uxth.w	lr, r0
900281c8:	980d      	ldr	r0, [sp, #52]	; 0x34
900281ca:	4342      	muls	r2, r0
900281cc:	fb0c 2c0e 	mla	ip, ip, lr, r2
900281d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900281d2:	fb01 c102 	mla	r1, r1, r2, ip
900281d6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900281d8:	fb03 1302 	mla	r3, r3, r2, r1
900281dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
900281e0:	2bff      	cmp	r3, #255	; 0xff
900281e2:	f040 8094 	bne.w	9002830e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
900281e6:	4bbf      	ldr	r3, [pc, #764]	; (900284e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900281e8:	681a      	ldr	r2, [r3, #0]
900281ea:	4bbf      	ldr	r3, [pc, #764]	; (900284e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900281ec:	0951      	lsrs	r1, r2, #5
900281ee:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900281f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900281f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900281fa:	430b      	orrs	r3, r1
900281fc:	4313      	orrs	r3, r2
900281fe:	f8a8 3000 	strh.w	r3, [r8]
90028202:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90028204:	f108 0802 	add.w	r8, r8, #2
90028208:	441c      	add	r4, r3
9002820a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002820c:	441e      	add	r6, r3
9002820e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028210:	3b01      	subs	r3, #1
90028212:	9309      	str	r3, [sp, #36]	; 0x24
90028214:	e76d      	b.n	900280f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028216:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90028218:	3d01      	subs	r5, #1
9002821a:	f109 0902 	add.w	r9, r9, #2
9002821e:	441c      	add	r4, r3
90028220:	9b20      	ldr	r3, [sp, #128]	; 0x80
90028222:	441e      	add	r6, r3
90028224:	e745      	b.n	900280b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90028226:	d021      	beq.n	9002826c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90028228:	1e6b      	subs	r3, r5, #1
9002822a:	981f      	ldr	r0, [sp, #124]	; 0x7c
9002822c:	fb00 4003 	mla	r0, r0, r3, r4
90028230:	1400      	asrs	r0, r0, #16
90028232:	f53f af5a 	bmi.w	900280ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90028236:	3901      	subs	r1, #1
90028238:	4288      	cmp	r0, r1
9002823a:	f6bf af56 	bge.w	900280ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002823e:	9920      	ldr	r1, [sp, #128]	; 0x80
90028240:	fb01 6303 	mla	r3, r1, r3, r6
90028244:	141b      	asrs	r3, r3, #16
90028246:	f53f af50 	bmi.w	900280ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002824a:	3a01      	subs	r2, #1
9002824c:	4293      	cmp	r3, r2
9002824e:	f6bf af4c 	bge.w	900280ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90028252:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90028256:	46a8      	mov	r8, r5
90028258:	46ce      	mov	lr, r9
9002825a:	9308      	str	r3, [sp, #32]
9002825c:	f1b8 0f00 	cmp.w	r8, #0
90028260:	f300 80b6 	bgt.w	900283d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90028264:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90028268:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002826c:	9b07      	ldr	r3, [sp, #28]
9002826e:	2b00      	cmp	r3, #0
90028270:	f340 817e 	ble.w	90028570 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90028274:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90028278:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002827a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002827e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028282:	eef0 6a62 	vmov.f32	s13, s5
90028286:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002828a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002828e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028292:	ee16 4a90 	vmov	r4, s13
90028296:	eef0 6a43 	vmov.f32	s13, s6
9002829a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002829e:	ee16 6a90 	vmov	r6, s13
900282a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900282a6:	ee61 7a27 	vmul.f32	s15, s2, s15
900282aa:	ee77 2a62 	vsub.f32	s5, s14, s5
900282ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
900282b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900282b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900282ba:	ee12 2a90 	vmov	r2, s5
900282be:	eef0 2a47 	vmov.f32	s5, s14
900282c2:	fb92 f3f3 	sdiv	r3, r2, r3
900282c6:	ee13 2a10 	vmov	r2, s6
900282ca:	931f      	str	r3, [sp, #124]	; 0x7c
900282cc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900282ce:	eeb0 3a67 	vmov.f32	s6, s15
900282d2:	fb92 f3f3 	sdiv	r3, r2, r3
900282d6:	9320      	str	r3, [sp, #128]	; 0x80
900282d8:	9b07      	ldr	r3, [sp, #28]
900282da:	9a0c      	ldr	r2, [sp, #48]	; 0x30
900282dc:	3b01      	subs	r3, #1
900282de:	9307      	str	r3, [sp, #28]
900282e0:	bf08      	it	eq
900282e2:	4615      	moveq	r5, r2
900282e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900282e6:	bf18      	it	ne
900282e8:	461d      	movne	r5, r3
900282ea:	e6d3      	b.n	90028094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900282ec:	2900      	cmp	r1, #0
900282ee:	f43f af5b 	beq.w	900281a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900282f2:	eb0a 0003 	add.w	r0, sl, r3
900282f6:	0843      	lsrs	r3, r0, #1
900282f8:	07c0      	lsls	r0, r0, #31
900282fa:	5cfb      	ldrb	r3, [r7, r3]
900282fc:	bf54      	ite	pl
900282fe:	f003 030f 	andpl.w	r3, r3, #15
90028302:	111b      	asrmi	r3, r3, #4
90028304:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028308:	b2db      	uxtb	r3, r3
9002830a:	930a      	str	r3, [sp, #40]	; 0x28
9002830c:	e74c      	b.n	900281a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002830e:	2b00      	cmp	r3, #0
90028310:	f43f af77 	beq.w	90028202 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028314:	4a73      	ldr	r2, [pc, #460]	; (900284e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028316:	fa1f fe83 	uxth.w	lr, r3
9002831a:	f8b8 c000 	ldrh.w	ip, [r8]
9002831e:	43db      	mvns	r3, r3
90028320:	6810      	ldr	r0, [r2, #0]
90028322:	ea4f 212c 	mov.w	r1, ip, asr #8
90028326:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002832a:	b2db      	uxtb	r3, r3
9002832c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90028330:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028334:	fb12 f20e 	smulbb	r2, r2, lr
90028338:	b2c0      	uxtb	r0, r0
9002833a:	fb1b fb0e 	smulbb	fp, fp, lr
9002833e:	fb01 2103 	mla	r1, r1, r3, r2
90028342:	ea4f 02ec 	mov.w	r2, ip, asr #3
90028346:	fb10 fe0e 	smulbb	lr, r0, lr
9002834a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002834e:	b289      	uxth	r1, r1
90028350:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90028354:	fa5f fc8c 	uxtb.w	ip, ip
90028358:	fb02 b203 	mla	r2, r2, r3, fp
9002835c:	1c48      	adds	r0, r1, #1
9002835e:	fb0c e303 	mla	r3, ip, r3, lr
90028362:	b292      	uxth	r2, r2
90028364:	b29b      	uxth	r3, r3
90028366:	eb00 2111 	add.w	r1, r0, r1, lsr #8
9002836a:	f102 0b01 	add.w	fp, r2, #1
9002836e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
90028372:	1c59      	adds	r1, r3, #1
90028374:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90028378:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002837c:	0952      	lsrs	r2, r2, #5
9002837e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90028382:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90028386:	4301      	orrs	r1, r0
90028388:	4311      	orrs	r1, r2
9002838a:	f8a8 1000 	strh.w	r1, [r8]
9002838e:	e738      	b.n	90028202 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028390:	f113 0b01 	adds.w	fp, r3, #1
90028394:	f53f af35 	bmi.w	90028202 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028398:	45dc      	cmp	ip, fp
9002839a:	f6ff af32 	blt.w	90028202 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002839e:	f110 0b01 	adds.w	fp, r0, #1
900283a2:	f53f af2e 	bmi.w	90028202 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900283a6:	45de      	cmp	lr, fp
900283a8:	f6ff af2b 	blt.w	90028202 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900283ac:	9302      	str	r3, [sp, #8]
900283ae:	fa0f f38e 	sxth.w	r3, lr
900283b2:	9a08      	ldr	r2, [sp, #32]
900283b4:	9301      	str	r3, [sp, #4]
900283b6:	fa0f f38c 	sxth.w	r3, ip
900283ba:	9105      	str	r1, [sp, #20]
900283bc:	4641      	mov	r1, r8
900283be:	9300      	str	r3, [sp, #0]
900283c0:	4653      	mov	r3, sl
900283c2:	e9cd 0203 	strd	r0, r2, [sp, #12]
900283c6:	463a      	mov	r2, r7
900283c8:	9811      	ldr	r0, [sp, #68]	; 0x44
900283ca:	f7ff fd73 	bl	90027eb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
900283ce:	e718      	b.n	90028202 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900283d0:	1422      	asrs	r2, r4, #16
900283d2:	9906      	ldr	r1, [sp, #24]
900283d4:	1433      	asrs	r3, r6, #16
900283d6:	f3c4 3003 	ubfx	r0, r4, #12, #4
900283da:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900283de:	fb01 2303 	mla	r3, r1, r3, r2
900283e2:	085a      	lsrs	r2, r3, #1
900283e4:	07d9      	lsls	r1, r3, #31
900283e6:	5cba      	ldrb	r2, [r7, r2]
900283e8:	bf54      	ite	pl
900283ea:	f002 020f 	andpl.w	r2, r2, #15
900283ee:	1112      	asrmi	r2, r2, #4
900283f0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900283f4:	b2d2      	uxtb	r2, r2
900283f6:	2800      	cmp	r0, #0
900283f8:	d063      	beq.n	900284c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
900283fa:	f103 0a01 	add.w	sl, r3, #1
900283fe:	ea4f 015a 	mov.w	r1, sl, lsr #1
90028402:	f01a 0f01 	tst.w	sl, #1
90028406:	5c79      	ldrb	r1, [r7, r1]
90028408:	bf0c      	ite	eq
9002840a:	f001 010f 	andeq.w	r1, r1, #15
9002840e:	1109      	asrne	r1, r1, #4
90028410:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028414:	b2c9      	uxtb	r1, r1
90028416:	910f      	str	r1, [sp, #60]	; 0x3c
90028418:	f1bc 0f00 	cmp.w	ip, #0
9002841c:	d01a      	beq.n	90028454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002841e:	9908      	ldr	r1, [sp, #32]
90028420:	440b      	add	r3, r1
90028422:	0859      	lsrs	r1, r3, #1
90028424:	f013 0f01 	tst.w	r3, #1
90028428:	f103 0301 	add.w	r3, r3, #1
9002842c:	5c79      	ldrb	r1, [r7, r1]
9002842e:	bf0c      	ite	eq
90028430:	f001 010f 	andeq.w	r1, r1, #15
90028434:	1109      	asrne	r1, r1, #4
90028436:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002843a:	b2c9      	uxtb	r1, r1
9002843c:	910b      	str	r1, [sp, #44]	; 0x2c
9002843e:	0859      	lsrs	r1, r3, #1
90028440:	07db      	lsls	r3, r3, #31
90028442:	5c79      	ldrb	r1, [r7, r1]
90028444:	bf54      	ite	pl
90028446:	f001 010f 	andpl.w	r1, r1, #15
9002844a:	1109      	asrmi	r1, r1, #4
9002844c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028450:	b2c9      	uxtb	r1, r1
90028452:	9110      	str	r1, [sp, #64]	; 0x40
90028454:	b280      	uxth	r0, r0
90028456:	fa1f fc8c 	uxth.w	ip, ip
9002845a:	fb00 f30c 	mul.w	r3, r0, ip
9002845e:	0100      	lsls	r0, r0, #4
90028460:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90028464:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
90028468:	1ac0      	subs	r0, r0, r3
9002846a:	fa1f fc8c 	uxth.w	ip, ip
9002846e:	b280      	uxth	r0, r0
90028470:	eba1 010c 	sub.w	r1, r1, ip
90028474:	fa1f fa81 	uxth.w	sl, r1
90028478:	990f      	ldr	r1, [sp, #60]	; 0x3c
9002847a:	4348      	muls	r0, r1
9002847c:	990b      	ldr	r1, [sp, #44]	; 0x2c
9002847e:	fb02 020a 	mla	r2, r2, sl, r0
90028482:	fb0c 2c01 	mla	ip, ip, r1, r2
90028486:	9a10      	ldr	r2, [sp, #64]	; 0x40
90028488:	fb03 c302 	mla	r3, r3, r2, ip
9002848c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028490:	2bff      	cmp	r3, #255	; 0xff
90028492:	d12b      	bne.n	900284ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90028494:	4b13      	ldr	r3, [pc, #76]	; (900284e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028496:	681a      	ldr	r2, [r3, #0]
90028498:	4b13      	ldr	r3, [pc, #76]	; (900284e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002849a:	0951      	lsrs	r1, r2, #5
9002849c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900284a0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900284a4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900284a8:	430b      	orrs	r3, r1
900284aa:	4313      	orrs	r3, r2
900284ac:	f8ae 3000 	strh.w	r3, [lr]
900284b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900284b2:	f10e 0e02 	add.w	lr, lr, #2
900284b6:	f108 38ff 	add.w	r8, r8, #4294967295
900284ba:	441c      	add	r4, r3
900284bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
900284be:	441e      	add	r6, r3
900284c0:	e6cc      	b.n	9002825c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
900284c2:	f1bc 0f00 	cmp.w	ip, #0
900284c6:	d0c5      	beq.n	90028454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900284c8:	9908      	ldr	r1, [sp, #32]
900284ca:	440b      	add	r3, r1
900284cc:	0859      	lsrs	r1, r3, #1
900284ce:	07db      	lsls	r3, r3, #31
900284d0:	5c79      	ldrb	r1, [r7, r1]
900284d2:	bf54      	ite	pl
900284d4:	f001 010f 	andpl.w	r1, r1, #15
900284d8:	1109      	asrmi	r1, r1, #4
900284da:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900284de:	b2c9      	uxtb	r1, r1
900284e0:	910b      	str	r1, [sp, #44]	; 0x2c
900284e2:	e7b7      	b.n	90028454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900284e4:	24039adc 	.word	0x24039adc
900284e8:	fffff800 	.word	0xfffff800
900284ec:	2b00      	cmp	r3, #0
900284ee:	d0df      	beq.n	900284b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900284f0:	4a21      	ldr	r2, [pc, #132]	; (90028578 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
900284f2:	fa1f fa83 	uxth.w	sl, r3
900284f6:	f8be c000 	ldrh.w	ip, [lr]
900284fa:	43db      	mvns	r3, r3
900284fc:	6810      	ldr	r0, [r2, #0]
900284fe:	ea4f 212c 	mov.w	r1, ip, asr #8
90028502:	f3c0 4207 	ubfx	r2, r0, #16, #8
90028506:	b2db      	uxtb	r3, r3
90028508:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002850c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028510:	fb12 f20a 	smulbb	r2, r2, sl
90028514:	b2c0      	uxtb	r0, r0
90028516:	fb1b fb0a 	smulbb	fp, fp, sl
9002851a:	fb01 2103 	mla	r1, r1, r3, r2
9002851e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90028522:	fb10 f00a 	smulbb	r0, r0, sl
90028526:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002852a:	b289      	uxth	r1, r1
9002852c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90028530:	fa5f fc8c 	uxtb.w	ip, ip
90028534:	fb02 b203 	mla	r2, r2, r3, fp
90028538:	fb0c 0003 	mla	r0, ip, r3, r0
9002853c:	1c4b      	adds	r3, r1, #1
9002853e:	b292      	uxth	r2, r2
90028540:	b280      	uxth	r0, r0
90028542:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90028546:	f100 0b01 	add.w	fp, r0, #1
9002854a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9002854e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90028552:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90028556:	ea4b 0101 	orr.w	r1, fp, r1
9002855a:	f102 0b01 	add.w	fp, r2, #1
9002855e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90028562:	0952      	lsrs	r2, r2, #5
90028564:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90028568:	4311      	orrs	r1, r2
9002856a:	f8ae 1000 	strh.w	r1, [lr]
9002856e:	e79f      	b.n	900284b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90028570:	b013      	add	sp, #76	; 0x4c
90028572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028576:	bf00      	nop
90028578:	24039adc 	.word	0x24039adc

9002857c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
9002857c:	b570      	push	{r4, r5, r6, lr}
9002857e:	1208      	asrs	r0, r1, #8
90028580:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90028584:	b29e      	uxth	r6, r3
90028586:	1213      	asrs	r3, r2, #8
90028588:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002858c:	10cc      	asrs	r4, r1, #3
9002858e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90028592:	00c9      	lsls	r1, r1, #3
90028594:	fb10 f006 	smulbb	r0, r0, r6
90028598:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002859c:	fb13 f305 	smulbb	r3, r3, r5
900285a0:	fb14 f406 	smulbb	r4, r4, r6
900285a4:	4418      	add	r0, r3
900285a6:	10d3      	asrs	r3, r2, #3
900285a8:	00d2      	lsls	r2, r2, #3
900285aa:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900285ae:	b280      	uxth	r0, r0
900285b0:	b2d2      	uxtb	r2, r2
900285b2:	fb13 f305 	smulbb	r3, r3, r5
900285b6:	fb12 f205 	smulbb	r2, r2, r5
900285ba:	441c      	add	r4, r3
900285bc:	b2cb      	uxtb	r3, r1
900285be:	fb13 f306 	smulbb	r3, r3, r6
900285c2:	b2a4      	uxth	r4, r4
900285c4:	4413      	add	r3, r2
900285c6:	1c42      	adds	r2, r0, #1
900285c8:	b29b      	uxth	r3, r3
900285ca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900285ce:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
900285d2:	1c58      	adds	r0, r3, #1
900285d4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900285d8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900285dc:	4310      	orrs	r0, r2
900285de:	1c62      	adds	r2, r4, #1
900285e0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900285e4:	0964      	lsrs	r4, r4, #5
900285e6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900285ea:	4320      	orrs	r0, r4
900285ec:	bd70      	pop	{r4, r5, r6, pc}
	...

900285f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
900285f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900285f4:	b08f      	sub	sp, #60	; 0x3c
900285f6:	461c      	mov	r4, r3
900285f8:	460d      	mov	r5, r1
900285fa:	4616      	mov	r6, r2
900285fc:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90028600:	9004      	str	r0, [sp, #16]
90028602:	9b18      	ldr	r3, [sp, #96]	; 0x60
90028604:	2f00      	cmp	r7, #0
90028606:	f000 80f6 	beq.w	900287f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9002860a:	6820      	ldr	r0, [r4, #0]
9002860c:	aa0a      	add	r2, sp, #40	; 0x28
9002860e:	6861      	ldr	r1, [r4, #4]
90028610:	f04f 0802 	mov.w	r8, #2
90028614:	3604      	adds	r6, #4
90028616:	c203      	stmia	r2!, {r0, r1}
90028618:	6818      	ldr	r0, [r3, #0]
9002861a:	aa0c      	add	r2, sp, #48	; 0x30
9002861c:	6859      	ldr	r1, [r3, #4]
9002861e:	c203      	stmia	r2!, {r0, r1}
90028620:	a80a      	add	r0, sp, #40	; 0x28
90028622:	f7ef fceb 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028626:	4621      	mov	r1, r4
90028628:	a80c      	add	r0, sp, #48	; 0x30
9002862a:	f7ef fd2b 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002862e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90028632:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90028636:	f002 0301 	and.w	r3, r2, #1
9002863a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9002863e:	9306      	str	r3, [sp, #24]
90028640:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028644:	f003 0101 	and.w	r1, r3, #1
90028648:	9105      	str	r1, [sp, #20]
9002864a:	9805      	ldr	r0, [sp, #20]
9002864c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90028650:	4403      	add	r3, r0
90028652:	fb01 2303 	mla	r3, r1, r3, r2
90028656:	fb93 f3f8 	sdiv	r3, r3, r8
9002865a:	441d      	add	r5, r3
9002865c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90028660:	441a      	add	r2, r3
90028662:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90028666:	4419      	add	r1, r3
90028668:	4b64      	ldr	r3, [pc, #400]	; (900287fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002866a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9002866e:	6818      	ldr	r0, [r3, #0]
90028670:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90028674:	6803      	ldr	r3, [r0, #0]
90028676:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90028678:	4798      	blx	r3
9002867a:	4a61      	ldr	r2, [pc, #388]	; (90028800 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
9002867c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90028680:	2fff      	cmp	r7, #255	; 0xff
90028682:	8813      	ldrh	r3, [r2, #0]
90028684:	4611      	mov	r1, r2
90028686:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
9002868a:	fb03 fb0b 	mul.w	fp, r3, fp
9002868e:	fb03 a404 	mla	r4, r3, r4, sl
90028692:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028696:	d06b      	beq.n	90028770 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90028698:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
9002869c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
900286a0:	9303      	str	r3, [sp, #12]
900286a2:	eb04 034b 	add.w	r3, r4, fp, lsl #1
900286a6:	e9cd 3207 	strd	r3, r2, [sp, #28]
900286aa:	9b07      	ldr	r3, [sp, #28]
900286ac:	42a3      	cmp	r3, r4
900286ae:	f240 809d 	bls.w	900287ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
900286b2:	9b06      	ldr	r3, [sp, #24]
900286b4:	2b00      	cmp	r3, #0
900286b6:	d039      	beq.n	9002872c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
900286b8:	782b      	ldrb	r3, [r5, #0]
900286ba:	f105 0801 	add.w	r8, r5, #1
900286be:	f109 3bff 	add.w	fp, r9, #4294967295
900286c2:	8822      	ldrh	r2, [r4, #0]
900286c4:	f003 030f 	and.w	r3, r3, #15
900286c8:	9804      	ldr	r0, [sp, #16]
900286ca:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900286ce:	9b03      	ldr	r3, [sp, #12]
900286d0:	9300      	str	r3, [sp, #0]
900286d2:	463b      	mov	r3, r7
900286d4:	f7ff ff52 	bl	9002857c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900286d8:	f824 0b02 	strh.w	r0, [r4], #2
900286dc:	f1bb 0f01 	cmp.w	fp, #1
900286e0:	46a2      	mov	sl, r4
900286e2:	f104 0404 	add.w	r4, r4, #4
900286e6:	dd24      	ble.n	90028732 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
900286e8:	f898 3000 	ldrb.w	r3, [r8]
900286ec:	f1ab 0b02 	sub.w	fp, fp, #2
900286f0:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900286f4:	091b      	lsrs	r3, r3, #4
900286f6:	9804      	ldr	r0, [sp, #16]
900286f8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900286fc:	9b03      	ldr	r3, [sp, #12]
900286fe:	9300      	str	r3, [sp, #0]
90028700:	463b      	mov	r3, r7
90028702:	f7ff ff3b 	bl	9002857c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028706:	f824 0c04 	strh.w	r0, [r4, #-4]
9002870a:	f818 3b01 	ldrb.w	r3, [r8], #1
9002870e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028712:	f003 030f 	and.w	r3, r3, #15
90028716:	9804      	ldr	r0, [sp, #16]
90028718:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002871c:	9b03      	ldr	r3, [sp, #12]
9002871e:	9300      	str	r3, [sp, #0]
90028720:	463b      	mov	r3, r7
90028722:	f7ff ff2b 	bl	9002857c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028726:	f824 0c02 	strh.w	r0, [r4, #-2]
9002872a:	e7d7      	b.n	900286dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002872c:	46a8      	mov	r8, r5
9002872e:	46cb      	mov	fp, r9
90028730:	e7d4      	b.n	900286dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90028732:	d10e      	bne.n	90028752 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90028734:	f898 3000 	ldrb.w	r3, [r8]
90028738:	f8ba 2000 	ldrh.w	r2, [sl]
9002873c:	091b      	lsrs	r3, r3, #4
9002873e:	9804      	ldr	r0, [sp, #16]
90028740:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028744:	9b03      	ldr	r3, [sp, #12]
90028746:	9300      	str	r3, [sp, #0]
90028748:	463b      	mov	r3, r7
9002874a:	f7ff ff17 	bl	9002857c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002874e:	f82a 0b02 	strh.w	r0, [sl], #2
90028752:	9b08      	ldr	r3, [sp, #32]
90028754:	9a05      	ldr	r2, [sp, #20]
90028756:	881c      	ldrh	r4, [r3, #0]
90028758:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
9002875c:	eba4 0409 	sub.w	r4, r4, r9
90028760:	4413      	add	r3, r2
90028762:	9a09      	ldr	r2, [sp, #36]	; 0x24
90028764:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90028768:	fb93 f3f2 	sdiv	r3, r3, r2
9002876c:	441d      	add	r5, r3
9002876e:	e79c      	b.n	900286aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90028770:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90028774:	45a3      	cmp	fp, r4
90028776:	d939      	bls.n	900287ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028778:	9b06      	ldr	r3, [sp, #24]
9002877a:	b1fb      	cbz	r3, 900287bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
9002877c:	782b      	ldrb	r3, [r5, #0]
9002877e:	1c6a      	adds	r2, r5, #1
90028780:	f109 30ff 	add.w	r0, r9, #4294967295
90028784:	3402      	adds	r4, #2
90028786:	f003 030f 	and.w	r3, r3, #15
9002878a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002878e:	f824 3c02 	strh.w	r3, [r4, #-2]
90028792:	2801      	cmp	r0, #1
90028794:	4623      	mov	r3, r4
90028796:	f104 0404 	add.w	r4, r4, #4
9002879a:	dd12      	ble.n	900287c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
9002879c:	7813      	ldrb	r3, [r2, #0]
9002879e:	3802      	subs	r0, #2
900287a0:	091b      	lsrs	r3, r3, #4
900287a2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900287a6:	f824 3c04 	strh.w	r3, [r4, #-4]
900287aa:	f812 3b01 	ldrb.w	r3, [r2], #1
900287ae:	f003 030f 	and.w	r3, r3, #15
900287b2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900287b6:	f824 3c02 	strh.w	r3, [r4, #-2]
900287ba:	e7ea      	b.n	90028792 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900287bc:	462a      	mov	r2, r5
900287be:	4648      	mov	r0, r9
900287c0:	e7e7      	b.n	90028792 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900287c2:	d106      	bne.n	900287d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
900287c4:	7812      	ldrb	r2, [r2, #0]
900287c6:	3302      	adds	r3, #2
900287c8:	0912      	lsrs	r2, r2, #4
900287ca:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
900287ce:	f823 2c02 	strh.w	r2, [r3, #-2]
900287d2:	880c      	ldrh	r4, [r1, #0]
900287d4:	9a05      	ldr	r2, [sp, #20]
900287d6:	eba4 0409 	sub.w	r4, r4, r9
900287da:	eb03 0444 	add.w	r4, r3, r4, lsl #1
900287de:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900287e2:	4413      	add	r3, r2
900287e4:	fb93 f3f8 	sdiv	r3, r3, r8
900287e8:	441d      	add	r5, r3
900287ea:	e7c3      	b.n	90028774 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
900287ec:	4b03      	ldr	r3, [pc, #12]	; (900287fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900287ee:	6818      	ldr	r0, [r3, #0]
900287f0:	6803      	ldr	r3, [r0, #0]
900287f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900287f4:	4798      	blx	r3
900287f6:	b00f      	add	sp, #60	; 0x3c
900287f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900287fc:	24039acc 	.word	0x24039acc
90028800:	24039ac6 	.word	0x24039ac6

90028804 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90028804:	b5f0      	push	{r4, r5, r6, r7, lr}
90028806:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002880a:	0a0f      	lsrs	r7, r1, #8
9002880c:	2dff      	cmp	r5, #255	; 0xff
9002880e:	d10c      	bne.n	9002882a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028810:	2bff      	cmp	r3, #255	; 0xff
90028812:	d10a      	bne.n	9002882a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028814:	0948      	lsrs	r0, r1, #5
90028816:	4b25      	ldr	r3, [pc, #148]	; (900288ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90028818:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002881c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90028820:	403b      	ands	r3, r7
90028822:	4318      	orrs	r0, r3
90028824:	4308      	orrs	r0, r1
90028826:	b280      	uxth	r0, r0
90028828:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002882a:	fb15 f503 	smulbb	r5, r5, r3
9002882e:	1214      	asrs	r4, r2, #8
90028830:	10d6      	asrs	r6, r2, #3
90028832:	b2ab      	uxth	r3, r5
90028834:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90028838:	00d0      	lsls	r0, r2, #3
9002883a:	f3c1 4207 	ubfx	r2, r1, #16, #8
9002883e:	1c5d      	adds	r5, r3, #1
90028840:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90028844:	b2c0      	uxtb	r0, r0
90028846:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9002884a:	eb05 2513 	add.w	r5, r5, r3, lsr #8
9002884e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90028852:	f3c5 2507 	ubfx	r5, r5, #8, #8
90028856:	fa1f fc85 	uxth.w	ip, r5
9002885a:	43ed      	mvns	r5, r5
9002885c:	fb12 f20c 	smulbb	r2, r2, ip
90028860:	b2eb      	uxtb	r3, r5
90028862:	b2fd      	uxtb	r5, r7
90028864:	fb04 2403 	mla	r4, r4, r3, r2
90028868:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
9002886c:	fb15 f50c 	smulbb	r5, r5, ip
90028870:	b2c8      	uxtb	r0, r1
90028872:	b2a4      	uxth	r4, r4
90028874:	fb10 f00c 	smulbb	r0, r0, ip
90028878:	fb06 5503 	mla	r5, r6, r3, r5
9002887c:	fb02 0003 	mla	r0, r2, r3, r0
90028880:	b2ad      	uxth	r5, r5
90028882:	b283      	uxth	r3, r0
90028884:	1c60      	adds	r0, r4, #1
90028886:	eb00 2414 	add.w	r4, r0, r4, lsr #8
9002888a:	1c58      	adds	r0, r3, #1
9002888c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028890:	1c6b      	adds	r3, r5, #1
90028892:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90028896:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002889a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002889e:	096d      	lsrs	r5, r5, #5
900288a0:	4320      	orrs	r0, r4
900288a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900288a6:	4328      	orrs	r0, r5
900288a8:	e7be      	b.n	90028828 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
900288aa:	bf00      	nop
900288ac:	00fff800 	.word	0x00fff800

900288b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
900288b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900288b4:	461c      	mov	r4, r3
900288b6:	b08d      	sub	sp, #52	; 0x34
900288b8:	460d      	mov	r5, r1
900288ba:	4616      	mov	r6, r2
900288bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
900288be:	4680      	mov	r8, r0
900288c0:	6861      	ldr	r1, [r4, #4]
900288c2:	aa08      	add	r2, sp, #32
900288c4:	6820      	ldr	r0, [r4, #0]
900288c6:	f04f 0a02 	mov.w	sl, #2
900288ca:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
900288ce:	3604      	adds	r6, #4
900288d0:	c203      	stmia	r2!, {r0, r1}
900288d2:	6818      	ldr	r0, [r3, #0]
900288d4:	aa0a      	add	r2, sp, #40	; 0x28
900288d6:	6859      	ldr	r1, [r3, #4]
900288d8:	c203      	stmia	r2!, {r0, r1}
900288da:	a808      	add	r0, sp, #32
900288dc:	f7ef fb8e 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900288e0:	4621      	mov	r1, r4
900288e2:	a80a      	add	r0, sp, #40	; 0x28
900288e4:	f7ef fbce 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900288e8:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
900288ec:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
900288f0:	f002 0301 	and.w	r3, r2, #1
900288f4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
900288f8:	9303      	str	r3, [sp, #12]
900288fa:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
900288fe:	f003 0101 	and.w	r1, r3, #1
90028902:	9102      	str	r1, [sp, #8]
90028904:	9802      	ldr	r0, [sp, #8]
90028906:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
9002890a:	4403      	add	r3, r0
9002890c:	fb01 2303 	mla	r3, r1, r3, r2
90028910:	fb93 f3fa 	sdiv	r3, r3, sl
90028914:	441d      	add	r5, r3
90028916:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9002891a:	441a      	add	r2, r3
9002891c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
90028920:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90028924:	4419      	add	r1, r3
90028926:	4a3e      	ldr	r2, [pc, #248]	; (90028a20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90028928:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
9002892c:	6810      	ldr	r0, [r2, #0]
9002892e:	9205      	str	r2, [sp, #20]
90028930:	6803      	ldr	r3, [r0, #0]
90028932:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90028934:	4798      	blx	r3
90028936:	4b3b      	ldr	r3, [pc, #236]	; (90028a24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90028938:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
9002893c:	8819      	ldrh	r1, [r3, #0]
9002893e:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
90028942:	434f      	muls	r7, r1
90028944:	fb01 c404 	mla	r4, r1, r4, ip
90028948:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002894c:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90028950:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90028954:	9204      	str	r2, [sp, #16]
90028956:	9b04      	ldr	r3, [sp, #16]
90028958:	429c      	cmp	r4, r3
9002895a:	d258      	bcs.n	90028a0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
9002895c:	9b03      	ldr	r3, [sp, #12]
9002895e:	2b00      	cmp	r3, #0
90028960:	d034      	beq.n	900289cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90028962:	782b      	ldrb	r3, [r5, #0]
90028964:	1c6f      	adds	r7, r5, #1
90028966:	f003 030f 	and.w	r3, r3, #15
9002896a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002896e:	0e0b      	lsrs	r3, r1, #24
90028970:	d006      	beq.n	90028980 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90028972:	8822      	ldrh	r2, [r4, #0]
90028974:	4640      	mov	r0, r8
90028976:	9300      	str	r3, [sp, #0]
90028978:	464b      	mov	r3, r9
9002897a:	f7ff ff43 	bl	90028804 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002897e:	8020      	strh	r0, [r4, #0]
90028980:	3402      	adds	r4, #2
90028982:	f10b 3aff 	add.w	sl, fp, #4294967295
90028986:	f1ba 0f01 	cmp.w	sl, #1
9002898a:	dd22      	ble.n	900289d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9002898c:	783b      	ldrb	r3, [r7, #0]
9002898e:	091b      	lsrs	r3, r3, #4
90028990:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028994:	0e0b      	lsrs	r3, r1, #24
90028996:	d006      	beq.n	900289a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90028998:	8822      	ldrh	r2, [r4, #0]
9002899a:	4640      	mov	r0, r8
9002899c:	9300      	str	r3, [sp, #0]
9002899e:	464b      	mov	r3, r9
900289a0:	f7ff ff30 	bl	90028804 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900289a4:	8020      	strh	r0, [r4, #0]
900289a6:	f817 3b01 	ldrb.w	r3, [r7], #1
900289aa:	f003 030f 	and.w	r3, r3, #15
900289ae:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900289b2:	0e0b      	lsrs	r3, r1, #24
900289b4:	d006      	beq.n	900289c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
900289b6:	8862      	ldrh	r2, [r4, #2]
900289b8:	4640      	mov	r0, r8
900289ba:	9300      	str	r3, [sp, #0]
900289bc:	464b      	mov	r3, r9
900289be:	f7ff ff21 	bl	90028804 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900289c2:	8060      	strh	r0, [r4, #2]
900289c4:	3404      	adds	r4, #4
900289c6:	f1aa 0a02 	sub.w	sl, sl, #2
900289ca:	e7dc      	b.n	90028986 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900289cc:	462f      	mov	r7, r5
900289ce:	46da      	mov	sl, fp
900289d0:	e7d9      	b.n	90028986 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900289d2:	d10d      	bne.n	900289f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
900289d4:	783b      	ldrb	r3, [r7, #0]
900289d6:	091b      	lsrs	r3, r3, #4
900289d8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900289dc:	0e0b      	lsrs	r3, r1, #24
900289de:	d006      	beq.n	900289ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
900289e0:	8822      	ldrh	r2, [r4, #0]
900289e2:	4640      	mov	r0, r8
900289e4:	9300      	str	r3, [sp, #0]
900289e6:	464b      	mov	r3, r9
900289e8:	f7ff ff0c 	bl	90028804 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900289ec:	8020      	strh	r0, [r4, #0]
900289ee:	3402      	adds	r4, #2
900289f0:	9b06      	ldr	r3, [sp, #24]
900289f2:	9a02      	ldr	r2, [sp, #8]
900289f4:	881b      	ldrh	r3, [r3, #0]
900289f6:	eba3 030b 	sub.w	r3, r3, fp
900289fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900289fe:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90028a02:	4413      	add	r3, r2
90028a04:	9a07      	ldr	r2, [sp, #28]
90028a06:	fb93 f3f2 	sdiv	r3, r3, r2
90028a0a:	441d      	add	r5, r3
90028a0c:	e7a3      	b.n	90028956 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90028a0e:	9b05      	ldr	r3, [sp, #20]
90028a10:	6818      	ldr	r0, [r3, #0]
90028a12:	6803      	ldr	r3, [r0, #0]
90028a14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90028a16:	4798      	blx	r3
90028a18:	b00d      	add	sp, #52	; 0x34
90028a1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028a1e:	bf00      	nop
90028a20:	24039acc 	.word	0x24039acc
90028a24:	24039ac6 	.word	0x24039ac6

90028a28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90028a28:	b570      	push	{r4, r5, r6, lr}
90028a2a:	1214      	asrs	r4, r2, #8
90028a2c:	788d      	ldrb	r5, [r1, #2]
90028a2e:	f89d 6010 	ldrb.w	r6, [sp, #16]
90028a32:	10d0      	asrs	r0, r2, #3
90028a34:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90028a38:	00d2      	lsls	r2, r2, #3
90028a3a:	fb15 f503 	smulbb	r5, r5, r3
90028a3e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90028a42:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90028a46:	b2d2      	uxtb	r2, r2
90028a48:	fb04 5506 	mla	r5, r4, r6, r5
90028a4c:	784c      	ldrb	r4, [r1, #1]
90028a4e:	7809      	ldrb	r1, [r1, #0]
90028a50:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90028a54:	fb14 f403 	smulbb	r4, r4, r3
90028a58:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90028a5c:	fb11 f303 	smulbb	r3, r1, r3
90028a60:	b2ad      	uxth	r5, r5
90028a62:	fb00 4406 	mla	r4, r0, r6, r4
90028a66:	fb02 3306 	mla	r3, r2, r6, r3
90028a6a:	1c68      	adds	r0, r5, #1
90028a6c:	b2a4      	uxth	r4, r4
90028a6e:	b29b      	uxth	r3, r3
90028a70:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90028a74:	1c62      	adds	r2, r4, #1
90028a76:	1c58      	adds	r0, r3, #1
90028a78:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90028a7c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90028a80:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028a84:	0964      	lsrs	r4, r4, #5
90028a86:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028a8a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90028a8e:	4328      	orrs	r0, r5
90028a90:	4320      	orrs	r0, r4
90028a92:	bd70      	pop	{r4, r5, r6, pc}

90028a94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90028a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028a98:	b08f      	sub	sp, #60	; 0x3c
90028a9a:	461c      	mov	r4, r3
90028a9c:	4682      	mov	sl, r0
90028a9e:	460e      	mov	r6, r1
90028aa0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90028aa4:	4615      	mov	r5, r2
90028aa6:	9b18      	ldr	r3, [sp, #96]	; 0x60
90028aa8:	2f00      	cmp	r7, #0
90028aaa:	f000 8141 	beq.w	90028d30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90028aae:	6820      	ldr	r0, [r4, #0]
90028ab0:	aa0a      	add	r2, sp, #40	; 0x28
90028ab2:	6861      	ldr	r1, [r4, #4]
90028ab4:	f04f 0802 	mov.w	r8, #2
90028ab8:	3504      	adds	r5, #4
90028aba:	c203      	stmia	r2!, {r0, r1}
90028abc:	6818      	ldr	r0, [r3, #0]
90028abe:	aa0c      	add	r2, sp, #48	; 0x30
90028ac0:	6859      	ldr	r1, [r3, #4]
90028ac2:	c203      	stmia	r2!, {r0, r1}
90028ac4:	a80a      	add	r0, sp, #40	; 0x28
90028ac6:	f7ef fa99 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028aca:	4621      	mov	r1, r4
90028acc:	a80c      	add	r0, sp, #48	; 0x30
90028ace:	f7ef fad9 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028ad2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90028ad6:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90028ada:	f002 0301 	and.w	r3, r2, #1
90028ade:	9306      	str	r3, [sp, #24]
90028ae0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028ae4:	f003 0101 	and.w	r1, r3, #1
90028ae8:	9105      	str	r1, [sp, #20]
90028aea:	9805      	ldr	r0, [sp, #20]
90028aec:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90028af0:	4403      	add	r3, r0
90028af2:	fb01 2303 	mla	r3, r1, r3, r2
90028af6:	fb93 f3f8 	sdiv	r3, r3, r8
90028afa:	441e      	add	r6, r3
90028afc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90028b00:	441a      	add	r2, r3
90028b02:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90028b06:	4419      	add	r1, r3
90028b08:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90028b0c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90028b10:	9303      	str	r3, [sp, #12]
90028b12:	4b89      	ldr	r3, [pc, #548]	; (90028d38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028b14:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90028b18:	6818      	ldr	r0, [r3, #0]
90028b1a:	6803      	ldr	r3, [r0, #0]
90028b1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90028b1e:	4798      	blx	r3
90028b20:	4a86      	ldr	r2, [pc, #536]	; (90028d3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90028b22:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90028b26:	2fff      	cmp	r7, #255	; 0xff
90028b28:	8813      	ldrh	r3, [r2, #0]
90028b2a:	4694      	mov	ip, r2
90028b2c:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
90028b30:	fb03 9404 	mla	r4, r3, r4, r9
90028b34:	fb03 f30b 	mul.w	r3, r3, fp
90028b38:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028b3c:	d071      	beq.n	90028c22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90028b3e:	43f9      	mvns	r1, r7
90028b40:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90028b44:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90028b48:	b2c9      	uxtb	r1, r1
90028b4a:	e9cd 3207 	strd	r3, r2, [sp, #28]
90028b4e:	9104      	str	r1, [sp, #16]
90028b50:	9b07      	ldr	r3, [sp, #28]
90028b52:	42a3      	cmp	r3, r4
90028b54:	f240 80e7 	bls.w	90028d26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028b58:	9b06      	ldr	r3, [sp, #24]
90028b5a:	2b00      	cmp	r3, #0
90028b5c:	d03d      	beq.n	90028bda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90028b5e:	7831      	ldrb	r1, [r6, #0]
90028b60:	4650      	mov	r0, sl
90028b62:	9b04      	ldr	r3, [sp, #16]
90028b64:	f106 0801 	add.w	r8, r6, #1
90028b68:	f001 010f 	and.w	r1, r1, #15
90028b6c:	8822      	ldrh	r2, [r4, #0]
90028b6e:	9300      	str	r3, [sp, #0]
90028b70:	463b      	mov	r3, r7
90028b72:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028b76:	4429      	add	r1, r5
90028b78:	f7ff ff56 	bl	90028a28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028b7c:	9b03      	ldr	r3, [sp, #12]
90028b7e:	f824 0b02 	strh.w	r0, [r4], #2
90028b82:	f103 3bff 	add.w	fp, r3, #4294967295
90028b86:	f1bb 0f01 	cmp.w	fp, #1
90028b8a:	46a1      	mov	r9, r4
90028b8c:	f104 0404 	add.w	r4, r4, #4
90028b90:	dd27      	ble.n	90028be2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90028b92:	f898 1000 	ldrb.w	r1, [r8]
90028b96:	4650      	mov	r0, sl
90028b98:	9b04      	ldr	r3, [sp, #16]
90028b9a:	f1ab 0b02 	sub.w	fp, fp, #2
90028b9e:	0909      	lsrs	r1, r1, #4
90028ba0:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90028ba4:	9300      	str	r3, [sp, #0]
90028ba6:	463b      	mov	r3, r7
90028ba8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028bac:	4429      	add	r1, r5
90028bae:	f7ff ff3b 	bl	90028a28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028bb2:	f824 0c04 	strh.w	r0, [r4, #-4]
90028bb6:	f818 1b01 	ldrb.w	r1, [r8], #1
90028bba:	4650      	mov	r0, sl
90028bbc:	9b04      	ldr	r3, [sp, #16]
90028bbe:	f001 010f 	and.w	r1, r1, #15
90028bc2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028bc6:	9300      	str	r3, [sp, #0]
90028bc8:	463b      	mov	r3, r7
90028bca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028bce:	4429      	add	r1, r5
90028bd0:	f7ff ff2a 	bl	90028a28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028bd4:	f824 0c02 	strh.w	r0, [r4, #-2]
90028bd8:	e7d5      	b.n	90028b86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90028bda:	46b0      	mov	r8, r6
90028bdc:	f8dd b00c 	ldr.w	fp, [sp, #12]
90028be0:	e7d1      	b.n	90028b86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90028be2:	d10f      	bne.n	90028c04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90028be4:	f898 1000 	ldrb.w	r1, [r8]
90028be8:	4650      	mov	r0, sl
90028bea:	9b04      	ldr	r3, [sp, #16]
90028bec:	0909      	lsrs	r1, r1, #4
90028bee:	f8b9 2000 	ldrh.w	r2, [r9]
90028bf2:	9300      	str	r3, [sp, #0]
90028bf4:	463b      	mov	r3, r7
90028bf6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028bfa:	4429      	add	r1, r5
90028bfc:	f7ff ff14 	bl	90028a28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028c00:	f829 0b02 	strh.w	r0, [r9], #2
90028c04:	9b08      	ldr	r3, [sp, #32]
90028c06:	9a05      	ldr	r2, [sp, #20]
90028c08:	881c      	ldrh	r4, [r3, #0]
90028c0a:	9b03      	ldr	r3, [sp, #12]
90028c0c:	1ae4      	subs	r4, r4, r3
90028c0e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028c12:	4413      	add	r3, r2
90028c14:	9a09      	ldr	r2, [sp, #36]	; 0x24
90028c16:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90028c1a:	fb93 f3f2 	sdiv	r3, r3, r2
90028c1e:	441e      	add	r6, r3
90028c20:	e796      	b.n	90028b50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90028c22:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90028c26:	4f46      	ldr	r7, [pc, #280]	; (90028d40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90028c28:	42a3      	cmp	r3, r4
90028c2a:	d97c      	bls.n	90028d26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028c2c:	9a06      	ldr	r2, [sp, #24]
90028c2e:	2a00      	cmp	r2, #0
90028c30:	d054      	beq.n	90028cdc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90028c32:	7830      	ldrb	r0, [r6, #0]
90028c34:	1c71      	adds	r1, r6, #1
90028c36:	f000 000f 	and.w	r0, r0, #15
90028c3a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028c3e:	eb05 0e00 	add.w	lr, r5, r0
90028c42:	5c28      	ldrb	r0, [r5, r0]
90028c44:	f89e 2002 	ldrb.w	r2, [lr, #2]
90028c48:	f89e e001 	ldrb.w	lr, [lr, #1]
90028c4c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028c50:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90028c54:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90028c58:	ea42 020e 	orr.w	r2, r2, lr
90028c5c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90028c60:	f824 2b02 	strh.w	r2, [r4], #2
90028c64:	9a03      	ldr	r2, [sp, #12]
90028c66:	f102 3eff 	add.w	lr, r2, #4294967295
90028c6a:	f1be 0f01 	cmp.w	lr, #1
90028c6e:	4620      	mov	r0, r4
90028c70:	f104 0404 	add.w	r4, r4, #4
90028c74:	dd36      	ble.n	90028ce4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90028c76:	7808      	ldrb	r0, [r1, #0]
90028c78:	f1ae 0e02 	sub.w	lr, lr, #2
90028c7c:	0900      	lsrs	r0, r0, #4
90028c7e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028c82:	eb05 0a00 	add.w	sl, r5, r0
90028c86:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028c8a:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028c8e:	00d2      	lsls	r2, r2, #3
90028c90:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028c94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90028c98:	ea49 0202 	orr.w	r2, r9, r2
90028c9c:	f815 9000 	ldrb.w	r9, [r5, r0]
90028ca0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90028ca4:	f824 2c04 	strh.w	r2, [r4, #-4]
90028ca8:	f811 0b01 	ldrb.w	r0, [r1], #1
90028cac:	f000 000f 	and.w	r0, r0, #15
90028cb0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028cb4:	eb05 0a00 	add.w	sl, r5, r0
90028cb8:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028cbc:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028cc0:	00d2      	lsls	r2, r2, #3
90028cc2:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028cc6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90028cca:	ea49 0202 	orr.w	r2, r9, r2
90028cce:	f815 9000 	ldrb.w	r9, [r5, r0]
90028cd2:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90028cd6:	f824 2c02 	strh.w	r2, [r4, #-2]
90028cda:	e7c6      	b.n	90028c6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90028cdc:	4631      	mov	r1, r6
90028cde:	f8dd e00c 	ldr.w	lr, [sp, #12]
90028ce2:	e7c2      	b.n	90028c6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90028ce4:	d111      	bne.n	90028d0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90028ce6:	7809      	ldrb	r1, [r1, #0]
90028ce8:	0909      	lsrs	r1, r1, #4
90028cea:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028cee:	186c      	adds	r4, r5, r1
90028cf0:	5c69      	ldrb	r1, [r5, r1]
90028cf2:	78a2      	ldrb	r2, [r4, #2]
90028cf4:	7864      	ldrb	r4, [r4, #1]
90028cf6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028cfa:	00e4      	lsls	r4, r4, #3
90028cfc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90028d00:	4322      	orrs	r2, r4
90028d02:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90028d06:	f820 2b02 	strh.w	r2, [r0], #2
90028d0a:	9a03      	ldr	r2, [sp, #12]
90028d0c:	f8bc 4000 	ldrh.w	r4, [ip]
90028d10:	9905      	ldr	r1, [sp, #20]
90028d12:	1aa4      	subs	r4, r4, r2
90028d14:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90028d18:	440a      	add	r2, r1
90028d1a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028d1e:	fb92 f2f8 	sdiv	r2, r2, r8
90028d22:	4416      	add	r6, r2
90028d24:	e780      	b.n	90028c28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90028d26:	4b04      	ldr	r3, [pc, #16]	; (90028d38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028d28:	6818      	ldr	r0, [r3, #0]
90028d2a:	6803      	ldr	r3, [r0, #0]
90028d2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90028d2e:	4798      	blx	r3
90028d30:	b00f      	add	sp, #60	; 0x3c
90028d32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028d36:	bf00      	nop
90028d38:	24039acc 	.word	0x24039acc
90028d3c:	24039ac6 	.word	0x24039ac6
90028d40:	fffff800 	.word	0xfffff800

90028d44 <CRC_Lock>:
90028d44:	4a20      	ldr	r2, [pc, #128]	; (90028dc8 <CRC_Lock+0x84>)
90028d46:	b530      	push	{r4, r5, lr}
90028d48:	6813      	ldr	r3, [r2, #0]
90028d4a:	f64f 74f0 	movw	r4, #65520	; 0xfff0
90028d4e:	f24c 2540 	movw	r5, #49728	; 0xc240
90028d52:	f023 0301 	bic.w	r3, r3, #1
90028d56:	6013      	str	r3, [r2, #0]
90028d58:	4b1c      	ldr	r3, [pc, #112]	; (90028dcc <CRC_Lock+0x88>)
90028d5a:	681a      	ldr	r2, [r3, #0]
90028d5c:	4022      	ands	r2, r4
90028d5e:	42aa      	cmp	r2, r5
90028d60:	d005      	beq.n	90028d6e <CRC_Lock+0x2a>
90028d62:	681b      	ldr	r3, [r3, #0]
90028d64:	f24c 2270 	movw	r2, #49776	; 0xc270
90028d68:	4023      	ands	r3, r4
90028d6a:	4293      	cmp	r3, r2
90028d6c:	d124      	bne.n	90028db8 <CRC_Lock+0x74>
90028d6e:	4b18      	ldr	r3, [pc, #96]	; (90028dd0 <CRC_Lock+0x8c>)
90028d70:	681b      	ldr	r3, [r3, #0]
90028d72:	bb0b      	cbnz	r3, 90028db8 <CRC_Lock+0x74>
90028d74:	4b17      	ldr	r3, [pc, #92]	; (90028dd4 <CRC_Lock+0x90>)
90028d76:	681a      	ldr	r2, [r3, #0]
90028d78:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028d7c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
90028d80:	d00d      	beq.n	90028d9e <CRC_Lock+0x5a>
90028d82:	681a      	ldr	r2, [r3, #0]
90028d84:	f240 4483 	movw	r4, #1155	; 0x483
90028d88:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028d8c:	42a2      	cmp	r2, r4
90028d8e:	d006      	beq.n	90028d9e <CRC_Lock+0x5a>
90028d90:	681b      	ldr	r3, [r3, #0]
90028d92:	f240 4285 	movw	r2, #1157	; 0x485
90028d96:	f3c3 030b 	ubfx	r3, r3, #0, #12
90028d9a:	4293      	cmp	r3, r2
90028d9c:	d10c      	bne.n	90028db8 <CRC_Lock+0x74>
90028d9e:	4b0e      	ldr	r3, [pc, #56]	; (90028dd8 <CRC_Lock+0x94>)
90028da0:	2201      	movs	r2, #1
90028da2:	601a      	str	r2, [r3, #0]
90028da4:	681a      	ldr	r2, [r3, #0]
90028da6:	2a00      	cmp	r2, #0
90028da8:	d1fc      	bne.n	90028da4 <CRC_Lock+0x60>
90028daa:	4b0c      	ldr	r3, [pc, #48]	; (90028ddc <CRC_Lock+0x98>)
90028dac:	6018      	str	r0, [r3, #0]
90028dae:	6818      	ldr	r0, [r3, #0]
90028db0:	1a43      	subs	r3, r0, r1
90028db2:	4258      	negs	r0, r3
90028db4:	4158      	adcs	r0, r3
90028db6:	bd30      	pop	{r4, r5, pc}
90028db8:	4b09      	ldr	r3, [pc, #36]	; (90028de0 <CRC_Lock+0x9c>)
90028dba:	2201      	movs	r2, #1
90028dbc:	601a      	str	r2, [r3, #0]
90028dbe:	681a      	ldr	r2, [r3, #0]
90028dc0:	2a00      	cmp	r2, #0
90028dc2:	d1fc      	bne.n	90028dbe <CRC_Lock+0x7a>
90028dc4:	4b07      	ldr	r3, [pc, #28]	; (90028de4 <CRC_Lock+0xa0>)
90028dc6:	e7f1      	b.n	90028dac <CRC_Lock+0x68>
90028dc8:	e0002000 	.word	0xe0002000
90028dcc:	e000ed00 	.word	0xe000ed00
90028dd0:	e0042000 	.word	0xe0042000
90028dd4:	5c001000 	.word	0x5c001000
90028dd8:	58024c08 	.word	0x58024c08
90028ddc:	58024c00 	.word	0x58024c00
90028de0:	40023008 	.word	0x40023008
90028de4:	40023000 	.word	0x40023000

90028de8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90028de8:	6101      	str	r1, [r0, #16]
90028dea:	4770      	bx	lr

90028dec <_ZN8touchgfx8Gestures4tickEv>:
90028dec:	7b83      	ldrb	r3, [r0, #14]
90028dee:	b14b      	cbz	r3, 90028e04 <_ZN8touchgfx8Gestures4tickEv+0x18>
90028df0:	8903      	ldrh	r3, [r0, #8]
90028df2:	3301      	adds	r3, #1
90028df4:	b29b      	uxth	r3, r3
90028df6:	2b07      	cmp	r3, #7
90028df8:	8103      	strh	r3, [r0, #8]
90028dfa:	bf81      	itttt	hi
90028dfc:	2300      	movhi	r3, #0
90028dfe:	8143      	strhhi	r3, [r0, #10]
90028e00:	8183      	strhhi	r3, [r0, #12]
90028e02:	7383      	strbhi	r3, [r0, #14]
90028e04:	4770      	bx	lr
	...

90028e08 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90028e08:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90028e0c:	4698      	mov	r8, r3
90028e0e:	8883      	ldrh	r3, [r0, #4]
90028e10:	4604      	mov	r4, r0
90028e12:	4617      	mov	r7, r2
90028e14:	f8ad 3006 	strh.w	r3, [sp, #6]
90028e18:	eba8 0303 	sub.w	r3, r8, r3
90028e1c:	4a19      	ldr	r2, [pc, #100]	; (90028e84 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90028e1e:	460e      	mov	r6, r1
90028e20:	b21b      	sxth	r3, r3
90028e22:	88c1      	ldrh	r1, [r0, #6]
90028e24:	9200      	str	r2, [sp, #0]
90028e26:	2000      	movs	r0, #0
90028e28:	2b00      	cmp	r3, #0
90028e2a:	8aa2      	ldrh	r2, [r4, #20]
90028e2c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
90028e30:	bfb8      	it	lt
90028e32:	425b      	neglt	r3, r3
90028e34:	f88d 0004 	strb.w	r0, [sp, #4]
90028e38:	f8ad 1008 	strh.w	r1, [sp, #8]
90028e3c:	b21b      	sxth	r3, r3
90028e3e:	f8ad 800a 	strh.w	r8, [sp, #10]
90028e42:	f8ad 500c 	strh.w	r5, [sp, #12]
90028e46:	4293      	cmp	r3, r2
90028e48:	dc07      	bgt.n	90028e5a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90028e4a:	1a69      	subs	r1, r5, r1
90028e4c:	b209      	sxth	r1, r1
90028e4e:	2900      	cmp	r1, #0
90028e50:	bfb8      	it	lt
90028e52:	4249      	neglt	r1, r1
90028e54:	b209      	sxth	r1, r1
90028e56:	428a      	cmp	r2, r1
90028e58:	da10      	bge.n	90028e7c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90028e5a:	6920      	ldr	r0, [r4, #16]
90028e5c:	4669      	mov	r1, sp
90028e5e:	eba8 0606 	sub.w	r6, r8, r6
90028e62:	1bef      	subs	r7, r5, r7
90028e64:	6803      	ldr	r3, [r0, #0]
90028e66:	685b      	ldr	r3, [r3, #4]
90028e68:	4798      	blx	r3
90028e6a:	2300      	movs	r3, #0
90028e6c:	2001      	movs	r0, #1
90028e6e:	8166      	strh	r6, [r4, #10]
90028e70:	8123      	strh	r3, [r4, #8]
90028e72:	81a7      	strh	r7, [r4, #12]
90028e74:	f8a4 8004 	strh.w	r8, [r4, #4]
90028e78:	80e5      	strh	r5, [r4, #6]
90028e7a:	73a0      	strb	r0, [r4, #14]
90028e7c:	b004      	add	sp, #16
90028e7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028e82:	bf00      	nop
90028e84:	9002de10 	.word	0x9002de10

90028e88 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90028e88:	b5f0      	push	{r4, r5, r6, r7, lr}
90028e8a:	461e      	mov	r6, r3
90028e8c:	1e4b      	subs	r3, r1, #1
90028e8e:	b085      	sub	sp, #20
90028e90:	4604      	mov	r4, r0
90028e92:	2b01      	cmp	r3, #1
90028e94:	460d      	mov	r5, r1
90028e96:	4617      	mov	r7, r2
90028e98:	d84b      	bhi.n	90028f32 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90028e9a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90028e9e:	1cd3      	adds	r3, r2, #3
90028ea0:	b29b      	uxth	r3, r3
90028ea2:	2b06      	cmp	r3, #6
90028ea4:	d916      	bls.n	90028ed4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
90028ea6:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90028f48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90028eaa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028eae:	f8cd c004 	str.w	ip, [sp, #4]
90028eb2:	f04f 0c00 	mov.w	ip, #0
90028eb6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90028eba:	6900      	ldr	r0, [r0, #16]
90028ebc:	f8ad 100c 	strh.w	r1, [sp, #12]
90028ec0:	a901      	add	r1, sp, #4
90028ec2:	f88d c008 	strb.w	ip, [sp, #8]
90028ec6:	f8ad 200a 	strh.w	r2, [sp, #10]
90028eca:	f8ad 300e 	strh.w	r3, [sp, #14]
90028ece:	6803      	ldr	r3, [r0, #0]
90028ed0:	689b      	ldr	r3, [r3, #8]
90028ed2:	4798      	blx	r3
90028ed4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90028ed8:	1cd3      	adds	r3, r2, #3
90028eda:	b29b      	uxth	r3, r3
90028edc:	2b06      	cmp	r3, #6
90028ede:	d916      	bls.n	90028f0e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028ee0:	f8df c064 	ldr.w	ip, [pc, #100]	; 90028f48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90028ee4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028ee8:	f8cd c004 	str.w	ip, [sp, #4]
90028eec:	f04f 0c01 	mov.w	ip, #1
90028ef0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90028ef4:	6920      	ldr	r0, [r4, #16]
90028ef6:	f8ad 100c 	strh.w	r1, [sp, #12]
90028efa:	a901      	add	r1, sp, #4
90028efc:	f88d c008 	strb.w	ip, [sp, #8]
90028f00:	f8ad 200a 	strh.w	r2, [sp, #10]
90028f04:	f8ad 300e 	strh.w	r3, [sp, #14]
90028f08:	6803      	ldr	r3, [r0, #0]
90028f0a:	689b      	ldr	r3, [r3, #8]
90028f0c:	4798      	blx	r3
90028f0e:	4b0d      	ldr	r3, [pc, #52]	; (90028f44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90028f10:	a901      	add	r1, sp, #4
90028f12:	6920      	ldr	r0, [r4, #16]
90028f14:	9301      	str	r3, [sp, #4]
90028f16:	2300      	movs	r3, #0
90028f18:	f88d 5008 	strb.w	r5, [sp, #8]
90028f1c:	f8ad 700a 	strh.w	r7, [sp, #10]
90028f20:	f8ad 600c 	strh.w	r6, [sp, #12]
90028f24:	f8ad 300e 	strh.w	r3, [sp, #14]
90028f28:	6803      	ldr	r3, [r0, #0]
90028f2a:	681b      	ldr	r3, [r3, #0]
90028f2c:	4798      	blx	r3
90028f2e:	b005      	add	sp, #20
90028f30:	bdf0      	pop	{r4, r5, r6, r7, pc}
90028f32:	2900      	cmp	r1, #0
90028f34:	d1eb      	bne.n	90028f0e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028f36:	80a2      	strh	r2, [r4, #4]
90028f38:	80c6      	strh	r6, [r0, #6]
90028f3a:	60a1      	str	r1, [r4, #8]
90028f3c:	81a1      	strh	r1, [r4, #12]
90028f3e:	73a1      	strb	r1, [r4, #14]
90028f40:	e7e5      	b.n	90028f0e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028f42:	bf00      	nop
90028f44:	9002ddfc 	.word	0x9002ddfc
90028f48:	9002de24 	.word	0x9002de24

90028f4c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
90028f4c:	10c9      	asrs	r1, r1, #3
90028f4e:	2900      	cmp	r1, #0
90028f50:	bfb8      	it	lt
90028f52:	4249      	neglt	r1, r1
90028f54:	2801      	cmp	r0, #1
90028f56:	d108      	bne.n	90028f6a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90028f58:	f3c1 0008 	ubfx	r0, r1, #0, #9
90028f5c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
90028f60:	4601      	mov	r1, r0
90028f62:	dd02      	ble.n	90028f6a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90028f64:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
90028f68:	4770      	bx	lr
90028f6a:	29ff      	cmp	r1, #255	; 0xff
90028f6c:	bfa8      	it	ge
90028f6e:	21ff      	movge	r1, #255	; 0xff
90028f70:	4608      	mov	r0, r1
90028f72:	4770      	bx	lr

90028f74 <_ZN8touchgfx10Rasterizer6lineToEii>:
90028f74:	b410      	push	{r4}
90028f76:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90028f7a:	429c      	cmp	r4, r3
90028f7c:	d803      	bhi.n	90028f86 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90028f7e:	f85d 4b04 	ldr.w	r4, [sp], #4
90028f82:	f7ed bb45 	b.w	90016610 <_ZN8touchgfx7Outline6lineToEii>
90028f86:	f85d 4b04 	ldr.w	r4, [sp], #4
90028f8a:	4770      	bx	lr

90028f8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90028f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028f90:	b08b      	sub	sp, #44	; 0x2c
90028f92:	4606      	mov	r6, r0
90028f94:	468a      	mov	sl, r1
90028f96:	e9cd 2306 	strd	r2, r3, [sp, #24]
90028f9a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90028f9e:	9308      	str	r3, [sp, #32]
90028fa0:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90028fa4:	9309      	str	r3, [sp, #36]	; 0x24
90028fa6:	f7ed fc9e 	bl	900168e6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90028faa:	68b5      	ldr	r5, [r6, #8]
90028fac:	4604      	mov	r4, r0
90028fae:	2d00      	cmp	r5, #0
90028fb0:	d044      	beq.n	9002903c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028fb2:	6873      	ldr	r3, [r6, #4]
90028fb4:	42ab      	cmp	r3, r5
90028fb6:	d33d      	bcc.n	90029034 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90028fb8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90028fbc:	f04f 0800 	mov.w	r8, #0
90028fc0:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90028fc4:	eb02 0b03 	add.w	fp, r2, r3
90028fc8:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90028fcc:	fb02 1203 	mla	r2, r2, r3, r1
90028fd0:	9205      	str	r2, [sp, #20]
90028fd2:	1e6a      	subs	r2, r5, #1
90028fd4:	9204      	str	r2, [sp, #16]
90028fd6:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90028fda:	f9b4 7000 	ldrsh.w	r7, [r4]
90028fde:	454b      	cmp	r3, r9
90028fe0:	463a      	mov	r2, r7
90028fe2:	d008      	beq.n	90028ff6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90028fe4:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90028fe8:	eb03 0b09 	add.w	fp, r3, r9
90028fec:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90028ff0:	fb03 1309 	mla	r3, r3, r9, r1
90028ff4:	9305      	str	r3, [sp, #20]
90028ff6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90028ffa:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90028ffe:	4498      	add	r8, r3
90029000:	9b04      	ldr	r3, [sp, #16]
90029002:	3b01      	subs	r3, #1
90029004:	9304      	str	r3, [sp, #16]
90029006:	9b04      	ldr	r3, [sp, #16]
90029008:	3301      	adds	r3, #1
9002900a:	d015      	beq.n	90029038 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
9002900c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90029010:	42bb      	cmp	r3, r7
90029012:	d117      	bne.n	90029044 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90029014:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90029018:	9b04      	ldr	r3, [sp, #16]
9002901a:	4548      	cmp	r0, r9
9002901c:	f103 33ff 	add.w	r3, r3, #4294967295
90029020:	d17d      	bne.n	9002911e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90029022:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90029026:	4401      	add	r1, r0
90029028:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002902c:	4480      	add	r8, r0
9002902e:	e7e9      	b.n	90029004 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90029030:	461f      	mov	r7, r3
90029032:	e042      	b.n	900290ba <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90029034:	2000      	movs	r0, #0
90029036:	e002      	b.n	9002903e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90029038:	2900      	cmp	r1, #0
9002903a:	d16d      	bne.n	90029118 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
9002903c:	2001      	movs	r0, #1
9002903e:	b00b      	add	sp, #44	; 0x2c
90029040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029044:	b379      	cbz	r1, 900290a6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90029046:	2f00      	cmp	r7, #0
90029048:	db29      	blt.n	9002909e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002904a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
9002904e:	42bb      	cmp	r3, r7
90029050:	dd25      	ble.n	9002909e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90029052:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90029056:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
9002905a:	f7ff ff77 	bl	90028f4c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
9002905e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90029060:	fb10 f003 	smulbb	r0, r0, r3
90029064:	b280      	uxth	r0, r0
90029066:	1c41      	adds	r1, r0, #1
90029068:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002906c:	1209      	asrs	r1, r1, #8
9002906e:	f011 0fff 	tst.w	r1, #255	; 0xff
90029072:	d014      	beq.n	9002909e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90029074:	b2c9      	uxtb	r1, r1
90029076:	9808      	ldr	r0, [sp, #32]
90029078:	b2ba      	uxth	r2, r7
9002907a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
9002907c:	9102      	str	r1, [sp, #8]
9002907e:	2101      	movs	r1, #1
90029080:	4413      	add	r3, r2
90029082:	4402      	add	r2, r0
90029084:	9101      	str	r1, [sp, #4]
90029086:	fa0f f18b 	sxth.w	r1, fp
9002908a:	f8da 0000 	ldr.w	r0, [sl]
9002908e:	b21b      	sxth	r3, r3
90029090:	9100      	str	r1, [sp, #0]
90029092:	b212      	sxth	r2, r2
90029094:	6941      	ldr	r1, [r0, #20]
90029096:	4650      	mov	r0, sl
90029098:	460d      	mov	r5, r1
9002909a:	9905      	ldr	r1, [sp, #20]
9002909c:	47a8      	blx	r5
9002909e:	9b04      	ldr	r3, [sp, #16]
900290a0:	1c7a      	adds	r2, r7, #1
900290a2:	3301      	adds	r3, #1
900290a4:	d0ca      	beq.n	9002903c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900290a6:	f9b4 7000 	ldrsh.w	r7, [r4]
900290aa:	1abb      	subs	r3, r7, r2
900290ac:	2b00      	cmp	r3, #0
900290ae:	dd31      	ble.n	90029114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900290b0:	2a00      	cmp	r2, #0
900290b2:	dabd      	bge.n	90029030 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
900290b4:	2f00      	cmp	r7, #0
900290b6:	dd2d      	ble.n	90029114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900290b8:	2200      	movs	r2, #0
900290ba:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
900290be:	19d1      	adds	r1, r2, r7
900290c0:	4299      	cmp	r1, r3
900290c2:	db02      	blt.n	900290ca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
900290c4:	1a9f      	subs	r7, r3, r2
900290c6:	2f00      	cmp	r7, #0
900290c8:	dd24      	ble.n	90029114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900290ca:	ea4f 1188 	mov.w	r1, r8, lsl #6
900290ce:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
900290d2:	f7ff ff3b 	bl	90028f4c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
900290d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900290d8:	fb10 f003 	smulbb	r0, r0, r3
900290dc:	b280      	uxth	r0, r0
900290de:	1c41      	adds	r1, r0, #1
900290e0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900290e4:	1209      	asrs	r1, r1, #8
900290e6:	f011 0fff 	tst.w	r1, #255	; 0xff
900290ea:	d013      	beq.n	90029114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900290ec:	b292      	uxth	r2, r2
900290ee:	9808      	ldr	r0, [sp, #32]
900290f0:	b2c9      	uxtb	r1, r1
900290f2:	8e73      	ldrh	r3, [r6, #50]	; 0x32
900290f4:	b23f      	sxth	r7, r7
900290f6:	4413      	add	r3, r2
900290f8:	9102      	str	r1, [sp, #8]
900290fa:	4402      	add	r2, r0
900290fc:	fa0f f18b 	sxth.w	r1, fp
90029100:	f8da 0000 	ldr.w	r0, [sl]
90029104:	b21b      	sxth	r3, r3
90029106:	9100      	str	r1, [sp, #0]
90029108:	b212      	sxth	r2, r2
9002910a:	9701      	str	r7, [sp, #4]
9002910c:	9905      	ldr	r1, [sp, #20]
9002910e:	6947      	ldr	r7, [r0, #20]
90029110:	4650      	mov	r0, sl
90029112:	47b8      	blx	r7
90029114:	464b      	mov	r3, r9
90029116:	e75e      	b.n	90028fd6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90029118:	2f00      	cmp	r7, #0
9002911a:	da96      	bge.n	9002904a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
9002911c:	e78e      	b.n	9002903c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002911e:	2900      	cmp	r1, #0
90029120:	d0f8      	beq.n	90029114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029122:	e790      	b.n	90029046 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90029124 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
90029124:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90029128:	4b4a      	ldr	r3, [pc, #296]	; (90029254 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
9002912a:	2500      	movs	r5, #0
9002912c:	f100 0620 	add.w	r6, r0, #32
90029130:	4604      	mov	r4, r0
90029132:	4690      	mov	r8, r2
90029134:	f100 0718 	add.w	r7, r0, #24
90029138:	e9c0 3100 	strd	r3, r1, [r0]
9002913c:	e9c0 5502 	strd	r5, r5, [r0, #8]
90029140:	e9c0 5504 	strd	r5, r5, [r0, #16]
90029144:	e9c0 5506 	strd	r5, r5, [r0, #24]
90029148:	4630      	mov	r0, r6
9002914a:	f7ec fda7 	bl	90015c9c <_ZN8touchgfx7OutlineC1Ev>
9002914e:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
90029152:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
90029156:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
9002915a:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
9002915e:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
90029162:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
90029166:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
9002916a:	f8d4 c004 	ldr.w	ip, [r4, #4]
9002916e:	9500      	str	r5, [sp, #0]
90029170:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90029174:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
90029178:	f9b8 2000 	ldrsh.w	r2, [r8]
9002917c:	f8b8 0004 	ldrh.w	r0, [r8, #4]
90029180:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
90029184:	4410      	add	r0, r2
90029186:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
9002918a:	b280      	uxth	r0, r0
9002918c:	fa0f fa80 	sxth.w	sl, r0
90029190:	45aa      	cmp	sl, r5
90029192:	dd5c      	ble.n	9002924e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90029194:	4591      	cmp	r9, r2
90029196:	dd5a      	ble.n	9002924e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90029198:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
9002919c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900291a0:	440b      	add	r3, r1
900291a2:	b29b      	uxth	r3, r3
900291a4:	b21d      	sxth	r5, r3
900291a6:	2d00      	cmp	r5, #0
900291a8:	dd51      	ble.n	9002924e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900291aa:	458e      	cmp	lr, r1
900291ac:	dd4f      	ble.n	9002924e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900291ae:	45d1      	cmp	r9, sl
900291b0:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
900291b4:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
900291b8:	bfb8      	it	lt
900291ba:	fa1f f089 	uxthlt.w	r0, r9
900291be:	45ae      	cmp	lr, r5
900291c0:	f8ad 2000 	strh.w	r2, [sp]
900291c4:	bfb8      	it	lt
900291c6:	fa1f f38e 	uxthlt.w	r3, lr
900291ca:	1a80      	subs	r0, r0, r2
900291cc:	f8ad 1002 	strh.w	r1, [sp, #2]
900291d0:	1a5b      	subs	r3, r3, r1
900291d2:	f8ad 0004 	strh.w	r0, [sp, #4]
900291d6:	f8ad 3006 	strh.w	r3, [sp, #6]
900291da:	466d      	mov	r5, sp
900291dc:	e895 0003 	ldmia.w	r5, {r0, r1}
900291e0:	e887 0003 	stmia.w	r7, {r0, r1}
900291e4:	f8dc 3000 	ldr.w	r3, [ip]
900291e8:	4660      	mov	r0, ip
900291ea:	4639      	mov	r1, r7
900291ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900291ee:	4798      	blx	r3
900291f0:	6861      	ldr	r1, [r4, #4]
900291f2:	4628      	mov	r0, r5
900291f4:	3104      	adds	r1, #4
900291f6:	f7ee ff45 	bl	90018084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900291fa:	4638      	mov	r0, r7
900291fc:	f7ee fefe 	bl	90017ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90029200:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90029204:	f8bd 2000 	ldrh.w	r2, [sp]
90029208:	4630      	mov	r0, r6
9002920a:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
9002920e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
90029212:	f7ec fd27 	bl	90015c64 <_ZN8touchgfx7Outline5resetEv>
90029216:	f9bd 3000 	ldrsh.w	r3, [sp]
9002921a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
9002921e:	4620      	mov	r0, r4
90029220:	015b      	lsls	r3, r3, #5
90029222:	60a3      	str	r3, [r4, #8]
90029224:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90029228:	015b      	lsls	r3, r3, #5
9002922a:	60e3      	str	r3, [r4, #12]
9002922c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90029230:	015b      	lsls	r3, r3, #5
90029232:	6123      	str	r3, [r4, #16]
90029234:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90029238:	015b      	lsls	r3, r3, #5
9002923a:	6163      	str	r3, [r4, #20]
9002923c:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
90029240:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
90029244:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
90029248:	b002      	add	sp, #8
9002924a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002924e:	2300      	movs	r3, #0
90029250:	9301      	str	r3, [sp, #4]
90029252:	e7c2      	b.n	900291da <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
90029254:	9002e148 	.word	0x9002e148

90029258 <_ZN8touchgfx6Canvas5closeEv>:
90029258:	b538      	push	{r3, r4, r5, lr}
9002925a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
9002925e:	4604      	mov	r4, r0
90029260:	b193      	cbz	r3, 90029288 <_ZN8touchgfx6Canvas5closeEv+0x30>
90029262:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
90029266:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
9002926a:	4213      	tst	r3, r2
9002926c:	d10c      	bne.n	90029288 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002926e:	f100 0520 	add.w	r5, r0, #32
90029272:	b123      	cbz	r3, 9002927e <_ZN8touchgfx6Canvas5closeEv+0x26>
90029274:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
90029278:	4628      	mov	r0, r5
9002927a:	f7ff fe7b 	bl	90028f74 <_ZN8touchgfx10Rasterizer6lineToEii>
9002927e:	4628      	mov	r0, r5
90029280:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
90029284:	f7ff fe76 	bl	90028f74 <_ZN8touchgfx10Rasterizer6lineToEii>
90029288:	2300      	movs	r3, #0
9002928a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
9002928e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
90029292:	4298      	cmp	r0, r3
90029294:	bf34      	ite	cc
90029296:	2000      	movcc	r0, #0
90029298:	2001      	movcs	r0, #1
9002929a:	bd38      	pop	{r3, r4, r5, pc}

9002929c <_ZN8touchgfx6Canvas6renderEh>:
9002929c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900292a0:	4604      	mov	r4, r0
900292a2:	6840      	ldr	r0, [r0, #4]
900292a4:	460d      	mov	r5, r1
900292a6:	6803      	ldr	r3, [r0, #0]
900292a8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
900292aa:	4798      	blx	r3
900292ac:	fb10 f105 	smulbb	r1, r0, r5
900292b0:	b289      	uxth	r1, r1
900292b2:	1c4d      	adds	r5, r1, #1
900292b4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900292b8:	122d      	asrs	r5, r5, #8
900292ba:	f000 809c 	beq.w	900293f6 <_ZN8touchgfx6Canvas6renderEh+0x15a>
900292be:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
900292c2:	2b00      	cmp	r3, #0
900292c4:	f000 8097 	beq.w	900293f6 <_ZN8touchgfx6Canvas6renderEh+0x15a>
900292c8:	4620      	mov	r0, r4
900292ca:	f7ff ffc5 	bl	90029258 <_ZN8touchgfx6Canvas5closeEv>
900292ce:	4607      	mov	r7, r0
900292d0:	2800      	cmp	r0, #0
900292d2:	d048      	beq.n	90029366 <_ZN8touchgfx6Canvas6renderEh+0xca>
900292d4:	6863      	ldr	r3, [r4, #4]
900292d6:	4e49      	ldr	r6, [pc, #292]	; (900293fc <_ZN8touchgfx6Canvas6renderEh+0x160>)
900292d8:	6a98      	ldr	r0, [r3, #40]	; 0x28
900292da:	6837      	ldr	r7, [r6, #0]
900292dc:	6803      	ldr	r3, [r0, #0]
900292de:	689b      	ldr	r3, [r3, #8]
900292e0:	4798      	blx	r3
900292e2:	4601      	mov	r1, r0
900292e4:	4638      	mov	r0, r7
900292e6:	f7ea fc8b 	bl	90013c00 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
900292ea:	4607      	mov	r7, r0
900292ec:	f7ea f84c 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
900292f0:	6803      	ldr	r3, [r0, #0]
900292f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900292f4:	4798      	blx	r3
900292f6:	4680      	mov	r8, r0
900292f8:	f7ea f846 	bl	90013388 <_ZN8touchgfx3HAL3lcdEv>
900292fc:	6803      	ldr	r3, [r0, #0]
900292fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90029300:	4798      	blx	r3
90029302:	280b      	cmp	r0, #11
90029304:	d85c      	bhi.n	900293c0 <_ZN8touchgfx6Canvas6renderEh+0x124>
90029306:	e8df f000 	tbb	[pc, r0]
9002930a:	5d52      	.short	0x5d52
9002930c:	325b066d 	.word	0x325b066d
90029310:	66666642 	.word	0x66666642
90029314:	6666      	.short	0x6666
90029316:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
9002931a:	2208      	movs	r2, #8
9002931c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029320:	fb91 f2f2 	sdiv	r2, r1, r2
90029324:	fb08 2303 	mla	r3, r8, r3, r2
90029328:	441f      	add	r7, r3
9002932a:	424b      	negs	r3, r1
9002932c:	f001 0107 	and.w	r1, r1, #7
90029330:	f003 0307 	and.w	r3, r3, #7
90029334:	bf58      	it	pl
90029336:	4259      	negpl	r1, r3
90029338:	b2c9      	uxtb	r1, r1
9002933a:	6860      	ldr	r0, [r4, #4]
9002933c:	b2ed      	uxtb	r5, r5
9002933e:	463a      	mov	r2, r7
90029340:	fa0f f388 	sxth.w	r3, r8
90029344:	e9cd 1500 	strd	r1, r5, [sp]
90029348:	6a81      	ldr	r1, [r0, #40]	; 0x28
9002934a:	f104 0020 	add.w	r0, r4, #32
9002934e:	f7ff fe1d 	bl	90028f8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90029352:	6863      	ldr	r3, [r4, #4]
90029354:	4607      	mov	r7, r0
90029356:	6a98      	ldr	r0, [r3, #40]	; 0x28
90029358:	6803      	ldr	r3, [r0, #0]
9002935a:	691b      	ldr	r3, [r3, #16]
9002935c:	4798      	blx	r3
9002935e:	6830      	ldr	r0, [r6, #0]
90029360:	6803      	ldr	r3, [r0, #0]
90029362:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90029364:	4798      	blx	r3
90029366:	4638      	mov	r0, r7
90029368:	b002      	add	sp, #8
9002936a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002936e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90029372:	2204      	movs	r2, #4
90029374:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029378:	fb91 f2f2 	sdiv	r2, r1, r2
9002937c:	fb08 2303 	mla	r3, r8, r3, r2
90029380:	441f      	add	r7, r3
90029382:	424b      	negs	r3, r1
90029384:	f001 0103 	and.w	r1, r1, #3
90029388:	f003 0303 	and.w	r3, r3, #3
9002938c:	e7d2      	b.n	90029334 <_ZN8touchgfx6Canvas6renderEh+0x98>
9002938e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90029392:	2202      	movs	r2, #2
90029394:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029398:	2900      	cmp	r1, #0
9002939a:	fb91 f2f2 	sdiv	r2, r1, r2
9002939e:	f001 0101 	and.w	r1, r1, #1
900293a2:	fb08 2303 	mla	r3, r8, r3, r2
900293a6:	bfb8      	it	lt
900293a8:	4249      	neglt	r1, r1
900293aa:	441f      	add	r7, r3
900293ac:	e7c4      	b.n	90029338 <_ZN8touchgfx6Canvas6renderEh+0x9c>
900293ae:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900293b2:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
900293b6:	fb08 f303 	mul.w	r3, r8, r3
900293ba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900293be:	441f      	add	r7, r3
900293c0:	2100      	movs	r1, #0
900293c2:	e7ba      	b.n	9002933a <_ZN8touchgfx6Canvas6renderEh+0x9e>
900293c4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900293c8:	2103      	movs	r1, #3
900293ca:	fb08 f203 	mul.w	r2, r8, r3
900293ce:	8b23      	ldrh	r3, [r4, #24]
900293d0:	fb13 2301 	smlabb	r3, r3, r1, r2
900293d4:	e7f3      	b.n	900293be <_ZN8touchgfx6Canvas6renderEh+0x122>
900293d6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900293da:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
900293de:	fb08 2303 	mla	r3, r8, r3, r2
900293e2:	e7ec      	b.n	900293be <_ZN8touchgfx6Canvas6renderEh+0x122>
900293e4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900293e8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
900293ec:	fb08 f303 	mul.w	r3, r8, r3
900293f0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900293f4:	e7e3      	b.n	900293be <_ZN8touchgfx6Canvas6renderEh+0x122>
900293f6:	2701      	movs	r7, #1
900293f8:	e7b5      	b.n	90029366 <_ZN8touchgfx6Canvas6renderEh+0xca>
900293fa:	bf00      	nop
900293fc:	24039acc 	.word	0x24039acc

90029400 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90029400:	4b07      	ldr	r3, [pc, #28]	; (90029420 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
90029402:	b510      	push	{r4, lr}
90029404:	781b      	ldrb	r3, [r3, #0]
90029406:	2b01      	cmp	r3, #1
90029408:	d108      	bne.n	9002941c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
9002940a:	6843      	ldr	r3, [r0, #4]
9002940c:	6814      	ldr	r4, [r2, #0]
9002940e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90029412:	680b      	ldr	r3, [r1, #0]
90029414:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90029418:	6013      	str	r3, [r2, #0]
9002941a:	600c      	str	r4, [r1, #0]
9002941c:	bd10      	pop	{r4, pc}
9002941e:	bf00      	nop
90029420:	24039ac4 	.word	0x24039ac4

90029424 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90029424:	b513      	push	{r0, r1, r4, lr}
90029426:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
9002942a:	4604      	mov	r4, r0
9002942c:	e9cd 2100 	strd	r2, r1, [sp]
90029430:	b9a3      	cbnz	r3, 9002945c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90029432:	466a      	mov	r2, sp
90029434:	a901      	add	r1, sp, #4
90029436:	4620      	mov	r0, r4
90029438:	f7ff ffe2 	bl	90029400 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002943c:	68a3      	ldr	r3, [r4, #8]
9002943e:	9901      	ldr	r1, [sp, #4]
90029440:	9a00      	ldr	r2, [sp, #0]
90029442:	1ac9      	subs	r1, r1, r3
90029444:	68e3      	ldr	r3, [r4, #12]
90029446:	1ad2      	subs	r2, r2, r3
90029448:	9101      	str	r1, [sp, #4]
9002944a:	2a00      	cmp	r2, #0
9002944c:	9200      	str	r2, [sp, #0]
9002944e:	da0b      	bge.n	90029468 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90029450:	2301      	movs	r3, #1
90029452:	2900      	cmp	r1, #0
90029454:	da0e      	bge.n	90029474 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90029456:	f043 0304 	orr.w	r3, r3, #4
9002945a:	e013      	b.n	90029484 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
9002945c:	f7ff fefc 	bl	90029258 <_ZN8touchgfx6Canvas5closeEv>
90029460:	2800      	cmp	r0, #0
90029462:	d1e6      	bne.n	90029432 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90029464:	b002      	add	sp, #8
90029466:	bd10      	pop	{r4, pc}
90029468:	6963      	ldr	r3, [r4, #20]
9002946a:	429a      	cmp	r2, r3
9002946c:	bfac      	ite	ge
9002946e:	2302      	movge	r3, #2
90029470:	2300      	movlt	r3, #0
90029472:	e7ee      	b.n	90029452 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90029474:	6920      	ldr	r0, [r4, #16]
90029476:	4281      	cmp	r1, r0
90029478:	bfac      	ite	ge
9002947a:	2008      	movge	r0, #8
9002947c:	2000      	movlt	r0, #0
9002947e:	4318      	orrs	r0, r3
90029480:	b2c3      	uxtb	r3, r0
90029482:	b158      	cbz	r0, 9002949c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90029484:	2200      	movs	r2, #0
90029486:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
9002948a:	9901      	ldr	r1, [sp, #4]
9002948c:	9a00      	ldr	r2, [sp, #0]
9002948e:	66a1      	str	r1, [r4, #104]	; 0x68
90029490:	66e2      	str	r2, [r4, #108]	; 0x6c
90029492:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
90029496:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
9002949a:	e7e3      	b.n	90029464 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
9002949c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
900294a0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
900294a4:	4298      	cmp	r0, r3
900294a6:	d803      	bhi.n	900294b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
900294a8:	f104 0020 	add.w	r0, r4, #32
900294ac:	f7ed f8ca 	bl	90016644 <_ZN8touchgfx7Outline6moveToEii>
900294b0:	2301      	movs	r3, #1
900294b2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
900294b6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
900294ba:	2300      	movs	r3, #0
900294bc:	e7e5      	b.n	9002948a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

900294be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
900294be:	b573      	push	{r0, r1, r4, r5, r6, lr}
900294c0:	ab02      	add	r3, sp, #8
900294c2:	4604      	mov	r4, r0
900294c4:	9101      	str	r1, [sp, #4]
900294c6:	a901      	add	r1, sp, #4
900294c8:	f843 2d08 	str.w	r2, [r3, #-8]!
900294cc:	461a      	mov	r2, r3
900294ce:	f7ff ff97 	bl	90029400 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900294d2:	68a3      	ldr	r3, [r4, #8]
900294d4:	9901      	ldr	r1, [sp, #4]
900294d6:	9a00      	ldr	r2, [sp, #0]
900294d8:	1ac9      	subs	r1, r1, r3
900294da:	68e3      	ldr	r3, [r4, #12]
900294dc:	1ad2      	subs	r2, r2, r3
900294de:	9101      	str	r1, [sp, #4]
900294e0:	2a00      	cmp	r2, #0
900294e2:	9200      	str	r2, [sp, #0]
900294e4:	db1c      	blt.n	90029520 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
900294e6:	6963      	ldr	r3, [r4, #20]
900294e8:	429a      	cmp	r2, r3
900294ea:	bfac      	ite	ge
900294ec:	2002      	movge	r0, #2
900294ee:	2000      	movlt	r0, #0
900294f0:	2900      	cmp	r1, #0
900294f2:	db17      	blt.n	90029524 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
900294f4:	6923      	ldr	r3, [r4, #16]
900294f6:	4299      	cmp	r1, r3
900294f8:	bfac      	ite	ge
900294fa:	2308      	movge	r3, #8
900294fc:	2300      	movlt	r3, #0
900294fe:	4303      	orrs	r3, r0
90029500:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
90029504:	b2dd      	uxtb	r5, r3
90029506:	b978      	cbnz	r0, 90029528 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90029508:	f104 0020 	add.w	r0, r4, #32
9002950c:	f7ff fd32 	bl	90028f74 <_ZN8touchgfx10Rasterizer6lineToEii>
90029510:	9b01      	ldr	r3, [sp, #4]
90029512:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
90029516:	65e3      	str	r3, [r4, #92]	; 0x5c
90029518:	9b00      	ldr	r3, [sp, #0]
9002951a:	6623      	str	r3, [r4, #96]	; 0x60
9002951c:	b002      	add	sp, #8
9002951e:	bd70      	pop	{r4, r5, r6, pc}
90029520:	2001      	movs	r0, #1
90029522:	e7e5      	b.n	900294f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90029524:	2304      	movs	r3, #4
90029526:	e7ea      	b.n	900294fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90029528:	b113      	cbz	r3, 90029530 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
9002952a:	ea10 0305 	ands.w	r3, r0, r5
9002952e:	d11c      	bne.n	9002956a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90029530:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
90029534:	f104 0620 	add.w	r6, r4, #32
90029538:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
9002953c:	b98b      	cbnz	r3, 90029562 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002953e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
90029542:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
90029546:	4298      	cmp	r0, r3
90029548:	d802      	bhi.n	90029550 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
9002954a:	4630      	mov	r0, r6
9002954c:	f7ed f87a 	bl	90016644 <_ZN8touchgfx7Outline6moveToEii>
90029550:	2301      	movs	r3, #1
90029552:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90029556:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9002955a:	4630      	mov	r0, r6
9002955c:	e9dd 2100 	ldrd	r2, r1, [sp]
90029560:	e7d4      	b.n	9002950c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90029562:	4630      	mov	r0, r6
90029564:	f7ff fd06 	bl	90028f74 <_ZN8touchgfx10Rasterizer6lineToEii>
90029568:	e7f7      	b.n	9002955a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
9002956a:	461d      	mov	r5, r3
9002956c:	e7d0      	b.n	90029510 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90029570 <_ZN8touchgfx6CanvasD1Ev>:
90029570:	4b04      	ldr	r3, [pc, #16]	; (90029584 <_ZN8touchgfx6CanvasD1Ev+0x14>)
90029572:	b510      	push	{r4, lr}
90029574:	4604      	mov	r4, r0
90029576:	f840 3b20 	str.w	r3, [r0], #32
9002957a:	f7ec fb6b 	bl	90015c54 <_ZN8touchgfx7OutlineD1Ev>
9002957e:	4620      	mov	r0, r4
90029580:	bd10      	pop	{r4, pc}
90029582:	bf00      	nop
90029584:	9002e148 	.word	0x9002e148

90029588 <_ZN8touchgfx6CanvasD0Ev>:
90029588:	b510      	push	{r4, lr}
9002958a:	4604      	mov	r4, r0
9002958c:	f7ff fff0 	bl	90029570 <_ZN8touchgfx6CanvasD1Ev>
90029590:	2170      	movs	r1, #112	; 0x70
90029592:	4620      	mov	r0, r4
90029594:	f000 f826 	bl	900295e4 <_ZdlPvj>
90029598:	4620      	mov	r0, r4
9002959a:	bd10      	pop	{r4, pc}

9002959c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
9002959c:	790b      	ldrb	r3, [r1, #4]
9002959e:	2b00      	cmp	r3, #0
900295a0:	bf0c      	ite	eq
900295a2:	2301      	moveq	r3, #1
900295a4:	2300      	movne	r3, #0
900295a6:	b570      	push	{r4, r5, r6, lr}
900295a8:	4604      	mov	r4, r0
900295aa:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
900295ae:	460e      	mov	r6, r1
900295b0:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
900295b4:	d109      	bne.n	900295ca <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
900295b6:	b14d      	cbz	r5, 900295cc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
900295b8:	7933      	ldrb	r3, [r6, #4]
900295ba:	2b01      	cmp	r3, #1
900295bc:	d10c      	bne.n	900295d8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
900295be:	6823      	ldr	r3, [r4, #0]
900295c0:	4620      	mov	r0, r4
900295c2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900295c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900295c8:	4718      	bx	r3
900295ca:	b12d      	cbz	r5, 900295d8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
900295cc:	6823      	ldr	r3, [r4, #0]
900295ce:	4620      	mov	r0, r4
900295d0:	695b      	ldr	r3, [r3, #20]
900295d2:	4798      	blx	r3
900295d4:	2d00      	cmp	r5, #0
900295d6:	d1ef      	bne.n	900295b8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
900295d8:	bd70      	pop	{r4, r5, r6, pc}

900295da <__aeabi_atexit>:
900295da:	460b      	mov	r3, r1
900295dc:	4601      	mov	r1, r0
900295de:	4618      	mov	r0, r3
900295e0:	f000 b90e 	b.w	90029800 <__cxa_atexit>

900295e4 <_ZdlPvj>:
900295e4:	f000 b812 	b.w	9002960c <_ZdlPv>

900295e8 <__cxa_guard_acquire>:
900295e8:	6803      	ldr	r3, [r0, #0]
900295ea:	07db      	lsls	r3, r3, #31
900295ec:	d406      	bmi.n	900295fc <__cxa_guard_acquire+0x14>
900295ee:	7843      	ldrb	r3, [r0, #1]
900295f0:	b103      	cbz	r3, 900295f4 <__cxa_guard_acquire+0xc>
900295f2:	deff      	udf	#255	; 0xff
900295f4:	2301      	movs	r3, #1
900295f6:	7043      	strb	r3, [r0, #1]
900295f8:	4618      	mov	r0, r3
900295fa:	4770      	bx	lr
900295fc:	2000      	movs	r0, #0
900295fe:	4770      	bx	lr

90029600 <__cxa_guard_release>:
90029600:	2301      	movs	r3, #1
90029602:	6003      	str	r3, [r0, #0]
90029604:	4770      	bx	lr

90029606 <__cxa_pure_virtual>:
90029606:	b508      	push	{r3, lr}
90029608:	f000 f80e 	bl	90029628 <_ZSt9terminatev>

9002960c <_ZdlPv>:
9002960c:	f000 b844 	b.w	90029698 <free>

90029610 <_ZN10__cxxabiv111__terminateEPFvvE>:
90029610:	b508      	push	{r3, lr}
90029612:	4780      	blx	r0
90029614:	f000 f80d 	bl	90029632 <abort>

90029618 <_ZSt13get_terminatev>:
90029618:	4b02      	ldr	r3, [pc, #8]	; (90029624 <_ZSt13get_terminatev+0xc>)
9002961a:	6818      	ldr	r0, [r3, #0]
9002961c:	f3bf 8f5b 	dmb	ish
90029620:	4770      	bx	lr
90029622:	bf00      	nop
90029624:	24000100 	.word	0x24000100

90029628 <_ZSt9terminatev>:
90029628:	b508      	push	{r3, lr}
9002962a:	f7ff fff5 	bl	90029618 <_ZSt13get_terminatev>
9002962e:	f7ff ffef 	bl	90029610 <_ZN10__cxxabiv111__terminateEPFvvE>

90029632 <abort>:
90029632:	b508      	push	{r3, lr}
90029634:	2006      	movs	r0, #6
90029636:	f000 facd 	bl	90029bd4 <raise>
9002963a:	2001      	movs	r0, #1
9002963c:	f7d9 ff56 	bl	900034ec <_exit>

90029640 <__assert_func>:
90029640:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90029642:	4614      	mov	r4, r2
90029644:	461a      	mov	r2, r3
90029646:	4b09      	ldr	r3, [pc, #36]	; (9002966c <__assert_func+0x2c>)
90029648:	681b      	ldr	r3, [r3, #0]
9002964a:	4605      	mov	r5, r0
9002964c:	68d8      	ldr	r0, [r3, #12]
9002964e:	b14c      	cbz	r4, 90029664 <__assert_func+0x24>
90029650:	4b07      	ldr	r3, [pc, #28]	; (90029670 <__assert_func+0x30>)
90029652:	9100      	str	r1, [sp, #0]
90029654:	e9cd 3401 	strd	r3, r4, [sp, #4]
90029658:	4906      	ldr	r1, [pc, #24]	; (90029674 <__assert_func+0x34>)
9002965a:	462b      	mov	r3, r5
9002965c:	f000 f970 	bl	90029940 <fiprintf>
90029660:	f7ff ffe7 	bl	90029632 <abort>
90029664:	4b04      	ldr	r3, [pc, #16]	; (90029678 <__assert_func+0x38>)
90029666:	461c      	mov	r4, r3
90029668:	e7f3      	b.n	90029652 <__assert_func+0x12>
9002966a:	bf00      	nop
9002966c:	2400015c 	.word	0x2400015c
90029670:	9002e154 	.word	0x9002e154
90029674:	9002e161 	.word	0x9002e161
90029678:	9002e18f 	.word	0x9002e18f

9002967c <atexit>:
9002967c:	2300      	movs	r3, #0
9002967e:	4601      	mov	r1, r0
90029680:	461a      	mov	r2, r3
90029682:	4618      	mov	r0, r3
90029684:	f000 bb52 	b.w	90029d2c <__register_exitproc>

90029688 <malloc>:
90029688:	4b02      	ldr	r3, [pc, #8]	; (90029694 <malloc+0xc>)
9002968a:	4601      	mov	r1, r0
9002968c:	6818      	ldr	r0, [r3, #0]
9002968e:	f000 b82b 	b.w	900296e8 <_malloc_r>
90029692:	bf00      	nop
90029694:	2400015c 	.word	0x2400015c

90029698 <free>:
90029698:	4b02      	ldr	r3, [pc, #8]	; (900296a4 <free+0xc>)
9002969a:	4601      	mov	r1, r0
9002969c:	6818      	ldr	r0, [r3, #0]
9002969e:	f000 bba3 	b.w	90029de8 <_free_r>
900296a2:	bf00      	nop
900296a4:	2400015c 	.word	0x2400015c

900296a8 <sbrk_aligned>:
900296a8:	b570      	push	{r4, r5, r6, lr}
900296aa:	4e0e      	ldr	r6, [pc, #56]	; (900296e4 <sbrk_aligned+0x3c>)
900296ac:	460c      	mov	r4, r1
900296ae:	6831      	ldr	r1, [r6, #0]
900296b0:	4605      	mov	r5, r0
900296b2:	b911      	cbnz	r1, 900296ba <sbrk_aligned+0x12>
900296b4:	f000 fade 	bl	90029c74 <_sbrk_r>
900296b8:	6030      	str	r0, [r6, #0]
900296ba:	4621      	mov	r1, r4
900296bc:	4628      	mov	r0, r5
900296be:	f000 fad9 	bl	90029c74 <_sbrk_r>
900296c2:	1c43      	adds	r3, r0, #1
900296c4:	d00a      	beq.n	900296dc <sbrk_aligned+0x34>
900296c6:	1cc4      	adds	r4, r0, #3
900296c8:	f024 0403 	bic.w	r4, r4, #3
900296cc:	42a0      	cmp	r0, r4
900296ce:	d007      	beq.n	900296e0 <sbrk_aligned+0x38>
900296d0:	1a21      	subs	r1, r4, r0
900296d2:	4628      	mov	r0, r5
900296d4:	f000 face 	bl	90029c74 <_sbrk_r>
900296d8:	3001      	adds	r0, #1
900296da:	d101      	bne.n	900296e0 <sbrk_aligned+0x38>
900296dc:	f04f 34ff 	mov.w	r4, #4294967295
900296e0:	4620      	mov	r0, r4
900296e2:	bd70      	pop	{r4, r5, r6, pc}
900296e4:	2403a424 	.word	0x2403a424

900296e8 <_malloc_r>:
900296e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900296ec:	1ccd      	adds	r5, r1, #3
900296ee:	f025 0503 	bic.w	r5, r5, #3
900296f2:	3508      	adds	r5, #8
900296f4:	2d0c      	cmp	r5, #12
900296f6:	bf38      	it	cc
900296f8:	250c      	movcc	r5, #12
900296fa:	2d00      	cmp	r5, #0
900296fc:	4607      	mov	r7, r0
900296fe:	db01      	blt.n	90029704 <_malloc_r+0x1c>
90029700:	42a9      	cmp	r1, r5
90029702:	d905      	bls.n	90029710 <_malloc_r+0x28>
90029704:	230c      	movs	r3, #12
90029706:	603b      	str	r3, [r7, #0]
90029708:	2600      	movs	r6, #0
9002970a:	4630      	mov	r0, r6
9002970c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029710:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 900297e4 <_malloc_r+0xfc>
90029714:	f000 f868 	bl	900297e8 <__malloc_lock>
90029718:	f8d8 3000 	ldr.w	r3, [r8]
9002971c:	461c      	mov	r4, r3
9002971e:	bb5c      	cbnz	r4, 90029778 <_malloc_r+0x90>
90029720:	4629      	mov	r1, r5
90029722:	4638      	mov	r0, r7
90029724:	f7ff ffc0 	bl	900296a8 <sbrk_aligned>
90029728:	1c43      	adds	r3, r0, #1
9002972a:	4604      	mov	r4, r0
9002972c:	d155      	bne.n	900297da <_malloc_r+0xf2>
9002972e:	f8d8 4000 	ldr.w	r4, [r8]
90029732:	4626      	mov	r6, r4
90029734:	2e00      	cmp	r6, #0
90029736:	d145      	bne.n	900297c4 <_malloc_r+0xdc>
90029738:	2c00      	cmp	r4, #0
9002973a:	d048      	beq.n	900297ce <_malloc_r+0xe6>
9002973c:	6823      	ldr	r3, [r4, #0]
9002973e:	4631      	mov	r1, r6
90029740:	4638      	mov	r0, r7
90029742:	eb04 0903 	add.w	r9, r4, r3
90029746:	f000 fa95 	bl	90029c74 <_sbrk_r>
9002974a:	4581      	cmp	r9, r0
9002974c:	d13f      	bne.n	900297ce <_malloc_r+0xe6>
9002974e:	6821      	ldr	r1, [r4, #0]
90029750:	1a6d      	subs	r5, r5, r1
90029752:	4629      	mov	r1, r5
90029754:	4638      	mov	r0, r7
90029756:	f7ff ffa7 	bl	900296a8 <sbrk_aligned>
9002975a:	3001      	adds	r0, #1
9002975c:	d037      	beq.n	900297ce <_malloc_r+0xe6>
9002975e:	6823      	ldr	r3, [r4, #0]
90029760:	442b      	add	r3, r5
90029762:	6023      	str	r3, [r4, #0]
90029764:	f8d8 3000 	ldr.w	r3, [r8]
90029768:	2b00      	cmp	r3, #0
9002976a:	d038      	beq.n	900297de <_malloc_r+0xf6>
9002976c:	685a      	ldr	r2, [r3, #4]
9002976e:	42a2      	cmp	r2, r4
90029770:	d12b      	bne.n	900297ca <_malloc_r+0xe2>
90029772:	2200      	movs	r2, #0
90029774:	605a      	str	r2, [r3, #4]
90029776:	e00f      	b.n	90029798 <_malloc_r+0xb0>
90029778:	6822      	ldr	r2, [r4, #0]
9002977a:	1b52      	subs	r2, r2, r5
9002977c:	d41f      	bmi.n	900297be <_malloc_r+0xd6>
9002977e:	2a0b      	cmp	r2, #11
90029780:	d917      	bls.n	900297b2 <_malloc_r+0xca>
90029782:	1961      	adds	r1, r4, r5
90029784:	42a3      	cmp	r3, r4
90029786:	6025      	str	r5, [r4, #0]
90029788:	bf18      	it	ne
9002978a:	6059      	strne	r1, [r3, #4]
9002978c:	6863      	ldr	r3, [r4, #4]
9002978e:	bf08      	it	eq
90029790:	f8c8 1000 	streq.w	r1, [r8]
90029794:	5162      	str	r2, [r4, r5]
90029796:	604b      	str	r3, [r1, #4]
90029798:	4638      	mov	r0, r7
9002979a:	f104 060b 	add.w	r6, r4, #11
9002979e:	f000 f829 	bl	900297f4 <__malloc_unlock>
900297a2:	f026 0607 	bic.w	r6, r6, #7
900297a6:	1d23      	adds	r3, r4, #4
900297a8:	1af2      	subs	r2, r6, r3
900297aa:	d0ae      	beq.n	9002970a <_malloc_r+0x22>
900297ac:	1b9b      	subs	r3, r3, r6
900297ae:	50a3      	str	r3, [r4, r2]
900297b0:	e7ab      	b.n	9002970a <_malloc_r+0x22>
900297b2:	42a3      	cmp	r3, r4
900297b4:	6862      	ldr	r2, [r4, #4]
900297b6:	d1dd      	bne.n	90029774 <_malloc_r+0x8c>
900297b8:	f8c8 2000 	str.w	r2, [r8]
900297bc:	e7ec      	b.n	90029798 <_malloc_r+0xb0>
900297be:	4623      	mov	r3, r4
900297c0:	6864      	ldr	r4, [r4, #4]
900297c2:	e7ac      	b.n	9002971e <_malloc_r+0x36>
900297c4:	4634      	mov	r4, r6
900297c6:	6876      	ldr	r6, [r6, #4]
900297c8:	e7b4      	b.n	90029734 <_malloc_r+0x4c>
900297ca:	4613      	mov	r3, r2
900297cc:	e7cc      	b.n	90029768 <_malloc_r+0x80>
900297ce:	230c      	movs	r3, #12
900297d0:	603b      	str	r3, [r7, #0]
900297d2:	4638      	mov	r0, r7
900297d4:	f000 f80e 	bl	900297f4 <__malloc_unlock>
900297d8:	e797      	b.n	9002970a <_malloc_r+0x22>
900297da:	6025      	str	r5, [r4, #0]
900297dc:	e7dc      	b.n	90029798 <_malloc_r+0xb0>
900297de:	605b      	str	r3, [r3, #4]
900297e0:	deff      	udf	#255	; 0xff
900297e2:	bf00      	nop
900297e4:	2403a420 	.word	0x2403a420

900297e8 <__malloc_lock>:
900297e8:	4801      	ldr	r0, [pc, #4]	; (900297f0 <__malloc_lock+0x8>)
900297ea:	f000 ba8f 	b.w	90029d0c <__retarget_lock_acquire_recursive>
900297ee:	bf00      	nop
900297f0:	2403a569 	.word	0x2403a569

900297f4 <__malloc_unlock>:
900297f4:	4801      	ldr	r0, [pc, #4]	; (900297fc <__malloc_unlock+0x8>)
900297f6:	f000 ba8a 	b.w	90029d0e <__retarget_lock_release_recursive>
900297fa:	bf00      	nop
900297fc:	2403a569 	.word	0x2403a569

90029800 <__cxa_atexit>:
90029800:	b510      	push	{r4, lr}
90029802:	4c05      	ldr	r4, [pc, #20]	; (90029818 <__cxa_atexit+0x18>)
90029804:	4613      	mov	r3, r2
90029806:	b12c      	cbz	r4, 90029814 <__cxa_atexit+0x14>
90029808:	460a      	mov	r2, r1
9002980a:	4601      	mov	r1, r0
9002980c:	2002      	movs	r0, #2
9002980e:	f000 fa8d 	bl	90029d2c <__register_exitproc>
90029812:	bd10      	pop	{r4, pc}
90029814:	4620      	mov	r0, r4
90029816:	e7fc      	b.n	90029812 <__cxa_atexit+0x12>
90029818:	90029d2d 	.word	0x90029d2d

9002981c <std>:
9002981c:	2300      	movs	r3, #0
9002981e:	b510      	push	{r4, lr}
90029820:	4604      	mov	r4, r0
90029822:	e9c0 3300 	strd	r3, r3, [r0]
90029826:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002982a:	6083      	str	r3, [r0, #8]
9002982c:	8181      	strh	r1, [r0, #12]
9002982e:	6643      	str	r3, [r0, #100]	; 0x64
90029830:	81c2      	strh	r2, [r0, #14]
90029832:	6183      	str	r3, [r0, #24]
90029834:	4619      	mov	r1, r3
90029836:	2208      	movs	r2, #8
90029838:	305c      	adds	r0, #92	; 0x5c
9002983a:	f000 f989 	bl	90029b50 <memset>
9002983e:	4b05      	ldr	r3, [pc, #20]	; (90029854 <std+0x38>)
90029840:	6263      	str	r3, [r4, #36]	; 0x24
90029842:	4b05      	ldr	r3, [pc, #20]	; (90029858 <std+0x3c>)
90029844:	62a3      	str	r3, [r4, #40]	; 0x28
90029846:	4b05      	ldr	r3, [pc, #20]	; (9002985c <std+0x40>)
90029848:	62e3      	str	r3, [r4, #44]	; 0x2c
9002984a:	4b05      	ldr	r3, [pc, #20]	; (90029860 <std+0x44>)
9002984c:	6224      	str	r4, [r4, #32]
9002984e:	6323      	str	r3, [r4, #48]	; 0x30
90029850:	bd10      	pop	{r4, pc}
90029852:	bf00      	nop
90029854:	900299a1 	.word	0x900299a1
90029858:	900299c3 	.word	0x900299c3
9002985c:	900299fb 	.word	0x900299fb
90029860:	90029a1f 	.word	0x90029a1f

90029864 <stdio_exit_handler>:
90029864:	4a02      	ldr	r2, [pc, #8]	; (90029870 <stdio_exit_handler+0xc>)
90029866:	4903      	ldr	r1, [pc, #12]	; (90029874 <stdio_exit_handler+0x10>)
90029868:	4803      	ldr	r0, [pc, #12]	; (90029878 <stdio_exit_handler+0x14>)
9002986a:	f000 b87b 	b.w	90029964 <_fwalk_sglue>
9002986e:	bf00      	nop
90029870:	24000104 	.word	0x24000104
90029874:	9002a535 	.word	0x9002a535
90029878:	24000110 	.word	0x24000110

9002987c <cleanup_stdio>:
9002987c:	6841      	ldr	r1, [r0, #4]
9002987e:	4b0c      	ldr	r3, [pc, #48]	; (900298b0 <cleanup_stdio+0x34>)
90029880:	4299      	cmp	r1, r3
90029882:	b510      	push	{r4, lr}
90029884:	4604      	mov	r4, r0
90029886:	d001      	beq.n	9002988c <cleanup_stdio+0x10>
90029888:	f000 fe54 	bl	9002a534 <_fflush_r>
9002988c:	68a1      	ldr	r1, [r4, #8]
9002988e:	4b09      	ldr	r3, [pc, #36]	; (900298b4 <cleanup_stdio+0x38>)
90029890:	4299      	cmp	r1, r3
90029892:	d002      	beq.n	9002989a <cleanup_stdio+0x1e>
90029894:	4620      	mov	r0, r4
90029896:	f000 fe4d 	bl	9002a534 <_fflush_r>
9002989a:	68e1      	ldr	r1, [r4, #12]
9002989c:	4b06      	ldr	r3, [pc, #24]	; (900298b8 <cleanup_stdio+0x3c>)
9002989e:	4299      	cmp	r1, r3
900298a0:	d004      	beq.n	900298ac <cleanup_stdio+0x30>
900298a2:	4620      	mov	r0, r4
900298a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900298a8:	f000 be44 	b.w	9002a534 <_fflush_r>
900298ac:	bd10      	pop	{r4, pc}
900298ae:	bf00      	nop
900298b0:	2403a428 	.word	0x2403a428
900298b4:	2403a490 	.word	0x2403a490
900298b8:	2403a4f8 	.word	0x2403a4f8

900298bc <global_stdio_init.part.0>:
900298bc:	b510      	push	{r4, lr}
900298be:	4b0b      	ldr	r3, [pc, #44]	; (900298ec <global_stdio_init.part.0+0x30>)
900298c0:	4c0b      	ldr	r4, [pc, #44]	; (900298f0 <global_stdio_init.part.0+0x34>)
900298c2:	4a0c      	ldr	r2, [pc, #48]	; (900298f4 <global_stdio_init.part.0+0x38>)
900298c4:	601a      	str	r2, [r3, #0]
900298c6:	4620      	mov	r0, r4
900298c8:	2200      	movs	r2, #0
900298ca:	2104      	movs	r1, #4
900298cc:	f7ff ffa6 	bl	9002981c <std>
900298d0:	f104 0068 	add.w	r0, r4, #104	; 0x68
900298d4:	2201      	movs	r2, #1
900298d6:	2109      	movs	r1, #9
900298d8:	f7ff ffa0 	bl	9002981c <std>
900298dc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
900298e0:	2202      	movs	r2, #2
900298e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900298e6:	2112      	movs	r1, #18
900298e8:	f7ff bf98 	b.w	9002981c <std>
900298ec:	2403a560 	.word	0x2403a560
900298f0:	2403a428 	.word	0x2403a428
900298f4:	90029865 	.word	0x90029865

900298f8 <__sfp_lock_acquire>:
900298f8:	4801      	ldr	r0, [pc, #4]	; (90029900 <__sfp_lock_acquire+0x8>)
900298fa:	f000 ba07 	b.w	90029d0c <__retarget_lock_acquire_recursive>
900298fe:	bf00      	nop
90029900:	2403a56a 	.word	0x2403a56a

90029904 <__sfp_lock_release>:
90029904:	4801      	ldr	r0, [pc, #4]	; (9002990c <__sfp_lock_release+0x8>)
90029906:	f000 ba02 	b.w	90029d0e <__retarget_lock_release_recursive>
9002990a:	bf00      	nop
9002990c:	2403a56a 	.word	0x2403a56a

90029910 <__sinit>:
90029910:	b510      	push	{r4, lr}
90029912:	4604      	mov	r4, r0
90029914:	f7ff fff0 	bl	900298f8 <__sfp_lock_acquire>
90029918:	6a23      	ldr	r3, [r4, #32]
9002991a:	b11b      	cbz	r3, 90029924 <__sinit+0x14>
9002991c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029920:	f7ff bff0 	b.w	90029904 <__sfp_lock_release>
90029924:	4b04      	ldr	r3, [pc, #16]	; (90029938 <__sinit+0x28>)
90029926:	6223      	str	r3, [r4, #32]
90029928:	4b04      	ldr	r3, [pc, #16]	; (9002993c <__sinit+0x2c>)
9002992a:	681b      	ldr	r3, [r3, #0]
9002992c:	2b00      	cmp	r3, #0
9002992e:	d1f5      	bne.n	9002991c <__sinit+0xc>
90029930:	f7ff ffc4 	bl	900298bc <global_stdio_init.part.0>
90029934:	e7f2      	b.n	9002991c <__sinit+0xc>
90029936:	bf00      	nop
90029938:	9002987d 	.word	0x9002987d
9002993c:	2403a560 	.word	0x2403a560

90029940 <fiprintf>:
90029940:	b40e      	push	{r1, r2, r3}
90029942:	b503      	push	{r0, r1, lr}
90029944:	4601      	mov	r1, r0
90029946:	ab03      	add	r3, sp, #12
90029948:	4805      	ldr	r0, [pc, #20]	; (90029960 <fiprintf+0x20>)
9002994a:	f853 2b04 	ldr.w	r2, [r3], #4
9002994e:	6800      	ldr	r0, [r0, #0]
90029950:	9301      	str	r3, [sp, #4]
90029952:	f000 fabf 	bl	90029ed4 <_vfiprintf_r>
90029956:	b002      	add	sp, #8
90029958:	f85d eb04 	ldr.w	lr, [sp], #4
9002995c:	b003      	add	sp, #12
9002995e:	4770      	bx	lr
90029960:	2400015c 	.word	0x2400015c

90029964 <_fwalk_sglue>:
90029964:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029968:	4607      	mov	r7, r0
9002996a:	4688      	mov	r8, r1
9002996c:	4614      	mov	r4, r2
9002996e:	2600      	movs	r6, #0
90029970:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
90029974:	f1b9 0901 	subs.w	r9, r9, #1
90029978:	d505      	bpl.n	90029986 <_fwalk_sglue+0x22>
9002997a:	6824      	ldr	r4, [r4, #0]
9002997c:	2c00      	cmp	r4, #0
9002997e:	d1f7      	bne.n	90029970 <_fwalk_sglue+0xc>
90029980:	4630      	mov	r0, r6
90029982:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029986:	89ab      	ldrh	r3, [r5, #12]
90029988:	2b01      	cmp	r3, #1
9002998a:	d907      	bls.n	9002999c <_fwalk_sglue+0x38>
9002998c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
90029990:	3301      	adds	r3, #1
90029992:	d003      	beq.n	9002999c <_fwalk_sglue+0x38>
90029994:	4629      	mov	r1, r5
90029996:	4638      	mov	r0, r7
90029998:	47c0      	blx	r8
9002999a:	4306      	orrs	r6, r0
9002999c:	3568      	adds	r5, #104	; 0x68
9002999e:	e7e9      	b.n	90029974 <_fwalk_sglue+0x10>

900299a0 <__sread>:
900299a0:	b510      	push	{r4, lr}
900299a2:	460c      	mov	r4, r1
900299a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900299a8:	f000 f93e 	bl	90029c28 <_read_r>
900299ac:	2800      	cmp	r0, #0
900299ae:	bfab      	itete	ge
900299b0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
900299b2:	89a3      	ldrhlt	r3, [r4, #12]
900299b4:	181b      	addge	r3, r3, r0
900299b6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
900299ba:	bfac      	ite	ge
900299bc:	6563      	strge	r3, [r4, #84]	; 0x54
900299be:	81a3      	strhlt	r3, [r4, #12]
900299c0:	bd10      	pop	{r4, pc}

900299c2 <__swrite>:
900299c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900299c6:	461f      	mov	r7, r3
900299c8:	898b      	ldrh	r3, [r1, #12]
900299ca:	05db      	lsls	r3, r3, #23
900299cc:	4605      	mov	r5, r0
900299ce:	460c      	mov	r4, r1
900299d0:	4616      	mov	r6, r2
900299d2:	d505      	bpl.n	900299e0 <__swrite+0x1e>
900299d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900299d8:	2302      	movs	r3, #2
900299da:	2200      	movs	r2, #0
900299dc:	f000 f912 	bl	90029c04 <_lseek_r>
900299e0:	89a3      	ldrh	r3, [r4, #12]
900299e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
900299e6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
900299ea:	81a3      	strh	r3, [r4, #12]
900299ec:	4632      	mov	r2, r6
900299ee:	463b      	mov	r3, r7
900299f0:	4628      	mov	r0, r5
900299f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900299f6:	f000 b94d 	b.w	90029c94 <_write_r>

900299fa <__sseek>:
900299fa:	b510      	push	{r4, lr}
900299fc:	460c      	mov	r4, r1
900299fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029a02:	f000 f8ff 	bl	90029c04 <_lseek_r>
90029a06:	1c43      	adds	r3, r0, #1
90029a08:	89a3      	ldrh	r3, [r4, #12]
90029a0a:	bf15      	itete	ne
90029a0c:	6560      	strne	r0, [r4, #84]	; 0x54
90029a0e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
90029a12:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
90029a16:	81a3      	strheq	r3, [r4, #12]
90029a18:	bf18      	it	ne
90029a1a:	81a3      	strhne	r3, [r4, #12]
90029a1c:	bd10      	pop	{r4, pc}

90029a1e <__sclose>:
90029a1e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029a22:	f000 b8df 	b.w	90029be4 <_close_r>

90029a26 <__swbuf_r>:
90029a26:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029a28:	460e      	mov	r6, r1
90029a2a:	4614      	mov	r4, r2
90029a2c:	4605      	mov	r5, r0
90029a2e:	b118      	cbz	r0, 90029a38 <__swbuf_r+0x12>
90029a30:	6a03      	ldr	r3, [r0, #32]
90029a32:	b90b      	cbnz	r3, 90029a38 <__swbuf_r+0x12>
90029a34:	f7ff ff6c 	bl	90029910 <__sinit>
90029a38:	69a3      	ldr	r3, [r4, #24]
90029a3a:	60a3      	str	r3, [r4, #8]
90029a3c:	89a3      	ldrh	r3, [r4, #12]
90029a3e:	071a      	lsls	r2, r3, #28
90029a40:	d525      	bpl.n	90029a8e <__swbuf_r+0x68>
90029a42:	6923      	ldr	r3, [r4, #16]
90029a44:	b31b      	cbz	r3, 90029a8e <__swbuf_r+0x68>
90029a46:	6823      	ldr	r3, [r4, #0]
90029a48:	6922      	ldr	r2, [r4, #16]
90029a4a:	1a98      	subs	r0, r3, r2
90029a4c:	6963      	ldr	r3, [r4, #20]
90029a4e:	b2f6      	uxtb	r6, r6
90029a50:	4283      	cmp	r3, r0
90029a52:	4637      	mov	r7, r6
90029a54:	dc04      	bgt.n	90029a60 <__swbuf_r+0x3a>
90029a56:	4621      	mov	r1, r4
90029a58:	4628      	mov	r0, r5
90029a5a:	f000 fd6b 	bl	9002a534 <_fflush_r>
90029a5e:	b9e0      	cbnz	r0, 90029a9a <__swbuf_r+0x74>
90029a60:	68a3      	ldr	r3, [r4, #8]
90029a62:	3b01      	subs	r3, #1
90029a64:	60a3      	str	r3, [r4, #8]
90029a66:	6823      	ldr	r3, [r4, #0]
90029a68:	1c5a      	adds	r2, r3, #1
90029a6a:	6022      	str	r2, [r4, #0]
90029a6c:	701e      	strb	r6, [r3, #0]
90029a6e:	6962      	ldr	r2, [r4, #20]
90029a70:	1c43      	adds	r3, r0, #1
90029a72:	429a      	cmp	r2, r3
90029a74:	d004      	beq.n	90029a80 <__swbuf_r+0x5a>
90029a76:	89a3      	ldrh	r3, [r4, #12]
90029a78:	07db      	lsls	r3, r3, #31
90029a7a:	d506      	bpl.n	90029a8a <__swbuf_r+0x64>
90029a7c:	2e0a      	cmp	r6, #10
90029a7e:	d104      	bne.n	90029a8a <__swbuf_r+0x64>
90029a80:	4621      	mov	r1, r4
90029a82:	4628      	mov	r0, r5
90029a84:	f000 fd56 	bl	9002a534 <_fflush_r>
90029a88:	b938      	cbnz	r0, 90029a9a <__swbuf_r+0x74>
90029a8a:	4638      	mov	r0, r7
90029a8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90029a8e:	4621      	mov	r1, r4
90029a90:	4628      	mov	r0, r5
90029a92:	f000 f805 	bl	90029aa0 <__swsetup_r>
90029a96:	2800      	cmp	r0, #0
90029a98:	d0d5      	beq.n	90029a46 <__swbuf_r+0x20>
90029a9a:	f04f 37ff 	mov.w	r7, #4294967295
90029a9e:	e7f4      	b.n	90029a8a <__swbuf_r+0x64>

90029aa0 <__swsetup_r>:
90029aa0:	b538      	push	{r3, r4, r5, lr}
90029aa2:	4b2a      	ldr	r3, [pc, #168]	; (90029b4c <__swsetup_r+0xac>)
90029aa4:	4605      	mov	r5, r0
90029aa6:	6818      	ldr	r0, [r3, #0]
90029aa8:	460c      	mov	r4, r1
90029aaa:	b118      	cbz	r0, 90029ab4 <__swsetup_r+0x14>
90029aac:	6a03      	ldr	r3, [r0, #32]
90029aae:	b90b      	cbnz	r3, 90029ab4 <__swsetup_r+0x14>
90029ab0:	f7ff ff2e 	bl	90029910 <__sinit>
90029ab4:	89a3      	ldrh	r3, [r4, #12]
90029ab6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029aba:	0718      	lsls	r0, r3, #28
90029abc:	d422      	bmi.n	90029b04 <__swsetup_r+0x64>
90029abe:	06d9      	lsls	r1, r3, #27
90029ac0:	d407      	bmi.n	90029ad2 <__swsetup_r+0x32>
90029ac2:	2309      	movs	r3, #9
90029ac4:	602b      	str	r3, [r5, #0]
90029ac6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
90029aca:	81a3      	strh	r3, [r4, #12]
90029acc:	f04f 30ff 	mov.w	r0, #4294967295
90029ad0:	e034      	b.n	90029b3c <__swsetup_r+0x9c>
90029ad2:	0758      	lsls	r0, r3, #29
90029ad4:	d512      	bpl.n	90029afc <__swsetup_r+0x5c>
90029ad6:	6b61      	ldr	r1, [r4, #52]	; 0x34
90029ad8:	b141      	cbz	r1, 90029aec <__swsetup_r+0x4c>
90029ada:	f104 0344 	add.w	r3, r4, #68	; 0x44
90029ade:	4299      	cmp	r1, r3
90029ae0:	d002      	beq.n	90029ae8 <__swsetup_r+0x48>
90029ae2:	4628      	mov	r0, r5
90029ae4:	f000 f980 	bl	90029de8 <_free_r>
90029ae8:	2300      	movs	r3, #0
90029aea:	6363      	str	r3, [r4, #52]	; 0x34
90029aec:	89a3      	ldrh	r3, [r4, #12]
90029aee:	f023 0324 	bic.w	r3, r3, #36	; 0x24
90029af2:	81a3      	strh	r3, [r4, #12]
90029af4:	2300      	movs	r3, #0
90029af6:	6063      	str	r3, [r4, #4]
90029af8:	6923      	ldr	r3, [r4, #16]
90029afa:	6023      	str	r3, [r4, #0]
90029afc:	89a3      	ldrh	r3, [r4, #12]
90029afe:	f043 0308 	orr.w	r3, r3, #8
90029b02:	81a3      	strh	r3, [r4, #12]
90029b04:	6923      	ldr	r3, [r4, #16]
90029b06:	b94b      	cbnz	r3, 90029b1c <__swsetup_r+0x7c>
90029b08:	89a3      	ldrh	r3, [r4, #12]
90029b0a:	f403 7320 	and.w	r3, r3, #640	; 0x280
90029b0e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90029b12:	d003      	beq.n	90029b1c <__swsetup_r+0x7c>
90029b14:	4621      	mov	r1, r4
90029b16:	4628      	mov	r0, r5
90029b18:	f000 fd5a 	bl	9002a5d0 <__smakebuf_r>
90029b1c:	89a0      	ldrh	r0, [r4, #12]
90029b1e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029b22:	f010 0301 	ands.w	r3, r0, #1
90029b26:	d00a      	beq.n	90029b3e <__swsetup_r+0x9e>
90029b28:	2300      	movs	r3, #0
90029b2a:	60a3      	str	r3, [r4, #8]
90029b2c:	6963      	ldr	r3, [r4, #20]
90029b2e:	425b      	negs	r3, r3
90029b30:	61a3      	str	r3, [r4, #24]
90029b32:	6923      	ldr	r3, [r4, #16]
90029b34:	b943      	cbnz	r3, 90029b48 <__swsetup_r+0xa8>
90029b36:	f010 0080 	ands.w	r0, r0, #128	; 0x80
90029b3a:	d1c4      	bne.n	90029ac6 <__swsetup_r+0x26>
90029b3c:	bd38      	pop	{r3, r4, r5, pc}
90029b3e:	0781      	lsls	r1, r0, #30
90029b40:	bf58      	it	pl
90029b42:	6963      	ldrpl	r3, [r4, #20]
90029b44:	60a3      	str	r3, [r4, #8]
90029b46:	e7f4      	b.n	90029b32 <__swsetup_r+0x92>
90029b48:	2000      	movs	r0, #0
90029b4a:	e7f7      	b.n	90029b3c <__swsetup_r+0x9c>
90029b4c:	2400015c 	.word	0x2400015c

90029b50 <memset>:
90029b50:	4402      	add	r2, r0
90029b52:	4603      	mov	r3, r0
90029b54:	4293      	cmp	r3, r2
90029b56:	d100      	bne.n	90029b5a <memset+0xa>
90029b58:	4770      	bx	lr
90029b5a:	f803 1b01 	strb.w	r1, [r3], #1
90029b5e:	e7f9      	b.n	90029b54 <memset+0x4>

90029b60 <strncmp>:
90029b60:	b510      	push	{r4, lr}
90029b62:	b16a      	cbz	r2, 90029b80 <strncmp+0x20>
90029b64:	3901      	subs	r1, #1
90029b66:	1884      	adds	r4, r0, r2
90029b68:	f810 2b01 	ldrb.w	r2, [r0], #1
90029b6c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
90029b70:	429a      	cmp	r2, r3
90029b72:	d103      	bne.n	90029b7c <strncmp+0x1c>
90029b74:	42a0      	cmp	r0, r4
90029b76:	d001      	beq.n	90029b7c <strncmp+0x1c>
90029b78:	2a00      	cmp	r2, #0
90029b7a:	d1f5      	bne.n	90029b68 <strncmp+0x8>
90029b7c:	1ad0      	subs	r0, r2, r3
90029b7e:	bd10      	pop	{r4, pc}
90029b80:	4610      	mov	r0, r2
90029b82:	e7fc      	b.n	90029b7e <strncmp+0x1e>

90029b84 <_raise_r>:
90029b84:	291f      	cmp	r1, #31
90029b86:	b538      	push	{r3, r4, r5, lr}
90029b88:	4604      	mov	r4, r0
90029b8a:	460d      	mov	r5, r1
90029b8c:	d904      	bls.n	90029b98 <_raise_r+0x14>
90029b8e:	2316      	movs	r3, #22
90029b90:	6003      	str	r3, [r0, #0]
90029b92:	f04f 30ff 	mov.w	r0, #4294967295
90029b96:	bd38      	pop	{r3, r4, r5, pc}
90029b98:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
90029b9a:	b112      	cbz	r2, 90029ba2 <_raise_r+0x1e>
90029b9c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90029ba0:	b94b      	cbnz	r3, 90029bb6 <_raise_r+0x32>
90029ba2:	4620      	mov	r0, r4
90029ba4:	f000 f864 	bl	90029c70 <_getpid_r>
90029ba8:	462a      	mov	r2, r5
90029baa:	4601      	mov	r1, r0
90029bac:	4620      	mov	r0, r4
90029bae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029bb2:	f000 b84b 	b.w	90029c4c <_kill_r>
90029bb6:	2b01      	cmp	r3, #1
90029bb8:	d00a      	beq.n	90029bd0 <_raise_r+0x4c>
90029bba:	1c59      	adds	r1, r3, #1
90029bbc:	d103      	bne.n	90029bc6 <_raise_r+0x42>
90029bbe:	2316      	movs	r3, #22
90029bc0:	6003      	str	r3, [r0, #0]
90029bc2:	2001      	movs	r0, #1
90029bc4:	e7e7      	b.n	90029b96 <_raise_r+0x12>
90029bc6:	2400      	movs	r4, #0
90029bc8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
90029bcc:	4628      	mov	r0, r5
90029bce:	4798      	blx	r3
90029bd0:	2000      	movs	r0, #0
90029bd2:	e7e0      	b.n	90029b96 <_raise_r+0x12>

90029bd4 <raise>:
90029bd4:	4b02      	ldr	r3, [pc, #8]	; (90029be0 <raise+0xc>)
90029bd6:	4601      	mov	r1, r0
90029bd8:	6818      	ldr	r0, [r3, #0]
90029bda:	f7ff bfd3 	b.w	90029b84 <_raise_r>
90029bde:	bf00      	nop
90029be0:	2400015c 	.word	0x2400015c

90029be4 <_close_r>:
90029be4:	b538      	push	{r3, r4, r5, lr}
90029be6:	4d06      	ldr	r5, [pc, #24]	; (90029c00 <_close_r+0x1c>)
90029be8:	2300      	movs	r3, #0
90029bea:	4604      	mov	r4, r0
90029bec:	4608      	mov	r0, r1
90029bee:	602b      	str	r3, [r5, #0]
90029bf0:	f7d9 fc9e 	bl	90003530 <_close>
90029bf4:	1c43      	adds	r3, r0, #1
90029bf6:	d102      	bne.n	90029bfe <_close_r+0x1a>
90029bf8:	682b      	ldr	r3, [r5, #0]
90029bfa:	b103      	cbz	r3, 90029bfe <_close_r+0x1a>
90029bfc:	6023      	str	r3, [r4, #0]
90029bfe:	bd38      	pop	{r3, r4, r5, pc}
90029c00:	2403a564 	.word	0x2403a564

90029c04 <_lseek_r>:
90029c04:	b538      	push	{r3, r4, r5, lr}
90029c06:	4d07      	ldr	r5, [pc, #28]	; (90029c24 <_lseek_r+0x20>)
90029c08:	4604      	mov	r4, r0
90029c0a:	4608      	mov	r0, r1
90029c0c:	4611      	mov	r1, r2
90029c0e:	2200      	movs	r2, #0
90029c10:	602a      	str	r2, [r5, #0]
90029c12:	461a      	mov	r2, r3
90029c14:	f7d9 fc98 	bl	90003548 <_lseek>
90029c18:	1c43      	adds	r3, r0, #1
90029c1a:	d102      	bne.n	90029c22 <_lseek_r+0x1e>
90029c1c:	682b      	ldr	r3, [r5, #0]
90029c1e:	b103      	cbz	r3, 90029c22 <_lseek_r+0x1e>
90029c20:	6023      	str	r3, [r4, #0]
90029c22:	bd38      	pop	{r3, r4, r5, pc}
90029c24:	2403a564 	.word	0x2403a564

90029c28 <_read_r>:
90029c28:	b538      	push	{r3, r4, r5, lr}
90029c2a:	4d07      	ldr	r5, [pc, #28]	; (90029c48 <_read_r+0x20>)
90029c2c:	4604      	mov	r4, r0
90029c2e:	4608      	mov	r0, r1
90029c30:	4611      	mov	r1, r2
90029c32:	2200      	movs	r2, #0
90029c34:	602a      	str	r2, [r5, #0]
90029c36:	461a      	mov	r2, r3
90029c38:	f7d9 fc5e 	bl	900034f8 <_read>
90029c3c:	1c43      	adds	r3, r0, #1
90029c3e:	d102      	bne.n	90029c46 <_read_r+0x1e>
90029c40:	682b      	ldr	r3, [r5, #0]
90029c42:	b103      	cbz	r3, 90029c46 <_read_r+0x1e>
90029c44:	6023      	str	r3, [r4, #0]
90029c46:	bd38      	pop	{r3, r4, r5, pc}
90029c48:	2403a564 	.word	0x2403a564

90029c4c <_kill_r>:
90029c4c:	b538      	push	{r3, r4, r5, lr}
90029c4e:	4d07      	ldr	r5, [pc, #28]	; (90029c6c <_kill_r+0x20>)
90029c50:	2300      	movs	r3, #0
90029c52:	4604      	mov	r4, r0
90029c54:	4608      	mov	r0, r1
90029c56:	4611      	mov	r1, r2
90029c58:	602b      	str	r3, [r5, #0]
90029c5a:	f7d9 fc3d 	bl	900034d8 <_kill>
90029c5e:	1c43      	adds	r3, r0, #1
90029c60:	d102      	bne.n	90029c68 <_kill_r+0x1c>
90029c62:	682b      	ldr	r3, [r5, #0]
90029c64:	b103      	cbz	r3, 90029c68 <_kill_r+0x1c>
90029c66:	6023      	str	r3, [r4, #0]
90029c68:	bd38      	pop	{r3, r4, r5, pc}
90029c6a:	bf00      	nop
90029c6c:	2403a564 	.word	0x2403a564

90029c70 <_getpid_r>:
90029c70:	f7d9 bc30 	b.w	900034d4 <_getpid>

90029c74 <_sbrk_r>:
90029c74:	b538      	push	{r3, r4, r5, lr}
90029c76:	4d06      	ldr	r5, [pc, #24]	; (90029c90 <_sbrk_r+0x1c>)
90029c78:	2300      	movs	r3, #0
90029c7a:	4604      	mov	r4, r0
90029c7c:	4608      	mov	r0, r1
90029c7e:	602b      	str	r3, [r5, #0]
90029c80:	f000 fd04 	bl	9002a68c <_sbrk>
90029c84:	1c43      	adds	r3, r0, #1
90029c86:	d102      	bne.n	90029c8e <_sbrk_r+0x1a>
90029c88:	682b      	ldr	r3, [r5, #0]
90029c8a:	b103      	cbz	r3, 90029c8e <_sbrk_r+0x1a>
90029c8c:	6023      	str	r3, [r4, #0]
90029c8e:	bd38      	pop	{r3, r4, r5, pc}
90029c90:	2403a564 	.word	0x2403a564

90029c94 <_write_r>:
90029c94:	b538      	push	{r3, r4, r5, lr}
90029c96:	4d07      	ldr	r5, [pc, #28]	; (90029cb4 <_write_r+0x20>)
90029c98:	4604      	mov	r4, r0
90029c9a:	4608      	mov	r0, r1
90029c9c:	4611      	mov	r1, r2
90029c9e:	2200      	movs	r2, #0
90029ca0:	602a      	str	r2, [r5, #0]
90029ca2:	461a      	mov	r2, r3
90029ca4:	f7d9 fc36 	bl	90003514 <_write>
90029ca8:	1c43      	adds	r3, r0, #1
90029caa:	d102      	bne.n	90029cb2 <_write_r+0x1e>
90029cac:	682b      	ldr	r3, [r5, #0]
90029cae:	b103      	cbz	r3, 90029cb2 <_write_r+0x1e>
90029cb0:	6023      	str	r3, [r4, #0]
90029cb2:	bd38      	pop	{r3, r4, r5, pc}
90029cb4:	2403a564 	.word	0x2403a564

90029cb8 <__errno>:
90029cb8:	4b01      	ldr	r3, [pc, #4]	; (90029cc0 <__errno+0x8>)
90029cba:	6818      	ldr	r0, [r3, #0]
90029cbc:	4770      	bx	lr
90029cbe:	bf00      	nop
90029cc0:	2400015c 	.word	0x2400015c

90029cc4 <__libc_init_array>:
90029cc4:	b570      	push	{r4, r5, r6, lr}
90029cc6:	4d0d      	ldr	r5, [pc, #52]	; (90029cfc <__libc_init_array+0x38>)
90029cc8:	4c0d      	ldr	r4, [pc, #52]	; (90029d00 <__libc_init_array+0x3c>)
90029cca:	1b64      	subs	r4, r4, r5
90029ccc:	10a4      	asrs	r4, r4, #2
90029cce:	2600      	movs	r6, #0
90029cd0:	42a6      	cmp	r6, r4
90029cd2:	d109      	bne.n	90029ce8 <__libc_init_array+0x24>
90029cd4:	4d0b      	ldr	r5, [pc, #44]	; (90029d04 <__libc_init_array+0x40>)
90029cd6:	4c0c      	ldr	r4, [pc, #48]	; (90029d08 <__libc_init_array+0x44>)
90029cd8:	f000 fce6 	bl	9002a6a8 <_init>
90029cdc:	1b64      	subs	r4, r4, r5
90029cde:	10a4      	asrs	r4, r4, #2
90029ce0:	2600      	movs	r6, #0
90029ce2:	42a6      	cmp	r6, r4
90029ce4:	d105      	bne.n	90029cf2 <__libc_init_array+0x2e>
90029ce6:	bd70      	pop	{r4, r5, r6, pc}
90029ce8:	f855 3b04 	ldr.w	r3, [r5], #4
90029cec:	4798      	blx	r3
90029cee:	3601      	adds	r6, #1
90029cf0:	e7ee      	b.n	90029cd0 <__libc_init_array+0xc>
90029cf2:	f855 3b04 	ldr.w	r3, [r5], #4
90029cf6:	4798      	blx	r3
90029cf8:	3601      	adds	r6, #1
90029cfa:	e7f2      	b.n	90029ce2 <__libc_init_array+0x1e>
90029cfc:	9002e2d0 	.word	0x9002e2d0
90029d00:	9002e2d0 	.word	0x9002e2d0
90029d04:	9002e2d0 	.word	0x9002e2d0
90029d08:	9002e2f0 	.word	0x9002e2f0

90029d0c <__retarget_lock_acquire_recursive>:
90029d0c:	4770      	bx	lr

90029d0e <__retarget_lock_release_recursive>:
90029d0e:	4770      	bx	lr

90029d10 <memcpy>:
90029d10:	440a      	add	r2, r1
90029d12:	4291      	cmp	r1, r2
90029d14:	f100 33ff 	add.w	r3, r0, #4294967295
90029d18:	d100      	bne.n	90029d1c <memcpy+0xc>
90029d1a:	4770      	bx	lr
90029d1c:	b510      	push	{r4, lr}
90029d1e:	f811 4b01 	ldrb.w	r4, [r1], #1
90029d22:	f803 4f01 	strb.w	r4, [r3, #1]!
90029d26:	4291      	cmp	r1, r2
90029d28:	d1f9      	bne.n	90029d1e <memcpy+0xe>
90029d2a:	bd10      	pop	{r4, pc}

90029d2c <__register_exitproc>:
90029d2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029d30:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90029de4 <__register_exitproc+0xb8>
90029d34:	4606      	mov	r6, r0
90029d36:	f8d8 0000 	ldr.w	r0, [r8]
90029d3a:	461f      	mov	r7, r3
90029d3c:	460d      	mov	r5, r1
90029d3e:	4691      	mov	r9, r2
90029d40:	f7ff ffe4 	bl	90029d0c <__retarget_lock_acquire_recursive>
90029d44:	4b23      	ldr	r3, [pc, #140]	; (90029dd4 <__register_exitproc+0xa8>)
90029d46:	681c      	ldr	r4, [r3, #0]
90029d48:	b934      	cbnz	r4, 90029d58 <__register_exitproc+0x2c>
90029d4a:	4c23      	ldr	r4, [pc, #140]	; (90029dd8 <__register_exitproc+0xac>)
90029d4c:	601c      	str	r4, [r3, #0]
90029d4e:	4b23      	ldr	r3, [pc, #140]	; (90029ddc <__register_exitproc+0xb0>)
90029d50:	b113      	cbz	r3, 90029d58 <__register_exitproc+0x2c>
90029d52:	681b      	ldr	r3, [r3, #0]
90029d54:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
90029d58:	6863      	ldr	r3, [r4, #4]
90029d5a:	2b1f      	cmp	r3, #31
90029d5c:	dd07      	ble.n	90029d6e <__register_exitproc+0x42>
90029d5e:	f8d8 0000 	ldr.w	r0, [r8]
90029d62:	f7ff ffd4 	bl	90029d0e <__retarget_lock_release_recursive>
90029d66:	f04f 30ff 	mov.w	r0, #4294967295
90029d6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029d6e:	b32e      	cbz	r6, 90029dbc <__register_exitproc+0x90>
90029d70:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
90029d74:	b968      	cbnz	r0, 90029d92 <__register_exitproc+0x66>
90029d76:	4b1a      	ldr	r3, [pc, #104]	; (90029de0 <__register_exitproc+0xb4>)
90029d78:	2b00      	cmp	r3, #0
90029d7a:	d0f0      	beq.n	90029d5e <__register_exitproc+0x32>
90029d7c:	f44f 7084 	mov.w	r0, #264	; 0x108
90029d80:	f7ff fc82 	bl	90029688 <malloc>
90029d84:	2800      	cmp	r0, #0
90029d86:	d0ea      	beq.n	90029d5e <__register_exitproc+0x32>
90029d88:	2300      	movs	r3, #0
90029d8a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
90029d8e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
90029d92:	6863      	ldr	r3, [r4, #4]
90029d94:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90029d98:	2201      	movs	r2, #1
90029d9a:	409a      	lsls	r2, r3
90029d9c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90029da0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
90029da4:	4313      	orrs	r3, r2
90029da6:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
90029daa:	2e02      	cmp	r6, #2
90029dac:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
90029db0:	bf02      	ittt	eq
90029db2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
90029db6:	4313      	orreq	r3, r2
90029db8:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
90029dbc:	6863      	ldr	r3, [r4, #4]
90029dbe:	f8d8 0000 	ldr.w	r0, [r8]
90029dc2:	1c5a      	adds	r2, r3, #1
90029dc4:	3302      	adds	r3, #2
90029dc6:	6062      	str	r2, [r4, #4]
90029dc8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90029dcc:	f7ff ff9f 	bl	90029d0e <__retarget_lock_release_recursive>
90029dd0:	2000      	movs	r0, #0
90029dd2:	e7ca      	b.n	90029d6a <__register_exitproc+0x3e>
90029dd4:	2403a5f8 	.word	0x2403a5f8
90029dd8:	2403a56c 	.word	0x2403a56c
90029ddc:	9002e190 	.word	0x9002e190
90029de0:	90029689 	.word	0x90029689
90029de4:	24000160 	.word	0x24000160

90029de8 <_free_r>:
90029de8:	b537      	push	{r0, r1, r2, r4, r5, lr}
90029dea:	2900      	cmp	r1, #0
90029dec:	d044      	beq.n	90029e78 <_free_r+0x90>
90029dee:	f851 3c04 	ldr.w	r3, [r1, #-4]
90029df2:	9001      	str	r0, [sp, #4]
90029df4:	2b00      	cmp	r3, #0
90029df6:	f1a1 0404 	sub.w	r4, r1, #4
90029dfa:	bfb8      	it	lt
90029dfc:	18e4      	addlt	r4, r4, r3
90029dfe:	f7ff fcf3 	bl	900297e8 <__malloc_lock>
90029e02:	4a1e      	ldr	r2, [pc, #120]	; (90029e7c <_free_r+0x94>)
90029e04:	9801      	ldr	r0, [sp, #4]
90029e06:	6813      	ldr	r3, [r2, #0]
90029e08:	b933      	cbnz	r3, 90029e18 <_free_r+0x30>
90029e0a:	6063      	str	r3, [r4, #4]
90029e0c:	6014      	str	r4, [r2, #0]
90029e0e:	b003      	add	sp, #12
90029e10:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90029e14:	f7ff bcee 	b.w	900297f4 <__malloc_unlock>
90029e18:	42a3      	cmp	r3, r4
90029e1a:	d908      	bls.n	90029e2e <_free_r+0x46>
90029e1c:	6825      	ldr	r5, [r4, #0]
90029e1e:	1961      	adds	r1, r4, r5
90029e20:	428b      	cmp	r3, r1
90029e22:	bf01      	itttt	eq
90029e24:	6819      	ldreq	r1, [r3, #0]
90029e26:	685b      	ldreq	r3, [r3, #4]
90029e28:	1949      	addeq	r1, r1, r5
90029e2a:	6021      	streq	r1, [r4, #0]
90029e2c:	e7ed      	b.n	90029e0a <_free_r+0x22>
90029e2e:	461a      	mov	r2, r3
90029e30:	685b      	ldr	r3, [r3, #4]
90029e32:	b10b      	cbz	r3, 90029e38 <_free_r+0x50>
90029e34:	42a3      	cmp	r3, r4
90029e36:	d9fa      	bls.n	90029e2e <_free_r+0x46>
90029e38:	6811      	ldr	r1, [r2, #0]
90029e3a:	1855      	adds	r5, r2, r1
90029e3c:	42a5      	cmp	r5, r4
90029e3e:	d10b      	bne.n	90029e58 <_free_r+0x70>
90029e40:	6824      	ldr	r4, [r4, #0]
90029e42:	4421      	add	r1, r4
90029e44:	1854      	adds	r4, r2, r1
90029e46:	42a3      	cmp	r3, r4
90029e48:	6011      	str	r1, [r2, #0]
90029e4a:	d1e0      	bne.n	90029e0e <_free_r+0x26>
90029e4c:	681c      	ldr	r4, [r3, #0]
90029e4e:	685b      	ldr	r3, [r3, #4]
90029e50:	6053      	str	r3, [r2, #4]
90029e52:	440c      	add	r4, r1
90029e54:	6014      	str	r4, [r2, #0]
90029e56:	e7da      	b.n	90029e0e <_free_r+0x26>
90029e58:	d902      	bls.n	90029e60 <_free_r+0x78>
90029e5a:	230c      	movs	r3, #12
90029e5c:	6003      	str	r3, [r0, #0]
90029e5e:	e7d6      	b.n	90029e0e <_free_r+0x26>
90029e60:	6825      	ldr	r5, [r4, #0]
90029e62:	1961      	adds	r1, r4, r5
90029e64:	428b      	cmp	r3, r1
90029e66:	bf04      	itt	eq
90029e68:	6819      	ldreq	r1, [r3, #0]
90029e6a:	685b      	ldreq	r3, [r3, #4]
90029e6c:	6063      	str	r3, [r4, #4]
90029e6e:	bf04      	itt	eq
90029e70:	1949      	addeq	r1, r1, r5
90029e72:	6021      	streq	r1, [r4, #0]
90029e74:	6054      	str	r4, [r2, #4]
90029e76:	e7ca      	b.n	90029e0e <_free_r+0x26>
90029e78:	b003      	add	sp, #12
90029e7a:	bd30      	pop	{r4, r5, pc}
90029e7c:	2403a420 	.word	0x2403a420

90029e80 <__sfputc_r>:
90029e80:	6893      	ldr	r3, [r2, #8]
90029e82:	3b01      	subs	r3, #1
90029e84:	2b00      	cmp	r3, #0
90029e86:	b410      	push	{r4}
90029e88:	6093      	str	r3, [r2, #8]
90029e8a:	da08      	bge.n	90029e9e <__sfputc_r+0x1e>
90029e8c:	6994      	ldr	r4, [r2, #24]
90029e8e:	42a3      	cmp	r3, r4
90029e90:	db01      	blt.n	90029e96 <__sfputc_r+0x16>
90029e92:	290a      	cmp	r1, #10
90029e94:	d103      	bne.n	90029e9e <__sfputc_r+0x1e>
90029e96:	f85d 4b04 	ldr.w	r4, [sp], #4
90029e9a:	f7ff bdc4 	b.w	90029a26 <__swbuf_r>
90029e9e:	6813      	ldr	r3, [r2, #0]
90029ea0:	1c58      	adds	r0, r3, #1
90029ea2:	6010      	str	r0, [r2, #0]
90029ea4:	7019      	strb	r1, [r3, #0]
90029ea6:	4608      	mov	r0, r1
90029ea8:	f85d 4b04 	ldr.w	r4, [sp], #4
90029eac:	4770      	bx	lr

90029eae <__sfputs_r>:
90029eae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029eb0:	4606      	mov	r6, r0
90029eb2:	460f      	mov	r7, r1
90029eb4:	4614      	mov	r4, r2
90029eb6:	18d5      	adds	r5, r2, r3
90029eb8:	42ac      	cmp	r4, r5
90029eba:	d101      	bne.n	90029ec0 <__sfputs_r+0x12>
90029ebc:	2000      	movs	r0, #0
90029ebe:	e007      	b.n	90029ed0 <__sfputs_r+0x22>
90029ec0:	f814 1b01 	ldrb.w	r1, [r4], #1
90029ec4:	463a      	mov	r2, r7
90029ec6:	4630      	mov	r0, r6
90029ec8:	f7ff ffda 	bl	90029e80 <__sfputc_r>
90029ecc:	1c43      	adds	r3, r0, #1
90029ece:	d1f3      	bne.n	90029eb8 <__sfputs_r+0xa>
90029ed0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90029ed4 <_vfiprintf_r>:
90029ed4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029ed8:	460d      	mov	r5, r1
90029eda:	b09d      	sub	sp, #116	; 0x74
90029edc:	4614      	mov	r4, r2
90029ede:	4698      	mov	r8, r3
90029ee0:	4606      	mov	r6, r0
90029ee2:	b118      	cbz	r0, 90029eec <_vfiprintf_r+0x18>
90029ee4:	6a03      	ldr	r3, [r0, #32]
90029ee6:	b90b      	cbnz	r3, 90029eec <_vfiprintf_r+0x18>
90029ee8:	f7ff fd12 	bl	90029910 <__sinit>
90029eec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90029eee:	07d9      	lsls	r1, r3, #31
90029ef0:	d405      	bmi.n	90029efe <_vfiprintf_r+0x2a>
90029ef2:	89ab      	ldrh	r3, [r5, #12]
90029ef4:	059a      	lsls	r2, r3, #22
90029ef6:	d402      	bmi.n	90029efe <_vfiprintf_r+0x2a>
90029ef8:	6da8      	ldr	r0, [r5, #88]	; 0x58
90029efa:	f7ff ff07 	bl	90029d0c <__retarget_lock_acquire_recursive>
90029efe:	89ab      	ldrh	r3, [r5, #12]
90029f00:	071b      	lsls	r3, r3, #28
90029f02:	d501      	bpl.n	90029f08 <_vfiprintf_r+0x34>
90029f04:	692b      	ldr	r3, [r5, #16]
90029f06:	b99b      	cbnz	r3, 90029f30 <_vfiprintf_r+0x5c>
90029f08:	4629      	mov	r1, r5
90029f0a:	4630      	mov	r0, r6
90029f0c:	f7ff fdc8 	bl	90029aa0 <__swsetup_r>
90029f10:	b170      	cbz	r0, 90029f30 <_vfiprintf_r+0x5c>
90029f12:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90029f14:	07dc      	lsls	r4, r3, #31
90029f16:	d504      	bpl.n	90029f22 <_vfiprintf_r+0x4e>
90029f18:	f04f 30ff 	mov.w	r0, #4294967295
90029f1c:	b01d      	add	sp, #116	; 0x74
90029f1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029f22:	89ab      	ldrh	r3, [r5, #12]
90029f24:	0598      	lsls	r0, r3, #22
90029f26:	d4f7      	bmi.n	90029f18 <_vfiprintf_r+0x44>
90029f28:	6da8      	ldr	r0, [r5, #88]	; 0x58
90029f2a:	f7ff fef0 	bl	90029d0e <__retarget_lock_release_recursive>
90029f2e:	e7f3      	b.n	90029f18 <_vfiprintf_r+0x44>
90029f30:	2300      	movs	r3, #0
90029f32:	9309      	str	r3, [sp, #36]	; 0x24
90029f34:	2320      	movs	r3, #32
90029f36:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90029f3a:	f8cd 800c 	str.w	r8, [sp, #12]
90029f3e:	2330      	movs	r3, #48	; 0x30
90029f40:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 9002a0f4 <_vfiprintf_r+0x220>
90029f44:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
90029f48:	f04f 0901 	mov.w	r9, #1
90029f4c:	4623      	mov	r3, r4
90029f4e:	469a      	mov	sl, r3
90029f50:	f813 2b01 	ldrb.w	r2, [r3], #1
90029f54:	b10a      	cbz	r2, 90029f5a <_vfiprintf_r+0x86>
90029f56:	2a25      	cmp	r2, #37	; 0x25
90029f58:	d1f9      	bne.n	90029f4e <_vfiprintf_r+0x7a>
90029f5a:	ebba 0b04 	subs.w	fp, sl, r4
90029f5e:	d00b      	beq.n	90029f78 <_vfiprintf_r+0xa4>
90029f60:	465b      	mov	r3, fp
90029f62:	4622      	mov	r2, r4
90029f64:	4629      	mov	r1, r5
90029f66:	4630      	mov	r0, r6
90029f68:	f7ff ffa1 	bl	90029eae <__sfputs_r>
90029f6c:	3001      	adds	r0, #1
90029f6e:	f000 80a9 	beq.w	9002a0c4 <_vfiprintf_r+0x1f0>
90029f72:	9a09      	ldr	r2, [sp, #36]	; 0x24
90029f74:	445a      	add	r2, fp
90029f76:	9209      	str	r2, [sp, #36]	; 0x24
90029f78:	f89a 3000 	ldrb.w	r3, [sl]
90029f7c:	2b00      	cmp	r3, #0
90029f7e:	f000 80a1 	beq.w	9002a0c4 <_vfiprintf_r+0x1f0>
90029f82:	2300      	movs	r3, #0
90029f84:	f04f 32ff 	mov.w	r2, #4294967295
90029f88:	e9cd 2305 	strd	r2, r3, [sp, #20]
90029f8c:	f10a 0a01 	add.w	sl, sl, #1
90029f90:	9304      	str	r3, [sp, #16]
90029f92:	9307      	str	r3, [sp, #28]
90029f94:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
90029f98:	931a      	str	r3, [sp, #104]	; 0x68
90029f9a:	4654      	mov	r4, sl
90029f9c:	2205      	movs	r2, #5
90029f9e:	f814 1b01 	ldrb.w	r1, [r4], #1
90029fa2:	4854      	ldr	r0, [pc, #336]	; (9002a0f4 <_vfiprintf_r+0x220>)
90029fa4:	f7d6 f99c 	bl	900002e0 <memchr>
90029fa8:	9a04      	ldr	r2, [sp, #16]
90029faa:	b9d8      	cbnz	r0, 90029fe4 <_vfiprintf_r+0x110>
90029fac:	06d1      	lsls	r1, r2, #27
90029fae:	bf44      	itt	mi
90029fb0:	2320      	movmi	r3, #32
90029fb2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90029fb6:	0713      	lsls	r3, r2, #28
90029fb8:	bf44      	itt	mi
90029fba:	232b      	movmi	r3, #43	; 0x2b
90029fbc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90029fc0:	f89a 3000 	ldrb.w	r3, [sl]
90029fc4:	2b2a      	cmp	r3, #42	; 0x2a
90029fc6:	d015      	beq.n	90029ff4 <_vfiprintf_r+0x120>
90029fc8:	9a07      	ldr	r2, [sp, #28]
90029fca:	4654      	mov	r4, sl
90029fcc:	2000      	movs	r0, #0
90029fce:	f04f 0c0a 	mov.w	ip, #10
90029fd2:	4621      	mov	r1, r4
90029fd4:	f811 3b01 	ldrb.w	r3, [r1], #1
90029fd8:	3b30      	subs	r3, #48	; 0x30
90029fda:	2b09      	cmp	r3, #9
90029fdc:	d94d      	bls.n	9002a07a <_vfiprintf_r+0x1a6>
90029fde:	b1b0      	cbz	r0, 9002a00e <_vfiprintf_r+0x13a>
90029fe0:	9207      	str	r2, [sp, #28]
90029fe2:	e014      	b.n	9002a00e <_vfiprintf_r+0x13a>
90029fe4:	eba0 0308 	sub.w	r3, r0, r8
90029fe8:	fa09 f303 	lsl.w	r3, r9, r3
90029fec:	4313      	orrs	r3, r2
90029fee:	9304      	str	r3, [sp, #16]
90029ff0:	46a2      	mov	sl, r4
90029ff2:	e7d2      	b.n	90029f9a <_vfiprintf_r+0xc6>
90029ff4:	9b03      	ldr	r3, [sp, #12]
90029ff6:	1d19      	adds	r1, r3, #4
90029ff8:	681b      	ldr	r3, [r3, #0]
90029ffa:	9103      	str	r1, [sp, #12]
90029ffc:	2b00      	cmp	r3, #0
90029ffe:	bfbb      	ittet	lt
9002a000:	425b      	neglt	r3, r3
9002a002:	f042 0202 	orrlt.w	r2, r2, #2
9002a006:	9307      	strge	r3, [sp, #28]
9002a008:	9307      	strlt	r3, [sp, #28]
9002a00a:	bfb8      	it	lt
9002a00c:	9204      	strlt	r2, [sp, #16]
9002a00e:	7823      	ldrb	r3, [r4, #0]
9002a010:	2b2e      	cmp	r3, #46	; 0x2e
9002a012:	d10c      	bne.n	9002a02e <_vfiprintf_r+0x15a>
9002a014:	7863      	ldrb	r3, [r4, #1]
9002a016:	2b2a      	cmp	r3, #42	; 0x2a
9002a018:	d134      	bne.n	9002a084 <_vfiprintf_r+0x1b0>
9002a01a:	9b03      	ldr	r3, [sp, #12]
9002a01c:	1d1a      	adds	r2, r3, #4
9002a01e:	681b      	ldr	r3, [r3, #0]
9002a020:	9203      	str	r2, [sp, #12]
9002a022:	2b00      	cmp	r3, #0
9002a024:	bfb8      	it	lt
9002a026:	f04f 33ff 	movlt.w	r3, #4294967295
9002a02a:	3402      	adds	r4, #2
9002a02c:	9305      	str	r3, [sp, #20]
9002a02e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 9002a104 <_vfiprintf_r+0x230>
9002a032:	7821      	ldrb	r1, [r4, #0]
9002a034:	2203      	movs	r2, #3
9002a036:	4650      	mov	r0, sl
9002a038:	f7d6 f952 	bl	900002e0 <memchr>
9002a03c:	b138      	cbz	r0, 9002a04e <_vfiprintf_r+0x17a>
9002a03e:	9b04      	ldr	r3, [sp, #16]
9002a040:	eba0 000a 	sub.w	r0, r0, sl
9002a044:	2240      	movs	r2, #64	; 0x40
9002a046:	4082      	lsls	r2, r0
9002a048:	4313      	orrs	r3, r2
9002a04a:	3401      	adds	r4, #1
9002a04c:	9304      	str	r3, [sp, #16]
9002a04e:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a052:	4829      	ldr	r0, [pc, #164]	; (9002a0f8 <_vfiprintf_r+0x224>)
9002a054:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
9002a058:	2206      	movs	r2, #6
9002a05a:	f7d6 f941 	bl	900002e0 <memchr>
9002a05e:	2800      	cmp	r0, #0
9002a060:	d03f      	beq.n	9002a0e2 <_vfiprintf_r+0x20e>
9002a062:	4b26      	ldr	r3, [pc, #152]	; (9002a0fc <_vfiprintf_r+0x228>)
9002a064:	bb1b      	cbnz	r3, 9002a0ae <_vfiprintf_r+0x1da>
9002a066:	9b03      	ldr	r3, [sp, #12]
9002a068:	3307      	adds	r3, #7
9002a06a:	f023 0307 	bic.w	r3, r3, #7
9002a06e:	3308      	adds	r3, #8
9002a070:	9303      	str	r3, [sp, #12]
9002a072:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002a074:	443b      	add	r3, r7
9002a076:	9309      	str	r3, [sp, #36]	; 0x24
9002a078:	e768      	b.n	90029f4c <_vfiprintf_r+0x78>
9002a07a:	fb0c 3202 	mla	r2, ip, r2, r3
9002a07e:	460c      	mov	r4, r1
9002a080:	2001      	movs	r0, #1
9002a082:	e7a6      	b.n	90029fd2 <_vfiprintf_r+0xfe>
9002a084:	2300      	movs	r3, #0
9002a086:	3401      	adds	r4, #1
9002a088:	9305      	str	r3, [sp, #20]
9002a08a:	4619      	mov	r1, r3
9002a08c:	f04f 0c0a 	mov.w	ip, #10
9002a090:	4620      	mov	r0, r4
9002a092:	f810 2b01 	ldrb.w	r2, [r0], #1
9002a096:	3a30      	subs	r2, #48	; 0x30
9002a098:	2a09      	cmp	r2, #9
9002a09a:	d903      	bls.n	9002a0a4 <_vfiprintf_r+0x1d0>
9002a09c:	2b00      	cmp	r3, #0
9002a09e:	d0c6      	beq.n	9002a02e <_vfiprintf_r+0x15a>
9002a0a0:	9105      	str	r1, [sp, #20]
9002a0a2:	e7c4      	b.n	9002a02e <_vfiprintf_r+0x15a>
9002a0a4:	fb0c 2101 	mla	r1, ip, r1, r2
9002a0a8:	4604      	mov	r4, r0
9002a0aa:	2301      	movs	r3, #1
9002a0ac:	e7f0      	b.n	9002a090 <_vfiprintf_r+0x1bc>
9002a0ae:	ab03      	add	r3, sp, #12
9002a0b0:	9300      	str	r3, [sp, #0]
9002a0b2:	462a      	mov	r2, r5
9002a0b4:	4b12      	ldr	r3, [pc, #72]	; (9002a100 <_vfiprintf_r+0x22c>)
9002a0b6:	a904      	add	r1, sp, #16
9002a0b8:	4630      	mov	r0, r6
9002a0ba:	f3af 8000 	nop.w
9002a0be:	4607      	mov	r7, r0
9002a0c0:	1c78      	adds	r0, r7, #1
9002a0c2:	d1d6      	bne.n	9002a072 <_vfiprintf_r+0x19e>
9002a0c4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002a0c6:	07d9      	lsls	r1, r3, #31
9002a0c8:	d405      	bmi.n	9002a0d6 <_vfiprintf_r+0x202>
9002a0ca:	89ab      	ldrh	r3, [r5, #12]
9002a0cc:	059a      	lsls	r2, r3, #22
9002a0ce:	d402      	bmi.n	9002a0d6 <_vfiprintf_r+0x202>
9002a0d0:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002a0d2:	f7ff fe1c 	bl	90029d0e <__retarget_lock_release_recursive>
9002a0d6:	89ab      	ldrh	r3, [r5, #12]
9002a0d8:	065b      	lsls	r3, r3, #25
9002a0da:	f53f af1d 	bmi.w	90029f18 <_vfiprintf_r+0x44>
9002a0de:	9809      	ldr	r0, [sp, #36]	; 0x24
9002a0e0:	e71c      	b.n	90029f1c <_vfiprintf_r+0x48>
9002a0e2:	ab03      	add	r3, sp, #12
9002a0e4:	9300      	str	r3, [sp, #0]
9002a0e6:	462a      	mov	r2, r5
9002a0e8:	4b05      	ldr	r3, [pc, #20]	; (9002a100 <_vfiprintf_r+0x22c>)
9002a0ea:	a904      	add	r1, sp, #16
9002a0ec:	4630      	mov	r0, r6
9002a0ee:	f000 f879 	bl	9002a1e4 <_printf_i>
9002a0f2:	e7e4      	b.n	9002a0be <_vfiprintf_r+0x1ea>
9002a0f4:	9002e194 	.word	0x9002e194
9002a0f8:	9002e19e 	.word	0x9002e19e
9002a0fc:	00000000 	.word	0x00000000
9002a100:	90029eaf 	.word	0x90029eaf
9002a104:	9002e19a 	.word	0x9002e19a

9002a108 <_printf_common>:
9002a108:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002a10c:	4616      	mov	r6, r2
9002a10e:	4699      	mov	r9, r3
9002a110:	688a      	ldr	r2, [r1, #8]
9002a112:	690b      	ldr	r3, [r1, #16]
9002a114:	f8dd 8020 	ldr.w	r8, [sp, #32]
9002a118:	4293      	cmp	r3, r2
9002a11a:	bfb8      	it	lt
9002a11c:	4613      	movlt	r3, r2
9002a11e:	6033      	str	r3, [r6, #0]
9002a120:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
9002a124:	4607      	mov	r7, r0
9002a126:	460c      	mov	r4, r1
9002a128:	b10a      	cbz	r2, 9002a12e <_printf_common+0x26>
9002a12a:	3301      	adds	r3, #1
9002a12c:	6033      	str	r3, [r6, #0]
9002a12e:	6823      	ldr	r3, [r4, #0]
9002a130:	0699      	lsls	r1, r3, #26
9002a132:	bf42      	ittt	mi
9002a134:	6833      	ldrmi	r3, [r6, #0]
9002a136:	3302      	addmi	r3, #2
9002a138:	6033      	strmi	r3, [r6, #0]
9002a13a:	6825      	ldr	r5, [r4, #0]
9002a13c:	f015 0506 	ands.w	r5, r5, #6
9002a140:	d106      	bne.n	9002a150 <_printf_common+0x48>
9002a142:	f104 0a19 	add.w	sl, r4, #25
9002a146:	68e3      	ldr	r3, [r4, #12]
9002a148:	6832      	ldr	r2, [r6, #0]
9002a14a:	1a9b      	subs	r3, r3, r2
9002a14c:	42ab      	cmp	r3, r5
9002a14e:	dc26      	bgt.n	9002a19e <_printf_common+0x96>
9002a150:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
9002a154:	1e13      	subs	r3, r2, #0
9002a156:	6822      	ldr	r2, [r4, #0]
9002a158:	bf18      	it	ne
9002a15a:	2301      	movne	r3, #1
9002a15c:	0692      	lsls	r2, r2, #26
9002a15e:	d42b      	bmi.n	9002a1b8 <_printf_common+0xb0>
9002a160:	f104 0243 	add.w	r2, r4, #67	; 0x43
9002a164:	4649      	mov	r1, r9
9002a166:	4638      	mov	r0, r7
9002a168:	47c0      	blx	r8
9002a16a:	3001      	adds	r0, #1
9002a16c:	d01e      	beq.n	9002a1ac <_printf_common+0xa4>
9002a16e:	6823      	ldr	r3, [r4, #0]
9002a170:	6922      	ldr	r2, [r4, #16]
9002a172:	f003 0306 	and.w	r3, r3, #6
9002a176:	2b04      	cmp	r3, #4
9002a178:	bf02      	ittt	eq
9002a17a:	68e5      	ldreq	r5, [r4, #12]
9002a17c:	6833      	ldreq	r3, [r6, #0]
9002a17e:	1aed      	subeq	r5, r5, r3
9002a180:	68a3      	ldr	r3, [r4, #8]
9002a182:	bf0c      	ite	eq
9002a184:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002a188:	2500      	movne	r5, #0
9002a18a:	4293      	cmp	r3, r2
9002a18c:	bfc4      	itt	gt
9002a18e:	1a9b      	subgt	r3, r3, r2
9002a190:	18ed      	addgt	r5, r5, r3
9002a192:	2600      	movs	r6, #0
9002a194:	341a      	adds	r4, #26
9002a196:	42b5      	cmp	r5, r6
9002a198:	d11a      	bne.n	9002a1d0 <_printf_common+0xc8>
9002a19a:	2000      	movs	r0, #0
9002a19c:	e008      	b.n	9002a1b0 <_printf_common+0xa8>
9002a19e:	2301      	movs	r3, #1
9002a1a0:	4652      	mov	r2, sl
9002a1a2:	4649      	mov	r1, r9
9002a1a4:	4638      	mov	r0, r7
9002a1a6:	47c0      	blx	r8
9002a1a8:	3001      	adds	r0, #1
9002a1aa:	d103      	bne.n	9002a1b4 <_printf_common+0xac>
9002a1ac:	f04f 30ff 	mov.w	r0, #4294967295
9002a1b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a1b4:	3501      	adds	r5, #1
9002a1b6:	e7c6      	b.n	9002a146 <_printf_common+0x3e>
9002a1b8:	18e1      	adds	r1, r4, r3
9002a1ba:	1c5a      	adds	r2, r3, #1
9002a1bc:	2030      	movs	r0, #48	; 0x30
9002a1be:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
9002a1c2:	4422      	add	r2, r4
9002a1c4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
9002a1c8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
9002a1cc:	3302      	adds	r3, #2
9002a1ce:	e7c7      	b.n	9002a160 <_printf_common+0x58>
9002a1d0:	2301      	movs	r3, #1
9002a1d2:	4622      	mov	r2, r4
9002a1d4:	4649      	mov	r1, r9
9002a1d6:	4638      	mov	r0, r7
9002a1d8:	47c0      	blx	r8
9002a1da:	3001      	adds	r0, #1
9002a1dc:	d0e6      	beq.n	9002a1ac <_printf_common+0xa4>
9002a1de:	3601      	adds	r6, #1
9002a1e0:	e7d9      	b.n	9002a196 <_printf_common+0x8e>
	...

9002a1e4 <_printf_i>:
9002a1e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002a1e8:	7e0f      	ldrb	r7, [r1, #24]
9002a1ea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002a1ec:	2f78      	cmp	r7, #120	; 0x78
9002a1ee:	4691      	mov	r9, r2
9002a1f0:	4680      	mov	r8, r0
9002a1f2:	460c      	mov	r4, r1
9002a1f4:	469a      	mov	sl, r3
9002a1f6:	f101 0243 	add.w	r2, r1, #67	; 0x43
9002a1fa:	d807      	bhi.n	9002a20c <_printf_i+0x28>
9002a1fc:	2f62      	cmp	r7, #98	; 0x62
9002a1fe:	d80a      	bhi.n	9002a216 <_printf_i+0x32>
9002a200:	2f00      	cmp	r7, #0
9002a202:	f000 80d4 	beq.w	9002a3ae <_printf_i+0x1ca>
9002a206:	2f58      	cmp	r7, #88	; 0x58
9002a208:	f000 80c0 	beq.w	9002a38c <_printf_i+0x1a8>
9002a20c:	f104 0542 	add.w	r5, r4, #66	; 0x42
9002a210:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
9002a214:	e03a      	b.n	9002a28c <_printf_i+0xa8>
9002a216:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
9002a21a:	2b15      	cmp	r3, #21
9002a21c:	d8f6      	bhi.n	9002a20c <_printf_i+0x28>
9002a21e:	a101      	add	r1, pc, #4	; (adr r1, 9002a224 <_printf_i+0x40>)
9002a220:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002a224:	9002a27d 	.word	0x9002a27d
9002a228:	9002a291 	.word	0x9002a291
9002a22c:	9002a20d 	.word	0x9002a20d
9002a230:	9002a20d 	.word	0x9002a20d
9002a234:	9002a20d 	.word	0x9002a20d
9002a238:	9002a20d 	.word	0x9002a20d
9002a23c:	9002a291 	.word	0x9002a291
9002a240:	9002a20d 	.word	0x9002a20d
9002a244:	9002a20d 	.word	0x9002a20d
9002a248:	9002a20d 	.word	0x9002a20d
9002a24c:	9002a20d 	.word	0x9002a20d
9002a250:	9002a395 	.word	0x9002a395
9002a254:	9002a2bd 	.word	0x9002a2bd
9002a258:	9002a34f 	.word	0x9002a34f
9002a25c:	9002a20d 	.word	0x9002a20d
9002a260:	9002a20d 	.word	0x9002a20d
9002a264:	9002a3b7 	.word	0x9002a3b7
9002a268:	9002a20d 	.word	0x9002a20d
9002a26c:	9002a2bd 	.word	0x9002a2bd
9002a270:	9002a20d 	.word	0x9002a20d
9002a274:	9002a20d 	.word	0x9002a20d
9002a278:	9002a357 	.word	0x9002a357
9002a27c:	682b      	ldr	r3, [r5, #0]
9002a27e:	1d1a      	adds	r2, r3, #4
9002a280:	681b      	ldr	r3, [r3, #0]
9002a282:	602a      	str	r2, [r5, #0]
9002a284:	f104 0542 	add.w	r5, r4, #66	; 0x42
9002a288:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9002a28c:	2301      	movs	r3, #1
9002a28e:	e09f      	b.n	9002a3d0 <_printf_i+0x1ec>
9002a290:	6820      	ldr	r0, [r4, #0]
9002a292:	682b      	ldr	r3, [r5, #0]
9002a294:	0607      	lsls	r7, r0, #24
9002a296:	f103 0104 	add.w	r1, r3, #4
9002a29a:	6029      	str	r1, [r5, #0]
9002a29c:	d501      	bpl.n	9002a2a2 <_printf_i+0xbe>
9002a29e:	681e      	ldr	r6, [r3, #0]
9002a2a0:	e003      	b.n	9002a2aa <_printf_i+0xc6>
9002a2a2:	0646      	lsls	r6, r0, #25
9002a2a4:	d5fb      	bpl.n	9002a29e <_printf_i+0xba>
9002a2a6:	f9b3 6000 	ldrsh.w	r6, [r3]
9002a2aa:	2e00      	cmp	r6, #0
9002a2ac:	da03      	bge.n	9002a2b6 <_printf_i+0xd2>
9002a2ae:	232d      	movs	r3, #45	; 0x2d
9002a2b0:	4276      	negs	r6, r6
9002a2b2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002a2b6:	485a      	ldr	r0, [pc, #360]	; (9002a420 <_printf_i+0x23c>)
9002a2b8:	230a      	movs	r3, #10
9002a2ba:	e012      	b.n	9002a2e2 <_printf_i+0xfe>
9002a2bc:	682b      	ldr	r3, [r5, #0]
9002a2be:	6820      	ldr	r0, [r4, #0]
9002a2c0:	1d19      	adds	r1, r3, #4
9002a2c2:	6029      	str	r1, [r5, #0]
9002a2c4:	0605      	lsls	r5, r0, #24
9002a2c6:	d501      	bpl.n	9002a2cc <_printf_i+0xe8>
9002a2c8:	681e      	ldr	r6, [r3, #0]
9002a2ca:	e002      	b.n	9002a2d2 <_printf_i+0xee>
9002a2cc:	0641      	lsls	r1, r0, #25
9002a2ce:	d5fb      	bpl.n	9002a2c8 <_printf_i+0xe4>
9002a2d0:	881e      	ldrh	r6, [r3, #0]
9002a2d2:	4853      	ldr	r0, [pc, #332]	; (9002a420 <_printf_i+0x23c>)
9002a2d4:	2f6f      	cmp	r7, #111	; 0x6f
9002a2d6:	bf0c      	ite	eq
9002a2d8:	2308      	moveq	r3, #8
9002a2da:	230a      	movne	r3, #10
9002a2dc:	2100      	movs	r1, #0
9002a2de:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
9002a2e2:	6865      	ldr	r5, [r4, #4]
9002a2e4:	60a5      	str	r5, [r4, #8]
9002a2e6:	2d00      	cmp	r5, #0
9002a2e8:	bfa2      	ittt	ge
9002a2ea:	6821      	ldrge	r1, [r4, #0]
9002a2ec:	f021 0104 	bicge.w	r1, r1, #4
9002a2f0:	6021      	strge	r1, [r4, #0]
9002a2f2:	b90e      	cbnz	r6, 9002a2f8 <_printf_i+0x114>
9002a2f4:	2d00      	cmp	r5, #0
9002a2f6:	d04b      	beq.n	9002a390 <_printf_i+0x1ac>
9002a2f8:	4615      	mov	r5, r2
9002a2fa:	fbb6 f1f3 	udiv	r1, r6, r3
9002a2fe:	fb03 6711 	mls	r7, r3, r1, r6
9002a302:	5dc7      	ldrb	r7, [r0, r7]
9002a304:	f805 7d01 	strb.w	r7, [r5, #-1]!
9002a308:	4637      	mov	r7, r6
9002a30a:	42bb      	cmp	r3, r7
9002a30c:	460e      	mov	r6, r1
9002a30e:	d9f4      	bls.n	9002a2fa <_printf_i+0x116>
9002a310:	2b08      	cmp	r3, #8
9002a312:	d10b      	bne.n	9002a32c <_printf_i+0x148>
9002a314:	6823      	ldr	r3, [r4, #0]
9002a316:	07de      	lsls	r6, r3, #31
9002a318:	d508      	bpl.n	9002a32c <_printf_i+0x148>
9002a31a:	6923      	ldr	r3, [r4, #16]
9002a31c:	6861      	ldr	r1, [r4, #4]
9002a31e:	4299      	cmp	r1, r3
9002a320:	bfde      	ittt	le
9002a322:	2330      	movle	r3, #48	; 0x30
9002a324:	f805 3c01 	strble.w	r3, [r5, #-1]
9002a328:	f105 35ff 	addle.w	r5, r5, #4294967295
9002a32c:	1b52      	subs	r2, r2, r5
9002a32e:	6122      	str	r2, [r4, #16]
9002a330:	f8cd a000 	str.w	sl, [sp]
9002a334:	464b      	mov	r3, r9
9002a336:	aa03      	add	r2, sp, #12
9002a338:	4621      	mov	r1, r4
9002a33a:	4640      	mov	r0, r8
9002a33c:	f7ff fee4 	bl	9002a108 <_printf_common>
9002a340:	3001      	adds	r0, #1
9002a342:	d14a      	bne.n	9002a3da <_printf_i+0x1f6>
9002a344:	f04f 30ff 	mov.w	r0, #4294967295
9002a348:	b004      	add	sp, #16
9002a34a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a34e:	6823      	ldr	r3, [r4, #0]
9002a350:	f043 0320 	orr.w	r3, r3, #32
9002a354:	6023      	str	r3, [r4, #0]
9002a356:	4833      	ldr	r0, [pc, #204]	; (9002a424 <_printf_i+0x240>)
9002a358:	2778      	movs	r7, #120	; 0x78
9002a35a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
9002a35e:	6823      	ldr	r3, [r4, #0]
9002a360:	6829      	ldr	r1, [r5, #0]
9002a362:	061f      	lsls	r7, r3, #24
9002a364:	f851 6b04 	ldr.w	r6, [r1], #4
9002a368:	d402      	bmi.n	9002a370 <_printf_i+0x18c>
9002a36a:	065f      	lsls	r7, r3, #25
9002a36c:	bf48      	it	mi
9002a36e:	b2b6      	uxthmi	r6, r6
9002a370:	07df      	lsls	r7, r3, #31
9002a372:	bf48      	it	mi
9002a374:	f043 0320 	orrmi.w	r3, r3, #32
9002a378:	6029      	str	r1, [r5, #0]
9002a37a:	bf48      	it	mi
9002a37c:	6023      	strmi	r3, [r4, #0]
9002a37e:	b91e      	cbnz	r6, 9002a388 <_printf_i+0x1a4>
9002a380:	6823      	ldr	r3, [r4, #0]
9002a382:	f023 0320 	bic.w	r3, r3, #32
9002a386:	6023      	str	r3, [r4, #0]
9002a388:	2310      	movs	r3, #16
9002a38a:	e7a7      	b.n	9002a2dc <_printf_i+0xf8>
9002a38c:	4824      	ldr	r0, [pc, #144]	; (9002a420 <_printf_i+0x23c>)
9002a38e:	e7e4      	b.n	9002a35a <_printf_i+0x176>
9002a390:	4615      	mov	r5, r2
9002a392:	e7bd      	b.n	9002a310 <_printf_i+0x12c>
9002a394:	682b      	ldr	r3, [r5, #0]
9002a396:	6826      	ldr	r6, [r4, #0]
9002a398:	6961      	ldr	r1, [r4, #20]
9002a39a:	1d18      	adds	r0, r3, #4
9002a39c:	6028      	str	r0, [r5, #0]
9002a39e:	0635      	lsls	r5, r6, #24
9002a3a0:	681b      	ldr	r3, [r3, #0]
9002a3a2:	d501      	bpl.n	9002a3a8 <_printf_i+0x1c4>
9002a3a4:	6019      	str	r1, [r3, #0]
9002a3a6:	e002      	b.n	9002a3ae <_printf_i+0x1ca>
9002a3a8:	0670      	lsls	r0, r6, #25
9002a3aa:	d5fb      	bpl.n	9002a3a4 <_printf_i+0x1c0>
9002a3ac:	8019      	strh	r1, [r3, #0]
9002a3ae:	2300      	movs	r3, #0
9002a3b0:	6123      	str	r3, [r4, #16]
9002a3b2:	4615      	mov	r5, r2
9002a3b4:	e7bc      	b.n	9002a330 <_printf_i+0x14c>
9002a3b6:	682b      	ldr	r3, [r5, #0]
9002a3b8:	1d1a      	adds	r2, r3, #4
9002a3ba:	602a      	str	r2, [r5, #0]
9002a3bc:	681d      	ldr	r5, [r3, #0]
9002a3be:	6862      	ldr	r2, [r4, #4]
9002a3c0:	2100      	movs	r1, #0
9002a3c2:	4628      	mov	r0, r5
9002a3c4:	f7d5 ff8c 	bl	900002e0 <memchr>
9002a3c8:	b108      	cbz	r0, 9002a3ce <_printf_i+0x1ea>
9002a3ca:	1b40      	subs	r0, r0, r5
9002a3cc:	6060      	str	r0, [r4, #4]
9002a3ce:	6863      	ldr	r3, [r4, #4]
9002a3d0:	6123      	str	r3, [r4, #16]
9002a3d2:	2300      	movs	r3, #0
9002a3d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002a3d8:	e7aa      	b.n	9002a330 <_printf_i+0x14c>
9002a3da:	6923      	ldr	r3, [r4, #16]
9002a3dc:	462a      	mov	r2, r5
9002a3de:	4649      	mov	r1, r9
9002a3e0:	4640      	mov	r0, r8
9002a3e2:	47d0      	blx	sl
9002a3e4:	3001      	adds	r0, #1
9002a3e6:	d0ad      	beq.n	9002a344 <_printf_i+0x160>
9002a3e8:	6823      	ldr	r3, [r4, #0]
9002a3ea:	079b      	lsls	r3, r3, #30
9002a3ec:	d413      	bmi.n	9002a416 <_printf_i+0x232>
9002a3ee:	68e0      	ldr	r0, [r4, #12]
9002a3f0:	9b03      	ldr	r3, [sp, #12]
9002a3f2:	4298      	cmp	r0, r3
9002a3f4:	bfb8      	it	lt
9002a3f6:	4618      	movlt	r0, r3
9002a3f8:	e7a6      	b.n	9002a348 <_printf_i+0x164>
9002a3fa:	2301      	movs	r3, #1
9002a3fc:	4632      	mov	r2, r6
9002a3fe:	4649      	mov	r1, r9
9002a400:	4640      	mov	r0, r8
9002a402:	47d0      	blx	sl
9002a404:	3001      	adds	r0, #1
9002a406:	d09d      	beq.n	9002a344 <_printf_i+0x160>
9002a408:	3501      	adds	r5, #1
9002a40a:	68e3      	ldr	r3, [r4, #12]
9002a40c:	9903      	ldr	r1, [sp, #12]
9002a40e:	1a5b      	subs	r3, r3, r1
9002a410:	42ab      	cmp	r3, r5
9002a412:	dcf2      	bgt.n	9002a3fa <_printf_i+0x216>
9002a414:	e7eb      	b.n	9002a3ee <_printf_i+0x20a>
9002a416:	2500      	movs	r5, #0
9002a418:	f104 0619 	add.w	r6, r4, #25
9002a41c:	e7f5      	b.n	9002a40a <_printf_i+0x226>
9002a41e:	bf00      	nop
9002a420:	9002e1a5 	.word	0x9002e1a5
9002a424:	9002e1b6 	.word	0x9002e1b6

9002a428 <__sflush_r>:
9002a428:	898a      	ldrh	r2, [r1, #12]
9002a42a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002a42e:	4605      	mov	r5, r0
9002a430:	0710      	lsls	r0, r2, #28
9002a432:	460c      	mov	r4, r1
9002a434:	d458      	bmi.n	9002a4e8 <__sflush_r+0xc0>
9002a436:	684b      	ldr	r3, [r1, #4]
9002a438:	2b00      	cmp	r3, #0
9002a43a:	dc05      	bgt.n	9002a448 <__sflush_r+0x20>
9002a43c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9002a43e:	2b00      	cmp	r3, #0
9002a440:	dc02      	bgt.n	9002a448 <__sflush_r+0x20>
9002a442:	2000      	movs	r0, #0
9002a444:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002a448:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002a44a:	2e00      	cmp	r6, #0
9002a44c:	d0f9      	beq.n	9002a442 <__sflush_r+0x1a>
9002a44e:	2300      	movs	r3, #0
9002a450:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
9002a454:	682f      	ldr	r7, [r5, #0]
9002a456:	6a21      	ldr	r1, [r4, #32]
9002a458:	602b      	str	r3, [r5, #0]
9002a45a:	d032      	beq.n	9002a4c2 <__sflush_r+0x9a>
9002a45c:	6d60      	ldr	r0, [r4, #84]	; 0x54
9002a45e:	89a3      	ldrh	r3, [r4, #12]
9002a460:	075a      	lsls	r2, r3, #29
9002a462:	d505      	bpl.n	9002a470 <__sflush_r+0x48>
9002a464:	6863      	ldr	r3, [r4, #4]
9002a466:	1ac0      	subs	r0, r0, r3
9002a468:	6b63      	ldr	r3, [r4, #52]	; 0x34
9002a46a:	b10b      	cbz	r3, 9002a470 <__sflush_r+0x48>
9002a46c:	6c23      	ldr	r3, [r4, #64]	; 0x40
9002a46e:	1ac0      	subs	r0, r0, r3
9002a470:	2300      	movs	r3, #0
9002a472:	4602      	mov	r2, r0
9002a474:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002a476:	6a21      	ldr	r1, [r4, #32]
9002a478:	4628      	mov	r0, r5
9002a47a:	47b0      	blx	r6
9002a47c:	1c43      	adds	r3, r0, #1
9002a47e:	89a3      	ldrh	r3, [r4, #12]
9002a480:	d106      	bne.n	9002a490 <__sflush_r+0x68>
9002a482:	6829      	ldr	r1, [r5, #0]
9002a484:	291d      	cmp	r1, #29
9002a486:	d82b      	bhi.n	9002a4e0 <__sflush_r+0xb8>
9002a488:	4a29      	ldr	r2, [pc, #164]	; (9002a530 <__sflush_r+0x108>)
9002a48a:	410a      	asrs	r2, r1
9002a48c:	07d6      	lsls	r6, r2, #31
9002a48e:	d427      	bmi.n	9002a4e0 <__sflush_r+0xb8>
9002a490:	2200      	movs	r2, #0
9002a492:	6062      	str	r2, [r4, #4]
9002a494:	04d9      	lsls	r1, r3, #19
9002a496:	6922      	ldr	r2, [r4, #16]
9002a498:	6022      	str	r2, [r4, #0]
9002a49a:	d504      	bpl.n	9002a4a6 <__sflush_r+0x7e>
9002a49c:	1c42      	adds	r2, r0, #1
9002a49e:	d101      	bne.n	9002a4a4 <__sflush_r+0x7c>
9002a4a0:	682b      	ldr	r3, [r5, #0]
9002a4a2:	b903      	cbnz	r3, 9002a4a6 <__sflush_r+0x7e>
9002a4a4:	6560      	str	r0, [r4, #84]	; 0x54
9002a4a6:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002a4a8:	602f      	str	r7, [r5, #0]
9002a4aa:	2900      	cmp	r1, #0
9002a4ac:	d0c9      	beq.n	9002a442 <__sflush_r+0x1a>
9002a4ae:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002a4b2:	4299      	cmp	r1, r3
9002a4b4:	d002      	beq.n	9002a4bc <__sflush_r+0x94>
9002a4b6:	4628      	mov	r0, r5
9002a4b8:	f7ff fc96 	bl	90029de8 <_free_r>
9002a4bc:	2000      	movs	r0, #0
9002a4be:	6360      	str	r0, [r4, #52]	; 0x34
9002a4c0:	e7c0      	b.n	9002a444 <__sflush_r+0x1c>
9002a4c2:	2301      	movs	r3, #1
9002a4c4:	4628      	mov	r0, r5
9002a4c6:	47b0      	blx	r6
9002a4c8:	1c41      	adds	r1, r0, #1
9002a4ca:	d1c8      	bne.n	9002a45e <__sflush_r+0x36>
9002a4cc:	682b      	ldr	r3, [r5, #0]
9002a4ce:	2b00      	cmp	r3, #0
9002a4d0:	d0c5      	beq.n	9002a45e <__sflush_r+0x36>
9002a4d2:	2b1d      	cmp	r3, #29
9002a4d4:	d001      	beq.n	9002a4da <__sflush_r+0xb2>
9002a4d6:	2b16      	cmp	r3, #22
9002a4d8:	d101      	bne.n	9002a4de <__sflush_r+0xb6>
9002a4da:	602f      	str	r7, [r5, #0]
9002a4dc:	e7b1      	b.n	9002a442 <__sflush_r+0x1a>
9002a4de:	89a3      	ldrh	r3, [r4, #12]
9002a4e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002a4e4:	81a3      	strh	r3, [r4, #12]
9002a4e6:	e7ad      	b.n	9002a444 <__sflush_r+0x1c>
9002a4e8:	690f      	ldr	r7, [r1, #16]
9002a4ea:	2f00      	cmp	r7, #0
9002a4ec:	d0a9      	beq.n	9002a442 <__sflush_r+0x1a>
9002a4ee:	0793      	lsls	r3, r2, #30
9002a4f0:	680e      	ldr	r6, [r1, #0]
9002a4f2:	bf08      	it	eq
9002a4f4:	694b      	ldreq	r3, [r1, #20]
9002a4f6:	600f      	str	r7, [r1, #0]
9002a4f8:	bf18      	it	ne
9002a4fa:	2300      	movne	r3, #0
9002a4fc:	eba6 0807 	sub.w	r8, r6, r7
9002a500:	608b      	str	r3, [r1, #8]
9002a502:	f1b8 0f00 	cmp.w	r8, #0
9002a506:	dd9c      	ble.n	9002a442 <__sflush_r+0x1a>
9002a508:	6a21      	ldr	r1, [r4, #32]
9002a50a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
9002a50c:	4643      	mov	r3, r8
9002a50e:	463a      	mov	r2, r7
9002a510:	4628      	mov	r0, r5
9002a512:	47b0      	blx	r6
9002a514:	2800      	cmp	r0, #0
9002a516:	dc06      	bgt.n	9002a526 <__sflush_r+0xfe>
9002a518:	89a3      	ldrh	r3, [r4, #12]
9002a51a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002a51e:	81a3      	strh	r3, [r4, #12]
9002a520:	f04f 30ff 	mov.w	r0, #4294967295
9002a524:	e78e      	b.n	9002a444 <__sflush_r+0x1c>
9002a526:	4407      	add	r7, r0
9002a528:	eba8 0800 	sub.w	r8, r8, r0
9002a52c:	e7e9      	b.n	9002a502 <__sflush_r+0xda>
9002a52e:	bf00      	nop
9002a530:	dfbffffe 	.word	0xdfbffffe

9002a534 <_fflush_r>:
9002a534:	b538      	push	{r3, r4, r5, lr}
9002a536:	690b      	ldr	r3, [r1, #16]
9002a538:	4605      	mov	r5, r0
9002a53a:	460c      	mov	r4, r1
9002a53c:	b913      	cbnz	r3, 9002a544 <_fflush_r+0x10>
9002a53e:	2500      	movs	r5, #0
9002a540:	4628      	mov	r0, r5
9002a542:	bd38      	pop	{r3, r4, r5, pc}
9002a544:	b118      	cbz	r0, 9002a54e <_fflush_r+0x1a>
9002a546:	6a03      	ldr	r3, [r0, #32]
9002a548:	b90b      	cbnz	r3, 9002a54e <_fflush_r+0x1a>
9002a54a:	f7ff f9e1 	bl	90029910 <__sinit>
9002a54e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a552:	2b00      	cmp	r3, #0
9002a554:	d0f3      	beq.n	9002a53e <_fflush_r+0xa>
9002a556:	6e62      	ldr	r2, [r4, #100]	; 0x64
9002a558:	07d0      	lsls	r0, r2, #31
9002a55a:	d404      	bmi.n	9002a566 <_fflush_r+0x32>
9002a55c:	0599      	lsls	r1, r3, #22
9002a55e:	d402      	bmi.n	9002a566 <_fflush_r+0x32>
9002a560:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002a562:	f7ff fbd3 	bl	90029d0c <__retarget_lock_acquire_recursive>
9002a566:	4628      	mov	r0, r5
9002a568:	4621      	mov	r1, r4
9002a56a:	f7ff ff5d 	bl	9002a428 <__sflush_r>
9002a56e:	6e63      	ldr	r3, [r4, #100]	; 0x64
9002a570:	07da      	lsls	r2, r3, #31
9002a572:	4605      	mov	r5, r0
9002a574:	d4e4      	bmi.n	9002a540 <_fflush_r+0xc>
9002a576:	89a3      	ldrh	r3, [r4, #12]
9002a578:	059b      	lsls	r3, r3, #22
9002a57a:	d4e1      	bmi.n	9002a540 <_fflush_r+0xc>
9002a57c:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002a57e:	f7ff fbc6 	bl	90029d0e <__retarget_lock_release_recursive>
9002a582:	e7dd      	b.n	9002a540 <_fflush_r+0xc>

9002a584 <__swhatbuf_r>:
9002a584:	b570      	push	{r4, r5, r6, lr}
9002a586:	460c      	mov	r4, r1
9002a588:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a58c:	2900      	cmp	r1, #0
9002a58e:	b096      	sub	sp, #88	; 0x58
9002a590:	4615      	mov	r5, r2
9002a592:	461e      	mov	r6, r3
9002a594:	da0d      	bge.n	9002a5b2 <__swhatbuf_r+0x2e>
9002a596:	89a3      	ldrh	r3, [r4, #12]
9002a598:	f013 0f80 	tst.w	r3, #128	; 0x80
9002a59c:	f04f 0100 	mov.w	r1, #0
9002a5a0:	bf0c      	ite	eq
9002a5a2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
9002a5a6:	2340      	movne	r3, #64	; 0x40
9002a5a8:	2000      	movs	r0, #0
9002a5aa:	6031      	str	r1, [r6, #0]
9002a5ac:	602b      	str	r3, [r5, #0]
9002a5ae:	b016      	add	sp, #88	; 0x58
9002a5b0:	bd70      	pop	{r4, r5, r6, pc}
9002a5b2:	466a      	mov	r2, sp
9002a5b4:	f000 f848 	bl	9002a648 <_fstat_r>
9002a5b8:	2800      	cmp	r0, #0
9002a5ba:	dbec      	blt.n	9002a596 <__swhatbuf_r+0x12>
9002a5bc:	9901      	ldr	r1, [sp, #4]
9002a5be:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
9002a5c2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
9002a5c6:	4259      	negs	r1, r3
9002a5c8:	4159      	adcs	r1, r3
9002a5ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
9002a5ce:	e7eb      	b.n	9002a5a8 <__swhatbuf_r+0x24>

9002a5d0 <__smakebuf_r>:
9002a5d0:	898b      	ldrh	r3, [r1, #12]
9002a5d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002a5d4:	079d      	lsls	r5, r3, #30
9002a5d6:	4606      	mov	r6, r0
9002a5d8:	460c      	mov	r4, r1
9002a5da:	d507      	bpl.n	9002a5ec <__smakebuf_r+0x1c>
9002a5dc:	f104 0347 	add.w	r3, r4, #71	; 0x47
9002a5e0:	6023      	str	r3, [r4, #0]
9002a5e2:	6123      	str	r3, [r4, #16]
9002a5e4:	2301      	movs	r3, #1
9002a5e6:	6163      	str	r3, [r4, #20]
9002a5e8:	b002      	add	sp, #8
9002a5ea:	bd70      	pop	{r4, r5, r6, pc}
9002a5ec:	ab01      	add	r3, sp, #4
9002a5ee:	466a      	mov	r2, sp
9002a5f0:	f7ff ffc8 	bl	9002a584 <__swhatbuf_r>
9002a5f4:	9900      	ldr	r1, [sp, #0]
9002a5f6:	4605      	mov	r5, r0
9002a5f8:	4630      	mov	r0, r6
9002a5fa:	f7ff f875 	bl	900296e8 <_malloc_r>
9002a5fe:	b948      	cbnz	r0, 9002a614 <__smakebuf_r+0x44>
9002a600:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a604:	059a      	lsls	r2, r3, #22
9002a606:	d4ef      	bmi.n	9002a5e8 <__smakebuf_r+0x18>
9002a608:	f023 0303 	bic.w	r3, r3, #3
9002a60c:	f043 0302 	orr.w	r3, r3, #2
9002a610:	81a3      	strh	r3, [r4, #12]
9002a612:	e7e3      	b.n	9002a5dc <__smakebuf_r+0xc>
9002a614:	89a3      	ldrh	r3, [r4, #12]
9002a616:	6020      	str	r0, [r4, #0]
9002a618:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9002a61c:	81a3      	strh	r3, [r4, #12]
9002a61e:	9b00      	ldr	r3, [sp, #0]
9002a620:	6163      	str	r3, [r4, #20]
9002a622:	9b01      	ldr	r3, [sp, #4]
9002a624:	6120      	str	r0, [r4, #16]
9002a626:	b15b      	cbz	r3, 9002a640 <__smakebuf_r+0x70>
9002a628:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002a62c:	4630      	mov	r0, r6
9002a62e:	f000 f81d 	bl	9002a66c <_isatty_r>
9002a632:	b128      	cbz	r0, 9002a640 <__smakebuf_r+0x70>
9002a634:	89a3      	ldrh	r3, [r4, #12]
9002a636:	f023 0303 	bic.w	r3, r3, #3
9002a63a:	f043 0301 	orr.w	r3, r3, #1
9002a63e:	81a3      	strh	r3, [r4, #12]
9002a640:	89a3      	ldrh	r3, [r4, #12]
9002a642:	431d      	orrs	r5, r3
9002a644:	81a5      	strh	r5, [r4, #12]
9002a646:	e7cf      	b.n	9002a5e8 <__smakebuf_r+0x18>

9002a648 <_fstat_r>:
9002a648:	b538      	push	{r3, r4, r5, lr}
9002a64a:	4d07      	ldr	r5, [pc, #28]	; (9002a668 <_fstat_r+0x20>)
9002a64c:	2300      	movs	r3, #0
9002a64e:	4604      	mov	r4, r0
9002a650:	4608      	mov	r0, r1
9002a652:	4611      	mov	r1, r2
9002a654:	602b      	str	r3, [r5, #0]
9002a656:	f7d8 ff6f 	bl	90003538 <_fstat>
9002a65a:	1c43      	adds	r3, r0, #1
9002a65c:	d102      	bne.n	9002a664 <_fstat_r+0x1c>
9002a65e:	682b      	ldr	r3, [r5, #0]
9002a660:	b103      	cbz	r3, 9002a664 <_fstat_r+0x1c>
9002a662:	6023      	str	r3, [r4, #0]
9002a664:	bd38      	pop	{r3, r4, r5, pc}
9002a666:	bf00      	nop
9002a668:	2403a564 	.word	0x2403a564

9002a66c <_isatty_r>:
9002a66c:	b538      	push	{r3, r4, r5, lr}
9002a66e:	4d06      	ldr	r5, [pc, #24]	; (9002a688 <_isatty_r+0x1c>)
9002a670:	2300      	movs	r3, #0
9002a672:	4604      	mov	r4, r0
9002a674:	4608      	mov	r0, r1
9002a676:	602b      	str	r3, [r5, #0]
9002a678:	f7d8 ff64 	bl	90003544 <_isatty>
9002a67c:	1c43      	adds	r3, r0, #1
9002a67e:	d102      	bne.n	9002a686 <_isatty_r+0x1a>
9002a680:	682b      	ldr	r3, [r5, #0]
9002a682:	b103      	cbz	r3, 9002a686 <_isatty_r+0x1a>
9002a684:	6023      	str	r3, [r4, #0]
9002a686:	bd38      	pop	{r3, r4, r5, pc}
9002a688:	2403a564 	.word	0x2403a564

9002a68c <_sbrk>:
9002a68c:	4a04      	ldr	r2, [pc, #16]	; (9002a6a0 <_sbrk+0x14>)
9002a68e:	6811      	ldr	r1, [r2, #0]
9002a690:	4603      	mov	r3, r0
9002a692:	b909      	cbnz	r1, 9002a698 <_sbrk+0xc>
9002a694:	4903      	ldr	r1, [pc, #12]	; (9002a6a4 <_sbrk+0x18>)
9002a696:	6011      	str	r1, [r2, #0]
9002a698:	6810      	ldr	r0, [r2, #0]
9002a69a:	4403      	add	r3, r0
9002a69c:	6013      	str	r3, [r2, #0]
9002a69e:	4770      	bx	lr
9002a6a0:	2403a704 	.word	0x2403a704
9002a6a4:	2403a708 	.word	0x2403a708

9002a6a8 <_init>:
9002a6a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a6aa:	bf00      	nop
9002a6ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002a6ae:	bc08      	pop	{r3}
9002a6b0:	469e      	mov	lr, r3
9002a6b2:	4770      	bx	lr

9002a6b4 <_fini>:
9002a6b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a6b6:	bf00      	nop
9002a6b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002a6ba:	bc08      	pop	{r3}
9002a6bc:	469e      	mov	lr, r3
9002a6be:	4770      	bx	lr
